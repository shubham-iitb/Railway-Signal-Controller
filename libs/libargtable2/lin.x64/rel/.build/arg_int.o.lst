   1              		.file	"arg_int.c"
   2              		.section	.text.unlikely,"ax",@progbits
   3              	.LCOLDB0:
   4              		.text
   5              	.LHOTB0:
   6              		.p2align 4,,15
   8              	resetfn:
   9              	.LFB25:
  10              		.cfi_startproc
  11 0000 C7476000 		movl	$0, 96(%rdi)
  11      000000
  12 0007 C3       		ret
  13              		.cfi_endproc
  14              	.LFE25:
  16              		.section	.text.unlikely
  17              	.LCOLDE0:
  18              		.text
  19              	.LHOTE0:
  20              		.section	.text.unlikely
  21              	.LCOLDB1:
  22              		.text
  23              	.LHOTB1:
  24 0008 0F1F8400 		.p2align 4,,15
  24      00000000 
  26              	checkfn:
  27              	.LFB29:
  28              		.cfi_startproc
  29 0010 8B4728   		movl	40(%rdi), %eax
  30 0013 394760   		cmpl	%eax, 96(%rdi)
  31 0016 0F9CC0   		setl	%al
  32 0019 0FB6C0   		movzbl	%al, %eax
  33 001c C3       		ret
  34              		.cfi_endproc
  35              	.LFE29:
  37              		.section	.text.unlikely
  38              	.LCOLDE1:
  39              		.text
  40              	.LHOTE1:
  41              		.section	.rodata.str1.1,"aMS",@progbits,1
  42              	.LC2:
  43 0000 00       		.string	""
  44              	.LC3:
  45 0001 25733A20 		.string	"%s: "
  45      00
  46              	.LC4:
  47 0006 6D697373 		.string	"missing option "
  47      696E6720 
  47      6F707469 
  47      6F6E2000 
  48              	.LC5:
  49 0016 0A00     		.string	"\n"
  50              	.LC6:
  51 0018 65786365 		.string	"excess option "
  51      7373206F 
  51      7074696F 
  51      6E2000
  52              		.section	.rodata.str1.8,"aMS",@progbits,1
  53              		.align 8
  54              	.LC7:
  55 0000 696E7661 		.string	"invalid argument \"%s\" to option "
  55      6C696420 
  55      61726775 
  55      6D656E74 
  55      20222573 
  56              		.section	.rodata.str1.1
  57              	.LC8:
  58 0027 696E7465 		.string	"integer overflow at option "
  58      67657220 
  58      6F766572 
  58      666C6F77 
  58      20617420 
  59              	.LC9:
  60 0043 2000     		.string	" "
  61              	.LC10:
  62 0045 28257320 		.string	"(%s is too large)\n"
  62      69732074 
  62      6F6F206C 
  62      61726765 
  62      290A00
  63              		.section	.text.unlikely
  64              	.LCOLDB11:
  65              		.text
  66              	.LHOTB11:
  67 001d 0F1F00   		.p2align 4,,15
  69              	errorfn:
  70              	.LFB30:
  71              		.cfi_startproc
  72 0020 4157     		pushq	%r15
  73              		.cfi_def_cfa_offset 16
  74              		.cfi_offset 15, -16
  75 0022 4156     		pushq	%r14
  76              		.cfi_def_cfa_offset 24
  77              		.cfi_offset 14, -24
  78 0024 488D0500 		leaq	.LC2(%rip), %rax
  78      000000
  79 002b 4155     		pushq	%r13
  80              		.cfi_def_cfa_offset 32
  81              		.cfi_offset 13, -32
  82 002d 4154     		pushq	%r12
  83              		.cfi_def_cfa_offset 40
  84              		.cfi_offset 12, -40
  85 002f 4189D4   		movl	%edx, %r12d
  86 0032 55       		pushq	%rbp
  87              		.cfi_def_cfa_offset 48
  88              		.cfi_offset 6, -48
  89 0033 53       		pushq	%rbx
  90              		.cfi_def_cfa_offset 56
  91              		.cfi_offset 3, -56
  92 0034 4889F5   		movq	%rsi, %rbp
  93 0037 4889CB   		movq	%rcx, %rbx
  94 003a 488D1500 		leaq	.LC3(%rip), %rdx
  94      000000
  95 0041 BE010000 		movl	$1, %esi
  95      00
  96 0046 4883EC08 		subq	$8, %rsp
  97              		.cfi_def_cfa_offset 64
  98 004a 4885C9   		testq	%rcx, %rcx
  99 004d 4C8B6F08 		movq	8(%rdi), %r13
 100 0051 480F44D8 		cmove	%rax, %rbx
 101 0055 4C8B7710 		movq	16(%rdi), %r14
 102 0059 4C8B7F18 		movq	24(%rdi), %r15
 103 005d 31C0     		xorl	%eax, %eax
 104 005f 4C89C1   		movq	%r8, %rcx
 105 0062 4889EF   		movq	%rbp, %rdi
 106 0065 E8000000 		call	__fprintf_chk@PLT
 106      00
 107 006a 4183FC02 		cmpl	$2, %r12d
 108 006e 0F84FC00 		je	.L6
 108      0000
 109 0074 0F8EB600 		jle	.L15
 109      0000
 110 007a 4183FC03 		cmpl	$3, %r12d
 111 007e 7468     		je	.L9
 112 0080 4183FC04 		cmpl	$4, %r12d
 113 0084 0F85D600 		jne	.L3
 113      0000
 114 008a 488D3D00 		leaq	.LC8(%rip), %rdi
 114      000000
 115 0091 4889E9   		movq	%rbp, %rcx
 116 0094 BA1B0000 		movl	$27, %edx
 116      00
 117 0099 BE010000 		movl	$1, %esi
 117      00
 118 009e E8000000 		call	fwrite@PLT
 118      00
 119 00a3 4C8D0500 		leaq	.LC9(%rip), %r8
 119      000000
 120 00aa 4C89F9   		movq	%r15, %rcx
 121 00ad 4C89F2   		movq	%r14, %rdx
 122 00b0 4C89EE   		movq	%r13, %rsi
 123 00b3 4889EF   		movq	%rbp, %rdi
 124 00b6 E8000000 		call	arg_print_option@PLT
 124      00
 125 00bb 4883C408 		addq	$8, %rsp
 126              		.cfi_remember_state
 127              		.cfi_def_cfa_offset 56
 128 00bf 4889D9   		movq	%rbx, %rcx
 129 00c2 4889EF   		movq	%rbp, %rdi
 130 00c5 5B       		popq	%rbx
 131              		.cfi_def_cfa_offset 48
 132 00c6 5D       		popq	%rbp
 133              		.cfi_def_cfa_offset 40
 134 00c7 415C     		popq	%r12
 135              		.cfi_def_cfa_offset 32
 136 00c9 415D     		popq	%r13
 137              		.cfi_def_cfa_offset 24
 138 00cb 415E     		popq	%r14
 139              		.cfi_def_cfa_offset 16
 140 00cd 415F     		popq	%r15
 141              		.cfi_def_cfa_offset 8
 142 00cf 488D1500 		leaq	.LC10(%rip), %rdx
 142      000000
 143 00d6 BE010000 		movl	$1, %esi
 143      00
 144 00db 31C0     		xorl	%eax, %eax
 145 00dd E9000000 		jmp	__fprintf_chk@PLT
 145      00
 146              		.p2align 4,,10
 147 00e2 660F1F44 		.p2align 3
 147      0000
 148              	.L9:
 149              		.cfi_restore_state
 150 00e8 488D1500 		leaq	.LC7(%rip), %rdx
 150      000000
 151 00ef 4889D9   		movq	%rbx, %rcx
 152 00f2 BE010000 		movl	$1, %esi
 152      00
 153 00f7 4889EF   		movq	%rbp, %rdi
 154 00fa 31C0     		xorl	%eax, %eax
 155 00fc E8000000 		call	__fprintf_chk@PLT
 155      00
 156 0101 4C8D0500 		leaq	.LC5(%rip), %r8
 156      000000
 157 0108 4C89F9   		movq	%r15, %rcx
 158              	.L13:
 159 010b 4883C408 		addq	$8, %rsp
 160              		.cfi_remember_state
 161              		.cfi_def_cfa_offset 56
 162 010f 4C89F2   		movq	%r14, %rdx
 163 0112 4C89EE   		movq	%r13, %rsi
 164 0115 5B       		popq	%rbx
 165              		.cfi_def_cfa_offset 48
 166 0116 4889EF   		movq	%rbp, %rdi
 167 0119 5D       		popq	%rbp
 168              		.cfi_def_cfa_offset 40
 169 011a 415C     		popq	%r12
 170              		.cfi_def_cfa_offset 32
 171 011c 415D     		popq	%r13
 172              		.cfi_def_cfa_offset 24
 173 011e 415E     		popq	%r14
 174              		.cfi_def_cfa_offset 16
 175 0120 415F     		popq	%r15
 176              		.cfi_def_cfa_offset 8
 177 0122 E9000000 		jmp	arg_print_option@PLT
 177      00
 178 0127 660F1F84 		.p2align 4,,10
 178      00000000 
 178      00
 179              		.p2align 3
 180              	.L15:
 181              		.cfi_restore_state
 182 0130 4183FC01 		cmpl	$1, %r12d
 183 0134 752A     		jne	.L3
 184 0136 488D3D00 		leaq	.LC4(%rip), %rdi
 184      000000
 185 013d 4889E9   		movq	%rbp, %rcx
 186 0140 BA0F0000 		movl	$15, %edx
 186      00
 187 0145 BE010000 		movl	$1, %esi
 187      00
 188 014a E8000000 		call	fwrite@PLT
 188      00
 189 014f 4C8D0500 		leaq	.LC5(%rip), %r8
 189      000000
 190 0156 4C89F9   		movq	%r15, %rcx
 191 0159 EBB0     		jmp	.L13
 192 015b 0F1F4400 		.p2align 4,,10
 192      00
 193              		.p2align 3
 194              	.L3:
 195 0160 4883C408 		addq	$8, %rsp
 196              		.cfi_remember_state
 197              		.cfi_def_cfa_offset 56
 198 0164 5B       		popq	%rbx
 199              		.cfi_def_cfa_offset 48
 200 0165 5D       		popq	%rbp
 201              		.cfi_def_cfa_offset 40
 202 0166 415C     		popq	%r12
 203              		.cfi_def_cfa_offset 32
 204 0168 415D     		popq	%r13
 205              		.cfi_def_cfa_offset 24
 206 016a 415E     		popq	%r14
 207              		.cfi_def_cfa_offset 16
 208 016c 415F     		popq	%r15
 209              		.cfi_def_cfa_offset 8
 210 016e C3       		ret
 211 016f 90       		.p2align 4,,10
 212              		.p2align 3
 213              	.L6:
 214              		.cfi_restore_state
 215 0170 488D3D00 		leaq	.LC6(%rip), %rdi
 215      000000
 216 0177 4889E9   		movq	%rbp, %rcx
 217 017a BA0E0000 		movl	$14, %edx
 217      00
 218 017f BE010000 		movl	$1, %esi
 218      00
 219 0184 E8000000 		call	fwrite@PLT
 219      00
 220 0189 4C8D0500 		leaq	.LC5(%rip), %r8
 220      000000
 221 0190 4889D9   		movq	%rbx, %rcx
 222 0193 E973FFFF 		jmp	.L13
 222      FF
 223              		.cfi_endproc
 224              	.LFE30:
 226              		.section	.text.unlikely
 227              	.LCOLDE11:
 228              		.text
 229              	.LHOTE11:
 230              		.section	.rodata.str1.1
 231              	.LC12:
 232 0058 4B4200   		.string	"KB"
 233              	.LC13:
 234 005b 4D4200   		.string	"MB"
 235              	.LC14:
 236 005e 474200   		.string	"GB"
 237              		.section	.text.unlikely
 238              	.LCOLDB15:
 239              		.text
 240              	.LHOTB15:
 241 0198 0F1F8400 		.p2align 4,,15
 241      00000000 
 243              	scanfn:
 244              	.LFB28:
 245              		.cfi_startproc
 246 01a0 4157     		pushq	%r15
 247              		.cfi_def_cfa_offset 16
 248              		.cfi_offset 15, -16
 249 01a2 4156     		pushq	%r14
 250              		.cfi_def_cfa_offset 24
 251              		.cfi_offset 14, -24
 252 01a4 4155     		pushq	%r13
 253              		.cfi_def_cfa_offset 32
 254              		.cfi_offset 13, -32
 255 01a6 4154     		pushq	%r12
 256              		.cfi_def_cfa_offset 40
 257              		.cfi_offset 12, -40
 258 01a8 55       		pushq	%rbp
 259              		.cfi_def_cfa_offset 48
 260              		.cfi_offset 6, -48
 261 01a9 53       		pushq	%rbx
 262              		.cfi_def_cfa_offset 56
 263              		.cfi_offset 3, -56
 264 01aa 4883EC38 		subq	$56, %rsp
 265              		.cfi_def_cfa_offset 112
 266 01ae 8B5760   		movl	96(%rdi), %edx
 267 01b1 64488B04 		movq	%fs:40, %rax
 267      25280000 
 267      00
 268 01ba 48894424 		movq	%rax, 40(%rsp)
 268      28
 269 01bf 31C0     		xorl	%eax, %eax
 270 01c1 3B572C   		cmpl	44(%rdi), %edx
 271 01c4 B8020000 		movl	$2, %eax
 271      00
 272 01c9 0F845902 		je	.L17
 272      0000
 273 01cf 4885F6   		testq	%rsi, %rsi
 274 01d2 4889FD   		movq	%rdi, %rbp
 275 01d5 4989F6   		movq	%rsi, %r14
 276 01d8 0F848A02 		je	.L18
 276      0000
 277 01de E8000000 		call	__ctype_b_loc@PLT
 277      00
 278 01e3 4C89F3   		movq	%r14, %rbx
 279 01e6 4989C4   		movq	%rax, %r12
 280 01e9 4C8B28   		movq	(%rax), %r13
 281 01ec EB06     		jmp	.L19
 282 01ee 6690     		.p2align 4,,10
 283              		.p2align 3
 284              	.L20:
 285 01f0 4883C301 		addq	$1, %rbx
 286              	.L19:
 287 01f4 480FBE13 		movsbq	(%rbx), %rdx
 288 01f8 41F64455 		testb	$32, 1(%r13,%rdx,2)
 288      0120
 289 01fe 4889D0   		movq	%rdx, %rax
 290 0201 75ED     		jne	.L20
 291 0203 80FA2B   		cmpb	$43, %dl
 292 0206 0F846C02 		je	.L22
 292      0000
 293 020c 80FA2D   		cmpb	$45, %dl
 294 020f 0F843B02 		je	.L23
 294      0000
 295 0215 41BF0100 		movl	$1, %r15d
 295      0000
 296              	.L21:
 297 021b 3C30     		cmpb	$48, %al
 298 021d 0F84ED00 		je	.L147
 298      0000
 299              	.L141:
 300 0223 4C8D4424 		leaq	32(%rsp), %r8
 300      20
 301 0228 4C897424 		movq	%r14, 32(%rsp)
 301      20
 302              	.L81:
 303 022d 490FBE06 		movsbq	(%r14), %rax
 304 0231 4889C6   		movq	%rax, %rsi
 305 0234 410FB744 		movzwl	0(%r13,%rax,2), %eax
 305      4500
 306 023a 66250020 		andw	$8192, %ax
 307 023e 89C3     		movl	%eax, %ebx
 308 0240 0F844502 		je	.L89
 308      0000
 309 0246 4D89F7   		movq	%r14, %r15
 310 0249 0F1F8000 		.p2align 4,,10
 310      000000
 311              		.p2align 3
 312              	.L30:
 313 0250 4983C701 		addq	$1, %r15
 314 0254 490FBE17 		movsbq	(%r15), %rdx
 315 0258 41F64455 		testb	$32, 1(%r13,%rdx,2)
 315      0120
 316 025e 4889D0   		movq	%rdx, %rax
 317 0261 75ED     		jne	.L30
 318              	.L29:
 319 0263 3C2B     		cmpb	$43, %al
 320 0265 0F84AD03 		je	.L32
 320      0000
 321 026b 3C2D     		cmpb	$45, %al
 322 026d 0F859A03 		jne	.L148
 322      0000
 323 0273 410FB647 		movzbl	1(%r15), %eax
 323      01
 324 0278 49C7C1FF 		movq	$-1, %r9
 324      FFFFFF
 325 027f 4983C701 		addq	$1, %r15
 326              	.L31:
 327 0283 3C30     		cmpb	$48, %al
 328 0285 0F843B03 		je	.L34
 328      0000
 329 028b 4C897424 		movq	%r14, 32(%rsp)
 329      20
 330              	.L82:
 331 0290 6685DB   		testw	%bx, %bx
 332 0293 4D89F7   		movq	%r14, %r15
 333 0296 7413     		je	.L38
 334              	.L39:
 335 0298 4983C701 		addq	$1, %r15
 336 029c 490FBE07 		movsbq	(%r15), %rax
 337 02a0 41F64445 		testb	$32, 1(%r13,%rax,2)
 337      0120
 338 02a6 4889C6   		movq	%rax, %rsi
 339 02a9 75ED     		jne	.L39
 340              	.L38:
 341 02ab 4080FE2B 		cmpb	$43, %sil
 342 02af 0F842405 		je	.L41
 342      0000
 343 02b5 4080FE2D 		cmpb	$45, %sil
 344 02b9 0F851005 		jne	.L149
 344      0000
 345 02bf 4983C701 		addq	$1, %r15
 346 02c3 4883CBFF 		orq	$-1, %rbx
 347              	.L40:
 348 02c7 41803F30 		cmpb	$48, (%r15)
 349 02cb 0F848D04 		je	.L43
 349      0000
 350              	.L45:
 351 02d1 4C897424 		movq	%r14, 32(%rsp)
 351      20
 352              	.L44:
 353 02d6 BA0A0000 		movl	$10, %edx
 353      00
 354 02db 4C89C6   		movq	%r8, %rsi
 355 02de 4C89F7   		movq	%r14, %rdi
 356 02e1 E8000000 		call	strtol@PLT
 356      00
 357 02e6 4C8B6C24 		movq	32(%rsp), %r13
 357      20
 358 02eb 4889C3   		movq	%rax, %rbx
 359 02ee B8030000 		movl	$3, %eax
 359      00
 360 02f3 4D39EE   		cmpq	%r13, %r14
 361 02f6 0F842C01 		je	.L17
 361      0000
 362 02fc E8000000 		call	__ctype_toupper_loc@PLT
 362      00
 363 0301 4D89EB   		movq	%r13, %r11
 364 0304 4889C1   		movq	%rax, %rcx
 365 0307 EB71     		jmp	.L28
 366 0309 0F1F8000 		.p2align 4,,10
 366      000000
 367              		.p2align 3
 368              	.L147:
 369 0310 E8000000 		call	__ctype_toupper_loc@PLT
 369      00
 370 0315 480FBE53 		movsbq	1(%rbx), %rdx
 370      01
 371 031a 4889C1   		movq	%rax, %rcx
 372 031d 488B00   		movq	(%rax), %rax
 373 0320 8BB86001 		movl	352(%rax), %edi
 373      0000
 374 0326 393C90   		cmpl	%edi, (%rax,%rdx,4)
 375 0329 0F85F4FE 		jne	.L141
 375      FFFF
 376 032f 4C8D4424 		leaq	32(%rsp), %r8
 376      20
 377 0334 4883C302 		addq	$2, %rbx
 378 0338 BA100000 		movl	$16, %edx
 378      00
 379 033d 4889DF   		movq	%rbx, %rdi
 380 0340 48894C24 		movq	%rcx, 16(%rsp)
 380      10
 381 0345 4C89C6   		movq	%r8, %rsi
 382 0348 4C894424 		movq	%r8, 8(%rsp)
 382      08
 383 034d E8000000 		call	strtol@PLT
 383      00
 384 0352 4C8B5C24 		movq	32(%rsp), %r11
 384      20
 385 0357 4C8B4424 		movq	8(%rsp), %r8
 385      08
 386 035c 488B4C24 		movq	16(%rsp), %rcx
 386      10
 387 0361 4C39DB   		cmpq	%r11, %rbx
 388 0364 0F845803 		je	.L150
 388      0000
 389 036a 490FAFC7 		imulq	%r15, %rax
 390 036e 4D39DE   		cmpq	%r11, %r14
 391 0371 4889C3   		movq	%rax, %rbx
 392 0374 0F846D04 		je	.L151
 392      0000
 393              	.L28:
 394 037a B8000000 		movl	$2147483648, %eax
 394      80
 395 037f BAFFFFFF 		movl	$4294967295, %edx
 395      FF
 396 0384 488B39   		movq	(%rcx), %rdi
 397 0387 4801D8   		addq	%rbx, %rax
 398 038a 488D3500 		leaq	.LC12(%rip), %rsi
 398      000000
 399 0391 4839C2   		cmpq	%rax, %rdx
 400 0394 4C89DA   		movq	%r11, %rdx
 401 0397 19C0     		sbbl	%eax, %eax
 402 0399 83E004   		andl	$4, %eax
 403 039c EB0E     		jmp	.L47
 404 039e 6690     		.p2align 4,,10
 405              		.p2align 3
 406              	.L49:
 407 03a0 84C9     		testb	%cl, %cl
 408 03a2 7457     		je	.L48
 409 03a4 4883C201 		addq	$1, %rdx
 410 03a8 4883C601 		addq	$1, %rsi
 411              	.L47:
 412 03ac 4C0FBE0A 		movsbq	(%rdx), %r9
 413 03b0 4C0FBE16 		movsbq	(%rsi), %r10
 414 03b4 468B3C97 		movl	(%rdi,%r10,4), %r15d
 415 03b8 46393C8F 		cmpl	%r15d, (%rdi,%r9,4)
 416 03bc 4C89C9   		movq	%r9, %rcx
 417 03bf 74DF     		je	.L49
 418 03c1 4584D2   		testb	%r10b, %r10b
 419 03c4 0F85CE00 		jne	.L50
 419      0000
 420 03ca 4D8B0424 		movq	(%r12), %r8
 421 03ce 43F64448 		testb	$32, 1(%r8,%r9,2)
 421      0120
 422 03d4 741D     		je	.L52
 423 03d6 662E0F1F 		.p2align 4,,10
 423      84000000 
 423      0000
 424              		.p2align 3
 425              	.L120:
 426 03e0 4883C201 		addq	$1, %rdx
 427 03e4 480FBE32 		movsbq	(%rdx), %rsi
 428 03e8 41F64470 		testb	$32, 1(%r8,%rsi,2)
 428      0120
 429 03ee 4889F1   		movq	%rsi, %rcx
 430 03f1 75ED     		jne	.L120
 431              	.L52:
 432 03f3 84C9     		testb	%cl, %cl
 433 03f5 0F859D00 		jne	.L50
 433      0000
 434              	.L48:
 435 03fb 488D9300 		leaq	2097152(%rbx), %rdx
 435      002000
 436 0402 48C1E30A 		salq	$10, %rbx
 437 0406 4881FAFF 		cmpq	$4194303, %rdx
 437      FF3F00
 438 040d 0F871C01 		ja	.L97
 438      0000
 439              	.L58:
 440 0413 85C0     		testl	%eax, %eax
 441 0415 7511     		jne	.L17
 442 0417 48635560 		movslq	96(%rbp), %rdx
 443 041b 488B4D68 		movq	104(%rbp), %rcx
 444 041f 8D7201   		leal	1(%rdx), %esi
 445 0422 897560   		movl	%esi, 96(%rbp)
 446 0425 891C91   		movl	%ebx, (%rcx,%rdx,4)
 447              	.L17:
 448 0428 488B5C24 		movq	40(%rsp), %rbx
 448      28
 449 042d 6448331C 		xorq	%fs:40, %rbx
 449      25280000 
 449      00
 450 0436 0F858E03 		jne	.L152
 450      0000
 451 043c 4883C438 		addq	$56, %rsp
 452              		.cfi_remember_state
 453              		.cfi_def_cfa_offset 56
 454 0440 5B       		popq	%rbx
 455              		.cfi_def_cfa_offset 48
 456 0441 5D       		popq	%rbp
 457              		.cfi_def_cfa_offset 40
 458 0442 415C     		popq	%r12
 459              		.cfi_def_cfa_offset 32
 460 0444 415D     		popq	%r13
 461              		.cfi_def_cfa_offset 24
 462 0446 415E     		popq	%r14
 463              		.cfi_def_cfa_offset 16
 464 0448 415F     		popq	%r15
 465              		.cfi_def_cfa_offset 8
 466 044a C3       		ret
 467 044b 0F1F4400 		.p2align 4,,10
 467      00
 468              		.p2align 3
 469              	.L23:
 470              		.cfi_restore_state
 471 0450 0FB64301 		movzbl	1(%rbx), %eax
 472 0454 49C7C7FF 		movq	$-1, %r15
 472      FFFFFF
 473 045b 4883C301 		addq	$1, %rbx
 474 045f E9B7FDFF 		jmp	.L21
 474      FF
 475              		.p2align 4,,10
 476 0464 0F1F4000 		.p2align 3
 477              	.L18:
 478 0468 83C201   		addl	$1, %edx
 479 046b 31C0     		xorl	%eax, %eax
 480 046d 895760   		movl	%edx, 96(%rdi)
 481 0470 EBB6     		jmp	.L17
 482              		.p2align 4,,10
 483 0472 660F1F44 		.p2align 3
 483      0000
 484              	.L22:
 485 0478 0FB64301 		movzbl	1(%rbx), %eax
 486 047c 41BF0100 		movl	$1, %r15d
 486      0000
 487 0482 4883C301 		addq	$1, %rbx
 488 0486 E990FDFF 		jmp	.L21
 488      FF
 489              	.L89:
 490 048b 89F0     		movl	%esi, %eax
 491 048d 4D89F7   		movq	%r14, %r15
 492 0490 E9CEFDFF 		jmp	.L29
 492      FF
 493              		.p2align 4,,10
 494 0495 0F1F00   		.p2align 3
 495              	.L50:
 496 0498 4D0FBE33 		movsbq	(%r11), %r14
 497 049c 468B3CB7 		movl	(%rdi,%r14,4), %r15d
 498 04a0 443BBF34 		cmpl	308(%rdi), %r15d
 498      010000
 499 04a7 4D89F5   		movq	%r14, %r13
 500 04aa 0F85ED01 		jne	.L53
 500      0000
 501 04b0 4584F6   		testb	%r14b, %r14b
 502 04b3 7462     		je	.L54
 503 04b5 4C89DA   		movq	%r11, %rdx
 504 04b8 488D3500 		leaq	.LC13(%rip), %rsi
 504      000000
 505 04bf EB0B     		jmp	.L59
 506              		.p2align 4,,10
 507 04c1 0F1F8000 		.p2align 3
 507      000000
 508              	.L60:
 509 04c8 84C9     		testb	%cl, %cl
 510 04ca 744B     		je	.L54
 511              	.L59:
 512 04cc 4883C201 		addq	$1, %rdx
 513 04d0 4883C601 		addq	$1, %rsi
 514 04d4 4C0FBE0A 		movsbq	(%rdx), %r9
 515 04d8 4C0FBE16 		movsbq	(%rsi), %r10
 516 04dc 4C89C9   		movq	%r9, %rcx
 517 04df 4D89D0   		movq	%r10, %r8
 518 04e2 468B1497 		movl	(%rdi,%r10,4), %r10d
 519 04e6 4639148F 		cmpl	%r10d, (%rdi,%r9,4)
 520 04ea 74DC     		je	.L60
 521 04ec 4584C0   		testb	%r8b, %r8b
 522 04ef 7548     		jne	.L61
 523 04f1 4D8B0424 		movq	(%r12), %r8
 524 04f5 43F64448 		testb	$32, 1(%r8,%r9,2)
 524      0120
 525 04fb 7416     		je	.L63
 526 04fd 0F1F00   		.p2align 4,,10
 527              		.p2align 3
 528              	.L119:
 529 0500 4883C201 		addq	$1, %rdx
 530 0504 480FBE32 		movsbq	(%rdx), %rsi
 531 0508 41F64470 		testb	$32, 1(%r8,%rsi,2)
 531      0120
 532 050e 4889F1   		movq	%rsi, %rcx
 533 0511 75ED     		jne	.L119
 534              	.L63:
 535 0513 84C9     		testb	%cl, %cl
 536 0515 7522     		jne	.L61
 537              	.L54:
 538 0517 488D9300 		leaq	2048(%rbx), %rdx
 538      080000
 539 051e 48C1E314 		salq	$20, %rbx
 540 0522 4881FAFF 		cmpq	$4095, %rdx
 540      0F0000
 541 0529 0F86E4FE 		jbe	.L58
 541      FFFF
 542              	.L97:
 543 052f B8040000 		movl	$4, %eax
 543      00
 544 0534 E9EFFEFF 		jmp	.L17
 544      FF
 545              	.L61:
 546 0539 443BBF1C 		cmpl	284(%rdi), %r15d
 546      010000
 547 0540 4C89DA   		movq	%r11, %rdx
 548 0543 488D3500 		leaq	.LC14(%rip), %rsi
 548      000000
 549 054a 7410     		je	.L68
 550 054c E9EF0100 		jmp	.L64
 550      00
 551              		.p2align 4,,10
 552 0551 0F1F8000 		.p2align 3
 552      000000
 553              	.L69:
 554 0558 84C9     		testb	%cl, %cl
 555 055a 7453     		je	.L65
 556              	.L68:
 557 055c 4883C201 		addq	$1, %rdx
 558 0560 4883C601 		addq	$1, %rsi
 559 0564 4C0FBE0A 		movsbq	(%rdx), %r9
 560 0568 4C0FBE16 		movsbq	(%rsi), %r10
 561 056c 4C89C9   		movq	%r9, %rcx
 562 056f 4D89D0   		movq	%r10, %r8
 563 0572 468B1497 		movl	(%rdi,%r10,4), %r10d
 564 0576 4639148F 		cmpl	%r10d, (%rdi,%r9,4)
 565 057a 74DC     		je	.L69
 566 057c 4584C0   		testb	%r8b, %r8b
 567 057f 0F85A700 		jne	.L70
 567      0000
 568 0585 4D8B0424 		movq	(%r12), %r8
 569 0589 43F64448 		testb	$32, 1(%r8,%r9,2)
 569      0120
 570 058f 741A     		je	.L72
 571              		.p2align 4,,10
 572 0591 0F1F8000 		.p2align 3
 572      000000
 573              	.L118:
 574 0598 4883C201 		addq	$1, %rdx
 575 059c 480FBE32 		movsbq	(%rdx), %rsi
 576 05a0 41F64470 		testb	$32, 1(%r8,%rsi,2)
 576      0120
 577 05a6 4889F1   		movq	%rsi, %rcx
 578 05a9 75ED     		jne	.L118
 579              	.L72:
 580 05ab 84C9     		testb	%cl, %cl
 581 05ad 757D     		jne	.L70
 582              	.L65:
 583 05af 488D5302 		leaq	2(%rbx), %rdx
 584 05b3 48C1E31E 		salq	$30, %rbx
 585 05b7 4883FA03 		cmpq	$3, %rdx
 586 05bb 0F8652FE 		jbe	.L58
 586      FFFF
 587 05c1 E969FFFF 		jmp	.L97
 587      FF
 588              	.L34:
 589 05c6 4C894424 		movq	%r8, 16(%rsp)
 589      10
 590 05cb 4C894C24 		movq	%r9, 8(%rsp)
 590      08
 591 05d0 40887424 		movb	%sil, 24(%rsp)
 591      18
 592 05d5 E8000000 		call	__ctype_toupper_loc@PLT
 592      00
 593 05da 490FBE57 		movsbq	1(%r15), %rdx
 593      01
 594 05df 4889C1   		movq	%rax, %rcx
 595 05e2 488B00   		movq	(%rax), %rax
 596 05e5 4C8B4C24 		movq	8(%rsp), %r9
 596      08
 597 05ea 4C8B4424 		movq	16(%rsp), %r8
 597      10
 598 05ef 8BB83C01 		movl	316(%rax), %edi
 598      0000
 599 05f5 393C90   		cmpl	%edi, (%rax,%rdx,4)
 600 05f8 0F84D200 		je	.L36
 600      0000
 601 05fe 4C897424 		movq	%r14, 32(%rsp)
 601      20
 602 0603 0FB67424 		movzbl	24(%rsp), %esi
 602      18
 603 0608 E983FCFF 		jmp	.L82
 603      FF
 604              	.L148:
 605 060d 41B90100 		movl	$1, %r9d
 605      0000
 606 0613 E96BFCFF 		jmp	.L31
 606      FF
 607              	.L32:
 608 0618 410FB647 		movzbl	1(%r15), %eax
 608      01
 609 061d 41B90100 		movl	$1, %r9d
 609      0000
 610 0623 4983C701 		addq	$1, %r15
 611 0627 E957FCFF 		jmp	.L31
 611      FF
 612              	.L70:
 613 062c 443B3F   		cmpl	(%rdi), %r15d
 614 062f 488D1500 		leaq	.LC2(%rip), %rdx
 614      000000
 615 0636 7411     		je	.L76
 616 0638 EB32     		jmp	.L73
 617 063a 660F1F44 		.p2align 4,,10
 617      0000
 618              		.p2align 3
 619              	.L77:
 620 0640 4584ED   		testb	%r13b, %r13b
 621 0643 0F84CAFD 		je	.L58
 621      FFFF
 622              	.L76:
 623 0649 4983C301 		addq	$1, %r11
 624 064d 4883C201 		addq	$1, %rdx
 625 0651 4D0FBE33 		movsbq	(%r11), %r14
 626 0655 480FBE32 		movsbq	(%rdx), %rsi
 627 0659 4D89F5   		movq	%r14, %r13
 628 065c 4889F1   		movq	%rsi, %rcx
 629 065f 8B34B7   		movl	(%rdi,%rsi,4), %esi
 630 0662 423934B7 		cmpl	%esi, (%rdi,%r14,4)
 631 0666 74D8     		je	.L77
 632 0668 84C9     		testb	%cl, %cl
 633 066a 7527     		jne	.L98
 634              	.L73:
 635 066c 498B0C24 		movq	(%r12), %rcx
 636 0670 42F64471 		testb	$32, 1(%rcx,%r14,2)
 636      0120
 637 0676 7412     		je	.L79
 638              	.L80:
 639 0678 4983C301 		addq	$1, %r11
 640 067c 490FBE13 		movsbq	(%r11), %rdx
 641 0680 F6445101 		testb	$32, 1(%rcx,%rdx,2)
 641      20
 642 0685 4989D5   		movq	%rdx, %r13
 643 0688 75EE     		jne	.L80
 644              	.L79:
 645 068a 4584ED   		testb	%r13b, %r13b
 646 068d 0F8480FD 		je	.L58
 646      FFFF
 647              	.L98:
 648 0693 B8030000 		movl	$3, %eax
 648      00
 649 0698 E98BFDFF 		jmp	.L17
 649      FF
 650              	.L53:
 651 069d 4439BF1C 		cmpl	%r15d, 284(%rdi)
 651      010000
 652 06a4 0F859600 		jne	.L64
 652      0000
 653 06aa 4584F6   		testb	%r14b, %r14b
 654 06ad 0F84FCFE 		je	.L65
 654      FFFF
 655 06b3 4C89DA   		movq	%r11, %rdx
 656 06b6 488D3500 		leaq	.LC14(%rip), %rsi
 656      000000
 657 06bd E99AFEFF 		jmp	.L68
 657      FF
 658              	.L150:
 659 06c2 4C897424 		movq	%r14, 32(%rsp)
 659      20
 660 06c7 4D8B2C24 		movq	(%r12), %r13
 661 06cb E95DFBFF 		jmp	.L81
 661      FF
 662              	.L36:
 663 06d0 4983C702 		addq	$2, %r15
 664 06d4 4C89C6   		movq	%r8, %rsi
 665 06d7 BA080000 		movl	$8, %edx
 665      00
 666 06dc 4C89FF   		movq	%r15, %rdi
 667 06df 4C894C24 		movq	%r9, 24(%rsp)
 667      18
 668 06e4 48894C24 		movq	%rcx, 16(%rsp)
 668      10
 669 06e9 4C894424 		movq	%r8, 8(%rsp)
 669      08
 670 06ee E8000000 		call	strtol@PLT
 670      00
 671 06f3 4C8B5C24 		movq	32(%rsp), %r11
 671      20
 672 06f8 4C8B4424 		movq	8(%rsp), %r8
 672      08
 673 06fd 488B4C24 		movq	16(%rsp), %rcx
 673      10
 674 0702 4C8B4C24 		movq	24(%rsp), %r9
 674      18
 675 0707 4D39DF   		cmpq	%r11, %r15
 676 070a 0F84E000 		je	.L153
 676      0000
 677 0710 490FAFC1 		imulq	%r9, %rax
 678 0714 4D39DE   		cmpq	%r11, %r14
 679 0717 4889C3   		movq	%rax, %rbx
 680 071a 0F855AFC 		jne	.L28
 680      FFFF
 681              	.L142:
 682 0720 490FBE06 		movsbq	(%r14), %rax
 683 0724 4D8B2C24 		movq	(%r12), %r13
 684 0728 4889C6   		movq	%rax, %rsi
 685 072b 410FB744 		movzwl	0(%r13,%rax,2), %eax
 685      4500
 686 0731 66250020 		andw	$8192, %ax
 687 0735 89C3     		movl	%eax, %ebx
 688 0737 E954FBFF 		jmp	.L82
 688      FF
 689 073c 0F1F4000 		.p2align 4,,10
 690              		.p2align 3
 691              	.L64:
 692 0740 44393F   		cmpl	%r15d, (%rdi)
 693 0743 0F8523FF 		jne	.L73
 693      FFFF
 694 0749 4584ED   		testb	%r13b, %r13b
 695 074c 488D1500 		leaq	.LC2(%rip), %rdx
 695      000000
 696 0753 0F85F0FE 		jne	.L76
 696      FFFF
 697 0759 E9B5FCFF 		jmp	.L58
 697      FF
 698              	.L43:
 699 075e 4C894424 		movq	%r8, 8(%rsp)
 699      08
 700 0763 E8000000 		call	__ctype_toupper_loc@PLT
 700      00
 701 0768 490FBE57 		movsbq	1(%r15), %rdx
 701      01
 702 076d 4889C1   		movq	%rax, %rcx
 703 0770 488B00   		movq	(%rax), %rax
 704 0773 4C8B4424 		movq	8(%rsp), %r8
 704      08
 705 0778 8BB80801 		movl	264(%rax), %edi
 705      0000
 706 077e 393C90   		cmpl	%edi, (%rax,%rdx,4)
 707 0781 0F854AFB 		jne	.L45
 707      FFFF
 708 0787 4983C702 		addq	$2, %r15
 709 078b 4C89C6   		movq	%r8, %rsi
 710 078e BA020000 		movl	$2, %edx
 710      00
 711 0793 4C89FF   		movq	%r15, %rdi
 712 0796 48894C24 		movq	%rcx, 16(%rsp)
 712      10
 713 079b E8000000 		call	strtol@PLT
 713      00
 714 07a0 4C8B5C24 		movq	32(%rsp), %r11
 714      20
 715 07a5 4C8B4424 		movq	8(%rsp), %r8
 715      08
 716 07aa 4D39DF   		cmpq	%r11, %r15
 717 07ad 0F841EFB 		je	.L45
 717      FFFF
 718 07b3 480FAFD8 		imulq	%rax, %rbx
 719 07b7 4D39DE   		cmpq	%r11, %r14
 720 07ba 0F8416FB 		je	.L44
 720      FFFF
 721 07c0 488B4C24 		movq	16(%rsp), %rcx
 721      10
 722 07c5 E9B0FBFF 		jmp	.L28
 722      FF
 723              	.L152:
 724 07ca E8000000 		call	__stack_chk_fail@PLT
 724      00
 725              	.L149:
 726 07cf BB010000 		movl	$1, %ebx
 726      00
 727 07d4 E9EEFAFF 		jmp	.L40
 727      FF
 728              	.L41:
 729 07d9 4983C701 		addq	$1, %r15
 730 07dd BB010000 		movl	$1, %ebx
 730      00
 731 07e2 E9E0FAFF 		jmp	.L40
 731      FF
 732              	.L151:
 733 07e7 4D8B2C24 		movq	(%r12), %r13
 734 07eb E93DFAFF 		jmp	.L81
 734      FF
 735              	.L153:
 736 07f0 4C897424 		movq	%r14, 32(%rsp)
 736      20
 737 07f5 E926FFFF 		jmp	.L142
 737      FF
 738              		.cfi_endproc
 739              	.LFE28:
 741              		.section	.text.unlikely
 742              	.LCOLDE15:
 743              		.text
 744              	.LHOTE15:
 745              		.section	.rodata.str1.1
 746              	.LC16:
 747 0061 3C696E74 		.string	"<int>"
 747      3E00
 748              		.section	.text.unlikely
 749              	.LCOLDB17:
 750              		.text
 751              	.LHOTB17:
 752 07fa 660F1F44 		.p2align 4,,15
 752      0000
 753              		.globl	arg_intn
 755              	arg_intn:
 756              	.LFB33:
 757              		.cfi_startproc
 758 0800 4157     		pushq	%r15
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 15, -16
 761 0802 4156     		pushq	%r14
 762              		.cfi_def_cfa_offset 24
 763              		.cfi_offset 14, -24
 764 0804 4189CF   		movl	%ecx, %r15d
 765 0807 4155     		pushq	%r13
 766              		.cfi_def_cfa_offset 32
 767              		.cfi_offset 13, -32
 768 0809 4154     		pushq	%r12
 769              		.cfi_def_cfa_offset 40
 770              		.cfi_offset 12, -40
 771 080b 4989FD   		movq	%rdi, %r13
 772 080e 55       		pushq	%rbp
 773              		.cfi_def_cfa_offset 48
 774              		.cfi_offset 6, -48
 775 080f 53       		pushq	%rbx
 776              		.cfi_def_cfa_offset 56
 777              		.cfi_offset 3, -56
 778 0810 4489C3   		movl	%r8d, %ebx
 779 0813 4989F6   		movq	%rsi, %r14
 780 0816 4889D5   		movq	%rdx, %rbp
 781 0819 4D89CC   		movq	%r9, %r12
 782 081c 4883EC08 		subq	$8, %rsp
 783              		.cfi_def_cfa_offset 64
 784 0820 4139C8   		cmpl	%ecx, %r8d
 785 0823 0F4CD9   		cmovl	%ecx, %ebx
 786 0826 4863C3   		movslq	%ebx, %rax
 787 0829 488D3C85 		leaq	112(,%rax,4), %rdi
 787      70000000 
 788 0831 E8000000 		call	malloc@PLT
 788      00
 789 0836 4885C0   		testq	%rax, %rax
 790 0839 7467     		je	.L155
 791 083b 488D1500 		leaq	.LC16(%rip), %rdx
 791      000000
 792 0842 488D0DB7 		leaq	resetfn(%rip), %rcx
 792      F7FFFF
 793 0849 488D3550 		leaq	scanfn(%rip), %rsi
 793      F9FFFF
 794 0850 4885ED   		testq	%rbp, %rbp
 795 0853 C60002   		movb	$2, (%rax)
 796 0856 4C896808 		movq	%r13, 8(%rax)
 797 085a 480F44EA 		cmove	%rdx, %rbp
 798 085e 48894838 		movq	%rcx, 56(%rax)
 799 0862 48897040 		movq	%rsi, 64(%rax)
 800 0866 488D0DA3 		leaq	checkfn(%rip), %rcx
 800      F7FFFF
 801 086d 488D35AC 		leaq	errorfn(%rip), %rsi
 801      F7FFFF
 802 0874 488D5070 		leaq	112(%rax), %rdx
 803 0878 4C897010 		movq	%r14, 16(%rax)
 804 087c 48896818 		movq	%rbp, 24(%rax)
 805 0880 4C896020 		movq	%r12, 32(%rax)
 806 0884 44897828 		movl	%r15d, 40(%rax)
 807 0888 89582C   		movl	%ebx, 44(%rax)
 808 088b 48894030 		movq	%rax, 48(%rax)
 809 088f 48894848 		movq	%rcx, 72(%rax)
 810 0893 48897050 		movq	%rsi, 80(%rax)
 811 0897 48895068 		movq	%rdx, 104(%rax)
 812 089b C7406000 		movl	$0, 96(%rax)
 812      000000
 813              	.L155:
 814 08a2 4883C408 		addq	$8, %rsp
 815              		.cfi_def_cfa_offset 56
 816 08a6 5B       		popq	%rbx
 817              		.cfi_def_cfa_offset 48
 818 08a7 5D       		popq	%rbp
 819              		.cfi_def_cfa_offset 40
 820 08a8 415C     		popq	%r12
 821              		.cfi_def_cfa_offset 32
 822 08aa 415D     		popq	%r13
 823              		.cfi_def_cfa_offset 24
 824 08ac 415E     		popq	%r14
 825              		.cfi_def_cfa_offset 16
 826 08ae 415F     		popq	%r15
 827              		.cfi_def_cfa_offset 8
 828 08b0 C3       		ret
 829              		.cfi_endproc
 830              	.LFE33:
 832              		.section	.text.unlikely
 833              	.LCOLDE17:
 834              		.text
 835              	.LHOTE17:
 836              		.section	.text.unlikely
 837              	.LCOLDB18:
 838              		.text
 839              	.LHOTB18:
 840 08b1 0F1F4400 		.p2align 4,,15
 840      00662E0F 
 840      1F840000 
 840      000000
 841              		.globl	arg_int0
 843              	arg_int0:
 844              	.LFB31:
 845              		.cfi_startproc
 846 08c0 4989C9   		movq	%rcx, %r9
 847 08c3 41B80100 		movl	$1, %r8d
 847      0000
 848 08c9 31C9     		xorl	%ecx, %ecx
 849 08cb E9000000 		jmp	arg_intn@PLT
 849      00
 850              		.cfi_endproc
 851              	.LFE31:
 853              		.section	.text.unlikely
 854              	.LCOLDE18:
 855              		.text
 856              	.LHOTE18:
 857              		.section	.text.unlikely
 858              	.LCOLDB19:
 859              		.text
 860              	.LHOTB19:
 861              		.p2align 4,,15
 862              		.globl	arg_int1
 864              	arg_int1:
 865              	.LFB32:
 866              		.cfi_startproc
 867 08d0 4989C9   		movq	%rcx, %r9
 868 08d3 41B80100 		movl	$1, %r8d
 868      0000
 869 08d9 B9010000 		movl	$1, %ecx
 869      00
 870 08de E9000000 		jmp	arg_intn@PLT
 870      00
 871              		.cfi_endproc
 872              	.LFE32:
 874              		.section	.text.unlikely
 875              	.LCOLDE19:
 876              		.text
 877              	.LHOTE19:
 878              		.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609"
 879              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 arg_int.c
     /tmp/cc0mvSWK.s:8      .text:0000000000000000 resetfn
     /tmp/cc0mvSWK.s:26     .text:0000000000000010 checkfn
     /tmp/cc0mvSWK.s:69     .text:0000000000000020 errorfn
     /tmp/cc0mvSWK.s:243    .text:00000000000001a0 scanfn
     /tmp/cc0mvSWK.s:755    .text:0000000000000800 arg_intn
     /tmp/cc0mvSWK.s:843    .text:00000000000008c0 arg_int0
     /tmp/cc0mvSWK.s:864    .text:00000000000008d0 arg_int1
     /tmp/cc0mvSWK.s:42     .rodata.str1.1:0000000000000000 .LC2
     /tmp/cc0mvSWK.s:44     .rodata.str1.1:0000000000000001 .LC3
     /tmp/cc0mvSWK.s:57     .rodata.str1.1:0000000000000027 .LC8
     /tmp/cc0mvSWK.s:59     .rodata.str1.1:0000000000000043 .LC9
     /tmp/cc0mvSWK.s:61     .rodata.str1.1:0000000000000045 .LC10
     /tmp/cc0mvSWK.s:54     .rodata.str1.8:0000000000000000 .LC7
     /tmp/cc0mvSWK.s:48     .rodata.str1.1:0000000000000016 .LC5
     /tmp/cc0mvSWK.s:46     .rodata.str1.1:0000000000000006 .LC4
     /tmp/cc0mvSWK.s:50     .rodata.str1.1:0000000000000018 .LC6
     /tmp/cc0mvSWK.s:231    .rodata.str1.1:0000000000000058 .LC12
     /tmp/cc0mvSWK.s:233    .rodata.str1.1:000000000000005b .LC13
     /tmp/cc0mvSWK.s:235    .rodata.str1.1:000000000000005e .LC14
     /tmp/cc0mvSWK.s:746    .rodata.str1.1:0000000000000061 .LC16

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__fprintf_chk
fwrite
arg_print_option
__ctype_b_loc
strtol
__ctype_toupper_loc
__stack_chk_fail
malloc
