   1              		.file	"libusbwrap.c"
   2              		.section	.text.unlikely,"ax",@progbits
   3              	.LCOLDB0:
   4              		.text
   5              	.LHOTB0:
   6              		.p2align 4,,15
   8              	bulk_transfer_cb:
   9              	.LFB103:
  10              		.cfi_startproc
  11 0000 488B4728 		movq	40(%rdi), %rax
  12 0004 C7000100 		movl	$1, (%rax)
  12      0000
  13 000a C3       		ret
  14              		.cfi_endproc
  15              	.LFE103:
  17              		.section	.text.unlikely
  18              	.LCOLDE0:
  19              		.text
  20              	.LHOTE0:
  21              		.section	.text.unlikely
  22              	.LCOLDB1:
  23              		.text
  24              	.LHOTB1:
  25 000b 0F1F4400 		.p2align 4,,15
  25      00
  26              		.globl	createTransfer
  28              	createTransfer:
  29              	.LFB95:
  30              		.cfi_startproc
  31 0010 53       		pushq	%rbx
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 3, -16
  34 0011 BE180001 		movl	$65560, %esi
  34      00
  35 0016 BF010000 		movl	$1, %edi
  35      00
  36 001b E8000000 		call	calloc@PLT
  36      00
  37 0020 4885C0   		testq	%rax, %rax
  38 0023 741B     		je	.L3
  39 0025 31FF     		xorl	%edi, %edi
  40 0027 4889C3   		movq	%rax, %rbx
  41 002a E8000000 		call	libusb_alloc_transfer@PLT
  41      00
  42 002f 4885C0   		testq	%rax, %rax
  43 0032 488903   		movq	%rax, (%rbx)
  44 0035 7409     		je	.L3
  45 0037 4889D8   		movq	%rbx, %rax
  46 003a 5B       		popq	%rbx
  47              		.cfi_remember_state
  48              		.cfi_def_cfa_offset 8
  49 003b C3       		ret
  50 003c 0F1F4000 		.p2align 4,,10
  51              		.p2align 3
  52              	.L3:
  53              		.cfi_restore_state
  54 0040 31C0     		xorl	%eax, %eax
  55 0042 5B       		popq	%rbx
  56              		.cfi_def_cfa_offset 8
  57 0043 C3       		ret
  58              		.cfi_endproc
  59              	.LFE95:
  61              		.section	.text.unlikely
  62              	.LCOLDE1:
  63              		.text
  64              	.LHOTE1:
  65              		.section	.text.unlikely
  66              	.LCOLDB2:
  67              		.text
  68              	.LHOTB2:
  69 0044 6690662E 		.p2align 4,,15
  69      0F1F8400 
  69      00000000 
  71              	destroyTransfer:
  72              	.LFB96:
  73              		.cfi_startproc
  74 0050 4885FF   		testq	%rdi, %rdi
  75 0053 741B     		je	.L14
  76 0055 53       		pushq	%rbx
  77              		.cfi_def_cfa_offset 16
  78              		.cfi_offset 3, -16
  79 0056 4889FB   		movq	%rdi, %rbx
  80 0059 488B3F   		movq	(%rdi), %rdi
  81 005c E8000000 		call	libusb_free_transfer@PLT
  81      00
  82 0061 4889DF   		movq	%rbx, %rdi
  83 0064 5B       		popq	%rbx
  84              		.cfi_restore 3
  85              		.cfi_def_cfa_offset 8
  86 0065 E9000000 		jmp	free@PLT
  86      00
  87 006a 660F1F44 		.p2align 4,,10
  87      0000
  88              		.p2align 3
  89              	.L14:
  90 0070 F3C3     		rep ret
  91              		.cfi_endproc
  92              	.LFE96:
  94              		.section	.text.unlikely
  95              	.LCOLDE2:
  96              		.text
  97              	.LHOTE2:
  98              		.section	.text.unlikely
  99              	.LCOLDB3:
 100              		.text
 101              	.LHOTB3:
 102 0072 0F1F4000 		.p2align 4,,15
 102      662E0F1F 
 102      84000000 
 102      0000
 103              		.globl	usbValidateVidPid
 105              	usbValidateVidPid:
 106              	.LFB92:
 107              		.cfi_startproc
 108 0080 53       		pushq	%rbx
 109              		.cfi_def_cfa_offset 16
 110              		.cfi_offset 3, -16
 111 0081 4889FB   		movq	%rdi, %rbx
 112 0084 E8000000 		call	strlen@PLT
 112      00
 113 0089 4883F809 		cmpq	$9, %rax
 114 008d 0F841D02 		je	.L16
 114      0000
 115 0093 4883F80E 		cmpq	$14, %rax
 116 0097 B8000000 		movl	$0, %eax
 116      00
 117 009c 7402     		je	.L40
 118              	.L36:
 119 009e 5B       		popq	%rbx
 120              		.cfi_remember_state
 121              		.cfi_def_cfa_offset 8
 122 009f C3       		ret
 123              		.p2align 4,,10
 124              		.p2align 3
 125              	.L40:
 126              		.cfi_restore_state
 127 00a0 807B043A 		cmpb	$58, 4(%rbx)
 128 00a4 75F8     		jne	.L36
 129 00a6 807B093A 		cmpb	$58, 9(%rbx)
 130 00aa 75F2     		jne	.L36
 131 00ac B9010000 		movl	$1, %ecx
 131      00
 132              	.L19:
 133 00b1 0FB613   		movzbl	(%rbx), %edx
 134 00b4 8D42D0   		leal	-48(%rdx), %eax
 135 00b7 3C36     		cmpb	$54, %al
 136 00b9 8D42C6   		leal	-58(%rdx), %eax
 137 00bc 400F97C6 		seta	%sil
 138 00c0 3C06     		cmpb	$6, %al
 139 00c2 0F96C0   		setbe	%al
 140 00c5 4008F0   		orb	%sil, %al
 141 00c8 0F85F201 		jne	.L33
 141      0000
 142 00ce 83EA47   		subl	$71, %edx
 143 00d1 80FA19   		cmpb	$25, %dl
 144 00d4 76C8     		jbe	.L36
 145 00d6 0FB65301 		movzbl	1(%rbx), %edx
 146 00da 8D72D0   		leal	-48(%rdx), %esi
 147 00dd 4080FE36 		cmpb	$54, %sil
 148 00e1 8D72C6   		leal	-58(%rdx), %esi
 149 00e4 400F97C7 		seta	%dil
 150 00e8 4080FE06 		cmpb	$6, %sil
 151 00ec 400F96C6 		setbe	%sil
 152 00f0 4008F7   		orb	%sil, %dil
 153 00f3 75A9     		jne	.L36
 154 00f5 83EA47   		subl	$71, %edx
 155 00f8 80FA19   		cmpb	$25, %dl
 156 00fb 76A1     		jbe	.L36
 157 00fd 0FB65302 		movzbl	2(%rbx), %edx
 158 0101 8D42D0   		leal	-48(%rdx), %eax
 159 0104 3C36     		cmpb	$54, %al
 160 0106 8D42C6   		leal	-58(%rdx), %eax
 161 0109 400F97C6 		seta	%sil
 162 010d 3C06     		cmpb	$6, %al
 163 010f 0F96C0   		setbe	%al
 164 0112 4008F0   		orb	%sil, %al
 165 0115 0F85A501 		jne	.L33
 165      0000
 166 011b 83EA47   		subl	$71, %edx
 167 011e 80FA19   		cmpb	$25, %dl
 168 0121 0F8677FF 		jbe	.L36
 168      FFFF
 169 0127 0FB65303 		movzbl	3(%rbx), %edx
 170 012b 8D72C6   		leal	-58(%rdx), %esi
 171 012e 4080FE06 		cmpb	$6, %sil
 172 0132 8D72D0   		leal	-48(%rdx), %esi
 173 0135 400F96C7 		setbe	%dil
 174 0139 4080FE36 		cmpb	$54, %sil
 175 013d 400F97C6 		seta	%sil
 176 0141 4008F7   		orb	%sil, %dil
 177 0144 0F8554FF 		jne	.L36
 177      FFFF
 178 014a 83EA47   		subl	$71, %edx
 179 014d 80FA19   		cmpb	$25, %dl
 180 0150 0F8648FF 		jbe	.L36
 180      FFFF
 181 0156 0FB65305 		movzbl	5(%rbx), %edx
 182 015a 8D42C6   		leal	-58(%rdx), %eax
 183 015d 3C06     		cmpb	$6, %al
 184 015f 8D42D0   		leal	-48(%rdx), %eax
 185 0162 400F96C6 		setbe	%sil
 186 0166 3C36     		cmpb	$54, %al
 187 0168 0F97C0   		seta	%al
 188 016b 4008F0   		orb	%sil, %al
 189 016e 0F854C01 		jne	.L33
 189      0000
 190 0174 83EA47   		subl	$71, %edx
 191 0177 80FA19   		cmpb	$25, %dl
 192 017a 0F861EFF 		jbe	.L36
 192      FFFF
 193 0180 0FB65306 		movzbl	6(%rbx), %edx
 194 0184 8D72D0   		leal	-48(%rdx), %esi
 195 0187 4080FE36 		cmpb	$54, %sil
 196 018b 8D72C6   		leal	-58(%rdx), %esi
 197 018e 400F97C7 		seta	%dil
 198 0192 4080FE06 		cmpb	$6, %sil
 199 0196 400F96C6 		setbe	%sil
 200 019a 4008F7   		orb	%sil, %dil
 201 019d 0F85FBFE 		jne	.L36
 201      FFFF
 202 01a3 83EA47   		subl	$71, %edx
 203 01a6 80FA19   		cmpb	$25, %dl
 204 01a9 0F861101 		jbe	.L33
 204      0000
 205 01af 0FB65307 		movzbl	7(%rbx), %edx
 206 01b3 8D42D0   		leal	-48(%rdx), %eax
 207 01b6 3C36     		cmpb	$54, %al
 208 01b8 8D42C6   		leal	-58(%rdx), %eax
 209 01bb 400F97C6 		seta	%sil
 210 01bf 3C06     		cmpb	$6, %al
 211 01c1 0F96C0   		setbe	%al
 212 01c4 4008F0   		orb	%sil, %al
 213 01c7 0F85F300 		jne	.L33
 213      0000
 214 01cd 83EA47   		subl	$71, %edx
 215 01d0 80FA19   		cmpb	$25, %dl
 216 01d3 0F86C5FE 		jbe	.L36
 216      FFFF
 217 01d9 0FB65308 		movzbl	8(%rbx), %edx
 218 01dd 8D72C6   		leal	-58(%rdx), %esi
 219 01e0 4080FE06 		cmpb	$6, %sil
 220 01e4 8D72D0   		leal	-48(%rdx), %esi
 221 01e7 400F96C7 		setbe	%dil
 222 01eb 4080FE36 		cmpb	$54, %sil
 223 01ef 400F97C6 		seta	%sil
 224 01f3 4008F7   		orb	%sil, %dil
 225 01f6 0F85A2FE 		jne	.L36
 225      FFFF
 226 01fc 83EA47   		subl	$71, %edx
 227 01ff 80FA19   		cmpb	$25, %dl
 228 0202 0F8696FE 		jbe	.L36
 228      FFFF
 229 0208 84C9     		testb	%cl, %cl
 230 020a B8010000 		movl	$1, %eax
 230      00
 231 020f 0F8489FE 		je	.L36
 231      FFFF
 232 0215 0FB6530A 		movzbl	10(%rbx), %edx
 233 0219 8D42C6   		leal	-58(%rdx), %eax
 234 021c 3C06     		cmpb	$6, %al
 235 021e 8D42D0   		leal	-48(%rdx), %eax
 236 0221 0F96C1   		setbe	%cl
 237 0224 3C36     		cmpb	$54, %al
 238 0226 0F97C0   		seta	%al
 239 0229 08C8     		orb	%cl, %al
 240 022b 0F858F00 		jne	.L33
 240      0000
 241 0231 83EA47   		subl	$71, %edx
 242 0234 80FA19   		cmpb	$25, %dl
 243 0237 0F8661FE 		jbe	.L36
 243      FFFF
 244 023d 0FB6530B 		movzbl	11(%rbx), %edx
 245 0241 8D4AC6   		leal	-58(%rdx), %ecx
 246 0244 80F906   		cmpb	$6, %cl
 247 0247 8D4AD0   		leal	-48(%rdx), %ecx
 248 024a 400F96C6 		setbe	%sil
 249 024e 80F936   		cmpb	$54, %cl
 250 0251 0F97C1   		seta	%cl
 251 0254 4008CE   		orb	%cl, %sil
 252 0257 0F8541FE 		jne	.L36
 252      FFFF
 253 025d 83EA47   		subl	$71, %edx
 254 0260 80FA19   		cmpb	$25, %dl
 255 0263 765B     		jbe	.L33
 256 0265 0FB6530C 		movzbl	12(%rbx), %edx
 257 0269 8D42C6   		leal	-58(%rdx), %eax
 258 026c 3C06     		cmpb	$6, %al
 259 026e 8D42D0   		leal	-48(%rdx), %eax
 260 0271 0F96C1   		setbe	%cl
 261 0274 3C36     		cmpb	$54, %al
 262 0276 0F97C0   		seta	%al
 263 0279 08C8     		orb	%cl, %al
 264 027b 7543     		jne	.L33
 265 027d 83EA47   		subl	$71, %edx
 266 0280 80FA19   		cmpb	$25, %dl
 267 0283 0F8615FE 		jbe	.L36
 267      FFFF
 268 0289 0FB6530D 		movzbl	13(%rbx), %edx
 269 028d 8D4AD0   		leal	-48(%rdx), %ecx
 270 0290 80F936   		cmpb	$54, %cl
 271 0293 0F8705FE 		ja	.L36
 271      FFFF
 272 0299 8D4AC6   		leal	-58(%rdx), %ecx
 273 029c 80F906   		cmpb	$6, %cl
 274 029f 0F86F9FD 		jbe	.L36
 274      FFFF
 275 02a5 83EA47   		subl	$71, %edx
 276 02a8 80FA19   		cmpb	$25, %dl
 277 02ab 0F97C0   		seta	%al
 278 02ae 5B       		popq	%rbx
 279              		.cfi_remember_state
 280              		.cfi_def_cfa_offset 8
 281 02af C3       		ret
 282              		.p2align 4,,10
 283              		.p2align 3
 284              	.L16:
 285              		.cfi_restore_state
 286 02b0 31C0     		xorl	%eax, %eax
 287 02b2 31C9     		xorl	%ecx, %ecx
 288 02b4 807B043A 		cmpb	$58, 4(%rbx)
 289 02b8 0F84F3FD 		je	.L19
 289      FFFF
 290 02be 5B       		popq	%rbx
 291              		.cfi_remember_state
 292              		.cfi_def_cfa_offset 8
 293 02bf C3       		ret
 294              		.p2align 4,,10
 295              		.p2align 3
 296              	.L33:
 297              		.cfi_restore_state
 298 02c0 31C0     		xorl	%eax, %eax
 299 02c2 5B       		popq	%rbx
 300              		.cfi_def_cfa_offset 8
 301 02c3 C3       		ret
 302              		.cfi_endproc
 303              	.LFE92:
 305              		.section	.text.unlikely
 306              	.LCOLDE3:
 307              		.text
 308              	.LHOTE3:
 309              		.section	.rodata.str1.1,"aMS",@progbits,1
 310              	.LC4:
 311 0000 75736249 		.string	"usbInitialise(): %s"
 311      6E697469 
 311      616C6973 
 311      6528293A 
 311      20257300 
 312              		.section	.text.unlikely
 313              	.LCOLDB5:
 314              		.text
 315              	.LHOTB5:
 316 02c4 6690662E 		.p2align 4,,15
 316      0F1F8400 
 316      00000000 
 317              		.globl	usbInitialise
 319              	usbInitialise:
 320              	.LFB93:
 321              		.cfi_startproc
 322 02d0 55       		pushq	%rbp
 323              		.cfi_def_cfa_offset 16
 324              		.cfi_offset 6, -16
 325 02d1 53       		pushq	%rbx
 326              		.cfi_def_cfa_offset 24
 327              		.cfi_offset 3, -24
 328 02d2 89FD     		movl	%edi, %ebp
 329 02d4 488D3D00 		leaq	m_ctx(%rip), %rdi
 329      000000
 330 02db 4889F3   		movq	%rsi, %rbx
 331 02de 4883EC08 		subq	$8, %rsp
 332              		.cfi_def_cfa_offset 32
 333 02e2 E8000000 		call	libusb_init@PLT
 333      00
 334 02e7 85C0     		testl	%eax, %eax
 335 02e9 742D     		je	.L42
 336              	.L43:
 337 02eb 89C7     		movl	%eax, %edi
 338 02ed E8000000 		call	libusb_error_name@PLT
 338      00
 339 02f2 488D3500 		leaq	.LC4(%rip), %rsi
 339      000000
 340 02f9 4889C2   		movq	%rax, %rdx
 341 02fc 4889DF   		movq	%rbx, %rdi
 342 02ff 31C0     		xorl	%eax, %eax
 343 0301 E8000000 		call	errRender@PLT
 343      00
 344 0306 4883C408 		addq	$8, %rsp
 345              		.cfi_remember_state
 346              		.cfi_def_cfa_offset 24
 347 030a B8020000 		movl	$2, %eax
 347      00
 348 030f 5B       		popq	%rbx
 349              		.cfi_def_cfa_offset 16
 350 0310 5D       		popq	%rbp
 351              		.cfi_def_cfa_offset 8
 352 0311 C3       		ret
 353              		.p2align 4,,10
 354 0312 660F1F44 		.p2align 3
 354      0000
 355              	.L42:
 356              		.cfi_restore_state
 357 0318 488B3D00 		movq	m_ctx(%rip), %rdi
 357      000000
 358 031f 89EE     		movl	%ebp, %esi
 359 0321 E8000000 		call	libusb_set_debug@PLT
 359      00
 360 0326 4883C408 		addq	$8, %rsp
 361              		.cfi_def_cfa_offset 24
 362 032a 31C0     		xorl	%eax, %eax
 363 032c 5B       		popq	%rbx
 364              		.cfi_def_cfa_offset 16
 365 032d 5D       		popq	%rbp
 366              		.cfi_def_cfa_offset 8
 367 032e C3       		ret
 368              		.cfi_endproc
 369              	.LFE93:
 371              		.section	.text.unlikely
 372              	.LCOLDE5:
 373              		.text
 374              	.LHOTE5:
 375              		.section	.rodata.str1.8,"aMS",@progbits,1
 376              		.align 8
 377              	.LC6:
 378 0000 75736249 		.string	"usbIsDeviceAvailable(): you forgot to call usbInitialise()!"
 378      73446576 
 378      69636541 
 378      7661696C 
 378      61626C65 
 379              		.section	.rodata.str1.1
 380              	.LC7:
 381 0014 75736249 		.string	"usbIsDeviceAvailable(): %s"
 381      73446576 
 381      69636541 
 381      7661696C 
 381      61626C65 
 382              		.section	.rodata.str1.8
 383 003c 00000000 		.align 8
 384              	.LC8:
 385 0040 75736249 		.string	"usbIsDeviceAvailable(): The supplied VID:PID:DID \"%s\" is invalid; it should look like 1
 385      73446576 
 385      69636541 
 385      7661696C 
 385      61626C65 
 386              		.section	.text.unlikely
 387              	.LCOLDB9:
 388              		.text
 389              	.LHOTB9:
 390 032f 90       		.p2align 4,,15
 391              		.globl	usbIsDeviceAvailable
 393              	usbIsDeviceAvailable:
 394              	.LFB94:
 395              		.cfi_startproc
 396 0330 4157     		pushq	%r15
 397              		.cfi_def_cfa_offset 16
 398              		.cfi_offset 15, -16
 399 0332 4156     		pushq	%r14
 400              		.cfi_def_cfa_offset 24
 401              		.cfi_offset 14, -24
 402 0334 4989D6   		movq	%rdx, %r14
 403 0337 4155     		pushq	%r13
 404              		.cfi_def_cfa_offset 32
 405              		.cfi_offset 13, -32
 406 0339 4154     		pushq	%r12
 407              		.cfi_def_cfa_offset 40
 408              		.cfi_offset 12, -40
 409 033b 55       		pushq	%rbp
 410              		.cfi_def_cfa_offset 48
 411              		.cfi_offset 6, -48
 412 033c 53       		pushq	%rbx
 413              		.cfi_def_cfa_offset 56
 414              		.cfi_offset 3, -56
 415 033d 4889FD   		movq	%rdi, %rbp
 416 0340 4883EC48 		subq	$72, %rsp
 417              		.cfi_def_cfa_offset 128
 418 0344 488B3D00 		movq	m_ctx(%rip), %rdi
 418      000000
 419 034b 64488B04 		movq	%fs:40, %rax
 419      25280000 
 419      00
 420 0354 48894424 		movq	%rax, 56(%rsp)
 420      38
 421 0359 31C0     		xorl	%eax, %eax
 422 035b 48893424 		movq	%rsi, (%rsp)
 423 035f 48C74424 		movq	$0, 24(%rsp)
 423      18000000 
 423      00
 424 0368 4885FF   		testq	%rdi, %rdi
 425 036b 0F844F01 		je	.L66
 425      0000
 426 0371 488D7424 		leaq	24(%rsp), %rsi
 426      18
 427 0376 E8000000 		call	libusb_get_device_list@PLT
 427      00
 428 037b 85C0     		testl	%eax, %eax
 429 037d 4989C4   		movq	%rax, %r12
 430 0380 0F88E200 		js	.L67
 430      0000
 431 0386 4889EF   		movq	%rbp, %rdi
 432 0389 E8000000 		call	usbValidateVidPid@PLT
 432      00
 433 038e 84C0     		testb	%al, %al
 434 0390 0F844A01 		je	.L68
 434      0000
 435 0396 31F6     		xorl	%esi, %esi
 436 0398 BA100000 		movl	$16, %edx
 436      00
 437 039d 4889EF   		movq	%rbp, %rdi
 438 03a0 E8000000 		call	strtoul@PLT
 438      00
 439 03a5 488D7D05 		leaq	5(%rbp), %rdi
 440 03a9 31F6     		xorl	%esi, %esi
 441 03ab BA100000 		movl	$16, %edx
 441      00
 442 03b0 89C3     		movl	%eax, %ebx
 443 03b2 E8000000 		call	strtoul@PLT
 443      00
 444 03b7 4889EF   		movq	%rbp, %rdi
 445 03ba 4189C5   		movl	%eax, %r13d
 446 03bd E8000000 		call	strlen@PLT
 446      00
 447 03c2 4883F80E 		cmpq	$14, %rax
 448 03c6 0F856101 		jne	.L50
 448      0000
 449 03cc 488D7D0A 		leaq	10(%rbp), %rdi
 450 03d0 31F6     		xorl	%esi, %esi
 451 03d2 BA100000 		movl	$16, %edx
 451      00
 452 03d7 E8000000 		call	strtoul@PLT
 452      00
 453 03dc 488B0C24 		movq	(%rsp), %rcx
 454 03e0 6685C0   		testw	%ax, %ax
 455 03e3 66894424 		movw	%ax, 14(%rsp)
 455      0E
 456 03e8 C60100   		movb	$0, (%rcx)
 457 03eb 0F844301 		je	.L60
 457      0000
 458 03f1 4963C4   		movslq	%r12d, %rax
 459 03f4 4589E4   		movl	%r12d, %r12d
 460 03f7 4C8D3CC5 		leaq	-8(,%rax,8), %r15
 460      F8FFFFFF 
 461 03ff 4C29E0   		subq	%r12, %rax
 462 0402 4C8D6424 		leaq	32(%rsp), %r12
 462      20
 463 0407 488D2CC5 		leaq	-8(,%rax,8), %rbp
 463      F8FFFFFF 
 464 040f EB0B     		jmp	.L56
 465              		.p2align 4,,10
 466 0411 0F1F8000 		.p2align 3
 466      000000
 467              	.L54:
 468 0418 4983EF08 		subq	$8, %r15
 469              	.L56:
 470 041c 4939EF   		cmpq	%rbp, %r15
 471 041f 0F84DB00 		je	.L62
 471      0000
 472 0425 488B4424 		movq	24(%rsp), %rax
 472      18
 473 042a 4C89E6   		movq	%r12, %rsi
 474 042d 4A8B3C38 		movq	(%rax,%r15), %rdi
 475 0431 E8000000 		call	libusb_get_device_descriptor@PLT
 475      00
 476 0436 85C0     		testl	%eax, %eax
 477 0438 0F85CA00 		jne	.L53
 477      0000
 478 043e 663B5C24 		cmpw	40(%rsp), %bx
 478      28
 479 0443 75D3     		jne	.L54
 480 0445 66443B6C 		cmpw	42(%rsp), %r13w
 480      242A
 481 044b 75CB     		jne	.L54
 482 044d 0FB74424 		movzwl	14(%rsp), %eax
 482      0E
 483 0452 663B4424 		cmpw	44(%rsp), %ax
 483      2C
 484 0457 75BF     		jne	.L54
 485              	.L55:
 486 0459 488B0424 		movq	(%rsp), %rax
 487 045d 31DB     		xorl	%ebx, %ebx
 488 045f C60001   		movb	$1, (%rax)
 489 0462 EB24     		jmp	.L47
 490              		.p2align 4,,10
 491 0464 0F1F4000 		.p2align 3
 492              	.L67:
 493 0468 89C7     		movl	%eax, %edi
 494 046a BB050000 		movl	$5, %ebx
 494      00
 495 046f E8000000 		call	libusb_error_name@PLT
 495      00
 496 0474 488D3500 		leaq	.LC7(%rip), %rsi
 496      000000
 497 047b 4889C2   		movq	%rax, %rdx
 498 047e 4C89F7   		movq	%r14, %rdi
 499 0481 31C0     		xorl	%eax, %eax
 500 0483 E8000000 		call	errRender@PLT
 500      00
 501              	.L47:
 502 0488 488B7C24 		movq	24(%rsp), %rdi
 502      18
 503 048d BE010000 		movl	$1, %esi
 503      00
 504 0492 E8000000 		call	libusb_free_device_list@PLT
 504      00
 505 0497 488B4C24 		movq	56(%rsp), %rcx
 505      38
 506 049c 6448330C 		xorq	%fs:40, %rcx
 506      25280000 
 506      00
 507 04a5 89D8     		movl	%ebx, %eax
 508 04a7 0F85DD00 		jne	.L69
 508      0000
 509 04ad 4883C448 		addq	$72, %rsp
 510              		.cfi_remember_state
 511              		.cfi_def_cfa_offset 56
 512 04b1 5B       		popq	%rbx
 513              		.cfi_def_cfa_offset 48
 514 04b2 5D       		popq	%rbp
 515              		.cfi_def_cfa_offset 40
 516 04b3 415C     		popq	%r12
 517              		.cfi_def_cfa_offset 32
 518 04b5 415D     		popq	%r13
 519              		.cfi_def_cfa_offset 24
 520 04b7 415E     		popq	%r14
 521              		.cfi_def_cfa_offset 16
 522 04b9 415F     		popq	%r15
 523              		.cfi_def_cfa_offset 8
 524 04bb C3       		ret
 525 04bc 0F1F4000 		.p2align 4,,10
 526              		.p2align 3
 527              	.L66:
 528              		.cfi_restore_state
 529 04c0 488D3500 		leaq	.LC6(%rip), %rsi
 529      000000
 530 04c7 4889D7   		movq	%rdx, %rdi
 531 04ca BB020000 		movl	$2, %ebx
 531      00
 532 04cf E8000000 		call	errPrefix@PLT
 532      00
 533 04d4 EBB2     		jmp	.L47
 534 04d6 662E0F1F 		.p2align 4,,10
 534      84000000 
 534      0000
 535              		.p2align 3
 536              	.L68:
 537 04e0 488D3500 		leaq	.LC8(%rip), %rsi
 537      000000
 538 04e7 4889EA   		movq	%rbp, %rdx
 539 04ea 4C89F7   		movq	%r14, %rdi
 540 04ed BB010000 		movl	$1, %ebx
 540      00
 541 04f2 E8000000 		call	errRender@PLT
 541      00
 542 04f7 EB8F     		jmp	.L47
 543 04f9 0F1F8000 		.p2align 4,,10
 543      000000
 544              		.p2align 3
 545              	.L62:
 546 0500 31DB     		xorl	%ebx, %ebx
 547 0502 EB84     		jmp	.L47
 548              		.p2align 4,,10
 549 0504 0F1F4000 		.p2align 3
 550              	.L53:
 551 0508 89C7     		movl	%eax, %edi
 552 050a BB090000 		movl	$9, %ebx
 552      00
 553 050f E8000000 		call	libusb_error_name@PLT
 553      00
 554 0514 488D3500 		leaq	.LC7(%rip), %rsi
 554      000000
 555 051b 4889C2   		movq	%rax, %rdx
 556 051e 4C89F7   		movq	%r14, %rdi
 557 0521 31C0     		xorl	%eax, %eax
 558 0523 E8000000 		call	errRender@PLT
 558      00
 559 0528 E95BFFFF 		jmp	.L47
 559      FF
 560              	.L50:
 561 052d 488B0424 		movq	(%rsp), %rax
 562 0531 C60000   		movb	$0, (%rax)
 563              	.L60:
 564 0534 4963C4   		movslq	%r12d, %rax
 565 0537 4589E4   		movl	%r12d, %r12d
 566 053a 4C8D3CC5 		leaq	-8(,%rax,8), %r15
 566      F8FFFFFF 
 567 0542 4C29E0   		subq	%r12, %rax
 568 0545 4C8D6424 		leaq	32(%rsp), %r12
 568      20
 569 054a 488D2CC5 		leaq	-8(,%rax,8), %rbp
 569      F8FFFFFF 
 570 0552 EB08     		jmp	.L52
 571              		.p2align 4,,10
 572 0554 0F1F4000 		.p2align 3
 573              	.L58:
 574 0558 4983EF08 		subq	$8, %r15
 575              	.L52:
 576 055c 4939EF   		cmpq	%rbp, %r15
 577 055f 749F     		je	.L62
 578 0561 488B4424 		movq	24(%rsp), %rax
 578      18
 579 0566 4C89E6   		movq	%r12, %rsi
 580 0569 4A8B3C38 		movq	(%rax,%r15), %rdi
 581 056d E8000000 		call	libusb_get_device_descriptor@PLT
 581      00
 582 0572 85C0     		testl	%eax, %eax
 583 0574 7592     		jne	.L53
 584 0576 663B5C24 		cmpw	40(%rsp), %bx
 584      28
 585 057b 75DB     		jne	.L58
 586 057d 66443B6C 		cmpw	42(%rsp), %r13w
 586      242A
 587 0583 75D3     		jne	.L58
 588 0585 E9CFFEFF 		jmp	.L55
 588      FF
 589              	.L69:
 590 058a E8000000 		call	__stack_chk_fail@PLT
 590      00
 591              		.cfi_endproc
 592              	.LFE94:
 594              		.section	.text.unlikely
 595              	.LCOLDE9:
 596              		.text
 597              	.LHOTE9:
 598              		.section	.rodata.str1.8
 599 00b2 00000000 		.align 8
 599      0000
 600              	.LC10:
 601 00b8 7573624F 		.string	"usbOpenDevice(): you forgot to call usbInitialise()!"
 601      70656E44 
 601      65766963 
 601      6528293A 
 601      20796F75 
 602 00ed 000000   		.align 8
 603              	.LC11:
 604 00f0 7573624F 		.string	"usbOpenDevice(): The supplied VID:PID:DID \"%s\" is invalid; it should look like 1D50:602
 604      70656E44 
 604      65766963 
 604      6528293A 
 604      20546865 
 605 015b 00000000 		.align 8
 605      00
 606              	.LC12:
 607 0160 7573624F 		.string	"usbOpenDevice(): Out of memory!"
 607      70656E44 
 607      65766963 
 607      6528293A 
 607      204F7574 
 608              		.section	.rodata.str1.1
 609              	.LC13:
 610 002f 7573624F 		.string	"usbOpenDevice()"
 610      70656E44 
 610      65766963 
 610      65282900 
 611              	.LC14:
 612 003f 7573624F 		.string	"usbOpenDevice(): %s"
 612      70656E44 
 612      65766963 
 612      6528293A 
 612      20257300 
 613              	.LC15:
 614 0053 64657669 		.string	"device not found"
 614      6365206E 
 614      6F742066 
 614      6F756E64 
 614      00
 615              		.section	.text.unlikely
 616              	.LCOLDB16:
 617              		.text
 618              	.LHOTB16:
 619 058f 90       		.p2align 4,,15
 620              		.globl	usbOpenDevice
 622              	usbOpenDevice:
 623              	.LFB97:
 624              		.cfi_startproc
 625 0590 4157     		pushq	%r15
 626              		.cfi_def_cfa_offset 16
 627              		.cfi_offset 15, -16
 628 0592 4156     		pushq	%r14
 629              		.cfi_def_cfa_offset 24
 630              		.cfi_offset 14, -24
 631 0594 4D89C6   		movq	%r8, %r14
 632 0597 4155     		pushq	%r13
 633              		.cfi_def_cfa_offset 32
 634              		.cfi_offset 13, -32
 635 0599 4154     		pushq	%r12
 636              		.cfi_def_cfa_offset 40
 637              		.cfi_offset 12, -40
 638 059b 55       		pushq	%rbp
 639              		.cfi_def_cfa_offset 48
 640              		.cfi_offset 6, -48
 641 059c 53       		pushq	%rbx
 642              		.cfi_def_cfa_offset 56
 643              		.cfi_offset 3, -56
 644 059d 4883EC78 		subq	$120, %rsp
 645              		.cfi_def_cfa_offset 176
 646 05a1 64488B04 		movq	%fs:40, %rax
 646      25280000 
 646      00
 647 05aa 48894424 		movq	%rax, 104(%rsp)
 647      68
 648 05af 31C0     		xorl	%eax, %eax
 649 05b1 48833D00 		cmpq	$0, m_ctx(%rip)
 649      00000000 
 650 05b9 89742420 		movl	%esi, 32(%rsp)
 651 05bd 89542414 		movl	%edx, 20(%rsp)
 652 05c1 894C2424 		movl	%ecx, 36(%rsp)
 653 05c5 4C894C24 		movq	%r9, 8(%rsp)
 653      08
 654 05ca 0F845802 		je	.L109
 654      0000
 655 05d0 4889FB   		movq	%rdi, %rbx
 656 05d3 E8000000 		call	usbValidateVidPid@PLT
 656      00
 657 05d8 84C0     		testb	%al, %al
 658 05da 754C     		jne	.L73
 659 05dc 488B7C24 		movq	8(%rsp), %rdi
 659      08
 660 05e1 488D3500 		leaq	.LC11(%rip), %rsi
 660      000000
 661 05e8 4889DA   		movq	%rbx, %rdx
 662 05eb BB010000 		movl	$1, %ebx
 662      00
 663 05f0 E8000000 		call	errRender@PLT
 663      00
 664              	.L72:
 665 05f5 49C70600 		movq	$0, (%r14)
 665      000000
 666              	.L96:
 667 05fc 488B4C24 		movq	104(%rsp), %rcx
 667      68
 668 0601 6448330C 		xorq	%fs:40, %rcx
 668      25280000 
 668      00
 669 060a 89D8     		movl	%ebx, %eax
 670 060c 0F85B903 		jne	.L110
 670      0000
 671 0612 4883C478 		addq	$120, %rsp
 672              		.cfi_remember_state
 673              		.cfi_def_cfa_offset 56
 674 0616 5B       		popq	%rbx
 675              		.cfi_def_cfa_offset 48
 676 0617 5D       		popq	%rbp
 677              		.cfi_def_cfa_offset 40
 678 0618 415C     		popq	%r12
 679              		.cfi_def_cfa_offset 32
 680 061a 415D     		popq	%r13
 681              		.cfi_def_cfa_offset 24
 682 061c 415E     		popq	%r14
 683              		.cfi_def_cfa_offset 16
 684 061e 415F     		popq	%r15
 685              		.cfi_def_cfa_offset 8
 686 0620 C3       		ret
 687              		.p2align 4,,10
 688 0621 0F1F8000 		.p2align 3
 688      000000
 689              	.L73:
 690              		.cfi_restore_state
 691 0628 31F6     		xorl	%esi, %esi
 692 062a BA100000 		movl	$16, %edx
 692      00
 693 062f 4889DF   		movq	%rbx, %rdi
 694 0632 E8000000 		call	strtoul@PLT
 694      00
 695 0637 488D7B05 		leaq	5(%rbx), %rdi
 696 063b BA100000 		movl	$16, %edx
 696      00
 697 0640 31F6     		xorl	%esi, %esi
 698 0642 4889C5   		movq	%rax, %rbp
 699 0645 E8000000 		call	strtoul@PLT
 699      00
 700 064a 4889DF   		movq	%rbx, %rdi
 701 064d 48894424 		movq	%rax, 40(%rsp)
 701      28
 702 0652 E8000000 		call	strlen@PLT
 702      00
 703 0657 31D2     		xorl	%edx, %edx
 704 0659 4883F80E 		cmpq	$14, %rax
 705 065d 66895424 		movw	%dx, 56(%rsp)
 705      38
 706 0662 0F843002 		je	.L111
 706      0000
 707              	.L74:
 708 0668 BF400000 		movl	$64, %edi
 708      00
 709 066d E8000000 		call	malloc@PLT
 709      00
 710 0672 4885C0   		testq	%rax, %rax
 711 0675 48894424 		movq	%rax, 24(%rsp)
 711      18
 712 067a 0F84F801 		je	.L112
 712      0000
 713 0680 488B1500 		movq	createTransfer@GOTPCREL(%rip), %rdx
 713      000000
 714 0687 4883C008 		addq	$8, %rax
 715 068b 488D0DBE 		leaq	destroyTransfer(%rip), %rcx
 715      F9FFFF
 716 0692 BE040000 		movl	$4, %esi
 716      00
 717 0697 4889C7   		movq	%rax, %rdi
 718 069a 48894424 		movq	%rax, 48(%rsp)
 718      30
 719 069f E8000000 		call	queueInit@PLT
 719      00
 720 06a4 85C0     		testl	%eax, %eax
 721 06a6 89C3     		movl	%eax, %ebx
 722 06a8 0F855201 		jne	.L113
 722      0000
 723 06ae 488B3D00 		movq	m_ctx(%rip), %rdi
 723      000000
 724 06b5 488D7424 		leaq	72(%rsp), %rsi
 724      48
 725 06ba 48C74424 		movq	$0, 64(%rsp)
 725      40000000 
 725      00
 726 06c3 E8000000 		call	libusb_get_device_list@PLT
 726      00
 727 06c8 85C0     		testl	%eax, %eax
 728 06ca 0F88A000 		js	.L88
 728      0000
 729 06d0 488B4424 		movq	72(%rsp), %rax
 729      48
 730 06d5 4C8B38   		movq	(%rax), %r15
 731 06d8 4D85FF   		testq	%r15, %r15
 732 06db 0F846B01 		je	.L80
 732      0000
 733 06e1 66837C24 		cmpw	$0, 56(%rsp)
 733      3800
 734 06e7 0F847302 		je	.L81
 734      0000
 735 06ed 41BD0800 		movl	$8, %r13d
 735      0000
 736 06f3 895C243C 		movl	%ebx, 60(%rsp)
 737 06f7 4C8D6424 		leaq	80(%rsp), %r12
 737      50
 738 06fc 4C89EB   		movq	%r13, %rbx
 739 06ff 4C8B6C24 		movq	40(%rsp), %r13
 739      28
 740 0704 EB20     		jmp	.L85
 741 0706 662E0F1F 		.p2align 4,,10
 741      84000000 
 741      0000
 742              		.p2align 3
 743              	.L83:
 744 0710 488B4424 		movq	72(%rsp), %rax
 744      48
 745 0715 4C8B3C18 		movq	(%rax,%rbx), %r15
 746 0719 4883C308 		addq	$8, %rbx
 747 071d 4D85FF   		testq	%r15, %r15
 748 0720 0F842201 		je	.L114
 748      0000
 749              	.L85:
 750 0726 4C89E6   		movq	%r12, %rsi
 751 0729 4C89FF   		movq	%r15, %rdi
 752 072c E8000000 		call	libusb_get_device_descriptor@PLT
 752      00
 753 0731 85C0     		testl	%eax, %eax
 754 0733 0F882F01 		js	.L105
 754      0000
 755 0739 66396C24 		cmpw	%bp, 88(%rsp)
 755      58
 756 073e 75D0     		jne	.L83
 757 0740 6644396C 		cmpw	%r13w, 90(%rsp)
 757      245A
 758 0746 75C8     		jne	.L83
 759 0748 0FB74424 		movzwl	56(%rsp), %eax
 759      38
 760 074d 663B4424 		cmpw	92(%rsp), %ax
 760      5C
 761 0752 75BC     		jne	.L83
 762 0754 8B5C243C 		movl	60(%rsp), %ebx
 763              	.L84:
 764 0758 488D7424 		leaq	64(%rsp), %rsi
 764      40
 765 075d 4C89FF   		movq	%r15, %rdi
 766 0760 E8000000 		call	libusb_open@PLT
 766      00
 767 0765 85C0     		testl	%eax, %eax
 768 0767 7924     		jns	.L79
 769 0769 0F1F8000 		.p2align 4,,10
 769      000000
 770              		.p2align 3
 771              	.L88:
 772 0770 89C7     		movl	%eax, %edi
 773 0772 E8000000 		call	libusb_error_name@PLT
 773      00
 774 0777 488B7C24 		movq	8(%rsp), %rdi
 774      08
 775 077c 4889C6   		movq	%rax, %rsi
 776 077f E8000000 		call	errPrefix@PLT
 776      00
 777 0784 48C74424 		movq	$0, 64(%rsp)
 777      40000000 
 777      00
 778              	.L79:
 779 078d 488B7C24 		movq	72(%rsp), %rdi
 779      48
 780 0792 BE010000 		movl	$1, %esi
 780      00
 781 0797 E8000000 		call	libusb_free_device_list@PLT
 781      00
 782 079c 488B6C24 		movq	64(%rsp), %rbp
 782      40
 783 07a1 4885ED   		testq	%rbp, %rbp
 784 07a4 0F846B01 		je	.L115
 784      0000
 785 07aa 8B742420 		movl	32(%rsp), %esi
 786 07ae 4889EF   		movq	%rbp, %rdi
 787 07b1 E8000000 		call	libusb_set_configuration@PLT
 787      00
 788 07b6 85C0     		testl	%eax, %eax
 789 07b8 0F88FA00 		js	.L116
 789      0000
 790 07be 8B742414 		movl	20(%rsp), %esi
 791 07c2 4889EF   		movq	%rbp, %rdi
 792 07c5 E8000000 		call	libusb_claim_interface@PLT
 792      00
 793 07ca 85C0     		testl	%eax, %eax
 794 07cc 0F881F01 		js	.L117
 794      0000
 795 07d2 8B542424 		movl	36(%rsp), %edx
 796 07d6 8B742414 		movl	20(%rsp), %esi
 797 07da 4889EF   		movq	%rbp, %rdi
 798 07dd E8000000 		call	libusb_set_interface_alt_setting@PLT
 798      00
 799 07e2 85C0     		testl	%eax, %eax
 800 07e4 0F884301 		js	.L118
 800      0000
 801 07ea 488B4424 		movq	24(%rsp), %rax
 801      18
 802 07ef 488928   		movq	%rbp, (%rax)
 803 07f2 498906   		movq	%rax, (%r14)
 804 07f5 E902FEFF 		jmp	.L96
 804      FF
 805 07fa 660F1F44 		.p2align 4,,10
 805      0000
 806              		.p2align 3
 807              	.L113:
 808 0800 488B7C24 		movq	8(%rsp), %rdi
 808      08
 809 0805 488D3500 		leaq	.LC12(%rip), %rsi
 809      000000
 810 080c BB0C0000 		movl	$12, %ebx
 810      00
 811 0811 E8000000 		call	errPrefix@PLT
 811      00
 812              	.L77:
 813 0816 488B7C24 		movq	24(%rsp), %rdi
 813      18
 814 081b E8000000 		call	free@PLT
 814      00
 815 0820 E9D0FDFF 		jmp	.L72
 815      FF
 816              		.p2align 4,,10
 817 0825 0F1F00   		.p2align 3
 818              	.L109:
 819 0828 488D3500 		leaq	.LC10(%rip), %rsi
 819      000000
 820 082f 4C89CF   		movq	%r9, %rdi
 821 0832 BB020000 		movl	$2, %ebx
 821      00
 822 0837 E8000000 		call	errPrefix@PLT
 822      00
 823 083c E9B4FDFF 		jmp	.L72
 823      FF
 824              		.p2align 4,,10
 825 0841 0F1F8000 		.p2align 3
 825      000000
 826              	.L114:
 827 0848 8B5C243C 		movl	60(%rsp), %ebx
 828              	.L80:
 829 084c 488B7C24 		movq	8(%rsp), %rdi
 829      08
 830 0851 488D3500 		leaq	.LC15(%rip), %rsi
 830      000000
 831 0858 31C0     		xorl	%eax, %eax
 832 085a E8000000 		call	errRender@PLT
 832      00
 833 085f E929FFFF 		jmp	.L79
 833      FF
 834              		.p2align 4,,10
 835 0864 0F1F4000 		.p2align 3
 836              	.L105:
 837 0868 8B5C243C 		movl	60(%rsp), %ebx
 838 086c E9FFFEFF 		jmp	.L88
 838      FF
 839              		.p2align 4,,10
 840 0871 0F1F8000 		.p2align 3
 840      000000
 841              	.L112:
 842 0878 488B7C24 		movq	8(%rsp), %rdi
 842      08
 843 087d 488D3500 		leaq	.LC12(%rip), %rsi
 843      000000
 844 0884 BB0C0000 		movl	$12, %ebx
 844      00
 845 0889 E8000000 		call	errPrefix@PLT
 845      00
 846 088e E962FDFF 		jmp	.L72
 846      FF
 847              		.p2align 4,,10
 848 0893 0F1F4400 		.p2align 3
 848      00
 849              	.L111:
 850 0898 488D7B0A 		leaq	10(%rbx), %rdi
 851 089c BA100000 		movl	$16, %edx
 851      00
 852 08a1 31F6     		xorl	%esi, %esi
 853 08a3 E8000000 		call	strtoul@PLT
 853      00
 854 08a8 66894424 		movw	%ax, 56(%rsp)
 854      38
 855 08ad E9B6FDFF 		jmp	.L74
 855      FF
 856              		.p2align 4,,10
 857 08b2 660F1F44 		.p2align 3
 857      0000
 858              	.L116:
 859 08b8 89C7     		movl	%eax, %edi
 860 08ba BB060000 		movl	$6, %ebx
 860      00
 861 08bf E8000000 		call	libusb_error_name@PLT
 861      00
 862 08c4 488B7C24 		movq	8(%rsp), %rdi
 862      08
 863 08c9 488D3500 		leaq	.LC14(%rip), %rsi
 863      000000
 864 08d0 4889C2   		movq	%rax, %rdx
 865 08d3 31C0     		xorl	%eax, %eax
 866 08d5 E8000000 		call	errRender@PLT
 866      00
 867              	.L93:
 868 08da 4889EF   		movq	%rbp, %rdi
 869 08dd E8000000 		call	libusb_close@PLT
 869      00
 870              	.L91:
 871 08e2 488B7C24 		movq	48(%rsp), %rdi
 871      30
 872 08e7 E8000000 		call	queueDestroy@PLT
 872      00
 873 08ec E925FFFF 		jmp	.L77
 873      FF
 874              	.L117:
 875 08f1 89C7     		movl	%eax, %edi
 876 08f3 BB070000 		movl	$7, %ebx
 876      00
 877 08f8 E8000000 		call	libusb_error_name@PLT
 877      00
 878 08fd 488B7C24 		movq	8(%rsp), %rdi
 878      08
 879 0902 488D3500 		leaq	.LC14(%rip), %rsi
 879      000000
 880 0909 4889C2   		movq	%rax, %rdx
 881 090c 31C0     		xorl	%eax, %eax
 882 090e E8000000 		call	errRender@PLT
 882      00
 883 0913 EBC5     		jmp	.L93
 884              	.L115:
 885 0915 488B7C24 		movq	8(%rsp), %rdi
 885      08
 886 091a 488D3500 		leaq	.LC13(%rip), %rsi
 886      000000
 887 0921 BB050000 		movl	$5, %ebx
 887      00
 888 0926 E8000000 		call	errPrefix@PLT
 888      00
 889 092b EBB5     		jmp	.L91
 890              	.L118:
 891 092d 89C7     		movl	%eax, %edi
 892 092f BB080000 		movl	$8, %ebx
 892      00
 893 0934 E8000000 		call	libusb_error_name@PLT
 893      00
 894 0939 488B7C24 		movq	8(%rsp), %rdi
 894      08
 895 093e 488D3500 		leaq	.LC14(%rip), %rsi
 895      000000
 896 0945 4889C2   		movq	%rax, %rdx
 897 0948 31C0     		xorl	%eax, %eax
 898 094a E8000000 		call	errRender@PLT
 898      00
 899 094f 8B742414 		movl	20(%rsp), %esi
 900 0953 4889EF   		movq	%rbp, %rdi
 901 0956 E8000000 		call	libusb_release_interface@PLT
 901      00
 902 095b E97AFFFF 		jmp	.L93
 902      FF
 903              	.L81:
 904 0960 B9080000 		movl	$8, %ecx
 904      00
 905 0965 895C2438 		movl	%ebx, 56(%rsp)
 906 0969 4C8D6424 		leaq	80(%rsp), %r12
 906      50
 907 096e 4C8B6C24 		movq	40(%rsp), %r13
 907      28
 908 0973 4889CB   		movq	%rcx, %rbx
 909 0976 EB1A     		jmp	.L89
 910 0978 0F1F8400 		.p2align 4,,10
 910      00000000 
 911              		.p2align 3
 912              	.L87:
 913 0980 488B4424 		movq	72(%rsp), %rax
 913      48
 914 0985 4C8B3C18 		movq	(%rax,%rbx), %r15
 915 0989 4883C308 		addq	$8, %rbx
 916 098d 4D85FF   		testq	%r15, %r15
 917 0990 7430     		je	.L119
 918              	.L89:
 919 0992 4C89E6   		movq	%r12, %rsi
 920 0995 4C89FF   		movq	%r15, %rdi
 921 0998 E8000000 		call	libusb_get_device_descriptor@PLT
 921      00
 922 099d 85C0     		testl	%eax, %eax
 923 099f 7818     		js	.L120
 924 09a1 66396C24 		cmpw	%bp, 88(%rsp)
 924      58
 925 09a6 75D8     		jne	.L87
 926 09a8 6644396C 		cmpw	%r13w, 90(%rsp)
 926      245A
 927 09ae 75D0     		jne	.L87
 928 09b0 8B5C2438 		movl	56(%rsp), %ebx
 929 09b4 E99FFDFF 		jmp	.L84
 929      FF
 930              	.L120:
 931 09b9 8B5C2438 		movl	56(%rsp), %ebx
 932 09bd E9AEFDFF 		jmp	.L88
 932      FF
 933              	.L119:
 934 09c2 8B5C2438 		movl	56(%rsp), %ebx
 935 09c6 E981FEFF 		jmp	.L80
 935      FF
 936              	.L110:
 937 09cb E8000000 		call	__stack_chk_fail@PLT
 937      00
 938              		.cfi_endproc
 939              	.LFE97:
 941              		.section	.text.unlikely
 942              	.LCOLDE16:
 943              		.text
 944              	.LHOTE16:
 945              		.section	.text.unlikely
 946              	.LCOLDB17:
 947              		.text
 948              	.LHOTB17:
 949              		.p2align 4,,15
 950              		.globl	usbCloseDevice
 952              	usbCloseDevice:
 953              	.LFB98:
 954              		.cfi_startproc
 955 09d0 4885FF   		testq	%rdi, %rdi
 956 09d3 743B     		je	.L124
 957 09d5 55       		pushq	%rbp
 958              		.cfi_def_cfa_offset 16
 959              		.cfi_offset 6, -16
 960 09d6 53       		pushq	%rbx
 961              		.cfi_def_cfa_offset 24
 962              		.cfi_offset 3, -24
 963 09d7 4889FB   		movq	%rdi, %rbx
 964 09da 4883EC08 		subq	$8, %rsp
 965              		.cfi_def_cfa_offset 32
 966 09de 488B2F   		movq	(%rdi), %rbp
 967 09e1 4889EF   		movq	%rbp, %rdi
 968 09e4 E8000000 		call	libusb_release_interface@PLT
 968      00
 969 09e9 4889EF   		movq	%rbp, %rdi
 970 09ec E8000000 		call	libusb_close@PLT
 970      00
 971 09f1 488D7B08 		leaq	8(%rbx), %rdi
 972 09f5 E8000000 		call	queueDestroy@PLT
 972      00
 973 09fa 4883C408 		addq	$8, %rsp
 974              		.cfi_def_cfa_offset 24
 975 09fe 4889DF   		movq	%rbx, %rdi
 976 0a01 5B       		popq	%rbx
 977              		.cfi_restore 3
 978              		.cfi_def_cfa_offset 16
 979 0a02 5D       		popq	%rbp
 980              		.cfi_restore 6
 981              		.cfi_def_cfa_offset 8
 982 0a03 E9000000 		jmp	free@PLT
 982      00
 983 0a08 0F1F8400 		.p2align 4,,10
 983      00000000 
 984              		.p2align 3
 985              	.L124:
 986 0a10 F3C3     		rep ret
 987              		.cfi_endproc
 988              	.LFE98:
 990              		.section	.text.unlikely
 991              	.LCOLDE17:
 992              		.text
 993              	.LHOTE17:
 994              		.section	.rodata.str1.1
 995              	.LC18:
 996 0064 75736243 		.string	"usbControlRead(): Timeout!"
 996      6F6E7472 
 996      6F6C5265 
 996      61642829 
 996      3A205469 
 997              	.LC19:
 998 007f 75736243 		.string	"usbControlRead(): %s"
 998      6F6E7472 
 998      6F6C5265 
 998      61642829 
 998      3A202573 
 999              		.section	.rodata.str1.8
 1000              		.align 8
 1001              	.LC20:
 1002 0180 75736243 		.string	"usbControlRead(): Expected to read %d bytes but actually read %d"
 1002      6F6E7472 
 1002      6F6C5265 
 1002      61642829 
 1002      3A204578 
 1003              		.section	.text.unlikely
 1004              	.LCOLDB21:
 1005              		.text
 1006              	.LHOTB21:
 1007 0a12 0F1F4000 		.p2align 4,,15
 1007      662E0F1F 
 1007      84000000 
 1007      0000
 1008              		.globl	usbControlRead
 1010              	usbControlRead:
 1011              	.LFB99:
 1012              		.cfi_startproc
 1013 0a20 53       		pushq	%rbx
 1014              		.cfi_def_cfa_offset 16
 1015              		.cfi_offset 3, -16
 1016 0a21 0FB7C2   		movzwl	%dx, %eax
 1017 0a24 400FB6D6 		movzbl	%sil, %edx
 1018 0a28 8B742410 		movl	16(%rsp), %esi
 1019 0a2c 410FB7D9 		movzwl	%r9w, %ebx
 1020 0a30 488B3F   		movq	(%rdi), %rdi
 1021 0a33 4D89C1   		movq	%r8, %r9
 1022 0a36 440FB7C1 		movzwl	%cx, %r8d
 1023 0a3a 89C1     		movl	%eax, %ecx
 1024 0a3c 56       		pushq	%rsi
 1025              		.cfi_def_cfa_offset 24
 1026 0a3d 53       		pushq	%rbx
 1027              		.cfi_def_cfa_offset 32
 1028 0a3e BEC00000 		movl	$192, %esi
 1028      00
 1029 0a43 E8000000 		call	libusb_control_transfer@PLT
 1029      00
 1030 0a48 83F8F9   		cmpl	$-7, %eax
 1031 0a4b 5A       		popq	%rdx
 1032              		.cfi_def_cfa_offset 24
 1033 0a4c 59       		popq	%rcx
 1034              		.cfi_def_cfa_offset 16
 1035 0a4d 7429     		je	.L131
 1036 0a4f 85C0     		testl	%eax, %eax
 1037 0a51 89C1     		movl	%eax, %ecx
 1038 0a53 783B     		js	.L132
 1039 0a55 31C0     		xorl	%eax, %eax
 1040 0a57 39CB     		cmpl	%ecx, %ebx
 1041 0a59 7418     		je	.L127
 1042 0a5b 488B7C24 		movq	24(%rsp), %rdi
 1042      18
 1043 0a60 488D3500 		leaq	.LC20(%rip), %rsi
 1043      000000
 1044 0a67 89DA     		movl	%ebx, %edx
 1045 0a69 E8000000 		call	errRender@PLT
 1045      00
 1046 0a6e B80A0000 		movl	$10, %eax
 1046      00
 1047              	.L127:
 1048 0a73 5B       		popq	%rbx
 1049              		.cfi_remember_state
 1050              		.cfi_def_cfa_offset 8
 1051 0a74 C3       		ret
 1052              		.p2align 4,,10
 1053 0a75 0F1F00   		.p2align 3
 1054              	.L131:
 1055              		.cfi_restore_state
 1056 0a78 488B7C24 		movq	24(%rsp), %rdi
 1056      18
 1057 0a7d 488D3500 		leaq	.LC18(%rip), %rsi
 1057      000000
 1058 0a84 E8000000 		call	errPrefix@PLT
 1058      00
 1059 0a89 B8120000 		movl	$18, %eax
 1059      00
 1060 0a8e 5B       		popq	%rbx
 1061              		.cfi_remember_state
 1062              		.cfi_def_cfa_offset 8
 1063 0a8f C3       		ret
 1064              		.p2align 4,,10
 1065              		.p2align 3
 1066              	.L132:
 1067              		.cfi_restore_state
 1068 0a90 89C7     		movl	%eax, %edi
 1069 0a92 E8000000 		call	libusb_error_name@PLT
 1069      00
 1070 0a97 488B7C24 		movq	24(%rsp), %rdi
 1070      18
 1071 0a9c 488D3500 		leaq	.LC19(%rip), %rsi
 1071      000000
 1072 0aa3 4889C2   		movq	%rax, %rdx
 1073 0aa6 31C0     		xorl	%eax, %eax
 1074 0aa8 E8000000 		call	errRender@PLT
 1074      00
 1075 0aad B80A0000 		movl	$10, %eax
 1075      00
 1076 0ab2 5B       		popq	%rbx
 1077              		.cfi_def_cfa_offset 8
 1078 0ab3 C3       		ret
 1079              		.cfi_endproc
 1080              	.LFE99:
 1082              		.section	.text.unlikely
 1083              	.LCOLDE21:
 1084              		.text
 1085              	.LHOTE21:
 1086              		.section	.rodata.str1.1
 1087              	.LC22:
 1088 0094 75736243 		.string	"usbControlWrite(): Timeout"
 1088      6F6E7472 
 1088      6F6C5772 
 1088      69746528 
 1088      293A2054 
 1089              	.LC23:
 1090 00af 75736243 		.string	"usbControlWrite(): %s"
 1090      6F6E7472 
 1090      6F6C5772 
 1090      69746528 
 1090      293A2025 
 1091              		.section	.rodata.str1.8
 1092 01c1 00000000 		.align 8
 1092      000000
 1093              	.LC24:
 1094 01c8 75736243 		.string	"usbControlWrite(): Expected to write %d bytes but actually wrote %d"
 1094      6F6E7472 
 1094      6F6C5772 
 1094      69746528 
 1094      293A2045 
 1095              		.section	.text.unlikely
 1096              	.LCOLDB25:
 1097              		.text
 1098              	.LHOTB25:
 1099 0ab4 6690662E 		.p2align 4,,15
 1099      0F1F8400 
 1099      00000000 
 1100              		.globl	usbControlWrite
 1102              	usbControlWrite:
 1103              	.LFB100:
 1104              		.cfi_startproc
 1105 0ac0 53       		pushq	%rbx
 1106              		.cfi_def_cfa_offset 16
 1107              		.cfi_offset 3, -16
 1108 0ac1 0FB7C2   		movzwl	%dx, %eax
 1109 0ac4 400FB6D6 		movzbl	%sil, %edx
 1110 0ac8 8B742410 		movl	16(%rsp), %esi
 1111 0acc 410FB7D9 		movzwl	%r9w, %ebx
 1112 0ad0 488B3F   		movq	(%rdi), %rdi
 1113 0ad3 4D89C1   		movq	%r8, %r9
 1114 0ad6 440FB7C1 		movzwl	%cx, %r8d
 1115 0ada 89C1     		movl	%eax, %ecx
 1116 0adc 56       		pushq	%rsi
 1117              		.cfi_def_cfa_offset 24
 1118 0add 53       		pushq	%rbx
 1119              		.cfi_def_cfa_offset 32
 1120 0ade BE400000 		movl	$64, %esi
 1120      00
 1121 0ae3 E8000000 		call	libusb_control_transfer@PLT
 1121      00
 1122 0ae8 83F8F9   		cmpl	$-7, %eax
 1123 0aeb 5A       		popq	%rdx
 1124              		.cfi_def_cfa_offset 24
 1125 0aec 59       		popq	%rcx
 1126              		.cfi_def_cfa_offset 16
 1127 0aed 7429     		je	.L139
 1128 0aef 85C0     		testl	%eax, %eax
 1129 0af1 89C1     		movl	%eax, %ecx
 1130 0af3 783B     		js	.L140
 1131 0af5 31C0     		xorl	%eax, %eax
 1132 0af7 39CB     		cmpl	%ecx, %ebx
 1133 0af9 7418     		je	.L135
 1134 0afb 488B7C24 		movq	24(%rsp), %rdi
 1134      18
 1135 0b00 488D3500 		leaq	.LC24(%rip), %rsi
 1135      000000
 1136 0b07 89DA     		movl	%ebx, %edx
 1137 0b09 E8000000 		call	errRender@PLT
 1137      00
 1138 0b0e B80A0000 		movl	$10, %eax
 1138      00
 1139              	.L135:
 1140 0b13 5B       		popq	%rbx
 1141              		.cfi_remember_state
 1142              		.cfi_def_cfa_offset 8
 1143 0b14 C3       		ret
 1144              		.p2align 4,,10
 1145 0b15 0F1F00   		.p2align 3
 1146              	.L139:
 1147              		.cfi_restore_state
 1148 0b18 488B7C24 		movq	24(%rsp), %rdi
 1148      18
 1149 0b1d 488D3500 		leaq	.LC22(%rip), %rsi
 1149      000000
 1150 0b24 E8000000 		call	errPrefix@PLT
 1150      00
 1151 0b29 B8120000 		movl	$18, %eax
 1151      00
 1152 0b2e 5B       		popq	%rbx
 1153              		.cfi_remember_state
 1154              		.cfi_def_cfa_offset 8
 1155 0b2f C3       		ret
 1156              		.p2align 4,,10
 1157              		.p2align 3
 1158              	.L140:
 1159              		.cfi_restore_state
 1160 0b30 89C7     		movl	%eax, %edi
 1161 0b32 E8000000 		call	libusb_error_name@PLT
 1161      00
 1162 0b37 488B7C24 		movq	24(%rsp), %rdi
 1162      18
 1163 0b3c 488D3500 		leaq	.LC23(%rip), %rsi
 1163      000000
 1164 0b43 4889C2   		movq	%rax, %rdx
 1165 0b46 31C0     		xorl	%eax, %eax
 1166 0b48 E8000000 		call	errRender@PLT
 1166      00
 1167 0b4d B80A0000 		movl	$10, %eax
 1167      00
 1168 0b52 5B       		popq	%rbx
 1169              		.cfi_def_cfa_offset 8
 1170 0b53 C3       		ret
 1171              		.cfi_endproc
 1172              	.LFE100:
 1174              		.section	.text.unlikely
 1175              	.LCOLDE25:
 1176              		.text
 1177              	.LHOTE25:
 1178              		.section	.rodata.str1.1
 1179              	.LC26:
 1180 00c5 75736242 		.string	"usbBulkRead(): Timeout"
 1180      756C6B52 
 1180      65616428 
 1180      293A2054 
 1180      696D656F 
 1181              	.LC27:
 1182 00dc 75736242 		.string	"usbBulkRead(): %s"
 1182      756C6B52 
 1182      65616428 
 1182      293A2025 
 1182      7300
 1183              		.section	.rodata.str1.8
 1184 020c 00000000 		.align 8
 1185              	.LC28:
 1186 0210 75736242 		.string	"usbBulkRead(): Expected to read %d bytes but actually read %d (status = %d): %s"
 1186      756C6B52 
 1186      65616428 
 1186      293A2045 
 1186      78706563 
 1187              		.section	.text.unlikely
 1188              	.LCOLDB29:
 1189              		.text
 1190              	.LHOTB29:
 1191 0b54 6690662E 		.p2align 4,,15
 1191      0F1F8400 
 1191      00000000 
 1192              		.globl	usbBulkRead
 1194              	usbBulkRead:
 1195              	.LFB101:
 1196              		.cfi_startproc
 1197 0b60 4154     		pushq	%r12
 1198              		.cfi_def_cfa_offset 16
 1199              		.cfi_offset 12, -16
 1200 0b62 55       		pushq	%rbp
 1201              		.cfi_def_cfa_offset 24
 1202              		.cfi_offset 6, -24
 1203 0b63 83CE80   		orl	$-128, %esi
 1204 0b66 53       		pushq	%rbx
 1205              		.cfi_def_cfa_offset 32
 1206              		.cfi_offset 3, -32
 1207 0b67 4D89CC   		movq	%r9, %r12
 1208 0b6a 4589C1   		movl	%r8d, %r9d
 1209 0b6d 400FB6F6 		movzbl	%sil, %esi
 1210 0b71 89CD     		movl	%ecx, %ebp
 1211 0b73 4883EC10 		subq	$16, %rsp
 1212              		.cfi_def_cfa_offset 48
 1213 0b77 488B3F   		movq	(%rdi), %rdi
 1214 0b7a 4C8D4424 		leaq	4(%rsp), %r8
 1214      04
 1215 0b7f 64488B04 		movq	%fs:40, %rax
 1215      25280000 
 1215      00
 1216 0b88 48894424 		movq	%rax, 8(%rsp)
 1216      08
 1217 0b8d 31C0     		xorl	%eax, %eax
 1218 0b8f E8000000 		call	libusb_bulk_transfer@PLT
 1218      00
 1219 0b94 83F8F9   		cmpl	$-7, %eax
 1220 0b97 7457     		je	.L148
 1221 0b99 85C0     		testl	%eax, %eax
 1222 0b9b 89C3     		movl	%eax, %ebx
 1223 0b9d 7871     		js	.L149
 1224 0b9f 31C0     		xorl	%eax, %eax
 1225 0ba1 3B6C2404 		cmpl	4(%rsp), %ebp
 1226 0ba5 7429     		je	.L143
 1227 0ba7 89DF     		movl	%ebx, %edi
 1228 0ba9 E8000000 		call	libusb_error_name@PLT
 1228      00
 1229 0bae 8B4C2404 		movl	4(%rsp), %ecx
 1230 0bb2 488D3500 		leaq	.LC28(%rip), %rsi
 1230      000000
 1231 0bb9 4989C1   		movq	%rax, %r9
 1232 0bbc 4189D8   		movl	%ebx, %r8d
 1233 0bbf 31C0     		xorl	%eax, %eax
 1234 0bc1 89EA     		movl	%ebp, %edx
 1235 0bc3 4C89E7   		movq	%r12, %rdi
 1236 0bc6 E8000000 		call	errRender@PLT
 1236      00
 1237 0bcb B80B0000 		movl	$11, %eax
 1237      00
 1238              	.L143:
 1239 0bd0 488B4C24 		movq	8(%rsp), %rcx
 1239      08
 1240 0bd5 6448330C 		xorq	%fs:40, %rcx
 1240      25280000 
 1240      00
 1241 0bde 7552     		jne	.L150
 1242 0be0 4883C410 		addq	$16, %rsp
 1243              		.cfi_remember_state
 1244              		.cfi_def_cfa_offset 32
 1245 0be4 5B       		popq	%rbx
 1246              		.cfi_def_cfa_offset 24
 1247 0be5 5D       		popq	%rbp
 1248              		.cfi_def_cfa_offset 16
 1249 0be6 415C     		popq	%r12
 1250              		.cfi_def_cfa_offset 8
 1251 0be8 C3       		ret
 1252 0be9 0F1F8000 		.p2align 4,,10
 1252      000000
 1253              		.p2align 3
 1254              	.L148:
 1255              		.cfi_restore_state
 1256 0bf0 488D3500 		leaq	.LC26(%rip), %rsi
 1256      000000
 1257 0bf7 4C89E7   		movq	%r12, %rdi
 1258 0bfa E8000000 		call	errPrefix@PLT
 1258      00
 1259 0bff B8120000 		movl	$18, %eax
 1259      00
 1260 0c04 EBCA     		jmp	.L143
 1261 0c06 662E0F1F 		.p2align 4,,10
 1261      84000000 
 1261      0000
 1262              		.p2align 3
 1263              	.L149:
 1264 0c10 89C7     		movl	%eax, %edi
 1265 0c12 E8000000 		call	libusb_error_name@PLT
 1265      00
 1266 0c17 488D3500 		leaq	.LC27(%rip), %rsi
 1266      000000
 1267 0c1e 4889C2   		movq	%rax, %rdx
 1268 0c21 4C89E7   		movq	%r12, %rdi
 1269 0c24 31C0     		xorl	%eax, %eax
 1270 0c26 E8000000 		call	errRender@PLT
 1270      00
 1271 0c2b B80B0000 		movl	$11, %eax
 1271      00
 1272 0c30 EB9E     		jmp	.L143
 1273              	.L150:
 1274 0c32 E8000000 		call	__stack_chk_fail@PLT
 1274      00
 1275              		.cfi_endproc
 1276              	.LFE101:
 1278              		.section	.text.unlikely
 1279              	.LCOLDE29:
 1280              		.text
 1281              	.LHOTE29:
 1282              		.section	.rodata.str1.1
 1283              	.LC30:
 1284 00ee 75736242 		.string	"usbBulkWrite(): Timeout"
 1284      756C6B57 
 1284      72697465 
 1284      28293A20 
 1284      54696D65 
 1285              	.LC31:
 1286 0106 75736242 		.string	"usbBulkWrite(): %s"
 1286      756C6B57 
 1286      72697465 
 1286      28293A20 
 1286      257300
 1287              		.section	.rodata.str1.8
 1288              		.align 8
 1289              	.LC32:
 1290 0260 75736242 		.string	"usbBulkWrite(): Expected to write %d bytes but actually wrote %d (status = %d): %s"
 1290      756C6B57 
 1290      72697465 
 1290      28293A20 
 1290      45787065 
 1291              		.section	.text.unlikely
 1292              	.LCOLDB33:
 1293              		.text
 1294              	.LHOTB33:
 1295 0c37 660F1F84 		.p2align 4,,15
 1295      00000000 
 1295      00
 1296              		.globl	usbBulkWrite
 1298              	usbBulkWrite:
 1299              	.LFB102:
 1300              		.cfi_startproc
 1301 0c40 4154     		pushq	%r12
 1302              		.cfi_def_cfa_offset 16
 1303              		.cfi_offset 12, -16
 1304 0c42 55       		pushq	%rbp
 1305              		.cfi_def_cfa_offset 24
 1306              		.cfi_offset 6, -24
 1307 0c43 4D89CC   		movq	%r9, %r12
 1308 0c46 53       		pushq	%rbx
 1309              		.cfi_def_cfa_offset 32
 1310              		.cfi_offset 3, -32
 1311 0c47 4589C1   		movl	%r8d, %r9d
 1312 0c4a 400FB6F6 		movzbl	%sil, %esi
 1313 0c4e 89CD     		movl	%ecx, %ebp
 1314 0c50 4883EC10 		subq	$16, %rsp
 1315              		.cfi_def_cfa_offset 48
 1316 0c54 488B3F   		movq	(%rdi), %rdi
 1317 0c57 4C8D4424 		leaq	4(%rsp), %r8
 1317      04
 1318 0c5c 64488B04 		movq	%fs:40, %rax
 1318      25280000 
 1318      00
 1319 0c65 48894424 		movq	%rax, 8(%rsp)
 1319      08
 1320 0c6a 31C0     		xorl	%eax, %eax
 1321 0c6c E8000000 		call	libusb_bulk_transfer@PLT
 1321      00
 1322 0c71 83F8F9   		cmpl	$-7, %eax
 1323 0c74 745A     		je	.L158
 1324 0c76 85C0     		testl	%eax, %eax
 1325 0c78 89C3     		movl	%eax, %ebx
 1326 0c7a 7874     		js	.L159
 1327 0c7c 31C0     		xorl	%eax, %eax
 1328 0c7e 3B6C2404 		cmpl	4(%rsp), %ebp
 1329 0c82 7429     		je	.L153
 1330 0c84 89DF     		movl	%ebx, %edi
 1331 0c86 E8000000 		call	libusb_error_name@PLT
 1331      00
 1332 0c8b 8B4C2404 		movl	4(%rsp), %ecx
 1333 0c8f 488D3500 		leaq	.LC32(%rip), %rsi
 1333      000000
 1334 0c96 4989C1   		movq	%rax, %r9
 1335 0c99 4189D8   		movl	%ebx, %r8d
 1336 0c9c 31C0     		xorl	%eax, %eax
 1337 0c9e 89EA     		movl	%ebp, %edx
 1338 0ca0 4C89E7   		movq	%r12, %rdi
 1339 0ca3 E8000000 		call	errRender@PLT
 1339      00
 1340 0ca8 B80B0000 		movl	$11, %eax
 1340      00
 1341              	.L153:
 1342 0cad 488B4C24 		movq	8(%rsp), %rcx
 1342      08
 1343 0cb2 6448330C 		xorq	%fs:40, %rcx
 1343      25280000 
 1343      00
 1344 0cbb 7555     		jne	.L160
 1345 0cbd 4883C410 		addq	$16, %rsp
 1346              		.cfi_remember_state
 1347              		.cfi_def_cfa_offset 32
 1348 0cc1 5B       		popq	%rbx
 1349              		.cfi_def_cfa_offset 24
 1350 0cc2 5D       		popq	%rbp
 1351              		.cfi_def_cfa_offset 16
 1352 0cc3 415C     		popq	%r12
 1353              		.cfi_def_cfa_offset 8
 1354 0cc5 C3       		ret
 1355 0cc6 662E0F1F 		.p2align 4,,10
 1355      84000000 
 1355      0000
 1356              		.p2align 3
 1357              	.L158:
 1358              		.cfi_restore_state
 1359 0cd0 488D3500 		leaq	.LC30(%rip), %rsi
 1359      000000
 1360 0cd7 4C89E7   		movq	%r12, %rdi
 1361 0cda E8000000 		call	errPrefix@PLT
 1361      00
 1362 0cdf B8120000 		movl	$18, %eax
 1362      00
 1363 0ce4 EBC7     		jmp	.L153
 1364 0ce6 662E0F1F 		.p2align 4,,10
 1364      84000000 
 1364      0000
 1365              		.p2align 3
 1366              	.L159:
 1367 0cf0 89C7     		movl	%eax, %edi
 1368 0cf2 E8000000 		call	libusb_error_name@PLT
 1368      00
 1369 0cf7 488D3500 		leaq	.LC31(%rip), %rsi
 1369      000000
 1370 0cfe 4889C2   		movq	%rax, %rdx
 1371 0d01 4C89E7   		movq	%r12, %rdi
 1372 0d04 31C0     		xorl	%eax, %eax
 1373 0d06 E8000000 		call	errRender@PLT
 1373      00
 1374 0d0b B80B0000 		movl	$11, %eax
 1374      00
 1375 0d10 EB9B     		jmp	.L153
 1376              	.L160:
 1377 0d12 E8000000 		call	__stack_chk_fail@PLT
 1377      00
 1378              		.cfi_endproc
 1379              	.LFE102:
 1381              		.section	.text.unlikely
 1382              	.LCOLDE33:
 1383              		.text
 1384              	.LHOTE33:
 1385              		.section	.rodata.str1.8
 1386 02b3 00000000 		.align 8
 1386      00
 1387              	.LC34:
 1388 02b8 75736242 		.string	"usbBulkWriteAsync(): Submission error: %s"
 1388      756C6B57 
 1388      72697465 
 1388      4173796E 
 1388      6328293A 
 1389              		.section	.text.unlikely
 1390              	.LCOLDB35:
 1391              		.text
 1392              	.LHOTB35:
 1393 0d17 660F1F84 		.p2align 4,,15
 1393      00000000 
 1393      00
 1394              		.globl	usbBulkWriteAsync
 1396              	usbBulkWriteAsync:
 1397              	.LFB104:
 1398              		.cfi_startproc
 1399 0d20 4157     		pushq	%r15
 1400              		.cfi_def_cfa_offset 16
 1401              		.cfi_offset 15, -16
 1402 0d22 4156     		pushq	%r14
 1403              		.cfi_def_cfa_offset 24
 1404              		.cfi_offset 14, -24
 1405 0d24 4989FE   		movq	%rdi, %r14
 1406 0d27 4155     		pushq	%r13
 1407              		.cfi_def_cfa_offset 32
 1408              		.cfi_offset 13, -32
 1409 0d29 4154     		pushq	%r12
 1410              		.cfi_def_cfa_offset 40
 1411              		.cfi_offset 12, -40
 1412 0d2b 4189F5   		movl	%esi, %r13d
 1413 0d2e 55       		pushq	%rbp
 1414              		.cfi_def_cfa_offset 48
 1415              		.cfi_offset 6, -48
 1416 0d2f 53       		pushq	%rbx
 1417              		.cfi_def_cfa_offset 56
 1418              		.cfi_offset 3, -56
 1419 0d30 488D5F08 		leaq	8(%rdi), %rbx
 1420 0d34 4989D4   		movq	%rdx, %r12
 1421 0d37 89CD     		movl	%ecx, %ebp
 1422 0d39 4589C7   		movl	%r8d, %r15d
 1423 0d3c 4883EC28 		subq	$40, %rsp
 1424              		.cfi_def_cfa_offset 96
 1425 0d40 4889DF   		movq	%rbx, %rdi
 1426 0d43 488D7424 		leaq	16(%rsp), %rsi
 1426      10
 1427 0d48 4C894C24 		movq	%r9, 8(%rsp)
 1427      08
 1428 0d4d 64488B04 		movq	%fs:40, %rax
 1428      25280000 
 1428      00
 1429 0d56 48894424 		movq	%rax, 24(%rsp)
 1429      18
 1430 0d5b 31C0     		xorl	%eax, %eax
 1431 0d5d E8000000 		call	queuePut@PLT
 1431      00
 1432 0d62 85C0     		testl	%eax, %eax
 1433 0d64 742A     		je	.L167
 1434              	.L163:
 1435 0d66 488B4C24 		movq	24(%rsp), %rcx
 1435      18
 1436 0d6b 6448330C 		xorq	%fs:40, %rcx
 1436      25280000 
 1436      00
 1437 0d74 0F859500 		jne	.L168
 1437      0000
 1438 0d7a 4883C428 		addq	$40, %rsp
 1439              		.cfi_remember_state
 1440              		.cfi_def_cfa_offset 56
 1441 0d7e 5B       		popq	%rbx
 1442              		.cfi_def_cfa_offset 48
 1443 0d7f 5D       		popq	%rbp
 1444              		.cfi_def_cfa_offset 40
 1445 0d80 415C     		popq	%r12
 1446              		.cfi_def_cfa_offset 32
 1447 0d82 415D     		popq	%r13
 1448              		.cfi_def_cfa_offset 24
 1449 0d84 415E     		popq	%r14
 1450              		.cfi_def_cfa_offset 16
 1451 0d86 415F     		popq	%r15
 1452              		.cfi_def_cfa_offset 8
 1453 0d88 C3       		ret
 1454 0d89 0F1F8000 		.p2align 4,,10
 1454      000000
 1455              		.p2align 3
 1456              	.L167:
 1457              		.cfi_restore_state
 1458 0d90 488B4424 		movq	16(%rsp), %rax
 1458      10
 1459 0d95 498B16   		movq	(%r14), %rdx
 1460 0d98 488B38   		movq	(%rax), %rdi
 1461 0d9b C7400800 		movl	$0, 8(%rax)
 1461      000000
 1462 0da2 80600CFE 		andb	$-2, 12(%rax)
 1463 0da6 4883C008 		addq	$8, %rax
 1464 0daa 48894728 		movq	%rax, 40(%rdi)
 1465 0dae 488D054B 		leaq	bulk_transfer_cb(%rip), %rax
 1465      F2FFFF
 1466 0db5 488917   		movq	%rdx, (%rdi)
 1467 0db8 44886F09 		movb	%r13b, 9(%rdi)
 1468 0dbc C6470A02 		movb	$2, 10(%rdi)
 1469 0dc0 44897F0C 		movl	%r15d, 12(%rdi)
 1470 0dc4 4C896730 		movq	%r12, 48(%rdi)
 1471 0dc8 896F14   		movl	%ebp, 20(%rdi)
 1472 0dcb 48894720 		movq	%rax, 32(%rdi)
 1473 0dcf E8000000 		call	libusb_submit_transfer@PLT
 1473      00
 1474 0dd4 85C0     		testl	%eax, %eax
 1475 0dd6 7510     		jne	.L169
 1476 0dd8 4889DF   		movq	%rbx, %rdi
 1477 0ddb E8000000 		call	queueCommitPut@PLT
 1477      00
 1478 0de0 31C0     		xorl	%eax, %eax
 1479 0de2 EB82     		jmp	.L163
 1480              		.p2align 4,,10
 1481 0de4 0F1F4000 		.p2align 3
 1482              	.L169:
 1483 0de8 89C7     		movl	%eax, %edi
 1484 0dea E8000000 		call	libusb_error_name@PLT
 1484      00
 1485 0def 488B7C24 		movq	8(%rsp), %rdi
 1485      08
 1486 0df4 488D3500 		leaq	.LC34(%rip), %rsi
 1486      000000
 1487 0dfb 4889C2   		movq	%rax, %rdx
 1488 0dfe 31C0     		xorl	%eax, %eax
 1489 0e00 E8000000 		call	errRender@PLT
 1489      00
 1490 0e05 B80E0000 		movl	$14, %eax
 1490      00
 1491 0e0a E957FFFF 		jmp	.L163
 1491      FF
 1492              	.L168:
 1493 0e0f E8000000 		call	__stack_chk_fail@PLT
 1493      00
 1494              		.cfi_endproc
 1495              	.LFE104:
 1497              		.section	.text.unlikely
 1498              	.LCOLDE35:
 1499              		.text
 1500              	.LHOTE35:
 1501              		.section	.rodata.str1.8
 1502 02e2 00000000 		.align 8
 1502      0000
 1503              	.LC36:
 1504 02e8 75736242 		.string	"usbBulkWriteAsyncPrepare(): Work queue insertion error"
 1504      756C6B57 
 1504      72697465 
 1504      4173796E 
 1504      63507265 
 1505              		.section	.text.unlikely
 1506              	.LCOLDB37:
 1507              		.text
 1508              	.LHOTB37:
 1509 0e14 6690662E 		.p2align 4,,15
 1509      0F1F8400 
 1509      00000000 
 1510              		.globl	usbBulkWriteAsyncPrepare
 1512              	usbBulkWriteAsyncPrepare:
 1513              	.LFB105:
 1514              		.cfi_startproc
 1515 0e20 55       		pushq	%rbp
 1516              		.cfi_def_cfa_offset 16
 1517              		.cfi_offset 6, -16
 1518 0e21 53       		pushq	%rbx
 1519              		.cfi_def_cfa_offset 24
 1520              		.cfi_offset 3, -24
 1521 0e22 4889F3   		movq	%rsi, %rbx
 1522 0e25 4883C708 		addq	$8, %rdi
 1523 0e29 4889D5   		movq	%rdx, %rbp
 1524 0e2c 4883EC28 		subq	$40, %rsp
 1525              		.cfi_def_cfa_offset 64
 1526 0e30 488D7424 		leaq	16(%rsp), %rsi
 1526      10
 1527 0e35 64488B04 		movq	%fs:40, %rax
 1527      25280000 
 1527      00
 1528 0e3e 48894424 		movq	%rax, 24(%rsp)
 1528      18
 1529 0e43 31C0     		xorl	%eax, %eax
 1530 0e45 E8000000 		call	queuePut@PLT
 1530      00
 1531 0e4a 85C0     		testl	%eax, %eax
 1532 0e4c 752A     		jne	.L175
 1533 0e4e 488B4C24 		movq	16(%rsp), %rcx
 1533      10
 1534 0e53 488D5110 		leaq	16(%rcx), %rdx
 1535 0e57 488913   		movq	%rdx, (%rbx)
 1536              	.L172:
 1537 0e5a 488B4C24 		movq	24(%rsp), %rcx
 1537      18
 1538 0e5f 6448330C 		xorq	%fs:40, %rcx
 1538      25280000 
 1538      00
 1539 0e68 7527     		jne	.L176
 1540 0e6a 4883C428 		addq	$40, %rsp
 1541              		.cfi_remember_state
 1542              		.cfi_def_cfa_offset 24
 1543 0e6e 5B       		popq	%rbx
 1544              		.cfi_def_cfa_offset 16
 1545 0e6f 5D       		popq	%rbp
 1546              		.cfi_def_cfa_offset 8
 1547 0e70 C3       		ret
 1548              		.p2align 4,,10
 1549 0e71 0F1F8000 		.p2align 3
 1549      000000
 1550              	.L175:
 1551              		.cfi_restore_state
 1552 0e78 488D3500 		leaq	.LC36(%rip), %rsi
 1552      000000
 1553 0e7f 4889EF   		movq	%rbp, %rdi
 1554 0e82 8944240C 		movl	%eax, 12(%rsp)
 1555 0e86 E8000000 		call	errPrefix@PLT
 1555      00
 1556 0e8b 8B44240C 		movl	12(%rsp), %eax
 1557 0e8f EBC9     		jmp	.L172
 1558              	.L176:
 1559 0e91 E8000000 		call	__stack_chk_fail@PLT
 1559      00
 1560              		.cfi_endproc
 1561              	.LFE105:
 1563              		.section	.text.unlikely
 1564              	.LCOLDE37:
 1565              		.text
 1566              	.LHOTE37:
 1567              		.section	.rodata.str1.8
 1568 031f 00       		.align 8
 1569              	.LC38:
 1570 0320 75736242 		.string	"usbBulkWriteAsyncSubmit(): Transfer length exceeds 0x10000"
 1570      756C6B57 
 1570      72697465 
 1570      4173796E 
 1570      63537562 
 1571 035b 00000000 		.align 8
 1571      00
 1572              	.LC39:
 1573 0360 75736242 		.string	"usbBulkWriteAsyncSubmit(): Work queue insertion error"
 1573      756C6B57 
 1573      72697465 
 1573      4173796E 
 1573      63537562 
 1574 0396 0000     		.align 8
 1575              	.LC40:
 1576 0398 75736242 		.string	"usbBulkWriteAsyncSubmit(): Submission error: %s"
 1576      756C6B57 
 1576      72697465 
 1576      4173796E 
 1576      63537562 
 1577              		.section	.text.unlikely
 1578              	.LCOLDB41:
 1579              		.text
 1580              	.LHOTB41:
 1581 0e96 662E0F1F 		.p2align 4,,15
 1581      84000000 
 1581      0000
 1582              		.globl	usbBulkWriteAsyncSubmit
 1584              	usbBulkWriteAsyncSubmit:
 1585              	.LFB106:
 1586              		.cfi_startproc
 1587 0ea0 4156     		pushq	%r14
 1588              		.cfi_def_cfa_offset 16
 1589              		.cfi_offset 14, -16
 1590 0ea2 4155     		pushq	%r13
 1591              		.cfi_def_cfa_offset 24
 1592              		.cfi_offset 13, -24
 1593 0ea4 4154     		pushq	%r12
 1594              		.cfi_def_cfa_offset 32
 1595              		.cfi_offset 12, -32
 1596 0ea6 55       		pushq	%rbp
 1597              		.cfi_def_cfa_offset 40
 1598              		.cfi_offset 6, -40
 1599 0ea7 4C89C5   		movq	%r8, %rbp
 1600 0eaa 53       		pushq	%rbx
 1601              		.cfi_def_cfa_offset 48
 1602              		.cfi_offset 3, -48
 1603 0eab 4883EC20 		subq	$32, %rsp
 1604              		.cfi_def_cfa_offset 80
 1605 0eaf 64488B04 		movq	%fs:40, %rax
 1605      25280000 
 1605      00
 1606 0eb8 48894424 		movq	%rax, 24(%rsp)
 1606      18
 1607 0ebd 31C0     		xorl	%eax, %eax
 1608 0ebf 81FA0000 		cmpl	$65536, %edx
 1608      0100
 1609 0ec5 7639     		jbe	.L178
 1610 0ec7 488D3500 		leaq	.LC38(%rip), %rsi
 1610      000000
 1611 0ece 4C89C7   		movq	%r8, %rdi
 1612 0ed1 BB110000 		movl	$17, %ebx
 1612      00
 1613 0ed6 E8000000 		call	errPrefix@PLT
 1613      00
 1614              	.L179:
 1615 0edb 89D8     		movl	%ebx, %eax
 1616 0edd 488B5C24 		movq	24(%rsp), %rbx
 1616      18
 1617 0ee2 6448331C 		xorq	%fs:40, %rbx
 1617      25280000 
 1617      00
 1618 0eeb 0F85DB00 		jne	.L184
 1618      0000
 1619 0ef1 4883C420 		addq	$32, %rsp
 1620              		.cfi_remember_state
 1621              		.cfi_def_cfa_offset 48
 1622 0ef5 5B       		popq	%rbx
 1623              		.cfi_def_cfa_offset 40
 1624 0ef6 5D       		popq	%rbp
 1625              		.cfi_def_cfa_offset 32
 1626 0ef7 415C     		popq	%r12
 1627              		.cfi_def_cfa_offset 24
 1628 0ef9 415D     		popq	%r13
 1629              		.cfi_def_cfa_offset 16
 1630 0efb 415E     		popq	%r14
 1631              		.cfi_def_cfa_offset 8
 1632 0efd C3       		ret
 1633 0efe 6690     		.p2align 4,,10
 1634              		.p2align 3
 1635              	.L178:
 1636              		.cfi_restore_state
 1637 0f00 4C8D6708 		leaq	8(%rdi), %r12
 1638 0f04 4189F6   		movl	%esi, %r14d
 1639 0f07 488D7424 		leaq	16(%rsp), %rsi
 1639      10
 1640 0f0c 4989FD   		movq	%rdi, %r13
 1641 0f0f 894C240C 		movl	%ecx, 12(%rsp)
 1642 0f13 89542408 		movl	%edx, 8(%rsp)
 1643 0f17 4C89E7   		movq	%r12, %rdi
 1644 0f1a E8000000 		call	queuePut@PLT
 1644      00
 1645 0f1f 85C0     		testl	%eax, %eax
 1646 0f21 89C3     		movl	%eax, %ebx
 1647 0f23 8B542408 		movl	8(%rsp), %edx
 1648 0f27 8B4C240C 		movl	12(%rsp), %ecx
 1649 0f2b 0F858700 		jne	.L185
 1649      0000
 1650 0f31 488B4424 		movq	16(%rsp), %rax
 1650      10
 1651 0f36 498B7500 		movq	0(%r13), %rsi
 1652 0f3a 488B38   		movq	(%rax), %rdi
 1653 0f3d C7400800 		movl	$0, 8(%rax)
 1653      000000
 1654 0f44 80600CFE 		andb	$-2, 12(%rax)
 1655 0f48 894F0C   		movl	%ecx, 12(%rdi)
 1656 0f4b 488D4810 		leaq	16(%rax), %rcx
 1657 0f4f 4883C008 		addq	$8, %rax
 1658 0f53 48894728 		movq	%rax, 40(%rdi)
 1659 0f57 488D05A2 		leaq	bulk_transfer_cb(%rip), %rax
 1659      F0FFFF
 1660 0f5e 488937   		movq	%rsi, (%rdi)
 1661 0f61 44887709 		movb	%r14b, 9(%rdi)
 1662 0f65 C6470A02 		movb	$2, 10(%rdi)
 1663 0f69 48894F30 		movq	%rcx, 48(%rdi)
 1664 0f6d 895714   		movl	%edx, 20(%rdi)
 1665 0f70 48894720 		movq	%rax, 32(%rdi)
 1666 0f74 E8000000 		call	libusb_submit_transfer@PLT
 1666      00
 1667 0f79 85C0     		testl	%eax, %eax
 1668 0f7b 742B     		je	.L181
 1669 0f7d 89C7     		movl	%eax, %edi
 1670 0f7f BB0E0000 		movl	$14, %ebx
 1670      00
 1671 0f84 E8000000 		call	libusb_error_name@PLT
 1671      00
 1672 0f89 488D3500 		leaq	.LC40(%rip), %rsi
 1672      000000
 1673 0f90 4889C2   		movq	%rax, %rdx
 1674 0f93 4889EF   		movq	%rbp, %rdi
 1675 0f96 31C0     		xorl	%eax, %eax
 1676 0f98 E8000000 		call	errRender@PLT
 1676      00
 1677 0f9d E939FFFF 		jmp	.L179
 1677      FF
 1678              		.p2align 4,,10
 1679 0fa2 660F1F44 		.p2align 3
 1679      0000
 1680              	.L181:
 1681 0fa8 4C89E7   		movq	%r12, %rdi
 1682 0fab E8000000 		call	queueCommitPut@PLT
 1682      00
 1683 0fb0 E926FFFF 		jmp	.L179
 1683      FF
 1684              		.p2align 4,,10
 1685 0fb5 0F1F00   		.p2align 3
 1686              	.L185:
 1687 0fb8 488D3500 		leaq	.LC39(%rip), %rsi
 1687      000000
 1688 0fbf 4889EF   		movq	%rbp, %rdi
 1689 0fc2 E8000000 		call	errPrefix@PLT
 1689      00
 1690 0fc7 E90FFFFF 		jmp	.L179
 1690      FF
 1691              	.L184:
 1692 0fcc E8000000 		call	__stack_chk_fail@PLT
 1692      00
 1693              		.cfi_endproc
 1694              	.LFE106:
 1696              		.section	.text.unlikely
 1697              	.LCOLDE41:
 1698              		.text
 1699              	.LHOTE41:
 1700              		.section	.rodata.str1.8
 1701              		.align 8
 1702              	.LC42:
 1703 03c8 75736242 		.string	"usbBulkReadAsync(): Transfer length exceeds 0x10000"
 1703      756C6B52 
 1703      65616441 
 1703      73796E63 
 1703      28293A20 
 1704 03fc 00000000 		.align 8
 1705              	.LC43:
 1706 0400 75736242 		.string	"usbBulkReadAsync(): Work queue insertion error"
 1706      756C6B52 
 1706      65616441 
 1706      73796E63 
 1706      28293A20 
 1707 042f 00       		.align 8
 1708              	.LC44:
 1709 0430 75736242 		.string	"usbBulkReadAsync(): Submission error: %s"
 1709      756C6B52 
 1709      65616441 
 1709      73796E63 
 1709      28293A20 
 1710              		.section	.text.unlikely
 1711              	.LCOLDB45:
 1712              		.text
 1713              	.LHOTB45:
 1714 0fd1 0F1F4400 		.p2align 4,,15
 1714      00662E0F 
 1714      1F840000 
 1714      000000
 1715              		.globl	usbBulkReadAsync
 1717              	usbBulkReadAsync:
 1718              	.LFB107:
 1719              		.cfi_startproc
 1720 0fe0 4156     		pushq	%r14
 1721              		.cfi_def_cfa_offset 16
 1722              		.cfi_offset 14, -16
 1723 0fe2 4155     		pushq	%r13
 1724              		.cfi_def_cfa_offset 24
 1725              		.cfi_offset 13, -24
 1726 0fe4 4154     		pushq	%r12
 1727              		.cfi_def_cfa_offset 32
 1728              		.cfi_offset 12, -32
 1729 0fe6 55       		pushq	%rbp
 1730              		.cfi_def_cfa_offset 40
 1731              		.cfi_offset 6, -40
 1732 0fe7 4C89CD   		movq	%r9, %rbp
 1733 0fea 53       		pushq	%rbx
 1734              		.cfi_def_cfa_offset 48
 1735              		.cfi_offset 3, -48
 1736 0feb 4883EC20 		subq	$32, %rsp
 1737              		.cfi_def_cfa_offset 80
 1738 0fef 64488B04 		movq	%fs:40, %rax
 1738      25280000 
 1738      00
 1739 0ff8 48894424 		movq	%rax, 24(%rsp)
 1739      18
 1740 0ffd 31C0     		xorl	%eax, %eax
 1741 0fff 81F90000 		cmpl	$65536, %ecx
 1741      0100
 1742 1005 7639     		jbe	.L187
 1743 1007 488D3500 		leaq	.LC42(%rip), %rsi
 1743      000000
 1744 100e 4C89CF   		movq	%r9, %rdi
 1745 1011 BB110000 		movl	$17, %ebx
 1745      00
 1746 1016 E8000000 		call	errPrefix@PLT
 1746      00
 1747              	.L188:
 1748 101b 89D8     		movl	%ebx, %eax
 1749 101d 488B5C24 		movq	24(%rsp), %rbx
 1749      18
 1750 1022 6448331C 		xorq	%fs:40, %rbx
 1750      25280000 
 1750      00
 1751 102b 0F850001 		jne	.L195
 1751      0000
 1752 1031 4883C420 		addq	$32, %rsp
 1753              		.cfi_remember_state
 1754              		.cfi_def_cfa_offset 48
 1755 1035 5B       		popq	%rbx
 1756              		.cfi_def_cfa_offset 40
 1757 1036 5D       		popq	%rbp
 1758              		.cfi_def_cfa_offset 32
 1759 1037 415C     		popq	%r12
 1760              		.cfi_def_cfa_offset 24
 1761 1039 415D     		popq	%r13
 1762              		.cfi_def_cfa_offset 16
 1763 103b 415E     		popq	%r14
 1764              		.cfi_def_cfa_offset 8
 1765 103d C3       		ret
 1766 103e 6690     		.p2align 4,,10
 1767              		.p2align 3
 1768              	.L187:
 1769              		.cfi_restore_state
 1770 1040 4C8D6708 		leaq	8(%rdi), %r12
 1771 1044 4189F5   		movl	%esi, %r13d
 1772 1047 488D7424 		leaq	16(%rsp), %rsi
 1772      10
 1773 104c 4989FE   		movq	%rdi, %r14
 1774 104f 44894424 		movl	%r8d, 12(%rsp)
 1774      0C
 1775 1054 894C2408 		movl	%ecx, 8(%rsp)
 1776 1058 4C89E7   		movq	%r12, %rdi
 1777 105b 48891424 		movq	%rdx, (%rsp)
 1778 105f E8000000 		call	queuePut@PLT
 1778      00
 1779 1064 85C0     		testl	%eax, %eax
 1780 1066 89C3     		movl	%eax, %ebx
 1781 1068 488B1424 		movq	(%rsp), %rdx
 1782 106c 8B4C2408 		movl	8(%rsp), %ecx
 1783 1070 448B4424 		movl	12(%rsp), %r8d
 1783      0C
 1784 1075 0F859500 		jne	.L196
 1784      0000
 1785 107b 488B4424 		movq	16(%rsp), %rax
 1785      10
 1786 1080 80480C01 		orb	$1, 12(%rax)
 1787 1084 4885D2   		testq	%rdx, %rdx
 1788 1087 488B38   		movq	(%rax), %rdi
 1789 108a 488D7008 		leaq	8(%rax), %rsi
 1790 108e C7400800 		movl	$0, 8(%rax)
 1790      000000
 1791 1095 0F848D00 		je	.L190
 1791      0000
 1792 109b 48899010 		movq	%rdx, 65552(%rax)
 1792      000100
 1793              	.L191:
 1794 10a2 498B06   		movq	(%r14), %rax
 1795 10a5 4183CD80 		orl	$-128, %r13d
 1796 10a9 44886F09 		movb	%r13b, 9(%rdi)
 1797 10ad C6470A02 		movb	$2, 10(%rdi)
 1798 10b1 4489470C 		movl	%r8d, 12(%rdi)
 1799 10b5 488907   		movq	%rax, (%rdi)
 1800 10b8 488D0541 		leaq	bulk_transfer_cb(%rip), %rax
 1800      EFFFFF
 1801 10bf 48895730 		movq	%rdx, 48(%rdi)
 1802 10c3 894F14   		movl	%ecx, 20(%rdi)
 1803 10c6 48897728 		movq	%rsi, 40(%rdi)
 1804 10ca 48894720 		movq	%rax, 32(%rdi)
 1805 10ce E8000000 		call	libusb_submit_transfer@PLT
 1805      00
 1806 10d3 85C0     		testl	%eax, %eax
 1807 10d5 7429     		je	.L192
 1808 10d7 89C7     		movl	%eax, %edi
 1809 10d9 BB0E0000 		movl	$14, %ebx
 1809      00
 1810 10de E8000000 		call	libusb_error_name@PLT
 1810      00
 1811 10e3 488D3500 		leaq	.LC44(%rip), %rsi
 1811      000000
 1812 10ea 4889C2   		movq	%rax, %rdx
 1813 10ed 4889EF   		movq	%rbp, %rdi
 1814 10f0 31C0     		xorl	%eax, %eax
 1815 10f2 E8000000 		call	errRender@PLT
 1815      00
 1816 10f7 E91FFFFF 		jmp	.L188
 1816      FF
 1817 10fc 0F1F4000 		.p2align 4,,10
 1818              		.p2align 3
 1819              	.L192:
 1820 1100 4C89E7   		movq	%r12, %rdi
 1821 1103 E8000000 		call	queueCommitPut@PLT
 1821      00
 1822 1108 E90EFFFF 		jmp	.L188
 1822      FF
 1823 110d 0F1F00   		.p2align 4,,10
 1824              		.p2align 3
 1825              	.L196:
 1826 1110 488D3500 		leaq	.LC43(%rip), %rsi
 1826      000000
 1827 1117 4889EF   		movq	%rbp, %rdi
 1828 111a E8000000 		call	errPrefix@PLT
 1828      00
 1829 111f E9F7FEFF 		jmp	.L188
 1829      FF
 1830              		.p2align 4,,10
 1831 1124 0F1F4000 		.p2align 3
 1832              	.L190:
 1833 1128 488D5010 		leaq	16(%rax), %rdx
 1834 112c E971FFFF 		jmp	.L191
 1834      FF
 1835              	.L195:
 1836 1131 E8000000 		call	__stack_chk_fail@PLT
 1836      00
 1837              		.cfi_endproc
 1838              	.LFE107:
 1840              		.section	.text.unlikely
 1841              	.LCOLDE45:
 1842              		.text
 1843              	.LHOTE45:
 1844              		.section	.rodata.str1.8
 1845 0459 00000000 		.align 8
 1845      000000
 1846              	.LC46:
 1847 0460 75736242 		.string	"usbBulkAwaitCompletion(): Work queue fetch error"
 1847      756C6B41 
 1847      77616974 
 1847      436F6D70 
 1847      6C657469 
 1848 0491 00000000 		.align 8
 1848      000000
 1849              	.LC47:
 1850 0498 75736242 		.string	"usbBulkAwaitCompletion(): Event error: %s"
 1850      756C6B41 
 1850      77616974 
 1850      436F6D70 
 1850      6C657469 
 1851 04c2 00000000 		.align 8
 1851      0000
 1852              	.LC48:
 1853 04c8 75736242 		.string	"usbBulkAwaitCompletion(): Timeout"
 1853      756C6B41 
 1853      77616974 
 1853      436F6D70 
 1853      6C657469 
 1854 04ea 00000000 		.align 8
 1854      0000
 1855              	.LC49:
 1856 04f0 75736242 		.string	"usbBulkAwaitCompletion(): Transfer error: %s"
 1856      756C6B41 
 1856      77616974 
 1856      436F6D70 
 1856      6C657469 
 1857              		.section	.text.unlikely
 1858              	.LCOLDB50:
 1859              		.text
 1860              	.LHOTB50:
 1861 1136 662E0F1F 		.p2align 4,,15
 1861      84000000 
 1861      0000
 1862              		.globl	usbBulkAwaitCompletion
 1864              	usbBulkAwaitCompletion:
 1865              	.LFB108:
 1866              		.cfi_startproc
 1867 1140 4157     		pushq	%r15
 1868              		.cfi_def_cfa_offset 16
 1869              		.cfi_offset 15, -16
 1870 1142 4156     		pushq	%r14
 1871              		.cfi_def_cfa_offset 24
 1872              		.cfi_offset 14, -24
 1873 1144 4155     		pushq	%r13
 1874              		.cfi_def_cfa_offset 32
 1875              		.cfi_offset 13, -32
 1876 1146 4154     		pushq	%r12
 1877              		.cfi_def_cfa_offset 40
 1878              		.cfi_offset 12, -40
 1879 1148 55       		pushq	%rbp
 1880              		.cfi_def_cfa_offset 48
 1881              		.cfi_offset 6, -48
 1882 1149 53       		pushq	%rbx
 1883              		.cfi_def_cfa_offset 56
 1884              		.cfi_offset 3, -56
 1885 114a 4883EC58 		subq	$88, %rsp
 1886              		.cfi_def_cfa_offset 144
 1887 114e 64488B04 		movq	%fs:40, %rax
 1887      25280000 
 1887      00
 1888 1157 48894424 		movq	%rax, 72(%rsp)
 1888      48
 1889 115c 31C0     		xorl	%eax, %eax
 1890 115e 488D4708 		leaq	8(%rdi), %rax
 1891 1162 48897424 		movq	%rsi, 24(%rsp)
 1891      18
 1892 1167 488D7424 		leaq	40(%rsp), %rsi
 1892      28
 1893 116c 48895424 		movq	%rdx, 8(%rsp)
 1893      08
 1894 1171 48C74424 		movq	$4294967, 48(%rsp)
 1894      30378941 
 1894      00
 1895 117a 4889C7   		movq	%rax, %rdi
 1896 117d 48C74424 		movq	$295000, 56(%rsp)
 1896      38588004 
 1896      00
 1897 1186 48894424 		movq	%rax, 16(%rsp)
 1897      10
 1898 118b E8000000 		call	queueTake@PLT
 1898      00
 1899 1190 85C0     		testl	%eax, %eax
 1900 1192 4189C6   		movl	%eax, %r14d
 1901 1195 0F85C500 		jne	.L217
 1901      0000
 1902 119b 488B5C24 		movq	40(%rsp), %rbx
 1902      28
 1903 11a0 4C8D6424 		leaq	48(%rsp), %r12
 1903      30
 1904 11a5 4C8B3B   		movq	(%rbx), %r15
 1905 11a8 488D6B08 		leaq	8(%rbx), %rbp
 1906 11ac 48C78310 		movq	$0, 65552(%rbx)
 1906      00010000 
 1906      000000
 1907              	.L213:
 1908 11b7 8B4308   		movl	8(%rbx), %eax
 1909 11ba 85C0     		testl	%eax, %eax
 1910 11bc 0F85B600 		jne	.L218
 1910      0000
 1911 11c2 488B3D00 		movq	m_ctx(%rip), %rdi
 1911      000000
 1912 11c9 4889EA   		movq	%rbp, %rdx
 1913 11cc 4C89E6   		movq	%r12, %rsi
 1914 11cf E8000000 		call	libusb_handle_events_timeout_completed@PLT
 1914      00
 1915 11d4 83F8F6   		cmpl	$-10, %eax
 1916 11d7 4189C5   		movl	%eax, %r13d
 1917 11da 74DB     		je	.L213
 1918 11dc 85C0     		testl	%eax, %eax
 1919 11de 79D7     		jns	.L213
 1920 11e0 4C89FF   		movq	%r15, %rdi
 1921 11e3 E8000000 		call	libusb_cancel_transfer@PLT
 1921      00
 1922 11e8 85C0     		testl	%eax, %eax
 1923 11ea 746A     		je	.L201
 1924              	.L203:
 1925 11ec 4489EF   		movl	%r13d, %edi
 1926 11ef 41BE0F00 		movl	$15, %r14d
 1926      0000
 1927 11f5 E8000000 		call	libusb_error_name@PLT
 1927      00
 1928 11fa 488B7C24 		movq	8(%rsp), %rdi
 1928      08
 1929 11ff 488D3500 		leaq	.LC47(%rip), %rsi
 1929      000000
 1930 1206 4889C2   		movq	%rax, %rdx
 1931 1209 31C0     		xorl	%eax, %eax
 1932 120b E8000000 		call	errRender@PLT
 1932      00
 1933              	.L202:
 1934 1210 488B7C24 		movq	16(%rsp), %rdi
 1934      10
 1935 1215 E8000000 		call	queueCommitTake@PLT
 1935      00
 1936              	.L199:
 1937 121a 488B4C24 		movq	72(%rsp), %rcx
 1937      48
 1938 121f 6448330C 		xorq	%fs:40, %rcx
 1938      25280000 
 1938      00
 1939 1228 4489F0   		movl	%r14d, %eax
 1940 122b 0F85E300 		jne	.L219
 1940      0000
 1941 1231 4883C458 		addq	$88, %rsp
 1942              		.cfi_remember_state
 1943              		.cfi_def_cfa_offset 56
 1944 1235 5B       		popq	%rbx
 1945              		.cfi_def_cfa_offset 48
 1946 1236 5D       		popq	%rbp
 1947              		.cfi_def_cfa_offset 40
 1948 1237 415C     		popq	%r12
 1949              		.cfi_def_cfa_offset 32
 1950 1239 415D     		popq	%r13
 1951              		.cfi_def_cfa_offset 24
 1952 123b 415E     		popq	%r14
 1953              		.cfi_def_cfa_offset 16
 1954 123d 415F     		popq	%r15
 1955              		.cfi_def_cfa_offset 8
 1956 123f C3       		ret
 1957              		.p2align 4,,10
 1958              		.p2align 3
 1959              	.L204:
 1960              		.cfi_restore_state
 1961 1240 488B3D00 		movq	m_ctx(%rip), %rdi
 1961      000000
 1962 1247 4889EA   		movq	%rbp, %rdx
 1963 124a 4C89E6   		movq	%r12, %rsi
 1964 124d E8000000 		call	libusb_handle_events_timeout_completed@PLT
 1964      00
 1965 1252 85C0     		testl	%eax, %eax
 1966 1254 7896     		js	.L203
 1967              	.L201:
 1968 1256 8B5308   		movl	8(%rbx), %edx
 1969 1259 85D2     		testl	%edx, %edx
 1970 125b 74E3     		je	.L204
 1971 125d EB8D     		jmp	.L203
 1972 125f 90       		.p2align 4,,10
 1973              		.p2align 3
 1974              	.L217:
 1975 1260 488B7C24 		movq	8(%rsp), %rdi
 1975      08
 1976 1265 488D3500 		leaq	.LC46(%rip), %rsi
 1976      000000
 1977 126c E8000000 		call	errPrefix@PLT
 1977      00
 1978 1271 EBA7     		jmp	.L199
 1979              		.p2align 4,,10
 1980 1273 0F1F4400 		.p2align 3
 1980      00
 1981              	.L218:
 1982 1278 498B4730 		movq	48(%r15), %rax
 1983 127c 488B4C24 		movq	24(%rsp), %rcx
 1983      18
 1984 1281 488901   		movq	%rax, (%rcx)
 1985 1284 418B4714 		movl	20(%r15), %eax
 1986 1288 894108   		movl	%eax, 8(%rcx)
 1987 128b 418B4718 		movl	24(%r15), %eax
 1988 128f 89410C   		movl	%eax, 12(%rcx)
 1989 1292 488B4424 		movq	40(%rsp), %rax
 1989      28
 1990 1297 8B400C   		movl	12(%rax), %eax
 1991 129a 894110   		movl	%eax, 16(%rcx)
 1992 129d 418B4710 		movl	16(%r15), %eax
 1993 12a1 83F806   		cmpl	$6, %eax
 1994 12a4 7632     		jbe	.L220
 1995 12a6 BF9DFFFF 		movl	$-99, %edi
 1995      FF
 1996              	.L206:
 1997 12ab E8000000 		call	libusb_error_name@PLT
 1997      00
 1998 12b0 488B7C24 		movq	8(%rsp), %rdi
 1998      08
 1999 12b5 488D3500 		leaq	.LC49(%rip), %rsi
 1999      000000
 2000 12bc 4889C2   		movq	%rax, %rdx
 2001 12bf 31C0     		xorl	%eax, %eax
 2002 12c1 41BE1000 		movl	$16, %r14d
 2002      0000
 2003 12c7 E8000000 		call	errRender@PLT
 2003      00
 2004 12cc E93FFFFF 		jmp	.L202
 2004      FF
 2005              		.p2align 4,,10
 2006 12d1 0F1F8000 		.p2align 3
 2006      000000
 2007              	.L220:
 2008 12d8 488D1500 		leaq	CSWTCH.47(%rip), %rdx
 2008      000000
 2009 12df 8B3C82   		movl	(%rdx,%rax,4), %edi
 2010 12e2 83FFF9   		cmpl	$-7, %edi
 2011 12e5 7411     		je	.L221
 2012 12e7 85FF     		testl	%edi, %edi
 2013 12e9 0F8421FF 		je	.L202
 2013      FFFF
 2014 12ef EBBA     		jmp	.L206
 2015              		.p2align 4,,10
 2016 12f1 0F1F8000 		.p2align 3
 2016      000000
 2017              	.L221:
 2018 12f8 488B7C24 		movq	8(%rsp), %rdi
 2018      08
 2019 12fd 488D3500 		leaq	.LC48(%rip), %rsi
 2019      000000
 2020 1304 41BE1200 		movl	$18, %r14d
 2020      0000
 2021 130a E8000000 		call	errPrefix@PLT
 2021      00
 2022 130f E9FCFEFF 		jmp	.L202
 2022      FF
 2023              	.L219:
 2024 1314 E8000000 		call	__stack_chk_fail@PLT
 2024      00
 2025              		.cfi_endproc
 2026              	.LFE108:
 2028              		.section	.text.unlikely
 2029              	.LCOLDE50:
 2030              		.text
 2031              	.LHOTE50:
 2032              		.section	.text.unlikely
 2033              	.LCOLDB51:
 2034              		.text
 2035              	.LHOTB51:
 2036 1319 0F1F8000 		.p2align 4,,15
 2036      000000
 2037              		.globl	usbNumOutstandingRequests
 2039              	usbNumOutstandingRequests:
 2040              	.LFB109:
 2041              		.cfi_startproc
 2042 1320 488B4728 		movq	40(%rdi), %rax
 2043 1324 C3       		ret
 2044              		.cfi_endproc
 2045              	.LFE109:
 2047              		.section	.text.unlikely
 2048              	.LCOLDE51:
 2049              		.text
 2050              	.LHOTE51:
 2051              		.section	.rodata
 2052              		.align 16
 2055              	CSWTCH.47:
 2056 0000 00000000 		.long	0
 2057 0004 FFFFFFFF 		.long	-1
 2058 0008 F9FFFFFF 		.long	-7
 2059 000c FFFFFFFF 		.long	-1
 2060 0010 F7FFFFFF 		.long	-9
 2061 0014 FCFFFFFF 		.long	-4
 2062 0018 F8FFFFFF 		.long	-8
 2063              		.local	m_ctx
 2064              		.comm	m_ctx,8,8
 2065              		.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609"
 2066              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 libusbwrap.c
     /tmp/cc8JnjHH.s:8      .text:0000000000000000 bulk_transfer_cb
     /tmp/cc8JnjHH.s:28     .text:0000000000000010 createTransfer
     /tmp/cc8JnjHH.s:71     .text:0000000000000050 destroyTransfer
     /tmp/cc8JnjHH.s:105    .text:0000000000000080 usbValidateVidPid
     /tmp/cc8JnjHH.s:319    .text:00000000000002d0 usbInitialise
     /tmp/cc8JnjHH.s:2064   .bss:0000000000000000 m_ctx
     /tmp/cc8JnjHH.s:393    .text:0000000000000330 usbIsDeviceAvailable
     /tmp/cc8JnjHH.s:622    .text:0000000000000590 usbOpenDevice
     /tmp/cc8JnjHH.s:952    .text:00000000000009d0 usbCloseDevice
     /tmp/cc8JnjHH.s:1010   .text:0000000000000a20 usbControlRead
     /tmp/cc8JnjHH.s:1102   .text:0000000000000ac0 usbControlWrite
     /tmp/cc8JnjHH.s:1194   .text:0000000000000b60 usbBulkRead
     /tmp/cc8JnjHH.s:1298   .text:0000000000000c40 usbBulkWrite
     /tmp/cc8JnjHH.s:1396   .text:0000000000000d20 usbBulkWriteAsync
     /tmp/cc8JnjHH.s:1512   .text:0000000000000e20 usbBulkWriteAsyncPrepare
     /tmp/cc8JnjHH.s:1584   .text:0000000000000ea0 usbBulkWriteAsyncSubmit
     /tmp/cc8JnjHH.s:1717   .text:0000000000000fe0 usbBulkReadAsync
     /tmp/cc8JnjHH.s:1864   .text:0000000000001140 usbBulkAwaitCompletion
     /tmp/cc8JnjHH.s:2055   .rodata:0000000000000000 CSWTCH.47
     /tmp/cc8JnjHH.s:2039   .text:0000000000001320 usbNumOutstandingRequests
     /tmp/cc8JnjHH.s:310    .rodata.str1.1:0000000000000000 .LC4
     /tmp/cc8JnjHH.s:380    .rodata.str1.1:0000000000000014 .LC7
     /tmp/cc8JnjHH.s:377    .rodata.str1.8:0000000000000000 .LC6
     /tmp/cc8JnjHH.s:384    .rodata.str1.8:0000000000000040 .LC8
     /tmp/cc8JnjHH.s:603    .rodata.str1.8:00000000000000f0 .LC11
     /tmp/cc8JnjHH.s:606    .rodata.str1.8:0000000000000160 .LC12
     /tmp/cc8JnjHH.s:600    .rodata.str1.8:00000000000000b8 .LC10
     /tmp/cc8JnjHH.s:613    .rodata.str1.1:0000000000000053 .LC15
     /tmp/cc8JnjHH.s:611    .rodata.str1.1:000000000000003f .LC14
     /tmp/cc8JnjHH.s:609    .rodata.str1.1:000000000000002f .LC13
     /tmp/cc8JnjHH.s:1001   .rodata.str1.8:0000000000000180 .LC20
     /tmp/cc8JnjHH.s:995    .rodata.str1.1:0000000000000064 .LC18
     /tmp/cc8JnjHH.s:997    .rodata.str1.1:000000000000007f .LC19
     /tmp/cc8JnjHH.s:1093   .rodata.str1.8:00000000000001c8 .LC24
     /tmp/cc8JnjHH.s:1087   .rodata.str1.1:0000000000000094 .LC22
     /tmp/cc8JnjHH.s:1089   .rodata.str1.1:00000000000000af .LC23
     /tmp/cc8JnjHH.s:1185   .rodata.str1.8:0000000000000210 .LC28
     /tmp/cc8JnjHH.s:1179   .rodata.str1.1:00000000000000c5 .LC26
     /tmp/cc8JnjHH.s:1181   .rodata.str1.1:00000000000000dc .LC27
     /tmp/cc8JnjHH.s:1289   .rodata.str1.8:0000000000000260 .LC32
     /tmp/cc8JnjHH.s:1283   .rodata.str1.1:00000000000000ee .LC30
     /tmp/cc8JnjHH.s:1285   .rodata.str1.1:0000000000000106 .LC31
     /tmp/cc8JnjHH.s:1387   .rodata.str1.8:00000000000002b8 .LC34
     /tmp/cc8JnjHH.s:1503   .rodata.str1.8:00000000000002e8 .LC36
     /tmp/cc8JnjHH.s:1569   .rodata.str1.8:0000000000000320 .LC38
     /tmp/cc8JnjHH.s:1575   .rodata.str1.8:0000000000000398 .LC40
     /tmp/cc8JnjHH.s:1572   .rodata.str1.8:0000000000000360 .LC39
     /tmp/cc8JnjHH.s:1702   .rodata.str1.8:00000000000003c8 .LC42
     /tmp/cc8JnjHH.s:1708   .rodata.str1.8:0000000000000430 .LC44
     /tmp/cc8JnjHH.s:1705   .rodata.str1.8:0000000000000400 .LC43
     /tmp/cc8JnjHH.s:1849   .rodata.str1.8:0000000000000498 .LC47
     /tmp/cc8JnjHH.s:1846   .rodata.str1.8:0000000000000460 .LC46
     /tmp/cc8JnjHH.s:1855   .rodata.str1.8:00000000000004f0 .LC49
     /tmp/cc8JnjHH.s:1852   .rodata.str1.8:00000000000004c8 .LC48

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
calloc
libusb_alloc_transfer
libusb_free_transfer
free
strlen
libusb_init
libusb_error_name
errRender
libusb_set_debug
libusb_get_device_list
strtoul
libusb_get_device_descriptor
libusb_free_device_list
errPrefix
__stack_chk_fail
malloc
queueInit
libusb_open
libusb_set_configuration
libusb_claim_interface
libusb_set_interface_alt_setting
libusb_close
queueDestroy
libusb_release_interface
libusb_control_transfer
libusb_bulk_transfer
queuePut
libusb_submit_transfer
queueCommitPut
queueTake
libusb_handle_events_timeout_completed
libusb_cancel_transfer
queueCommitTake
