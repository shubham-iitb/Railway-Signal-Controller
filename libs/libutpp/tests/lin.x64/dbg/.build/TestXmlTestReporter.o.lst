   1              		.file	"TestXmlTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 B8000000 		movl	$.LC0, %eax
  21      00
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 0009 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000a C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1057:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x3,__gxx_personality_v0
  39              		.cfi_lsda 0x3,.LLSDA1057
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 48059000 		addq	$144, %rax
  52      0000
  53 0017 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 001a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
  55      00
  56              	.LEHE0:
  57 001f B9000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %ecx
  57      00
  58 0024 488B45E8 		movq	-24(%rbp), %rax
  59 0028 BA100000 		movl	$16, %edx
  59      00
  60 002d 4889CE   		movq	%rcx, %rsi
  61 0030 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0033 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 9
  66 0038 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
  66      00
  67 003d 488B45E8 		movq	-24(%rbp), %rax
  68 0041 488910   		movq	%rdx, (%rax)
  69 0044 BA900000 		movl	$144, %edx
  69      00
  70 0049 488B45E8 		movq	-24(%rbp), %rax
  71 004d 4801D0   		addq	%rdx, %rax
  72 0050 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
  72      00
  73 0055 488910   		movq	%rdx, (%rax)
  74 0058 488B45E8 		movq	-24(%rbp), %rax
  75 005c 4883C070 		addq	$112, %rax
  76 0060 4889C7   		movq	%rax, %rdi
  77              	.LEHB2:
  78 0063 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
  78      00
  79              	.LEHE2:
  80              	.LBE2:
  81              		.loc 2 16 0
  82 0068 EB39     		jmp	.L9
  83              	.L7:
  84 006a 4889C3   		movq	%rax, %rbx
  85              	.LBB3:
  86 006d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
  86      00
  87 0072 488B45E8 		movq	-24(%rbp), %rax
  88 0076 4889D6   		movq	%rdx, %rsi
  89 0079 4889C7   		movq	%rax, %rdi
  90 007c E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
  90      00
  91 0081 EB03     		jmp	.L8
  92              	.L6:
  93 0083 4889C3   		movq	%rax, %rbx
  94              	.L8:
  95              		.loc 2 16 0 discriminator 28
  96 0086 488B45E8 		movq	-24(%rbp), %rax
  97 008a 48059000 		addq	$144, %rax
  97      0000
  98 0090 4889C7   		movq	%rax, %rdi
  99 0093 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
  99      00
 100 0098 4889D8   		movq	%rbx, %rax
 101 009b 4889C7   		movq	%rax, %rdi
 102              	.LEHB3:
 103 009e E8000000 		call	_Unwind_Resume
 103      00
 104              	.LEHE3:
 105              	.L9:
 106              	.LBE3:
 107              		.loc 2 16 0
 108 00a3 4883C418 		addq	$24, %rsp
 109 00a7 5B       		popq	%rbx
 110 00a8 5D       		popq	%rbp
 111              		.cfi_def_cfa 7, 8
 112 00a9 C3       		ret
 113              		.cfi_endproc
 114              	.LFE1057:
 115              		.globl	__gxx_personality_v0
 116              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 117              	.LLSDA1057:
 118 0000 FF       		.byte	0xff
 119 0001 FF       		.byte	0xff
 120 0002 01       		.byte	0x1
 121 0003 12       		.uleb128 .LLSDACSE1057-.LLSDACSB1057
 122              	.LLSDACSB1057:
 123 0004 1A       		.uleb128 .LEHB0-.LFB1057
 124 0005 05       		.uleb128 .LEHE0-.LEHB0
 125 0006 00       		.uleb128 0
 126 0007 00       		.uleb128 0
 127 0008 33       		.uleb128 .LEHB1-.LFB1057
 128 0009 05       		.uleb128 .LEHE1-.LEHB1
 129 000a 8301     		.uleb128 .L6-.LFB1057
 130 000c 00       		.uleb128 0
 131 000d 63       		.uleb128 .LEHB2-.LFB1057
 132 000e 05       		.uleb128 .LEHE2-.LEHB2
 133 000f 6A       		.uleb128 .L7-.LFB1057
 134 0010 00       		.uleb128 0
 135 0011 9E01     		.uleb128 .LEHB3-.LFB1057
 136 0013 05       		.uleb128 .LEHE3-.LEHB3
 137 0014 00       		.uleb128 0
 138 0015 00       		.uleb128 0
 139              	.LLSDACSE1057:
 140              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 142              		.text
 143              		.align 2
 145              	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev:
 146              	.LFB1332:
 147              		.file 3 "TestXmlTestReporter.cpp"
   1:TestXmlTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestXmlTestReporter.cpp **** #include "../XmlTestReporter.h"
   3:TestXmlTestReporter.cpp **** 
   4:TestXmlTestReporter.cpp **** #include <sstream>
   5:TestXmlTestReporter.cpp **** 
   6:TestXmlTestReporter.cpp **** using namespace UnitTest;
   7:TestXmlTestReporter.cpp **** using std::ostringstream;
   8:TestXmlTestReporter.cpp **** 
   9:TestXmlTestReporter.cpp **** namespace
  10:TestXmlTestReporter.cpp **** {
  11:TestXmlTestReporter.cpp **** 
  12:TestXmlTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestXmlTestReporter.cpp **** 
  14:TestXmlTestReporter.cpp **** // Overload to let MemoryOutStream accept std::string
  15:TestXmlTestReporter.cpp **** MemoryOutStream& operator<<(MemoryOutStream& s, const std::string& value)
  16:TestXmlTestReporter.cpp **** {
  17:TestXmlTestReporter.cpp ****     s << value.c_str();
  18:TestXmlTestReporter.cpp ****     return s;
  19:TestXmlTestReporter.cpp **** }
  20:TestXmlTestReporter.cpp **** 
  21:TestXmlTestReporter.cpp **** #endif
  22:TestXmlTestReporter.cpp **** 
  23:TestXmlTestReporter.cpp **** struct XmlTestReporterFixture
  24:TestXmlTestReporter.cpp **** {
  25:TestXmlTestReporter.cpp ****     XmlTestReporterFixture()
 148              		.loc 3 25 0 is_stmt 1
 149              		.cfi_startproc
 150              		.cfi_personality 0x3,__gxx_personality_v0
 151              		.cfi_lsda 0x3,.LLSDA1332
 152 0000 55       		pushq	%rbp
 153              		.cfi_def_cfa_offset 16
 154              		.cfi_offset 6, -16
 155 0001 4889E5   		movq	%rsp, %rbp
 156              		.cfi_def_cfa_register 6
 157 0004 53       		pushq	%rbx
 158 0005 4883EC18 		subq	$24, %rsp
 159              		.cfi_offset 3, -24
 160 0009 48897DE8 		movq	%rdi, -24(%rbp)
 161              	.LBB4:
  26:TestXmlTestReporter.cpp ****         : reporter(output)
 162              		.loc 3 26 0
 163 000d 488B45E8 		movq	-24(%rbp), %rax
 164 0011 BE100000 		movl	$16, %esi
 164      00
 165 0016 4889C7   		movq	%rax, %rdi
 166              	.LEHB4:
 167 0019 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
 167      00
 168              	.LEHE4:
 169 001e 488B45E8 		movq	-24(%rbp), %rax
 170 0022 488B55E8 		movq	-24(%rbp), %rdx
 171 0026 4881C278 		addq	$376, %rdx
 171      010000
 172 002d 4889C6   		movq	%rax, %rsi
 173 0030 4889D7   		movq	%rdx, %rdi
 174              	.LEHB5:
 175 0033 E8000000 		call	_ZN8UnitTest15XmlTestReporterC1ERSo
 175      00
 176              	.LEHE5:
 177              	.LBE4:
  27:TestXmlTestReporter.cpp ****     {
  28:TestXmlTestReporter.cpp ****     }
 178              		.loc 3 28 0
 179 0038 EB1A     		jmp	.L13
 180              	.L12:
 181 003a 4889C3   		movq	%rax, %rbx
 182              	.LBB5:
  26:TestXmlTestReporter.cpp ****         : reporter(output)
 183              		.loc 3 26 0
 184 003d 488B45E8 		movq	-24(%rbp), %rax
 185 0041 4889C7   		movq	%rax, %rdi
 186 0044 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 186      00
 187 0049 4889D8   		movq	%rbx, %rax
 188 004c 4889C7   		movq	%rax, %rdi
 189              	.LEHB6:
 190 004f E8000000 		call	_Unwind_Resume
 190      00
 191              	.LEHE6:
 192              	.L13:
 193              	.LBE5:
 194              		.loc 3 28 0
 195 0054 4883C418 		addq	$24, %rsp
 196 0058 5B       		popq	%rbx
 197 0059 5D       		popq	%rbp
 198              		.cfi_def_cfa 7, 8
 199 005a C3       		ret
 200              		.cfi_endproc
 201              	.LFE1332:
 202              		.section	.gcc_except_table,"a",@progbits
 203              	.LLSDA1332:
 204 0000 FF       		.byte	0xff
 205 0001 FF       		.byte	0xff
 206 0002 01       		.byte	0x1
 207 0003 0C       		.uleb128 .LLSDACSE1332-.LLSDACSB1332
 208              	.LLSDACSB1332:
 209 0004 19       		.uleb128 .LEHB4-.LFB1332
 210 0005 05       		.uleb128 .LEHE4-.LEHB4
 211 0006 00       		.uleb128 0
 212 0007 00       		.uleb128 0
 213 0008 33       		.uleb128 .LEHB5-.LFB1332
 214 0009 05       		.uleb128 .LEHE5-.LEHB5
 215 000a 3A       		.uleb128 .L12-.LFB1332
 216 000b 00       		.uleb128 0
 217 000c 4F       		.uleb128 .LEHB6-.LFB1332
 218 000d 05       		.uleb128 .LEHE6-.LEHB6
 219 000e 00       		.uleb128 0
 220 000f 00       		.uleb128 0
 221              	.LLSDACSE1332:
 222              		.text
 224 005b 90       		.align 2
 226              	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev:
 227              	.LFB1336:
  23:TestXmlTestReporter.cpp **** {
 228              		.loc 3 23 0
 229              		.cfi_startproc
 230              		.cfi_personality 0x3,__gxx_personality_v0
 231              		.cfi_lsda 0x3,.LLSDA1336
 232 005c 55       		pushq	%rbp
 233              		.cfi_def_cfa_offset 16
 234              		.cfi_offset 6, -16
 235 005d 4889E5   		movq	%rsp, %rbp
 236              		.cfi_def_cfa_register 6
 237 0060 53       		pushq	%rbx
 238 0061 4883EC18 		subq	$24, %rsp
 239              		.cfi_offset 3, -24
 240 0065 48897DE8 		movq	%rdi, -24(%rbp)
 241              	.LBB6:
  23:TestXmlTestReporter.cpp **** {
 242              		.loc 3 23 0
 243 0069 488B45E8 		movq	-24(%rbp), %rax
 244 006d 48057801 		addq	$376, %rax
 244      0000
 245 0073 4889C7   		movq	%rax, %rdi
 246              	.LEHB7:
 247 0076 E8000000 		call	_ZN8UnitTest15XmlTestReporterD1Ev
 247      00
 248              	.LEHE7:
  23:TestXmlTestReporter.cpp **** {
 249              		.loc 3 23 0 is_stmt 0 discriminator 2
 250 007b 488B45E8 		movq	-24(%rbp), %rax
 251 007f 4889C7   		movq	%rax, %rdi
 252              	.LEHB8:
 253 0082 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 253      00
 254              	.LEHE8:
 255              	.LBE6:
 256 0087 EB1A     		jmp	.L17
 257              	.L16:
 258 0089 4889C3   		movq	%rax, %rbx
 259              	.LBB7:
  23:TestXmlTestReporter.cpp **** {
 260              		.loc 3 23 0
 261 008c 488B45E8 		movq	-24(%rbp), %rax
 262 0090 4889C7   		movq	%rax, %rdi
 263 0093 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 263      00
 264 0098 4889D8   		movq	%rbx, %rax
 265 009b 4889C7   		movq	%rax, %rdi
 266              	.LEHB9:
 267 009e E8000000 		call	_Unwind_Resume
 267      00
 268              	.LEHE9:
 269              	.L17:
 270              	.LBE7:
 271 00a3 4883C418 		addq	$24, %rsp
 272 00a7 5B       		popq	%rbx
 273 00a8 5D       		popq	%rbp
 274              		.cfi_def_cfa 7, 8
 275 00a9 C3       		ret
 276              		.cfi_endproc
 277              	.LFE1336:
 278              		.section	.gcc_except_table
 279              	.LLSDA1336:
 280 0010 FF       		.byte	0xff
 281 0011 FF       		.byte	0xff
 282 0012 01       		.byte	0x1
 283 0013 0C       		.uleb128 .LLSDACSE1336-.LLSDACSB1336
 284              	.LLSDACSB1336:
 285 0014 1A       		.uleb128 .LEHB7-.LFB1336
 286 0015 05       		.uleb128 .LEHE7-.LEHB7
 287 0016 2D       		.uleb128 .L16-.LFB1336
 288 0017 00       		.uleb128 0
 289 0018 26       		.uleb128 .LEHB8-.LFB1336
 290 0019 05       		.uleb128 .LEHE8-.LEHB8
 291 001a 00       		.uleb128 0
 292 001b 00       		.uleb128 0
 293 001c 42       		.uleb128 .LEHB9-.LFB1336
 294 001d 05       		.uleb128 .LEHE9-.LEHB9
 295 001e 00       		.uleb128 0
 296 001f 00       		.uleb128 0
 297              	.LLSDACSE1336:
 298              		.text
 300              		.align 2
 302              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC2ERKN8UnitTest11TestDet
 303              	.LFB1338:
  29:TestXmlTestReporter.cpp **** 
  30:TestXmlTestReporter.cpp ****     ostringstream output;
  31:TestXmlTestReporter.cpp ****     XmlTestReporter reporter;
  32:TestXmlTestReporter.cpp **** };
  33:TestXmlTestReporter.cpp **** 
  34:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, MultipleCharactersAreEscaped)
 304              		.loc 3 34 0 is_stmt 1
 305              		.cfi_startproc
 306 00aa 55       		pushq	%rbp
 307              		.cfi_def_cfa_offset 16
 308              		.cfi_offset 6, -16
 309 00ab 4889E5   		movq	%rsp, %rbp
 310              		.cfi_def_cfa_register 6
 311 00ae 4883EC10 		subq	$16, %rsp
 312 00b2 48897DF8 		movq	%rdi, -8(%rbp)
 313 00b6 488975F0 		movq	%rsi, -16(%rbp)
 314              	.LBB8:
 315              		.loc 3 34 0
 316 00ba 488B45F8 		movq	-8(%rbp), %rax
 317 00be 4889C7   		movq	%rax, %rdi
 318 00c1 E83AFFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 318      FF
 319 00c6 488B45F8 		movq	-8(%rbp), %rax
 320 00ca 488B55F0 		movq	-16(%rbp), %rdx
 321 00ce 488990A0 		movq	%rdx, 416(%rax)
 321      010000
 322              	.LBE8:
 323 00d5 90       		nop
 324 00d6 C9       		leave
 325              		.cfi_def_cfa 7, 8
 326 00d7 C3       		ret
 327              		.cfi_endproc
 328              	.LFE1338:
 330              		.set	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11T
 331              		.section	.rodata
 332              	.LC1:
 333 000d 54657374 		.string	"TestXmlTestReporter.cpp"
 333      586D6C54 
 333      65737452 
 333      65706F72 
 333      7465722E 
 334              	.LC2:
 335 0025 4D756C74 		.string	"MultipleCharactersAreEscaped"
 335      69706C65 
 335      43686172 
 335      61637465 
 335      72734172 
 336              		.text
 337              		.align 2
 339              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC2Ev:
 340              	.LFB1341:
 341              		.loc 3 34 0
 342              		.cfi_startproc
 343 00d8 55       		pushq	%rbp
 344              		.cfi_def_cfa_offset 16
 345              		.cfi_offset 6, -16
 346 00d9 4889E5   		movq	%rsp, %rbp
 347              		.cfi_def_cfa_register 6
 348 00dc 4883EC10 		subq	$16, %rsp
 349 00e0 48897DF8 		movq	%rdi, -8(%rbp)
 350              	.LBB9:
 351              		.loc 3 34 0
 352 00e4 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 352      00
 353 00e9 4889C2   		movq	%rax, %rdx
 354 00ec 488B45F8 		movq	-8(%rbp), %rax
 355 00f0 41B82200 		movl	$34, %r8d
 355      0000
 356 00f6 B9000000 		movl	$.LC1, %ecx
 356      00
 357 00fb BE000000 		movl	$.LC2, %esi
 357      00
 358 0100 4889C7   		movq	%rax, %rdi
 359 0103 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 359      00
 360 0108 BA000000 		movl	$_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE+16, %edx
 360      00
 361 010d 488B45F8 		movq	-8(%rbp), %rax
 362 0111 488910   		movq	%rdx, (%rax)
 363              	.LBE9:
 364 0114 90       		nop
 365 0115 C9       		leave
 366              		.cfi_def_cfa 7, 8
 367 0116 C3       		ret
 368              		.cfi_endproc
 369              	.LFE1341:
 371              		.set	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev,_ZN12_GLOBAL__N
 372              		.local	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE
 373              		.comm	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE,56,32
 374              		.local	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE
 375              		.comm	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE,1,1
 376 0117 90       		.align 2
 378              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD2Ev:
 379              	.LFB1345:
 380              		.loc 3 34 0
 381              		.cfi_startproc
 382 0118 55       		pushq	%rbp
 383              		.cfi_def_cfa_offset 16
 384              		.cfi_offset 6, -16
 385 0119 4889E5   		movq	%rsp, %rbp
 386              		.cfi_def_cfa_register 6
 387 011c 4883EC10 		subq	$16, %rsp
 388 0120 48897DF8 		movq	%rdi, -8(%rbp)
 389              	.LBB10:
 390              		.loc 3 34 0
 391 0124 488B45F8 		movq	-8(%rbp), %rax
 392 0128 4889C7   		movq	%rax, %rdi
 393 012b E82CFFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 393      FF
 394              	.LBE10:
 395 0130 90       		nop
 396 0131 C9       		leave
 397              		.cfi_def_cfa 7, 8
 398 0132 C3       		ret
 399              		.cfi_endproc
 400              	.LFE1345:
 402              		.set	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev,_ZN12_GLOBAL_
 403              		.section	.rodata
 404              	.LC3:
 405 0042 556E6861 		.string	"Unhandled exception: "
 405      6E646C65 
 405      64206578 
 405      63657074 
 405      696F6E3A 
 406              		.align 8
 407              	.LC4:
 408 0058 556E6861 		.string	"Unhandled exception while destroying fixture XmlTestReporterFixture"
 408      6E646C65 
 408      64206578 
 408      63657074 
 408      696F6E20 
 409 009c 00000000 		.align 8
 410              	.LC5:
 411 00a0 556E6861 		.string	"Unhandled exception while constructing fixture XmlTestReporterFixture"
 411      6E646C65 
 411      64206578 
 411      63657074 
 411      696F6E20 
 412              		.text
 413 0133 90       		.align 2
 415              	_ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv:
 416              	.LFB1343:
 417              		.loc 3 34 0
 418              		.cfi_startproc
 419              		.cfi_personality 0x3,__gxx_personality_v0
 420              		.cfi_lsda 0x3,.LLSDA1343
 421 0134 55       		pushq	%rbp
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 6, -16
 424 0135 4889E5   		movq	%rsp, %rbp
 425              		.cfi_def_cfa_register 6
 426 0138 4154     		pushq	%r12
 427 013a 53       		pushq	%rbx
 428 013b 4881EC00 		subq	$512, %rsp
 428      020000
 429              		.cfi_offset 12, -24
 430              		.cfi_offset 3, -32
 431 0142 4889BDF8 		movq	%rdi, -520(%rbp)
 431      FDFFFF
 432              		.loc 3 34 0
 433 0149 64488B04 		movq	%fs:40, %rax
 433      25280000 
 433      00
 434 0152 488945E8 		movq	%rax, -24(%rbp)
 435 0156 31C0     		xorl	%eax, %eax
 436 0158 C6850FFE 		movb	$0, -497(%rbp)
 436      FFFF00
 437              	.LBB11:
 438 015f 488B85F8 		movq	-520(%rbp), %rax
 438      FDFFFF
 439 0166 488D5008 		leaq	8(%rax), %rdx
 440 016a 488D8540 		leaq	-448(%rbp), %rax
 440      FEFFFF
 441 0171 4889D6   		movq	%rdx, %rsi
 442 0174 4889C7   		movq	%rax, %rdi
 443              	.LEHB10:
 444 0177 E82EFFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11T
 444      FF
 445              	.LEHE10:
 446              		.loc 3 34 0 is_stmt 0 discriminator 1
 447 017c C6850FFE 		movb	$1, -497(%rbp)
 447      FFFF01
 448 0183 488B85F8 		movq	-520(%rbp), %rax
 448      FDFFFF
 449 018a 488D5008 		leaq	8(%rax), %rdx
 450 018e 488D8540 		leaq	-448(%rbp), %rax
 450      FEFFFF
 451 0195 4889D6   		movq	%rdx, %rsi
 452 0198 4889C7   		movq	%rax, %rdi
 453              	.LEHB11:
 454 019b E8A02A00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscaped
 454      00
 455              	.LEHE11:
 456              		.loc 3 34 0 discriminator 3
 457 01a0 488D8540 		leaq	-448(%rbp), %rax
 457      FEFFFF
 458 01a7 4889C7   		movq	%rax, %rdi
 459              	.LEHB12:
 460 01aa E869FFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
 460      FF
 461              	.LEHE12:
 462              	.LBE11:
 463              		.loc 3 34 0
 464 01af E9660200 		jmp	.L21
 464      00
 465              	.L36:
 466 01b4 4989C4   		movq	%rax, %r12
 467 01b7 4889D3   		movq	%rdx, %rbx
 468              	.LBB12:
 469 01ba 488D8540 		leaq	-448(%rbp), %rax
 469      FEFFFF
 470 01c1 4889C7   		movq	%rax, %rdi
 471 01c4 E84FFFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
 471      FF
 472 01c9 4C89E0   		movq	%r12, %rax
 473 01cc 4889DA   		movq	%rbx, %rdx
 474 01cf EB00     		jmp	.L23
 475              	.L35:
 476              	.L23:
 477 01d1 4883FA01 		cmpq	$1, %rdx
 478 01d5 740F     		je	.L25
 479 01d7 4883FA02 		cmpq	$2, %rdx
 480 01db 0F84A700 		je	.L26
 480      0000
 481 01e1 E94B0100 		jmp	.L41
 481      00
 482              	.L25:
 483              	.LBE12:
 484              	.LBB13:
 485 01e6 4889C7   		movq	%rax, %rdi
 486 01e9 E8000000 		call	__cxa_begin_catch
 486      00
 487 01ee 48898510 		movq	%rax, -496(%rbp)
 487      FEFFFF
 488 01f5 488B8510 		movq	-496(%rbp), %rax
 488      FEFFFF
 489 01fc 488B00   		movq	(%rax), %rax
 490 01ff 4883C010 		addq	$16, %rax
 491 0203 488B00   		movq	(%rax), %rax
 492 0206 488B9510 		movq	-496(%rbp), %rdx
 492      FEFFFF
 493 020d 4889D7   		movq	%rdx, %rdi
 494 0210 FFD0     		call	*%rax
 495 0212 4889C3   		movq	%rax, %rbx
 496 0215 488B8510 		movq	-496(%rbp), %rax
 496      FEFFFF
 497 021c 4889C7   		movq	%rax, %rdi
 498              	.LEHB13:
 499 021f E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 499      00
 500 0224 4189C4   		movl	%eax, %r12d
 501 0227 488B8510 		movq	-496(%rbp), %rax
 501      FEFFFF
 502 022e 4889C7   		movq	%rax, %rdi
 503 0231 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 503      00
 504              		.loc 3 34 0 discriminator 5
 505 0236 4889C1   		movq	%rax, %rcx
 506 0239 488B85F8 		movq	-520(%rbp), %rax
 506      FDFFFF
 507 0240 488B5008 		movq	8(%rax), %rdx
 508 0244 488B85F8 		movq	-520(%rbp), %rax
 508      FDFFFF
 509 024b 488B7010 		movq	16(%rax), %rsi
 510 024f 488D8520 		leaq	-480(%rbp), %rax
 510      FEFFFF
 511 0256 4589E0   		movl	%r12d, %r8d
 512 0259 4889C7   		movq	%rax, %rdi
 513 025c E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 513      00
 514              		.loc 3 34 0 discriminator 9
 515 0261 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 515      00
 516 0266 488B00   		movq	(%rax), %rax
 517 0269 488D8D20 		leaq	-480(%rbp), %rcx
 517      FEFFFF
 518 0270 4889DA   		movq	%rbx, %rdx
 519 0273 4889CE   		movq	%rcx, %rsi
 520 0276 4889C7   		movq	%rax, %rdi
 521 0279 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 521      00
 522              	.LEHE13:
 523              		.loc 3 34 0 discriminator 13
 524 027e E8000000 		call	__cxa_end_catch
 524      00
 525              	.LBE13:
 526 0283 E9920100 		jmp	.L21
 526      00
 527              	.L26:
 528              	.LBB14:
 529              		.loc 3 34 0
 530 0288 4889C7   		movq	%rax, %rdi
 531 028b E8000000 		call	__cxa_begin_catch
 531      00
 532 0290 48898518 		movq	%rax, -488(%rbp)
 532      FEFFFF
 533              	.LBB15:
 534 0297 488D8540 		leaq	-448(%rbp), %rax
 534      FEFFFF
 535 029e 4889C7   		movq	%rax, %rdi
 536              	.LEHB14:
 537 02a1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 537      00
 538              	.LEHE14:
 539              		.loc 3 34 0 discriminator 15
 540 02a6 488B8518 		movq	-488(%rbp), %rax
 540      FEFFFF
 541 02ad 488B00   		movq	(%rax), %rax
 542 02b0 4883C010 		addq	$16, %rax
 543 02b4 488B00   		movq	(%rax), %rax
 544 02b7 488B9518 		movq	-488(%rbp), %rdx
 544      FEFFFF
 545 02be 4889D7   		movq	%rdx, %rdi
 546 02c1 FFD0     		call	*%rax
 547 02c3 4889C3   		movq	%rax, %rbx
 548 02c6 488D8540 		leaq	-448(%rbp), %rax
 548      FEFFFF
 549 02cd BE000000 		movl	$.LC3, %esi
 549      00
 550 02d2 4889C7   		movq	%rax, %rdi
 551              	.LEHB15:
 552 02d5 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 552      00
 553 02da 4889DE   		movq	%rbx, %rsi
 554 02dd 4889C7   		movq	%rax, %rdi
 555 02e0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 555      00
 556              		.loc 3 34 0 discriminator 19
 557 02e5 488D8540 		leaq	-448(%rbp), %rax
 557      FEFFFF
 558 02ec 4889C7   		movq	%rax, %rdi
 559 02ef E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 559      00
 560 02f4 4989C4   		movq	%rax, %r12
 561 02f7 488B85F8 		movq	-520(%rbp), %rax
 561      FDFFFF
 562 02fe 488D5808 		leaq	8(%rax), %rbx
 563 0302 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 563      00
 564              		.loc 3 34 0 discriminator 21
 565 0307 488B00   		movq	(%rax), %rax
 566 030a 4C89E2   		movq	%r12, %rdx
 567 030d 4889DE   		movq	%rbx, %rsi
 568 0310 4889C7   		movq	%rax, %rdi
 569 0313 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 569      00
 570              	.LEHE15:
 571              		.loc 3 34 0 discriminator 25
 572 0318 488D8540 		leaq	-448(%rbp), %rax
 572      FEFFFF
 573 031f 4889C7   		movq	%rax, %rdi
 574              	.LEHB16:
 575 0322 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 575      00
 576              	.LEHE16:
 577              	.LBE15:
 578              		.loc 3 34 0 discriminator 26
 579 0327 E8000000 		call	__cxa_end_catch
 579      00
 580              	.LBE14:
 581 032c E9E90000 		jmp	.L21
 581      00
 582              	.L41:
 583              		.loc 3 34 0
 584 0331 4889C7   		movq	%rax, %rdi
 585 0334 E8000000 		call	__cxa_begin_catch
 585      00
 586 0339 80BD0FFE 		cmpb	$0, -497(%rbp)
 586      FFFF00
 587 0340 7443     		je	.L28
 588              		.loc 3 34 0 discriminator 28
 589 0342 488B85F8 		movq	-520(%rbp), %rax
 589      FDFFFF
 590 0349 488D4808 		leaq	8(%rax), %rcx
 591 034d 488D8520 		leaq	-480(%rbp), %rax
 591      FEFFFF
 592 0354 BA220000 		movl	$34, %edx
 592      00
 593 0359 4889CE   		movq	%rcx, %rsi
 594 035c 4889C7   		movq	%rax, %rdi
 595              	.LEHB17:
 596 035f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 596      00
 597              		.loc 3 34 0 discriminator 31
 598 0364 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 598      00
 599 0369 488B00   		movq	(%rax), %rax
 600 036c 488D8D20 		leaq	-480(%rbp), %rcx
 600      FEFFFF
 601 0373 BA000000 		movl	$.LC4, %edx
 601      00
 602 0378 4889CE   		movq	%rcx, %rsi
 603 037b 4889C7   		movq	%rax, %rdi
 604 037e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 604      00
 605 0383 EB41     		jmp	.L29
 606              	.L28:
 607              		.loc 3 34 0 discriminator 29
 608 0385 488B85F8 		movq	-520(%rbp), %rax
 608      FDFFFF
 609 038c 488D4808 		leaq	8(%rax), %rcx
 610 0390 488D8520 		leaq	-480(%rbp), %rax
 610      FEFFFF
 611 0397 BA220000 		movl	$34, %edx
 611      00
 612 039c 4889CE   		movq	%rcx, %rsi
 613 039f 4889C7   		movq	%rax, %rdi
 614 03a2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 614      00
 615              		.loc 3 34 0 discriminator 38
 616 03a7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 616      00
 617 03ac 488B00   		movq	(%rax), %rax
 618 03af 488D8D20 		leaq	-480(%rbp), %rcx
 618      FEFFFF
 619 03b6 BA000000 		movl	$.LC5, %edx
 619      00
 620 03bb 4889CE   		movq	%rcx, %rsi
 621 03be 4889C7   		movq	%rax, %rdi
 622 03c1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 622      00
 623              	.LEHE17:
 624              	.L29:
 625              	.LEHB18:
 626              		.loc 3 34 0 discriminator 43
 627 03c6 E8000000 		call	__cxa_end_catch
 627      00
 628 03cb EB4D     		jmp	.L21
 629              	.L37:
 630 03cd 4889C3   		movq	%rax, %rbx
 631              	.LBB17:
 632              		.loc 3 34 0
 633 03d0 E8000000 		call	__cxa_end_catch
 633      00
 634 03d5 4889D8   		movq	%rbx, %rax
 635 03d8 4889C7   		movq	%rax, %rdi
 636 03db E8000000 		call	_Unwind_Resume
 636      00
 637              	.LEHE18:
 638              	.L39:
 639 03e0 4889C3   		movq	%rax, %rbx
 640              	.LBE17:
 641              	.LBB18:
 642              	.LBB16:
 643 03e3 488D8540 		leaq	-448(%rbp), %rax
 643      FEFFFF
 644 03ea 4889C7   		movq	%rax, %rdi
 645 03ed E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 645      00
 646 03f2 EB03     		jmp	.L32
 647              	.L38:
 648 03f4 4889C3   		movq	%rax, %rbx
 649              	.L32:
 650              	.LBE16:
 651 03f7 E8000000 		call	__cxa_end_catch
 651      00
 652 03fc 4889D8   		movq	%rbx, %rax
 653 03ff 4889C7   		movq	%rax, %rdi
 654              	.LEHB19:
 655 0402 E8000000 		call	_Unwind_Resume
 655      00
 656              	.LEHE19:
 657              	.L40:
 658 0407 4889C3   		movq	%rax, %rbx
 659              	.LBE18:
 660 040a E8000000 		call	__cxa_end_catch
 660      00
 661 040f 4889D8   		movq	%rbx, %rax
 662 0412 4889C7   		movq	%rax, %rdi
 663              	.LEHB20:
 664 0415 E8000000 		call	_Unwind_Resume
 664      00
 665              	.LEHE20:
 666              	.L21:
 667 041a 488B45E8 		movq	-24(%rbp), %rax
 668 041e 64483304 		xorq	%fs:40, %rax
 668      25280000 
 668      00
 669 0427 7405     		je	.L34
 670 0429 E8000000 		call	__stack_chk_fail
 670      00
 671              	.L34:
 672 042e 4881C400 		addq	$512, %rsp
 672      020000
 673 0435 5B       		popq	%rbx
 674 0436 415C     		popq	%r12
 675 0438 5D       		popq	%rbp
 676              		.cfi_def_cfa 7, 8
 677 0439 C3       		ret
 678              		.cfi_endproc
 679              	.LFE1343:
 680              		.section	.gcc_except_table
 681              		.align 4
 682              	.LLSDA1343:
 683 0020 FF       		.byte	0xff
 684 0021 03       		.byte	0x3
 685 0022 55       		.uleb128 .LLSDATT1343-.LLSDATTD1343
 686              	.LLSDATTD1343:
 687 0023 01       		.byte	0x1
 688 0024 3C       		.uleb128 .LLSDACSE1343-.LLSDACSB1343
 689              	.LLSDACSB1343:
 690 0025 43       		.uleb128 .LEHB10-.LFB1343
 691 0026 05       		.uleb128 .LEHE10-.LEHB10
 692 0027 9D01     		.uleb128 .L35-.LFB1343
 693 0029 05       		.uleb128 0x5
 694 002a 67       		.uleb128 .LEHB11-.LFB1343
 695 002b 05       		.uleb128 .LEHE11-.LEHB11
 696 002c 8001     		.uleb128 .L36-.LFB1343
 697 002e 07       		.uleb128 0x7
 698 002f 76       		.uleb128 .LEHB12-.LFB1343
 699 0030 05       		.uleb128 .LEHE12-.LEHB12
 700 0031 9D01     		.uleb128 .L35-.LFB1343
 701 0033 05       		.uleb128 0x5
 702 0034 EB01     		.uleb128 .LEHB13-.LFB1343
 703 0036 5F       		.uleb128 .LEHE13-.LEHB13
 704 0037 9905     		.uleb128 .L37-.LFB1343
 705 0039 00       		.uleb128 0
 706 003a ED02     		.uleb128 .LEHB14-.LFB1343
 707 003c 05       		.uleb128 .LEHE14-.LEHB14
 708 003d C005     		.uleb128 .L38-.LFB1343
 709 003f 00       		.uleb128 0
 710 0040 A103     		.uleb128 .LEHB15-.LFB1343
 711 0042 43       		.uleb128 .LEHE15-.LEHB15
 712 0043 AC05     		.uleb128 .L39-.LFB1343
 713 0045 00       		.uleb128 0
 714 0046 EE03     		.uleb128 .LEHB16-.LFB1343
 715 0048 05       		.uleb128 .LEHE16-.LEHB16
 716 0049 C005     		.uleb128 .L38-.LFB1343
 717 004b 00       		.uleb128 0
 718 004c AB04     		.uleb128 .LEHB17-.LFB1343
 719 004e 67       		.uleb128 .LEHE17-.LEHB17
 720 004f D305     		.uleb128 .L40-.LFB1343
 721 0051 00       		.uleb128 0
 722 0052 9205     		.uleb128 .LEHB18-.LFB1343
 723 0054 1A       		.uleb128 .LEHE18-.LEHB18
 724 0055 00       		.uleb128 0
 725 0056 00       		.uleb128 0
 726 0057 CE05     		.uleb128 .LEHB19-.LFB1343
 727 0059 05       		.uleb128 .LEHE19-.LEHB19
 728 005a 00       		.uleb128 0
 729 005b 00       		.uleb128 0
 730 005c E105     		.uleb128 .LEHB20-.LFB1343
 731 005e 05       		.uleb128 .LEHE20-.LEHB20
 732 005f 00       		.uleb128 0
 733 0060 00       		.uleb128 0
 734              	.LLSDACSE1343:
 735 0061 03       		.byte	0x3
 736 0062 00       		.byte	0
 737 0063 02       		.byte	0x2
 738 0064 7D       		.byte	0x7d
 739 0065 01       		.byte	0x1
 740 0066 7D       		.byte	0x7d
 741 0067 00       		.byte	0
 742 0068 7D       		.byte	0x7d
 743 0069 000000   		.align 4
 744 006c 00000000 		.long	0
 745              	
 746 0070 00000000 		.long	_ZTISt9exception
 747 0074 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 748              	.LLSDATT1343:
 749              		.text
 751              		.section	.rodata
 752              	.LC6:
 753 00e6 66696C65 		.string	"filename.h"
 753      6E616D65 
 753      2E6800
 754              	.LC7:
 755 00f1 73756974 		.string	"suite"
 755      6500
 756              	.LC8:
 757 00f7 54657374 		.string	"TestName"
 757      4E616D65 
 757      00
 758              	.LC9:
 759 0100 22222727 		.string	"\"\"''&&<<>>"
 759      26263C3C 
 759      3E3E00
 760 010b 00000000 		.align 8
 760      00
 761              	.LC11:
 762 0110 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"2\" failures=\"3\" tim
 762      6C207665 
 762      7273696F 
 762      6E3D2231 
 762      2E30223F 
 763 020d 000000   		.align 8
 764              	.LC12:
 765 0210 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(expected, output.str())"
 765      6E646C65 
 765      64206578 
 765      63657074 
 765      696F6E20 
 766              		.text
 767              		.align 2
 769              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv:
 770              	.LFB1347:
  35:TestXmlTestReporter.cpp **** {
 771              		.loc 3 35 0 is_stmt 1
 772              		.cfi_startproc
 773              		.cfi_personality 0x3,__gxx_personality_v0
 774              		.cfi_lsda 0x3,.LLSDA1347
 775 043a 55       		pushq	%rbp
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 6, -16
 778 043b 4889E5   		movq	%rsp, %rbp
 779              		.cfi_def_cfa_register 6
 780 043e 53       		pushq	%rbx
 781 043f 4881EC98 		subq	$152, %rsp
 781      000000
 782              		.cfi_offset 3, -24
 783 0446 4889BD68 		movq	%rdi, -152(%rbp)
 783      FFFFFF
 784              		.loc 3 35 0
 785 044d 64488B04 		movq	%fs:40, %rax
 785      25280000 
 785      00
 786 0456 488945E8 		movq	%rax, -24(%rbp)
 787 045a 31C0     		xorl	%eax, %eax
  36:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "suite", "filename.h", 4321);
 788              		.loc 3 36 0
 789 045c 488D4580 		leaq	-128(%rbp), %rax
 790 0460 41B8E110 		movl	$4321, %r8d
 790      0000
 791 0466 B9000000 		movl	$.LC6, %ecx
 791      00
 792 046b BA000000 		movl	$.LC7, %edx
 792      00
 793 0470 BE000000 		movl	$.LC8, %esi
 793      00
 794 0475 4889C7   		movq	%rax, %rdi
 795              	.LEHB21:
 796 0478 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 796      00
  37:TestXmlTestReporter.cpp **** 
  38:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 797              		.loc 3 38 0
 798 047d 488B8568 		movq	-152(%rbp), %rax
 798      FFFFFF
 799 0484 488D9078 		leaq	376(%rax), %rdx
 799      010000
 800 048b 488D4580 		leaq	-128(%rbp), %rax
 801 048f 4889C6   		movq	%rax, %rsi
 802 0492 4889D7   		movq	%rdx, %rdi
 803 0495 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 803      00
  39:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "\"\"\'\'&&<<>>");
 804              		.loc 3 39 0
 805 049a 488B8568 		movq	-152(%rbp), %rax
 805      FFFFFF
 806 04a1 488D8878 		leaq	376(%rax), %rcx
 806      010000
 807 04a8 488D4580 		leaq	-128(%rbp), %rax
 808 04ac BA000000 		movl	$.LC9, %edx
 808      00
 809 04b1 4889C6   		movq	%rax, %rsi
 810 04b4 4889CF   		movq	%rcx, %rdi
 811 04b7 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 811      00
  40:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 0.1f);
 812              		.loc 3 40 0
 813 04bc 488B8568 		movq	-152(%rbp), %rax
 813      FFFFFF
 814 04c3 488D9078 		leaq	376(%rax), %rdx
 814      010000
 815 04ca 488D4580 		leaq	-128(%rbp), %rax
 816 04ce F30F1005 		movss	.LC10(%rip), %xmm0
 816      00000000 
 817 04d6 4889C6   		movq	%rax, %rsi
 818 04d9 4889D7   		movq	%rdx, %rdi
 819 04dc E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 819      00
  41:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 2, 3, 0.1f);
 820              		.loc 3 41 0
 821 04e1 488B8568 		movq	-152(%rbp), %rax
 821      FFFFFF
 822 04e8 48057801 		addq	$376, %rax
 822      0000
 823 04ee F30F1005 		movss	.LC10(%rip), %xmm0
 823      00000000 
 824 04f6 B9030000 		movl	$3, %ecx
 824      00
 825 04fb BA020000 		movl	$2, %edx
 825      00
 826 0500 BE010000 		movl	$1, %esi
 826      00
 827 0505 4889C7   		movq	%rax, %rdi
 828 0508 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 828      00
 829              	.LEHE21:
  42:TestXmlTestReporter.cpp **** 
  43:TestXmlTestReporter.cpp ****     char const* expected =
  44:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
  45:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"2\" failures=\"3\" time=\"0.1\">"
  46:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"TestName\" time=\"0.1\">"
  47:TestXmlTestReporter.cpp ****         "<failure message=\"filename.h(4321) : "
  48:TestXmlTestReporter.cpp ****         "&quot;&quot;&apos;&apos;&amp;&amp;&lt;&lt;&gt;&gt;\"/>"
  49:TestXmlTestReporter.cpp ****         "</test>"
  50:TestXmlTestReporter.cpp ****         "</unittest-results>";
 830              		.loc 3 50 0
 831 050d 48C78578 		movq	$.LC11, -136(%rbp)
 831      FFFFFF00 
 831      000000
 832              	.LEHB22:
  51:TestXmlTestReporter.cpp **** 
  52:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 833              		.loc 3 52 0
 834 0518 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 834      00
 835 051d 488B08   		movq	(%rax), %rcx
 836 0520 488D45A0 		leaq	-96(%rbp), %rax
 837 0524 BA340000 		movl	$52, %edx
 837      00
 838 0529 4889CE   		movq	%rcx, %rsi
 839 052c 4889C7   		movq	%rax, %rdi
 840 052f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 840      00
 841              		.loc 3 52 0 is_stmt 0 discriminator 2
 842 0534 488B9568 		movq	-152(%rbp), %rdx
 842      FFFFFF
 843 053b 488D45C0 		leaq	-64(%rbp), %rax
 844 053f 4889D6   		movq	%rdx, %rsi
 845 0542 4889C7   		movq	%rax, %rdi
 846 0545 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 846      00
 847              	.LEHE22:
 848              	.LEHB23:
 849              		.loc 3 52 0 discriminator 4
 850 054a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 850      00
 851 054f 488B00   		movq	(%rax), %rax
 852 0552 488D4DA0 		leaq	-96(%rbp), %rcx
 853 0556 488D55C0 		leaq	-64(%rbp), %rdx
 854 055a 488DB578 		leaq	-136(%rbp), %rsi
 854      FFFFFF
 855 0561 4889C7   		movq	%rax, %rdi
 856 0564 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 856      00
 857              	.LEHE23:
 858              		.loc 3 52 0 discriminator 8
 859 0569 488D45C0 		leaq	-64(%rbp), %rax
 860 056d 4889C7   		movq	%rax, %rdi
 861              	.LEHB24:
 862 0570 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 862      00
 863              	.LEHE24:
  53:TestXmlTestReporter.cpp **** }
 864              		.loc 3 53 0 is_stmt 1
 865 0575 EB6E     		jmp	.L42
 866              	.L49:
 867 0577 4889C3   		movq	%rax, %rbx
  52:TestXmlTestReporter.cpp **** }
 868              		.loc 3 52 0
 869 057a 488D45C0 		leaq	-64(%rbp), %rax
 870 057e 4889C7   		movq	%rax, %rdi
 871 0581 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 871      00
 872 0586 4889D8   		movq	%rbx, %rax
 873 0589 EB00     		jmp	.L44
 874              	.L48:
 875              	.L44:
 876 058b 4889C7   		movq	%rax, %rdi
 877 058e E8000000 		call	__cxa_begin_catch
 877      00
 878              	.LEHB25:
 879 0593 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 879      00
 880 0598 488B08   		movq	(%rax), %rcx
 881 059b 488D45A0 		leaq	-96(%rbp), %rax
 882 059f BA340000 		movl	$52, %edx
 882      00
 883 05a4 4889CE   		movq	%rcx, %rsi
 884 05a7 4889C7   		movq	%rax, %rdi
 885 05aa E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 885      00
  52:TestXmlTestReporter.cpp **** }
 886              		.loc 3 52 0 is_stmt 0 discriminator 14
 887 05af E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 887      00
 888 05b4 488B00   		movq	(%rax), %rax
 889 05b7 488D4DA0 		leaq	-96(%rbp), %rcx
 890 05bb BA000000 		movl	$.LC12, %edx
 890      00
 891 05c0 4889CE   		movq	%rcx, %rsi
 892 05c3 4889C7   		movq	%rax, %rdi
 893 05c6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 893      00
 894              	.LEHE25:
 895              	.LEHB26:
  52:TestXmlTestReporter.cpp **** }
 896              		.loc 3 52 0 discriminator 18
 897 05cb E8000000 		call	__cxa_end_catch
 897      00
 898              	.LEHE26:
 899              		.loc 3 53 0 is_stmt 1 discriminator 18
 900 05d0 EB13     		jmp	.L42
 901              	.L50:
 902 05d2 4889C3   		movq	%rax, %rbx
  52:TestXmlTestReporter.cpp **** }
 903              		.loc 3 52 0
 904 05d5 E8000000 		call	__cxa_end_catch
 904      00
 905 05da 4889D8   		movq	%rbx, %rax
 906 05dd 4889C7   		movq	%rax, %rdi
 907              	.LEHB27:
 908 05e0 E8000000 		call	_Unwind_Resume
 908      00
 909              	.LEHE27:
 910              	.L42:
 911              		.loc 3 53 0
 912 05e5 488B45E8 		movq	-24(%rbp), %rax
 913 05e9 64483304 		xorq	%fs:40, %rax
 913      25280000 
 913      00
 914 05f2 7405     		je	.L47
 915 05f4 E8000000 		call	__stack_chk_fail
 915      00
 916              	.L47:
 917 05f9 4881C498 		addq	$152, %rsp
 917      000000
 918 0600 5B       		popq	%rbx
 919 0601 5D       		popq	%rbp
 920              		.cfi_def_cfa 7, 8
 921 0602 C3       		ret
 922              		.cfi_endproc
 923              	.LFE1347:
 924              		.section	.gcc_except_table
 925              		.align 4
 926              	.LLSDA1347:
 927 0078 FF       		.byte	0xff
 928 0079 03       		.byte	0x3
 929 007a 31       		.uleb128 .LLSDATT1347-.LLSDATTD1347
 930              	.LLSDATTD1347:
 931 007b 01       		.byte	0x1
 932 007c 27       		.uleb128 .LLSDACSE1347-.LLSDACSB1347
 933              	.LLSDACSB1347:
 934 007d 3E       		.uleb128 .LEHB21-.LFB1347
 935 007e 9501     		.uleb128 .LEHE21-.LEHB21
 936 0080 00       		.uleb128 0
 937 0081 00       		.uleb128 0
 938 0082 DE01     		.uleb128 .LEHB22-.LFB1347
 939 0084 32       		.uleb128 .LEHE22-.LEHB22
 940 0085 D102     		.uleb128 .L48-.LFB1347
 941 0087 01       		.uleb128 0x1
 942 0088 9002     		.uleb128 .LEHB23-.LFB1347
 943 008a 1F       		.uleb128 .LEHE23-.LEHB23
 944 008b BD02     		.uleb128 .L49-.LFB1347
 945 008d 03       		.uleb128 0x3
 946 008e B602     		.uleb128 .LEHB24-.LFB1347
 947 0090 05       		.uleb128 .LEHE24-.LEHB24
 948 0091 D102     		.uleb128 .L48-.LFB1347
 949 0093 01       		.uleb128 0x1
 950 0094 D902     		.uleb128 .LEHB25-.LFB1347
 951 0096 38       		.uleb128 .LEHE25-.LEHB25
 952 0097 9803     		.uleb128 .L50-.LFB1347
 953 0099 00       		.uleb128 0
 954 009a 9103     		.uleb128 .LEHB26-.LFB1347
 955 009c 05       		.uleb128 .LEHE26-.LEHB26
 956 009d 00       		.uleb128 0
 957 009e 00       		.uleb128 0
 958 009f A603     		.uleb128 .LEHB27-.LFB1347
 959 00a1 05       		.uleb128 .LEHE27-.LEHB27
 960 00a2 00       		.uleb128 0
 961 00a3 00       		.uleb128 0
 962              	.LLSDACSE1347:
 963 00a4 01       		.byte	0x1
 964 00a5 00       		.byte	0
 965 00a6 00       		.byte	0
 966 00a7 7D       		.byte	0x7d
 967              		.align 4
 968 00a8 00000000 		.long	0
 969              	
 970              	.LLSDATT1347:
 971              		.text
 973 0603 90       		.align 2
 975              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC2ERKN8UnitT
 976              	.LFB1349:
  54:TestXmlTestReporter.cpp **** 
  55:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, OutputIsCachedUntilReportSummaryIsCalled)
 977              		.loc 3 55 0
 978              		.cfi_startproc
 979 0604 55       		pushq	%rbp
 980              		.cfi_def_cfa_offset 16
 981              		.cfi_offset 6, -16
 982 0605 4889E5   		movq	%rsp, %rbp
 983              		.cfi_def_cfa_register 6
 984 0608 4883EC10 		subq	$16, %rsp
 985 060c 48897DF8 		movq	%rdi, -8(%rbp)
 986 0610 488975F0 		movq	%rsi, -16(%rbp)
 987              	.LBB19:
 988              		.loc 3 55 0
 989 0614 488B45F8 		movq	-8(%rbp), %rax
 990 0618 4889C7   		movq	%rax, %rdi
 991 061b E8E0F9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 991      FF
 992 0620 488B45F8 		movq	-8(%rbp), %rax
 993 0624 488B55F0 		movq	-16(%rbp), %rdx
 994 0628 488990A0 		movq	%rdx, 416(%rax)
 994      010000
 995              	.LBE19:
 996 062f 90       		nop
 997 0630 C9       		leave
 998              		.cfi_def_cfa 7, 8
 999 0631 C3       		ret
 1000              		.cfi_endproc
 1001              	.LFE1349:
 1003              		.set	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN
 1004              		.section	.rodata
 1005 024b 00000000 		.align 8
 1005      00
 1006              	.LC13:
 1007 0250 4F757470 		.string	"OutputIsCachedUntilReportSummaryIsCalled"
 1007      75744973 
 1007      43616368 
 1007      6564556E 
 1007      74696C52 
 1008              		.text
 1009              		.align 2
 1011              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC2Ev:
 1012              	.LFB1352:
 1013              		.loc 3 55 0
 1014              		.cfi_startproc
 1015 0632 55       		pushq	%rbp
 1016              		.cfi_def_cfa_offset 16
 1017              		.cfi_offset 6, -16
 1018 0633 4889E5   		movq	%rsp, %rbp
 1019              		.cfi_def_cfa_register 6
 1020 0636 4883EC10 		subq	$16, %rsp
 1021 063a 48897DF8 		movq	%rdi, -8(%rbp)
 1022              	.LBB20:
 1023              		.loc 3 55 0
 1024 063e E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1024      00
 1025 0643 4889C2   		movq	%rax, %rdx
 1026 0646 488B45F8 		movq	-8(%rbp), %rax
 1027 064a 41B83700 		movl	$55, %r8d
 1027      0000
 1028 0650 B9000000 		movl	$.LC1, %ecx
 1028      00
 1029 0655 BE000000 		movl	$.LC13, %esi
 1029      00
 1030 065a 4889C7   		movq	%rax, %rdi
 1031 065d E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1031      00
 1032 0662 BA000000 		movl	$_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE+16,
 1032      00
 1033 0667 488B45F8 		movq	-8(%rbp), %rax
 1034 066b 488910   		movq	%rdx, (%rax)
 1035              	.LBE20:
 1036 066e 90       		nop
 1037 066f C9       		leave
 1038              		.cfi_def_cfa 7, 8
 1039 0670 C3       		ret
 1040              		.cfi_endproc
 1041              	.LFE1352:
 1043              		.set	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev,_ZN
 1044              		.local	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstan
 1045              		.comm	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 1046              		.local	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 1047              		.comm	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE,1,1
 1048 0671 90       		.align 2
 1050              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD2Ev:
 1051              	.LFB1356:
 1052              		.loc 3 55 0
 1053              		.cfi_startproc
 1054 0672 55       		pushq	%rbp
 1055              		.cfi_def_cfa_offset 16
 1056              		.cfi_offset 6, -16
 1057 0673 4889E5   		movq	%rsp, %rbp
 1058              		.cfi_def_cfa_register 6
 1059 0676 4883EC10 		subq	$16, %rsp
 1060 067a 48897DF8 		movq	%rdi, -8(%rbp)
 1061              	.LBB21:
 1062              		.loc 3 55 0
 1063 067e 488B45F8 		movq	-8(%rbp), %rax
 1064 0682 4889C7   		movq	%rax, %rdi
 1065 0685 E8D2F9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 1065      FF
 1066              	.LBE21:
 1067 068a 90       		nop
 1068 068b C9       		leave
 1069              		.cfi_def_cfa 7, 8
 1070 068c C3       		ret
 1071              		.cfi_endproc
 1072              	.LFE1356:
 1074              		.set	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev,_
 1075 068d 90       		.align 2
 1077              	_ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunImplEv:
 1078              	.LFB1354:
 1079              		.loc 3 55 0
 1080              		.cfi_startproc
 1081              		.cfi_personality 0x3,__gxx_personality_v0
 1082              		.cfi_lsda 0x3,.LLSDA1354
 1083 068e 55       		pushq	%rbp
 1084              		.cfi_def_cfa_offset 16
 1085              		.cfi_offset 6, -16
 1086 068f 4889E5   		movq	%rsp, %rbp
 1087              		.cfi_def_cfa_register 6
 1088 0692 4154     		pushq	%r12
 1089 0694 53       		pushq	%rbx
 1090 0695 4881EC00 		subq	$512, %rsp
 1090      020000
 1091              		.cfi_offset 12, -24
 1092              		.cfi_offset 3, -32
 1093 069c 4889BDF8 		movq	%rdi, -520(%rbp)
 1093      FDFFFF
 1094              		.loc 3 55 0
 1095 06a3 64488B04 		movq	%fs:40, %rax
 1095      25280000 
 1095      00
 1096 06ac 488945E8 		movq	%rax, -24(%rbp)
 1097 06b0 31C0     		xorl	%eax, %eax
 1098 06b2 C6850FFE 		movb	$0, -497(%rbp)
 1098      FFFF00
 1099              	.LBB22:
 1100 06b9 488B85F8 		movq	-520(%rbp), %rax
 1100      FDFFFF
 1101 06c0 488D5008 		leaq	8(%rax), %rdx
 1102 06c4 488D8540 		leaq	-448(%rbp), %rax
 1102      FEFFFF
 1103 06cb 4889D6   		movq	%rdx, %rsi
 1104 06ce 4889C7   		movq	%rax, %rdi
 1105              	.LEHB28:
 1106 06d1 E82EFFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN
 1106      FF
 1107              	.LEHE28:
 1108              		.loc 3 55 0 is_stmt 0 discriminator 1
 1109 06d6 C6850FFE 		movb	$1, -497(%rbp)
 1109      FFFF01
 1110 06dd 488B85F8 		movq	-520(%rbp), %rax
 1110      FDFFFF
 1111 06e4 488D5008 		leaq	8(%rax), %rdx
 1112 06e8 488D8540 		leaq	-448(%rbp), %rax
 1112      FEFFFF
 1113 06ef 4889D6   		movq	%rdx, %rsi
 1114 06f2 4889C7   		movq	%rax, %rdi
 1115              	.LEHB29:
 1116 06f5 E8052800 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSum
 1116      00
 1117              	.LEHE29:
 1118              		.loc 3 55 0 discriminator 3
 1119 06fa 488D8540 		leaq	-448(%rbp), %rax
 1119      FEFFFF
 1120 0701 4889C7   		movq	%rax, %rdi
 1121              	.LEHB30:
 1122 0704 E869FFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
 1122      FF
 1123              	.LEHE30:
 1124              	.LBE22:
 1125              		.loc 3 55 0
 1126 0709 E9660200 		jmp	.L54
 1126      00
 1127              	.L69:
 1128 070e 4989C4   		movq	%rax, %r12
 1129 0711 4889D3   		movq	%rdx, %rbx
 1130              	.LBB23:
 1131 0714 488D8540 		leaq	-448(%rbp), %rax
 1131      FEFFFF
 1132 071b 4889C7   		movq	%rax, %rdi
 1133 071e E84FFFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
 1133      FF
 1134 0723 4C89E0   		movq	%r12, %rax
 1135 0726 4889DA   		movq	%rbx, %rdx
 1136 0729 EB00     		jmp	.L56
 1137              	.L68:
 1138              	.L56:
 1139 072b 4883FA01 		cmpq	$1, %rdx
 1140 072f 740F     		je	.L58
 1141 0731 4883FA02 		cmpq	$2, %rdx
 1142 0735 0F84A700 		je	.L59
 1142      0000
 1143 073b E94B0100 		jmp	.L74
 1143      00
 1144              	.L58:
 1145              	.LBE23:
 1146              	.LBB24:
 1147 0740 4889C7   		movq	%rax, %rdi
 1148 0743 E8000000 		call	__cxa_begin_catch
 1148      00
 1149 0748 48898510 		movq	%rax, -496(%rbp)
 1149      FEFFFF
 1150 074f 488B8510 		movq	-496(%rbp), %rax
 1150      FEFFFF
 1151 0756 488B00   		movq	(%rax), %rax
 1152 0759 4883C010 		addq	$16, %rax
 1153 075d 488B00   		movq	(%rax), %rax
 1154 0760 488B9510 		movq	-496(%rbp), %rdx
 1154      FEFFFF
 1155 0767 4889D7   		movq	%rdx, %rdi
 1156 076a FFD0     		call	*%rax
 1157 076c 4889C3   		movq	%rax, %rbx
 1158 076f 488B8510 		movq	-496(%rbp), %rax
 1158      FEFFFF
 1159 0776 4889C7   		movq	%rax, %rdi
 1160              	.LEHB31:
 1161 0779 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 1161      00
 1162 077e 4189C4   		movl	%eax, %r12d
 1163 0781 488B8510 		movq	-496(%rbp), %rax
 1163      FEFFFF
 1164 0788 4889C7   		movq	%rax, %rdi
 1165 078b E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 1165      00
 1166              		.loc 3 55 0 discriminator 5
 1167 0790 4889C1   		movq	%rax, %rcx
 1168 0793 488B85F8 		movq	-520(%rbp), %rax
 1168      FDFFFF
 1169 079a 488B5008 		movq	8(%rax), %rdx
 1170 079e 488B85F8 		movq	-520(%rbp), %rax
 1170      FDFFFF
 1171 07a5 488B7010 		movq	16(%rax), %rsi
 1172 07a9 488D8520 		leaq	-480(%rbp), %rax
 1172      FEFFFF
 1173 07b0 4589E0   		movl	%r12d, %r8d
 1174 07b3 4889C7   		movq	%rax, %rdi
 1175 07b6 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1175      00
 1176              		.loc 3 55 0 discriminator 9
 1177 07bb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1177      00
 1178 07c0 488B00   		movq	(%rax), %rax
 1179 07c3 488D8D20 		leaq	-480(%rbp), %rcx
 1179      FEFFFF
 1180 07ca 4889DA   		movq	%rbx, %rdx
 1181 07cd 4889CE   		movq	%rcx, %rsi
 1182 07d0 4889C7   		movq	%rax, %rdi
 1183 07d3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1183      00
 1184              	.LEHE31:
 1185              		.loc 3 55 0 discriminator 13
 1186 07d8 E8000000 		call	__cxa_end_catch
 1186      00
 1187              	.LBE24:
 1188 07dd E9920100 		jmp	.L54
 1188      00
 1189              	.L59:
 1190              	.LBB25:
 1191              		.loc 3 55 0
 1192 07e2 4889C7   		movq	%rax, %rdi
 1193 07e5 E8000000 		call	__cxa_begin_catch
 1193      00
 1194 07ea 48898518 		movq	%rax, -488(%rbp)
 1194      FEFFFF
 1195              	.LBB26:
 1196 07f1 488D8540 		leaq	-448(%rbp), %rax
 1196      FEFFFF
 1197 07f8 4889C7   		movq	%rax, %rdi
 1198              	.LEHB32:
 1199 07fb E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1199      00
 1200              	.LEHE32:
 1201              		.loc 3 55 0 discriminator 15
 1202 0800 488B8518 		movq	-488(%rbp), %rax
 1202      FEFFFF
 1203 0807 488B00   		movq	(%rax), %rax
 1204 080a 4883C010 		addq	$16, %rax
 1205 080e 488B00   		movq	(%rax), %rax
 1206 0811 488B9518 		movq	-488(%rbp), %rdx
 1206      FEFFFF
 1207 0818 4889D7   		movq	%rdx, %rdi
 1208 081b FFD0     		call	*%rax
 1209 081d 4889C3   		movq	%rax, %rbx
 1210 0820 488D8540 		leaq	-448(%rbp), %rax
 1210      FEFFFF
 1211 0827 BE000000 		movl	$.LC3, %esi
 1211      00
 1212 082c 4889C7   		movq	%rax, %rdi
 1213              	.LEHB33:
 1214 082f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1214      00
 1215 0834 4889DE   		movq	%rbx, %rsi
 1216 0837 4889C7   		movq	%rax, %rdi
 1217 083a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1217      00
 1218              		.loc 3 55 0 discriminator 19
 1219 083f 488D8540 		leaq	-448(%rbp), %rax
 1219      FEFFFF
 1220 0846 4889C7   		movq	%rax, %rdi
 1221 0849 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 1221      00
 1222 084e 4989C4   		movq	%rax, %r12
 1223 0851 488B85F8 		movq	-520(%rbp), %rax
 1223      FDFFFF
 1224 0858 488D5808 		leaq	8(%rax), %rbx
 1225 085c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1225      00
 1226              		.loc 3 55 0 discriminator 21
 1227 0861 488B00   		movq	(%rax), %rax
 1228 0864 4C89E2   		movq	%r12, %rdx
 1229 0867 4889DE   		movq	%rbx, %rsi
 1230 086a 4889C7   		movq	%rax, %rdi
 1231 086d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1231      00
 1232              	.LEHE33:
 1233              		.loc 3 55 0 discriminator 25
 1234 0872 488D8540 		leaq	-448(%rbp), %rax
 1234      FEFFFF
 1235 0879 4889C7   		movq	%rax, %rdi
 1236              	.LEHB34:
 1237 087c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1237      00
 1238              	.LEHE34:
 1239              	.LBE26:
 1240              		.loc 3 55 0 discriminator 26
 1241 0881 E8000000 		call	__cxa_end_catch
 1241      00
 1242              	.LBE25:
 1243 0886 E9E90000 		jmp	.L54
 1243      00
 1244              	.L74:
 1245              		.loc 3 55 0
 1246 088b 4889C7   		movq	%rax, %rdi
 1247 088e E8000000 		call	__cxa_begin_catch
 1247      00
 1248 0893 80BD0FFE 		cmpb	$0, -497(%rbp)
 1248      FFFF00
 1249 089a 7443     		je	.L61
 1250              		.loc 3 55 0 discriminator 28
 1251 089c 488B85F8 		movq	-520(%rbp), %rax
 1251      FDFFFF
 1252 08a3 488D4808 		leaq	8(%rax), %rcx
 1253 08a7 488D8520 		leaq	-480(%rbp), %rax
 1253      FEFFFF
 1254 08ae BA370000 		movl	$55, %edx
 1254      00
 1255 08b3 4889CE   		movq	%rcx, %rsi
 1256 08b6 4889C7   		movq	%rax, %rdi
 1257              	.LEHB35:
 1258 08b9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1258      00
 1259              		.loc 3 55 0 discriminator 31
 1260 08be E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1260      00
 1261 08c3 488B00   		movq	(%rax), %rax
 1262 08c6 488D8D20 		leaq	-480(%rbp), %rcx
 1262      FEFFFF
 1263 08cd BA000000 		movl	$.LC4, %edx
 1263      00
 1264 08d2 4889CE   		movq	%rcx, %rsi
 1265 08d5 4889C7   		movq	%rax, %rdi
 1266 08d8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1266      00
 1267 08dd EB41     		jmp	.L62
 1268              	.L61:
 1269              		.loc 3 55 0 discriminator 29
 1270 08df 488B85F8 		movq	-520(%rbp), %rax
 1270      FDFFFF
 1271 08e6 488D4808 		leaq	8(%rax), %rcx
 1272 08ea 488D8520 		leaq	-480(%rbp), %rax
 1272      FEFFFF
 1273 08f1 BA370000 		movl	$55, %edx
 1273      00
 1274 08f6 4889CE   		movq	%rcx, %rsi
 1275 08f9 4889C7   		movq	%rax, %rdi
 1276 08fc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1276      00
 1277              		.loc 3 55 0 discriminator 38
 1278 0901 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1278      00
 1279 0906 488B00   		movq	(%rax), %rax
 1280 0909 488D8D20 		leaq	-480(%rbp), %rcx
 1280      FEFFFF
 1281 0910 BA000000 		movl	$.LC5, %edx
 1281      00
 1282 0915 4889CE   		movq	%rcx, %rsi
 1283 0918 4889C7   		movq	%rax, %rdi
 1284 091b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1284      00
 1285              	.LEHE35:
 1286              	.L62:
 1287              	.LEHB36:
 1288              		.loc 3 55 0 discriminator 43
 1289 0920 E8000000 		call	__cxa_end_catch
 1289      00
 1290 0925 EB4D     		jmp	.L54
 1291              	.L70:
 1292 0927 4889C3   		movq	%rax, %rbx
 1293              	.LBB28:
 1294              		.loc 3 55 0
 1295 092a E8000000 		call	__cxa_end_catch
 1295      00
 1296 092f 4889D8   		movq	%rbx, %rax
 1297 0932 4889C7   		movq	%rax, %rdi
 1298 0935 E8000000 		call	_Unwind_Resume
 1298      00
 1299              	.LEHE36:
 1300              	.L72:
 1301 093a 4889C3   		movq	%rax, %rbx
 1302              	.LBE28:
 1303              	.LBB29:
 1304              	.LBB27:
 1305 093d 488D8540 		leaq	-448(%rbp), %rax
 1305      FEFFFF
 1306 0944 4889C7   		movq	%rax, %rdi
 1307 0947 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1307      00
 1308 094c EB03     		jmp	.L65
 1309              	.L71:
 1310 094e 4889C3   		movq	%rax, %rbx
 1311              	.L65:
 1312              	.LBE27:
 1313 0951 E8000000 		call	__cxa_end_catch
 1313      00
 1314 0956 4889D8   		movq	%rbx, %rax
 1315 0959 4889C7   		movq	%rax, %rdi
 1316              	.LEHB37:
 1317 095c E8000000 		call	_Unwind_Resume
 1317      00
 1318              	.LEHE37:
 1319              	.L73:
 1320 0961 4889C3   		movq	%rax, %rbx
 1321              	.LBE29:
 1322 0964 E8000000 		call	__cxa_end_catch
 1322      00
 1323 0969 4889D8   		movq	%rbx, %rax
 1324 096c 4889C7   		movq	%rax, %rdi
 1325              	.LEHB38:
 1326 096f E8000000 		call	_Unwind_Resume
 1326      00
 1327              	.LEHE38:
 1328              	.L54:
 1329 0974 488B45E8 		movq	-24(%rbp), %rax
 1330 0978 64483304 		xorq	%fs:40, %rax
 1330      25280000 
 1330      00
 1331 0981 7405     		je	.L67
 1332 0983 E8000000 		call	__stack_chk_fail
 1332      00
 1333              	.L67:
 1334 0988 4881C400 		addq	$512, %rsp
 1334      020000
 1335 098f 5B       		popq	%rbx
 1336 0990 415C     		popq	%r12
 1337 0992 5D       		popq	%rbp
 1338              		.cfi_def_cfa 7, 8
 1339 0993 C3       		ret
 1340              		.cfi_endproc
 1341              	.LFE1354:
 1342              		.section	.gcc_except_table
 1343              		.align 4
 1344              	.LLSDA1354:
 1345 00ac FF       		.byte	0xff
 1346 00ad 03       		.byte	0x3
 1347 00ae 55       		.uleb128 .LLSDATT1354-.LLSDATTD1354
 1348              	.LLSDATTD1354:
 1349 00af 01       		.byte	0x1
 1350 00b0 3C       		.uleb128 .LLSDACSE1354-.LLSDACSB1354
 1351              	.LLSDACSB1354:
 1352 00b1 43       		.uleb128 .LEHB28-.LFB1354
 1353 00b2 05       		.uleb128 .LEHE28-.LEHB28
 1354 00b3 9D01     		.uleb128 .L68-.LFB1354
 1355 00b5 05       		.uleb128 0x5
 1356 00b6 67       		.uleb128 .LEHB29-.LFB1354
 1357 00b7 05       		.uleb128 .LEHE29-.LEHB29
 1358 00b8 8001     		.uleb128 .L69-.LFB1354
 1359 00ba 07       		.uleb128 0x7
 1360 00bb 76       		.uleb128 .LEHB30-.LFB1354
 1361 00bc 05       		.uleb128 .LEHE30-.LEHB30
 1362 00bd 9D01     		.uleb128 .L68-.LFB1354
 1363 00bf 05       		.uleb128 0x5
 1364 00c0 EB01     		.uleb128 .LEHB31-.LFB1354
 1365 00c2 5F       		.uleb128 .LEHE31-.LEHB31
 1366 00c3 9905     		.uleb128 .L70-.LFB1354
 1367 00c5 00       		.uleb128 0
 1368 00c6 ED02     		.uleb128 .LEHB32-.LFB1354
 1369 00c8 05       		.uleb128 .LEHE32-.LEHB32
 1370 00c9 C005     		.uleb128 .L71-.LFB1354
 1371 00cb 00       		.uleb128 0
 1372 00cc A103     		.uleb128 .LEHB33-.LFB1354
 1373 00ce 43       		.uleb128 .LEHE33-.LEHB33
 1374 00cf AC05     		.uleb128 .L72-.LFB1354
 1375 00d1 00       		.uleb128 0
 1376 00d2 EE03     		.uleb128 .LEHB34-.LFB1354
 1377 00d4 05       		.uleb128 .LEHE34-.LEHB34
 1378 00d5 C005     		.uleb128 .L71-.LFB1354
 1379 00d7 00       		.uleb128 0
 1380 00d8 AB04     		.uleb128 .LEHB35-.LFB1354
 1381 00da 67       		.uleb128 .LEHE35-.LEHB35
 1382 00db D305     		.uleb128 .L73-.LFB1354
 1383 00dd 00       		.uleb128 0
 1384 00de 9205     		.uleb128 .LEHB36-.LFB1354
 1385 00e0 1A       		.uleb128 .LEHE36-.LEHB36
 1386 00e1 00       		.uleb128 0
 1387 00e2 00       		.uleb128 0
 1388 00e3 CE05     		.uleb128 .LEHB37-.LFB1354
 1389 00e5 05       		.uleb128 .LEHE37-.LEHB37
 1390 00e6 00       		.uleb128 0
 1391 00e7 00       		.uleb128 0
 1392 00e8 E105     		.uleb128 .LEHB38-.LFB1354
 1393 00ea 05       		.uleb128 .LEHE38-.LEHB38
 1394 00eb 00       		.uleb128 0
 1395 00ec 00       		.uleb128 0
 1396              	.LLSDACSE1354:
 1397 00ed 03       		.byte	0x3
 1398 00ee 00       		.byte	0
 1399 00ef 02       		.byte	0x2
 1400 00f0 7D       		.byte	0x7d
 1401 00f1 01       		.byte	0x1
 1402 00f2 7D       		.byte	0x7d
 1403 00f3 00       		.byte	0
 1404 00f4 7D       		.byte	0x7d
 1405 00f5 000000   		.align 4
 1406 00f8 00000000 		.long	0
 1407              	
 1408 00fc 00000000 		.long	_ZTISt9exception
 1409 0100 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 1410              	.LLSDATT1354:
 1411              		.text
 1413              		.section	.rodata
 1414              	.LC14:
 1415 0279 00       		.string	""
 1416              	.LC15:
 1417 027a 6D657373 		.string	"message"
 1417      61676500 
 1418              	.LC17:
 1419 0282 6F757470 		.string	"output.str().empty()"
 1419      75742E73 
 1419      74722829 
 1419      2E656D70 
 1419      74792829 
 1420              	.LC18:
 1421 0297 216F7574 		.string	"!output.str().empty()"
 1421      7075742E 
 1421      73747228 
 1421      292E656D 
 1421      70747928 
 1422 02ad 000000   		.align 8
 1423              	.LC19:
 1424 02b0 556E6861 		.string	"Unhandled exception in CHECK(output.str().empty())"
 1424      6E646C65 
 1424      64206578 
 1424      63657074 
 1424      696F6E20 
 1425 02e3 00000000 		.align 8
 1425      00
 1426              	.LC20:
 1427 02e8 556E6861 		.string	"Unhandled exception in CHECK(!output.str().empty())"
 1427      6E646C65 
 1427      64206578 
 1427      63657074 
 1427      696F6E20 
 1428              		.text
 1429              		.align 2
 1431              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunImplEv:
 1432              	.LFB1358:
  56:TestXmlTestReporter.cpp **** {
 1433              		.loc 3 56 0 is_stmt 1
 1434              		.cfi_startproc
 1435              		.cfi_personality 0x3,__gxx_personality_v0
 1436              		.cfi_lsda 0x3,.LLSDA1358
 1437 0994 55       		pushq	%rbp
 1438              		.cfi_def_cfa_offset 16
 1439              		.cfi_offset 6, -16
 1440 0995 4889E5   		movq	%rsp, %rbp
 1441              		.cfi_def_cfa_register 6
 1442 0998 53       		pushq	%rbx
 1443 0999 4881ECA8 		subq	$168, %rsp
 1443      000000
 1444              		.cfi_offset 3, -24
 1445 09a0 4889BD58 		movq	%rdi, -168(%rbp)
 1445      FFFFFF
 1446              		.loc 3 56 0
 1447 09a7 64488B04 		movq	%fs:40, %rax
 1447      25280000 
 1447      00
 1448 09b0 488945E8 		movq	%rax, -24(%rbp)
 1449 09b4 31C0     		xorl	%eax, %eax
  57:TestXmlTestReporter.cpp ****     TestDetails const details("", "", "", 0);
 1450              		.loc 3 57 0
 1451 09b6 488D8560 		leaq	-160(%rbp), %rax
 1451      FFFFFF
 1452 09bd 41B80000 		movl	$0, %r8d
 1452      0000
 1453 09c3 B9000000 		movl	$.LC14, %ecx
 1453      00
 1454 09c8 BA000000 		movl	$.LC14, %edx
 1454      00
 1455 09cd BE000000 		movl	$.LC14, %esi
 1455      00
 1456 09d2 4889C7   		movq	%rax, %rdi
 1457              	.LEHB39:
 1458 09d5 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1458      00
  58:TestXmlTestReporter.cpp **** 
  59:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 1459              		.loc 3 59 0
 1460 09da 488B8558 		movq	-168(%rbp), %rax
 1460      FFFFFF
 1461 09e1 488D9078 		leaq	376(%rax), %rdx
 1461      010000
 1462 09e8 488D8560 		leaq	-160(%rbp), %rax
 1462      FFFFFF
 1463 09ef 4889C6   		movq	%rax, %rsi
 1464 09f2 4889D7   		movq	%rdx, %rdi
 1465 09f5 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 1465      00
  60:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "message");
 1466              		.loc 3 60 0
 1467 09fa 488B8558 		movq	-168(%rbp), %rax
 1467      FFFFFF
 1468 0a01 488D8878 		leaq	376(%rax), %rcx
 1468      010000
 1469 0a08 488D8560 		leaq	-160(%rbp), %rax
 1469      FFFFFF
 1470 0a0f BA000000 		movl	$.LC15, %edx
 1470      00
 1471 0a14 4889C6   		movq	%rax, %rsi
 1472 0a17 4889CF   		movq	%rcx, %rdi
 1473 0a1a E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 1473      00
  61:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 1.0F);
 1474              		.loc 3 61 0
 1475 0a1f 488B8558 		movq	-168(%rbp), %rax
 1475      FFFFFF
 1476 0a26 488D9078 		leaq	376(%rax), %rdx
 1476      010000
 1477 0a2d 488D8560 		leaq	-160(%rbp), %rax
 1477      FFFFFF
 1478 0a34 F30F1005 		movss	.LC16(%rip), %xmm0
 1478      00000000 
 1479 0a3c 4889C6   		movq	%rax, %rsi
 1480 0a3f 4889D7   		movq	%rdx, %rdi
 1481 0a42 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 1481      00
 1482              	.LEHE39:
  62:TestXmlTestReporter.cpp ****     CHECK(output.str().empty());
 1483              		.loc 3 62 0
 1484 0a47 488B9558 		movq	-168(%rbp), %rdx
 1484      FFFFFF
 1485 0a4e 488D45A0 		leaq	-96(%rbp), %rax
 1486 0a52 4889D6   		movq	%rdx, %rsi
 1487 0a55 4889C7   		movq	%rax, %rdi
 1488              	.LEHB40:
 1489 0a58 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 1489      00
 1490              	.LEHE40:
 1491              		.loc 3 62 0 is_stmt 0 discriminator 1
 1492 0a5d 488D45A0 		leaq	-96(%rbp), %rax
 1493 0a61 4889C7   		movq	%rax, %rdi
 1494              	.LEHB41:
 1495 0a64 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
 1495      00
 1496              	.LEHE41:
 1497 0a69 0FB6C0   		movzbl	%al, %eax
 1498 0a6c 89C7     		movl	%eax, %edi
 1499 0a6e E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 1499      00
 1500 0a73 83F001   		xorl	$1, %eax
 1501 0a76 89C3     		movl	%eax, %ebx
 1502 0a78 488D45A0 		leaq	-96(%rbp), %rax
 1503 0a7c 4889C7   		movq	%rax, %rdi
 1504              	.LEHB42:
 1505 0a7f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1505      00
 1506              		.loc 3 62 0 discriminator 4
 1507 0a84 84DB     		testb	%bl, %bl
 1508 0a86 7438     		je	.L76
 1509              		.loc 3 62 0 discriminator 5
 1510 0a88 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1510      00
 1511 0a8d 488B08   		movq	(%rax), %rcx
 1512 0a90 488D4580 		leaq	-128(%rbp), %rax
 1513 0a94 BA3E0000 		movl	$62, %edx
 1513      00
 1514 0a99 4889CE   		movq	%rcx, %rsi
 1515 0a9c 4889C7   		movq	%rax, %rdi
 1516 0a9f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1516      00
 1517              		.loc 3 62 0 discriminator 7
 1518 0aa4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1518      00
 1519 0aa9 488B00   		movq	(%rax), %rax
 1520 0aac 488D4D80 		leaq	-128(%rbp), %rcx
 1521 0ab0 BA000000 		movl	$.LC17, %edx
 1521      00
 1522 0ab5 4889CE   		movq	%rcx, %rsi
 1523 0ab8 4889C7   		movq	%rax, %rdi
 1524 0abb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1524      00
 1525              	.LEHE42:
 1526              	.L76:
  63:TestXmlTestReporter.cpp **** 
  64:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 1.0f);
 1527              		.loc 3 64 0 is_stmt 1
 1528 0ac0 488B8558 		movq	-168(%rbp), %rax
 1528      FFFFFF
 1529 0ac7 48057801 		addq	$376, %rax
 1529      0000
 1530 0acd F30F1005 		movss	.LC16(%rip), %xmm0
 1530      00000000 
 1531 0ad5 B9010000 		movl	$1, %ecx
 1531      00
 1532 0ada BA010000 		movl	$1, %edx
 1532      00
 1533 0adf BE010000 		movl	$1, %esi
 1533      00
 1534 0ae4 4889C7   		movq	%rax, %rdi
 1535              	.LEHB43:
 1536 0ae7 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 1536      00
 1537              	.LEHE43:
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1538              		.loc 3 65 0
 1539 0aec 488B9558 		movq	-168(%rbp), %rdx
 1539      FFFFFF
 1540 0af3 488D45C0 		leaq	-64(%rbp), %rax
 1541 0af7 4889D6   		movq	%rdx, %rsi
 1542 0afa 4889C7   		movq	%rax, %rdi
 1543              	.LEHB44:
 1544 0afd E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 1544      00
 1545              	.LEHE44:
 1546              		.loc 3 65 0 is_stmt 0 discriminator 1
 1547 0b02 488D45C0 		leaq	-64(%rbp), %rax
 1548 0b06 4889C7   		movq	%rax, %rdi
 1549              	.LEHB45:
 1550 0b09 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
 1550      00
 1551              	.LEHE45:
 1552 0b0e 83F001   		xorl	$1, %eax
 1553 0b11 0FB6C0   		movzbl	%al, %eax
 1554 0b14 89C7     		movl	%eax, %edi
 1555 0b16 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 1555      00
 1556 0b1b 83F001   		xorl	$1, %eax
 1557 0b1e 89C3     		movl	%eax, %ebx
 1558 0b20 488D45C0 		leaq	-64(%rbp), %rax
 1559 0b24 4889C7   		movq	%rax, %rdi
 1560              	.LEHB46:
 1561 0b27 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1561      00
 1562              		.loc 3 65 0 discriminator 4
 1563 0b2c 84DB     		testb	%bl, %bl
 1564 0b2e 0F841C01 		je	.L91
 1564      0000
 1565              		.loc 3 65 0 discriminator 5
 1566 0b34 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1566      00
 1567 0b39 488B08   		movq	(%rax), %rcx
 1568 0b3c 488D4580 		leaq	-128(%rbp), %rax
 1569 0b40 BA410000 		movl	$65, %edx
 1569      00
 1570 0b45 4889CE   		movq	%rcx, %rsi
 1571 0b48 4889C7   		movq	%rax, %rdi
 1572 0b4b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1572      00
 1573              		.loc 3 65 0 discriminator 7
 1574 0b50 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1574      00
 1575 0b55 488B00   		movq	(%rax), %rax
 1576 0b58 488D4D80 		leaq	-128(%rbp), %rcx
 1577 0b5c BA000000 		movl	$.LC18, %edx
 1577      00
 1578 0b61 4889CE   		movq	%rcx, %rsi
 1579 0b64 4889C7   		movq	%rax, %rdi
 1580 0b67 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1580      00
 1581              	.LEHE46:
  66:TestXmlTestReporter.cpp **** }
 1582              		.loc 3 66 0 is_stmt 1
 1583 0b6c E9DF0000 		jmp	.L91
 1583      00
 1584              	.L86:
 1585 0b71 4889C3   		movq	%rax, %rbx
  62:TestXmlTestReporter.cpp **** 
 1586              		.loc 3 62 0
 1587 0b74 488D45A0 		leaq	-96(%rbp), %rax
 1588 0b78 4889C7   		movq	%rax, %rdi
 1589 0b7b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1589      00
 1590 0b80 4889D8   		movq	%rbx, %rax
 1591 0b83 EB00     		jmp	.L79
 1592              	.L85:
 1593              	.L79:
 1594 0b85 4889C7   		movq	%rax, %rdi
 1595 0b88 E8000000 		call	__cxa_begin_catch
 1595      00
 1596              	.LEHB47:
 1597 0b8d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1597      00
 1598 0b92 488B08   		movq	(%rax), %rcx
 1599 0b95 488D4580 		leaq	-128(%rbp), %rax
 1600 0b99 BA3E0000 		movl	$62, %edx
 1600      00
 1601 0b9e 4889CE   		movq	%rcx, %rsi
 1602 0ba1 4889C7   		movq	%rax, %rdi
 1603 0ba4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1603      00
  62:TestXmlTestReporter.cpp **** 
 1604              		.loc 3 62 0 is_stmt 0 discriminator 15
 1605 0ba9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1605      00
 1606 0bae 488B00   		movq	(%rax), %rax
 1607 0bb1 488D4D80 		leaq	-128(%rbp), %rcx
 1608 0bb5 BA000000 		movl	$.LC19, %edx
 1608      00
 1609 0bba 4889CE   		movq	%rcx, %rsi
 1610 0bbd 4889C7   		movq	%rax, %rdi
 1611 0bc0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1611      00
 1612              	.LEHE47:
 1613              	.LEHB48:
  62:TestXmlTestReporter.cpp **** 
 1614              		.loc 3 62 0 discriminator 19
 1615 0bc5 E8000000 		call	__cxa_end_catch
 1615      00
 1616              	.LEHE48:
 1617 0bca E9F1FEFF 		jmp	.L76
 1617      FF
 1618              	.L87:
 1619 0bcf 4889C3   		movq	%rax, %rbx
  62:TestXmlTestReporter.cpp **** 
 1620              		.loc 3 62 0
 1621 0bd2 E8000000 		call	__cxa_end_catch
 1621      00
 1622 0bd7 4889D8   		movq	%rbx, %rax
 1623 0bda 4889C7   		movq	%rax, %rdi
 1624              	.LEHB49:
 1625 0bdd E8000000 		call	_Unwind_Resume
 1625      00
 1626              	.LEHE49:
 1627              	.L89:
 1628 0be2 4889C3   		movq	%rax, %rbx
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1629              		.loc 3 65 0 is_stmt 1
 1630 0be5 488D45C0 		leaq	-64(%rbp), %rax
 1631 0be9 4889C7   		movq	%rax, %rdi
 1632 0bec E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1632      00
 1633 0bf1 4889D8   		movq	%rbx, %rax
 1634 0bf4 EB00     		jmp	.L82
 1635              	.L88:
 1636              	.L82:
 1637 0bf6 4889C7   		movq	%rax, %rdi
 1638 0bf9 E8000000 		call	__cxa_begin_catch
 1638      00
 1639              	.LEHB50:
 1640 0bfe E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1640      00
 1641 0c03 488B08   		movq	(%rax), %rcx
 1642 0c06 488D4580 		leaq	-128(%rbp), %rax
 1643 0c0a BA410000 		movl	$65, %edx
 1643      00
 1644 0c0f 4889CE   		movq	%rcx, %rsi
 1645 0c12 4889C7   		movq	%rax, %rdi
 1646 0c15 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1646      00
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1647              		.loc 3 65 0 is_stmt 0 discriminator 15
 1648 0c1a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1648      00
 1649 0c1f 488B00   		movq	(%rax), %rax
 1650 0c22 488D4D80 		leaq	-128(%rbp), %rcx
 1651 0c26 BA000000 		movl	$.LC20, %edx
 1651      00
 1652 0c2b 4889CE   		movq	%rcx, %rsi
 1653 0c2e 4889C7   		movq	%rax, %rdi
 1654 0c31 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1654      00
 1655              	.LEHE50:
 1656              	.LEHB51:
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1657              		.loc 3 65 0 discriminator 19
 1658 0c36 E8000000 		call	__cxa_end_catch
 1658      00
 1659              	.LEHE51:
 1660              		.loc 3 66 0 is_stmt 1 discriminator 19
 1661 0c3b EB13     		jmp	.L91
 1662              	.L90:
 1663 0c3d 4889C3   		movq	%rax, %rbx
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1664              		.loc 3 65 0
 1665 0c40 E8000000 		call	__cxa_end_catch
 1665      00
 1666 0c45 4889D8   		movq	%rbx, %rax
 1667 0c48 4889C7   		movq	%rax, %rdi
 1668              	.LEHB52:
 1669 0c4b E8000000 		call	_Unwind_Resume
 1669      00
 1670              	.LEHE52:
 1671              	.L91:
 1672              		.loc 3 66 0
 1673 0c50 90       		nop
 1674 0c51 488B45E8 		movq	-24(%rbp), %rax
 1675 0c55 64483304 		xorq	%fs:40, %rax
 1675      25280000 
 1675      00
 1676 0c5e 7405     		je	.L84
 1677 0c60 E8000000 		call	__stack_chk_fail
 1677      00
 1678              	.L84:
 1679 0c65 4881C4A8 		addq	$168, %rsp
 1679      000000
 1680 0c6c 5B       		popq	%rbx
 1681 0c6d 5D       		popq	%rbp
 1682              		.cfi_def_cfa 7, 8
 1683 0c6e C3       		ret
 1684              		.cfi_endproc
 1685              	.LFE1358:
 1686              		.section	.gcc_except_table
 1687              		.align 4
 1688              	.LLSDA1358:
 1689 0104 FF       		.byte	0xff
 1690 0105 03       		.byte	0x3
 1691 0106 59       		.uleb128 .LLSDATT1358-.LLSDATTD1358
 1692              	.LLSDATTD1358:
 1693 0107 01       		.byte	0x1
 1694 0108 4D       		.uleb128 .LLSDACSE1358-.LLSDACSB1358
 1695              	.LLSDACSB1358:
 1696 0109 41       		.uleb128 .LEHB39-.LFB1358
 1697 010a 72       		.uleb128 .LEHE39-.LEHB39
 1698 010b 00       		.uleb128 0
 1699 010c 00       		.uleb128 0
 1700 010d C401     		.uleb128 .LEHB40-.LFB1358
 1701 010f 05       		.uleb128 .LEHE40-.LEHB40
 1702 0110 F103     		.uleb128 .L85-.LFB1358
 1703 0112 01       		.uleb128 0x1
 1704 0113 D001     		.uleb128 .LEHB41-.LFB1358
 1705 0115 05       		.uleb128 .LEHE41-.LEHB41
 1706 0116 DD03     		.uleb128 .L86-.LFB1358
 1707 0118 03       		.uleb128 0x3
 1708 0119 EB01     		.uleb128 .LEHB42-.LFB1358
 1709 011b 41       		.uleb128 .LEHE42-.LEHB42
 1710 011c F103     		.uleb128 .L85-.LFB1358
 1711 011e 01       		.uleb128 0x1
 1712 011f D302     		.uleb128 .LEHB43-.LFB1358
 1713 0121 05       		.uleb128 .LEHE43-.LEHB43
 1714 0122 00       		.uleb128 0
 1715 0123 00       		.uleb128 0
 1716 0124 E902     		.uleb128 .LEHB44-.LFB1358
 1717 0126 05       		.uleb128 .LEHE44-.LEHB44
 1718 0127 E204     		.uleb128 .L88-.LFB1358
 1719 0129 01       		.uleb128 0x1
 1720 012a F502     		.uleb128 .LEHB45-.LFB1358
 1721 012c 05       		.uleb128 .LEHE45-.LEHB45
 1722 012d CE04     		.uleb128 .L89-.LFB1358
 1723 012f 03       		.uleb128 0x3
 1724 0130 9303     		.uleb128 .LEHB46-.LFB1358
 1725 0132 45       		.uleb128 .LEHE46-.LEHB46
 1726 0133 E204     		.uleb128 .L88-.LFB1358
 1727 0135 01       		.uleb128 0x1
 1728 0136 F903     		.uleb128 .LEHB47-.LFB1358
 1729 0138 38       		.uleb128 .LEHE47-.LEHB47
 1730 0139 BB04     		.uleb128 .L87-.LFB1358
 1731 013b 00       		.uleb128 0
 1732 013c B104     		.uleb128 .LEHB48-.LFB1358
 1733 013e 05       		.uleb128 .LEHE48-.LEHB48
 1734 013f 00       		.uleb128 0
 1735 0140 00       		.uleb128 0
 1736 0141 C904     		.uleb128 .LEHB49-.LFB1358
 1737 0143 05       		.uleb128 .LEHE49-.LEHB49
 1738 0144 00       		.uleb128 0
 1739 0145 00       		.uleb128 0
 1740 0146 EA04     		.uleb128 .LEHB50-.LFB1358
 1741 0148 38       		.uleb128 .LEHE50-.LEHB50
 1742 0149 A905     		.uleb128 .L90-.LFB1358
 1743 014b 00       		.uleb128 0
 1744 014c A205     		.uleb128 .LEHB51-.LFB1358
 1745 014e 05       		.uleb128 .LEHE51-.LEHB51
 1746 014f 00       		.uleb128 0
 1747 0150 00       		.uleb128 0
 1748 0151 B705     		.uleb128 .LEHB52-.LFB1358
 1749 0153 05       		.uleb128 .LEHE52-.LEHB52
 1750 0154 00       		.uleb128 0
 1751 0155 00       		.uleb128 0
 1752              	.LLSDACSE1358:
 1753 0156 01       		.byte	0x1
 1754 0157 00       		.byte	0
 1755 0158 00       		.byte	0
 1756 0159 7D       		.byte	0x7d
 1757 015a 0000     		.align 4
 1758 015c 00000000 		.long	0
 1759              	
 1760              	.LLSDATT1358:
 1761              		.text
 1763 0c6f 90       		.align 2
 1765              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC2ERKN8UnitTest11TestDetails
 1766              	.LFB1360:
  67:TestXmlTestReporter.cpp **** 
  68:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, EmptyReportSummaryFormat)
 1767              		.loc 3 68 0
 1768              		.cfi_startproc
 1769 0c70 55       		pushq	%rbp
 1770              		.cfi_def_cfa_offset 16
 1771              		.cfi_offset 6, -16
 1772 0c71 4889E5   		movq	%rsp, %rbp
 1773              		.cfi_def_cfa_register 6
 1774 0c74 4883EC10 		subq	$16, %rsp
 1775 0c78 48897DF8 		movq	%rdi, -8(%rbp)
 1776 0c7c 488975F0 		movq	%rsi, -16(%rbp)
 1777              	.LBB30:
 1778              		.loc 3 68 0
 1779 0c80 488B45F8 		movq	-8(%rbp), %rax
 1780 0c84 4889C7   		movq	%rax, %rdi
 1781 0c87 E874F3FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 1781      FF
 1782 0c8c 488B45F8 		movq	-8(%rbp), %rax
 1783 0c90 488B55F0 		movq	-16(%rbp), %rdx
 1784 0c94 488990A0 		movq	%rdx, 416(%rax)
 1784      010000
 1785              	.LBE30:
 1786 0c9b 90       		nop
 1787 0c9c C9       		leave
 1788              		.cfi_def_cfa 7, 8
 1789 0c9d C3       		ret
 1790              		.cfi_endproc
 1791              	.LFE1360:
 1793              		.set	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestD
 1794              		.section	.rodata
 1795              	.LC21:
 1796 031c 456D7074 		.string	"EmptyReportSummaryFormat"
 1796      79526570 
 1796      6F727453 
 1796      756D6D61 
 1796      7279466F 
 1797              		.text
 1798              		.align 2
 1800              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC2Ev:
 1801              	.LFB1363:
 1802              		.loc 3 68 0
 1803              		.cfi_startproc
 1804 0c9e 55       		pushq	%rbp
 1805              		.cfi_def_cfa_offset 16
 1806              		.cfi_offset 6, -16
 1807 0c9f 4889E5   		movq	%rsp, %rbp
 1808              		.cfi_def_cfa_register 6
 1809 0ca2 4883EC10 		subq	$16, %rsp
 1810 0ca6 48897DF8 		movq	%rdi, -8(%rbp)
 1811              	.LBB31:
 1812              		.loc 3 68 0
 1813 0caa E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1813      00
 1814 0caf 4889C2   		movq	%rax, %rdx
 1815 0cb2 488B45F8 		movq	-8(%rbp), %rax
 1816 0cb6 41B84400 		movl	$68, %r8d
 1816      0000
 1817 0cbc B9000000 		movl	$.LC1, %ecx
 1817      00
 1818 0cc1 BE000000 		movl	$.LC21, %esi
 1818      00
 1819 0cc6 4889C7   		movq	%rax, %rdi
 1820 0cc9 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1820      00
 1821 0cce BA000000 		movl	$_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE+16, %edx
 1821      00
 1822 0cd3 488B45F8 		movq	-8(%rbp), %rax
 1823 0cd7 488910   		movq	%rdx, (%rax)
 1824              	.LBE31:
 1825 0cda 90       		nop
 1826 0cdb C9       		leave
 1827              		.cfi_def_cfa 7, 8
 1828 0cdc C3       		ret
 1829              		.cfi_endproc
 1830              	.LFE1363:
 1832              		.set	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev,_ZN12_GLOBAL__N_150
 1833              		.local	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE
 1834              		.comm	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE,56,32
 1835              		.local	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE
 1836              		.comm	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE,1,1
 1837 0cdd 90       		.align 2
 1839              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD2Ev:
 1840              	.LFB1367:
 1841              		.loc 3 68 0
 1842              		.cfi_startproc
 1843 0cde 55       		pushq	%rbp
 1844              		.cfi_def_cfa_offset 16
 1845              		.cfi_offset 6, -16
 1846 0cdf 4889E5   		movq	%rsp, %rbp
 1847              		.cfi_def_cfa_register 6
 1848 0ce2 4883EC10 		subq	$16, %rsp
 1849 0ce6 48897DF8 		movq	%rdi, -8(%rbp)
 1850              	.LBB32:
 1851              		.loc 3 68 0
 1852 0cea 488B45F8 		movq	-8(%rbp), %rax
 1853 0cee 4889C7   		movq	%rax, %rdi
 1854 0cf1 E866F3FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 1854      FF
 1855              	.LBE32:
 1856 0cf6 90       		nop
 1857 0cf7 C9       		leave
 1858              		.cfi_def_cfa 7, 8
 1859 0cf8 C3       		ret
 1860              		.cfi_endproc
 1861              	.LFE1367:
 1863              		.set	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev,_ZN12_GLOBAL__N_1
 1864 0cf9 90       		.align 2
 1866              	_ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv:
 1867              	.LFB1365:
 1868              		.loc 3 68 0
 1869              		.cfi_startproc
 1870              		.cfi_personality 0x3,__gxx_personality_v0
 1871              		.cfi_lsda 0x3,.LLSDA1365
 1872 0cfa 55       		pushq	%rbp
 1873              		.cfi_def_cfa_offset 16
 1874              		.cfi_offset 6, -16
 1875 0cfb 4889E5   		movq	%rsp, %rbp
 1876              		.cfi_def_cfa_register 6
 1877 0cfe 4154     		pushq	%r12
 1878 0d00 53       		pushq	%rbx
 1879 0d01 4881EC00 		subq	$512, %rsp
 1879      020000
 1880              		.cfi_offset 12, -24
 1881              		.cfi_offset 3, -32
 1882 0d08 4889BDF8 		movq	%rdi, -520(%rbp)
 1882      FDFFFF
 1883              		.loc 3 68 0
 1884 0d0f 64488B04 		movq	%fs:40, %rax
 1884      25280000 
 1884      00
 1885 0d18 488945E8 		movq	%rax, -24(%rbp)
 1886 0d1c 31C0     		xorl	%eax, %eax
 1887 0d1e C6850FFE 		movb	$0, -497(%rbp)
 1887      FFFF00
 1888              	.LBB33:
 1889 0d25 488B85F8 		movq	-520(%rbp), %rax
 1889      FDFFFF
 1890 0d2c 488D5008 		leaq	8(%rax), %rdx
 1891 0d30 488D8540 		leaq	-448(%rbp), %rax
 1891      FEFFFF
 1892 0d37 4889D6   		movq	%rdx, %rsi
 1893 0d3a 4889C7   		movq	%rax, %rdi
 1894              	.LEHB53:
 1895 0d3d E82EFFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestD
 1895      FF
 1896              	.LEHE53:
 1897              		.loc 3 68 0 is_stmt 0 discriminator 1
 1898 0d42 C6850FFE 		movb	$1, -497(%rbp)
 1898      FFFF01
 1899 0d49 488B85F8 		movq	-520(%rbp), %rax
 1899      FDFFFF
 1900 0d50 488D5008 		leaq	8(%rax), %rdx
 1901 0d54 488D8540 		leaq	-448(%rbp), %rax
 1901      FEFFFF
 1902 0d5b 4889D6   		movq	%rdx, %rsi
 1903 0d5e 4889C7   		movq	%rax, %rdi
 1904              	.LEHB54:
 1905 0d61 E8582400 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelp
 1905      00
 1906              	.LEHE54:
 1907              		.loc 3 68 0 discriminator 3
 1908 0d66 488D8540 		leaq	-448(%rbp), %rax
 1908      FEFFFF
 1909 0d6d 4889C7   		movq	%rax, %rdi
 1910              	.LEHB55:
 1911 0d70 E869FFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
 1911      FF
 1912              	.LEHE55:
 1913              	.LBE33:
 1914              		.loc 3 68 0
 1915 0d75 E9660200 		jmp	.L95
 1915      00
 1916              	.L110:
 1917 0d7a 4989C4   		movq	%rax, %r12
 1918 0d7d 4889D3   		movq	%rdx, %rbx
 1919              	.LBB34:
 1920 0d80 488D8540 		leaq	-448(%rbp), %rax
 1920      FEFFFF
 1921 0d87 4889C7   		movq	%rax, %rdi
 1922 0d8a E84FFFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
 1922      FF
 1923 0d8f 4C89E0   		movq	%r12, %rax
 1924 0d92 4889DA   		movq	%rbx, %rdx
 1925 0d95 EB00     		jmp	.L97
 1926              	.L109:
 1927              	.L97:
 1928 0d97 4883FA01 		cmpq	$1, %rdx
 1929 0d9b 740F     		je	.L99
 1930 0d9d 4883FA02 		cmpq	$2, %rdx
 1931 0da1 0F84A700 		je	.L100
 1931      0000
 1932 0da7 E94B0100 		jmp	.L115
 1932      00
 1933              	.L99:
 1934              	.LBE34:
 1935              	.LBB35:
 1936 0dac 4889C7   		movq	%rax, %rdi
 1937 0daf E8000000 		call	__cxa_begin_catch
 1937      00
 1938 0db4 48898510 		movq	%rax, -496(%rbp)
 1938      FEFFFF
 1939 0dbb 488B8510 		movq	-496(%rbp), %rax
 1939      FEFFFF
 1940 0dc2 488B00   		movq	(%rax), %rax
 1941 0dc5 4883C010 		addq	$16, %rax
 1942 0dc9 488B00   		movq	(%rax), %rax
 1943 0dcc 488B9510 		movq	-496(%rbp), %rdx
 1943      FEFFFF
 1944 0dd3 4889D7   		movq	%rdx, %rdi
 1945 0dd6 FFD0     		call	*%rax
 1946 0dd8 4889C3   		movq	%rax, %rbx
 1947 0ddb 488B8510 		movq	-496(%rbp), %rax
 1947      FEFFFF
 1948 0de2 4889C7   		movq	%rax, %rdi
 1949              	.LEHB56:
 1950 0de5 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 1950      00
 1951 0dea 4189C4   		movl	%eax, %r12d
 1952 0ded 488B8510 		movq	-496(%rbp), %rax
 1952      FEFFFF
 1953 0df4 4889C7   		movq	%rax, %rdi
 1954 0df7 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 1954      00
 1955              		.loc 3 68 0 discriminator 5
 1956 0dfc 4889C1   		movq	%rax, %rcx
 1957 0dff 488B85F8 		movq	-520(%rbp), %rax
 1957      FDFFFF
 1958 0e06 488B5008 		movq	8(%rax), %rdx
 1959 0e0a 488B85F8 		movq	-520(%rbp), %rax
 1959      FDFFFF
 1960 0e11 488B7010 		movq	16(%rax), %rsi
 1961 0e15 488D8520 		leaq	-480(%rbp), %rax
 1961      FEFFFF
 1962 0e1c 4589E0   		movl	%r12d, %r8d
 1963 0e1f 4889C7   		movq	%rax, %rdi
 1964 0e22 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1964      00
 1965              		.loc 3 68 0 discriminator 9
 1966 0e27 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1966      00
 1967 0e2c 488B00   		movq	(%rax), %rax
 1968 0e2f 488D8D20 		leaq	-480(%rbp), %rcx
 1968      FEFFFF
 1969 0e36 4889DA   		movq	%rbx, %rdx
 1970 0e39 4889CE   		movq	%rcx, %rsi
 1971 0e3c 4889C7   		movq	%rax, %rdi
 1972 0e3f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1972      00
 1973              	.LEHE56:
 1974              		.loc 3 68 0 discriminator 13
 1975 0e44 E8000000 		call	__cxa_end_catch
 1975      00
 1976              	.LBE35:
 1977 0e49 E9920100 		jmp	.L95
 1977      00
 1978              	.L100:
 1979              	.LBB36:
 1980              		.loc 3 68 0
 1981 0e4e 4889C7   		movq	%rax, %rdi
 1982 0e51 E8000000 		call	__cxa_begin_catch
 1982      00
 1983 0e56 48898518 		movq	%rax, -488(%rbp)
 1983      FEFFFF
 1984              	.LBB37:
 1985 0e5d 488D8540 		leaq	-448(%rbp), %rax
 1985      FEFFFF
 1986 0e64 4889C7   		movq	%rax, %rdi
 1987              	.LEHB57:
 1988 0e67 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1988      00
 1989              	.LEHE57:
 1990              		.loc 3 68 0 discriminator 15
 1991 0e6c 488B8518 		movq	-488(%rbp), %rax
 1991      FEFFFF
 1992 0e73 488B00   		movq	(%rax), %rax
 1993 0e76 4883C010 		addq	$16, %rax
 1994 0e7a 488B00   		movq	(%rax), %rax
 1995 0e7d 488B9518 		movq	-488(%rbp), %rdx
 1995      FEFFFF
 1996 0e84 4889D7   		movq	%rdx, %rdi
 1997 0e87 FFD0     		call	*%rax
 1998 0e89 4889C3   		movq	%rax, %rbx
 1999 0e8c 488D8540 		leaq	-448(%rbp), %rax
 1999      FEFFFF
 2000 0e93 BE000000 		movl	$.LC3, %esi
 2000      00
 2001 0e98 4889C7   		movq	%rax, %rdi
 2002              	.LEHB58:
 2003 0e9b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2003      00
 2004 0ea0 4889DE   		movq	%rbx, %rsi
 2005 0ea3 4889C7   		movq	%rax, %rdi
 2006 0ea6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2006      00
 2007              		.loc 3 68 0 discriminator 19
 2008 0eab 488D8540 		leaq	-448(%rbp), %rax
 2008      FEFFFF
 2009 0eb2 4889C7   		movq	%rax, %rdi
 2010 0eb5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2010      00
 2011 0eba 4989C4   		movq	%rax, %r12
 2012 0ebd 488B85F8 		movq	-520(%rbp), %rax
 2012      FDFFFF
 2013 0ec4 488D5808 		leaq	8(%rax), %rbx
 2014 0ec8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2014      00
 2015              		.loc 3 68 0 discriminator 21
 2016 0ecd 488B00   		movq	(%rax), %rax
 2017 0ed0 4C89E2   		movq	%r12, %rdx
 2018 0ed3 4889DE   		movq	%rbx, %rsi
 2019 0ed6 4889C7   		movq	%rax, %rdi
 2020 0ed9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2020      00
 2021              	.LEHE58:
 2022              		.loc 3 68 0 discriminator 25
 2023 0ede 488D8540 		leaq	-448(%rbp), %rax
 2023      FEFFFF
 2024 0ee5 4889C7   		movq	%rax, %rdi
 2025              	.LEHB59:
 2026 0ee8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2026      00
 2027              	.LEHE59:
 2028              	.LBE37:
 2029              		.loc 3 68 0 discriminator 26
 2030 0eed E8000000 		call	__cxa_end_catch
 2030      00
 2031              	.LBE36:
 2032 0ef2 E9E90000 		jmp	.L95
 2032      00
 2033              	.L115:
 2034              		.loc 3 68 0
 2035 0ef7 4889C7   		movq	%rax, %rdi
 2036 0efa E8000000 		call	__cxa_begin_catch
 2036      00
 2037 0eff 80BD0FFE 		cmpb	$0, -497(%rbp)
 2037      FFFF00
 2038 0f06 7443     		je	.L102
 2039              		.loc 3 68 0 discriminator 28
 2040 0f08 488B85F8 		movq	-520(%rbp), %rax
 2040      FDFFFF
 2041 0f0f 488D4808 		leaq	8(%rax), %rcx
 2042 0f13 488D8520 		leaq	-480(%rbp), %rax
 2042      FEFFFF
 2043 0f1a BA440000 		movl	$68, %edx
 2043      00
 2044 0f1f 4889CE   		movq	%rcx, %rsi
 2045 0f22 4889C7   		movq	%rax, %rdi
 2046              	.LEHB60:
 2047 0f25 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2047      00
 2048              		.loc 3 68 0 discriminator 31
 2049 0f2a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2049      00
 2050 0f2f 488B00   		movq	(%rax), %rax
 2051 0f32 488D8D20 		leaq	-480(%rbp), %rcx
 2051      FEFFFF
 2052 0f39 BA000000 		movl	$.LC4, %edx
 2052      00
 2053 0f3e 4889CE   		movq	%rcx, %rsi
 2054 0f41 4889C7   		movq	%rax, %rdi
 2055 0f44 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2055      00
 2056 0f49 EB41     		jmp	.L103
 2057              	.L102:
 2058              		.loc 3 68 0 discriminator 29
 2059 0f4b 488B85F8 		movq	-520(%rbp), %rax
 2059      FDFFFF
 2060 0f52 488D4808 		leaq	8(%rax), %rcx
 2061 0f56 488D8520 		leaq	-480(%rbp), %rax
 2061      FEFFFF
 2062 0f5d BA440000 		movl	$68, %edx
 2062      00
 2063 0f62 4889CE   		movq	%rcx, %rsi
 2064 0f65 4889C7   		movq	%rax, %rdi
 2065 0f68 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2065      00
 2066              		.loc 3 68 0 discriminator 38
 2067 0f6d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2067      00
 2068 0f72 488B00   		movq	(%rax), %rax
 2069 0f75 488D8D20 		leaq	-480(%rbp), %rcx
 2069      FEFFFF
 2070 0f7c BA000000 		movl	$.LC5, %edx
 2070      00
 2071 0f81 4889CE   		movq	%rcx, %rsi
 2072 0f84 4889C7   		movq	%rax, %rdi
 2073 0f87 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2073      00
 2074              	.LEHE60:
 2075              	.L103:
 2076              	.LEHB61:
 2077              		.loc 3 68 0 discriminator 43
 2078 0f8c E8000000 		call	__cxa_end_catch
 2078      00
 2079 0f91 EB4D     		jmp	.L95
 2080              	.L111:
 2081 0f93 4889C3   		movq	%rax, %rbx
 2082              	.LBB39:
 2083              		.loc 3 68 0
 2084 0f96 E8000000 		call	__cxa_end_catch
 2084      00
 2085 0f9b 4889D8   		movq	%rbx, %rax
 2086 0f9e 4889C7   		movq	%rax, %rdi
 2087 0fa1 E8000000 		call	_Unwind_Resume
 2087      00
 2088              	.LEHE61:
 2089              	.L113:
 2090 0fa6 4889C3   		movq	%rax, %rbx
 2091              	.LBE39:
 2092              	.LBB40:
 2093              	.LBB38:
 2094 0fa9 488D8540 		leaq	-448(%rbp), %rax
 2094      FEFFFF
 2095 0fb0 4889C7   		movq	%rax, %rdi
 2096 0fb3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2096      00
 2097 0fb8 EB03     		jmp	.L106
 2098              	.L112:
 2099 0fba 4889C3   		movq	%rax, %rbx
 2100              	.L106:
 2101              	.LBE38:
 2102 0fbd E8000000 		call	__cxa_end_catch
 2102      00
 2103 0fc2 4889D8   		movq	%rbx, %rax
 2104 0fc5 4889C7   		movq	%rax, %rdi
 2105              	.LEHB62:
 2106 0fc8 E8000000 		call	_Unwind_Resume
 2106      00
 2107              	.LEHE62:
 2108              	.L114:
 2109 0fcd 4889C3   		movq	%rax, %rbx
 2110              	.LBE40:
 2111 0fd0 E8000000 		call	__cxa_end_catch
 2111      00
 2112 0fd5 4889D8   		movq	%rbx, %rax
 2113 0fd8 4889C7   		movq	%rax, %rdi
 2114              	.LEHB63:
 2115 0fdb E8000000 		call	_Unwind_Resume
 2115      00
 2116              	.LEHE63:
 2117              	.L95:
 2118 0fe0 488B45E8 		movq	-24(%rbp), %rax
 2119 0fe4 64483304 		xorq	%fs:40, %rax
 2119      25280000 
 2119      00
 2120 0fed 7405     		je	.L108
 2121 0fef E8000000 		call	__stack_chk_fail
 2121      00
 2122              	.L108:
 2123 0ff4 4881C400 		addq	$512, %rsp
 2123      020000
 2124 0ffb 5B       		popq	%rbx
 2125 0ffc 415C     		popq	%r12
 2126 0ffe 5D       		popq	%rbp
 2127              		.cfi_def_cfa 7, 8
 2128 0fff C3       		ret
 2129              		.cfi_endproc
 2130              	.LFE1365:
 2131              		.section	.gcc_except_table
 2132              		.align 4
 2133              	.LLSDA1365:
 2134 0160 FF       		.byte	0xff
 2135 0161 03       		.byte	0x3
 2136 0162 55       		.uleb128 .LLSDATT1365-.LLSDATTD1365
 2137              	.LLSDATTD1365:
 2138 0163 01       		.byte	0x1
 2139 0164 3C       		.uleb128 .LLSDACSE1365-.LLSDACSB1365
 2140              	.LLSDACSB1365:
 2141 0165 43       		.uleb128 .LEHB53-.LFB1365
 2142 0166 05       		.uleb128 .LEHE53-.LEHB53
 2143 0167 9D01     		.uleb128 .L109-.LFB1365
 2144 0169 05       		.uleb128 0x5
 2145 016a 67       		.uleb128 .LEHB54-.LFB1365
 2146 016b 05       		.uleb128 .LEHE54-.LEHB54
 2147 016c 8001     		.uleb128 .L110-.LFB1365
 2148 016e 07       		.uleb128 0x7
 2149 016f 76       		.uleb128 .LEHB55-.LFB1365
 2150 0170 05       		.uleb128 .LEHE55-.LEHB55
 2151 0171 9D01     		.uleb128 .L109-.LFB1365
 2152 0173 05       		.uleb128 0x5
 2153 0174 EB01     		.uleb128 .LEHB56-.LFB1365
 2154 0176 5F       		.uleb128 .LEHE56-.LEHB56
 2155 0177 9905     		.uleb128 .L111-.LFB1365
 2156 0179 00       		.uleb128 0
 2157 017a ED02     		.uleb128 .LEHB57-.LFB1365
 2158 017c 05       		.uleb128 .LEHE57-.LEHB57
 2159 017d C005     		.uleb128 .L112-.LFB1365
 2160 017f 00       		.uleb128 0
 2161 0180 A103     		.uleb128 .LEHB58-.LFB1365
 2162 0182 43       		.uleb128 .LEHE58-.LEHB58
 2163 0183 AC05     		.uleb128 .L113-.LFB1365
 2164 0185 00       		.uleb128 0
 2165 0186 EE03     		.uleb128 .LEHB59-.LFB1365
 2166 0188 05       		.uleb128 .LEHE59-.LEHB59
 2167 0189 C005     		.uleb128 .L112-.LFB1365
 2168 018b 00       		.uleb128 0
 2169 018c AB04     		.uleb128 .LEHB60-.LFB1365
 2170 018e 67       		.uleb128 .LEHE60-.LEHB60
 2171 018f D305     		.uleb128 .L114-.LFB1365
 2172 0191 00       		.uleb128 0
 2173 0192 9205     		.uleb128 .LEHB61-.LFB1365
 2174 0194 1A       		.uleb128 .LEHE61-.LEHB61
 2175 0195 00       		.uleb128 0
 2176 0196 00       		.uleb128 0
 2177 0197 CE05     		.uleb128 .LEHB62-.LFB1365
 2178 0199 05       		.uleb128 .LEHE62-.LEHB62
 2179 019a 00       		.uleb128 0
 2180 019b 00       		.uleb128 0
 2181 019c E105     		.uleb128 .LEHB63-.LFB1365
 2182 019e 05       		.uleb128 .LEHE63-.LEHB63
 2183 019f 00       		.uleb128 0
 2184 01a0 00       		.uleb128 0
 2185              	.LLSDACSE1365:
 2186 01a1 03       		.byte	0x3
 2187 01a2 00       		.byte	0
 2188 01a3 02       		.byte	0x2
 2189 01a4 7D       		.byte	0x7d
 2190 01a5 01       		.byte	0x1
 2191 01a6 7D       		.byte	0x7d
 2192 01a7 00       		.byte	0
 2193 01a8 7D       		.byte	0x7d
 2194 01a9 000000   		.align 4
 2195 01ac 00000000 		.long	0
 2196              	
 2197 01b0 00000000 		.long	_ZTISt9exception
 2198 01b4 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2199              	.LLSDATT1365:
 2200              		.text
 2202              		.section	.rodata
 2203 0335 000000   		.align 8
 2204              	.LC22:
 2205 0338 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"0\" failedtests=\"0\" failures=\"0\" tim
 2205      6C207665 
 2205      7273696F 
 2205      6E3D2231 
 2205      2E30223F 
 2206              		.text
 2207              		.align 2
 2209              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv:
 2210              	.LFB1369:
  69:TestXmlTestReporter.cpp **** {
 2211              		.loc 3 69 0 is_stmt 1
 2212              		.cfi_startproc
 2213              		.cfi_personality 0x3,__gxx_personality_v0
 2214              		.cfi_lsda 0x3,.LLSDA1369
 2215 1000 55       		pushq	%rbp
 2216              		.cfi_def_cfa_offset 16
 2217              		.cfi_offset 6, -16
 2218 1001 4889E5   		movq	%rsp, %rbp
 2219              		.cfi_def_cfa_register 6
 2220 1004 53       		pushq	%rbx
 2221 1005 4883EC78 		subq	$120, %rsp
 2222              		.cfi_offset 3, -24
 2223 1009 48897D88 		movq	%rdi, -120(%rbp)
 2224              		.loc 3 69 0
 2225 100d 64488B04 		movq	%fs:40, %rax
 2225      25280000 
 2225      00
 2226 1016 488945E8 		movq	%rax, -24(%rbp)
 2227 101a 31C0     		xorl	%eax, %eax
  70:TestXmlTestReporter.cpp ****     reporter.ReportSummary(0, 0, 0, 0.1f);
 2228              		.loc 3 70 0
 2229 101c 488B4588 		movq	-120(%rbp), %rax
 2230 1020 48057801 		addq	$376, %rax
 2230      0000
 2231 1026 F30F1005 		movss	.LC10(%rip), %xmm0
 2231      00000000 
 2232 102e B9000000 		movl	$0, %ecx
 2232      00
 2233 1033 BA000000 		movl	$0, %edx
 2233      00
 2234 1038 BE000000 		movl	$0, %esi
 2234      00
 2235 103d 4889C7   		movq	%rax, %rdi
 2236              	.LEHB64:
 2237 1040 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 2237      00
 2238              	.LEHE64:
  71:TestXmlTestReporter.cpp **** 
  72:TestXmlTestReporter.cpp ****     const char *expected =
  73:TestXmlTestReporter.cpp **** "<?xml version=\"1.0\"?>"
  74:TestXmlTestReporter.cpp **** "<unittest-results tests=\"0\" failedtests=\"0\" failures=\"0\" time=\"0.1\">"
  75:TestXmlTestReporter.cpp **** "</unittest-results>";
 2239              		.loc 3 75 0
 2240 1045 48C74598 		movq	$.LC22, -104(%rbp)
 2240      00000000 
 2241              	.LEHB65:
  76:TestXmlTestReporter.cpp **** 
  77:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 2242              		.loc 3 77 0
 2243 104d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2243      00
 2244 1052 488B08   		movq	(%rax), %rcx
 2245 1055 488D45A0 		leaq	-96(%rbp), %rax
 2246 1059 BA4D0000 		movl	$77, %edx
 2246      00
 2247 105e 4889CE   		movq	%rcx, %rsi
 2248 1061 4889C7   		movq	%rax, %rdi
 2249 1064 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2249      00
 2250              		.loc 3 77 0 is_stmt 0 discriminator 2
 2251 1069 488B5588 		movq	-120(%rbp), %rdx
 2252 106d 488D45C0 		leaq	-64(%rbp), %rax
 2253 1071 4889D6   		movq	%rdx, %rsi
 2254 1074 4889C7   		movq	%rax, %rdi
 2255 1077 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 2255      00
 2256              	.LEHE65:
 2257              	.LEHB66:
 2258              		.loc 3 77 0 discriminator 4
 2259 107c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2259      00
 2260 1081 488B00   		movq	(%rax), %rax
 2261 1084 488D4DA0 		leaq	-96(%rbp), %rcx
 2262 1088 488D55C0 		leaq	-64(%rbp), %rdx
 2263 108c 488D7598 		leaq	-104(%rbp), %rsi
 2264 1090 4889C7   		movq	%rax, %rdi
 2265 1093 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 2265      00
 2266              	.LEHE66:
 2267              		.loc 3 77 0 discriminator 8
 2268 1098 488D45C0 		leaq	-64(%rbp), %rax
 2269 109c 4889C7   		movq	%rax, %rdi
 2270              	.LEHB67:
 2271 109f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2271      00
 2272              	.LEHE67:
  78:TestXmlTestReporter.cpp **** }
 2273              		.loc 3 78 0 is_stmt 1
 2274 10a4 EB6E     		jmp	.L116
 2275              	.L123:
 2276 10a6 4889C3   		movq	%rax, %rbx
  77:TestXmlTestReporter.cpp **** }
 2277              		.loc 3 77 0
 2278 10a9 488D45C0 		leaq	-64(%rbp), %rax
 2279 10ad 4889C7   		movq	%rax, %rdi
 2280 10b0 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2280      00
 2281 10b5 4889D8   		movq	%rbx, %rax
 2282 10b8 EB00     		jmp	.L118
 2283              	.L122:
 2284              	.L118:
 2285 10ba 4889C7   		movq	%rax, %rdi
 2286 10bd E8000000 		call	__cxa_begin_catch
 2286      00
 2287              	.LEHB68:
 2288 10c2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2288      00
 2289 10c7 488B08   		movq	(%rax), %rcx
 2290 10ca 488D45A0 		leaq	-96(%rbp), %rax
 2291 10ce BA4D0000 		movl	$77, %edx
 2291      00
 2292 10d3 4889CE   		movq	%rcx, %rsi
 2293 10d6 4889C7   		movq	%rax, %rdi
 2294 10d9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2294      00
  77:TestXmlTestReporter.cpp **** }
 2295              		.loc 3 77 0 is_stmt 0 discriminator 14
 2296 10de E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2296      00
 2297 10e3 488B00   		movq	(%rax), %rax
 2298 10e6 488D4DA0 		leaq	-96(%rbp), %rcx
 2299 10ea BA000000 		movl	$.LC12, %edx
 2299      00
 2300 10ef 4889CE   		movq	%rcx, %rsi
 2301 10f2 4889C7   		movq	%rax, %rdi
 2302 10f5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2302      00
 2303              	.LEHE68:
 2304              	.LEHB69:
  77:TestXmlTestReporter.cpp **** }
 2305              		.loc 3 77 0 discriminator 18
 2306 10fa E8000000 		call	__cxa_end_catch
 2306      00
 2307              	.LEHE69:
 2308              		.loc 3 78 0 is_stmt 1 discriminator 18
 2309 10ff EB13     		jmp	.L116
 2310              	.L124:
 2311 1101 4889C3   		movq	%rax, %rbx
  77:TestXmlTestReporter.cpp **** }
 2312              		.loc 3 77 0
 2313 1104 E8000000 		call	__cxa_end_catch
 2313      00
 2314 1109 4889D8   		movq	%rbx, %rax
 2315 110c 4889C7   		movq	%rax, %rdi
 2316              	.LEHB70:
 2317 110f E8000000 		call	_Unwind_Resume
 2317      00
 2318              	.LEHE70:
 2319              	.L116:
 2320              		.loc 3 78 0
 2321 1114 488B45E8 		movq	-24(%rbp), %rax
 2322 1118 64483304 		xorq	%fs:40, %rax
 2322      25280000 
 2322      00
 2323 1121 7405     		je	.L121
 2324 1123 E8000000 		call	__stack_chk_fail
 2324      00
 2325              	.L121:
 2326 1128 4883C478 		addq	$120, %rsp
 2327 112c 5B       		popq	%rbx
 2328 112d 5D       		popq	%rbp
 2329              		.cfi_def_cfa 7, 8
 2330 112e C3       		ret
 2331              		.cfi_endproc
 2332              	.LFE1369:
 2333              		.section	.gcc_except_table
 2334              		.align 4
 2335              	.LLSDA1369:
 2336 01b8 FF       		.byte	0xff
 2337 01b9 03       		.byte	0x3
 2338 01ba 31       		.uleb128 .LLSDATT1369-.LLSDATTD1369
 2339              	.LLSDATTD1369:
 2340 01bb 01       		.byte	0x1
 2341 01bc 24       		.uleb128 .LLSDACSE1369-.LLSDACSB1369
 2342              	.LLSDACSB1369:
 2343 01bd 40       		.uleb128 .LEHB64-.LFB1369
 2344 01be 05       		.uleb128 .LEHE64-.LEHB64
 2345 01bf 00       		.uleb128 0
 2346 01c0 00       		.uleb128 0
 2347 01c1 4D       		.uleb128 .LEHB65-.LFB1369
 2348 01c2 2F       		.uleb128 .LEHE65-.LEHB65
 2349 01c3 BA01     		.uleb128 .L122-.LFB1369
 2350 01c5 01       		.uleb128 0x1
 2351 01c6 7C       		.uleb128 .LEHB66-.LFB1369
 2352 01c7 1C       		.uleb128 .LEHE66-.LEHB66
 2353 01c8 A601     		.uleb128 .L123-.LFB1369
 2354 01ca 03       		.uleb128 0x3
 2355 01cb 9F01     		.uleb128 .LEHB67-.LFB1369
 2356 01cd 05       		.uleb128 .LEHE67-.LEHB67
 2357 01ce BA01     		.uleb128 .L122-.LFB1369
 2358 01d0 01       		.uleb128 0x1
 2359 01d1 C201     		.uleb128 .LEHB68-.LFB1369
 2360 01d3 38       		.uleb128 .LEHE68-.LEHB68
 2361 01d4 8102     		.uleb128 .L124-.LFB1369
 2362 01d6 00       		.uleb128 0
 2363 01d7 FA01     		.uleb128 .LEHB69-.LFB1369
 2364 01d9 05       		.uleb128 .LEHE69-.LEHB69
 2365 01da 00       		.uleb128 0
 2366 01db 00       		.uleb128 0
 2367 01dc 8F02     		.uleb128 .LEHB70-.LFB1369
 2368 01de 05       		.uleb128 .LEHE70-.LEHB70
 2369 01df 00       		.uleb128 0
 2370 01e0 00       		.uleb128 0
 2371              	.LLSDACSE1369:
 2372 01e1 01       		.byte	0x1
 2373 01e2 00       		.byte	0
 2374 01e3 00       		.byte	0
 2375 01e4 7D       		.byte	0x7d
 2376 01e5 000000   		.align 4
 2377 01e8 00000000 		.long	0
 2378              	
 2379              	.LLSDATT1369:
 2380              		.text
 2382 112f 90       		.align 2
 2384              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC2ERKN8UnitTe
 2385              	.LFB1371:
  79:TestXmlTestReporter.cpp **** 
  80:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, SingleSuccessfulTestReportSummaryFormat)
 2386              		.loc 3 80 0
 2387              		.cfi_startproc
 2388 1130 55       		pushq	%rbp
 2389              		.cfi_def_cfa_offset 16
 2390              		.cfi_offset 6, -16
 2391 1131 4889E5   		movq	%rsp, %rbp
 2392              		.cfi_def_cfa_register 6
 2393 1134 4883EC10 		subq	$16, %rsp
 2394 1138 48897DF8 		movq	%rdi, -8(%rbp)
 2395 113c 488975F0 		movq	%rsi, -16(%rbp)
 2396              	.LBB41:
 2397              		.loc 3 80 0
 2398 1140 488B45F8 		movq	-8(%rbp), %rax
 2399 1144 4889C7   		movq	%rax, %rdi
 2400 1147 E8B4EEFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 2400      FF
 2401 114c 488B45F8 		movq	-8(%rbp), %rax
 2402 1150 488B55F0 		movq	-16(%rbp), %rdx
 2403 1154 488990A0 		movq	%rdx, 416(%rax)
 2403      010000
 2404              	.LBE41:
 2405 115b 90       		nop
 2406 115c C9       		leave
 2407              		.cfi_def_cfa 7, 8
 2408 115d C3       		ret
 2409              		.cfi_endproc
 2410              	.LFE1371:
 2412              		.set	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8
 2413              		.section	.rodata
 2414 03a5 000000   		.align 8
 2415              	.LC23:
 2416 03a8 53696E67 		.string	"SingleSuccessfulTestReportSummaryFormat"
 2416      6C655375 
 2416      63636573 
 2416      7366756C 
 2416      54657374 
 2417              		.text
 2418              		.align 2
 2420              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC2Ev:
 2421              	.LFB1374:
 2422              		.loc 3 80 0
 2423              		.cfi_startproc
 2424 115e 55       		pushq	%rbp
 2425              		.cfi_def_cfa_offset 16
 2426              		.cfi_offset 6, -16
 2427 115f 4889E5   		movq	%rsp, %rbp
 2428              		.cfi_def_cfa_register 6
 2429 1162 4883EC10 		subq	$16, %rsp
 2430 1166 48897DF8 		movq	%rdi, -8(%rbp)
 2431              	.LBB42:
 2432              		.loc 3 80 0
 2433 116a E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2433      00
 2434 116f 4889C2   		movq	%rax, %rdx
 2435 1172 488B45F8 		movq	-8(%rbp), %rax
 2436 1176 41B85000 		movl	$80, %r8d
 2436      0000
 2437 117c B9000000 		movl	$.LC1, %ecx
 2437      00
 2438 1181 BE000000 		movl	$.LC23, %esi
 2438      00
 2439 1186 4889C7   		movq	%rax, %rdi
 2440 1189 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2440      00
 2441 118e BA000000 		movl	$_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE+16, 
 2441      00
 2442 1193 488B45F8 		movq	-8(%rbp), %rax
 2443 1197 488910   		movq	%rdx, (%rax)
 2444              	.LBE42:
 2445 119a 90       		nop
 2446 119b C9       		leave
 2447              		.cfi_def_cfa 7, 8
 2448 119c C3       		ret
 2449              		.cfi_endproc
 2450              	.LFE1374:
 2452              		.set	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev,_ZN1
 2453              		.local	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanc
 2454              		.comm	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 2455              		.local	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 2456              		.comm	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE,1,1
 2457 119d 90       		.align 2
 2459              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD2Ev:
 2460              	.LFB1378:
 2461              		.loc 3 80 0
 2462              		.cfi_startproc
 2463 119e 55       		pushq	%rbp
 2464              		.cfi_def_cfa_offset 16
 2465              		.cfi_offset 6, -16
 2466 119f 4889E5   		movq	%rsp, %rbp
 2467              		.cfi_def_cfa_register 6
 2468 11a2 4883EC10 		subq	$16, %rsp
 2469 11a6 48897DF8 		movq	%rdi, -8(%rbp)
 2470              	.LBB43:
 2471              		.loc 3 80 0
 2472 11aa 488B45F8 		movq	-8(%rbp), %rax
 2473 11ae 4889C7   		movq	%rax, %rdi
 2474 11b1 E8A6EEFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 2474      FF
 2475              	.LBE43:
 2476 11b6 90       		nop
 2477 11b7 C9       		leave
 2478              		.cfi_def_cfa 7, 8
 2479 11b8 C3       		ret
 2480              		.cfi_endproc
 2481              	.LFE1378:
 2483              		.set	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev,_Z
 2484 11b9 90       		.align 2
 2486              	_ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImplEv:
 2487              	.LFB1376:
 2488              		.loc 3 80 0
 2489              		.cfi_startproc
 2490              		.cfi_personality 0x3,__gxx_personality_v0
 2491              		.cfi_lsda 0x3,.LLSDA1376
 2492 11ba 55       		pushq	%rbp
 2493              		.cfi_def_cfa_offset 16
 2494              		.cfi_offset 6, -16
 2495 11bb 4889E5   		movq	%rsp, %rbp
 2496              		.cfi_def_cfa_register 6
 2497 11be 4154     		pushq	%r12
 2498 11c0 53       		pushq	%rbx
 2499 11c1 4881EC00 		subq	$512, %rsp
 2499      020000
 2500              		.cfi_offset 12, -24
 2501              		.cfi_offset 3, -32
 2502 11c8 4889BDF8 		movq	%rdi, -520(%rbp)
 2502      FDFFFF
 2503              		.loc 3 80 0
 2504 11cf 64488B04 		movq	%fs:40, %rax
 2504      25280000 
 2504      00
 2505 11d8 488945E8 		movq	%rax, -24(%rbp)
 2506 11dc 31C0     		xorl	%eax, %eax
 2507 11de C6850FFE 		movb	$0, -497(%rbp)
 2507      FFFF00
 2508              	.LBB44:
 2509 11e5 488B85F8 		movq	-520(%rbp), %rax
 2509      FDFFFF
 2510 11ec 488D5008 		leaq	8(%rax), %rdx
 2511 11f0 488D8540 		leaq	-448(%rbp), %rax
 2511      FEFFFF
 2512 11f7 4889D6   		movq	%rdx, %rsi
 2513 11fa 4889C7   		movq	%rax, %rdi
 2514              	.LEHB71:
 2515 11fd E82EFFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8
 2515      FF
 2516              	.LEHE71:
 2517              		.loc 3 80 0 is_stmt 0 discriminator 1
 2518 1202 C6850FFE 		movb	$1, -497(%rbp)
 2518      FFFF01
 2519 1209 488B85F8 		movq	-520(%rbp), %rax
 2519      FDFFFF
 2520 1210 488D5008 		leaq	8(%rax), %rdx
 2521 1214 488D8540 		leaq	-448(%rbp), %rax
 2521      FEFFFF
 2522 121b 4889D6   		movq	%rdx, %rsi
 2523 121e 4889C7   		movq	%rax, %rdi
 2524              	.LEHB72:
 2525 1221 E8572200 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSu
 2525      00
 2526              	.LEHE72:
 2527              		.loc 3 80 0 discriminator 3
 2528 1226 488D8540 		leaq	-448(%rbp), %rax
 2528      FEFFFF
 2529 122d 4889C7   		movq	%rax, %rdi
 2530              	.LEHB73:
 2531 1230 E869FFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
 2531      FF
 2532              	.LEHE73:
 2533              	.LBE44:
 2534              		.loc 3 80 0
 2535 1235 E9660200 		jmp	.L128
 2535      00
 2536              	.L143:
 2537 123a 4989C4   		movq	%rax, %r12
 2538 123d 4889D3   		movq	%rdx, %rbx
 2539              	.LBB45:
 2540 1240 488D8540 		leaq	-448(%rbp), %rax
 2540      FEFFFF
 2541 1247 4889C7   		movq	%rax, %rdi
 2542 124a E84FFFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
 2542      FF
 2543 124f 4C89E0   		movq	%r12, %rax
 2544 1252 4889DA   		movq	%rbx, %rdx
 2545 1255 EB00     		jmp	.L130
 2546              	.L142:
 2547              	.L130:
 2548 1257 4883FA01 		cmpq	$1, %rdx
 2549 125b 740F     		je	.L132
 2550 125d 4883FA02 		cmpq	$2, %rdx
 2551 1261 0F84A700 		je	.L133
 2551      0000
 2552 1267 E94B0100 		jmp	.L148
 2552      00
 2553              	.L132:
 2554              	.LBE45:
 2555              	.LBB46:
 2556 126c 4889C7   		movq	%rax, %rdi
 2557 126f E8000000 		call	__cxa_begin_catch
 2557      00
 2558 1274 48898510 		movq	%rax, -496(%rbp)
 2558      FEFFFF
 2559 127b 488B8510 		movq	-496(%rbp), %rax
 2559      FEFFFF
 2560 1282 488B00   		movq	(%rax), %rax
 2561 1285 4883C010 		addq	$16, %rax
 2562 1289 488B00   		movq	(%rax), %rax
 2563 128c 488B9510 		movq	-496(%rbp), %rdx
 2563      FEFFFF
 2564 1293 4889D7   		movq	%rdx, %rdi
 2565 1296 FFD0     		call	*%rax
 2566 1298 4889C3   		movq	%rax, %rbx
 2567 129b 488B8510 		movq	-496(%rbp), %rax
 2567      FEFFFF
 2568 12a2 4889C7   		movq	%rax, %rdi
 2569              	.LEHB74:
 2570 12a5 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 2570      00
 2571 12aa 4189C4   		movl	%eax, %r12d
 2572 12ad 488B8510 		movq	-496(%rbp), %rax
 2572      FEFFFF
 2573 12b4 4889C7   		movq	%rax, %rdi
 2574 12b7 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 2574      00
 2575              		.loc 3 80 0 discriminator 5
 2576 12bc 4889C1   		movq	%rax, %rcx
 2577 12bf 488B85F8 		movq	-520(%rbp), %rax
 2577      FDFFFF
 2578 12c6 488B5008 		movq	8(%rax), %rdx
 2579 12ca 488B85F8 		movq	-520(%rbp), %rax
 2579      FDFFFF
 2580 12d1 488B7010 		movq	16(%rax), %rsi
 2581 12d5 488D8520 		leaq	-480(%rbp), %rax
 2581      FEFFFF
 2582 12dc 4589E0   		movl	%r12d, %r8d
 2583 12df 4889C7   		movq	%rax, %rdi
 2584 12e2 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2584      00
 2585              		.loc 3 80 0 discriminator 9
 2586 12e7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2586      00
 2587 12ec 488B00   		movq	(%rax), %rax
 2588 12ef 488D8D20 		leaq	-480(%rbp), %rcx
 2588      FEFFFF
 2589 12f6 4889DA   		movq	%rbx, %rdx
 2590 12f9 4889CE   		movq	%rcx, %rsi
 2591 12fc 4889C7   		movq	%rax, %rdi
 2592 12ff E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2592      00
 2593              	.LEHE74:
 2594              		.loc 3 80 0 discriminator 13
 2595 1304 E8000000 		call	__cxa_end_catch
 2595      00
 2596              	.LBE46:
 2597 1309 E9920100 		jmp	.L128
 2597      00
 2598              	.L133:
 2599              	.LBB47:
 2600              		.loc 3 80 0
 2601 130e 4889C7   		movq	%rax, %rdi
 2602 1311 E8000000 		call	__cxa_begin_catch
 2602      00
 2603 1316 48898518 		movq	%rax, -488(%rbp)
 2603      FEFFFF
 2604              	.LBB48:
 2605 131d 488D8540 		leaq	-448(%rbp), %rax
 2605      FEFFFF
 2606 1324 4889C7   		movq	%rax, %rdi
 2607              	.LEHB75:
 2608 1327 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2608      00
 2609              	.LEHE75:
 2610              		.loc 3 80 0 discriminator 15
 2611 132c 488B8518 		movq	-488(%rbp), %rax
 2611      FEFFFF
 2612 1333 488B00   		movq	(%rax), %rax
 2613 1336 4883C010 		addq	$16, %rax
 2614 133a 488B00   		movq	(%rax), %rax
 2615 133d 488B9518 		movq	-488(%rbp), %rdx
 2615      FEFFFF
 2616 1344 4889D7   		movq	%rdx, %rdi
 2617 1347 FFD0     		call	*%rax
 2618 1349 4889C3   		movq	%rax, %rbx
 2619 134c 488D8540 		leaq	-448(%rbp), %rax
 2619      FEFFFF
 2620 1353 BE000000 		movl	$.LC3, %esi
 2620      00
 2621 1358 4889C7   		movq	%rax, %rdi
 2622              	.LEHB76:
 2623 135b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2623      00
 2624 1360 4889DE   		movq	%rbx, %rsi
 2625 1363 4889C7   		movq	%rax, %rdi
 2626 1366 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2626      00
 2627              		.loc 3 80 0 discriminator 19
 2628 136b 488D8540 		leaq	-448(%rbp), %rax
 2628      FEFFFF
 2629 1372 4889C7   		movq	%rax, %rdi
 2630 1375 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2630      00
 2631 137a 4989C4   		movq	%rax, %r12
 2632 137d 488B85F8 		movq	-520(%rbp), %rax
 2632      FDFFFF
 2633 1384 488D5808 		leaq	8(%rax), %rbx
 2634 1388 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2634      00
 2635              		.loc 3 80 0 discriminator 21
 2636 138d 488B00   		movq	(%rax), %rax
 2637 1390 4C89E2   		movq	%r12, %rdx
 2638 1393 4889DE   		movq	%rbx, %rsi
 2639 1396 4889C7   		movq	%rax, %rdi
 2640 1399 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2640      00
 2641              	.LEHE76:
 2642              		.loc 3 80 0 discriminator 25
 2643 139e 488D8540 		leaq	-448(%rbp), %rax
 2643      FEFFFF
 2644 13a5 4889C7   		movq	%rax, %rdi
 2645              	.LEHB77:
 2646 13a8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2646      00
 2647              	.LEHE77:
 2648              	.LBE48:
 2649              		.loc 3 80 0 discriminator 26
 2650 13ad E8000000 		call	__cxa_end_catch
 2650      00
 2651              	.LBE47:
 2652 13b2 E9E90000 		jmp	.L128
 2652      00
 2653              	.L148:
 2654              		.loc 3 80 0
 2655 13b7 4889C7   		movq	%rax, %rdi
 2656 13ba E8000000 		call	__cxa_begin_catch
 2656      00
 2657 13bf 80BD0FFE 		cmpb	$0, -497(%rbp)
 2657      FFFF00
 2658 13c6 7443     		je	.L135
 2659              		.loc 3 80 0 discriminator 28
 2660 13c8 488B85F8 		movq	-520(%rbp), %rax
 2660      FDFFFF
 2661 13cf 488D4808 		leaq	8(%rax), %rcx
 2662 13d3 488D8520 		leaq	-480(%rbp), %rax
 2662      FEFFFF
 2663 13da BA500000 		movl	$80, %edx
 2663      00
 2664 13df 4889CE   		movq	%rcx, %rsi
 2665 13e2 4889C7   		movq	%rax, %rdi
 2666              	.LEHB78:
 2667 13e5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2667      00
 2668              		.loc 3 80 0 discriminator 31
 2669 13ea E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2669      00
 2670 13ef 488B00   		movq	(%rax), %rax
 2671 13f2 488D8D20 		leaq	-480(%rbp), %rcx
 2671      FEFFFF
 2672 13f9 BA000000 		movl	$.LC4, %edx
 2672      00
 2673 13fe 4889CE   		movq	%rcx, %rsi
 2674 1401 4889C7   		movq	%rax, %rdi
 2675 1404 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2675      00
 2676 1409 EB41     		jmp	.L136
 2677              	.L135:
 2678              		.loc 3 80 0 discriminator 29
 2679 140b 488B85F8 		movq	-520(%rbp), %rax
 2679      FDFFFF
 2680 1412 488D4808 		leaq	8(%rax), %rcx
 2681 1416 488D8520 		leaq	-480(%rbp), %rax
 2681      FEFFFF
 2682 141d BA500000 		movl	$80, %edx
 2682      00
 2683 1422 4889CE   		movq	%rcx, %rsi
 2684 1425 4889C7   		movq	%rax, %rdi
 2685 1428 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2685      00
 2686              		.loc 3 80 0 discriminator 38
 2687 142d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2687      00
 2688 1432 488B00   		movq	(%rax), %rax
 2689 1435 488D8D20 		leaq	-480(%rbp), %rcx
 2689      FEFFFF
 2690 143c BA000000 		movl	$.LC5, %edx
 2690      00
 2691 1441 4889CE   		movq	%rcx, %rsi
 2692 1444 4889C7   		movq	%rax, %rdi
 2693 1447 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2693      00
 2694              	.LEHE78:
 2695              	.L136:
 2696              	.LEHB79:
 2697              		.loc 3 80 0 discriminator 43
 2698 144c E8000000 		call	__cxa_end_catch
 2698      00
 2699 1451 EB4D     		jmp	.L128
 2700              	.L144:
 2701 1453 4889C3   		movq	%rax, %rbx
 2702              	.LBB50:
 2703              		.loc 3 80 0
 2704 1456 E8000000 		call	__cxa_end_catch
 2704      00
 2705 145b 4889D8   		movq	%rbx, %rax
 2706 145e 4889C7   		movq	%rax, %rdi
 2707 1461 E8000000 		call	_Unwind_Resume
 2707      00
 2708              	.LEHE79:
 2709              	.L146:
 2710 1466 4889C3   		movq	%rax, %rbx
 2711              	.LBE50:
 2712              	.LBB51:
 2713              	.LBB49:
 2714 1469 488D8540 		leaq	-448(%rbp), %rax
 2714      FEFFFF
 2715 1470 4889C7   		movq	%rax, %rdi
 2716 1473 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2716      00
 2717 1478 EB03     		jmp	.L139
 2718              	.L145:
 2719 147a 4889C3   		movq	%rax, %rbx
 2720              	.L139:
 2721              	.LBE49:
 2722 147d E8000000 		call	__cxa_end_catch
 2722      00
 2723 1482 4889D8   		movq	%rbx, %rax
 2724 1485 4889C7   		movq	%rax, %rdi
 2725              	.LEHB80:
 2726 1488 E8000000 		call	_Unwind_Resume
 2726      00
 2727              	.LEHE80:
 2728              	.L147:
 2729 148d 4889C3   		movq	%rax, %rbx
 2730              	.LBE51:
 2731 1490 E8000000 		call	__cxa_end_catch
 2731      00
 2732 1495 4889D8   		movq	%rbx, %rax
 2733 1498 4889C7   		movq	%rax, %rdi
 2734              	.LEHB81:
 2735 149b E8000000 		call	_Unwind_Resume
 2735      00
 2736              	.LEHE81:
 2737              	.L128:
 2738 14a0 488B45E8 		movq	-24(%rbp), %rax
 2739 14a4 64483304 		xorq	%fs:40, %rax
 2739      25280000 
 2739      00
 2740 14ad 7405     		je	.L141
 2741 14af E8000000 		call	__stack_chk_fail
 2741      00
 2742              	.L141:
 2743 14b4 4881C400 		addq	$512, %rsp
 2743      020000
 2744 14bb 5B       		popq	%rbx
 2745 14bc 415C     		popq	%r12
 2746 14be 5D       		popq	%rbp
 2747              		.cfi_def_cfa 7, 8
 2748 14bf C3       		ret
 2749              		.cfi_endproc
 2750              	.LFE1376:
 2751              		.section	.gcc_except_table
 2752              		.align 4
 2753              	.LLSDA1376:
 2754 01ec FF       		.byte	0xff
 2755 01ed 03       		.byte	0x3
 2756 01ee 55       		.uleb128 .LLSDATT1376-.LLSDATTD1376
 2757              	.LLSDATTD1376:
 2758 01ef 01       		.byte	0x1
 2759 01f0 3C       		.uleb128 .LLSDACSE1376-.LLSDACSB1376
 2760              	.LLSDACSB1376:
 2761 01f1 43       		.uleb128 .LEHB71-.LFB1376
 2762 01f2 05       		.uleb128 .LEHE71-.LEHB71
 2763 01f3 9D01     		.uleb128 .L142-.LFB1376
 2764 01f5 05       		.uleb128 0x5
 2765 01f6 67       		.uleb128 .LEHB72-.LFB1376
 2766 01f7 05       		.uleb128 .LEHE72-.LEHB72
 2767 01f8 8001     		.uleb128 .L143-.LFB1376
 2768 01fa 07       		.uleb128 0x7
 2769 01fb 76       		.uleb128 .LEHB73-.LFB1376
 2770 01fc 05       		.uleb128 .LEHE73-.LEHB73
 2771 01fd 9D01     		.uleb128 .L142-.LFB1376
 2772 01ff 05       		.uleb128 0x5
 2773 0200 EB01     		.uleb128 .LEHB74-.LFB1376
 2774 0202 5F       		.uleb128 .LEHE74-.LEHB74
 2775 0203 9905     		.uleb128 .L144-.LFB1376
 2776 0205 00       		.uleb128 0
 2777 0206 ED02     		.uleb128 .LEHB75-.LFB1376
 2778 0208 05       		.uleb128 .LEHE75-.LEHB75
 2779 0209 C005     		.uleb128 .L145-.LFB1376
 2780 020b 00       		.uleb128 0
 2781 020c A103     		.uleb128 .LEHB76-.LFB1376
 2782 020e 43       		.uleb128 .LEHE76-.LEHB76
 2783 020f AC05     		.uleb128 .L146-.LFB1376
 2784 0211 00       		.uleb128 0
 2785 0212 EE03     		.uleb128 .LEHB77-.LFB1376
 2786 0214 05       		.uleb128 .LEHE77-.LEHB77
 2787 0215 C005     		.uleb128 .L145-.LFB1376
 2788 0217 00       		.uleb128 0
 2789 0218 AB04     		.uleb128 .LEHB78-.LFB1376
 2790 021a 67       		.uleb128 .LEHE78-.LEHB78
 2791 021b D305     		.uleb128 .L147-.LFB1376
 2792 021d 00       		.uleb128 0
 2793 021e 9205     		.uleb128 .LEHB79-.LFB1376
 2794 0220 1A       		.uleb128 .LEHE79-.LEHB79
 2795 0221 00       		.uleb128 0
 2796 0222 00       		.uleb128 0
 2797 0223 CE05     		.uleb128 .LEHB80-.LFB1376
 2798 0225 05       		.uleb128 .LEHE80-.LEHB80
 2799 0226 00       		.uleb128 0
 2800 0227 00       		.uleb128 0
 2801 0228 E105     		.uleb128 .LEHB81-.LFB1376
 2802 022a 05       		.uleb128 .LEHE81-.LEHB81
 2803 022b 00       		.uleb128 0
 2804 022c 00       		.uleb128 0
 2805              	.LLSDACSE1376:
 2806 022d 03       		.byte	0x3
 2807 022e 00       		.byte	0
 2808 022f 02       		.byte	0x2
 2809 0230 7D       		.byte	0x7d
 2810 0231 01       		.byte	0x1
 2811 0232 7D       		.byte	0x7d
 2812 0233 00       		.byte	0
 2813 0234 7D       		.byte	0x7d
 2814 0235 000000   		.align 4
 2815 0238 00000000 		.long	0
 2816              	
 2817 023c 00000000 		.long	_ZTISt9exception
 2818 0240 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2819              	.LLSDATT1376:
 2820              		.text
 2822              		.section	.rodata
 2823              		.align 8
 2824              	.LC24:
 2825 03d0 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"0\" failures=\"0\" tim
 2825      6C207665 
 2825      7273696F 
 2825      6E3D2231 
 2825      2E30223F 
 2826              		.text
 2827              		.align 2
 2829              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImplEv:
 2830              	.LFB1380:
  81:TestXmlTestReporter.cpp **** {
 2831              		.loc 3 81 0 is_stmt 1
 2832              		.cfi_startproc
 2833              		.cfi_personality 0x3,__gxx_personality_v0
 2834              		.cfi_lsda 0x3,.LLSDA1380
 2835 14c0 55       		pushq	%rbp
 2836              		.cfi_def_cfa_offset 16
 2837              		.cfi_offset 6, -16
 2838 14c1 4889E5   		movq	%rsp, %rbp
 2839              		.cfi_def_cfa_register 6
 2840 14c4 53       		pushq	%rbx
 2841 14c5 4881EC98 		subq	$152, %rsp
 2841      000000
 2842              		.cfi_offset 3, -24
 2843 14cc 4889BD68 		movq	%rdi, -152(%rbp)
 2843      FFFFFF
 2844              		.loc 3 81 0
 2845 14d3 64488B04 		movq	%fs:40, %rax
 2845      25280000 
 2845      00
 2846 14dc 488945E8 		movq	%rax, -24(%rbp)
 2847 14e0 31C0     		xorl	%eax, %eax
  82:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "DefaultSuite", "", 0);
 2848              		.loc 3 82 0
 2849 14e2 488D4580 		leaq	-128(%rbp), %rax
 2850 14e6 41B80000 		movl	$0, %r8d
 2850      0000
 2851 14ec B9000000 		movl	$.LC14, %ecx
 2851      00
 2852 14f1 BA000000 		movl	$.LC0, %edx
 2852      00
 2853 14f6 BE000000 		movl	$.LC8, %esi
 2853      00
 2854 14fb 4889C7   		movq	%rax, %rdi
 2855              	.LEHB82:
 2856 14fe E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2856      00
  83:TestXmlTestReporter.cpp **** 
  84:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 2857              		.loc 3 84 0
 2858 1503 488B8568 		movq	-152(%rbp), %rax
 2858      FFFFFF
 2859 150a 488D9078 		leaq	376(%rax), %rdx
 2859      010000
 2860 1511 488D4580 		leaq	-128(%rbp), %rax
 2861 1515 4889C6   		movq	%rax, %rsi
 2862 1518 4889D7   		movq	%rdx, %rdi
 2863 151b E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 2863      00
  85:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 0, 0, 0.1f);
 2864              		.loc 3 85 0
 2865 1520 488B8568 		movq	-152(%rbp), %rax
 2865      FFFFFF
 2866 1527 48057801 		addq	$376, %rax
 2866      0000
 2867 152d F30F1005 		movss	.LC10(%rip), %xmm0
 2867      00000000 
 2868 1535 B9000000 		movl	$0, %ecx
 2868      00
 2869 153a BA000000 		movl	$0, %edx
 2869      00
 2870 153f BE010000 		movl	$1, %esi
 2870      00
 2871 1544 4889C7   		movq	%rax, %rdi
 2872 1547 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 2872      00
 2873              	.LEHE82:
  86:TestXmlTestReporter.cpp **** 
  87:TestXmlTestReporter.cpp ****     const char *expected =
  88:TestXmlTestReporter.cpp **** "<?xml version=\"1.0\"?>"
  89:TestXmlTestReporter.cpp **** "<unittest-results tests=\"1\" failedtests=\"0\" failures=\"0\" time=\"0.1\">"
  90:TestXmlTestReporter.cpp **** "<test suite=\"DefaultSuite\" name=\"TestName\" time=\"0\"/>"
  91:TestXmlTestReporter.cpp **** "</unittest-results>";
 2874              		.loc 3 91 0
 2875 154c 48C78578 		movq	$.LC24, -136(%rbp)
 2875      FFFFFF00 
 2875      000000
 2876              	.LEHB83:
  92:TestXmlTestReporter.cpp **** 
  93:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 2877              		.loc 3 93 0
 2878 1557 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2878      00
 2879 155c 488B08   		movq	(%rax), %rcx
 2880 155f 488D45A0 		leaq	-96(%rbp), %rax
 2881 1563 BA5D0000 		movl	$93, %edx
 2881      00
 2882 1568 4889CE   		movq	%rcx, %rsi
 2883 156b 4889C7   		movq	%rax, %rdi
 2884 156e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2884      00
 2885              		.loc 3 93 0 is_stmt 0 discriminator 2
 2886 1573 488B9568 		movq	-152(%rbp), %rdx
 2886      FFFFFF
 2887 157a 488D45C0 		leaq	-64(%rbp), %rax
 2888 157e 4889D6   		movq	%rdx, %rsi
 2889 1581 4889C7   		movq	%rax, %rdi
 2890 1584 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 2890      00
 2891              	.LEHE83:
 2892              	.LEHB84:
 2893              		.loc 3 93 0 discriminator 4
 2894 1589 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2894      00
 2895 158e 488B00   		movq	(%rax), %rax
 2896 1591 488D4DA0 		leaq	-96(%rbp), %rcx
 2897 1595 488D55C0 		leaq	-64(%rbp), %rdx
 2898 1599 488DB578 		leaq	-136(%rbp), %rsi
 2898      FFFFFF
 2899 15a0 4889C7   		movq	%rax, %rdi
 2900 15a3 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 2900      00
 2901              	.LEHE84:
 2902              		.loc 3 93 0 discriminator 8
 2903 15a8 488D45C0 		leaq	-64(%rbp), %rax
 2904 15ac 4889C7   		movq	%rax, %rdi
 2905              	.LEHB85:
 2906 15af E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2906      00
 2907              	.LEHE85:
  94:TestXmlTestReporter.cpp **** }
 2908              		.loc 3 94 0 is_stmt 1
 2909 15b4 EB6E     		jmp	.L149
 2910              	.L156:
 2911 15b6 4889C3   		movq	%rax, %rbx
  93:TestXmlTestReporter.cpp **** }
 2912              		.loc 3 93 0
 2913 15b9 488D45C0 		leaq	-64(%rbp), %rax
 2914 15bd 4889C7   		movq	%rax, %rdi
 2915 15c0 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2915      00
 2916 15c5 4889D8   		movq	%rbx, %rax
 2917 15c8 EB00     		jmp	.L151
 2918              	.L155:
 2919              	.L151:
 2920 15ca 4889C7   		movq	%rax, %rdi
 2921 15cd E8000000 		call	__cxa_begin_catch
 2921      00
 2922              	.LEHB86:
 2923 15d2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2923      00
 2924 15d7 488B08   		movq	(%rax), %rcx
 2925 15da 488D45A0 		leaq	-96(%rbp), %rax
 2926 15de BA5D0000 		movl	$93, %edx
 2926      00
 2927 15e3 4889CE   		movq	%rcx, %rsi
 2928 15e6 4889C7   		movq	%rax, %rdi
 2929 15e9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2929      00
  93:TestXmlTestReporter.cpp **** }
 2930              		.loc 3 93 0 is_stmt 0 discriminator 14
 2931 15ee E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2931      00
 2932 15f3 488B00   		movq	(%rax), %rax
 2933 15f6 488D4DA0 		leaq	-96(%rbp), %rcx
 2934 15fa BA000000 		movl	$.LC12, %edx
 2934      00
 2935 15ff 4889CE   		movq	%rcx, %rsi
 2936 1602 4889C7   		movq	%rax, %rdi
 2937 1605 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2937      00
 2938              	.LEHE86:
 2939              	.LEHB87:
  93:TestXmlTestReporter.cpp **** }
 2940              		.loc 3 93 0 discriminator 18
 2941 160a E8000000 		call	__cxa_end_catch
 2941      00
 2942              	.LEHE87:
 2943              		.loc 3 94 0 is_stmt 1 discriminator 18
 2944 160f EB13     		jmp	.L149
 2945              	.L157:
 2946 1611 4889C3   		movq	%rax, %rbx
  93:TestXmlTestReporter.cpp **** }
 2947              		.loc 3 93 0
 2948 1614 E8000000 		call	__cxa_end_catch
 2948      00
 2949 1619 4889D8   		movq	%rbx, %rax
 2950 161c 4889C7   		movq	%rax, %rdi
 2951              	.LEHB88:
 2952 161f E8000000 		call	_Unwind_Resume
 2952      00
 2953              	.LEHE88:
 2954              	.L149:
 2955              		.loc 3 94 0
 2956 1624 488B45E8 		movq	-24(%rbp), %rax
 2957 1628 64483304 		xorq	%fs:40, %rax
 2957      25280000 
 2957      00
 2958 1631 7405     		je	.L154
 2959 1633 E8000000 		call	__stack_chk_fail
 2959      00
 2960              	.L154:
 2961 1638 4881C498 		addq	$152, %rsp
 2961      000000
 2962 163f 5B       		popq	%rbx
 2963 1640 5D       		popq	%rbp
 2964              		.cfi_def_cfa 7, 8
 2965 1641 C3       		ret
 2966              		.cfi_endproc
 2967              	.LFE1380:
 2968              		.section	.gcc_except_table
 2969              		.align 4
 2970              	.LLSDA1380:
 2971 0244 FF       		.byte	0xff
 2972 0245 03       		.byte	0x3
 2973 0246 31       		.uleb128 .LLSDATT1380-.LLSDATTD1380
 2974              	.LLSDATTD1380:
 2975 0247 01       		.byte	0x1
 2976 0248 26       		.uleb128 .LLSDACSE1380-.LLSDACSB1380
 2977              	.LLSDACSB1380:
 2978 0249 3E       		.uleb128 .LEHB82-.LFB1380
 2979 024a 4E       		.uleb128 .LEHE82-.LEHB82
 2980 024b 00       		.uleb128 0
 2981 024c 00       		.uleb128 0
 2982 024d 9701     		.uleb128 .LEHB83-.LFB1380
 2983 024f 32       		.uleb128 .LEHE83-.LEHB83
 2984 0250 8A02     		.uleb128 .L155-.LFB1380
 2985 0252 01       		.uleb128 0x1
 2986 0253 C901     		.uleb128 .LEHB84-.LFB1380
 2987 0255 1F       		.uleb128 .LEHE84-.LEHB84
 2988 0256 F601     		.uleb128 .L156-.LFB1380
 2989 0258 03       		.uleb128 0x3
 2990 0259 EF01     		.uleb128 .LEHB85-.LFB1380
 2991 025b 05       		.uleb128 .LEHE85-.LEHB85
 2992 025c 8A02     		.uleb128 .L155-.LFB1380
 2993 025e 01       		.uleb128 0x1
 2994 025f 9202     		.uleb128 .LEHB86-.LFB1380
 2995 0261 38       		.uleb128 .LEHE86-.LEHB86
 2996 0262 D102     		.uleb128 .L157-.LFB1380
 2997 0264 00       		.uleb128 0
 2998 0265 CA02     		.uleb128 .LEHB87-.LFB1380
 2999 0267 05       		.uleb128 .LEHE87-.LEHB87
 3000 0268 00       		.uleb128 0
 3001 0269 00       		.uleb128 0
 3002 026a DF02     		.uleb128 .LEHB88-.LFB1380
 3003 026c 05       		.uleb128 .LEHE88-.LEHB88
 3004 026d 00       		.uleb128 0
 3005 026e 00       		.uleb128 0
 3006              	.LLSDACSE1380:
 3007 026f 01       		.byte	0x1
 3008 0270 00       		.byte	0
 3009 0271 00       		.byte	0
 3010 0272 7D       		.byte	0x7d
 3011 0273 00       		.align 4
 3012 0274 00000000 		.long	0
 3013              	
 3014              	.LLSDATT1380:
 3015              		.text
 3017              		.align 2
 3019              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC2ERKN8UnitTest11
 3020              	.LFB1382:
  95:TestXmlTestReporter.cpp **** 
  96:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, SingleFailedTestReportSummaryFormat)
 3021              		.loc 3 96 0
 3022              		.cfi_startproc
 3023 1642 55       		pushq	%rbp
 3024              		.cfi_def_cfa_offset 16
 3025              		.cfi_offset 6, -16
 3026 1643 4889E5   		movq	%rsp, %rbp
 3027              		.cfi_def_cfa_register 6
 3028 1646 4883EC10 		subq	$16, %rsp
 3029 164a 48897DF8 		movq	%rdi, -8(%rbp)
 3030 164e 488975F0 		movq	%rsi, -16(%rbp)
 3031              	.LBB52:
 3032              		.loc 3 96 0
 3033 1652 488B45F8 		movq	-8(%rbp), %rax
 3034 1656 4889C7   		movq	%rax, %rdi
 3035 1659 E8A2E9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 3035      FF
 3036 165e 488B45F8 		movq	-8(%rbp), %rax
 3037 1662 488B55F0 		movq	-16(%rbp), %rdx
 3038 1666 488990A0 		movq	%rdx, 416(%rax)
 3038      010000
 3039              	.LBE52:
 3040 166d 90       		nop
 3041 166e C9       		leave
 3042              		.cfi_def_cfa 7, 8
 3043 166f C3       		ret
 3044              		.cfi_endproc
 3045              	.LFE1382:
 3047              		.set	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8Unit
 3048              		.section	.rodata
 3049 0472 00000000 		.align 8
 3049      0000
 3050              	.LC25:
 3051 0478 53696E67 		.string	"SingleFailedTestReportSummaryFormat"
 3051      6C654661 
 3051      696C6564 
 3051      54657374 
 3051      5265706F 
 3052              		.text
 3053              		.align 2
 3055              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC2Ev:
 3056              	.LFB1385:
 3057              		.loc 3 96 0
 3058              		.cfi_startproc
 3059 1670 55       		pushq	%rbp
 3060              		.cfi_def_cfa_offset 16
 3061              		.cfi_offset 6, -16
 3062 1671 4889E5   		movq	%rsp, %rbp
 3063              		.cfi_def_cfa_register 6
 3064 1674 4883EC10 		subq	$16, %rsp
 3065 1678 48897DF8 		movq	%rdi, -8(%rbp)
 3066              	.LBB53:
 3067              		.loc 3 96 0
 3068 167c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3068      00
 3069 1681 4889C2   		movq	%rax, %rdx
 3070 1684 488B45F8 		movq	-8(%rbp), %rax
 3071 1688 41B86000 		movl	$96, %r8d
 3071      0000
 3072 168e B9000000 		movl	$.LC1, %ecx
 3072      00
 3073 1693 BE000000 		movl	$.LC25, %esi
 3073      00
 3074 1698 4889C7   		movq	%rax, %rdi
 3075 169b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3075      00
 3076 16a0 BA000000 		movl	$_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE+16, %edx
 3076      00
 3077 16a5 488B45F8 		movq	-8(%rbp), %rax
 3078 16a9 488910   		movq	%rdx, (%rax)
 3079              	.LBE53:
 3080 16ac 90       		nop
 3081 16ad C9       		leave
 3082              		.cfi_def_cfa 7, 8
 3083 16ae C3       		ret
 3084              		.cfi_endproc
 3085              	.LFE1385:
 3087              		.set	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev,_ZN12_GL
 3088              		.local	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE
 3089              		.comm	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE,56
 3090              		.local	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 3091              		.comm	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE,1,1
 3092 16af 90       		.align 2
 3094              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD2Ev:
 3095              	.LFB1389:
 3096              		.loc 3 96 0
 3097              		.cfi_startproc
 3098 16b0 55       		pushq	%rbp
 3099              		.cfi_def_cfa_offset 16
 3100              		.cfi_offset 6, -16
 3101 16b1 4889E5   		movq	%rsp, %rbp
 3102              		.cfi_def_cfa_register 6
 3103 16b4 4883EC10 		subq	$16, %rsp
 3104 16b8 48897DF8 		movq	%rdi, -8(%rbp)
 3105              	.LBB54:
 3106              		.loc 3 96 0
 3107 16bc 488B45F8 		movq	-8(%rbp), %rax
 3108 16c0 4889C7   		movq	%rax, %rdi
 3109 16c3 E894E9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 3109      FF
 3110              	.LBE54:
 3111 16c8 90       		nop
 3112 16c9 C9       		leave
 3113              		.cfi_def_cfa 7, 8
 3114 16ca C3       		ret
 3115              		.cfi_endproc
 3116              	.LFE1389:
 3118              		.set	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev,_ZN12_
 3119 16cb 90       		.align 2
 3121              	_ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv:
 3122              	.LFB1387:
 3123              		.loc 3 96 0
 3124              		.cfi_startproc
 3125              		.cfi_personality 0x3,__gxx_personality_v0
 3126              		.cfi_lsda 0x3,.LLSDA1387
 3127 16cc 55       		pushq	%rbp
 3128              		.cfi_def_cfa_offset 16
 3129              		.cfi_offset 6, -16
 3130 16cd 4889E5   		movq	%rsp, %rbp
 3131              		.cfi_def_cfa_register 6
 3132 16d0 4154     		pushq	%r12
 3133 16d2 53       		pushq	%rbx
 3134 16d3 4881EC00 		subq	$512, %rsp
 3134      020000
 3135              		.cfi_offset 12, -24
 3136              		.cfi_offset 3, -32
 3137 16da 4889BDF8 		movq	%rdi, -520(%rbp)
 3137      FDFFFF
 3138              		.loc 3 96 0
 3139 16e1 64488B04 		movq	%fs:40, %rax
 3139      25280000 
 3139      00
 3140 16ea 488945E8 		movq	%rax, -24(%rbp)
 3141 16ee 31C0     		xorl	%eax, %eax
 3142 16f0 C6850FFE 		movb	$0, -497(%rbp)
 3142      FFFF00
 3143              	.LBB55:
 3144 16f7 488B85F8 		movq	-520(%rbp), %rax
 3144      FDFFFF
 3145 16fe 488D5008 		leaq	8(%rax), %rdx
 3146 1702 488D8540 		leaq	-448(%rbp), %rax
 3146      FEFFFF
 3147 1709 4889D6   		movq	%rdx, %rsi
 3148 170c 4889C7   		movq	%rax, %rdi
 3149              	.LEHB89:
 3150 170f E82EFFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8Unit
 3150      FF
 3151              	.LEHE89:
 3152              		.loc 3 96 0 is_stmt 0 discriminator 1
 3153 1714 C6850FFE 		movb	$1, -497(%rbp)
 3153      FFFF01
 3154 171b 488B85F8 		movq	-520(%rbp), %rax
 3154      FDFFFF
 3155 1722 488D5008 		leaq	8(%rax), %rdx
 3156 1726 488D8540 		leaq	-448(%rbp), %rax
 3156      FEFFFF
 3157 172d 4889D6   		movq	%rdx, %rsi
 3158 1730 4889C7   		movq	%rax, %rdi
 3159              	.LEHB90:
 3160 1733 E8042000 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummar
 3160      00
 3161              	.LEHE90:
 3162              		.loc 3 96 0 discriminator 3
 3163 1738 488D8540 		leaq	-448(%rbp), %rax
 3163      FEFFFF
 3164 173f 4889C7   		movq	%rax, %rdi
 3165              	.LEHB91:
 3166 1742 E869FFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
 3166      FF
 3167              	.LEHE91:
 3168              	.LBE55:
 3169              		.loc 3 96 0
 3170 1747 E9660200 		jmp	.L161
 3170      00
 3171              	.L176:
 3172 174c 4989C4   		movq	%rax, %r12
 3173 174f 4889D3   		movq	%rdx, %rbx
 3174              	.LBB56:
 3175 1752 488D8540 		leaq	-448(%rbp), %rax
 3175      FEFFFF
 3176 1759 4889C7   		movq	%rax, %rdi
 3177 175c E84FFFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
 3177      FF
 3178 1761 4C89E0   		movq	%r12, %rax
 3179 1764 4889DA   		movq	%rbx, %rdx
 3180 1767 EB00     		jmp	.L163
 3181              	.L175:
 3182              	.L163:
 3183 1769 4883FA01 		cmpq	$1, %rdx
 3184 176d 740F     		je	.L165
 3185 176f 4883FA02 		cmpq	$2, %rdx
 3186 1773 0F84A700 		je	.L166
 3186      0000
 3187 1779 E94B0100 		jmp	.L181
 3187      00
 3188              	.L165:
 3189              	.LBE56:
 3190              	.LBB57:
 3191 177e 4889C7   		movq	%rax, %rdi
 3192 1781 E8000000 		call	__cxa_begin_catch
 3192      00
 3193 1786 48898510 		movq	%rax, -496(%rbp)
 3193      FEFFFF
 3194 178d 488B8510 		movq	-496(%rbp), %rax
 3194      FEFFFF
 3195 1794 488B00   		movq	(%rax), %rax
 3196 1797 4883C010 		addq	$16, %rax
 3197 179b 488B00   		movq	(%rax), %rax
 3198 179e 488B9510 		movq	-496(%rbp), %rdx
 3198      FEFFFF
 3199 17a5 4889D7   		movq	%rdx, %rdi
 3200 17a8 FFD0     		call	*%rax
 3201 17aa 4889C3   		movq	%rax, %rbx
 3202 17ad 488B8510 		movq	-496(%rbp), %rax
 3202      FEFFFF
 3203 17b4 4889C7   		movq	%rax, %rdi
 3204              	.LEHB92:
 3205 17b7 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3205      00
 3206 17bc 4189C4   		movl	%eax, %r12d
 3207 17bf 488B8510 		movq	-496(%rbp), %rax
 3207      FEFFFF
 3208 17c6 4889C7   		movq	%rax, %rdi
 3209 17c9 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3209      00
 3210              		.loc 3 96 0 discriminator 5
 3211 17ce 4889C1   		movq	%rax, %rcx
 3212 17d1 488B85F8 		movq	-520(%rbp), %rax
 3212      FDFFFF
 3213 17d8 488B5008 		movq	8(%rax), %rdx
 3214 17dc 488B85F8 		movq	-520(%rbp), %rax
 3214      FDFFFF
 3215 17e3 488B7010 		movq	16(%rax), %rsi
 3216 17e7 488D8520 		leaq	-480(%rbp), %rax
 3216      FEFFFF
 3217 17ee 4589E0   		movl	%r12d, %r8d
 3218 17f1 4889C7   		movq	%rax, %rdi
 3219 17f4 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3219      00
 3220              		.loc 3 96 0 discriminator 9
 3221 17f9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3221      00
 3222 17fe 488B00   		movq	(%rax), %rax
 3223 1801 488D8D20 		leaq	-480(%rbp), %rcx
 3223      FEFFFF
 3224 1808 4889DA   		movq	%rbx, %rdx
 3225 180b 4889CE   		movq	%rcx, %rsi
 3226 180e 4889C7   		movq	%rax, %rdi
 3227 1811 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3227      00
 3228              	.LEHE92:
 3229              		.loc 3 96 0 discriminator 13
 3230 1816 E8000000 		call	__cxa_end_catch
 3230      00
 3231              	.LBE57:
 3232 181b E9920100 		jmp	.L161
 3232      00
 3233              	.L166:
 3234              	.LBB58:
 3235              		.loc 3 96 0
 3236 1820 4889C7   		movq	%rax, %rdi
 3237 1823 E8000000 		call	__cxa_begin_catch
 3237      00
 3238 1828 48898518 		movq	%rax, -488(%rbp)
 3238      FEFFFF
 3239              	.LBB59:
 3240 182f 488D8540 		leaq	-448(%rbp), %rax
 3240      FEFFFF
 3241 1836 4889C7   		movq	%rax, %rdi
 3242              	.LEHB93:
 3243 1839 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3243      00
 3244              	.LEHE93:
 3245              		.loc 3 96 0 discriminator 15
 3246 183e 488B8518 		movq	-488(%rbp), %rax
 3246      FEFFFF
 3247 1845 488B00   		movq	(%rax), %rax
 3248 1848 4883C010 		addq	$16, %rax
 3249 184c 488B00   		movq	(%rax), %rax
 3250 184f 488B9518 		movq	-488(%rbp), %rdx
 3250      FEFFFF
 3251 1856 4889D7   		movq	%rdx, %rdi
 3252 1859 FFD0     		call	*%rax
 3253 185b 4889C3   		movq	%rax, %rbx
 3254 185e 488D8540 		leaq	-448(%rbp), %rax
 3254      FEFFFF
 3255 1865 BE000000 		movl	$.LC3, %esi
 3255      00
 3256 186a 4889C7   		movq	%rax, %rdi
 3257              	.LEHB94:
 3258 186d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3258      00
 3259 1872 4889DE   		movq	%rbx, %rsi
 3260 1875 4889C7   		movq	%rax, %rdi
 3261 1878 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3261      00
 3262              		.loc 3 96 0 discriminator 19
 3263 187d 488D8540 		leaq	-448(%rbp), %rax
 3263      FEFFFF
 3264 1884 4889C7   		movq	%rax, %rdi
 3265 1887 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3265      00
 3266 188c 4989C4   		movq	%rax, %r12
 3267 188f 488B85F8 		movq	-520(%rbp), %rax
 3267      FDFFFF
 3268 1896 488D5808 		leaq	8(%rax), %rbx
 3269 189a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3269      00
 3270              		.loc 3 96 0 discriminator 21
 3271 189f 488B00   		movq	(%rax), %rax
 3272 18a2 4C89E2   		movq	%r12, %rdx
 3273 18a5 4889DE   		movq	%rbx, %rsi
 3274 18a8 4889C7   		movq	%rax, %rdi
 3275 18ab E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3275      00
 3276              	.LEHE94:
 3277              		.loc 3 96 0 discriminator 25
 3278 18b0 488D8540 		leaq	-448(%rbp), %rax
 3278      FEFFFF
 3279 18b7 4889C7   		movq	%rax, %rdi
 3280              	.LEHB95:
 3281 18ba E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3281      00
 3282              	.LEHE95:
 3283              	.LBE59:
 3284              		.loc 3 96 0 discriminator 26
 3285 18bf E8000000 		call	__cxa_end_catch
 3285      00
 3286              	.LBE58:
 3287 18c4 E9E90000 		jmp	.L161
 3287      00
 3288              	.L181:
 3289              		.loc 3 96 0
 3290 18c9 4889C7   		movq	%rax, %rdi
 3291 18cc E8000000 		call	__cxa_begin_catch
 3291      00
 3292 18d1 80BD0FFE 		cmpb	$0, -497(%rbp)
 3292      FFFF00
 3293 18d8 7443     		je	.L168
 3294              		.loc 3 96 0 discriminator 28
 3295 18da 488B85F8 		movq	-520(%rbp), %rax
 3295      FDFFFF
 3296 18e1 488D4808 		leaq	8(%rax), %rcx
 3297 18e5 488D8520 		leaq	-480(%rbp), %rax
 3297      FEFFFF
 3298 18ec BA600000 		movl	$96, %edx
 3298      00
 3299 18f1 4889CE   		movq	%rcx, %rsi
 3300 18f4 4889C7   		movq	%rax, %rdi
 3301              	.LEHB96:
 3302 18f7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3302      00
 3303              		.loc 3 96 0 discriminator 31
 3304 18fc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3304      00
 3305 1901 488B00   		movq	(%rax), %rax
 3306 1904 488D8D20 		leaq	-480(%rbp), %rcx
 3306      FEFFFF
 3307 190b BA000000 		movl	$.LC4, %edx
 3307      00
 3308 1910 4889CE   		movq	%rcx, %rsi
 3309 1913 4889C7   		movq	%rax, %rdi
 3310 1916 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3310      00
 3311 191b EB41     		jmp	.L169
 3312              	.L168:
 3313              		.loc 3 96 0 discriminator 29
 3314 191d 488B85F8 		movq	-520(%rbp), %rax
 3314      FDFFFF
 3315 1924 488D4808 		leaq	8(%rax), %rcx
 3316 1928 488D8520 		leaq	-480(%rbp), %rax
 3316      FEFFFF
 3317 192f BA600000 		movl	$96, %edx
 3317      00
 3318 1934 4889CE   		movq	%rcx, %rsi
 3319 1937 4889C7   		movq	%rax, %rdi
 3320 193a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3320      00
 3321              		.loc 3 96 0 discriminator 38
 3322 193f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3322      00
 3323 1944 488B00   		movq	(%rax), %rax
 3324 1947 488D8D20 		leaq	-480(%rbp), %rcx
 3324      FEFFFF
 3325 194e BA000000 		movl	$.LC5, %edx
 3325      00
 3326 1953 4889CE   		movq	%rcx, %rsi
 3327 1956 4889C7   		movq	%rax, %rdi
 3328 1959 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3328      00
 3329              	.LEHE96:
 3330              	.L169:
 3331              	.LEHB97:
 3332              		.loc 3 96 0 discriminator 43
 3333 195e E8000000 		call	__cxa_end_catch
 3333      00
 3334 1963 EB4D     		jmp	.L161
 3335              	.L177:
 3336 1965 4889C3   		movq	%rax, %rbx
 3337              	.LBB61:
 3338              		.loc 3 96 0
 3339 1968 E8000000 		call	__cxa_end_catch
 3339      00
 3340 196d 4889D8   		movq	%rbx, %rax
 3341 1970 4889C7   		movq	%rax, %rdi
 3342 1973 E8000000 		call	_Unwind_Resume
 3342      00
 3343              	.LEHE97:
 3344              	.L179:
 3345 1978 4889C3   		movq	%rax, %rbx
 3346              	.LBE61:
 3347              	.LBB62:
 3348              	.LBB60:
 3349 197b 488D8540 		leaq	-448(%rbp), %rax
 3349      FEFFFF
 3350 1982 4889C7   		movq	%rax, %rdi
 3351 1985 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3351      00
 3352 198a EB03     		jmp	.L172
 3353              	.L178:
 3354 198c 4889C3   		movq	%rax, %rbx
 3355              	.L172:
 3356              	.LBE60:
 3357 198f E8000000 		call	__cxa_end_catch
 3357      00
 3358 1994 4889D8   		movq	%rbx, %rax
 3359 1997 4889C7   		movq	%rax, %rdi
 3360              	.LEHB98:
 3361 199a E8000000 		call	_Unwind_Resume
 3361      00
 3362              	.LEHE98:
 3363              	.L180:
 3364 199f 4889C3   		movq	%rax, %rbx
 3365              	.LBE62:
 3366 19a2 E8000000 		call	__cxa_end_catch
 3366      00
 3367 19a7 4889D8   		movq	%rbx, %rax
 3368 19aa 4889C7   		movq	%rax, %rdi
 3369              	.LEHB99:
 3370 19ad E8000000 		call	_Unwind_Resume
 3370      00
 3371              	.LEHE99:
 3372              	.L161:
 3373 19b2 488B45E8 		movq	-24(%rbp), %rax
 3374 19b6 64483304 		xorq	%fs:40, %rax
 3374      25280000 
 3374      00
 3375 19bf 7405     		je	.L174
 3376 19c1 E8000000 		call	__stack_chk_fail
 3376      00
 3377              	.L174:
 3378 19c6 4881C400 		addq	$512, %rsp
 3378      020000
 3379 19cd 5B       		popq	%rbx
 3380 19ce 415C     		popq	%r12
 3381 19d0 5D       		popq	%rbp
 3382              		.cfi_def_cfa 7, 8
 3383 19d1 C3       		ret
 3384              		.cfi_endproc
 3385              	.LFE1387:
 3386              		.section	.gcc_except_table
 3387              		.align 4
 3388              	.LLSDA1387:
 3389 0278 FF       		.byte	0xff
 3390 0279 03       		.byte	0x3
 3391 027a 55       		.uleb128 .LLSDATT1387-.LLSDATTD1387
 3392              	.LLSDATTD1387:
 3393 027b 01       		.byte	0x1
 3394 027c 3C       		.uleb128 .LLSDACSE1387-.LLSDACSB1387
 3395              	.LLSDACSB1387:
 3396 027d 43       		.uleb128 .LEHB89-.LFB1387
 3397 027e 05       		.uleb128 .LEHE89-.LEHB89
 3398 027f 9D01     		.uleb128 .L175-.LFB1387
 3399 0281 05       		.uleb128 0x5
 3400 0282 67       		.uleb128 .LEHB90-.LFB1387
 3401 0283 05       		.uleb128 .LEHE90-.LEHB90
 3402 0284 8001     		.uleb128 .L176-.LFB1387
 3403 0286 07       		.uleb128 0x7
 3404 0287 76       		.uleb128 .LEHB91-.LFB1387
 3405 0288 05       		.uleb128 .LEHE91-.LEHB91
 3406 0289 9D01     		.uleb128 .L175-.LFB1387
 3407 028b 05       		.uleb128 0x5
 3408 028c EB01     		.uleb128 .LEHB92-.LFB1387
 3409 028e 5F       		.uleb128 .LEHE92-.LEHB92
 3410 028f 9905     		.uleb128 .L177-.LFB1387
 3411 0291 00       		.uleb128 0
 3412 0292 ED02     		.uleb128 .LEHB93-.LFB1387
 3413 0294 05       		.uleb128 .LEHE93-.LEHB93
 3414 0295 C005     		.uleb128 .L178-.LFB1387
 3415 0297 00       		.uleb128 0
 3416 0298 A103     		.uleb128 .LEHB94-.LFB1387
 3417 029a 43       		.uleb128 .LEHE94-.LEHB94
 3418 029b AC05     		.uleb128 .L179-.LFB1387
 3419 029d 00       		.uleb128 0
 3420 029e EE03     		.uleb128 .LEHB95-.LFB1387
 3421 02a0 05       		.uleb128 .LEHE95-.LEHB95
 3422 02a1 C005     		.uleb128 .L178-.LFB1387
 3423 02a3 00       		.uleb128 0
 3424 02a4 AB04     		.uleb128 .LEHB96-.LFB1387
 3425 02a6 67       		.uleb128 .LEHE96-.LEHB96
 3426 02a7 D305     		.uleb128 .L180-.LFB1387
 3427 02a9 00       		.uleb128 0
 3428 02aa 9205     		.uleb128 .LEHB97-.LFB1387
 3429 02ac 1A       		.uleb128 .LEHE97-.LEHB97
 3430 02ad 00       		.uleb128 0
 3431 02ae 00       		.uleb128 0
 3432 02af CE05     		.uleb128 .LEHB98-.LFB1387
 3433 02b1 05       		.uleb128 .LEHE98-.LEHB98
 3434 02b2 00       		.uleb128 0
 3435 02b3 00       		.uleb128 0
 3436 02b4 E105     		.uleb128 .LEHB99-.LFB1387
 3437 02b6 05       		.uleb128 .LEHE99-.LEHB99
 3438 02b7 00       		.uleb128 0
 3439 02b8 00       		.uleb128 0
 3440              	.LLSDACSE1387:
 3441 02b9 03       		.byte	0x3
 3442 02ba 00       		.byte	0
 3443 02bb 02       		.byte	0x2
 3444 02bc 7D       		.byte	0x7d
 3445 02bd 01       		.byte	0x1
 3446 02be 7D       		.byte	0x7d
 3447 02bf 00       		.byte	0
 3448 02c0 7D       		.byte	0x7d
 3449 02c1 000000   		.align 4
 3450 02c4 00000000 		.long	0
 3451              	
 3452 02c8 00000000 		.long	_ZTISt9exception
 3453 02cc 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3454              	.LLSDATT1387:
 3455              		.text
 3457              		.section	.rodata
 3458              	.LC26:
 3459 049c 41204669 		.string	"A File"
 3459      6C6500
 3460              	.LC27:
 3461 04a3 41205465 		.string	"A Test"
 3461      737400
 3462              	.LC28:
 3463 04aa 41204661 		.string	"A Failure"
 3463      696C7572 
 3463      6500
 3464 04b4 00000000 		.align 8
 3465              	.LC29:
 3466 04b8 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" tim
 3466      6C207665 
 3466      7273696F 
 3466      6E3D2231 
 3466      2E30223F 
 3467              		.text
 3468              		.align 2
 3470              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv:
 3471              	.LFB1391:
  97:TestXmlTestReporter.cpp **** {
 3472              		.loc 3 97 0 is_stmt 1
 3473              		.cfi_startproc
 3474              		.cfi_personality 0x3,__gxx_personality_v0
 3475              		.cfi_lsda 0x3,.LLSDA1391
 3476 19d2 55       		pushq	%rbp
 3477              		.cfi_def_cfa_offset 16
 3478              		.cfi_offset 6, -16
 3479 19d3 4889E5   		movq	%rsp, %rbp
 3480              		.cfi_def_cfa_register 6
 3481 19d6 53       		pushq	%rbx
 3482 19d7 4881EC98 		subq	$152, %rsp
 3482      000000
 3483              		.cfi_offset 3, -24
 3484 19de 4889BD68 		movq	%rdi, -152(%rbp)
 3484      FFFFFF
 3485              		.loc 3 97 0
 3486 19e5 64488B04 		movq	%fs:40, %rax
 3486      25280000 
 3486      00
 3487 19ee 488945E8 		movq	%rax, -24(%rbp)
 3488 19f2 31C0     		xorl	%eax, %eax
  98:TestXmlTestReporter.cpp ****     TestDetails const details("A Test", "suite", "A File", 4321);
 3489              		.loc 3 98 0
 3490 19f4 488D4580 		leaq	-128(%rbp), %rax
 3491 19f8 41B8E110 		movl	$4321, %r8d
 3491      0000
 3492 19fe B9000000 		movl	$.LC26, %ecx
 3492      00
 3493 1a03 BA000000 		movl	$.LC7, %edx
 3493      00
 3494 1a08 BE000000 		movl	$.LC27, %esi
 3494      00
 3495 1a0d 4889C7   		movq	%rax, %rdi
 3496              	.LEHB100:
 3497 1a10 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3497      00
  99:TestXmlTestReporter.cpp **** 
 100:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 3498              		.loc 3 100 0
 3499 1a15 488B8568 		movq	-152(%rbp), %rax
 3499      FFFFFF
 3500 1a1c 488D9078 		leaq	376(%rax), %rdx
 3500      010000
 3501 1a23 488D4580 		leaq	-128(%rbp), %rax
 3502 1a27 4889C6   		movq	%rax, %rsi
 3503 1a2a 4889D7   		movq	%rdx, %rdi
 3504 1a2d E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 3504      00
 101:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "A Failure");
 3505              		.loc 3 101 0
 3506 1a32 488B8568 		movq	-152(%rbp), %rax
 3506      FFFFFF
 3507 1a39 488D8878 		leaq	376(%rax), %rcx
 3507      010000
 3508 1a40 488D4580 		leaq	-128(%rbp), %rax
 3509 1a44 BA000000 		movl	$.LC28, %edx
 3509      00
 3510 1a49 4889C6   		movq	%rax, %rsi
 3511 1a4c 4889CF   		movq	%rcx, %rdi
 3512 1a4f E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3512      00
 102:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 0.1f);
 3513              		.loc 3 102 0
 3514 1a54 488B8568 		movq	-152(%rbp), %rax
 3514      FFFFFF
 3515 1a5b 48057801 		addq	$376, %rax
 3515      0000
 3516 1a61 F30F1005 		movss	.LC10(%rip), %xmm0
 3516      00000000 
 3517 1a69 B9010000 		movl	$1, %ecx
 3517      00
 3518 1a6e BA010000 		movl	$1, %edx
 3518      00
 3519 1a73 BE010000 		movl	$1, %esi
 3519      00
 3520 1a78 4889C7   		movq	%rax, %rdi
 3521 1a7b E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 3521      00
 3522              	.LEHE100:
 103:TestXmlTestReporter.cpp **** 
 104:TestXmlTestReporter.cpp ****     const char *expected =
 105:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 106:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" time=\"0.1\">"
 107:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"A Test\" time=\"0\">"
 108:TestXmlTestReporter.cpp ****         "<failure message=\"A File(4321) : A Failure\"/>"
 109:TestXmlTestReporter.cpp ****         "</test>"
 110:TestXmlTestReporter.cpp ****         "</unittest-results>";
 3523              		.loc 3 110 0
 3524 1a80 48C78578 		movq	$.LC29, -136(%rbp)
 3524      FFFFFF00 
 3524      000000
 3525              	.LEHB101:
 111:TestXmlTestReporter.cpp **** 
 112:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 3526              		.loc 3 112 0
 3527 1a8b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3527      00
 3528 1a90 488B08   		movq	(%rax), %rcx
 3529 1a93 488D45A0 		leaq	-96(%rbp), %rax
 3530 1a97 BA700000 		movl	$112, %edx
 3530      00
 3531 1a9c 4889CE   		movq	%rcx, %rsi
 3532 1a9f 4889C7   		movq	%rax, %rdi
 3533 1aa2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3533      00
 3534              		.loc 3 112 0 is_stmt 0 discriminator 2
 3535 1aa7 488B9568 		movq	-152(%rbp), %rdx
 3535      FFFFFF
 3536 1aae 488D45C0 		leaq	-64(%rbp), %rax
 3537 1ab2 4889D6   		movq	%rdx, %rsi
 3538 1ab5 4889C7   		movq	%rax, %rdi
 3539 1ab8 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 3539      00
 3540              	.LEHE101:
 3541              	.LEHB102:
 3542              		.loc 3 112 0 discriminator 4
 3543 1abd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3543      00
 3544 1ac2 488B00   		movq	(%rax), %rax
 3545 1ac5 488D4DA0 		leaq	-96(%rbp), %rcx
 3546 1ac9 488D55C0 		leaq	-64(%rbp), %rdx
 3547 1acd 488DB578 		leaq	-136(%rbp), %rsi
 3547      FFFFFF
 3548 1ad4 4889C7   		movq	%rax, %rdi
 3549 1ad7 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3549      00
 3550              	.LEHE102:
 3551              		.loc 3 112 0 discriminator 8
 3552 1adc 488D45C0 		leaq	-64(%rbp), %rax
 3553 1ae0 4889C7   		movq	%rax, %rdi
 3554              	.LEHB103:
 3555 1ae3 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 3555      00
 3556              	.LEHE103:
 113:TestXmlTestReporter.cpp **** }
 3557              		.loc 3 113 0 is_stmt 1
 3558 1ae8 EB6E     		jmp	.L182
 3559              	.L189:
 3560 1aea 4889C3   		movq	%rax, %rbx
 112:TestXmlTestReporter.cpp **** }
 3561              		.loc 3 112 0
 3562 1aed 488D45C0 		leaq	-64(%rbp), %rax
 3563 1af1 4889C7   		movq	%rax, %rdi
 3564 1af4 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 3564      00
 3565 1af9 4889D8   		movq	%rbx, %rax
 3566 1afc EB00     		jmp	.L184
 3567              	.L188:
 3568              	.L184:
 3569 1afe 4889C7   		movq	%rax, %rdi
 3570 1b01 E8000000 		call	__cxa_begin_catch
 3570      00
 3571              	.LEHB104:
 3572 1b06 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3572      00
 3573 1b0b 488B08   		movq	(%rax), %rcx
 3574 1b0e 488D45A0 		leaq	-96(%rbp), %rax
 3575 1b12 BA700000 		movl	$112, %edx
 3575      00
 3576 1b17 4889CE   		movq	%rcx, %rsi
 3577 1b1a 4889C7   		movq	%rax, %rdi
 3578 1b1d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3578      00
 112:TestXmlTestReporter.cpp **** }
 3579              		.loc 3 112 0 is_stmt 0 discriminator 14
 3580 1b22 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3580      00
 3581 1b27 488B00   		movq	(%rax), %rax
 3582 1b2a 488D4DA0 		leaq	-96(%rbp), %rcx
 3583 1b2e BA000000 		movl	$.LC12, %edx
 3583      00
 3584 1b33 4889CE   		movq	%rcx, %rsi
 3585 1b36 4889C7   		movq	%rax, %rdi
 3586 1b39 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3586      00
 3587              	.LEHE104:
 3588              	.LEHB105:
 112:TestXmlTestReporter.cpp **** }
 3589              		.loc 3 112 0 discriminator 18
 3590 1b3e E8000000 		call	__cxa_end_catch
 3590      00
 3591              	.LEHE105:
 3592              		.loc 3 113 0 is_stmt 1 discriminator 18
 3593 1b43 EB13     		jmp	.L182
 3594              	.L190:
 3595 1b45 4889C3   		movq	%rax, %rbx
 112:TestXmlTestReporter.cpp **** }
 3596              		.loc 3 112 0
 3597 1b48 E8000000 		call	__cxa_end_catch
 3597      00
 3598 1b4d 4889D8   		movq	%rbx, %rax
 3599 1b50 4889C7   		movq	%rax, %rdi
 3600              	.LEHB106:
 3601 1b53 E8000000 		call	_Unwind_Resume
 3601      00
 3602              	.LEHE106:
 3603              	.L182:
 3604              		.loc 3 113 0
 3605 1b58 488B45E8 		movq	-24(%rbp), %rax
 3606 1b5c 64483304 		xorq	%fs:40, %rax
 3606      25280000 
 3606      00
 3607 1b65 7405     		je	.L187
 3608 1b67 E8000000 		call	__stack_chk_fail
 3608      00
 3609              	.L187:
 3610 1b6c 4881C498 		addq	$152, %rsp
 3610      000000
 3611 1b73 5B       		popq	%rbx
 3612 1b74 5D       		popq	%rbp
 3613              		.cfi_def_cfa 7, 8
 3614 1b75 C3       		ret
 3615              		.cfi_endproc
 3616              	.LFE1391:
 3617              		.section	.gcc_except_table
 3618              		.align 4
 3619              	.LLSDA1391:
 3620 02d0 FF       		.byte	0xff
 3621 02d1 03       		.byte	0x3
 3622 02d2 31       		.uleb128 .LLSDATT1391-.LLSDATTD1391
 3623              	.LLSDATTD1391:
 3624 02d3 01       		.byte	0x1
 3625 02d4 26       		.uleb128 .LLSDACSE1391-.LLSDACSB1391
 3626              	.LLSDACSB1391:
 3627 02d5 3E       		.uleb128 .LEHB100-.LFB1391
 3628 02d6 70       		.uleb128 .LEHE100-.LEHB100
 3629 02d7 00       		.uleb128 0
 3630 02d8 00       		.uleb128 0
 3631 02d9 B901     		.uleb128 .LEHB101-.LFB1391
 3632 02db 32       		.uleb128 .LEHE101-.LEHB101
 3633 02dc AC02     		.uleb128 .L188-.LFB1391
 3634 02de 01       		.uleb128 0x1
 3635 02df EB01     		.uleb128 .LEHB102-.LFB1391
 3636 02e1 1F       		.uleb128 .LEHE102-.LEHB102
 3637 02e2 9802     		.uleb128 .L189-.LFB1391
 3638 02e4 03       		.uleb128 0x3
 3639 02e5 9102     		.uleb128 .LEHB103-.LFB1391
 3640 02e7 05       		.uleb128 .LEHE103-.LEHB103
 3641 02e8 AC02     		.uleb128 .L188-.LFB1391
 3642 02ea 01       		.uleb128 0x1
 3643 02eb B402     		.uleb128 .LEHB104-.LFB1391
 3644 02ed 38       		.uleb128 .LEHE104-.LEHB104
 3645 02ee F302     		.uleb128 .L190-.LFB1391
 3646 02f0 00       		.uleb128 0
 3647 02f1 EC02     		.uleb128 .LEHB105-.LFB1391
 3648 02f3 05       		.uleb128 .LEHE105-.LEHB105
 3649 02f4 00       		.uleb128 0
 3650 02f5 00       		.uleb128 0
 3651 02f6 8103     		.uleb128 .LEHB106-.LFB1391
 3652 02f8 05       		.uleb128 .LEHE106-.LEHB106
 3653 02f9 00       		.uleb128 0
 3654 02fa 00       		.uleb128 0
 3655              	.LLSDACSE1391:
 3656 02fb 01       		.byte	0x1
 3657 02fc 00       		.byte	0
 3658 02fd 00       		.byte	0
 3659 02fe 7D       		.byte	0x7d
 3660 02ff 00       		.align 4
 3661 0300 00000000 		.long	0
 3662              	
 3663              	.LLSDATT1391:
 3664              		.text
 3666              		.align 2
 3668              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC2ERKN8UnitTest11TestDetai
 3669              	.LFB1393:
 114:TestXmlTestReporter.cpp **** 
 115:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, FailureMessageIsXMLEscaped)
 3670              		.loc 3 115 0
 3671              		.cfi_startproc
 3672 1b76 55       		pushq	%rbp
 3673              		.cfi_def_cfa_offset 16
 3674              		.cfi_offset 6, -16
 3675 1b77 4889E5   		movq	%rsp, %rbp
 3676              		.cfi_def_cfa_register 6
 3677 1b7a 4883EC10 		subq	$16, %rsp
 3678 1b7e 48897DF8 		movq	%rdi, -8(%rbp)
 3679 1b82 488975F0 		movq	%rsi, -16(%rbp)
 3680              	.LBB63:
 3681              		.loc 3 115 0
 3682 1b86 488B45F8 		movq	-8(%rbp), %rax
 3683 1b8a 4889C7   		movq	%rax, %rdi
 3684 1b8d E86EE4FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 3684      FF
 3685 1b92 488B45F8 		movq	-8(%rbp), %rax
 3686 1b96 488B55F0 		movq	-16(%rbp), %rdx
 3687 1b9a 488990A0 		movq	%rdx, 416(%rax)
 3687      010000
 3688              	.LBE63:
 3689 1ba1 90       		nop
 3690 1ba2 C9       		leave
 3691              		.cfi_def_cfa 7, 8
 3692 1ba3 C3       		ret
 3693              		.cfi_endproc
 3694              	.LFE1393:
 3696              		.set	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11Tes
 3697              		.section	.rodata
 3698              	.LC30:
 3699 0584 4661696C 		.string	"FailureMessageIsXMLEscaped"
 3699      7572654D 
 3699      65737361 
 3699      67654973 
 3699      584D4C45 
 3700              		.text
 3701              		.align 2
 3703              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC2Ev:
 3704              	.LFB1396:
 3705              		.loc 3 115 0
 3706              		.cfi_startproc
 3707 1ba4 55       		pushq	%rbp
 3708              		.cfi_def_cfa_offset 16
 3709              		.cfi_offset 6, -16
 3710 1ba5 4889E5   		movq	%rsp, %rbp
 3711              		.cfi_def_cfa_register 6
 3712 1ba8 4883EC10 		subq	$16, %rsp
 3713 1bac 48897DF8 		movq	%rdi, -8(%rbp)
 3714              	.LBB64:
 3715              		.loc 3 115 0
 3716 1bb0 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3716      00
 3717 1bb5 4889C2   		movq	%rax, %rdx
 3718 1bb8 488B45F8 		movq	-8(%rbp), %rax
 3719 1bbc 41B87300 		movl	$115, %r8d
 3719      0000
 3720 1bc2 B9000000 		movl	$.LC1, %ecx
 3720      00
 3721 1bc7 BE000000 		movl	$.LC30, %esi
 3721      00
 3722 1bcc 4889C7   		movq	%rax, %rdi
 3723 1bcf E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3723      00
 3724 1bd4 BA000000 		movl	$_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE+16, %edx
 3724      00
 3725 1bd9 488B45F8 		movq	-8(%rbp), %rax
 3726 1bdd 488910   		movq	%rdx, (%rax)
 3727              	.LBE64:
 3728 1be0 90       		nop
 3729 1be1 C9       		leave
 3730              		.cfi_def_cfa 7, 8
 3731 1be2 C3       		ret
 3732              		.cfi_endproc
 3733              	.LFE1396:
 3735              		.set	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev,_ZN12_GLOBAL__N_1
 3736              		.local	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE
 3737              		.comm	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE,56,32
 3738              		.local	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 3739              		.comm	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE,1,1
 3740 1be3 90       		.align 2
 3742              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD2Ev:
 3743              	.LFB1400:
 3744              		.loc 3 115 0
 3745              		.cfi_startproc
 3746 1be4 55       		pushq	%rbp
 3747              		.cfi_def_cfa_offset 16
 3748              		.cfi_offset 6, -16
 3749 1be5 4889E5   		movq	%rsp, %rbp
 3750              		.cfi_def_cfa_register 6
 3751 1be8 4883EC10 		subq	$16, %rsp
 3752 1bec 48897DF8 		movq	%rdi, -8(%rbp)
 3753              	.LBB65:
 3754              		.loc 3 115 0
 3755 1bf0 488B45F8 		movq	-8(%rbp), %rax
 3756 1bf4 4889C7   		movq	%rax, %rdi
 3757 1bf7 E860E4FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 3757      FF
 3758              	.LBE65:
 3759 1bfc 90       		nop
 3760 1bfd C9       		leave
 3761              		.cfi_def_cfa 7, 8
 3762 1bfe C3       		ret
 3763              		.cfi_endproc
 3764              	.LFE1400:
 3766              		.set	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev,_ZN12_GLOBAL__N
 3767 1bff 90       		.align 2
 3769              	_ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv:
 3770              	.LFB1398:
 3771              		.loc 3 115 0
 3772              		.cfi_startproc
 3773              		.cfi_personality 0x3,__gxx_personality_v0
 3774              		.cfi_lsda 0x3,.LLSDA1398
 3775 1c00 55       		pushq	%rbp
 3776              		.cfi_def_cfa_offset 16
 3777              		.cfi_offset 6, -16
 3778 1c01 4889E5   		movq	%rsp, %rbp
 3779              		.cfi_def_cfa_register 6
 3780 1c04 4154     		pushq	%r12
 3781 1c06 53       		pushq	%rbx
 3782 1c07 4881EC00 		subq	$512, %rsp
 3782      020000
 3783              		.cfi_offset 12, -24
 3784              		.cfi_offset 3, -32
 3785 1c0e 4889BDF8 		movq	%rdi, -520(%rbp)
 3785      FDFFFF
 3786              		.loc 3 115 0
 3787 1c15 64488B04 		movq	%fs:40, %rax
 3787      25280000 
 3787      00
 3788 1c1e 488945E8 		movq	%rax, -24(%rbp)
 3789 1c22 31C0     		xorl	%eax, %eax
 3790 1c24 C6850FFE 		movb	$0, -497(%rbp)
 3790      FFFF00
 3791              	.LBB66:
 3792 1c2b 488B85F8 		movq	-520(%rbp), %rax
 3792      FDFFFF
 3793 1c32 488D5008 		leaq	8(%rax), %rdx
 3794 1c36 488D8540 		leaq	-448(%rbp), %rax
 3794      FEFFFF
 3795 1c3d 4889D6   		movq	%rdx, %rsi
 3796 1c40 4889C7   		movq	%rax, %rdi
 3797              	.LEHB107:
 3798 1c43 E82EFFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11Tes
 3798      FF
 3799              	.LEHE107:
 3800              		.loc 3 115 0 is_stmt 0 discriminator 1
 3801 1c48 C6850FFE 		movb	$1, -497(%rbp)
 3801      FFFF01
 3802 1c4f 488B85F8 		movq	-520(%rbp), %rax
 3802      FDFFFF
 3803 1c56 488D5008 		leaq	8(%rax), %rdx
 3804 1c5a 488D8540 		leaq	-448(%rbp), %rax
 3804      FEFFFF
 3805 1c61 4889D6   		movq	%rdx, %rsi
 3806 1c64 4889C7   		movq	%rax, %rdi
 3807              	.LEHB108:
 3808 1c67 E88F1D00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHe
 3808      00
 3809              	.LEHE108:
 3810              		.loc 3 115 0 discriminator 3
 3811 1c6c 488D8540 		leaq	-448(%rbp), %rax
 3811      FEFFFF
 3812 1c73 4889C7   		movq	%rax, %rdi
 3813              	.LEHB109:
 3814 1c76 E869FFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
 3814      FF
 3815              	.LEHE109:
 3816              	.LBE66:
 3817              		.loc 3 115 0
 3818 1c7b E9660200 		jmp	.L194
 3818      00
 3819              	.L209:
 3820 1c80 4989C4   		movq	%rax, %r12
 3821 1c83 4889D3   		movq	%rdx, %rbx
 3822              	.LBB67:
 3823 1c86 488D8540 		leaq	-448(%rbp), %rax
 3823      FEFFFF
 3824 1c8d 4889C7   		movq	%rax, %rdi
 3825 1c90 E84FFFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
 3825      FF
 3826 1c95 4C89E0   		movq	%r12, %rax
 3827 1c98 4889DA   		movq	%rbx, %rdx
 3828 1c9b EB00     		jmp	.L196
 3829              	.L208:
 3830              	.L196:
 3831 1c9d 4883FA01 		cmpq	$1, %rdx
 3832 1ca1 740F     		je	.L198
 3833 1ca3 4883FA02 		cmpq	$2, %rdx
 3834 1ca7 0F84A700 		je	.L199
 3834      0000
 3835 1cad E94B0100 		jmp	.L214
 3835      00
 3836              	.L198:
 3837              	.LBE67:
 3838              	.LBB68:
 3839 1cb2 4889C7   		movq	%rax, %rdi
 3840 1cb5 E8000000 		call	__cxa_begin_catch
 3840      00
 3841 1cba 48898510 		movq	%rax, -496(%rbp)
 3841      FEFFFF
 3842 1cc1 488B8510 		movq	-496(%rbp), %rax
 3842      FEFFFF
 3843 1cc8 488B00   		movq	(%rax), %rax
 3844 1ccb 4883C010 		addq	$16, %rax
 3845 1ccf 488B00   		movq	(%rax), %rax
 3846 1cd2 488B9510 		movq	-496(%rbp), %rdx
 3846      FEFFFF
 3847 1cd9 4889D7   		movq	%rdx, %rdi
 3848 1cdc FFD0     		call	*%rax
 3849 1cde 4889C3   		movq	%rax, %rbx
 3850 1ce1 488B8510 		movq	-496(%rbp), %rax
 3850      FEFFFF
 3851 1ce8 4889C7   		movq	%rax, %rdi
 3852              	.LEHB110:
 3853 1ceb E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3853      00
 3854 1cf0 4189C4   		movl	%eax, %r12d
 3855 1cf3 488B8510 		movq	-496(%rbp), %rax
 3855      FEFFFF
 3856 1cfa 4889C7   		movq	%rax, %rdi
 3857 1cfd E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3857      00
 3858              		.loc 3 115 0 discriminator 5
 3859 1d02 4889C1   		movq	%rax, %rcx
 3860 1d05 488B85F8 		movq	-520(%rbp), %rax
 3860      FDFFFF
 3861 1d0c 488B5008 		movq	8(%rax), %rdx
 3862 1d10 488B85F8 		movq	-520(%rbp), %rax
 3862      FDFFFF
 3863 1d17 488B7010 		movq	16(%rax), %rsi
 3864 1d1b 488D8520 		leaq	-480(%rbp), %rax
 3864      FEFFFF
 3865 1d22 4589E0   		movl	%r12d, %r8d
 3866 1d25 4889C7   		movq	%rax, %rdi
 3867 1d28 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3867      00
 3868              		.loc 3 115 0 discriminator 9
 3869 1d2d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3869      00
 3870 1d32 488B00   		movq	(%rax), %rax
 3871 1d35 488D8D20 		leaq	-480(%rbp), %rcx
 3871      FEFFFF
 3872 1d3c 4889DA   		movq	%rbx, %rdx
 3873 1d3f 4889CE   		movq	%rcx, %rsi
 3874 1d42 4889C7   		movq	%rax, %rdi
 3875 1d45 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3875      00
 3876              	.LEHE110:
 3877              		.loc 3 115 0 discriminator 13
 3878 1d4a E8000000 		call	__cxa_end_catch
 3878      00
 3879              	.LBE68:
 3880 1d4f E9920100 		jmp	.L194
 3880      00
 3881              	.L199:
 3882              	.LBB69:
 3883              		.loc 3 115 0
 3884 1d54 4889C7   		movq	%rax, %rdi
 3885 1d57 E8000000 		call	__cxa_begin_catch
 3885      00
 3886 1d5c 48898518 		movq	%rax, -488(%rbp)
 3886      FEFFFF
 3887              	.LBB70:
 3888 1d63 488D8540 		leaq	-448(%rbp), %rax
 3888      FEFFFF
 3889 1d6a 4889C7   		movq	%rax, %rdi
 3890              	.LEHB111:
 3891 1d6d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3891      00
 3892              	.LEHE111:
 3893              		.loc 3 115 0 discriminator 15
 3894 1d72 488B8518 		movq	-488(%rbp), %rax
 3894      FEFFFF
 3895 1d79 488B00   		movq	(%rax), %rax
 3896 1d7c 4883C010 		addq	$16, %rax
 3897 1d80 488B00   		movq	(%rax), %rax
 3898 1d83 488B9518 		movq	-488(%rbp), %rdx
 3898      FEFFFF
 3899 1d8a 4889D7   		movq	%rdx, %rdi
 3900 1d8d FFD0     		call	*%rax
 3901 1d8f 4889C3   		movq	%rax, %rbx
 3902 1d92 488D8540 		leaq	-448(%rbp), %rax
 3902      FEFFFF
 3903 1d99 BE000000 		movl	$.LC3, %esi
 3903      00
 3904 1d9e 4889C7   		movq	%rax, %rdi
 3905              	.LEHB112:
 3906 1da1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3906      00
 3907 1da6 4889DE   		movq	%rbx, %rsi
 3908 1da9 4889C7   		movq	%rax, %rdi
 3909 1dac E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3909      00
 3910              		.loc 3 115 0 discriminator 19
 3911 1db1 488D8540 		leaq	-448(%rbp), %rax
 3911      FEFFFF
 3912 1db8 4889C7   		movq	%rax, %rdi
 3913 1dbb E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3913      00
 3914 1dc0 4989C4   		movq	%rax, %r12
 3915 1dc3 488B85F8 		movq	-520(%rbp), %rax
 3915      FDFFFF
 3916 1dca 488D5808 		leaq	8(%rax), %rbx
 3917 1dce E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3917      00
 3918              		.loc 3 115 0 discriminator 21
 3919 1dd3 488B00   		movq	(%rax), %rax
 3920 1dd6 4C89E2   		movq	%r12, %rdx
 3921 1dd9 4889DE   		movq	%rbx, %rsi
 3922 1ddc 4889C7   		movq	%rax, %rdi
 3923 1ddf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3923      00
 3924              	.LEHE112:
 3925              		.loc 3 115 0 discriminator 25
 3926 1de4 488D8540 		leaq	-448(%rbp), %rax
 3926      FEFFFF
 3927 1deb 4889C7   		movq	%rax, %rdi
 3928              	.LEHB113:
 3929 1dee E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3929      00
 3930              	.LEHE113:
 3931              	.LBE70:
 3932              		.loc 3 115 0 discriminator 26
 3933 1df3 E8000000 		call	__cxa_end_catch
 3933      00
 3934              	.LBE69:
 3935 1df8 E9E90000 		jmp	.L194
 3935      00
 3936              	.L214:
 3937              		.loc 3 115 0
 3938 1dfd 4889C7   		movq	%rax, %rdi
 3939 1e00 E8000000 		call	__cxa_begin_catch
 3939      00
 3940 1e05 80BD0FFE 		cmpb	$0, -497(%rbp)
 3940      FFFF00
 3941 1e0c 7443     		je	.L201
 3942              		.loc 3 115 0 discriminator 28
 3943 1e0e 488B85F8 		movq	-520(%rbp), %rax
 3943      FDFFFF
 3944 1e15 488D4808 		leaq	8(%rax), %rcx
 3945 1e19 488D8520 		leaq	-480(%rbp), %rax
 3945      FEFFFF
 3946 1e20 BA730000 		movl	$115, %edx
 3946      00
 3947 1e25 4889CE   		movq	%rcx, %rsi
 3948 1e28 4889C7   		movq	%rax, %rdi
 3949              	.LEHB114:
 3950 1e2b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3950      00
 3951              		.loc 3 115 0 discriminator 31
 3952 1e30 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3952      00
 3953 1e35 488B00   		movq	(%rax), %rax
 3954 1e38 488D8D20 		leaq	-480(%rbp), %rcx
 3954      FEFFFF
 3955 1e3f BA000000 		movl	$.LC4, %edx
 3955      00
 3956 1e44 4889CE   		movq	%rcx, %rsi
 3957 1e47 4889C7   		movq	%rax, %rdi
 3958 1e4a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3958      00
 3959 1e4f EB41     		jmp	.L202
 3960              	.L201:
 3961              		.loc 3 115 0 discriminator 29
 3962 1e51 488B85F8 		movq	-520(%rbp), %rax
 3962      FDFFFF
 3963 1e58 488D4808 		leaq	8(%rax), %rcx
 3964 1e5c 488D8520 		leaq	-480(%rbp), %rax
 3964      FEFFFF
 3965 1e63 BA730000 		movl	$115, %edx
 3965      00
 3966 1e68 4889CE   		movq	%rcx, %rsi
 3967 1e6b 4889C7   		movq	%rax, %rdi
 3968 1e6e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3968      00
 3969              		.loc 3 115 0 discriminator 38
 3970 1e73 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3970      00
 3971 1e78 488B00   		movq	(%rax), %rax
 3972 1e7b 488D8D20 		leaq	-480(%rbp), %rcx
 3972      FEFFFF
 3973 1e82 BA000000 		movl	$.LC5, %edx
 3973      00
 3974 1e87 4889CE   		movq	%rcx, %rsi
 3975 1e8a 4889C7   		movq	%rax, %rdi
 3976 1e8d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3976      00
 3977              	.LEHE114:
 3978              	.L202:
 3979              	.LEHB115:
 3980              		.loc 3 115 0 discriminator 43
 3981 1e92 E8000000 		call	__cxa_end_catch
 3981      00
 3982 1e97 EB4D     		jmp	.L194
 3983              	.L210:
 3984 1e99 4889C3   		movq	%rax, %rbx
 3985              	.LBB72:
 3986              		.loc 3 115 0
 3987 1e9c E8000000 		call	__cxa_end_catch
 3987      00
 3988 1ea1 4889D8   		movq	%rbx, %rax
 3989 1ea4 4889C7   		movq	%rax, %rdi
 3990 1ea7 E8000000 		call	_Unwind_Resume
 3990      00
 3991              	.LEHE115:
 3992              	.L212:
 3993 1eac 4889C3   		movq	%rax, %rbx
 3994              	.LBE72:
 3995              	.LBB73:
 3996              	.LBB71:
 3997 1eaf 488D8540 		leaq	-448(%rbp), %rax
 3997      FEFFFF
 3998 1eb6 4889C7   		movq	%rax, %rdi
 3999 1eb9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3999      00
 4000 1ebe EB03     		jmp	.L205
 4001              	.L211:
 4002 1ec0 4889C3   		movq	%rax, %rbx
 4003              	.L205:
 4004              	.LBE71:
 4005 1ec3 E8000000 		call	__cxa_end_catch
 4005      00
 4006 1ec8 4889D8   		movq	%rbx, %rax
 4007 1ecb 4889C7   		movq	%rax, %rdi
 4008              	.LEHB116:
 4009 1ece E8000000 		call	_Unwind_Resume
 4009      00
 4010              	.LEHE116:
 4011              	.L213:
 4012 1ed3 4889C3   		movq	%rax, %rbx
 4013              	.LBE73:
 4014 1ed6 E8000000 		call	__cxa_end_catch
 4014      00
 4015 1edb 4889D8   		movq	%rbx, %rax
 4016 1ede 4889C7   		movq	%rax, %rdi
 4017              	.LEHB117:
 4018 1ee1 E8000000 		call	_Unwind_Resume
 4018      00
 4019              	.LEHE117:
 4020              	.L194:
 4021 1ee6 488B45E8 		movq	-24(%rbp), %rax
 4022 1eea 64483304 		xorq	%fs:40, %rax
 4022      25280000 
 4022      00
 4023 1ef3 7405     		je	.L207
 4024 1ef5 E8000000 		call	__stack_chk_fail
 4024      00
 4025              	.L207:
 4026 1efa 4881C400 		addq	$512, %rsp
 4026      020000
 4027 1f01 5B       		popq	%rbx
 4028 1f02 415C     		popq	%r12
 4029 1f04 5D       		popq	%rbp
 4030              		.cfi_def_cfa 7, 8
 4031 1f05 C3       		ret
 4032              		.cfi_endproc
 4033              	.LFE1398:
 4034              		.section	.gcc_except_table
 4035              		.align 4
 4036              	.LLSDA1398:
 4037 0304 FF       		.byte	0xff
 4038 0305 03       		.byte	0x3
 4039 0306 55       		.uleb128 .LLSDATT1398-.LLSDATTD1398
 4040              	.LLSDATTD1398:
 4041 0307 01       		.byte	0x1
 4042 0308 3C       		.uleb128 .LLSDACSE1398-.LLSDACSB1398
 4043              	.LLSDACSB1398:
 4044 0309 43       		.uleb128 .LEHB107-.LFB1398
 4045 030a 05       		.uleb128 .LEHE107-.LEHB107
 4046 030b 9D01     		.uleb128 .L208-.LFB1398
 4047 030d 05       		.uleb128 0x5
 4048 030e 67       		.uleb128 .LEHB108-.LFB1398
 4049 030f 05       		.uleb128 .LEHE108-.LEHB108
 4050 0310 8001     		.uleb128 .L209-.LFB1398
 4051 0312 07       		.uleb128 0x7
 4052 0313 76       		.uleb128 .LEHB109-.LFB1398
 4053 0314 05       		.uleb128 .LEHE109-.LEHB109
 4054 0315 9D01     		.uleb128 .L208-.LFB1398
 4055 0317 05       		.uleb128 0x5
 4056 0318 EB01     		.uleb128 .LEHB110-.LFB1398
 4057 031a 5F       		.uleb128 .LEHE110-.LEHB110
 4058 031b 9905     		.uleb128 .L210-.LFB1398
 4059 031d 00       		.uleb128 0
 4060 031e ED02     		.uleb128 .LEHB111-.LFB1398
 4061 0320 05       		.uleb128 .LEHE111-.LEHB111
 4062 0321 C005     		.uleb128 .L211-.LFB1398
 4063 0323 00       		.uleb128 0
 4064 0324 A103     		.uleb128 .LEHB112-.LFB1398
 4065 0326 43       		.uleb128 .LEHE112-.LEHB112
 4066 0327 AC05     		.uleb128 .L212-.LFB1398
 4067 0329 00       		.uleb128 0
 4068 032a EE03     		.uleb128 .LEHB113-.LFB1398
 4069 032c 05       		.uleb128 .LEHE113-.LEHB113
 4070 032d C005     		.uleb128 .L211-.LFB1398
 4071 032f 00       		.uleb128 0
 4072 0330 AB04     		.uleb128 .LEHB114-.LFB1398
 4073 0332 67       		.uleb128 .LEHE114-.LEHB114
 4074 0333 D305     		.uleb128 .L213-.LFB1398
 4075 0335 00       		.uleb128 0
 4076 0336 9205     		.uleb128 .LEHB115-.LFB1398
 4077 0338 1A       		.uleb128 .LEHE115-.LEHB115
 4078 0339 00       		.uleb128 0
 4079 033a 00       		.uleb128 0
 4080 033b CE05     		.uleb128 .LEHB116-.LFB1398
 4081 033d 05       		.uleb128 .LEHE116-.LEHB116
 4082 033e 00       		.uleb128 0
 4083 033f 00       		.uleb128 0
 4084 0340 E105     		.uleb128 .LEHB117-.LFB1398
 4085 0342 05       		.uleb128 .LEHE117-.LEHB117
 4086 0343 00       		.uleb128 0
 4087 0344 00       		.uleb128 0
 4088              	.LLSDACSE1398:
 4089 0345 03       		.byte	0x3
 4090 0346 00       		.byte	0
 4091 0347 02       		.byte	0x2
 4092 0348 7D       		.byte	0x7d
 4093 0349 01       		.byte	0x1
 4094 034a 7D       		.byte	0x7d
 4095 034b 00       		.byte	0
 4096 034c 7D       		.byte	0x7d
 4097 034d 000000   		.align 4
 4098 0350 00000000 		.long	0
 4099              	
 4100 0354 00000000 		.long	_ZTISt9exception
 4101 0358 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 4102              	.LLSDATT1398:
 4103              		.text
 4105              		.section	.rodata
 4106              	.LC31:
 4107 059f 2227263C 		.string	"\"'&<>"
 4107      3E00
 4108 05a5 000000   		.align 8
 4109              	.LC32:
 4110 05a8 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" tim
 4110      6C207665 
 4110      7273696F 
 4110      6E3D2231 
 4110      2E30223F 
 4111              		.text
 4112              		.align 2
 4114              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv:
 4115              	.LFB1402:
 116:TestXmlTestReporter.cpp **** {
 4116              		.loc 3 116 0 is_stmt 1
 4117              		.cfi_startproc
 4118              		.cfi_personality 0x3,__gxx_personality_v0
 4119              		.cfi_lsda 0x3,.LLSDA1402
 4120 1f06 55       		pushq	%rbp
 4121              		.cfi_def_cfa_offset 16
 4122              		.cfi_offset 6, -16
 4123 1f07 4889E5   		movq	%rsp, %rbp
 4124              		.cfi_def_cfa_register 6
 4125 1f0a 53       		pushq	%rbx
 4126 1f0b 4881EC98 		subq	$152, %rsp
 4126      000000
 4127              		.cfi_offset 3, -24
 4128 1f12 4889BD68 		movq	%rdi, -152(%rbp)
 4128      FFFFFF
 4129              		.loc 3 116 0
 4130 1f19 64488B04 		movq	%fs:40, %rax
 4130      25280000 
 4130      00
 4131 1f22 488945E8 		movq	%rax, -24(%rbp)
 4132 1f26 31C0     		xorl	%eax, %eax
 117:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "suite", "filename.h", 4321);
 4133              		.loc 3 117 0
 4134 1f28 488D4580 		leaq	-128(%rbp), %rax
 4135 1f2c 41B8E110 		movl	$4321, %r8d
 4135      0000
 4136 1f32 B9000000 		movl	$.LC6, %ecx
 4136      00
 4137 1f37 BA000000 		movl	$.LC7, %edx
 4137      00
 4138 1f3c BE000000 		movl	$.LC8, %esi
 4138      00
 4139 1f41 4889C7   		movq	%rax, %rdi
 4140              	.LEHB118:
 4141 1f44 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4141      00
 118:TestXmlTestReporter.cpp **** 
 119:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 4142              		.loc 3 119 0
 4143 1f49 488B8568 		movq	-152(%rbp), %rax
 4143      FFFFFF
 4144 1f50 488D9078 		leaq	376(%rax), %rdx
 4144      010000
 4145 1f57 488D4580 		leaq	-128(%rbp), %rax
 4146 1f5b 4889C6   		movq	%rax, %rsi
 4147 1f5e 4889D7   		movq	%rdx, %rdi
 4148 1f61 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4148      00
 120:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "\"\'&<>");
 4149              		.loc 3 120 0
 4150 1f66 488B8568 		movq	-152(%rbp), %rax
 4150      FFFFFF
 4151 1f6d 488D8878 		leaq	376(%rax), %rcx
 4151      010000
 4152 1f74 488D4580 		leaq	-128(%rbp), %rax
 4153 1f78 BA000000 		movl	$.LC31, %edx
 4153      00
 4154 1f7d 4889C6   		movq	%rax, %rsi
 4155 1f80 4889CF   		movq	%rcx, %rdi
 4156 1f83 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 4156      00
 121:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 0.1f);
 4157              		.loc 3 121 0
 4158 1f88 488B8568 		movq	-152(%rbp), %rax
 4158      FFFFFF
 4159 1f8f 488D9078 		leaq	376(%rax), %rdx
 4159      010000
 4160 1f96 488D4580 		leaq	-128(%rbp), %rax
 4161 1f9a F30F1005 		movss	.LC10(%rip), %xmm0
 4161      00000000 
 4162 1fa2 4889C6   		movq	%rax, %rsi
 4163 1fa5 4889D7   		movq	%rdx, %rdi
 4164 1fa8 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 4164      00
 122:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 0.1f);
 4165              		.loc 3 122 0
 4166 1fad 488B8568 		movq	-152(%rbp), %rax
 4166      FFFFFF
 4167 1fb4 48057801 		addq	$376, %rax
 4167      0000
 4168 1fba F30F1005 		movss	.LC10(%rip), %xmm0
 4168      00000000 
 4169 1fc2 B9010000 		movl	$1, %ecx
 4169      00
 4170 1fc7 BA010000 		movl	$1, %edx
 4170      00
 4171 1fcc BE010000 		movl	$1, %esi
 4171      00
 4172 1fd1 4889C7   		movq	%rax, %rdi
 4173 1fd4 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 4173      00
 4174              	.LEHE118:
 123:TestXmlTestReporter.cpp **** 
 124:TestXmlTestReporter.cpp ****     char const* expected =
 125:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 126:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" time=\"0.1\">"
 127:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"TestName\" time=\"0.1\">"
 128:TestXmlTestReporter.cpp ****         "<failure message=\"filename.h(4321) : &quot;&apos;&amp;&lt;&gt;\"/>"
 129:TestXmlTestReporter.cpp ****         "</test>"
 130:TestXmlTestReporter.cpp ****         "</unittest-results>";
 4175              		.loc 3 130 0
 4176 1fd9 48C78578 		movq	$.LC32, -136(%rbp)
 4176      FFFFFF00 
 4176      000000
 4177              	.LEHB119:
 131:TestXmlTestReporter.cpp **** 
 132:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 4178              		.loc 3 132 0
 4179 1fe4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4179      00
 4180 1fe9 488B08   		movq	(%rax), %rcx
 4181 1fec 488D45A0 		leaq	-96(%rbp), %rax
 4182 1ff0 BA840000 		movl	$132, %edx
 4182      00
 4183 1ff5 4889CE   		movq	%rcx, %rsi
 4184 1ff8 4889C7   		movq	%rax, %rdi
 4185 1ffb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4185      00
 4186              		.loc 3 132 0 is_stmt 0 discriminator 2
 4187 2000 488B9568 		movq	-152(%rbp), %rdx
 4187      FFFFFF
 4188 2007 488D45C0 		leaq	-64(%rbp), %rax
 4189 200b 4889D6   		movq	%rdx, %rsi
 4190 200e 4889C7   		movq	%rax, %rdi
 4191 2011 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 4191      00
 4192              	.LEHE119:
 4193              	.LEHB120:
 4194              		.loc 3 132 0 discriminator 4
 4195 2016 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4195      00
 4196 201b 488B00   		movq	(%rax), %rax
 4197 201e 488D4DA0 		leaq	-96(%rbp), %rcx
 4198 2022 488D55C0 		leaq	-64(%rbp), %rdx
 4199 2026 488DB578 		leaq	-136(%rbp), %rsi
 4199      FFFFFF
 4200 202d 4889C7   		movq	%rax, %rdi
 4201 2030 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4201      00
 4202              	.LEHE120:
 4203              		.loc 3 132 0 discriminator 8
 4204 2035 488D45C0 		leaq	-64(%rbp), %rax
 4205 2039 4889C7   		movq	%rax, %rdi
 4206              	.LEHB121:
 4207 203c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 4207      00
 4208              	.LEHE121:
 133:TestXmlTestReporter.cpp **** }
 4209              		.loc 3 133 0 is_stmt 1
 4210 2041 EB6E     		jmp	.L215
 4211              	.L222:
 4212 2043 4889C3   		movq	%rax, %rbx
 132:TestXmlTestReporter.cpp **** }
 4213              		.loc 3 132 0
 4214 2046 488D45C0 		leaq	-64(%rbp), %rax
 4215 204a 4889C7   		movq	%rax, %rdi
 4216 204d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 4216      00
 4217 2052 4889D8   		movq	%rbx, %rax
 4218 2055 EB00     		jmp	.L217
 4219              	.L221:
 4220              	.L217:
 4221 2057 4889C7   		movq	%rax, %rdi
 4222 205a E8000000 		call	__cxa_begin_catch
 4222      00
 4223              	.LEHB122:
 4224 205f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4224      00
 4225 2064 488B08   		movq	(%rax), %rcx
 4226 2067 488D45A0 		leaq	-96(%rbp), %rax
 4227 206b BA840000 		movl	$132, %edx
 4227      00
 4228 2070 4889CE   		movq	%rcx, %rsi
 4229 2073 4889C7   		movq	%rax, %rdi
 4230 2076 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4230      00
 132:TestXmlTestReporter.cpp **** }
 4231              		.loc 3 132 0 is_stmt 0 discriminator 14
 4232 207b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4232      00
 4233 2080 488B00   		movq	(%rax), %rax
 4234 2083 488D4DA0 		leaq	-96(%rbp), %rcx
 4235 2087 BA000000 		movl	$.LC12, %edx
 4235      00
 4236 208c 4889CE   		movq	%rcx, %rsi
 4237 208f 4889C7   		movq	%rax, %rdi
 4238 2092 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4238      00
 4239              	.LEHE122:
 4240              	.LEHB123:
 132:TestXmlTestReporter.cpp **** }
 4241              		.loc 3 132 0 discriminator 18
 4242 2097 E8000000 		call	__cxa_end_catch
 4242      00
 4243              	.LEHE123:
 4244              		.loc 3 133 0 is_stmt 1 discriminator 18
 4245 209c EB13     		jmp	.L215
 4246              	.L223:
 4247 209e 4889C3   		movq	%rax, %rbx
 132:TestXmlTestReporter.cpp **** }
 4248              		.loc 3 132 0
 4249 20a1 E8000000 		call	__cxa_end_catch
 4249      00
 4250 20a6 4889D8   		movq	%rbx, %rax
 4251 20a9 4889C7   		movq	%rax, %rdi
 4252              	.LEHB124:
 4253 20ac E8000000 		call	_Unwind_Resume
 4253      00
 4254              	.LEHE124:
 4255              	.L215:
 4256              		.loc 3 133 0
 4257 20b1 488B45E8 		movq	-24(%rbp), %rax
 4258 20b5 64483304 		xorq	%fs:40, %rax
 4258      25280000 
 4258      00
 4259 20be 7405     		je	.L220
 4260 20c0 E8000000 		call	__stack_chk_fail
 4260      00
 4261              	.L220:
 4262 20c5 4881C498 		addq	$152, %rsp
 4262      000000
 4263 20cc 5B       		popq	%rbx
 4264 20cd 5D       		popq	%rbp
 4265              		.cfi_def_cfa 7, 8
 4266 20ce C3       		ret
 4267              		.cfi_endproc
 4268              	.LFE1402:
 4269              		.section	.gcc_except_table
 4270              		.align 4
 4271              	.LLSDA1402:
 4272 035c FF       		.byte	0xff
 4273 035d 03       		.byte	0x3
 4274 035e 31       		.uleb128 .LLSDATT1402-.LLSDATTD1402
 4275              	.LLSDATTD1402:
 4276 035f 01       		.byte	0x1
 4277 0360 27       		.uleb128 .LLSDACSE1402-.LLSDACSB1402
 4278              	.LLSDACSB1402:
 4279 0361 3E       		.uleb128 .LEHB118-.LFB1402
 4280 0362 9501     		.uleb128 .LEHE118-.LEHB118
 4281 0364 00       		.uleb128 0
 4282 0365 00       		.uleb128 0
 4283 0366 DE01     		.uleb128 .LEHB119-.LFB1402
 4284 0368 32       		.uleb128 .LEHE119-.LEHB119
 4285 0369 D102     		.uleb128 .L221-.LFB1402
 4286 036b 01       		.uleb128 0x1
 4287 036c 9002     		.uleb128 .LEHB120-.LFB1402
 4288 036e 1F       		.uleb128 .LEHE120-.LEHB120
 4289 036f BD02     		.uleb128 .L222-.LFB1402
 4290 0371 03       		.uleb128 0x3
 4291 0372 B602     		.uleb128 .LEHB121-.LFB1402
 4292 0374 05       		.uleb128 .LEHE121-.LEHB121
 4293 0375 D102     		.uleb128 .L221-.LFB1402
 4294 0377 01       		.uleb128 0x1
 4295 0378 D902     		.uleb128 .LEHB122-.LFB1402
 4296 037a 38       		.uleb128 .LEHE122-.LEHB122
 4297 037b 9803     		.uleb128 .L223-.LFB1402
 4298 037d 00       		.uleb128 0
 4299 037e 9103     		.uleb128 .LEHB123-.LFB1402
 4300 0380 05       		.uleb128 .LEHE123-.LEHB123
 4301 0381 00       		.uleb128 0
 4302 0382 00       		.uleb128 0
 4303 0383 A603     		.uleb128 .LEHB124-.LFB1402
 4304 0385 05       		.uleb128 .LEHE124-.LEHB124
 4305 0386 00       		.uleb128 0
 4306 0387 00       		.uleb128 0
 4307              	.LLSDACSE1402:
 4308 0388 01       		.byte	0x1
 4309 0389 00       		.byte	0
 4310 038a 00       		.byte	0
 4311 038b 7D       		.byte	0x7d
 4312              		.align 4
 4313 038c 00000000 		.long	0
 4314              	
 4315              	.LLSDATT1402:
 4316              		.text
 4318 20cf 90       		.align 2
 4320              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC2ERKN8UnitTest11TestDetailsE
 4321              	.LFB1404:
 134:TestXmlTestReporter.cpp **** 
 135:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, OneFailureAndOneSuccess)
 4322              		.loc 3 135 0
 4323              		.cfi_startproc
 4324 20d0 55       		pushq	%rbp
 4325              		.cfi_def_cfa_offset 16
 4326              		.cfi_offset 6, -16
 4327 20d1 4889E5   		movq	%rsp, %rbp
 4328              		.cfi_def_cfa_register 6
 4329 20d4 4883EC10 		subq	$16, %rsp
 4330 20d8 48897DF8 		movq	%rdi, -8(%rbp)
 4331 20dc 488975F0 		movq	%rsi, -16(%rbp)
 4332              	.LBB74:
 4333              		.loc 3 135 0
 4334 20e0 488B45F8 		movq	-8(%rbp), %rax
 4335 20e4 4889C7   		movq	%rax, %rdi
 4336 20e7 E814DFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 4336      FF
 4337 20ec 488B45F8 		movq	-8(%rbp), %rax
 4338 20f0 488B55F0 		movq	-16(%rbp), %rdx
 4339 20f4 488990A0 		movq	%rdx, 416(%rax)
 4339      010000
 4340              	.LBE74:
 4341 20fb 90       		nop
 4342 20fc C9       		leave
 4343              		.cfi_def_cfa 7, 8
 4344 20fd C3       		ret
 4345              		.cfi_endproc
 4346              	.LFE1404:
 4348              		.set	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDe
 4349              		.section	.rodata
 4350              	.LC33:
 4351 068c 4F6E6546 		.string	"OneFailureAndOneSuccess"
 4351      61696C75 
 4351      7265416E 
 4351      644F6E65 
 4351      53756363 
 4352              		.text
 4353              		.align 2
 4355              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC2Ev:
 4356              	.LFB1407:
 4357              		.loc 3 135 0
 4358              		.cfi_startproc
 4359 20fe 55       		pushq	%rbp
 4360              		.cfi_def_cfa_offset 16
 4361              		.cfi_offset 6, -16
 4362 20ff 4889E5   		movq	%rsp, %rbp
 4363              		.cfi_def_cfa_register 6
 4364 2102 4883EC10 		subq	$16, %rsp
 4365 2106 48897DF8 		movq	%rdi, -8(%rbp)
 4366              	.LBB75:
 4367              		.loc 3 135 0
 4368 210a E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4368      00
 4369 210f 4889C2   		movq	%rax, %rdx
 4370 2112 488B45F8 		movq	-8(%rbp), %rax
 4371 2116 41B88700 		movl	$135, %r8d
 4371      0000
 4372 211c B9000000 		movl	$.LC1, %ecx
 4372      00
 4373 2121 BE000000 		movl	$.LC33, %esi
 4373      00
 4374 2126 4889C7   		movq	%rax, %rdi
 4375 2129 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 4375      00
 4376 212e BA000000 		movl	$_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE+16, %edx
 4376      00
 4377 2133 488B45F8 		movq	-8(%rbp), %rax
 4378 2137 488910   		movq	%rdx, (%rax)
 4379              	.LBE75:
 4380 213a 90       		nop
 4381 213b C9       		leave
 4382              		.cfi_def_cfa 7, 8
 4383 213c C3       		ret
 4384              		.cfi_endproc
 4385              	.LFE1407:
 4387              		.set	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev,_ZN12_GLOBAL__N_149T
 4388              		.local	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE
 4389              		.comm	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE,56,32
 4390              		.local	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE
 4391              		.comm	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE,1,1
 4392 213d 90       		.align 2
 4394              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD2Ev:
 4395              	.LFB1411:
 4396              		.loc 3 135 0
 4397              		.cfi_startproc
 4398 213e 55       		pushq	%rbp
 4399              		.cfi_def_cfa_offset 16
 4400              		.cfi_offset 6, -16
 4401 213f 4889E5   		movq	%rsp, %rbp
 4402              		.cfi_def_cfa_register 6
 4403 2142 4883EC10 		subq	$16, %rsp
 4404 2146 48897DF8 		movq	%rdi, -8(%rbp)
 4405              	.LBB76:
 4406              		.loc 3 135 0
 4407 214a 488B45F8 		movq	-8(%rbp), %rax
 4408 214e 4889C7   		movq	%rax, %rdi
 4409 2151 E806DFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 4409      FF
 4410              	.LBE76:
 4411 2156 90       		nop
 4412 2157 C9       		leave
 4413              		.cfi_def_cfa 7, 8
 4414 2158 C3       		ret
 4415              		.cfi_endproc
 4416              	.LFE1411:
 4418              		.set	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev,_ZN12_GLOBAL__N_15
 4419 2159 90       		.align 2
 4421              	_ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv:
 4422              	.LFB1409:
 4423              		.loc 3 135 0
 4424              		.cfi_startproc
 4425              		.cfi_personality 0x3,__gxx_personality_v0
 4426              		.cfi_lsda 0x3,.LLSDA1409
 4427 215a 55       		pushq	%rbp
 4428              		.cfi_def_cfa_offset 16
 4429              		.cfi_offset 6, -16
 4430 215b 4889E5   		movq	%rsp, %rbp
 4431              		.cfi_def_cfa_register 6
 4432 215e 4154     		pushq	%r12
 4433 2160 53       		pushq	%rbx
 4434 2161 4881EC00 		subq	$512, %rsp
 4434      020000
 4435              		.cfi_offset 12, -24
 4436              		.cfi_offset 3, -32
 4437 2168 4889BDF8 		movq	%rdi, -520(%rbp)
 4437      FDFFFF
 4438              		.loc 3 135 0
 4439 216f 64488B04 		movq	%fs:40, %rax
 4439      25280000 
 4439      00
 4440 2178 488945E8 		movq	%rax, -24(%rbp)
 4441 217c 31C0     		xorl	%eax, %eax
 4442 217e C6850FFE 		movb	$0, -497(%rbp)
 4442      FFFF00
 4443              	.LBB77:
 4444 2185 488B85F8 		movq	-520(%rbp), %rax
 4444      FDFFFF
 4445 218c 488D5008 		leaq	8(%rax), %rdx
 4446 2190 488D8540 		leaq	-448(%rbp), %rax
 4446      FEFFFF
 4447 2197 4889D6   		movq	%rdx, %rsi
 4448 219a 4889C7   		movq	%rax, %rdi
 4449              	.LEHB125:
 4450 219d E82EFFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDe
 4450      FF
 4451              	.LEHE125:
 4452              		.loc 3 135 0 is_stmt 0 discriminator 1
 4453 21a2 C6850FFE 		movb	$1, -497(%rbp)
 4453      FFFF01
 4454 21a9 488B85F8 		movq	-520(%rbp), %rax
 4454      FDFFFF
 4455 21b0 488D5008 		leaq	8(%rax), %rdx
 4456 21b4 488D8540 		leaq	-448(%rbp), %rax
 4456      FEFFFF
 4457 21bb 4889D6   		movq	%rdx, %rsi
 4458 21be 4889C7   		movq	%rax, %rdi
 4459              	.LEHB126:
 4460 21c1 E8F41A00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelpe
 4460      00
 4461              	.LEHE126:
 4462              		.loc 3 135 0 discriminator 3
 4463 21c6 488D8540 		leaq	-448(%rbp), %rax
 4463      FEFFFF
 4464 21cd 4889C7   		movq	%rax, %rdi
 4465              	.LEHB127:
 4466 21d0 E869FFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
 4466      FF
 4467              	.LEHE127:
 4468              	.LBE77:
 4469              		.loc 3 135 0
 4470 21d5 E9660200 		jmp	.L227
 4470      00
 4471              	.L242:
 4472 21da 4989C4   		movq	%rax, %r12
 4473 21dd 4889D3   		movq	%rdx, %rbx
 4474              	.LBB78:
 4475 21e0 488D8540 		leaq	-448(%rbp), %rax
 4475      FEFFFF
 4476 21e7 4889C7   		movq	%rax, %rdi
 4477 21ea E84FFFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
 4477      FF
 4478 21ef 4C89E0   		movq	%r12, %rax
 4479 21f2 4889DA   		movq	%rbx, %rdx
 4480 21f5 EB00     		jmp	.L229
 4481              	.L241:
 4482              	.L229:
 4483 21f7 4883FA01 		cmpq	$1, %rdx
 4484 21fb 740F     		je	.L231
 4485 21fd 4883FA02 		cmpq	$2, %rdx
 4486 2201 0F84A700 		je	.L232
 4486      0000
 4487 2207 E94B0100 		jmp	.L247
 4487      00
 4488              	.L231:
 4489              	.LBE78:
 4490              	.LBB79:
 4491 220c 4889C7   		movq	%rax, %rdi
 4492 220f E8000000 		call	__cxa_begin_catch
 4492      00
 4493 2214 48898510 		movq	%rax, -496(%rbp)
 4493      FEFFFF
 4494 221b 488B8510 		movq	-496(%rbp), %rax
 4494      FEFFFF
 4495 2222 488B00   		movq	(%rax), %rax
 4496 2225 4883C010 		addq	$16, %rax
 4497 2229 488B00   		movq	(%rax), %rax
 4498 222c 488B9510 		movq	-496(%rbp), %rdx
 4498      FEFFFF
 4499 2233 4889D7   		movq	%rdx, %rdi
 4500 2236 FFD0     		call	*%rax
 4501 2238 4889C3   		movq	%rax, %rbx
 4502 223b 488B8510 		movq	-496(%rbp), %rax
 4502      FEFFFF
 4503 2242 4889C7   		movq	%rax, %rdi
 4504              	.LEHB128:
 4505 2245 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 4505      00
 4506 224a 4189C4   		movl	%eax, %r12d
 4507 224d 488B8510 		movq	-496(%rbp), %rax
 4507      FEFFFF
 4508 2254 4889C7   		movq	%rax, %rdi
 4509 2257 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 4509      00
 4510              		.loc 3 135 0 discriminator 5
 4511 225c 4889C1   		movq	%rax, %rcx
 4512 225f 488B85F8 		movq	-520(%rbp), %rax
 4512      FDFFFF
 4513 2266 488B5008 		movq	8(%rax), %rdx
 4514 226a 488B85F8 		movq	-520(%rbp), %rax
 4514      FDFFFF
 4515 2271 488B7010 		movq	16(%rax), %rsi
 4516 2275 488D8520 		leaq	-480(%rbp), %rax
 4516      FEFFFF
 4517 227c 4589E0   		movl	%r12d, %r8d
 4518 227f 4889C7   		movq	%rax, %rdi
 4519 2282 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4519      00
 4520              		.loc 3 135 0 discriminator 9
 4521 2287 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4521      00
 4522 228c 488B00   		movq	(%rax), %rax
 4523 228f 488D8D20 		leaq	-480(%rbp), %rcx
 4523      FEFFFF
 4524 2296 4889DA   		movq	%rbx, %rdx
 4525 2299 4889CE   		movq	%rcx, %rsi
 4526 229c 4889C7   		movq	%rax, %rdi
 4527 229f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4527      00
 4528              	.LEHE128:
 4529              		.loc 3 135 0 discriminator 13
 4530 22a4 E8000000 		call	__cxa_end_catch
 4530      00
 4531              	.LBE79:
 4532 22a9 E9920100 		jmp	.L227
 4532      00
 4533              	.L232:
 4534              	.LBB80:
 4535              		.loc 3 135 0
 4536 22ae 4889C7   		movq	%rax, %rdi
 4537 22b1 E8000000 		call	__cxa_begin_catch
 4537      00
 4538 22b6 48898518 		movq	%rax, -488(%rbp)
 4538      FEFFFF
 4539              	.LBB81:
 4540 22bd 488D8540 		leaq	-448(%rbp), %rax
 4540      FEFFFF
 4541 22c4 4889C7   		movq	%rax, %rdi
 4542              	.LEHB129:
 4543 22c7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4543      00
 4544              	.LEHE129:
 4545              		.loc 3 135 0 discriminator 15
 4546 22cc 488B8518 		movq	-488(%rbp), %rax
 4546      FEFFFF
 4547 22d3 488B00   		movq	(%rax), %rax
 4548 22d6 4883C010 		addq	$16, %rax
 4549 22da 488B00   		movq	(%rax), %rax
 4550 22dd 488B9518 		movq	-488(%rbp), %rdx
 4550      FEFFFF
 4551 22e4 4889D7   		movq	%rdx, %rdi
 4552 22e7 FFD0     		call	*%rax
 4553 22e9 4889C3   		movq	%rax, %rbx
 4554 22ec 488D8540 		leaq	-448(%rbp), %rax
 4554      FEFFFF
 4555 22f3 BE000000 		movl	$.LC3, %esi
 4555      00
 4556 22f8 4889C7   		movq	%rax, %rdi
 4557              	.LEHB130:
 4558 22fb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4558      00
 4559 2300 4889DE   		movq	%rbx, %rsi
 4560 2303 4889C7   		movq	%rax, %rdi
 4561 2306 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4561      00
 4562              		.loc 3 135 0 discriminator 19
 4563 230b 488D8540 		leaq	-448(%rbp), %rax
 4563      FEFFFF
 4564 2312 4889C7   		movq	%rax, %rdi
 4565 2315 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4565      00
 4566 231a 4989C4   		movq	%rax, %r12
 4567 231d 488B85F8 		movq	-520(%rbp), %rax
 4567      FDFFFF
 4568 2324 488D5808 		leaq	8(%rax), %rbx
 4569 2328 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4569      00
 4570              		.loc 3 135 0 discriminator 21
 4571 232d 488B00   		movq	(%rax), %rax
 4572 2330 4C89E2   		movq	%r12, %rdx
 4573 2333 4889DE   		movq	%rbx, %rsi
 4574 2336 4889C7   		movq	%rax, %rdi
 4575 2339 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4575      00
 4576              	.LEHE130:
 4577              		.loc 3 135 0 discriminator 25
 4578 233e 488D8540 		leaq	-448(%rbp), %rax
 4578      FEFFFF
 4579 2345 4889C7   		movq	%rax, %rdi
 4580              	.LEHB131:
 4581 2348 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4581      00
 4582              	.LEHE131:
 4583              	.LBE81:
 4584              		.loc 3 135 0 discriminator 26
 4585 234d E8000000 		call	__cxa_end_catch
 4585      00
 4586              	.LBE80:
 4587 2352 E9E90000 		jmp	.L227
 4587      00
 4588              	.L247:
 4589              		.loc 3 135 0
 4590 2357 4889C7   		movq	%rax, %rdi
 4591 235a E8000000 		call	__cxa_begin_catch
 4591      00
 4592 235f 80BD0FFE 		cmpb	$0, -497(%rbp)
 4592      FFFF00
 4593 2366 7443     		je	.L234
 4594              		.loc 3 135 0 discriminator 28
 4595 2368 488B85F8 		movq	-520(%rbp), %rax
 4595      FDFFFF
 4596 236f 488D4808 		leaq	8(%rax), %rcx
 4597 2373 488D8520 		leaq	-480(%rbp), %rax
 4597      FEFFFF
 4598 237a BA870000 		movl	$135, %edx
 4598      00
 4599 237f 4889CE   		movq	%rcx, %rsi
 4600 2382 4889C7   		movq	%rax, %rdi
 4601              	.LEHB132:
 4602 2385 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4602      00
 4603              		.loc 3 135 0 discriminator 31
 4604 238a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4604      00
 4605 238f 488B00   		movq	(%rax), %rax
 4606 2392 488D8D20 		leaq	-480(%rbp), %rcx
 4606      FEFFFF
 4607 2399 BA000000 		movl	$.LC4, %edx
 4607      00
 4608 239e 4889CE   		movq	%rcx, %rsi
 4609 23a1 4889C7   		movq	%rax, %rdi
 4610 23a4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4610      00
 4611 23a9 EB41     		jmp	.L235
 4612              	.L234:
 4613              		.loc 3 135 0 discriminator 29
 4614 23ab 488B85F8 		movq	-520(%rbp), %rax
 4614      FDFFFF
 4615 23b2 488D4808 		leaq	8(%rax), %rcx
 4616 23b6 488D8520 		leaq	-480(%rbp), %rax
 4616      FEFFFF
 4617 23bd BA870000 		movl	$135, %edx
 4617      00
 4618 23c2 4889CE   		movq	%rcx, %rsi
 4619 23c5 4889C7   		movq	%rax, %rdi
 4620 23c8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4620      00
 4621              		.loc 3 135 0 discriminator 38
 4622 23cd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4622      00
 4623 23d2 488B00   		movq	(%rax), %rax
 4624 23d5 488D8D20 		leaq	-480(%rbp), %rcx
 4624      FEFFFF
 4625 23dc BA000000 		movl	$.LC5, %edx
 4625      00
 4626 23e1 4889CE   		movq	%rcx, %rsi
 4627 23e4 4889C7   		movq	%rax, %rdi
 4628 23e7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4628      00
 4629              	.LEHE132:
 4630              	.L235:
 4631              	.LEHB133:
 4632              		.loc 3 135 0 discriminator 43
 4633 23ec E8000000 		call	__cxa_end_catch
 4633      00
 4634 23f1 EB4D     		jmp	.L227
 4635              	.L243:
 4636 23f3 4889C3   		movq	%rax, %rbx
 4637              	.LBB83:
 4638              		.loc 3 135 0
 4639 23f6 E8000000 		call	__cxa_end_catch
 4639      00
 4640 23fb 4889D8   		movq	%rbx, %rax
 4641 23fe 4889C7   		movq	%rax, %rdi
 4642 2401 E8000000 		call	_Unwind_Resume
 4642      00
 4643              	.LEHE133:
 4644              	.L245:
 4645 2406 4889C3   		movq	%rax, %rbx
 4646              	.LBE83:
 4647              	.LBB84:
 4648              	.LBB82:
 4649 2409 488D8540 		leaq	-448(%rbp), %rax
 4649      FEFFFF
 4650 2410 4889C7   		movq	%rax, %rdi
 4651 2413 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4651      00
 4652 2418 EB03     		jmp	.L238
 4653              	.L244:
 4654 241a 4889C3   		movq	%rax, %rbx
 4655              	.L238:
 4656              	.LBE82:
 4657 241d E8000000 		call	__cxa_end_catch
 4657      00
 4658 2422 4889D8   		movq	%rbx, %rax
 4659 2425 4889C7   		movq	%rax, %rdi
 4660              	.LEHB134:
 4661 2428 E8000000 		call	_Unwind_Resume
 4661      00
 4662              	.LEHE134:
 4663              	.L246:
 4664 242d 4889C3   		movq	%rax, %rbx
 4665              	.LBE84:
 4666 2430 E8000000 		call	__cxa_end_catch
 4666      00
 4667 2435 4889D8   		movq	%rbx, %rax
 4668 2438 4889C7   		movq	%rax, %rdi
 4669              	.LEHB135:
 4670 243b E8000000 		call	_Unwind_Resume
 4670      00
 4671              	.LEHE135:
 4672              	.L227:
 4673 2440 488B45E8 		movq	-24(%rbp), %rax
 4674 2444 64483304 		xorq	%fs:40, %rax
 4674      25280000 
 4674      00
 4675 244d 7405     		je	.L240
 4676 244f E8000000 		call	__stack_chk_fail
 4676      00
 4677              	.L240:
 4678 2454 4881C400 		addq	$512, %rsp
 4678      020000
 4679 245b 5B       		popq	%rbx
 4680 245c 415C     		popq	%r12
 4681 245e 5D       		popq	%rbp
 4682              		.cfi_def_cfa 7, 8
 4683 245f C3       		ret
 4684              		.cfi_endproc
 4685              	.LFE1409:
 4686              		.section	.gcc_except_table
 4687              		.align 4
 4688              	.LLSDA1409:
 4689 0390 FF       		.byte	0xff
 4690 0391 03       		.byte	0x3
 4691 0392 55       		.uleb128 .LLSDATT1409-.LLSDATTD1409
 4692              	.LLSDATTD1409:
 4693 0393 01       		.byte	0x1
 4694 0394 3C       		.uleb128 .LLSDACSE1409-.LLSDACSB1409
 4695              	.LLSDACSB1409:
 4696 0395 43       		.uleb128 .LEHB125-.LFB1409
 4697 0396 05       		.uleb128 .LEHE125-.LEHB125
 4698 0397 9D01     		.uleb128 .L241-.LFB1409
 4699 0399 05       		.uleb128 0x5
 4700 039a 67       		.uleb128 .LEHB126-.LFB1409
 4701 039b 05       		.uleb128 .LEHE126-.LEHB126
 4702 039c 8001     		.uleb128 .L242-.LFB1409
 4703 039e 07       		.uleb128 0x7
 4704 039f 76       		.uleb128 .LEHB127-.LFB1409
 4705 03a0 05       		.uleb128 .LEHE127-.LEHB127
 4706 03a1 9D01     		.uleb128 .L241-.LFB1409
 4707 03a3 05       		.uleb128 0x5
 4708 03a4 EB01     		.uleb128 .LEHB128-.LFB1409
 4709 03a6 5F       		.uleb128 .LEHE128-.LEHB128
 4710 03a7 9905     		.uleb128 .L243-.LFB1409
 4711 03a9 00       		.uleb128 0
 4712 03aa ED02     		.uleb128 .LEHB129-.LFB1409
 4713 03ac 05       		.uleb128 .LEHE129-.LEHB129
 4714 03ad C005     		.uleb128 .L244-.LFB1409
 4715 03af 00       		.uleb128 0
 4716 03b0 A103     		.uleb128 .LEHB130-.LFB1409
 4717 03b2 43       		.uleb128 .LEHE130-.LEHB130
 4718 03b3 AC05     		.uleb128 .L245-.LFB1409
 4719 03b5 00       		.uleb128 0
 4720 03b6 EE03     		.uleb128 .LEHB131-.LFB1409
 4721 03b8 05       		.uleb128 .LEHE131-.LEHB131
 4722 03b9 C005     		.uleb128 .L244-.LFB1409
 4723 03bb 00       		.uleb128 0
 4724 03bc AB04     		.uleb128 .LEHB132-.LFB1409
 4725 03be 67       		.uleb128 .LEHE132-.LEHB132
 4726 03bf D305     		.uleb128 .L246-.LFB1409
 4727 03c1 00       		.uleb128 0
 4728 03c2 9205     		.uleb128 .LEHB133-.LFB1409
 4729 03c4 1A       		.uleb128 .LEHE133-.LEHB133
 4730 03c5 00       		.uleb128 0
 4731 03c6 00       		.uleb128 0
 4732 03c7 CE05     		.uleb128 .LEHB134-.LFB1409
 4733 03c9 05       		.uleb128 .LEHE134-.LEHB134
 4734 03ca 00       		.uleb128 0
 4735 03cb 00       		.uleb128 0
 4736 03cc E105     		.uleb128 .LEHB135-.LFB1409
 4737 03ce 05       		.uleb128 .LEHE135-.LEHB135
 4738 03cf 00       		.uleb128 0
 4739 03d0 00       		.uleb128 0
 4740              	.LLSDACSE1409:
 4741 03d1 03       		.byte	0x3
 4742 03d2 00       		.byte	0
 4743 03d3 02       		.byte	0x2
 4744 03d4 7D       		.byte	0x7d
 4745 03d5 01       		.byte	0x1
 4746 03d6 7D       		.byte	0x7d
 4747 03d7 00       		.byte	0
 4748 03d8 7D       		.byte	0x7d
 4749 03d9 000000   		.align 4
 4750 03dc 00000000 		.long	0
 4751              	
 4752 03e0 00000000 		.long	_ZTISt9exception
 4753 03e4 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 4754              	.LLSDATT1409:
 4755              		.text
 4757              		.section	.rodata
 4758              	.LC34:
 4759 06a4 6661696C 		.string	"fail.h"
 4759      2E6800
 4760              	.LC35:
 4761 06ab 4661696C 		.string	"FailedTest"
 4761      65645465 
 4761      737400
 4762              	.LC36:
 4763 06b6 65787065 		.string	"expected 1 but was 2"
 4763      63746564 
 4763      20312062 
 4763      75742077 
 4763      61732032 
 4764              	.LC37:
 4765 06cb 53756363 		.string	"SucceededTest"
 4765      65656465 
 4765      64546573 
 4765      7400
 4766 06d9 00000000 		.align 8
 4766      000000
 4767              	.LC39:
 4768 06e0 3C3F786D 		.ascii	"<?xml versio"
 4768      6C207665 
 4768      7273696F 
 4769 06ec 6E3D2231 		.string	"n=\"1.0\"?><unittest-results tests=\"2\" failedtests=\"1\" failures=\"1\" time=\"1.1\"><t
 4769      2E30223F 
 4769      3E3C756E 
 4769      69747465 
 4769      73742D72 
 4770              		.text
 4771              		.align 2
 4773              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv:
 4774              	.LFB1413:
 136:TestXmlTestReporter.cpp **** {
 4775              		.loc 3 136 0 is_stmt 1
 4776              		.cfi_startproc
 4777              		.cfi_personality 0x3,__gxx_personality_v0
 4778              		.cfi_lsda 0x3,.LLSDA1413
 4779 2460 55       		pushq	%rbp
 4780              		.cfi_def_cfa_offset 16
 4781              		.cfi_offset 6, -16
 4782 2461 4889E5   		movq	%rsp, %rbp
 4783              		.cfi_def_cfa_register 6
 4784 2464 53       		pushq	%rbx
 4785 2465 4881ECB8 		subq	$184, %rsp
 4785      000000
 4786              		.cfi_offset 3, -24
 4787 246c 4889BD48 		movq	%rdi, -184(%rbp)
 4787      FFFFFF
 4788              		.loc 3 136 0
 4789 2473 64488B04 		movq	%fs:40, %rax
 4789      25280000 
 4789      00
 4790 247c 488945E8 		movq	%rax, -24(%rbp)
 4791 2480 31C0     		xorl	%eax, %eax
 137:TestXmlTestReporter.cpp ****     TestDetails const failedDetails("FailedTest", "suite", "fail.h", 1);
 4792              		.loc 3 137 0
 4793 2482 488D8560 		leaq	-160(%rbp), %rax
 4793      FFFFFF
 4794 2489 41B80100 		movl	$1, %r8d
 4794      0000
 4795 248f B9000000 		movl	$.LC34, %ecx
 4795      00
 4796 2494 BA000000 		movl	$.LC7, %edx
 4796      00
 4797 2499 BE000000 		movl	$.LC35, %esi
 4797      00
 4798 249e 4889C7   		movq	%rax, %rdi
 4799              	.LEHB136:
 4800 24a1 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4800      00
 138:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(failedDetails);
 4801              		.loc 3 138 0
 4802 24a6 488B8548 		movq	-184(%rbp), %rax
 4802      FFFFFF
 4803 24ad 488D9078 		leaq	376(%rax), %rdx
 4803      010000
 4804 24b4 488D8560 		leaq	-160(%rbp), %rax
 4804      FFFFFF
 4805 24bb 4889C6   		movq	%rax, %rsi
 4806 24be 4889D7   		movq	%rdx, %rdi
 4807 24c1 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4807      00
 139:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails, "expected 1 but was 2");
 4808              		.loc 3 139 0
 4809 24c6 488B8548 		movq	-184(%rbp), %rax
 4809      FFFFFF
 4810 24cd 488D8878 		leaq	376(%rax), %rcx
 4810      010000
 4811 24d4 488D8560 		leaq	-160(%rbp), %rax
 4811      FFFFFF
 4812 24db BA000000 		movl	$.LC36, %edx
 4812      00
 4813 24e0 4889C6   		movq	%rax, %rsi
 4814 24e3 4889CF   		movq	%rcx, %rdi
 4815 24e6 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 4815      00
 140:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(failedDetails, 0.1f);
 4816              		.loc 3 140 0
 4817 24eb 488B8548 		movq	-184(%rbp), %rax
 4817      FFFFFF
 4818 24f2 488D9078 		leaq	376(%rax), %rdx
 4818      010000
 4819 24f9 488D8560 		leaq	-160(%rbp), %rax
 4819      FFFFFF
 4820 2500 F30F1005 		movss	.LC10(%rip), %xmm0
 4820      00000000 
 4821 2508 4889C6   		movq	%rax, %rsi
 4822 250b 4889D7   		movq	%rdx, %rdi
 4823 250e E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 4823      00
 141:TestXmlTestReporter.cpp **** 
 142:TestXmlTestReporter.cpp ****     TestDetails const succeededDetails("SucceededTest", "suite", "", 0);
 4824              		.loc 3 142 0
 4825 2513 488D4580 		leaq	-128(%rbp), %rax
 4826 2517 41B80000 		movl	$0, %r8d
 4826      0000
 4827 251d B9000000 		movl	$.LC14, %ecx
 4827      00
 4828 2522 BA000000 		movl	$.LC7, %edx
 4828      00
 4829 2527 BE000000 		movl	$.LC37, %esi
 4829      00
 4830 252c 4889C7   		movq	%rax, %rdi
 4831 252f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4831      00
 143:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(succeededDetails);
 4832              		.loc 3 143 0
 4833 2534 488B8548 		movq	-184(%rbp), %rax
 4833      FFFFFF
 4834 253b 488D9078 		leaq	376(%rax), %rdx
 4834      010000
 4835 2542 488D4580 		leaq	-128(%rbp), %rax
 4836 2546 4889C6   		movq	%rax, %rsi
 4837 2549 4889D7   		movq	%rdx, %rdi
 4838 254c E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4838      00
 144:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(succeededDetails, 1.0f);
 4839              		.loc 3 144 0
 4840 2551 488B8548 		movq	-184(%rbp), %rax
 4840      FFFFFF
 4841 2558 488D9078 		leaq	376(%rax), %rdx
 4841      010000
 4842 255f 488D4580 		leaq	-128(%rbp), %rax
 4843 2563 F30F1005 		movss	.LC16(%rip), %xmm0
 4843      00000000 
 4844 256b 4889C6   		movq	%rax, %rsi
 4845 256e 4889D7   		movq	%rdx, %rdi
 4846 2571 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 4846      00
 145:TestXmlTestReporter.cpp ****     reporter.ReportSummary(2, 1, 1, 1.1f);
 4847              		.loc 3 145 0
 4848 2576 488B8548 		movq	-184(%rbp), %rax
 4848      FFFFFF
 4849 257d 48057801 		addq	$376, %rax
 4849      0000
 4850 2583 F30F1005 		movss	.LC38(%rip), %xmm0
 4850      00000000 
 4851 258b B9010000 		movl	$1, %ecx
 4851      00
 4852 2590 BA010000 		movl	$1, %edx
 4852      00
 4853 2595 BE020000 		movl	$2, %esi
 4853      00
 4854 259a 4889C7   		movq	%rax, %rdi
 4855 259d E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 4855      00
 4856              	.LEHE136:
 146:TestXmlTestReporter.cpp **** 
 147:TestXmlTestReporter.cpp ****     char const* expected =
 148:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 149:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"2\" failedtests=\"1\" failures=\"1\" time=\"1.1\">"
 150:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"FailedTest\" time=\"0.1\">"
 151:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(1) : expected 1 but was 2\"/>"
 152:TestXmlTestReporter.cpp ****         "</test>"
 153:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"SucceededTest\" time=\"1\"/>"
 154:TestXmlTestReporter.cpp ****         "</unittest-results>";
 4857              		.loc 3 154 0
 4858 25a2 48C78558 		movq	$.LC39, -168(%rbp)
 4858      FFFFFF00 
 4858      000000
 4859              	.LEHB137:
 155:TestXmlTestReporter.cpp **** 
 156:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 4860              		.loc 3 156 0
 4861 25ad E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4861      00
 4862 25b2 488B08   		movq	(%rax), %rcx
 4863 25b5 488D45A0 		leaq	-96(%rbp), %rax
 4864 25b9 BA9C0000 		movl	$156, %edx
 4864      00
 4865 25be 4889CE   		movq	%rcx, %rsi
 4866 25c1 4889C7   		movq	%rax, %rdi
 4867 25c4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4867      00
 4868              		.loc 3 156 0 is_stmt 0 discriminator 2
 4869 25c9 488B9548 		movq	-184(%rbp), %rdx
 4869      FFFFFF
 4870 25d0 488D45C0 		leaq	-64(%rbp), %rax
 4871 25d4 4889D6   		movq	%rdx, %rsi
 4872 25d7 4889C7   		movq	%rax, %rdi
 4873 25da E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 4873      00
 4874              	.LEHE137:
 4875              	.LEHB138:
 4876              		.loc 3 156 0 discriminator 4
 4877 25df E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4877      00
 4878 25e4 488B00   		movq	(%rax), %rax
 4879 25e7 488D4DA0 		leaq	-96(%rbp), %rcx
 4880 25eb 488D55C0 		leaq	-64(%rbp), %rdx
 4881 25ef 488DB558 		leaq	-168(%rbp), %rsi
 4881      FFFFFF
 4882 25f6 4889C7   		movq	%rax, %rdi
 4883 25f9 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4883      00
 4884              	.LEHE138:
 4885              		.loc 3 156 0 discriminator 8
 4886 25fe 488D45C0 		leaq	-64(%rbp), %rax
 4887 2602 4889C7   		movq	%rax, %rdi
 4888              	.LEHB139:
 4889 2605 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 4889      00
 4890              	.LEHE139:
 157:TestXmlTestReporter.cpp **** }
 4891              		.loc 3 157 0 is_stmt 1
 4892 260a EB6E     		jmp	.L248
 4893              	.L255:
 4894 260c 4889C3   		movq	%rax, %rbx
 156:TestXmlTestReporter.cpp **** }
 4895              		.loc 3 156 0
 4896 260f 488D45C0 		leaq	-64(%rbp), %rax
 4897 2613 4889C7   		movq	%rax, %rdi
 4898 2616 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 4898      00
 4899 261b 4889D8   		movq	%rbx, %rax
 4900 261e EB00     		jmp	.L250
 4901              	.L254:
 4902              	.L250:
 4903 2620 4889C7   		movq	%rax, %rdi
 4904 2623 E8000000 		call	__cxa_begin_catch
 4904      00
 4905              	.LEHB140:
 4906 2628 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4906      00
 4907 262d 488B08   		movq	(%rax), %rcx
 4908 2630 488D45A0 		leaq	-96(%rbp), %rax
 4909 2634 BA9C0000 		movl	$156, %edx
 4909      00
 4910 2639 4889CE   		movq	%rcx, %rsi
 4911 263c 4889C7   		movq	%rax, %rdi
 4912 263f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4912      00
 156:TestXmlTestReporter.cpp **** }
 4913              		.loc 3 156 0 is_stmt 0 discriminator 14
 4914 2644 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4914      00
 4915 2649 488B00   		movq	(%rax), %rax
 4916 264c 488D4DA0 		leaq	-96(%rbp), %rcx
 4917 2650 BA000000 		movl	$.LC12, %edx
 4917      00
 4918 2655 4889CE   		movq	%rcx, %rsi
 4919 2658 4889C7   		movq	%rax, %rdi
 4920 265b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4920      00
 4921              	.LEHE140:
 4922              	.LEHB141:
 156:TestXmlTestReporter.cpp **** }
 4923              		.loc 3 156 0 discriminator 18
 4924 2660 E8000000 		call	__cxa_end_catch
 4924      00
 4925              	.LEHE141:
 4926              		.loc 3 157 0 is_stmt 1 discriminator 18
 4927 2665 EB13     		jmp	.L248
 4928              	.L256:
 4929 2667 4889C3   		movq	%rax, %rbx
 156:TestXmlTestReporter.cpp **** }
 4930              		.loc 3 156 0
 4931 266a E8000000 		call	__cxa_end_catch
 4931      00
 4932 266f 4889D8   		movq	%rbx, %rax
 4933 2672 4889C7   		movq	%rax, %rdi
 4934              	.LEHB142:
 4935 2675 E8000000 		call	_Unwind_Resume
 4935      00
 4936              	.LEHE142:
 4937              	.L248:
 4938              		.loc 3 157 0
 4939 267a 488B45E8 		movq	-24(%rbp), %rax
 4940 267e 64483304 		xorq	%fs:40, %rax
 4940      25280000 
 4940      00
 4941 2687 7405     		je	.L253
 4942 2689 E8000000 		call	__stack_chk_fail
 4942      00
 4943              	.L253:
 4944 268e 4881C4B8 		addq	$184, %rsp
 4944      000000
 4945 2695 5B       		popq	%rbx
 4946 2696 5D       		popq	%rbp
 4947              		.cfi_def_cfa 7, 8
 4948 2697 C3       		ret
 4949              		.cfi_endproc
 4950              	.LFE1413:
 4951              		.section	.gcc_except_table
 4952              		.align 4
 4953              	.LLSDA1413:
 4954 03e8 FF       		.byte	0xff
 4955 03e9 03       		.byte	0x3
 4956 03ea 31       		.uleb128 .LLSDATT1413-.LLSDATTD1413
 4957              	.LLSDATTD1413:
 4958 03eb 01       		.byte	0x1
 4959 03ec 27       		.uleb128 .LLSDACSE1413-.LLSDACSB1413
 4960              	.LLSDACSB1413:
 4961 03ed 41       		.uleb128 .LEHB136-.LFB1413
 4962 03ee 8102     		.uleb128 .LEHE136-.LEHB136
 4963 03f0 00       		.uleb128 0
 4964 03f1 00       		.uleb128 0
 4965 03f2 CD02     		.uleb128 .LEHB137-.LFB1413
 4966 03f4 32       		.uleb128 .LEHE137-.LEHB137
 4967 03f5 C003     		.uleb128 .L254-.LFB1413
 4968 03f7 01       		.uleb128 0x1
 4969 03f8 FF02     		.uleb128 .LEHB138-.LFB1413
 4970 03fa 1F       		.uleb128 .LEHE138-.LEHB138
 4971 03fb AC03     		.uleb128 .L255-.LFB1413
 4972 03fd 03       		.uleb128 0x3
 4973 03fe A503     		.uleb128 .LEHB139-.LFB1413
 4974 0400 05       		.uleb128 .LEHE139-.LEHB139
 4975 0401 C003     		.uleb128 .L254-.LFB1413
 4976 0403 01       		.uleb128 0x1
 4977 0404 C803     		.uleb128 .LEHB140-.LFB1413
 4978 0406 38       		.uleb128 .LEHE140-.LEHB140
 4979 0407 8704     		.uleb128 .L256-.LFB1413
 4980 0409 00       		.uleb128 0
 4981 040a 8004     		.uleb128 .LEHB141-.LFB1413
 4982 040c 05       		.uleb128 .LEHE141-.LEHB141
 4983 040d 00       		.uleb128 0
 4984 040e 00       		.uleb128 0
 4985 040f 9504     		.uleb128 .LEHB142-.LFB1413
 4986 0411 05       		.uleb128 .LEHE142-.LEHB142
 4987 0412 00       		.uleb128 0
 4988 0413 00       		.uleb128 0
 4989              	.LLSDACSE1413:
 4990 0414 01       		.byte	0x1
 4991 0415 00       		.byte	0
 4992 0416 00       		.byte	0
 4993 0417 7D       		.byte	0x7d
 4994              		.align 4
 4995 0418 00000000 		.long	0
 4996              	
 4997              	.LLSDATT1413:
 4998              		.text
 5000              		.align 2
 5002              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC2ERKN8UnitTest11TestDetailsE:
 5003              	.LFB1415:
 158:TestXmlTestReporter.cpp **** 
 159:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, MultipleFailures)
 5004              		.loc 3 159 0
 5005              		.cfi_startproc
 5006 2698 55       		pushq	%rbp
 5007              		.cfi_def_cfa_offset 16
 5008              		.cfi_offset 6, -16
 5009 2699 4889E5   		movq	%rsp, %rbp
 5010              		.cfi_def_cfa_register 6
 5011 269c 4883EC10 		subq	$16, %rsp
 5012 26a0 48897DF8 		movq	%rdi, -8(%rbp)
 5013 26a4 488975F0 		movq	%rsi, -16(%rbp)
 5014              	.LBB85:
 5015              		.loc 3 159 0
 5016 26a8 488B45F8 		movq	-8(%rbp), %rax
 5017 26ac 4889C7   		movq	%rax, %rdi
 5018 26af E84CD9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 5018      FF
 5019 26b4 488B45F8 		movq	-8(%rbp), %rax
 5020 26b8 488B55F0 		movq	-16(%rbp), %rdx
 5021 26bc 488990A0 		movq	%rdx, 416(%rax)
 5021      010000
 5022              	.LBE85:
 5023 26c3 90       		nop
 5024 26c4 C9       		leave
 5025              		.cfi_def_cfa 7, 8
 5026 26c5 C3       		ret
 5027              		.cfi_endproc
 5028              	.LFE1415:
 5030              		.set	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE,
 5031              		.section	.rodata
 5032              	.LC40:
 5033 07ed 4D756C74 		.string	"MultipleFailures"
 5033      69706C65 
 5033      4661696C 
 5033      75726573 
 5033      00
 5034              		.text
 5035              		.align 2
 5037              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC2Ev:
 5038              	.LFB1418:
 5039              		.loc 3 159 0
 5040              		.cfi_startproc
 5041 26c6 55       		pushq	%rbp
 5042              		.cfi_def_cfa_offset 16
 5043              		.cfi_offset 6, -16
 5044 26c7 4889E5   		movq	%rsp, %rbp
 5045              		.cfi_def_cfa_register 6
 5046 26ca 4883EC10 		subq	$16, %rsp
 5047 26ce 48897DF8 		movq	%rdi, -8(%rbp)
 5048              	.LBB86:
 5049              		.loc 3 159 0
 5050 26d2 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 5050      00
 5051 26d7 4889C2   		movq	%rax, %rdx
 5052 26da 488B45F8 		movq	-8(%rbp), %rax
 5053 26de 41B89F00 		movl	$159, %r8d
 5053      0000
 5054 26e4 B9000000 		movl	$.LC1, %ecx
 5054      00
 5055 26e9 BE000000 		movl	$.LC40, %esi
 5055      00
 5056 26ee 4889C7   		movq	%rax, %rdi
 5057 26f1 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 5057      00
 5058 26f6 BA000000 		movl	$_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE+16, %edx
 5058      00
 5059 26fb 488B45F8 		movq	-8(%rbp), %rax
 5060 26ff 488910   		movq	%rdx, (%rax)
 5061              	.LBE86:
 5062 2702 90       		nop
 5063 2703 C9       		leave
 5064              		.cfi_def_cfa 7, 8
 5065 2704 C3       		ret
 5066              		.cfi_endproc
 5067              	.LFE1418:
 5069              		.set	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev,_ZN12_GLOBAL__N_142TestXmlT
 5070              		.local	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE
 5071              		.comm	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE,56,32
 5072              		.local	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE
 5073              		.comm	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE,1,1
 5074 2705 90       		.align 2
 5076              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD2Ev:
 5077              	.LFB1422:
 5078              		.loc 3 159 0
 5079              		.cfi_startproc
 5080 2706 55       		pushq	%rbp
 5081              		.cfi_def_cfa_offset 16
 5082              		.cfi_offset 6, -16
 5083 2707 4889E5   		movq	%rsp, %rbp
 5084              		.cfi_def_cfa_register 6
 5085 270a 4883EC10 		subq	$16, %rsp
 5086 270e 48897DF8 		movq	%rdi, -8(%rbp)
 5087              	.LBB87:
 5088              		.loc 3 159 0
 5089 2712 488B45F8 		movq	-8(%rbp), %rax
 5090 2716 4889C7   		movq	%rax, %rdi
 5091 2719 E83ED9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 5091      FF
 5092              	.LBE87:
 5093 271e 90       		nop
 5094 271f C9       		leave
 5095              		.cfi_def_cfa 7, 8
 5096 2720 C3       		ret
 5097              		.cfi_endproc
 5098              	.LFE1422:
 5100              		.set	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev,_ZN12_GLOBAL__N_144XmlTes
 5101 2721 90       		.align 2
 5103              	_ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv:
 5104              	.LFB1420:
 5105              		.loc 3 159 0
 5106              		.cfi_startproc
 5107              		.cfi_personality 0x3,__gxx_personality_v0
 5108              		.cfi_lsda 0x3,.LLSDA1420
 5109 2722 55       		pushq	%rbp
 5110              		.cfi_def_cfa_offset 16
 5111              		.cfi_offset 6, -16
 5112 2723 4889E5   		movq	%rsp, %rbp
 5113              		.cfi_def_cfa_register 6
 5114 2726 4154     		pushq	%r12
 5115 2728 53       		pushq	%rbx
 5116 2729 4881EC00 		subq	$512, %rsp
 5116      020000
 5117              		.cfi_offset 12, -24
 5118              		.cfi_offset 3, -32
 5119 2730 4889BDF8 		movq	%rdi, -520(%rbp)
 5119      FDFFFF
 5120              		.loc 3 159 0
 5121 2737 64488B04 		movq	%fs:40, %rax
 5121      25280000 
 5121      00
 5122 2740 488945E8 		movq	%rax, -24(%rbp)
 5123 2744 31C0     		xorl	%eax, %eax
 5124 2746 C6850FFE 		movb	$0, -497(%rbp)
 5124      FFFF00
 5125              	.LBB88:
 5126 274d 488B85F8 		movq	-520(%rbp), %rax
 5126      FDFFFF
 5127 2754 488D5008 		leaq	8(%rax), %rdx
 5128 2758 488D8540 		leaq	-448(%rbp), %rax
 5128      FEFFFF
 5129 275f 4889D6   		movq	%rdx, %rsi
 5130 2762 4889C7   		movq	%rax, %rdi
 5131              	.LEHB143:
 5132 2765 E82EFFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE
 5132      FF
 5133              	.LEHE143:
 5134              		.loc 3 159 0 is_stmt 0 discriminator 1
 5135 276a C6850FFE 		movb	$1, -497(%rbp)
 5135      FFFF01
 5136 2771 488B85F8 		movq	-520(%rbp), %rax
 5136      FDFFFF
 5137 2778 488D5008 		leaq	8(%rax), %rdx
 5138 277c 488D8540 		leaq	-448(%rbp), %rax
 5138      FEFFFF
 5139 2783 4889D6   		movq	%rdx, %rsi
 5140 2786 4889C7   		movq	%rax, %rdi
 5141              	.LEHB144:
 5142 2789 E8EB1700 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT
 5142      00
 5143              	.LEHE144:
 5144              		.loc 3 159 0 discriminator 3
 5145 278e 488D8540 		leaq	-448(%rbp), %rax
 5145      FEFFFF
 5146 2795 4889C7   		movq	%rax, %rdi
 5147              	.LEHB145:
 5148 2798 E869FFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
 5148      FF
 5149              	.LEHE145:
 5150              	.LBE88:
 5151              		.loc 3 159 0
 5152 279d E9660200 		jmp	.L260
 5152      00
 5153              	.L275:
 5154 27a2 4989C4   		movq	%rax, %r12
 5155 27a5 4889D3   		movq	%rdx, %rbx
 5156              	.LBB89:
 5157 27a8 488D8540 		leaq	-448(%rbp), %rax
 5157      FEFFFF
 5158 27af 4889C7   		movq	%rax, %rdi
 5159 27b2 E84FFFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
 5159      FF
 5160 27b7 4C89E0   		movq	%r12, %rax
 5161 27ba 4889DA   		movq	%rbx, %rdx
 5162 27bd EB00     		jmp	.L262
 5163              	.L274:
 5164              	.L262:
 5165 27bf 4883FA01 		cmpq	$1, %rdx
 5166 27c3 740F     		je	.L264
 5167 27c5 4883FA02 		cmpq	$2, %rdx
 5168 27c9 0F84A700 		je	.L265
 5168      0000
 5169 27cf E94B0100 		jmp	.L280
 5169      00
 5170              	.L264:
 5171              	.LBE89:
 5172              	.LBB90:
 5173 27d4 4889C7   		movq	%rax, %rdi
 5174 27d7 E8000000 		call	__cxa_begin_catch
 5174      00
 5175 27dc 48898510 		movq	%rax, -496(%rbp)
 5175      FEFFFF
 5176 27e3 488B8510 		movq	-496(%rbp), %rax
 5176      FEFFFF
 5177 27ea 488B00   		movq	(%rax), %rax
 5178 27ed 4883C010 		addq	$16, %rax
 5179 27f1 488B00   		movq	(%rax), %rax
 5180 27f4 488B9510 		movq	-496(%rbp), %rdx
 5180      FEFFFF
 5181 27fb 4889D7   		movq	%rdx, %rdi
 5182 27fe FFD0     		call	*%rax
 5183 2800 4889C3   		movq	%rax, %rbx
 5184 2803 488B8510 		movq	-496(%rbp), %rax
 5184      FEFFFF
 5185 280a 4889C7   		movq	%rax, %rdi
 5186              	.LEHB146:
 5187 280d E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5187      00
 5188 2812 4189C4   		movl	%eax, %r12d
 5189 2815 488B8510 		movq	-496(%rbp), %rax
 5189      FEFFFF
 5190 281c 4889C7   		movq	%rax, %rdi
 5191 281f E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5191      00
 5192              		.loc 3 159 0 discriminator 5
 5193 2824 4889C1   		movq	%rax, %rcx
 5194 2827 488B85F8 		movq	-520(%rbp), %rax
 5194      FDFFFF
 5195 282e 488B5008 		movq	8(%rax), %rdx
 5196 2832 488B85F8 		movq	-520(%rbp), %rax
 5196      FDFFFF
 5197 2839 488B7010 		movq	16(%rax), %rsi
 5198 283d 488D8520 		leaq	-480(%rbp), %rax
 5198      FEFFFF
 5199 2844 4589E0   		movl	%r12d, %r8d
 5200 2847 4889C7   		movq	%rax, %rdi
 5201 284a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5201      00
 5202              		.loc 3 159 0 discriminator 9
 5203 284f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5203      00
 5204 2854 488B00   		movq	(%rax), %rax
 5205 2857 488D8D20 		leaq	-480(%rbp), %rcx
 5205      FEFFFF
 5206 285e 4889DA   		movq	%rbx, %rdx
 5207 2861 4889CE   		movq	%rcx, %rsi
 5208 2864 4889C7   		movq	%rax, %rdi
 5209 2867 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5209      00
 5210              	.LEHE146:
 5211              		.loc 3 159 0 discriminator 13
 5212 286c E8000000 		call	__cxa_end_catch
 5212      00
 5213              	.LBE90:
 5214 2871 E9920100 		jmp	.L260
 5214      00
 5215              	.L265:
 5216              	.LBB91:
 5217              		.loc 3 159 0
 5218 2876 4889C7   		movq	%rax, %rdi
 5219 2879 E8000000 		call	__cxa_begin_catch
 5219      00
 5220 287e 48898518 		movq	%rax, -488(%rbp)
 5220      FEFFFF
 5221              	.LBB92:
 5222 2885 488D8540 		leaq	-448(%rbp), %rax
 5222      FEFFFF
 5223 288c 4889C7   		movq	%rax, %rdi
 5224              	.LEHB147:
 5225 288f E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5225      00
 5226              	.LEHE147:
 5227              		.loc 3 159 0 discriminator 15
 5228 2894 488B8518 		movq	-488(%rbp), %rax
 5228      FEFFFF
 5229 289b 488B00   		movq	(%rax), %rax
 5230 289e 4883C010 		addq	$16, %rax
 5231 28a2 488B00   		movq	(%rax), %rax
 5232 28a5 488B9518 		movq	-488(%rbp), %rdx
 5232      FEFFFF
 5233 28ac 4889D7   		movq	%rdx, %rdi
 5234 28af FFD0     		call	*%rax
 5235 28b1 4889C3   		movq	%rax, %rbx
 5236 28b4 488D8540 		leaq	-448(%rbp), %rax
 5236      FEFFFF
 5237 28bb BE000000 		movl	$.LC3, %esi
 5237      00
 5238 28c0 4889C7   		movq	%rax, %rdi
 5239              	.LEHB148:
 5240 28c3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5240      00
 5241 28c8 4889DE   		movq	%rbx, %rsi
 5242 28cb 4889C7   		movq	%rax, %rdi
 5243 28ce E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5243      00
 5244              		.loc 3 159 0 discriminator 19
 5245 28d3 488D8540 		leaq	-448(%rbp), %rax
 5245      FEFFFF
 5246 28da 4889C7   		movq	%rax, %rdi
 5247 28dd E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5247      00
 5248 28e2 4989C4   		movq	%rax, %r12
 5249 28e5 488B85F8 		movq	-520(%rbp), %rax
 5249      FDFFFF
 5250 28ec 488D5808 		leaq	8(%rax), %rbx
 5251 28f0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5251      00
 5252              		.loc 3 159 0 discriminator 21
 5253 28f5 488B00   		movq	(%rax), %rax
 5254 28f8 4C89E2   		movq	%r12, %rdx
 5255 28fb 4889DE   		movq	%rbx, %rsi
 5256 28fe 4889C7   		movq	%rax, %rdi
 5257 2901 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5257      00
 5258              	.LEHE148:
 5259              		.loc 3 159 0 discriminator 25
 5260 2906 488D8540 		leaq	-448(%rbp), %rax
 5260      FEFFFF
 5261 290d 4889C7   		movq	%rax, %rdi
 5262              	.LEHB149:
 5263 2910 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5263      00
 5264              	.LEHE149:
 5265              	.LBE92:
 5266              		.loc 3 159 0 discriminator 26
 5267 2915 E8000000 		call	__cxa_end_catch
 5267      00
 5268              	.LBE91:
 5269 291a E9E90000 		jmp	.L260
 5269      00
 5270              	.L280:
 5271              		.loc 3 159 0
 5272 291f 4889C7   		movq	%rax, %rdi
 5273 2922 E8000000 		call	__cxa_begin_catch
 5273      00
 5274 2927 80BD0FFE 		cmpb	$0, -497(%rbp)
 5274      FFFF00
 5275 292e 7443     		je	.L267
 5276              		.loc 3 159 0 discriminator 28
 5277 2930 488B85F8 		movq	-520(%rbp), %rax
 5277      FDFFFF
 5278 2937 488D4808 		leaq	8(%rax), %rcx
 5279 293b 488D8520 		leaq	-480(%rbp), %rax
 5279      FEFFFF
 5280 2942 BA9F0000 		movl	$159, %edx
 5280      00
 5281 2947 4889CE   		movq	%rcx, %rsi
 5282 294a 4889C7   		movq	%rax, %rdi
 5283              	.LEHB150:
 5284 294d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5284      00
 5285              		.loc 3 159 0 discriminator 31
 5286 2952 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5286      00
 5287 2957 488B00   		movq	(%rax), %rax
 5288 295a 488D8D20 		leaq	-480(%rbp), %rcx
 5288      FEFFFF
 5289 2961 BA000000 		movl	$.LC4, %edx
 5289      00
 5290 2966 4889CE   		movq	%rcx, %rsi
 5291 2969 4889C7   		movq	%rax, %rdi
 5292 296c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5292      00
 5293 2971 EB41     		jmp	.L268
 5294              	.L267:
 5295              		.loc 3 159 0 discriminator 29
 5296 2973 488B85F8 		movq	-520(%rbp), %rax
 5296      FDFFFF
 5297 297a 488D4808 		leaq	8(%rax), %rcx
 5298 297e 488D8520 		leaq	-480(%rbp), %rax
 5298      FEFFFF
 5299 2985 BA9F0000 		movl	$159, %edx
 5299      00
 5300 298a 4889CE   		movq	%rcx, %rsi
 5301 298d 4889C7   		movq	%rax, %rdi
 5302 2990 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5302      00
 5303              		.loc 3 159 0 discriminator 38
 5304 2995 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5304      00
 5305 299a 488B00   		movq	(%rax), %rax
 5306 299d 488D8D20 		leaq	-480(%rbp), %rcx
 5306      FEFFFF
 5307 29a4 BA000000 		movl	$.LC5, %edx
 5307      00
 5308 29a9 4889CE   		movq	%rcx, %rsi
 5309 29ac 4889C7   		movq	%rax, %rdi
 5310 29af E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5310      00
 5311              	.LEHE150:
 5312              	.L268:
 5313              	.LEHB151:
 5314              		.loc 3 159 0 discriminator 43
 5315 29b4 E8000000 		call	__cxa_end_catch
 5315      00
 5316 29b9 EB4D     		jmp	.L260
 5317              	.L276:
 5318 29bb 4889C3   		movq	%rax, %rbx
 5319              	.LBB94:
 5320              		.loc 3 159 0
 5321 29be E8000000 		call	__cxa_end_catch
 5321      00
 5322 29c3 4889D8   		movq	%rbx, %rax
 5323 29c6 4889C7   		movq	%rax, %rdi
 5324 29c9 E8000000 		call	_Unwind_Resume
 5324      00
 5325              	.LEHE151:
 5326              	.L278:
 5327 29ce 4889C3   		movq	%rax, %rbx
 5328              	.LBE94:
 5329              	.LBB95:
 5330              	.LBB93:
 5331 29d1 488D8540 		leaq	-448(%rbp), %rax
 5331      FEFFFF
 5332 29d8 4889C7   		movq	%rax, %rdi
 5333 29db E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5333      00
 5334 29e0 EB03     		jmp	.L271
 5335              	.L277:
 5336 29e2 4889C3   		movq	%rax, %rbx
 5337              	.L271:
 5338              	.LBE93:
 5339 29e5 E8000000 		call	__cxa_end_catch
 5339      00
 5340 29ea 4889D8   		movq	%rbx, %rax
 5341 29ed 4889C7   		movq	%rax, %rdi
 5342              	.LEHB152:
 5343 29f0 E8000000 		call	_Unwind_Resume
 5343      00
 5344              	.LEHE152:
 5345              	.L279:
 5346 29f5 4889C3   		movq	%rax, %rbx
 5347              	.LBE95:
 5348 29f8 E8000000 		call	__cxa_end_catch
 5348      00
 5349 29fd 4889D8   		movq	%rbx, %rax
 5350 2a00 4889C7   		movq	%rax, %rdi
 5351              	.LEHB153:
 5352 2a03 E8000000 		call	_Unwind_Resume
 5352      00
 5353              	.LEHE153:
 5354              	.L260:
 5355 2a08 488B45E8 		movq	-24(%rbp), %rax
 5356 2a0c 64483304 		xorq	%fs:40, %rax
 5356      25280000 
 5356      00
 5357 2a15 7405     		je	.L273
 5358 2a17 E8000000 		call	__stack_chk_fail
 5358      00
 5359              	.L273:
 5360 2a1c 4881C400 		addq	$512, %rsp
 5360      020000
 5361 2a23 5B       		popq	%rbx
 5362 2a24 415C     		popq	%r12
 5363 2a26 5D       		popq	%rbp
 5364              		.cfi_def_cfa 7, 8
 5365 2a27 C3       		ret
 5366              		.cfi_endproc
 5367              	.LFE1420:
 5368              		.section	.gcc_except_table
 5369              		.align 4
 5370              	.LLSDA1420:
 5371 041c FF       		.byte	0xff
 5372 041d 03       		.byte	0x3
 5373 041e 55       		.uleb128 .LLSDATT1420-.LLSDATTD1420
 5374              	.LLSDATTD1420:
 5375 041f 01       		.byte	0x1
 5376 0420 3C       		.uleb128 .LLSDACSE1420-.LLSDACSB1420
 5377              	.LLSDACSB1420:
 5378 0421 43       		.uleb128 .LEHB143-.LFB1420
 5379 0422 05       		.uleb128 .LEHE143-.LEHB143
 5380 0423 9D01     		.uleb128 .L274-.LFB1420
 5381 0425 05       		.uleb128 0x5
 5382 0426 67       		.uleb128 .LEHB144-.LFB1420
 5383 0427 05       		.uleb128 .LEHE144-.LEHB144
 5384 0428 8001     		.uleb128 .L275-.LFB1420
 5385 042a 07       		.uleb128 0x7
 5386 042b 76       		.uleb128 .LEHB145-.LFB1420
 5387 042c 05       		.uleb128 .LEHE145-.LEHB145
 5388 042d 9D01     		.uleb128 .L274-.LFB1420
 5389 042f 05       		.uleb128 0x5
 5390 0430 EB01     		.uleb128 .LEHB146-.LFB1420
 5391 0432 5F       		.uleb128 .LEHE146-.LEHB146
 5392 0433 9905     		.uleb128 .L276-.LFB1420
 5393 0435 00       		.uleb128 0
 5394 0436 ED02     		.uleb128 .LEHB147-.LFB1420
 5395 0438 05       		.uleb128 .LEHE147-.LEHB147
 5396 0439 C005     		.uleb128 .L277-.LFB1420
 5397 043b 00       		.uleb128 0
 5398 043c A103     		.uleb128 .LEHB148-.LFB1420
 5399 043e 43       		.uleb128 .LEHE148-.LEHB148
 5400 043f AC05     		.uleb128 .L278-.LFB1420
 5401 0441 00       		.uleb128 0
 5402 0442 EE03     		.uleb128 .LEHB149-.LFB1420
 5403 0444 05       		.uleb128 .LEHE149-.LEHB149
 5404 0445 C005     		.uleb128 .L277-.LFB1420
 5405 0447 00       		.uleb128 0
 5406 0448 AB04     		.uleb128 .LEHB150-.LFB1420
 5407 044a 67       		.uleb128 .LEHE150-.LEHB150
 5408 044b D305     		.uleb128 .L279-.LFB1420
 5409 044d 00       		.uleb128 0
 5410 044e 9205     		.uleb128 .LEHB151-.LFB1420
 5411 0450 1A       		.uleb128 .LEHE151-.LEHB151
 5412 0451 00       		.uleb128 0
 5413 0452 00       		.uleb128 0
 5414 0453 CE05     		.uleb128 .LEHB152-.LFB1420
 5415 0455 05       		.uleb128 .LEHE152-.LEHB152
 5416 0456 00       		.uleb128 0
 5417 0457 00       		.uleb128 0
 5418 0458 E105     		.uleb128 .LEHB153-.LFB1420
 5419 045a 05       		.uleb128 .LEHE153-.LEHB153
 5420 045b 00       		.uleb128 0
 5421 045c 00       		.uleb128 0
 5422              	.LLSDACSE1420:
 5423 045d 03       		.byte	0x3
 5424 045e 00       		.byte	0
 5425 045f 02       		.byte	0x2
 5426 0460 7D       		.byte	0x7d
 5427 0461 01       		.byte	0x1
 5428 0462 7D       		.byte	0x7d
 5429 0463 00       		.byte	0
 5430 0464 7D       		.byte	0x7d
 5431 0465 000000   		.align 4
 5432 0468 00000000 		.long	0
 5433              	
 5434 046c 00000000 		.long	_ZTISt9exception
 5435 0470 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5436              	.LLSDATT1420:
 5437              		.text
 5439              		.section	.rodata
 5440              	.LC41:
 5441 07fe 65787065 		.string	"expected one but was two"
 5441      63746564 
 5441      206F6E65 
 5441      20627574 
 5441      20776173 
 5442 0817 00       		.align 8
 5443              	.LC42:
 5444 0818 3C3F786D 		.ascii	"<?xml version=\"1.0\""
 5444      6C207665 
 5444      7273696F 
 5444      6E3D2231 
 5444      2E3022
 5445 082b 3F3E3C75 		.string	"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"2\" time=\"1.1\"><test suite
 5445      6E697474 
 5445      6573742D 
 5445      72657375 
 5445      6C747320 
 5446              		.text
 5447              		.align 2
 5449              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv:
 5450              	.LFB1424:
 160:TestXmlTestReporter.cpp **** {
 5451              		.loc 3 160 0 is_stmt 1
 5452              		.cfi_startproc
 5453              		.cfi_personality 0x3,__gxx_personality_v0
 5454              		.cfi_lsda 0x3,.LLSDA1424
 5455 2a28 55       		pushq	%rbp
 5456              		.cfi_def_cfa_offset 16
 5457              		.cfi_offset 6, -16
 5458 2a29 4889E5   		movq	%rsp, %rbp
 5459              		.cfi_def_cfa_register 6
 5460 2a2c 53       		pushq	%rbx
 5461 2a2d 4881ECB8 		subq	$184, %rsp
 5461      000000
 5462              		.cfi_offset 3, -24
 5463 2a34 4889BD48 		movq	%rdi, -184(%rbp)
 5463      FFFFFF
 5464              		.loc 3 160 0
 5465 2a3b 64488B04 		movq	%fs:40, %rax
 5465      25280000 
 5465      00
 5466 2a44 488945E8 		movq	%rax, -24(%rbp)
 5467 2a48 31C0     		xorl	%eax, %eax
 161:TestXmlTestReporter.cpp ****     TestDetails const failedDetails1("FailedTest", "suite", "fail.h", 1);
 5468              		.loc 3 161 0
 5469 2a4a 488D8560 		leaq	-160(%rbp), %rax
 5469      FFFFFF
 5470 2a51 41B80100 		movl	$1, %r8d
 5470      0000
 5471 2a57 B9000000 		movl	$.LC34, %ecx
 5471      00
 5472 2a5c BA000000 		movl	$.LC7, %edx
 5472      00
 5473 2a61 BE000000 		movl	$.LC35, %esi
 5473      00
 5474 2a66 4889C7   		movq	%rax, %rdi
 5475              	.LEHB154:
 5476 2a69 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5476      00
 162:TestXmlTestReporter.cpp ****     TestDetails const failedDetails2("FailedTest", "suite", "fail.h", 31);
 5477              		.loc 3 162 0
 5478 2a6e 488D4580 		leaq	-128(%rbp), %rax
 5479 2a72 41B81F00 		movl	$31, %r8d
 5479      0000
 5480 2a78 B9000000 		movl	$.LC34, %ecx
 5480      00
 5481 2a7d BA000000 		movl	$.LC7, %edx
 5481      00
 5482 2a82 BE000000 		movl	$.LC35, %esi
 5482      00
 5483 2a87 4889C7   		movq	%rax, %rdi
 5484 2a8a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5484      00
 163:TestXmlTestReporter.cpp **** 
 164:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(failedDetails1);
 5485              		.loc 3 164 0
 5486 2a8f 488B8548 		movq	-184(%rbp), %rax
 5486      FFFFFF
 5487 2a96 488D9078 		leaq	376(%rax), %rdx
 5487      010000
 5488 2a9d 488D8560 		leaq	-160(%rbp), %rax
 5488      FFFFFF
 5489 2aa4 4889C6   		movq	%rax, %rsi
 5490 2aa7 4889D7   		movq	%rdx, %rdi
 5491 2aaa E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 5491      00
 165:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails1, "expected 1 but was 2");
 5492              		.loc 3 165 0
 5493 2aaf 488B8548 		movq	-184(%rbp), %rax
 5493      FFFFFF
 5494 2ab6 488D8878 		leaq	376(%rax), %rcx
 5494      010000
 5495 2abd 488D8560 		leaq	-160(%rbp), %rax
 5495      FFFFFF
 5496 2ac4 BA000000 		movl	$.LC36, %edx
 5496      00
 5497 2ac9 4889C6   		movq	%rax, %rsi
 5498 2acc 4889CF   		movq	%rcx, %rdi
 5499 2acf E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 5499      00
 166:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails2, "expected one but was two");
 5500              		.loc 3 166 0
 5501 2ad4 488B8548 		movq	-184(%rbp), %rax
 5501      FFFFFF
 5502 2adb 488D8878 		leaq	376(%rax), %rcx
 5502      010000
 5503 2ae2 488D4580 		leaq	-128(%rbp), %rax
 5504 2ae6 BA000000 		movl	$.LC41, %edx
 5504      00
 5505 2aeb 4889C6   		movq	%rax, %rsi
 5506 2aee 4889CF   		movq	%rcx, %rdi
 5507 2af1 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 5507      00
 167:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(failedDetails1, 0.1f);
 5508              		.loc 3 167 0
 5509 2af6 488B8548 		movq	-184(%rbp), %rax
 5509      FFFFFF
 5510 2afd 488D9078 		leaq	376(%rax), %rdx
 5510      010000
 5511 2b04 488D8560 		leaq	-160(%rbp), %rax
 5511      FFFFFF
 5512 2b0b F30F1005 		movss	.LC10(%rip), %xmm0
 5512      00000000 
 5513 2b13 4889C6   		movq	%rax, %rsi
 5514 2b16 4889D7   		movq	%rdx, %rdi
 5515 2b19 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 5515      00
 168:TestXmlTestReporter.cpp **** 
 169:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 2, 1.1f);
 5516              		.loc 3 169 0
 5517 2b1e 488B8548 		movq	-184(%rbp), %rax
 5517      FFFFFF
 5518 2b25 48057801 		addq	$376, %rax
 5518      0000
 5519 2b2b F30F1005 		movss	.LC38(%rip), %xmm0
 5519      00000000 
 5520 2b33 B9020000 		movl	$2, %ecx
 5520      00
 5521 2b38 BA010000 		movl	$1, %edx
 5521      00
 5522 2b3d BE010000 		movl	$1, %esi
 5522      00
 5523 2b42 4889C7   		movq	%rax, %rdi
 5524 2b45 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 5524      00
 5525              	.LEHE154:
 170:TestXmlTestReporter.cpp **** 
 171:TestXmlTestReporter.cpp ****     char const* expected =
 172:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 173:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"2\" time=\"1.1\">"
 174:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"FailedTest\" time=\"0.1\">"
 175:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(1) : expected 1 but was 2\"/>"
 176:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(31) : expected one but was two\"/>"
 177:TestXmlTestReporter.cpp ****         "</test>"
 178:TestXmlTestReporter.cpp ****         "</unittest-results>";
 5526              		.loc 3 178 0
 5527 2b4a 48C78558 		movq	$.LC42, -168(%rbp)
 5527      FFFFFF00 
 5527      000000
 5528              	.LEHB155:
 179:TestXmlTestReporter.cpp **** 
 180:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 5529              		.loc 3 180 0
 5530 2b55 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5530      00
 5531 2b5a 488B08   		movq	(%rax), %rcx
 5532 2b5d 488D45A0 		leaq	-96(%rbp), %rax
 5533 2b61 BAB40000 		movl	$180, %edx
 5533      00
 5534 2b66 4889CE   		movq	%rcx, %rsi
 5535 2b69 4889C7   		movq	%rax, %rdi
 5536 2b6c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5536      00
 5537              		.loc 3 180 0 is_stmt 0 discriminator 2
 5538 2b71 488B9548 		movq	-184(%rbp), %rdx
 5538      FFFFFF
 5539 2b78 488D45C0 		leaq	-64(%rbp), %rax
 5540 2b7c 4889D6   		movq	%rdx, %rsi
 5541 2b7f 4889C7   		movq	%rax, %rdi
 5542 2b82 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 5542      00
 5543              	.LEHE155:
 5544              	.LEHB156:
 5545              		.loc 3 180 0 discriminator 4
 5546 2b87 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5546      00
 5547 2b8c 488B00   		movq	(%rax), %rax
 5548 2b8f 488D4DA0 		leaq	-96(%rbp), %rcx
 5549 2b93 488D55C0 		leaq	-64(%rbp), %rdx
 5550 2b97 488DB558 		leaq	-168(%rbp), %rsi
 5550      FFFFFF
 5551 2b9e 4889C7   		movq	%rax, %rdi
 5552 2ba1 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 5552      00
 5553              	.LEHE156:
 5554              		.loc 3 180 0 discriminator 8
 5555 2ba6 488D45C0 		leaq	-64(%rbp), %rax
 5556 2baa 4889C7   		movq	%rax, %rdi
 5557              	.LEHB157:
 5558 2bad E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 5558      00
 5559              	.LEHE157:
 181:TestXmlTestReporter.cpp **** }
 5560              		.loc 3 181 0 is_stmt 1
 5561 2bb2 EB6E     		jmp	.L281
 5562              	.L288:
 5563 2bb4 4889C3   		movq	%rax, %rbx
 180:TestXmlTestReporter.cpp **** }
 5564              		.loc 3 180 0
 5565 2bb7 488D45C0 		leaq	-64(%rbp), %rax
 5566 2bbb 4889C7   		movq	%rax, %rdi
 5567 2bbe E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 5567      00
 5568 2bc3 4889D8   		movq	%rbx, %rax
 5569 2bc6 EB00     		jmp	.L283
 5570              	.L287:
 5571              	.L283:
 5572 2bc8 4889C7   		movq	%rax, %rdi
 5573 2bcb E8000000 		call	__cxa_begin_catch
 5573      00
 5574              	.LEHB158:
 5575 2bd0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5575      00
 5576 2bd5 488B08   		movq	(%rax), %rcx
 5577 2bd8 488D45A0 		leaq	-96(%rbp), %rax
 5578 2bdc BAB40000 		movl	$180, %edx
 5578      00
 5579 2be1 4889CE   		movq	%rcx, %rsi
 5580 2be4 4889C7   		movq	%rax, %rdi
 5581 2be7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5581      00
 180:TestXmlTestReporter.cpp **** }
 5582              		.loc 3 180 0 is_stmt 0 discriminator 14
 5583 2bec E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5583      00
 5584 2bf1 488B00   		movq	(%rax), %rax
 5585 2bf4 488D4DA0 		leaq	-96(%rbp), %rcx
 5586 2bf8 BA000000 		movl	$.LC12, %edx
 5586      00
 5587 2bfd 4889CE   		movq	%rcx, %rsi
 5588 2c00 4889C7   		movq	%rax, %rdi
 5589 2c03 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5589      00
 5590              	.LEHE158:
 5591              	.LEHB159:
 180:TestXmlTestReporter.cpp **** }
 5592              		.loc 3 180 0 discriminator 18
 5593 2c08 E8000000 		call	__cxa_end_catch
 5593      00
 5594              	.LEHE159:
 5595              		.loc 3 181 0 is_stmt 1 discriminator 18
 5596 2c0d EB13     		jmp	.L281
 5597              	.L289:
 5598 2c0f 4889C3   		movq	%rax, %rbx
 180:TestXmlTestReporter.cpp **** }
 5599              		.loc 3 180 0
 5600 2c12 E8000000 		call	__cxa_end_catch
 5600      00
 5601 2c17 4889D8   		movq	%rbx, %rax
 5602 2c1a 4889C7   		movq	%rax, %rdi
 5603              	.LEHB160:
 5604 2c1d E8000000 		call	_Unwind_Resume
 5604      00
 5605              	.LEHE160:
 5606              	.L281:
 5607              		.loc 3 181 0
 5608 2c22 488B45E8 		movq	-24(%rbp), %rax
 5609 2c26 64483304 		xorq	%fs:40, %rax
 5609      25280000 
 5609      00
 5610 2c2f 7405     		je	.L286
 5611 2c31 E8000000 		call	__stack_chk_fail
 5611      00
 5612              	.L286:
 5613 2c36 4881C4B8 		addq	$184, %rsp
 5613      000000
 5614 2c3d 5B       		popq	%rbx
 5615 2c3e 5D       		popq	%rbp
 5616              		.cfi_def_cfa 7, 8
 5617 2c3f C3       		ret
 5618              		.cfi_endproc
 5619              	.LFE1424:
 5620              		.section	.gcc_except_table
 5621              		.align 4
 5622              	.LLSDA1424:
 5623 0474 FF       		.byte	0xff
 5624 0475 03       		.byte	0x3
 5625 0476 31       		.uleb128 .LLSDATT1424-.LLSDATTD1424
 5626              	.LLSDATTD1424:
 5627 0477 01       		.byte	0x1
 5628 0478 27       		.uleb128 .LLSDACSE1424-.LLSDACSB1424
 5629              	.LLSDACSB1424:
 5630 0479 41       		.uleb128 .LEHB154-.LFB1424
 5631 047a E101     		.uleb128 .LEHE154-.LEHB154
 5632 047c 00       		.uleb128 0
 5633 047d 00       		.uleb128 0
 5634 047e AD02     		.uleb128 .LEHB155-.LFB1424
 5635 0480 32       		.uleb128 .LEHE155-.LEHB155
 5636 0481 A003     		.uleb128 .L287-.LFB1424
 5637 0483 01       		.uleb128 0x1
 5638 0484 DF02     		.uleb128 .LEHB156-.LFB1424
 5639 0486 1F       		.uleb128 .LEHE156-.LEHB156
 5640 0487 8C03     		.uleb128 .L288-.LFB1424
 5641 0489 03       		.uleb128 0x3
 5642 048a 8503     		.uleb128 .LEHB157-.LFB1424
 5643 048c 05       		.uleb128 .LEHE157-.LEHB157
 5644 048d A003     		.uleb128 .L287-.LFB1424
 5645 048f 01       		.uleb128 0x1
 5646 0490 A803     		.uleb128 .LEHB158-.LFB1424
 5647 0492 38       		.uleb128 .LEHE158-.LEHB158
 5648 0493 E703     		.uleb128 .L289-.LFB1424
 5649 0495 00       		.uleb128 0
 5650 0496 E003     		.uleb128 .LEHB159-.LFB1424
 5651 0498 05       		.uleb128 .LEHE159-.LEHB159
 5652 0499 00       		.uleb128 0
 5653 049a 00       		.uleb128 0
 5654 049b F503     		.uleb128 .LEHB160-.LFB1424
 5655 049d 05       		.uleb128 .LEHE160-.LEHB160
 5656 049e 00       		.uleb128 0
 5657 049f 00       		.uleb128 0
 5658              	.LLSDACSE1424:
 5659 04a0 01       		.byte	0x1
 5660 04a1 00       		.byte	0
 5661 04a2 00       		.byte	0
 5662 04a3 7D       		.byte	0x7d
 5663              		.align 4
 5664 04a4 00000000 		.long	0
 5665              	
 5666              	.LLSDATT1424:
 5667              		.text
 5669              		.section	.rodata
 5670              	.LC43:
 5671 092c 556E6861 		.string	"Unhandled system exception"
 5671      6E646C65 
 5671      64207379 
 5671      7374656D 
 5671      20657863 
 5672              	.LC44:
 5673 0947 556E6861 		.string	"Unhandled exception: Crash!"
 5673      6E646C65 
 5673      64206578 
 5673      63657074 
 5673      696F6E3A 
 5674              		.text
 5676              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper
 5677              	.LFB1453:
 5678              		.file 4 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5679              		.loc 4 16 0
 5680              		.cfi_startproc
 5681              		.cfi_personality 0x3,__gxx_personality_v0
 5682              		.cfi_lsda 0x3,.LLSDA1453
 5683 2c40 55       		pushq	%rbp
 5684              		.cfi_def_cfa_offset 16
 5685              		.cfi_offset 6, -16
 5686 2c41 4889E5   		movq	%rsp, %rbp
 5687              		.cfi_def_cfa_register 6
 5688 2c44 4154     		pushq	%r12
 5689 2c46 53       		pushq	%rbx
 5690 2c47 4881EC50 		subq	$1616, %rsp
 5690      060000
 5691              		.cfi_offset 12, -24
 5692              		.cfi_offset 3, -32
 5693 2c4e 4889BDA8 		movq	%rdi, -1624(%rbp)
 5693      F9FFFF
 5694 2c55 4889B5A0 		movq	%rsi, -1632(%rbp)
 5694      F9FFFF
 5695              		.loc 4 16 0
 5696 2c5c 64488B04 		movq	%fs:40, %rax
 5696      25280000 
 5696      00
 5697 2c65 488945E8 		movq	%rax, -24(%rbp)
 5698 2c69 31C0     		xorl	%eax, %eax
 5699              	.LEHB161:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5700              		.loc 4 18 0
 5701 2c6b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5701      00
 5702              	.LEHE161:
 5703 2c70 4889C2   		movq	%rax, %rdx
 5704 2c73 488B85A0 		movq	-1632(%rbp), %rax
 5704      F9FFFF
 5705 2c7a 488902   		movq	%rax, (%rdx)
 5706              	.LBB96:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5707              		.loc 4 23 0
 5708 2c7d 488D8580 		leaq	-1152(%rbp), %rax
 5708      FBFFFF
 5709 2c84 4889C7   		movq	%rax, %rdi
 5710              	.LEHB162:
 5711 2c87 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5711      00
 5712              	.LEHE162:
 5713              		.loc 4 23 0 is_stmt 0 discriminator 1
 5714 2c8c 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5714      000000
 5715 2c93 BE010000 		movl	$1, %esi
 5715      00
 5716 2c98 4889C7   		movq	%rax, %rdi
 5717 2c9b E8000000 		call	__sigsetjmp
 5717      00
 5718 2ca0 85C0     		testl	%eax, %eax
 5719 2ca2 0F95C0   		setne	%al
 5720 2ca5 84C0     		testb	%al, %al
 5721 2ca7 7423     		je	.L310
 5722              		.loc 4 23 0 discriminator 3
 5723 2ca9 BF080000 		movl	$8, %edi
 5723      00
 5724 2cae E8000000 		call	__cxa_allocate_exception
 5724      00
 5725 2cb3 48C70000 		movq	$.LC43, (%rax)
 5725      000000
 5726 2cba BA000000 		movl	$0, %edx
 5726      00
 5727 2cbf BE000000 		movl	$_ZTIPKc, %esi
 5727      00
 5728 2cc4 4889C7   		movq	%rax, %rdi
 5729              	.LEHB163:
 5730 2cc7 E8000000 		call	__cxa_throw
 5730      00
 5731              	.L310:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5732              		.loc 4 25 0 is_stmt 1
 5733 2ccc 488B85A8 		movq	-1624(%rbp), %rax
 5733      F9FFFF
 5734 2cd3 4889C7   		movq	%rax, %rdi
 5735 2cd6 E85FD7FF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv
 5735      FF
 5736              	.LEHE163:
  23:../ExecuteTest.h **** #endif
 5737              		.loc 4 23 0
 5738 2cdb 488D8580 		leaq	-1152(%rbp), %rax
 5738      FBFFFF
 5739 2ce2 4889C7   		movq	%rax, %rdi
 5740              	.LEHB164:
 5741 2ce5 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5741      00
 5742              	.LEHE164:
 5743              	.LBE96:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5744              		.loc 4 42 0
 5745 2cea E9F00100 		jmp	.L290
 5745      00
 5746              	.L305:
 5747 2cef 4989C4   		movq	%rax, %r12
 5748 2cf2 4889D3   		movq	%rdx, %rbx
 5749              	.LBB97:
  23:../ExecuteTest.h **** #endif
 5750              		.loc 4 23 0
 5751 2cf5 488D8580 		leaq	-1152(%rbp), %rax
 5751      FBFFFF
 5752 2cfc 4889C7   		movq	%rax, %rdi
 5753 2cff E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5753      00
 5754 2d04 4C89E0   		movq	%r12, %rax
 5755 2d07 4889DA   		movq	%rbx, %rdx
 5756 2d0a EB00     		jmp	.L294
 5757              	.L304:
 5758              	.L294:
 5759 2d0c 4883FA01 		cmpq	$1, %rdx
 5760 2d10 740F     		je	.L296
 5761 2d12 4883FA02 		cmpq	$2, %rdx
 5762 2d16 0F84A600 		je	.L297
 5762      0000
 5763 2d1c E9430100 		jmp	.L311
 5763      00
 5764              	.L296:
 5765              	.LBE97:
 5766              	.LBB98:
  27:../ExecuteTest.h **** 	{
 5767              		.loc 4 27 0
 5768 2d21 4889C7   		movq	%rax, %rdi
 5769 2d24 E8000000 		call	__cxa_begin_catch
 5769      00
 5770 2d29 488985B0 		movq	%rax, -1616(%rbp)
 5770      F9FFFF
  30:../ExecuteTest.h **** 	}
 5771              		.loc 4 30 0
 5772 2d30 488B85B0 		movq	-1616(%rbp), %rax
 5772      F9FFFF
 5773 2d37 488B00   		movq	(%rax), %rax
 5774 2d3a 4883C010 		addq	$16, %rax
 5775 2d3e 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5776              		.loc 4 29 0
 5777 2d41 488B95B0 		movq	-1616(%rbp), %rdx
 5777      F9FFFF
 5778 2d48 4889D7   		movq	%rdx, %rdi
 5779 2d4b FFD0     		call	*%rax
 5780 2d4d 4889C3   		movq	%rax, %rbx
 5781 2d50 488B85B0 		movq	-1616(%rbp), %rax
 5781      F9FFFF
 5782 2d57 4889C7   		movq	%rax, %rdi
 5783              	.LEHB165:
 5784 2d5a E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5784      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5785              		.loc 4 29 0 is_stmt 0 discriminator 1
 5786 2d5f 4189C4   		movl	%eax, %r12d
 5787 2d62 488B85B0 		movq	-1616(%rbp), %rax
 5787      F9FFFF
 5788 2d69 4889C7   		movq	%rax, %rdi
 5789 2d6c E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5789      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5790              		.loc 4 29 0 discriminator 2
 5791 2d71 4889C1   		movq	%rax, %rcx
 5792 2d74 488B85A0 		movq	-1632(%rbp), %rax
 5792      F9FFFF
 5793 2d7b 488B10   		movq	(%rax), %rdx
 5794 2d7e 488B85A0 		movq	-1632(%rbp), %rax
 5794      F9FFFF
 5795 2d85 488B7008 		movq	8(%rax), %rsi
 5796 2d89 488D85C0 		leaq	-1600(%rbp), %rax
 5796      F9FFFF
 5797 2d90 4589E0   		movl	%r12d, %r8d
 5798 2d93 4889C7   		movq	%rax, %rdi
 5799 2d96 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5799      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5800              		.loc 4 29 0 discriminator 4
 5801 2d9b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5801      00
 5802 2da0 488B00   		movq	(%rax), %rax
 5803 2da3 488D8DC0 		leaq	-1600(%rbp), %rcx
 5803      F9FFFF
 5804 2daa 4889DA   		movq	%rbx, %rdx
 5805 2dad 4889CE   		movq	%rcx, %rsi
 5806 2db0 4889C7   		movq	%rax, %rdi
 5807 2db3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5807      00
 5808              	.LEHE165:
  27:../ExecuteTest.h **** 	{
 5809              		.loc 4 27 0 is_stmt 1 discriminator 8
 5810 2db8 E8000000 		call	__cxa_end_catch
 5810      00
 5811              	.LBE98:
 5812              		.loc 4 42 0 discriminator 8
 5813 2dbd E91D0100 		jmp	.L290
 5813      00
 5814              	.L297:
 5815              	.LBB99:
  32:../ExecuteTest.h **** 	{
 5816              		.loc 4 32 0
 5817 2dc2 4889C7   		movq	%rax, %rdi
 5818 2dc5 E8000000 		call	__cxa_begin_catch
 5818      00
 5819 2dca 488985B8 		movq	%rax, -1608(%rbp)
 5819      F9FFFF
 5820              	.LBB100:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5821              		.loc 4 34 0
 5822 2dd1 488D85E0 		leaq	-1568(%rbp), %rax
 5822      F9FFFF
 5823 2dd8 4889C7   		movq	%rax, %rdi
 5824              	.LEHB166:
 5825 2ddb E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5825      00
 5826              	.LEHE166:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5827              		.loc 4 35 0
 5828 2de0 488B85B8 		movq	-1608(%rbp), %rax
 5828      F9FFFF
 5829 2de7 488B00   		movq	(%rax), %rax
 5830 2dea 4883C010 		addq	$16, %rax
 5831 2dee 488B00   		movq	(%rax), %rax
 5832 2df1 488B95B8 		movq	-1608(%rbp), %rdx
 5832      F9FFFF
 5833 2df8 4889D7   		movq	%rdx, %rdi
 5834 2dfb FFD0     		call	*%rax
 5835 2dfd 4889C3   		movq	%rax, %rbx
 5836 2e00 488D85E0 		leaq	-1568(%rbp), %rax
 5836      F9FFFF
 5837 2e07 BE000000 		movl	$.LC3, %esi
 5837      00
 5838 2e0c 4889C7   		movq	%rax, %rdi
 5839              	.LEHB167:
 5840 2e0f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5840      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5841              		.loc 4 35 0 is_stmt 0 discriminator 1
 5842 2e14 4889DE   		movq	%rbx, %rsi
 5843 2e17 4889C7   		movq	%rax, %rdi
 5844 2e1a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5844      00
  36:../ExecuteTest.h **** 	}
 5845              		.loc 4 36 0 is_stmt 1
 5846 2e1f 488D85E0 		leaq	-1568(%rbp), %rax
 5846      F9FFFF
 5847 2e26 4889C7   		movq	%rax, %rdi
 5848 2e29 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5848      00
 5849 2e2e 4889C3   		movq	%rax, %rbx
 5850 2e31 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5850      00
  36:../ExecuteTest.h **** 	}
 5851              		.loc 4 36 0 is_stmt 0 discriminator 1
 5852 2e36 488B00   		movq	(%rax), %rax
 5853 2e39 488B8DA0 		movq	-1632(%rbp), %rcx
 5853      F9FFFF
 5854 2e40 4889DA   		movq	%rbx, %rdx
 5855 2e43 4889CE   		movq	%rcx, %rsi
 5856 2e46 4889C7   		movq	%rax, %rdi
 5857 2e49 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5857      00
 5858              	.LEHE167:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5859              		.loc 4 34 0 is_stmt 1
 5860 2e4e 488D85E0 		leaq	-1568(%rbp), %rax
 5860      F9FFFF
 5861 2e55 4889C7   		movq	%rax, %rdi
 5862              	.LEHB168:
 5863 2e58 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5863      00
 5864              	.LEHE168:
 5865              	.LBE100:
  32:../ExecuteTest.h **** 	{
 5866              		.loc 4 32 0
 5867 2e5d E8000000 		call	__cxa_end_catch
 5867      00
 5868              	.LBE99:
 5869              		.loc 4 42 0
 5870 2e62 EB7B     		jmp	.L290
 5871              	.L311:
  38:../ExecuteTest.h **** 	{
 5872              		.loc 4 38 0
 5873 2e64 4889C7   		movq	%rax, %rdi
 5874 2e67 E8000000 		call	__cxa_begin_catch
 5874      00
 5875              	.LEHB169:
  40:../ExecuteTest.h **** 	}
 5876              		.loc 4 40 0
 5877 2e6c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5877      00
 5878 2e71 488B00   		movq	(%rax), %rax
 5879 2e74 488B8DA0 		movq	-1632(%rbp), %rcx
 5879      F9FFFF
 5880 2e7b BA000000 		movl	$.LC44, %edx
 5880      00
 5881 2e80 4889CE   		movq	%rcx, %rsi
 5882 2e83 4889C7   		movq	%rax, %rdi
 5883 2e86 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5883      00
 5884              	.LEHE169:
 5885              	.LEHB170:
  38:../ExecuteTest.h **** 	{
 5886              		.loc 4 38 0
 5887 2e8b E8000000 		call	__cxa_end_catch
 5887      00
 5888              		.loc 4 42 0
 5889 2e90 EB4D     		jmp	.L290
 5890              	.L306:
 5891 2e92 4889C3   		movq	%rax, %rbx
 5892              	.LBB102:
  27:../ExecuteTest.h **** 	{
 5893              		.loc 4 27 0
 5894 2e95 E8000000 		call	__cxa_end_catch
 5894      00
 5895 2e9a 4889D8   		movq	%rbx, %rax
 5896 2e9d 4889C7   		movq	%rax, %rdi
 5897 2ea0 E8000000 		call	_Unwind_Resume
 5897      00
 5898              	.LEHE170:
 5899              	.L308:
 5900 2ea5 4889C3   		movq	%rax, %rbx
 5901              	.LBE102:
 5902              	.LBB103:
 5903              	.LBB101:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5904              		.loc 4 34 0
 5905 2ea8 488D85E0 		leaq	-1568(%rbp), %rax
 5905      F9FFFF
 5906 2eaf 4889C7   		movq	%rax, %rdi
 5907 2eb2 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5907      00
 5908 2eb7 EB03     		jmp	.L301
 5909              	.L307:
 5910 2eb9 4889C3   		movq	%rax, %rbx
 5911              	.L301:
 5912              	.LBE101:
  32:../ExecuteTest.h **** 	{
 5913              		.loc 4 32 0
 5914 2ebc E8000000 		call	__cxa_end_catch
 5914      00
 5915 2ec1 4889D8   		movq	%rbx, %rax
 5916 2ec4 4889C7   		movq	%rax, %rdi
 5917              	.LEHB171:
 5918 2ec7 E8000000 		call	_Unwind_Resume
 5918      00
 5919              	.LEHE171:
 5920              	.L309:
 5921 2ecc 4889C3   		movq	%rax, %rbx
 5922              	.LBE103:
  38:../ExecuteTest.h **** 	{
 5923              		.loc 4 38 0
 5924 2ecf E8000000 		call	__cxa_end_catch
 5924      00
 5925 2ed4 4889D8   		movq	%rbx, %rax
 5926 2ed7 4889C7   		movq	%rax, %rdi
 5927              	.LEHB172:
 5928 2eda E8000000 		call	_Unwind_Resume
 5928      00
 5929              	.LEHE172:
 5930              	.L290:
 5931              		.loc 4 42 0
 5932 2edf 488B45E8 		movq	-24(%rbp), %rax
 5933 2ee3 64483304 		xorq	%fs:40, %rax
 5933      25280000 
 5933      00
 5934 2eec 7405     		je	.L303
 5935 2eee E8000000 		call	__stack_chk_fail
 5935      00
 5936              	.L303:
 5937 2ef3 4881C450 		addq	$1616, %rsp
 5937      060000
 5938 2efa 5B       		popq	%rbx
 5939 2efb 415C     		popq	%r12
 5940 2efd 5D       		popq	%rbp
 5941              		.cfi_def_cfa 7, 8
 5942 2efe C3       		ret
 5943              		.cfi_endproc
 5944              	.LFE1453:
 5945              		.section	.gcc_except_table
 5946              		.align 4
 5947              	.LLSDA1453:
 5948 04a8 FF       		.byte	0xff
 5949 04a9 03       		.byte	0x3
 5950 04aa 59       		.uleb128 .LLSDATT1453-.LLSDATTD1453
 5951              	.LLSDATTD1453:
 5952 04ab 01       		.byte	0x1
 5953 04ac 42       		.uleb128 .LLSDACSE1453-.LLSDACSB1453
 5954              	.LLSDACSB1453:
 5955 04ad 2B       		.uleb128 .LEHB161-.LFB1453
 5956 04ae 05       		.uleb128 .LEHE161-.LEHB161
 5957 04af 00       		.uleb128 0
 5958 04b0 00       		.uleb128 0
 5959 04b1 47       		.uleb128 .LEHB162-.LFB1453
 5960 04b2 05       		.uleb128 .LEHE162-.LEHB162
 5961 04b3 CC01     		.uleb128 .L304-.LFB1453
 5962 04b5 05       		.uleb128 0x5
 5963 04b6 8701     		.uleb128 .LEHB163-.LFB1453
 5964 04b8 14       		.uleb128 .LEHE163-.LEHB163
 5965 04b9 AF01     		.uleb128 .L305-.LFB1453
 5966 04bb 07       		.uleb128 0x7
 5967 04bc A501     		.uleb128 .LEHB164-.LFB1453
 5968 04be 05       		.uleb128 .LEHE164-.LEHB164
 5969 04bf CC01     		.uleb128 .L304-.LFB1453
 5970 04c1 05       		.uleb128 0x5
 5971 04c2 9A02     		.uleb128 .LEHB165-.LFB1453
 5972 04c4 5E       		.uleb128 .LEHE165-.LEHB165
 5973 04c5 D204     		.uleb128 .L306-.LFB1453
 5974 04c7 00       		.uleb128 0
 5975 04c8 9B03     		.uleb128 .LEHB166-.LFB1453
 5976 04ca 05       		.uleb128 .LEHE166-.LEHB166
 5977 04cb F904     		.uleb128 .L307-.LFB1453
 5978 04cd 00       		.uleb128 0
 5979 04ce CF03     		.uleb128 .LEHB167-.LFB1453
 5980 04d0 3F       		.uleb128 .LEHE167-.LEHB167
 5981 04d1 E504     		.uleb128 .L308-.LFB1453
 5982 04d3 00       		.uleb128 0
 5983 04d4 9804     		.uleb128 .LEHB168-.LFB1453
 5984 04d6 05       		.uleb128 .LEHE168-.LEHB168
 5985 04d7 F904     		.uleb128 .L307-.LFB1453
 5986 04d9 00       		.uleb128 0
 5987 04da AC04     		.uleb128 .LEHB169-.LFB1453
 5988 04dc 1F       		.uleb128 .LEHE169-.LEHB169
 5989 04dd 8C05     		.uleb128 .L309-.LFB1453
 5990 04df 00       		.uleb128 0
 5991 04e0 CB04     		.uleb128 .LEHB170-.LFB1453
 5992 04e2 1A       		.uleb128 .LEHE170-.LEHB170
 5993 04e3 00       		.uleb128 0
 5994 04e4 00       		.uleb128 0
 5995 04e5 8705     		.uleb128 .LEHB171-.LFB1453
 5996 04e7 05       		.uleb128 .LEHE171-.LEHB171
 5997 04e8 00       		.uleb128 0
 5998 04e9 00       		.uleb128 0
 5999 04ea 9A05     		.uleb128 .LEHB172-.LFB1453
 6000 04ec 05       		.uleb128 .LEHE172-.LEHB172
 6001 04ed 00       		.uleb128 0
 6002 04ee 00       		.uleb128 0
 6003              	.LLSDACSE1453:
 6004 04ef 03       		.byte	0x3
 6005 04f0 00       		.byte	0
 6006 04f1 02       		.byte	0x2
 6007 04f2 7D       		.byte	0x7d
 6008 04f3 01       		.byte	0x1
 6009 04f4 7D       		.byte	0x7d
 6010 04f5 00       		.byte	0
 6011 04f6 7D       		.byte	0x7d
 6012 04f7 00       		.align 4
 6013 04f8 00000000 		.long	0
 6014              	
 6015 04fc 00000000 		.long	_ZTISt9exception
 6016 0500 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6017              	.LLSDATT1453:
 6018              		.text
 6020              		.section	.rodata
 6021              	.LC45:
 6022 0963 45787065 		.string	"Expected "
 6022      63746564 
 6022      2000
 6023              	.LC46:
 6024 096d 20627574 		.string	" but was "
 6024      20776173 
 6024      2000
 6025              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6026              		.weak	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Tes
 6028              	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResult
 6029              	.LFB1456:
 6030              		.file 5 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 6031              		.loc 5 19 0
 6032              		.cfi_startproc
 6033              		.cfi_personality 0x3,__gxx_personality_v0
 6034              		.cfi_lsda 0x3,.LLSDA1456
 6035 0000 55       		pushq	%rbp
 6036              		.cfi_def_cfa_offset 16
 6037              		.cfi_offset 6, -16
 6038 0001 4889E5   		movq	%rsp, %rbp
 6039              		.cfi_def_cfa_register 6
 6040 0004 53       		pushq	%rbx
 6041 0005 4881ECC8 		subq	$456, %rsp
 6041      010000
 6042              		.cfi_offset 3, -24
 6043 000c 4889BD48 		movq	%rdi, -440(%rbp)
 6043      FEFFFF
 6044 0013 4889B540 		movq	%rsi, -448(%rbp)
 6044      FEFFFF
 6045 001a 48899538 		movq	%rdx, -456(%rbp)
 6045      FEFFFF
 6046 0021 48898D30 		movq	%rcx, -464(%rbp)
 6046      FEFFFF
 6047              		.loc 5 19 0
 6048 0028 64488B04 		movq	%fs:40, %rax
 6048      25280000 
 6048      00
 6049 0031 488945E8 		movq	%rax, -24(%rbp)
 6050 0035 31C0     		xorl	%eax, %eax
 6051              	.LBB104:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 6052              		.loc 5 21 0
 6053 0037 488B8540 		movq	-448(%rbp), %rax
 6053      FEFFFF
 6054 003e 488B00   		movq	(%rax), %rax
 6055 0041 488B9538 		movq	-456(%rbp), %rdx
 6055      FEFFFF
 6056 0048 4889D6   		movq	%rdx, %rsi
 6057 004b 4889C7   		movq	%rax, %rdi
 6058              	.LEHB173:
 6059 004e E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 6059      00
 6060 0053 83F001   		xorl	$1, %eax
 6061 0056 84C0     		testb	%al, %al
 6062 0058 0F84B300 		je	.L317
 6062      0000
 6063              	.LBB105:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 6064              		.loc 5 23 0
 6065 005e 488D8550 		leaq	-432(%rbp), %rax
 6065      FEFFFF
 6066 0065 4889C7   		movq	%rax, %rdi
 6067 0068 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6067      00
 6068              	.LEHE173:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6069              		.loc 5 24 0
 6070 006d 488B8540 		movq	-448(%rbp), %rax
 6070      FEFFFF
 6071 0074 488B18   		movq	(%rax), %rbx
 6072 0077 488D8550 		leaq	-432(%rbp), %rax
 6072      FEFFFF
 6073 007e BE000000 		movl	$.LC45, %esi
 6073      00
 6074 0083 4889C7   		movq	%rax, %rdi
 6075              	.LEHB174:
 6076 0086 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6076      00
 6077 008b 4889DE   		movq	%rbx, %rsi
 6078 008e 4889C7   		movq	%rax, %rdi
 6079 0091 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6079      00
 6080              		.loc 5 24 0 is_stmt 0 discriminator 1
 6081 0096 BE000000 		movl	$.LC46, %esi
 6081      00
 6082 009b 4889C7   		movq	%rax, %rdi
 6083 009e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6083      00
 6084              		.loc 5 24 0 discriminator 2
 6085 00a3 4889C2   		movq	%rax, %rdx
 6086 00a6 488B8538 		movq	-456(%rbp), %rax
 6086      FEFFFF
 6087 00ad 4889C6   		movq	%rax, %rsi
 6088 00b0 4889D7   		movq	%rdx, %rdi
 6089 00b3 E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5
 6089      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 6090              		.loc 5 26 0 is_stmt 1
 6091 00b8 488D8550 		leaq	-432(%rbp), %rax
 6091      FEFFFF
 6092 00bf 4889C7   		movq	%rax, %rdi
 6093 00c2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6093      00
 6094 00c7 4889C2   		movq	%rax, %rdx
 6095 00ca 488B8D30 		movq	-464(%rbp), %rcx
 6095      FEFFFF
 6096 00d1 488B8548 		movq	-440(%rbp), %rax
 6096      FEFFFF
 6097 00d8 4889CE   		movq	%rcx, %rsi
 6098 00db 4889C7   		movq	%rax, %rdi
 6099 00de E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6099      00
 6100              	.LEHE174:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6101              		.loc 5 23 0
 6102 00e3 488D8550 		leaq	-432(%rbp), %rax
 6102      FEFFFF
 6103 00ea 4889C7   		movq	%rax, %rdi
 6104              	.LEHB175:
 6105 00ed E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6105      00
 6106              	.LEHE175:
 6107              	.LBE105:
 6108              	.LBE104:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 6109              		.loc 5 28 0
 6110 00f2 EB1D     		jmp	.L317
 6111              	.L316:
 6112 00f4 4889C3   		movq	%rax, %rbx
 6113              	.LBB107:
 6114              	.LBB106:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6115              		.loc 5 23 0
 6116 00f7 488D8550 		leaq	-432(%rbp), %rax
 6116      FEFFFF
 6117 00fe 4889C7   		movq	%rax, %rdi
 6118 0101 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6118      00
 6119 0106 4889D8   		movq	%rbx, %rax
 6120 0109 4889C7   		movq	%rax, %rdi
 6121              	.LEHB176:
 6122 010c E8000000 		call	_Unwind_Resume
 6122      00
 6123              	.LEHE176:
 6124              	.L317:
 6125              	.LBE106:
 6126              	.LBE107:
 6127              		.loc 5 28 0
 6128 0111 90       		nop
 6129 0112 488B45E8 		movq	-24(%rbp), %rax
 6130 0116 64483304 		xorq	%fs:40, %rax
 6130      25280000 
 6130      00
 6131 011f 7405     		je	.L315
 6132 0121 E8000000 		call	__stack_chk_fail
 6132      00
 6133              	.L315:
 6134 0126 4881C4C8 		addq	$456, %rsp
 6134      010000
 6135 012d 5B       		popq	%rbx
 6136 012e 5D       		popq	%rbp
 6137              		.cfi_def_cfa 7, 8
 6138 012f C3       		ret
 6139              		.cfi_endproc
 6140              	.LFE1456:
 6141              		.section	.gcc_except_table
 6142              	.LLSDA1456:
 6143 0504 FF       		.byte	0xff
 6144 0505 FF       		.byte	0xff
 6145 0506 01       		.byte	0x1
 6146 0507 14       		.uleb128 .LLSDACSE1456-.LLSDACSB1456
 6147              	.LLSDACSB1456:
 6148 0508 4E       		.uleb128 .LEHB173-.LFB1456
 6149 0509 1F       		.uleb128 .LEHE173-.LEHB173
 6150 050a 00       		.uleb128 0
 6151 050b 00       		.uleb128 0
 6152 050c 8601     		.uleb128 .LEHB174-.LFB1456
 6153 050e 5D       		.uleb128 .LEHE174-.LEHB174
 6154 050f F401     		.uleb128 .L316-.LFB1456
 6155 0511 00       		.uleb128 0
 6156 0512 ED01     		.uleb128 .LEHB175-.LFB1456
 6157 0514 05       		.uleb128 .LEHE175-.LEHB175
 6158 0515 00       		.uleb128 0
 6159 0516 00       		.uleb128 0
 6160 0517 8C02     		.uleb128 .LEHB176-.LFB1456
 6161 0519 05       		.uleb128 .LEHE176-.LEHB176
 6162 051a 00       		.uleb128 0
 6163 051b 00       		.uleb128 0
 6164              	.LLSDACSE1456:
 6165              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6167              		.text
 6169              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIs
 6170              	.LFB1457:
  16:../ExecuteTest.h **** {
 6171              		.loc 4 16 0
 6172              		.cfi_startproc
 6173              		.cfi_personality 0x3,__gxx_personality_v0
 6174              		.cfi_lsda 0x3,.LLSDA1457
 6175 2eff 55       		pushq	%rbp
 6176              		.cfi_def_cfa_offset 16
 6177              		.cfi_offset 6, -16
 6178 2f00 4889E5   		movq	%rsp, %rbp
 6179              		.cfi_def_cfa_register 6
 6180 2f03 4154     		pushq	%r12
 6181 2f05 53       		pushq	%rbx
 6182 2f06 4881EC50 		subq	$1616, %rsp
 6182      060000
 6183              		.cfi_offset 12, -24
 6184              		.cfi_offset 3, -32
 6185 2f0d 4889BDA8 		movq	%rdi, -1624(%rbp)
 6185      F9FFFF
 6186 2f14 4889B5A0 		movq	%rsi, -1632(%rbp)
 6186      F9FFFF
  16:../ExecuteTest.h **** {
 6187              		.loc 4 16 0
 6188 2f1b 64488B04 		movq	%fs:40, %rax
 6188      25280000 
 6188      00
 6189 2f24 488945E8 		movq	%rax, -24(%rbp)
 6190 2f28 31C0     		xorl	%eax, %eax
 6191              	.LEHB177:
  18:../ExecuteTest.h **** 
 6192              		.loc 4 18 0
 6193 2f2a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6193      00
 6194              	.LEHE177:
 6195 2f2f 4889C2   		movq	%rax, %rdx
 6196 2f32 488B85A0 		movq	-1632(%rbp), %rax
 6196      F9FFFF
 6197 2f39 488902   		movq	%rax, (%rdx)
 6198              	.LBB108:
  23:../ExecuteTest.h **** #endif
 6199              		.loc 4 23 0
 6200 2f3c 488D8580 		leaq	-1152(%rbp), %rax
 6200      FBFFFF
 6201 2f43 4889C7   		movq	%rax, %rdi
 6202              	.LEHB178:
 6203 2f46 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6203      00
 6204              	.LEHE178:
  23:../ExecuteTest.h **** #endif
 6205              		.loc 4 23 0 is_stmt 0 discriminator 1
 6206 2f4b 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6206      000000
 6207 2f52 BE010000 		movl	$1, %esi
 6207      00
 6208 2f57 4889C7   		movq	%rax, %rdi
 6209 2f5a E8000000 		call	__sigsetjmp
 6209      00
 6210 2f5f 85C0     		testl	%eax, %eax
 6211 2f61 0F95C0   		setne	%al
 6212 2f64 84C0     		testb	%al, %al
 6213 2f66 7423     		je	.L338
  23:../ExecuteTest.h **** #endif
 6214              		.loc 4 23 0 discriminator 3
 6215 2f68 BF080000 		movl	$8, %edi
 6215      00
 6216 2f6d E8000000 		call	__cxa_allocate_exception
 6216      00
 6217 2f72 48C70000 		movq	$.LC43, (%rax)
 6217      000000
 6218 2f79 BA000000 		movl	$0, %edx
 6218      00
 6219 2f7e BE000000 		movl	$_ZTIPKc, %esi
 6219      00
 6220 2f83 4889C7   		movq	%rax, %rdi
 6221              	.LEHB179:
 6222 2f86 E8000000 		call	__cxa_throw
 6222      00
 6223              	.L338:
  25:../ExecuteTest.h **** 	}
 6224              		.loc 4 25 0 is_stmt 1
 6225 2f8b 488B85A8 		movq	-1624(%rbp), %rax
 6225      F9FFFF
 6226 2f92 4889C7   		movq	%rax, %rdi
 6227 2f95 E8FAD9FF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunIm
 6227      FF
 6228              	.LEHE179:
  23:../ExecuteTest.h **** #endif
 6229              		.loc 4 23 0
 6230 2f9a 488D8580 		leaq	-1152(%rbp), %rax
 6230      FBFFFF
 6231 2fa1 4889C7   		movq	%rax, %rdi
 6232              	.LEHB180:
 6233 2fa4 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6233      00
 6234              	.LEHE180:
 6235              	.LBE108:
 6236              		.loc 4 42 0
 6237 2fa9 E9F00100 		jmp	.L318
 6237      00
 6238              	.L333:
 6239 2fae 4989C4   		movq	%rax, %r12
 6240 2fb1 4889D3   		movq	%rdx, %rbx
 6241              	.LBB109:
  23:../ExecuteTest.h **** #endif
 6242              		.loc 4 23 0
 6243 2fb4 488D8580 		leaq	-1152(%rbp), %rax
 6243      FBFFFF
 6244 2fbb 4889C7   		movq	%rax, %rdi
 6245 2fbe E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6245      00
 6246 2fc3 4C89E0   		movq	%r12, %rax
 6247 2fc6 4889DA   		movq	%rbx, %rdx
 6248 2fc9 EB00     		jmp	.L322
 6249              	.L332:
 6250              	.L322:
 6251 2fcb 4883FA01 		cmpq	$1, %rdx
 6252 2fcf 740F     		je	.L324
 6253 2fd1 4883FA02 		cmpq	$2, %rdx
 6254 2fd5 0F84A600 		je	.L325
 6254      0000
 6255 2fdb E9430100 		jmp	.L339
 6255      00
 6256              	.L324:
 6257              	.LBE109:
 6258              	.LBB110:
  27:../ExecuteTest.h **** 	{
 6259              		.loc 4 27 0
 6260 2fe0 4889C7   		movq	%rax, %rdi
 6261 2fe3 E8000000 		call	__cxa_begin_catch
 6261      00
 6262 2fe8 488985B0 		movq	%rax, -1616(%rbp)
 6262      F9FFFF
  30:../ExecuteTest.h **** 	}
 6263              		.loc 4 30 0
 6264 2fef 488B85B0 		movq	-1616(%rbp), %rax
 6264      F9FFFF
 6265 2ff6 488B00   		movq	(%rax), %rax
 6266 2ff9 4883C010 		addq	$16, %rax
 6267 2ffd 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6268              		.loc 4 29 0
 6269 3000 488B95B0 		movq	-1616(%rbp), %rdx
 6269      F9FFFF
 6270 3007 4889D7   		movq	%rdx, %rdi
 6271 300a FFD0     		call	*%rax
 6272 300c 4889C3   		movq	%rax, %rbx
 6273 300f 488B85B0 		movq	-1616(%rbp), %rax
 6273      F9FFFF
 6274 3016 4889C7   		movq	%rax, %rdi
 6275              	.LEHB181:
 6276 3019 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6276      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6277              		.loc 4 29 0 is_stmt 0 discriminator 1
 6278 301e 4189C4   		movl	%eax, %r12d
 6279 3021 488B85B0 		movq	-1616(%rbp), %rax
 6279      F9FFFF
 6280 3028 4889C7   		movq	%rax, %rdi
 6281 302b E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6281      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6282              		.loc 4 29 0 discriminator 2
 6283 3030 4889C1   		movq	%rax, %rcx
 6284 3033 488B85A0 		movq	-1632(%rbp), %rax
 6284      F9FFFF
 6285 303a 488B10   		movq	(%rax), %rdx
 6286 303d 488B85A0 		movq	-1632(%rbp), %rax
 6286      F9FFFF
 6287 3044 488B7008 		movq	8(%rax), %rsi
 6288 3048 488D85C0 		leaq	-1600(%rbp), %rax
 6288      F9FFFF
 6289 304f 4589E0   		movl	%r12d, %r8d
 6290 3052 4889C7   		movq	%rax, %rdi
 6291 3055 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6291      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6292              		.loc 4 29 0 discriminator 4
 6293 305a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6293      00
 6294 305f 488B00   		movq	(%rax), %rax
 6295 3062 488D8DC0 		leaq	-1600(%rbp), %rcx
 6295      F9FFFF
 6296 3069 4889DA   		movq	%rbx, %rdx
 6297 306c 4889CE   		movq	%rcx, %rsi
 6298 306f 4889C7   		movq	%rax, %rdi
 6299 3072 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6299      00
 6300              	.LEHE181:
  27:../ExecuteTest.h **** 	{
 6301              		.loc 4 27 0 is_stmt 1 discriminator 8
 6302 3077 E8000000 		call	__cxa_end_catch
 6302      00
 6303              	.LBE110:
 6304              		.loc 4 42 0 discriminator 8
 6305 307c E91D0100 		jmp	.L318
 6305      00
 6306              	.L325:
 6307              	.LBB111:
  32:../ExecuteTest.h **** 	{
 6308              		.loc 4 32 0
 6309 3081 4889C7   		movq	%rax, %rdi
 6310 3084 E8000000 		call	__cxa_begin_catch
 6310      00
 6311 3089 488985B8 		movq	%rax, -1608(%rbp)
 6311      F9FFFF
 6312              	.LBB112:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6313              		.loc 4 34 0
 6314 3090 488D85E0 		leaq	-1568(%rbp), %rax
 6314      F9FFFF
 6315 3097 4889C7   		movq	%rax, %rdi
 6316              	.LEHB182:
 6317 309a E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6317      00
 6318              	.LEHE182:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6319              		.loc 4 35 0
 6320 309f 488B85B8 		movq	-1608(%rbp), %rax
 6320      F9FFFF
 6321 30a6 488B00   		movq	(%rax), %rax
 6322 30a9 4883C010 		addq	$16, %rax
 6323 30ad 488B00   		movq	(%rax), %rax
 6324 30b0 488B95B8 		movq	-1608(%rbp), %rdx
 6324      F9FFFF
 6325 30b7 4889D7   		movq	%rdx, %rdi
 6326 30ba FFD0     		call	*%rax
 6327 30bc 4889C3   		movq	%rax, %rbx
 6328 30bf 488D85E0 		leaq	-1568(%rbp), %rax
 6328      F9FFFF
 6329 30c6 BE000000 		movl	$.LC3, %esi
 6329      00
 6330 30cb 4889C7   		movq	%rax, %rdi
 6331              	.LEHB183:
 6332 30ce E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6332      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6333              		.loc 4 35 0 is_stmt 0 discriminator 1
 6334 30d3 4889DE   		movq	%rbx, %rsi
 6335 30d6 4889C7   		movq	%rax, %rdi
 6336 30d9 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6336      00
  36:../ExecuteTest.h **** 	}
 6337              		.loc 4 36 0 is_stmt 1
 6338 30de 488D85E0 		leaq	-1568(%rbp), %rax
 6338      F9FFFF
 6339 30e5 4889C7   		movq	%rax, %rdi
 6340 30e8 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6340      00
 6341 30ed 4889C3   		movq	%rax, %rbx
 6342 30f0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6342      00
  36:../ExecuteTest.h **** 	}
 6343              		.loc 4 36 0 is_stmt 0 discriminator 1
 6344 30f5 488B00   		movq	(%rax), %rax
 6345 30f8 488B8DA0 		movq	-1632(%rbp), %rcx
 6345      F9FFFF
 6346 30ff 4889DA   		movq	%rbx, %rdx
 6347 3102 4889CE   		movq	%rcx, %rsi
 6348 3105 4889C7   		movq	%rax, %rdi
 6349 3108 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6349      00
 6350              	.LEHE183:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6351              		.loc 4 34 0 is_stmt 1
 6352 310d 488D85E0 		leaq	-1568(%rbp), %rax
 6352      F9FFFF
 6353 3114 4889C7   		movq	%rax, %rdi
 6354              	.LEHB184:
 6355 3117 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6355      00
 6356              	.LEHE184:
 6357              	.LBE112:
  32:../ExecuteTest.h **** 	{
 6358              		.loc 4 32 0
 6359 311c E8000000 		call	__cxa_end_catch
 6359      00
 6360              	.LBE111:
 6361              		.loc 4 42 0
 6362 3121 EB7B     		jmp	.L318
 6363              	.L339:
  38:../ExecuteTest.h **** 	{
 6364              		.loc 4 38 0
 6365 3123 4889C7   		movq	%rax, %rdi
 6366 3126 E8000000 		call	__cxa_begin_catch
 6366      00
 6367              	.LEHB185:
  40:../ExecuteTest.h **** 	}
 6368              		.loc 4 40 0
 6369 312b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6369      00
 6370 3130 488B00   		movq	(%rax), %rax
 6371 3133 488B8DA0 		movq	-1632(%rbp), %rcx
 6371      F9FFFF
 6372 313a BA000000 		movl	$.LC44, %edx
 6372      00
 6373 313f 4889CE   		movq	%rcx, %rsi
 6374 3142 4889C7   		movq	%rax, %rdi
 6375 3145 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6375      00
 6376              	.LEHE185:
 6377              	.LEHB186:
  38:../ExecuteTest.h **** 	{
 6378              		.loc 4 38 0
 6379 314a E8000000 		call	__cxa_end_catch
 6379      00
 6380              		.loc 4 42 0
 6381 314f EB4D     		jmp	.L318
 6382              	.L334:
 6383 3151 4889C3   		movq	%rax, %rbx
 6384              	.LBB114:
  27:../ExecuteTest.h **** 	{
 6385              		.loc 4 27 0
 6386 3154 E8000000 		call	__cxa_end_catch
 6386      00
 6387 3159 4889D8   		movq	%rbx, %rax
 6388 315c 4889C7   		movq	%rax, %rdi
 6389 315f E8000000 		call	_Unwind_Resume
 6389      00
 6390              	.LEHE186:
 6391              	.L336:
 6392 3164 4889C3   		movq	%rax, %rbx
 6393              	.LBE114:
 6394              	.LBB115:
 6395              	.LBB113:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6396              		.loc 4 34 0
 6397 3167 488D85E0 		leaq	-1568(%rbp), %rax
 6397      F9FFFF
 6398 316e 4889C7   		movq	%rax, %rdi
 6399 3171 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6399      00
 6400 3176 EB03     		jmp	.L329
 6401              	.L335:
 6402 3178 4889C3   		movq	%rax, %rbx
 6403              	.L329:
 6404              	.LBE113:
  32:../ExecuteTest.h **** 	{
 6405              		.loc 4 32 0
 6406 317b E8000000 		call	__cxa_end_catch
 6406      00
 6407 3180 4889D8   		movq	%rbx, %rax
 6408 3183 4889C7   		movq	%rax, %rdi
 6409              	.LEHB187:
 6410 3186 E8000000 		call	_Unwind_Resume
 6410      00
 6411              	.LEHE187:
 6412              	.L337:
 6413 318b 4889C3   		movq	%rax, %rbx
 6414              	.LBE115:
  38:../ExecuteTest.h **** 	{
 6415              		.loc 4 38 0
 6416 318e E8000000 		call	__cxa_end_catch
 6416      00
 6417 3193 4889D8   		movq	%rbx, %rax
 6418 3196 4889C7   		movq	%rax, %rdi
 6419              	.LEHB188:
 6420 3199 E8000000 		call	_Unwind_Resume
 6420      00
 6421              	.LEHE188:
 6422              	.L318:
 6423              		.loc 4 42 0
 6424 319e 488B45E8 		movq	-24(%rbp), %rax
 6425 31a2 64483304 		xorq	%fs:40, %rax
 6425      25280000 
 6425      00
 6426 31ab 7405     		je	.L331
 6427 31ad E8000000 		call	__stack_chk_fail
 6427      00
 6428              	.L331:
 6429 31b2 4881C450 		addq	$1616, %rsp
 6429      060000
 6430 31b9 5B       		popq	%rbx
 6431 31ba 415C     		popq	%r12
 6432 31bc 5D       		popq	%rbp
 6433              		.cfi_def_cfa 7, 8
 6434 31bd C3       		ret
 6435              		.cfi_endproc
 6436              	.LFE1457:
 6437              		.section	.gcc_except_table
 6438              		.align 4
 6439              	.LLSDA1457:
 6440 051c FF       		.byte	0xff
 6441 051d 03       		.byte	0x3
 6442 051e 59       		.uleb128 .LLSDATT1457-.LLSDATTD1457
 6443              	.LLSDATTD1457:
 6444 051f 01       		.byte	0x1
 6445 0520 42       		.uleb128 .LLSDACSE1457-.LLSDACSB1457
 6446              	.LLSDACSB1457:
 6447 0521 2B       		.uleb128 .LEHB177-.LFB1457
 6448 0522 05       		.uleb128 .LEHE177-.LEHB177
 6449 0523 00       		.uleb128 0
 6450 0524 00       		.uleb128 0
 6451 0525 47       		.uleb128 .LEHB178-.LFB1457
 6452 0526 05       		.uleb128 .LEHE178-.LEHB178
 6453 0527 CC01     		.uleb128 .L332-.LFB1457
 6454 0529 05       		.uleb128 0x5
 6455 052a 8701     		.uleb128 .LEHB179-.LFB1457
 6456 052c 14       		.uleb128 .LEHE179-.LEHB179
 6457 052d AF01     		.uleb128 .L333-.LFB1457
 6458 052f 07       		.uleb128 0x7
 6459 0530 A501     		.uleb128 .LEHB180-.LFB1457
 6460 0532 05       		.uleb128 .LEHE180-.LEHB180
 6461 0533 CC01     		.uleb128 .L332-.LFB1457
 6462 0535 05       		.uleb128 0x5
 6463 0536 9A02     		.uleb128 .LEHB181-.LFB1457
 6464 0538 5E       		.uleb128 .LEHE181-.LEHB181
 6465 0539 D204     		.uleb128 .L334-.LFB1457
 6466 053b 00       		.uleb128 0
 6467 053c 9B03     		.uleb128 .LEHB182-.LFB1457
 6468 053e 05       		.uleb128 .LEHE182-.LEHB182
 6469 053f F904     		.uleb128 .L335-.LFB1457
 6470 0541 00       		.uleb128 0
 6471 0542 CF03     		.uleb128 .LEHB183-.LFB1457
 6472 0544 3F       		.uleb128 .LEHE183-.LEHB183
 6473 0545 E504     		.uleb128 .L336-.LFB1457
 6474 0547 00       		.uleb128 0
 6475 0548 9804     		.uleb128 .LEHB184-.LFB1457
 6476 054a 05       		.uleb128 .LEHE184-.LEHB184
 6477 054b F904     		.uleb128 .L335-.LFB1457
 6478 054d 00       		.uleb128 0
 6479 054e AC04     		.uleb128 .LEHB185-.LFB1457
 6480 0550 1F       		.uleb128 .LEHE185-.LEHB185
 6481 0551 8C05     		.uleb128 .L337-.LFB1457
 6482 0553 00       		.uleb128 0
 6483 0554 CB04     		.uleb128 .LEHB186-.LFB1457
 6484 0556 1A       		.uleb128 .LEHE186-.LEHB186
 6485 0557 00       		.uleb128 0
 6486 0558 00       		.uleb128 0
 6487 0559 8705     		.uleb128 .LEHB187-.LFB1457
 6488 055b 05       		.uleb128 .LEHE187-.LEHB187
 6489 055c 00       		.uleb128 0
 6490 055d 00       		.uleb128 0
 6491 055e 9A05     		.uleb128 .LEHB188-.LFB1457
 6492 0560 05       		.uleb128 .LEHE188-.LEHB188
 6493 0561 00       		.uleb128 0
 6494 0562 00       		.uleb128 0
 6495              	.LLSDACSE1457:
 6496 0563 03       		.byte	0x3
 6497 0564 00       		.byte	0
 6498 0565 02       		.byte	0x2
 6499 0566 7D       		.byte	0x7d
 6500 0567 01       		.byte	0x1
 6501 0568 7D       		.byte	0x7d
 6502 0569 00       		.byte	0
 6503 056a 7D       		.byte	0x7d
 6504 056b 00       		.align 4
 6505 056c 00000000 		.long	0
 6506              	
 6507 0570 00000000 		.long	_ZTISt9exception
 6508 0574 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6509              	.LLSDATT1457:
 6510              		.text
 6512              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 6513              		.weak	_ZN8UnitTest5CheckIbEEbT_
 6515              	_ZN8UnitTest5CheckIbEEbT_:
 6516              	.LFB1459:
  12:../Checks.h   **** {
 6517              		.loc 5 12 0
 6518              		.cfi_startproc
 6519 0000 55       		pushq	%rbp
 6520              		.cfi_def_cfa_offset 16
 6521              		.cfi_offset 6, -16
 6522 0001 4889E5   		movq	%rsp, %rbp
 6523              		.cfi_def_cfa_register 6
 6524 0004 89F8     		movl	%edi, %eax
 6525 0006 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 6526              		.loc 5 14 0
 6527 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 6528              		.loc 5 15 0
 6529 000d 5D       		popq	%rbp
 6530              		.cfi_def_cfa 7, 8
 6531 000e C3       		ret
 6532              		.cfi_endproc
 6533              	.LFE1459:
 6535              		.text
 6537              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperEEEv
 6538              	.LFB1460:
  16:../ExecuteTest.h **** {
 6539              		.loc 4 16 0
 6540              		.cfi_startproc
 6541              		.cfi_personality 0x3,__gxx_personality_v0
 6542              		.cfi_lsda 0x3,.LLSDA1460
 6543 31be 55       		pushq	%rbp
 6544              		.cfi_def_cfa_offset 16
 6545              		.cfi_offset 6, -16
 6546 31bf 4889E5   		movq	%rsp, %rbp
 6547              		.cfi_def_cfa_register 6
 6548 31c2 4154     		pushq	%r12
 6549 31c4 53       		pushq	%rbx
 6550 31c5 4881EC50 		subq	$1616, %rsp
 6550      060000
 6551              		.cfi_offset 12, -24
 6552              		.cfi_offset 3, -32
 6553 31cc 4889BDA8 		movq	%rdi, -1624(%rbp)
 6553      F9FFFF
 6554 31d3 4889B5A0 		movq	%rsi, -1632(%rbp)
 6554      F9FFFF
  16:../ExecuteTest.h **** {
 6555              		.loc 4 16 0
 6556 31da 64488B04 		movq	%fs:40, %rax
 6556      25280000 
 6556      00
 6557 31e3 488945E8 		movq	%rax, -24(%rbp)
 6558 31e7 31C0     		xorl	%eax, %eax
 6559              	.LEHB189:
  18:../ExecuteTest.h **** 
 6560              		.loc 4 18 0
 6561 31e9 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6561      00
 6562              	.LEHE189:
 6563 31ee 4889C2   		movq	%rax, %rdx
 6564 31f1 488B85A0 		movq	-1632(%rbp), %rax
 6564      F9FFFF
 6565 31f8 488902   		movq	%rax, (%rdx)
 6566              	.LBB116:
  23:../ExecuteTest.h **** #endif
 6567              		.loc 4 23 0
 6568 31fb 488D8580 		leaq	-1152(%rbp), %rax
 6568      FBFFFF
 6569 3202 4889C7   		movq	%rax, %rdi
 6570              	.LEHB190:
 6571 3205 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6571      00
 6572              	.LEHE190:
  23:../ExecuteTest.h **** #endif
 6573              		.loc 4 23 0 is_stmt 0 discriminator 1
 6574 320a 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6574      000000
 6575 3211 BE010000 		movl	$1, %esi
 6575      00
 6576 3216 4889C7   		movq	%rax, %rdi
 6577 3219 E8000000 		call	__sigsetjmp
 6577      00
 6578 321e 85C0     		testl	%eax, %eax
 6579 3220 0F95C0   		setne	%al
 6580 3223 84C0     		testb	%al, %al
 6581 3225 7423     		je	.L362
  23:../ExecuteTest.h **** #endif
 6582              		.loc 4 23 0 discriminator 3
 6583 3227 BF080000 		movl	$8, %edi
 6583      00
 6584 322c E8000000 		call	__cxa_allocate_exception
 6584      00
 6585 3231 48C70000 		movq	$.LC43, (%rax)
 6585      000000
 6586 3238 BA000000 		movl	$0, %edx
 6586      00
 6587 323d BE000000 		movl	$_ZTIPKc, %esi
 6587      00
 6588 3242 4889C7   		movq	%rax, %rdi
 6589              	.LEHB191:
 6590 3245 E8000000 		call	__cxa_throw
 6590      00
 6591              	.L362:
  25:../ExecuteTest.h **** 	}
 6592              		.loc 4 25 0 is_stmt 1
 6593 324a 488B85A8 		movq	-1624(%rbp), %rax
 6593      F9FFFF
 6594 3251 4889C7   		movq	%rax, %rdi
 6595 3254 E8A7DDFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv
 6595      FF
 6596              	.LEHE191:
  23:../ExecuteTest.h **** #endif
 6597              		.loc 4 23 0
 6598 3259 488D8580 		leaq	-1152(%rbp), %rax
 6598      FBFFFF
 6599 3260 4889C7   		movq	%rax, %rdi
 6600              	.LEHB192:
 6601 3263 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6601      00
 6602              	.LEHE192:
 6603              	.LBE116:
 6604              		.loc 4 42 0
 6605 3268 E9F00100 		jmp	.L342
 6605      00
 6606              	.L357:
 6607 326d 4989C4   		movq	%rax, %r12
 6608 3270 4889D3   		movq	%rdx, %rbx
 6609              	.LBB117:
  23:../ExecuteTest.h **** #endif
 6610              		.loc 4 23 0
 6611 3273 488D8580 		leaq	-1152(%rbp), %rax
 6611      FBFFFF
 6612 327a 4889C7   		movq	%rax, %rdi
 6613 327d E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6613      00
 6614 3282 4C89E0   		movq	%r12, %rax
 6615 3285 4889DA   		movq	%rbx, %rdx
 6616 3288 EB00     		jmp	.L346
 6617              	.L356:
 6618              	.L346:
 6619 328a 4883FA01 		cmpq	$1, %rdx
 6620 328e 740F     		je	.L348
 6621 3290 4883FA02 		cmpq	$2, %rdx
 6622 3294 0F84A600 		je	.L349
 6622      0000
 6623 329a E9430100 		jmp	.L363
 6623      00
 6624              	.L348:
 6625              	.LBE117:
 6626              	.LBB118:
  27:../ExecuteTest.h **** 	{
 6627              		.loc 4 27 0
 6628 329f 4889C7   		movq	%rax, %rdi
 6629 32a2 E8000000 		call	__cxa_begin_catch
 6629      00
 6630 32a7 488985B0 		movq	%rax, -1616(%rbp)
 6630      F9FFFF
  30:../ExecuteTest.h **** 	}
 6631              		.loc 4 30 0
 6632 32ae 488B85B0 		movq	-1616(%rbp), %rax
 6632      F9FFFF
 6633 32b5 488B00   		movq	(%rax), %rax
 6634 32b8 4883C010 		addq	$16, %rax
 6635 32bc 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6636              		.loc 4 29 0
 6637 32bf 488B95B0 		movq	-1616(%rbp), %rdx
 6637      F9FFFF
 6638 32c6 4889D7   		movq	%rdx, %rdi
 6639 32c9 FFD0     		call	*%rax
 6640 32cb 4889C3   		movq	%rax, %rbx
 6641 32ce 488B85B0 		movq	-1616(%rbp), %rax
 6641      F9FFFF
 6642 32d5 4889C7   		movq	%rax, %rdi
 6643              	.LEHB193:
 6644 32d8 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6644      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6645              		.loc 4 29 0 is_stmt 0 discriminator 1
 6646 32dd 4189C4   		movl	%eax, %r12d
 6647 32e0 488B85B0 		movq	-1616(%rbp), %rax
 6647      F9FFFF
 6648 32e7 4889C7   		movq	%rax, %rdi
 6649 32ea E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6649      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6650              		.loc 4 29 0 discriminator 2
 6651 32ef 4889C1   		movq	%rax, %rcx
 6652 32f2 488B85A0 		movq	-1632(%rbp), %rax
 6652      F9FFFF
 6653 32f9 488B10   		movq	(%rax), %rdx
 6654 32fc 488B85A0 		movq	-1632(%rbp), %rax
 6654      F9FFFF
 6655 3303 488B7008 		movq	8(%rax), %rsi
 6656 3307 488D85C0 		leaq	-1600(%rbp), %rax
 6656      F9FFFF
 6657 330e 4589E0   		movl	%r12d, %r8d
 6658 3311 4889C7   		movq	%rax, %rdi
 6659 3314 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6659      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6660              		.loc 4 29 0 discriminator 4
 6661 3319 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6661      00
 6662 331e 488B00   		movq	(%rax), %rax
 6663 3321 488D8DC0 		leaq	-1600(%rbp), %rcx
 6663      F9FFFF
 6664 3328 4889DA   		movq	%rbx, %rdx
 6665 332b 4889CE   		movq	%rcx, %rsi
 6666 332e 4889C7   		movq	%rax, %rdi
 6667 3331 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6667      00
 6668              	.LEHE193:
  27:../ExecuteTest.h **** 	{
 6669              		.loc 4 27 0 is_stmt 1 discriminator 8
 6670 3336 E8000000 		call	__cxa_end_catch
 6670      00
 6671              	.LBE118:
 6672              		.loc 4 42 0 discriminator 8
 6673 333b E91D0100 		jmp	.L342
 6673      00
 6674              	.L349:
 6675              	.LBB119:
  32:../ExecuteTest.h **** 	{
 6676              		.loc 4 32 0
 6677 3340 4889C7   		movq	%rax, %rdi
 6678 3343 E8000000 		call	__cxa_begin_catch
 6678      00
 6679 3348 488985B8 		movq	%rax, -1608(%rbp)
 6679      F9FFFF
 6680              	.LBB120:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6681              		.loc 4 34 0
 6682 334f 488D85E0 		leaq	-1568(%rbp), %rax
 6682      F9FFFF
 6683 3356 4889C7   		movq	%rax, %rdi
 6684              	.LEHB194:
 6685 3359 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6685      00
 6686              	.LEHE194:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6687              		.loc 4 35 0
 6688 335e 488B85B8 		movq	-1608(%rbp), %rax
 6688      F9FFFF
 6689 3365 488B00   		movq	(%rax), %rax
 6690 3368 4883C010 		addq	$16, %rax
 6691 336c 488B00   		movq	(%rax), %rax
 6692 336f 488B95B8 		movq	-1608(%rbp), %rdx
 6692      F9FFFF
 6693 3376 4889D7   		movq	%rdx, %rdi
 6694 3379 FFD0     		call	*%rax
 6695 337b 4889C3   		movq	%rax, %rbx
 6696 337e 488D85E0 		leaq	-1568(%rbp), %rax
 6696      F9FFFF
 6697 3385 BE000000 		movl	$.LC3, %esi
 6697      00
 6698 338a 4889C7   		movq	%rax, %rdi
 6699              	.LEHB195:
 6700 338d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6700      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6701              		.loc 4 35 0 is_stmt 0 discriminator 1
 6702 3392 4889DE   		movq	%rbx, %rsi
 6703 3395 4889C7   		movq	%rax, %rdi
 6704 3398 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6704      00
  36:../ExecuteTest.h **** 	}
 6705              		.loc 4 36 0 is_stmt 1
 6706 339d 488D85E0 		leaq	-1568(%rbp), %rax
 6706      F9FFFF
 6707 33a4 4889C7   		movq	%rax, %rdi
 6708 33a7 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6708      00
 6709 33ac 4889C3   		movq	%rax, %rbx
 6710 33af E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6710      00
  36:../ExecuteTest.h **** 	}
 6711              		.loc 4 36 0 is_stmt 0 discriminator 1
 6712 33b4 488B00   		movq	(%rax), %rax
 6713 33b7 488B8DA0 		movq	-1632(%rbp), %rcx
 6713      F9FFFF
 6714 33be 4889DA   		movq	%rbx, %rdx
 6715 33c1 4889CE   		movq	%rcx, %rsi
 6716 33c4 4889C7   		movq	%rax, %rdi
 6717 33c7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6717      00
 6718              	.LEHE195:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6719              		.loc 4 34 0 is_stmt 1
 6720 33cc 488D85E0 		leaq	-1568(%rbp), %rax
 6720      F9FFFF
 6721 33d3 4889C7   		movq	%rax, %rdi
 6722              	.LEHB196:
 6723 33d6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6723      00
 6724              	.LEHE196:
 6725              	.LBE120:
  32:../ExecuteTest.h **** 	{
 6726              		.loc 4 32 0
 6727 33db E8000000 		call	__cxa_end_catch
 6727      00
 6728              	.LBE119:
 6729              		.loc 4 42 0
 6730 33e0 EB7B     		jmp	.L342
 6731              	.L363:
  38:../ExecuteTest.h **** 	{
 6732              		.loc 4 38 0
 6733 33e2 4889C7   		movq	%rax, %rdi
 6734 33e5 E8000000 		call	__cxa_begin_catch
 6734      00
 6735              	.LEHB197:
  40:../ExecuteTest.h **** 	}
 6736              		.loc 4 40 0
 6737 33ea E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6737      00
 6738 33ef 488B00   		movq	(%rax), %rax
 6739 33f2 488B8DA0 		movq	-1632(%rbp), %rcx
 6739      F9FFFF
 6740 33f9 BA000000 		movl	$.LC44, %edx
 6740      00
 6741 33fe 4889CE   		movq	%rcx, %rsi
 6742 3401 4889C7   		movq	%rax, %rdi
 6743 3404 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6743      00
 6744              	.LEHE197:
 6745              	.LEHB198:
  38:../ExecuteTest.h **** 	{
 6746              		.loc 4 38 0
 6747 3409 E8000000 		call	__cxa_end_catch
 6747      00
 6748              		.loc 4 42 0
 6749 340e EB4D     		jmp	.L342
 6750              	.L358:
 6751 3410 4889C3   		movq	%rax, %rbx
 6752              	.LBB122:
  27:../ExecuteTest.h **** 	{
 6753              		.loc 4 27 0
 6754 3413 E8000000 		call	__cxa_end_catch
 6754      00
 6755 3418 4889D8   		movq	%rbx, %rax
 6756 341b 4889C7   		movq	%rax, %rdi
 6757 341e E8000000 		call	_Unwind_Resume
 6757      00
 6758              	.LEHE198:
 6759              	.L360:
 6760 3423 4889C3   		movq	%rax, %rbx
 6761              	.LBE122:
 6762              	.LBB123:
 6763              	.LBB121:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6764              		.loc 4 34 0
 6765 3426 488D85E0 		leaq	-1568(%rbp), %rax
 6765      F9FFFF
 6766 342d 4889C7   		movq	%rax, %rdi
 6767 3430 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6767      00
 6768 3435 EB03     		jmp	.L353
 6769              	.L359:
 6770 3437 4889C3   		movq	%rax, %rbx
 6771              	.L353:
 6772              	.LBE121:
  32:../ExecuteTest.h **** 	{
 6773              		.loc 4 32 0
 6774 343a E8000000 		call	__cxa_end_catch
 6774      00
 6775 343f 4889D8   		movq	%rbx, %rax
 6776 3442 4889C7   		movq	%rax, %rdi
 6777              	.LEHB199:
 6778 3445 E8000000 		call	_Unwind_Resume
 6778      00
 6779              	.LEHE199:
 6780              	.L361:
 6781 344a 4889C3   		movq	%rax, %rbx
 6782              	.LBE123:
  38:../ExecuteTest.h **** 	{
 6783              		.loc 4 38 0
 6784 344d E8000000 		call	__cxa_end_catch
 6784      00
 6785 3452 4889D8   		movq	%rbx, %rax
 6786 3455 4889C7   		movq	%rax, %rdi
 6787              	.LEHB200:
 6788 3458 E8000000 		call	_Unwind_Resume
 6788      00
 6789              	.LEHE200:
 6790              	.L342:
 6791              		.loc 4 42 0
 6792 345d 488B45E8 		movq	-24(%rbp), %rax
 6793 3461 64483304 		xorq	%fs:40, %rax
 6793      25280000 
 6793      00
 6794 346a 7405     		je	.L355
 6795 346c E8000000 		call	__stack_chk_fail
 6795      00
 6796              	.L355:
 6797 3471 4881C450 		addq	$1616, %rsp
 6797      060000
 6798 3478 5B       		popq	%rbx
 6799 3479 415C     		popq	%r12
 6800 347b 5D       		popq	%rbp
 6801              		.cfi_def_cfa 7, 8
 6802 347c C3       		ret
 6803              		.cfi_endproc
 6804              	.LFE1460:
 6805              		.section	.gcc_except_table
 6806              		.align 4
 6807              	.LLSDA1460:
 6808 0578 FF       		.byte	0xff
 6809 0579 03       		.byte	0x3
 6810 057a 59       		.uleb128 .LLSDATT1460-.LLSDATTD1460
 6811              	.LLSDATTD1460:
 6812 057b 01       		.byte	0x1
 6813 057c 42       		.uleb128 .LLSDACSE1460-.LLSDACSB1460
 6814              	.LLSDACSB1460:
 6815 057d 2B       		.uleb128 .LEHB189-.LFB1460
 6816 057e 05       		.uleb128 .LEHE189-.LEHB189
 6817 057f 00       		.uleb128 0
 6818 0580 00       		.uleb128 0
 6819 0581 47       		.uleb128 .LEHB190-.LFB1460
 6820 0582 05       		.uleb128 .LEHE190-.LEHB190
 6821 0583 CC01     		.uleb128 .L356-.LFB1460
 6822 0585 05       		.uleb128 0x5
 6823 0586 8701     		.uleb128 .LEHB191-.LFB1460
 6824 0588 14       		.uleb128 .LEHE191-.LEHB191
 6825 0589 AF01     		.uleb128 .L357-.LFB1460
 6826 058b 07       		.uleb128 0x7
 6827 058c A501     		.uleb128 .LEHB192-.LFB1460
 6828 058e 05       		.uleb128 .LEHE192-.LEHB192
 6829 058f CC01     		.uleb128 .L356-.LFB1460
 6830 0591 05       		.uleb128 0x5
 6831 0592 9A02     		.uleb128 .LEHB193-.LFB1460
 6832 0594 5E       		.uleb128 .LEHE193-.LEHB193
 6833 0595 D204     		.uleb128 .L358-.LFB1460
 6834 0597 00       		.uleb128 0
 6835 0598 9B03     		.uleb128 .LEHB194-.LFB1460
 6836 059a 05       		.uleb128 .LEHE194-.LEHB194
 6837 059b F904     		.uleb128 .L359-.LFB1460
 6838 059d 00       		.uleb128 0
 6839 059e CF03     		.uleb128 .LEHB195-.LFB1460
 6840 05a0 3F       		.uleb128 .LEHE195-.LEHB195
 6841 05a1 E504     		.uleb128 .L360-.LFB1460
 6842 05a3 00       		.uleb128 0
 6843 05a4 9804     		.uleb128 .LEHB196-.LFB1460
 6844 05a6 05       		.uleb128 .LEHE196-.LEHB196
 6845 05a7 F904     		.uleb128 .L359-.LFB1460
 6846 05a9 00       		.uleb128 0
 6847 05aa AC04     		.uleb128 .LEHB197-.LFB1460
 6848 05ac 1F       		.uleb128 .LEHE197-.LEHB197
 6849 05ad 8C05     		.uleb128 .L361-.LFB1460
 6850 05af 00       		.uleb128 0
 6851 05b0 CB04     		.uleb128 .LEHB198-.LFB1460
 6852 05b2 1A       		.uleb128 .LEHE198-.LEHB198
 6853 05b3 00       		.uleb128 0
 6854 05b4 00       		.uleb128 0
 6855 05b5 8705     		.uleb128 .LEHB199-.LFB1460
 6856 05b7 05       		.uleb128 .LEHE199-.LEHB199
 6857 05b8 00       		.uleb128 0
 6858 05b9 00       		.uleb128 0
 6859 05ba 9A05     		.uleb128 .LEHB200-.LFB1460
 6860 05bc 05       		.uleb128 .LEHE200-.LEHB200
 6861 05bd 00       		.uleb128 0
 6862 05be 00       		.uleb128 0
 6863              	.LLSDACSE1460:
 6864 05bf 03       		.byte	0x3
 6865 05c0 00       		.byte	0
 6866 05c1 02       		.byte	0x2
 6867 05c2 7D       		.byte	0x7d
 6868 05c3 01       		.byte	0x1
 6869 05c4 7D       		.byte	0x7d
 6870 05c5 00       		.byte	0
 6871 05c6 7D       		.byte	0x7d
 6872 05c7 00       		.align 4
 6873 05c8 00000000 		.long	0
 6874              	
 6875 05cc 00000000 		.long	_ZTISt9exception
 6876 05d0 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6877              	.LLSDATT1460:
 6878              		.text
 6881              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryF
 6882              	.LFB1461:
  16:../ExecuteTest.h **** {
 6883              		.loc 4 16 0
 6884              		.cfi_startproc
 6885              		.cfi_personality 0x3,__gxx_personality_v0
 6886              		.cfi_lsda 0x3,.LLSDA1461
 6887 347d 55       		pushq	%rbp
 6888              		.cfi_def_cfa_offset 16
 6889              		.cfi_offset 6, -16
 6890 347e 4889E5   		movq	%rsp, %rbp
 6891              		.cfi_def_cfa_register 6
 6892 3481 4154     		pushq	%r12
 6893 3483 53       		pushq	%rbx
 6894 3484 4881EC50 		subq	$1616, %rsp
 6894      060000
 6895              		.cfi_offset 12, -24
 6896              		.cfi_offset 3, -32
 6897 348b 4889BDA8 		movq	%rdi, -1624(%rbp)
 6897      F9FFFF
 6898 3492 4889B5A0 		movq	%rsi, -1632(%rbp)
 6898      F9FFFF
  16:../ExecuteTest.h **** {
 6899              		.loc 4 16 0
 6900 3499 64488B04 		movq	%fs:40, %rax
 6900      25280000 
 6900      00
 6901 34a2 488945E8 		movq	%rax, -24(%rbp)
 6902 34a6 31C0     		xorl	%eax, %eax
 6903              	.LEHB201:
  18:../ExecuteTest.h **** 
 6904              		.loc 4 18 0
 6905 34a8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6905      00
 6906              	.LEHE201:
 6907 34ad 4889C2   		movq	%rax, %rdx
 6908 34b0 488B85A0 		movq	-1632(%rbp), %rax
 6908      F9FFFF
 6909 34b7 488902   		movq	%rax, (%rdx)
 6910              	.LBB124:
  23:../ExecuteTest.h **** #endif
 6911              		.loc 4 23 0
 6912 34ba 488D8580 		leaq	-1152(%rbp), %rax
 6912      FBFFFF
 6913 34c1 4889C7   		movq	%rax, %rdi
 6914              	.LEHB202:
 6915 34c4 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6915      00
 6916              	.LEHE202:
  23:../ExecuteTest.h **** #endif
 6917              		.loc 4 23 0 is_stmt 0 discriminator 1
 6918 34c9 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6918      000000
 6919 34d0 BE010000 		movl	$1, %esi
 6919      00
 6920 34d5 4889C7   		movq	%rax, %rdi
 6921 34d8 E8000000 		call	__sigsetjmp
 6921      00
 6922 34dd 85C0     		testl	%eax, %eax
 6923 34df 0F95C0   		setne	%al
 6924 34e2 84C0     		testb	%al, %al
 6925 34e4 7423     		je	.L384
  23:../ExecuteTest.h **** #endif
 6926              		.loc 4 23 0 discriminator 3
 6927 34e6 BF080000 		movl	$8, %edi
 6927      00
 6928 34eb E8000000 		call	__cxa_allocate_exception
 6928      00
 6929 34f0 48C70000 		movq	$.LC43, (%rax)
 6929      000000
 6930 34f7 BA000000 		movl	$0, %edx
 6930      00
 6931 34fc BE000000 		movl	$_ZTIPKc, %esi
 6931      00
 6932 3501 4889C7   		movq	%rax, %rdi
 6933              	.LEHB203:
 6934 3504 E8000000 		call	__cxa_throw
 6934      00
 6935              	.L384:
  25:../ExecuteTest.h **** 	}
 6936              		.loc 4 25 0 is_stmt 1
 6937 3509 488B85A8 		movq	-1624(%rbp), %rax
 6937      F9FFFF
 6938 3510 4889C7   		movq	%rax, %rdi
 6939 3513 E8A8DFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImp
 6939      FF
 6940              	.LEHE203:
  23:../ExecuteTest.h **** #endif
 6941              		.loc 4 23 0
 6942 3518 488D8580 		leaq	-1152(%rbp), %rax
 6942      FBFFFF
 6943 351f 4889C7   		movq	%rax, %rdi
 6944              	.LEHB204:
 6945 3522 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6945      00
 6946              	.LEHE204:
 6947              	.LBE124:
 6948              		.loc 4 42 0
 6949 3527 E9F00100 		jmp	.L364
 6949      00
 6950              	.L379:
 6951 352c 4989C4   		movq	%rax, %r12
 6952 352f 4889D3   		movq	%rdx, %rbx
 6953              	.LBB125:
  23:../ExecuteTest.h **** #endif
 6954              		.loc 4 23 0
 6955 3532 488D8580 		leaq	-1152(%rbp), %rax
 6955      FBFFFF
 6956 3539 4889C7   		movq	%rax, %rdi
 6957 353c E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6957      00
 6958 3541 4C89E0   		movq	%r12, %rax
 6959 3544 4889DA   		movq	%rbx, %rdx
 6960 3547 EB00     		jmp	.L368
 6961              	.L378:
 6962              	.L368:
 6963 3549 4883FA01 		cmpq	$1, %rdx
 6964 354d 740F     		je	.L370
 6965 354f 4883FA02 		cmpq	$2, %rdx
 6966 3553 0F84A600 		je	.L371
 6966      0000
 6967 3559 E9430100 		jmp	.L385
 6967      00
 6968              	.L370:
 6969              	.LBE125:
 6970              	.LBB126:
  27:../ExecuteTest.h **** 	{
 6971              		.loc 4 27 0
 6972 355e 4889C7   		movq	%rax, %rdi
 6973 3561 E8000000 		call	__cxa_begin_catch
 6973      00
 6974 3566 488985B0 		movq	%rax, -1616(%rbp)
 6974      F9FFFF
  30:../ExecuteTest.h **** 	}
 6975              		.loc 4 30 0
 6976 356d 488B85B0 		movq	-1616(%rbp), %rax
 6976      F9FFFF
 6977 3574 488B00   		movq	(%rax), %rax
 6978 3577 4883C010 		addq	$16, %rax
 6979 357b 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6980              		.loc 4 29 0
 6981 357e 488B95B0 		movq	-1616(%rbp), %rdx
 6981      F9FFFF
 6982 3585 4889D7   		movq	%rdx, %rdi
 6983 3588 FFD0     		call	*%rax
 6984 358a 4889C3   		movq	%rax, %rbx
 6985 358d 488B85B0 		movq	-1616(%rbp), %rax
 6985      F9FFFF
 6986 3594 4889C7   		movq	%rax, %rdi
 6987              	.LEHB205:
 6988 3597 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6988      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6989              		.loc 4 29 0 is_stmt 0 discriminator 1
 6990 359c 4189C4   		movl	%eax, %r12d
 6991 359f 488B85B0 		movq	-1616(%rbp), %rax
 6991      F9FFFF
 6992 35a6 4889C7   		movq	%rax, %rdi
 6993 35a9 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6993      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6994              		.loc 4 29 0 discriminator 2
 6995 35ae 4889C1   		movq	%rax, %rcx
 6996 35b1 488B85A0 		movq	-1632(%rbp), %rax
 6996      F9FFFF
 6997 35b8 488B10   		movq	(%rax), %rdx
 6998 35bb 488B85A0 		movq	-1632(%rbp), %rax
 6998      F9FFFF
 6999 35c2 488B7008 		movq	8(%rax), %rsi
 7000 35c6 488D85C0 		leaq	-1600(%rbp), %rax
 7000      F9FFFF
 7001 35cd 4589E0   		movl	%r12d, %r8d
 7002 35d0 4889C7   		movq	%rax, %rdi
 7003 35d3 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7003      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7004              		.loc 4 29 0 discriminator 4
 7005 35d8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7005      00
 7006 35dd 488B00   		movq	(%rax), %rax
 7007 35e0 488D8DC0 		leaq	-1600(%rbp), %rcx
 7007      F9FFFF
 7008 35e7 4889DA   		movq	%rbx, %rdx
 7009 35ea 4889CE   		movq	%rcx, %rsi
 7010 35ed 4889C7   		movq	%rax, %rdi
 7011 35f0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7011      00
 7012              	.LEHE205:
  27:../ExecuteTest.h **** 	{
 7013              		.loc 4 27 0 is_stmt 1 discriminator 8
 7014 35f5 E8000000 		call	__cxa_end_catch
 7014      00
 7015              	.LBE126:
 7016              		.loc 4 42 0 discriminator 8
 7017 35fa E91D0100 		jmp	.L364
 7017      00
 7018              	.L371:
 7019              	.LBB127:
  32:../ExecuteTest.h **** 	{
 7020              		.loc 4 32 0
 7021 35ff 4889C7   		movq	%rax, %rdi
 7022 3602 E8000000 		call	__cxa_begin_catch
 7022      00
 7023 3607 488985B8 		movq	%rax, -1608(%rbp)
 7023      F9FFFF
 7024              	.LBB128:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7025              		.loc 4 34 0
 7026 360e 488D85E0 		leaq	-1568(%rbp), %rax
 7026      F9FFFF
 7027 3615 4889C7   		movq	%rax, %rdi
 7028              	.LEHB206:
 7029 3618 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7029      00
 7030              	.LEHE206:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7031              		.loc 4 35 0
 7032 361d 488B85B8 		movq	-1608(%rbp), %rax
 7032      F9FFFF
 7033 3624 488B00   		movq	(%rax), %rax
 7034 3627 4883C010 		addq	$16, %rax
 7035 362b 488B00   		movq	(%rax), %rax
 7036 362e 488B95B8 		movq	-1608(%rbp), %rdx
 7036      F9FFFF
 7037 3635 4889D7   		movq	%rdx, %rdi
 7038 3638 FFD0     		call	*%rax
 7039 363a 4889C3   		movq	%rax, %rbx
 7040 363d 488D85E0 		leaq	-1568(%rbp), %rax
 7040      F9FFFF
 7041 3644 BE000000 		movl	$.LC3, %esi
 7041      00
 7042 3649 4889C7   		movq	%rax, %rdi
 7043              	.LEHB207:
 7044 364c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7044      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7045              		.loc 4 35 0 is_stmt 0 discriminator 1
 7046 3651 4889DE   		movq	%rbx, %rsi
 7047 3654 4889C7   		movq	%rax, %rdi
 7048 3657 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7048      00
  36:../ExecuteTest.h **** 	}
 7049              		.loc 4 36 0 is_stmt 1
 7050 365c 488D85E0 		leaq	-1568(%rbp), %rax
 7050      F9FFFF
 7051 3663 4889C7   		movq	%rax, %rdi
 7052 3666 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7052      00
 7053 366b 4889C3   		movq	%rax, %rbx
 7054 366e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7054      00
  36:../ExecuteTest.h **** 	}
 7055              		.loc 4 36 0 is_stmt 0 discriminator 1
 7056 3673 488B00   		movq	(%rax), %rax
 7057 3676 488B8DA0 		movq	-1632(%rbp), %rcx
 7057      F9FFFF
 7058 367d 4889DA   		movq	%rbx, %rdx
 7059 3680 4889CE   		movq	%rcx, %rsi
 7060 3683 4889C7   		movq	%rax, %rdi
 7061 3686 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7061      00
 7062              	.LEHE207:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7063              		.loc 4 34 0 is_stmt 1
 7064 368b 488D85E0 		leaq	-1568(%rbp), %rax
 7064      F9FFFF
 7065 3692 4889C7   		movq	%rax, %rdi
 7066              	.LEHB208:
 7067 3695 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7067      00
 7068              	.LEHE208:
 7069              	.LBE128:
  32:../ExecuteTest.h **** 	{
 7070              		.loc 4 32 0
 7071 369a E8000000 		call	__cxa_end_catch
 7071      00
 7072              	.LBE127:
 7073              		.loc 4 42 0
 7074 369f EB7B     		jmp	.L364
 7075              	.L385:
  38:../ExecuteTest.h **** 	{
 7076              		.loc 4 38 0
 7077 36a1 4889C7   		movq	%rax, %rdi
 7078 36a4 E8000000 		call	__cxa_begin_catch
 7078      00
 7079              	.LEHB209:
  40:../ExecuteTest.h **** 	}
 7080              		.loc 4 40 0
 7081 36a9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7081      00
 7082 36ae 488B00   		movq	(%rax), %rax
 7083 36b1 488B8DA0 		movq	-1632(%rbp), %rcx
 7083      F9FFFF
 7084 36b8 BA000000 		movl	$.LC44, %edx
 7084      00
 7085 36bd 4889CE   		movq	%rcx, %rsi
 7086 36c0 4889C7   		movq	%rax, %rdi
 7087 36c3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7087      00
 7088              	.LEHE209:
 7089              	.LEHB210:
  38:../ExecuteTest.h **** 	{
 7090              		.loc 4 38 0
 7091 36c8 E8000000 		call	__cxa_end_catch
 7091      00
 7092              		.loc 4 42 0
 7093 36cd EB4D     		jmp	.L364
 7094              	.L380:
 7095 36cf 4889C3   		movq	%rax, %rbx
 7096              	.LBB130:
  27:../ExecuteTest.h **** 	{
 7097              		.loc 4 27 0
 7098 36d2 E8000000 		call	__cxa_end_catch
 7098      00
 7099 36d7 4889D8   		movq	%rbx, %rax
 7100 36da 4889C7   		movq	%rax, %rdi
 7101 36dd E8000000 		call	_Unwind_Resume
 7101      00
 7102              	.LEHE210:
 7103              	.L382:
 7104 36e2 4889C3   		movq	%rax, %rbx
 7105              	.LBE130:
 7106              	.LBB131:
 7107              	.LBB129:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7108              		.loc 4 34 0
 7109 36e5 488D85E0 		leaq	-1568(%rbp), %rax
 7109      F9FFFF
 7110 36ec 4889C7   		movq	%rax, %rdi
 7111 36ef E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7111      00
 7112 36f4 EB03     		jmp	.L375
 7113              	.L381:
 7114 36f6 4889C3   		movq	%rax, %rbx
 7115              	.L375:
 7116              	.LBE129:
  32:../ExecuteTest.h **** 	{
 7117              		.loc 4 32 0
 7118 36f9 E8000000 		call	__cxa_end_catch
 7118      00
 7119 36fe 4889D8   		movq	%rbx, %rax
 7120 3701 4889C7   		movq	%rax, %rdi
 7121              	.LEHB211:
 7122 3704 E8000000 		call	_Unwind_Resume
 7122      00
 7123              	.LEHE211:
 7124              	.L383:
 7125 3709 4889C3   		movq	%rax, %rbx
 7126              	.LBE131:
  38:../ExecuteTest.h **** 	{
 7127              		.loc 4 38 0
 7128 370c E8000000 		call	__cxa_end_catch
 7128      00
 7129 3711 4889D8   		movq	%rbx, %rax
 7130 3714 4889C7   		movq	%rax, %rdi
 7131              	.LEHB212:
 7132 3717 E8000000 		call	_Unwind_Resume
 7132      00
 7133              	.LEHE212:
 7134              	.L364:
 7135              		.loc 4 42 0
 7136 371c 488B45E8 		movq	-24(%rbp), %rax
 7137 3720 64483304 		xorq	%fs:40, %rax
 7137      25280000 
 7137      00
 7138 3729 7405     		je	.L377
 7139 372b E8000000 		call	__stack_chk_fail
 7139      00
 7140              	.L377:
 7141 3730 4881C450 		addq	$1616, %rsp
 7141      060000
 7142 3737 5B       		popq	%rbx
 7143 3738 415C     		popq	%r12
 7144 373a 5D       		popq	%rbp
 7145              		.cfi_def_cfa 7, 8
 7146 373b C3       		ret
 7147              		.cfi_endproc
 7148              	.LFE1461:
 7149              		.section	.gcc_except_table
 7150              		.align 4
 7151              	.LLSDA1461:
 7152 05d4 FF       		.byte	0xff
 7153 05d5 03       		.byte	0x3
 7154 05d6 59       		.uleb128 .LLSDATT1461-.LLSDATTD1461
 7155              	.LLSDATTD1461:
 7156 05d7 01       		.byte	0x1
 7157 05d8 42       		.uleb128 .LLSDACSE1461-.LLSDACSB1461
 7158              	.LLSDACSB1461:
 7159 05d9 2B       		.uleb128 .LEHB201-.LFB1461
 7160 05da 05       		.uleb128 .LEHE201-.LEHB201
 7161 05db 00       		.uleb128 0
 7162 05dc 00       		.uleb128 0
 7163 05dd 47       		.uleb128 .LEHB202-.LFB1461
 7164 05de 05       		.uleb128 .LEHE202-.LEHB202
 7165 05df CC01     		.uleb128 .L378-.LFB1461
 7166 05e1 05       		.uleb128 0x5
 7167 05e2 8701     		.uleb128 .LEHB203-.LFB1461
 7168 05e4 14       		.uleb128 .LEHE203-.LEHB203
 7169 05e5 AF01     		.uleb128 .L379-.LFB1461
 7170 05e7 07       		.uleb128 0x7
 7171 05e8 A501     		.uleb128 .LEHB204-.LFB1461
 7172 05ea 05       		.uleb128 .LEHE204-.LEHB204
 7173 05eb CC01     		.uleb128 .L378-.LFB1461
 7174 05ed 05       		.uleb128 0x5
 7175 05ee 9A02     		.uleb128 .LEHB205-.LFB1461
 7176 05f0 5E       		.uleb128 .LEHE205-.LEHB205
 7177 05f1 D204     		.uleb128 .L380-.LFB1461
 7178 05f3 00       		.uleb128 0
 7179 05f4 9B03     		.uleb128 .LEHB206-.LFB1461
 7180 05f6 05       		.uleb128 .LEHE206-.LEHB206
 7181 05f7 F904     		.uleb128 .L381-.LFB1461
 7182 05f9 00       		.uleb128 0
 7183 05fa CF03     		.uleb128 .LEHB207-.LFB1461
 7184 05fc 3F       		.uleb128 .LEHE207-.LEHB207
 7185 05fd E504     		.uleb128 .L382-.LFB1461
 7186 05ff 00       		.uleb128 0
 7187 0600 9804     		.uleb128 .LEHB208-.LFB1461
 7188 0602 05       		.uleb128 .LEHE208-.LEHB208
 7189 0603 F904     		.uleb128 .L381-.LFB1461
 7190 0605 00       		.uleb128 0
 7191 0606 AC04     		.uleb128 .LEHB209-.LFB1461
 7192 0608 1F       		.uleb128 .LEHE209-.LEHB209
 7193 0609 8C05     		.uleb128 .L383-.LFB1461
 7194 060b 00       		.uleb128 0
 7195 060c CB04     		.uleb128 .LEHB210-.LFB1461
 7196 060e 1A       		.uleb128 .LEHE210-.LEHB210
 7197 060f 00       		.uleb128 0
 7198 0610 00       		.uleb128 0
 7199 0611 8705     		.uleb128 .LEHB211-.LFB1461
 7200 0613 05       		.uleb128 .LEHE211-.LEHB211
 7201 0614 00       		.uleb128 0
 7202 0615 00       		.uleb128 0
 7203 0616 9A05     		.uleb128 .LEHB212-.LFB1461
 7204 0618 05       		.uleb128 .LEHE212-.LEHB212
 7205 0619 00       		.uleb128 0
 7206 061a 00       		.uleb128 0
 7207              	.LLSDACSE1461:
 7208 061b 03       		.byte	0x3
 7209 061c 00       		.byte	0
 7210 061d 02       		.byte	0x2
 7211 061e 7D       		.byte	0x7d
 7212 061f 01       		.byte	0x1
 7213 0620 7D       		.byte	0x7d
 7214 0621 00       		.byte	0
 7215 0622 7D       		.byte	0x7d
 7216 0623 00       		.align 4
 7217 0624 00000000 		.long	0
 7218              	
 7219 0628 00000000 		.long	_ZTISt9exception
 7220 062c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7221              	.LLSDATT1461:
 7222              		.text
 7225              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryForma
 7226              	.LFB1462:
  16:../ExecuteTest.h **** {
 7227              		.loc 4 16 0
 7228              		.cfi_startproc
 7229              		.cfi_personality 0x3,__gxx_personality_v0
 7230              		.cfi_lsda 0x3,.LLSDA1462
 7231 373c 55       		pushq	%rbp
 7232              		.cfi_def_cfa_offset 16
 7233              		.cfi_offset 6, -16
 7234 373d 4889E5   		movq	%rsp, %rbp
 7235              		.cfi_def_cfa_register 6
 7236 3740 4154     		pushq	%r12
 7237 3742 53       		pushq	%rbx
 7238 3743 4881EC50 		subq	$1616, %rsp
 7238      060000
 7239              		.cfi_offset 12, -24
 7240              		.cfi_offset 3, -32
 7241 374a 4889BDA8 		movq	%rdi, -1624(%rbp)
 7241      F9FFFF
 7242 3751 4889B5A0 		movq	%rsi, -1632(%rbp)
 7242      F9FFFF
  16:../ExecuteTest.h **** {
 7243              		.loc 4 16 0
 7244 3758 64488B04 		movq	%fs:40, %rax
 7244      25280000 
 7244      00
 7245 3761 488945E8 		movq	%rax, -24(%rbp)
 7246 3765 31C0     		xorl	%eax, %eax
 7247              	.LEHB213:
  18:../ExecuteTest.h **** 
 7248              		.loc 4 18 0
 7249 3767 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7249      00
 7250              	.LEHE213:
 7251 376c 4889C2   		movq	%rax, %rdx
 7252 376f 488B85A0 		movq	-1632(%rbp), %rax
 7252      F9FFFF
 7253 3776 488902   		movq	%rax, (%rdx)
 7254              	.LBB132:
  23:../ExecuteTest.h **** #endif
 7255              		.loc 4 23 0
 7256 3779 488D8580 		leaq	-1152(%rbp), %rax
 7256      FBFFFF
 7257 3780 4889C7   		movq	%rax, %rdi
 7258              	.LEHB214:
 7259 3783 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7259      00
 7260              	.LEHE214:
  23:../ExecuteTest.h **** #endif
 7261              		.loc 4 23 0 is_stmt 0 discriminator 1
 7262 3788 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7262      000000
 7263 378f BE010000 		movl	$1, %esi
 7263      00
 7264 3794 4889C7   		movq	%rax, %rdi
 7265 3797 E8000000 		call	__sigsetjmp
 7265      00
 7266 379c 85C0     		testl	%eax, %eax
 7267 379e 0F95C0   		setne	%al
 7268 37a1 84C0     		testb	%al, %al
 7269 37a3 7423     		je	.L406
  23:../ExecuteTest.h **** #endif
 7270              		.loc 4 23 0 discriminator 3
 7271 37a5 BF080000 		movl	$8, %edi
 7271      00
 7272 37aa E8000000 		call	__cxa_allocate_exception
 7272      00
 7273 37af 48C70000 		movq	$.LC43, (%rax)
 7273      000000
 7274 37b6 BA000000 		movl	$0, %edx
 7274      00
 7275 37bb BE000000 		movl	$_ZTIPKc, %esi
 7275      00
 7276 37c0 4889C7   		movq	%rax, %rdi
 7277              	.LEHB215:
 7278 37c3 E8000000 		call	__cxa_throw
 7278      00
 7279              	.L406:
  25:../ExecuteTest.h **** 	}
 7280              		.loc 4 25 0 is_stmt 1
 7281 37c8 488B85A8 		movq	-1624(%rbp), %rax
 7281      F9FFFF
 7282 37cf 4889C7   		movq	%rax, %rdi
 7283 37d2 E8FBE1FF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv
 7283      FF
 7284              	.LEHE215:
  23:../ExecuteTest.h **** #endif
 7285              		.loc 4 23 0
 7286 37d7 488D8580 		leaq	-1152(%rbp), %rax
 7286      FBFFFF
 7287 37de 4889C7   		movq	%rax, %rdi
 7288              	.LEHB216:
 7289 37e1 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7289      00
 7290              	.LEHE216:
 7291              	.LBE132:
 7292              		.loc 4 42 0
 7293 37e6 E9F00100 		jmp	.L386
 7293      00
 7294              	.L401:
 7295 37eb 4989C4   		movq	%rax, %r12
 7296 37ee 4889D3   		movq	%rdx, %rbx
 7297              	.LBB133:
  23:../ExecuteTest.h **** #endif
 7298              		.loc 4 23 0
 7299 37f1 488D8580 		leaq	-1152(%rbp), %rax
 7299      FBFFFF
 7300 37f8 4889C7   		movq	%rax, %rdi
 7301 37fb E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7301      00
 7302 3800 4C89E0   		movq	%r12, %rax
 7303 3803 4889DA   		movq	%rbx, %rdx
 7304 3806 EB00     		jmp	.L390
 7305              	.L400:
 7306              	.L390:
 7307 3808 4883FA01 		cmpq	$1, %rdx
 7308 380c 740F     		je	.L392
 7309 380e 4883FA02 		cmpq	$2, %rdx
 7310 3812 0F84A600 		je	.L393
 7310      0000
 7311 3818 E9430100 		jmp	.L407
 7311      00
 7312              	.L392:
 7313              	.LBE133:
 7314              	.LBB134:
  27:../ExecuteTest.h **** 	{
 7315              		.loc 4 27 0
 7316 381d 4889C7   		movq	%rax, %rdi
 7317 3820 E8000000 		call	__cxa_begin_catch
 7317      00
 7318 3825 488985B0 		movq	%rax, -1616(%rbp)
 7318      F9FFFF
  30:../ExecuteTest.h **** 	}
 7319              		.loc 4 30 0
 7320 382c 488B85B0 		movq	-1616(%rbp), %rax
 7320      F9FFFF
 7321 3833 488B00   		movq	(%rax), %rax
 7322 3836 4883C010 		addq	$16, %rax
 7323 383a 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7324              		.loc 4 29 0
 7325 383d 488B95B0 		movq	-1616(%rbp), %rdx
 7325      F9FFFF
 7326 3844 4889D7   		movq	%rdx, %rdi
 7327 3847 FFD0     		call	*%rax
 7328 3849 4889C3   		movq	%rax, %rbx
 7329 384c 488B85B0 		movq	-1616(%rbp), %rax
 7329      F9FFFF
 7330 3853 4889C7   		movq	%rax, %rdi
 7331              	.LEHB217:
 7332 3856 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7332      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7333              		.loc 4 29 0 is_stmt 0 discriminator 1
 7334 385b 4189C4   		movl	%eax, %r12d
 7335 385e 488B85B0 		movq	-1616(%rbp), %rax
 7335      F9FFFF
 7336 3865 4889C7   		movq	%rax, %rdi
 7337 3868 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7337      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7338              		.loc 4 29 0 discriminator 2
 7339 386d 4889C1   		movq	%rax, %rcx
 7340 3870 488B85A0 		movq	-1632(%rbp), %rax
 7340      F9FFFF
 7341 3877 488B10   		movq	(%rax), %rdx
 7342 387a 488B85A0 		movq	-1632(%rbp), %rax
 7342      F9FFFF
 7343 3881 488B7008 		movq	8(%rax), %rsi
 7344 3885 488D85C0 		leaq	-1600(%rbp), %rax
 7344      F9FFFF
 7345 388c 4589E0   		movl	%r12d, %r8d
 7346 388f 4889C7   		movq	%rax, %rdi
 7347 3892 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7347      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7348              		.loc 4 29 0 discriminator 4
 7349 3897 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7349      00
 7350 389c 488B00   		movq	(%rax), %rax
 7351 389f 488D8DC0 		leaq	-1600(%rbp), %rcx
 7351      F9FFFF
 7352 38a6 4889DA   		movq	%rbx, %rdx
 7353 38a9 4889CE   		movq	%rcx, %rsi
 7354 38ac 4889C7   		movq	%rax, %rdi
 7355 38af E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7355      00
 7356              	.LEHE217:
  27:../ExecuteTest.h **** 	{
 7357              		.loc 4 27 0 is_stmt 1 discriminator 8
 7358 38b4 E8000000 		call	__cxa_end_catch
 7358      00
 7359              	.LBE134:
 7360              		.loc 4 42 0 discriminator 8
 7361 38b9 E91D0100 		jmp	.L386
 7361      00
 7362              	.L393:
 7363              	.LBB135:
  32:../ExecuteTest.h **** 	{
 7364              		.loc 4 32 0
 7365 38be 4889C7   		movq	%rax, %rdi
 7366 38c1 E8000000 		call	__cxa_begin_catch
 7366      00
 7367 38c6 488985B8 		movq	%rax, -1608(%rbp)
 7367      F9FFFF
 7368              	.LBB136:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7369              		.loc 4 34 0
 7370 38cd 488D85E0 		leaq	-1568(%rbp), %rax
 7370      F9FFFF
 7371 38d4 4889C7   		movq	%rax, %rdi
 7372              	.LEHB218:
 7373 38d7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7373      00
 7374              	.LEHE218:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7375              		.loc 4 35 0
 7376 38dc 488B85B8 		movq	-1608(%rbp), %rax
 7376      F9FFFF
 7377 38e3 488B00   		movq	(%rax), %rax
 7378 38e6 4883C010 		addq	$16, %rax
 7379 38ea 488B00   		movq	(%rax), %rax
 7380 38ed 488B95B8 		movq	-1608(%rbp), %rdx
 7380      F9FFFF
 7381 38f4 4889D7   		movq	%rdx, %rdi
 7382 38f7 FFD0     		call	*%rax
 7383 38f9 4889C3   		movq	%rax, %rbx
 7384 38fc 488D85E0 		leaq	-1568(%rbp), %rax
 7384      F9FFFF
 7385 3903 BE000000 		movl	$.LC3, %esi
 7385      00
 7386 3908 4889C7   		movq	%rax, %rdi
 7387              	.LEHB219:
 7388 390b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7388      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7389              		.loc 4 35 0 is_stmt 0 discriminator 1
 7390 3910 4889DE   		movq	%rbx, %rsi
 7391 3913 4889C7   		movq	%rax, %rdi
 7392 3916 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7392      00
  36:../ExecuteTest.h **** 	}
 7393              		.loc 4 36 0 is_stmt 1
 7394 391b 488D85E0 		leaq	-1568(%rbp), %rax
 7394      F9FFFF
 7395 3922 4889C7   		movq	%rax, %rdi
 7396 3925 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7396      00
 7397 392a 4889C3   		movq	%rax, %rbx
 7398 392d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7398      00
  36:../ExecuteTest.h **** 	}
 7399              		.loc 4 36 0 is_stmt 0 discriminator 1
 7400 3932 488B00   		movq	(%rax), %rax
 7401 3935 488B8DA0 		movq	-1632(%rbp), %rcx
 7401      F9FFFF
 7402 393c 4889DA   		movq	%rbx, %rdx
 7403 393f 4889CE   		movq	%rcx, %rsi
 7404 3942 4889C7   		movq	%rax, %rdi
 7405 3945 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7405      00
 7406              	.LEHE219:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7407              		.loc 4 34 0 is_stmt 1
 7408 394a 488D85E0 		leaq	-1568(%rbp), %rax
 7408      F9FFFF
 7409 3951 4889C7   		movq	%rax, %rdi
 7410              	.LEHB220:
 7411 3954 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7411      00
 7412              	.LEHE220:
 7413              	.LBE136:
  32:../ExecuteTest.h **** 	{
 7414              		.loc 4 32 0
 7415 3959 E8000000 		call	__cxa_end_catch
 7415      00
 7416              	.LBE135:
 7417              		.loc 4 42 0
 7418 395e EB7B     		jmp	.L386
 7419              	.L407:
  38:../ExecuteTest.h **** 	{
 7420              		.loc 4 38 0
 7421 3960 4889C7   		movq	%rax, %rdi
 7422 3963 E8000000 		call	__cxa_begin_catch
 7422      00
 7423              	.LEHB221:
  40:../ExecuteTest.h **** 	}
 7424              		.loc 4 40 0
 7425 3968 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7425      00
 7426 396d 488B00   		movq	(%rax), %rax
 7427 3970 488B8DA0 		movq	-1632(%rbp), %rcx
 7427      F9FFFF
 7428 3977 BA000000 		movl	$.LC44, %edx
 7428      00
 7429 397c 4889CE   		movq	%rcx, %rsi
 7430 397f 4889C7   		movq	%rax, %rdi
 7431 3982 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7431      00
 7432              	.LEHE221:
 7433              	.LEHB222:
  38:../ExecuteTest.h **** 	{
 7434              		.loc 4 38 0
 7435 3987 E8000000 		call	__cxa_end_catch
 7435      00
 7436              		.loc 4 42 0
 7437 398c EB4D     		jmp	.L386
 7438              	.L402:
 7439 398e 4889C3   		movq	%rax, %rbx
 7440              	.LBB138:
  27:../ExecuteTest.h **** 	{
 7441              		.loc 4 27 0
 7442 3991 E8000000 		call	__cxa_end_catch
 7442      00
 7443 3996 4889D8   		movq	%rbx, %rax
 7444 3999 4889C7   		movq	%rax, %rdi
 7445 399c E8000000 		call	_Unwind_Resume
 7445      00
 7446              	.LEHE222:
 7447              	.L404:
 7448 39a1 4889C3   		movq	%rax, %rbx
 7449              	.LBE138:
 7450              	.LBB139:
 7451              	.LBB137:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7452              		.loc 4 34 0
 7453 39a4 488D85E0 		leaq	-1568(%rbp), %rax
 7453      F9FFFF
 7454 39ab 4889C7   		movq	%rax, %rdi
 7455 39ae E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7455      00
 7456 39b3 EB03     		jmp	.L397
 7457              	.L403:
 7458 39b5 4889C3   		movq	%rax, %rbx
 7459              	.L397:
 7460              	.LBE137:
  32:../ExecuteTest.h **** 	{
 7461              		.loc 4 32 0
 7462 39b8 E8000000 		call	__cxa_end_catch
 7462      00
 7463 39bd 4889D8   		movq	%rbx, %rax
 7464 39c0 4889C7   		movq	%rax, %rdi
 7465              	.LEHB223:
 7466 39c3 E8000000 		call	_Unwind_Resume
 7466      00
 7467              	.LEHE223:
 7468              	.L405:
 7469 39c8 4889C3   		movq	%rax, %rbx
 7470              	.LBE139:
  38:../ExecuteTest.h **** 	{
 7471              		.loc 4 38 0
 7472 39cb E8000000 		call	__cxa_end_catch
 7472      00
 7473 39d0 4889D8   		movq	%rbx, %rax
 7474 39d3 4889C7   		movq	%rax, %rdi
 7475              	.LEHB224:
 7476 39d6 E8000000 		call	_Unwind_Resume
 7476      00
 7477              	.LEHE224:
 7478              	.L386:
 7479              		.loc 4 42 0
 7480 39db 488B45E8 		movq	-24(%rbp), %rax
 7481 39df 64483304 		xorq	%fs:40, %rax
 7481      25280000 
 7481      00
 7482 39e8 7405     		je	.L399
 7483 39ea E8000000 		call	__stack_chk_fail
 7483      00
 7484              	.L399:
 7485 39ef 4881C450 		addq	$1616, %rsp
 7485      060000
 7486 39f6 5B       		popq	%rbx
 7487 39f7 415C     		popq	%r12
 7488 39f9 5D       		popq	%rbp
 7489              		.cfi_def_cfa 7, 8
 7490 39fa C3       		ret
 7491              		.cfi_endproc
 7492              	.LFE1462:
 7493              		.section	.gcc_except_table
 7494              		.align 4
 7495              	.LLSDA1462:
 7496 0630 FF       		.byte	0xff
 7497 0631 03       		.byte	0x3
 7498 0632 59       		.uleb128 .LLSDATT1462-.LLSDATTD1462
 7499              	.LLSDATTD1462:
 7500 0633 01       		.byte	0x1
 7501 0634 42       		.uleb128 .LLSDACSE1462-.LLSDACSB1462
 7502              	.LLSDACSB1462:
 7503 0635 2B       		.uleb128 .LEHB213-.LFB1462
 7504 0636 05       		.uleb128 .LEHE213-.LEHB213
 7505 0637 00       		.uleb128 0
 7506 0638 00       		.uleb128 0
 7507 0639 47       		.uleb128 .LEHB214-.LFB1462
 7508 063a 05       		.uleb128 .LEHE214-.LEHB214
 7509 063b CC01     		.uleb128 .L400-.LFB1462
 7510 063d 05       		.uleb128 0x5
 7511 063e 8701     		.uleb128 .LEHB215-.LFB1462
 7512 0640 14       		.uleb128 .LEHE215-.LEHB215
 7513 0641 AF01     		.uleb128 .L401-.LFB1462
 7514 0643 07       		.uleb128 0x7
 7515 0644 A501     		.uleb128 .LEHB216-.LFB1462
 7516 0646 05       		.uleb128 .LEHE216-.LEHB216
 7517 0647 CC01     		.uleb128 .L400-.LFB1462
 7518 0649 05       		.uleb128 0x5
 7519 064a 9A02     		.uleb128 .LEHB217-.LFB1462
 7520 064c 5E       		.uleb128 .LEHE217-.LEHB217
 7521 064d D204     		.uleb128 .L402-.LFB1462
 7522 064f 00       		.uleb128 0
 7523 0650 9B03     		.uleb128 .LEHB218-.LFB1462
 7524 0652 05       		.uleb128 .LEHE218-.LEHB218
 7525 0653 F904     		.uleb128 .L403-.LFB1462
 7526 0655 00       		.uleb128 0
 7527 0656 CF03     		.uleb128 .LEHB219-.LFB1462
 7528 0658 3F       		.uleb128 .LEHE219-.LEHB219
 7529 0659 E504     		.uleb128 .L404-.LFB1462
 7530 065b 00       		.uleb128 0
 7531 065c 9804     		.uleb128 .LEHB220-.LFB1462
 7532 065e 05       		.uleb128 .LEHE220-.LEHB220
 7533 065f F904     		.uleb128 .L403-.LFB1462
 7534 0661 00       		.uleb128 0
 7535 0662 AC04     		.uleb128 .LEHB221-.LFB1462
 7536 0664 1F       		.uleb128 .LEHE221-.LEHB221
 7537 0665 8C05     		.uleb128 .L405-.LFB1462
 7538 0667 00       		.uleb128 0
 7539 0668 CB04     		.uleb128 .LEHB222-.LFB1462
 7540 066a 1A       		.uleb128 .LEHE222-.LEHB222
 7541 066b 00       		.uleb128 0
 7542 066c 00       		.uleb128 0
 7543 066d 8705     		.uleb128 .LEHB223-.LFB1462
 7544 066f 05       		.uleb128 .LEHE223-.LEHB223
 7545 0670 00       		.uleb128 0
 7546 0671 00       		.uleb128 0
 7547 0672 9A05     		.uleb128 .LEHB224-.LFB1462
 7548 0674 05       		.uleb128 .LEHE224-.LEHB224
 7549 0675 00       		.uleb128 0
 7550 0676 00       		.uleb128 0
 7551              	.LLSDACSE1462:
 7552 0677 03       		.byte	0x3
 7553 0678 00       		.byte	0
 7554 0679 02       		.byte	0x2
 7555 067a 7D       		.byte	0x7d
 7556 067b 01       		.byte	0x1
 7557 067c 7D       		.byte	0x7d
 7558 067d 00       		.byte	0
 7559 067e 7D       		.byte	0x7d
 7560 067f 00       		.align 4
 7561 0680 00000000 		.long	0
 7562              	
 7563 0684 00000000 		.long	_ZTISt9exception
 7564 0688 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7565              	.LLSDATT1462:
 7566              		.text
 7569              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEE
 7570              	.LFB1463:
  16:../ExecuteTest.h **** {
 7571              		.loc 4 16 0
 7572              		.cfi_startproc
 7573              		.cfi_personality 0x3,__gxx_personality_v0
 7574              		.cfi_lsda 0x3,.LLSDA1463
 7575 39fb 55       		pushq	%rbp
 7576              		.cfi_def_cfa_offset 16
 7577              		.cfi_offset 6, -16
 7578 39fc 4889E5   		movq	%rsp, %rbp
 7579              		.cfi_def_cfa_register 6
 7580 39ff 4154     		pushq	%r12
 7581 3a01 53       		pushq	%rbx
 7582 3a02 4881EC50 		subq	$1616, %rsp
 7582      060000
 7583              		.cfi_offset 12, -24
 7584              		.cfi_offset 3, -32
 7585 3a09 4889BDA8 		movq	%rdi, -1624(%rbp)
 7585      F9FFFF
 7586 3a10 4889B5A0 		movq	%rsi, -1632(%rbp)
 7586      F9FFFF
  16:../ExecuteTest.h **** {
 7587              		.loc 4 16 0
 7588 3a17 64488B04 		movq	%fs:40, %rax
 7588      25280000 
 7588      00
 7589 3a20 488945E8 		movq	%rax, -24(%rbp)
 7590 3a24 31C0     		xorl	%eax, %eax
 7591              	.LEHB225:
  18:../ExecuteTest.h **** 
 7592              		.loc 4 18 0
 7593 3a26 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7593      00
 7594              	.LEHE225:
 7595 3a2b 4889C2   		movq	%rax, %rdx
 7596 3a2e 488B85A0 		movq	-1632(%rbp), %rax
 7596      F9FFFF
 7597 3a35 488902   		movq	%rax, (%rdx)
 7598              	.LBB140:
  23:../ExecuteTest.h **** #endif
 7599              		.loc 4 23 0
 7600 3a38 488D8580 		leaq	-1152(%rbp), %rax
 7600      FBFFFF
 7601 3a3f 4889C7   		movq	%rax, %rdi
 7602              	.LEHB226:
 7603 3a42 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7603      00
 7604              	.LEHE226:
  23:../ExecuteTest.h **** #endif
 7605              		.loc 4 23 0 is_stmt 0 discriminator 1
 7606 3a47 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7606      000000
 7607 3a4e BE010000 		movl	$1, %esi
 7607      00
 7608 3a53 4889C7   		movq	%rax, %rdi
 7609 3a56 E8000000 		call	__sigsetjmp
 7609      00
 7610 3a5b 85C0     		testl	%eax, %eax
 7611 3a5d 0F95C0   		setne	%al
 7612 3a60 84C0     		testb	%al, %al
 7613 3a62 7423     		je	.L428
  23:../ExecuteTest.h **** #endif
 7614              		.loc 4 23 0 discriminator 3
 7615 3a64 BF080000 		movl	$8, %edi
 7615      00
 7616 3a69 E8000000 		call	__cxa_allocate_exception
 7616      00
 7617 3a6e 48C70000 		movq	$.LC43, (%rax)
 7617      000000
 7618 3a75 BA000000 		movl	$0, %edx
 7618      00
 7619 3a7a BE000000 		movl	$_ZTIPKc, %esi
 7619      00
 7620 3a7f 4889C7   		movq	%rax, %rdi
 7621              	.LEHB227:
 7622 3a82 E8000000 		call	__cxa_throw
 7622      00
 7623              	.L428:
  25:../ExecuteTest.h **** 	}
 7624              		.loc 4 25 0 is_stmt 1
 7625 3a87 488B85A8 		movq	-1624(%rbp), %rax
 7625      F9FFFF
 7626 3a8e 4889C7   		movq	%rax, %rdi
 7627 3a91 E870E4FF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv
 7627      FF
 7628              	.LEHE227:
  23:../ExecuteTest.h **** #endif
 7629              		.loc 4 23 0
 7630 3a96 488D8580 		leaq	-1152(%rbp), %rax
 7630      FBFFFF
 7631 3a9d 4889C7   		movq	%rax, %rdi
 7632              	.LEHB228:
 7633 3aa0 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7633      00
 7634              	.LEHE228:
 7635              	.LBE140:
 7636              		.loc 4 42 0
 7637 3aa5 E9F00100 		jmp	.L408
 7637      00
 7638              	.L423:
 7639 3aaa 4989C4   		movq	%rax, %r12
 7640 3aad 4889D3   		movq	%rdx, %rbx
 7641              	.LBB141:
  23:../ExecuteTest.h **** #endif
 7642              		.loc 4 23 0
 7643 3ab0 488D8580 		leaq	-1152(%rbp), %rax
 7643      FBFFFF
 7644 3ab7 4889C7   		movq	%rax, %rdi
 7645 3aba E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7645      00
 7646 3abf 4C89E0   		movq	%r12, %rax
 7647 3ac2 4889DA   		movq	%rbx, %rdx
 7648 3ac5 EB00     		jmp	.L412
 7649              	.L422:
 7650              	.L412:
 7651 3ac7 4883FA01 		cmpq	$1, %rdx
 7652 3acb 740F     		je	.L414
 7653 3acd 4883FA02 		cmpq	$2, %rdx
 7654 3ad1 0F84A600 		je	.L415
 7654      0000
 7655 3ad7 E9430100 		jmp	.L429
 7655      00
 7656              	.L414:
 7657              	.LBE141:
 7658              	.LBB142:
  27:../ExecuteTest.h **** 	{
 7659              		.loc 4 27 0
 7660 3adc 4889C7   		movq	%rax, %rdi
 7661 3adf E8000000 		call	__cxa_begin_catch
 7661      00
 7662 3ae4 488985B0 		movq	%rax, -1616(%rbp)
 7662      F9FFFF
  30:../ExecuteTest.h **** 	}
 7663              		.loc 4 30 0
 7664 3aeb 488B85B0 		movq	-1616(%rbp), %rax
 7664      F9FFFF
 7665 3af2 488B00   		movq	(%rax), %rax
 7666 3af5 4883C010 		addq	$16, %rax
 7667 3af9 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7668              		.loc 4 29 0
 7669 3afc 488B95B0 		movq	-1616(%rbp), %rdx
 7669      F9FFFF
 7670 3b03 4889D7   		movq	%rdx, %rdi
 7671 3b06 FFD0     		call	*%rax
 7672 3b08 4889C3   		movq	%rax, %rbx
 7673 3b0b 488B85B0 		movq	-1616(%rbp), %rax
 7673      F9FFFF
 7674 3b12 4889C7   		movq	%rax, %rdi
 7675              	.LEHB229:
 7676 3b15 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7676      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7677              		.loc 4 29 0 is_stmt 0 discriminator 1
 7678 3b1a 4189C4   		movl	%eax, %r12d
 7679 3b1d 488B85B0 		movq	-1616(%rbp), %rax
 7679      F9FFFF
 7680 3b24 4889C7   		movq	%rax, %rdi
 7681 3b27 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7681      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7682              		.loc 4 29 0 discriminator 2
 7683 3b2c 4889C1   		movq	%rax, %rcx
 7684 3b2f 488B85A0 		movq	-1632(%rbp), %rax
 7684      F9FFFF
 7685 3b36 488B10   		movq	(%rax), %rdx
 7686 3b39 488B85A0 		movq	-1632(%rbp), %rax
 7686      F9FFFF
 7687 3b40 488B7008 		movq	8(%rax), %rsi
 7688 3b44 488D85C0 		leaq	-1600(%rbp), %rax
 7688      F9FFFF
 7689 3b4b 4589E0   		movl	%r12d, %r8d
 7690 3b4e 4889C7   		movq	%rax, %rdi
 7691 3b51 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7691      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7692              		.loc 4 29 0 discriminator 4
 7693 3b56 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7693      00
 7694 3b5b 488B00   		movq	(%rax), %rax
 7695 3b5e 488D8DC0 		leaq	-1600(%rbp), %rcx
 7695      F9FFFF
 7696 3b65 4889DA   		movq	%rbx, %rdx
 7697 3b68 4889CE   		movq	%rcx, %rsi
 7698 3b6b 4889C7   		movq	%rax, %rdi
 7699 3b6e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7699      00
 7700              	.LEHE229:
  27:../ExecuteTest.h **** 	{
 7701              		.loc 4 27 0 is_stmt 1 discriminator 8
 7702 3b73 E8000000 		call	__cxa_end_catch
 7702      00
 7703              	.LBE142:
 7704              		.loc 4 42 0 discriminator 8
 7705 3b78 E91D0100 		jmp	.L408
 7705      00
 7706              	.L415:
 7707              	.LBB143:
  32:../ExecuteTest.h **** 	{
 7708              		.loc 4 32 0
 7709 3b7d 4889C7   		movq	%rax, %rdi
 7710 3b80 E8000000 		call	__cxa_begin_catch
 7710      00
 7711 3b85 488985B8 		movq	%rax, -1608(%rbp)
 7711      F9FFFF
 7712              	.LBB144:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7713              		.loc 4 34 0
 7714 3b8c 488D85E0 		leaq	-1568(%rbp), %rax
 7714      F9FFFF
 7715 3b93 4889C7   		movq	%rax, %rdi
 7716              	.LEHB230:
 7717 3b96 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7717      00
 7718              	.LEHE230:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7719              		.loc 4 35 0
 7720 3b9b 488B85B8 		movq	-1608(%rbp), %rax
 7720      F9FFFF
 7721 3ba2 488B00   		movq	(%rax), %rax
 7722 3ba5 4883C010 		addq	$16, %rax
 7723 3ba9 488B00   		movq	(%rax), %rax
 7724 3bac 488B95B8 		movq	-1608(%rbp), %rdx
 7724      F9FFFF
 7725 3bb3 4889D7   		movq	%rdx, %rdi
 7726 3bb6 FFD0     		call	*%rax
 7727 3bb8 4889C3   		movq	%rax, %rbx
 7728 3bbb 488D85E0 		leaq	-1568(%rbp), %rax
 7728      F9FFFF
 7729 3bc2 BE000000 		movl	$.LC3, %esi
 7729      00
 7730 3bc7 4889C7   		movq	%rax, %rdi
 7731              	.LEHB231:
 7732 3bca E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7732      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7733              		.loc 4 35 0 is_stmt 0 discriminator 1
 7734 3bcf 4889DE   		movq	%rbx, %rsi
 7735 3bd2 4889C7   		movq	%rax, %rdi
 7736 3bd5 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7736      00
  36:../ExecuteTest.h **** 	}
 7737              		.loc 4 36 0 is_stmt 1
 7738 3bda 488D85E0 		leaq	-1568(%rbp), %rax
 7738      F9FFFF
 7739 3be1 4889C7   		movq	%rax, %rdi
 7740 3be4 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7740      00
 7741 3be9 4889C3   		movq	%rax, %rbx
 7742 3bec E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7742      00
  36:../ExecuteTest.h **** 	}
 7743              		.loc 4 36 0 is_stmt 0 discriminator 1
 7744 3bf1 488B00   		movq	(%rax), %rax
 7745 3bf4 488B8DA0 		movq	-1632(%rbp), %rcx
 7745      F9FFFF
 7746 3bfb 4889DA   		movq	%rbx, %rdx
 7747 3bfe 4889CE   		movq	%rcx, %rsi
 7748 3c01 4889C7   		movq	%rax, %rdi
 7749 3c04 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7749      00
 7750              	.LEHE231:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7751              		.loc 4 34 0 is_stmt 1
 7752 3c09 488D85E0 		leaq	-1568(%rbp), %rax
 7752      F9FFFF
 7753 3c10 4889C7   		movq	%rax, %rdi
 7754              	.LEHB232:
 7755 3c13 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7755      00
 7756              	.LEHE232:
 7757              	.LBE144:
  32:../ExecuteTest.h **** 	{
 7758              		.loc 4 32 0
 7759 3c18 E8000000 		call	__cxa_end_catch
 7759      00
 7760              	.LBE143:
 7761              		.loc 4 42 0
 7762 3c1d EB7B     		jmp	.L408
 7763              	.L429:
  38:../ExecuteTest.h **** 	{
 7764              		.loc 4 38 0
 7765 3c1f 4889C7   		movq	%rax, %rdi
 7766 3c22 E8000000 		call	__cxa_begin_catch
 7766      00
 7767              	.LEHB233:
  40:../ExecuteTest.h **** 	}
 7768              		.loc 4 40 0
 7769 3c27 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7769      00
 7770 3c2c 488B00   		movq	(%rax), %rax
 7771 3c2f 488B8DA0 		movq	-1632(%rbp), %rcx
 7771      F9FFFF
 7772 3c36 BA000000 		movl	$.LC44, %edx
 7772      00
 7773 3c3b 4889CE   		movq	%rcx, %rsi
 7774 3c3e 4889C7   		movq	%rax, %rdi
 7775 3c41 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7775      00
 7776              	.LEHE233:
 7777              	.LEHB234:
  38:../ExecuteTest.h **** 	{
 7778              		.loc 4 38 0
 7779 3c46 E8000000 		call	__cxa_end_catch
 7779      00
 7780              		.loc 4 42 0
 7781 3c4b EB4D     		jmp	.L408
 7782              	.L424:
 7783 3c4d 4889C3   		movq	%rax, %rbx
 7784              	.LBB146:
  27:../ExecuteTest.h **** 	{
 7785              		.loc 4 27 0
 7786 3c50 E8000000 		call	__cxa_end_catch
 7786      00
 7787 3c55 4889D8   		movq	%rbx, %rax
 7788 3c58 4889C7   		movq	%rax, %rdi
 7789 3c5b E8000000 		call	_Unwind_Resume
 7789      00
 7790              	.LEHE234:
 7791              	.L426:
 7792 3c60 4889C3   		movq	%rax, %rbx
 7793              	.LBE146:
 7794              	.LBB147:
 7795              	.LBB145:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7796              		.loc 4 34 0
 7797 3c63 488D85E0 		leaq	-1568(%rbp), %rax
 7797      F9FFFF
 7798 3c6a 4889C7   		movq	%rax, %rdi
 7799 3c6d E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7799      00
 7800 3c72 EB03     		jmp	.L419
 7801              	.L425:
 7802 3c74 4889C3   		movq	%rax, %rbx
 7803              	.L419:
 7804              	.LBE145:
  32:../ExecuteTest.h **** 	{
 7805              		.loc 4 32 0
 7806 3c77 E8000000 		call	__cxa_end_catch
 7806      00
 7807 3c7c 4889D8   		movq	%rbx, %rax
 7808 3c7f 4889C7   		movq	%rax, %rdi
 7809              	.LEHB235:
 7810 3c82 E8000000 		call	_Unwind_Resume
 7810      00
 7811              	.LEHE235:
 7812              	.L427:
 7813 3c87 4889C3   		movq	%rax, %rbx
 7814              	.LBE147:
  38:../ExecuteTest.h **** 	{
 7815              		.loc 4 38 0
 7816 3c8a E8000000 		call	__cxa_end_catch
 7816      00
 7817 3c8f 4889D8   		movq	%rbx, %rax
 7818 3c92 4889C7   		movq	%rax, %rdi
 7819              	.LEHB236:
 7820 3c95 E8000000 		call	_Unwind_Resume
 7820      00
 7821              	.LEHE236:
 7822              	.L408:
 7823              		.loc 4 42 0
 7824 3c9a 488B45E8 		movq	-24(%rbp), %rax
 7825 3c9e 64483304 		xorq	%fs:40, %rax
 7825      25280000 
 7825      00
 7826 3ca7 7405     		je	.L421
 7827 3ca9 E8000000 		call	__stack_chk_fail
 7827      00
 7828              	.L421:
 7829 3cae 4881C450 		addq	$1616, %rsp
 7829      060000
 7830 3cb5 5B       		popq	%rbx
 7831 3cb6 415C     		popq	%r12
 7832 3cb8 5D       		popq	%rbp
 7833              		.cfi_def_cfa 7, 8
 7834 3cb9 C3       		ret
 7835              		.cfi_endproc
 7836              	.LFE1463:
 7837              		.section	.gcc_except_table
 7838              		.align 4
 7839              	.LLSDA1463:
 7840 068c FF       		.byte	0xff
 7841 068d 03       		.byte	0x3
 7842 068e 59       		.uleb128 .LLSDATT1463-.LLSDATTD1463
 7843              	.LLSDATTD1463:
 7844 068f 01       		.byte	0x1
 7845 0690 42       		.uleb128 .LLSDACSE1463-.LLSDACSB1463
 7846              	.LLSDACSB1463:
 7847 0691 2B       		.uleb128 .LEHB225-.LFB1463
 7848 0692 05       		.uleb128 .LEHE225-.LEHB225
 7849 0693 00       		.uleb128 0
 7850 0694 00       		.uleb128 0
 7851 0695 47       		.uleb128 .LEHB226-.LFB1463
 7852 0696 05       		.uleb128 .LEHE226-.LEHB226
 7853 0697 CC01     		.uleb128 .L422-.LFB1463
 7854 0699 05       		.uleb128 0x5
 7855 069a 8701     		.uleb128 .LEHB227-.LFB1463
 7856 069c 14       		.uleb128 .LEHE227-.LEHB227
 7857 069d AF01     		.uleb128 .L423-.LFB1463
 7858 069f 07       		.uleb128 0x7
 7859 06a0 A501     		.uleb128 .LEHB228-.LFB1463
 7860 06a2 05       		.uleb128 .LEHE228-.LEHB228
 7861 06a3 CC01     		.uleb128 .L422-.LFB1463
 7862 06a5 05       		.uleb128 0x5
 7863 06a6 9A02     		.uleb128 .LEHB229-.LFB1463
 7864 06a8 5E       		.uleb128 .LEHE229-.LEHB229
 7865 06a9 D204     		.uleb128 .L424-.LFB1463
 7866 06ab 00       		.uleb128 0
 7867 06ac 9B03     		.uleb128 .LEHB230-.LFB1463
 7868 06ae 05       		.uleb128 .LEHE230-.LEHB230
 7869 06af F904     		.uleb128 .L425-.LFB1463
 7870 06b1 00       		.uleb128 0
 7871 06b2 CF03     		.uleb128 .LEHB231-.LFB1463
 7872 06b4 3F       		.uleb128 .LEHE231-.LEHB231
 7873 06b5 E504     		.uleb128 .L426-.LFB1463
 7874 06b7 00       		.uleb128 0
 7875 06b8 9804     		.uleb128 .LEHB232-.LFB1463
 7876 06ba 05       		.uleb128 .LEHE232-.LEHB232
 7877 06bb F904     		.uleb128 .L425-.LFB1463
 7878 06bd 00       		.uleb128 0
 7879 06be AC04     		.uleb128 .LEHB233-.LFB1463
 7880 06c0 1F       		.uleb128 .LEHE233-.LEHB233
 7881 06c1 8C05     		.uleb128 .L427-.LFB1463
 7882 06c3 00       		.uleb128 0
 7883 06c4 CB04     		.uleb128 .LEHB234-.LFB1463
 7884 06c6 1A       		.uleb128 .LEHE234-.LEHB234
 7885 06c7 00       		.uleb128 0
 7886 06c8 00       		.uleb128 0
 7887 06c9 8705     		.uleb128 .LEHB235-.LFB1463
 7888 06cb 05       		.uleb128 .LEHE235-.LEHB235
 7889 06cc 00       		.uleb128 0
 7890 06cd 00       		.uleb128 0
 7891 06ce 9A05     		.uleb128 .LEHB236-.LFB1463
 7892 06d0 05       		.uleb128 .LEHE236-.LEHB236
 7893 06d1 00       		.uleb128 0
 7894 06d2 00       		.uleb128 0
 7895              	.LLSDACSE1463:
 7896 06d3 03       		.byte	0x3
 7897 06d4 00       		.byte	0
 7898 06d5 02       		.byte	0x2
 7899 06d6 7D       		.byte	0x7d
 7900 06d7 01       		.byte	0x1
 7901 06d8 7D       		.byte	0x7d
 7902 06d9 00       		.byte	0
 7903 06da 7D       		.byte	0x7d
 7904 06db 00       		.align 4
 7905 06dc 00000000 		.long	0
 7906              	
 7907 06e0 00000000 		.long	_ZTISt9exception
 7908 06e4 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7909              	.LLSDATT1463:
 7910              		.text
 7913              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperEEEvR
 7914              	.LFB1464:
  16:../ExecuteTest.h **** {
 7915              		.loc 4 16 0
 7916              		.cfi_startproc
 7917              		.cfi_personality 0x3,__gxx_personality_v0
 7918              		.cfi_lsda 0x3,.LLSDA1464
 7919 3cba 55       		pushq	%rbp
 7920              		.cfi_def_cfa_offset 16
 7921              		.cfi_offset 6, -16
 7922 3cbb 4889E5   		movq	%rsp, %rbp
 7923              		.cfi_def_cfa_register 6
 7924 3cbe 4154     		pushq	%r12
 7925 3cc0 53       		pushq	%rbx
 7926 3cc1 4881EC50 		subq	$1616, %rsp
 7926      060000
 7927              		.cfi_offset 12, -24
 7928              		.cfi_offset 3, -32
 7929 3cc8 4889BDA8 		movq	%rdi, -1624(%rbp)
 7929      F9FFFF
 7930 3ccf 4889B5A0 		movq	%rsi, -1632(%rbp)
 7930      F9FFFF
  16:../ExecuteTest.h **** {
 7931              		.loc 4 16 0
 7932 3cd6 64488B04 		movq	%fs:40, %rax
 7932      25280000 
 7932      00
 7933 3cdf 488945E8 		movq	%rax, -24(%rbp)
 7934 3ce3 31C0     		xorl	%eax, %eax
 7935              	.LEHB237:
  18:../ExecuteTest.h **** 
 7936              		.loc 4 18 0
 7937 3ce5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7937      00
 7938              	.LEHE237:
 7939 3cea 4889C2   		movq	%rax, %rdx
 7940 3ced 488B85A0 		movq	-1632(%rbp), %rax
 7940      F9FFFF
 7941 3cf4 488902   		movq	%rax, (%rdx)
 7942              	.LBB148:
  23:../ExecuteTest.h **** #endif
 7943              		.loc 4 23 0
 7944 3cf7 488D8580 		leaq	-1152(%rbp), %rax
 7944      FBFFFF
 7945 3cfe 4889C7   		movq	%rax, %rdi
 7946              	.LEHB238:
 7947 3d01 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7947      00
 7948              	.LEHE238:
  23:../ExecuteTest.h **** #endif
 7949              		.loc 4 23 0 is_stmt 0 discriminator 1
 7950 3d06 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7950      000000
 7951 3d0d BE010000 		movl	$1, %esi
 7951      00
 7952 3d12 4889C7   		movq	%rax, %rdi
 7953 3d15 E8000000 		call	__sigsetjmp
 7953      00
 7954 3d1a 85C0     		testl	%eax, %eax
 7955 3d1c 0F95C0   		setne	%al
 7956 3d1f 84C0     		testb	%al, %al
 7957 3d21 7423     		je	.L450
  23:../ExecuteTest.h **** #endif
 7958              		.loc 4 23 0 discriminator 3
 7959 3d23 BF080000 		movl	$8, %edi
 7959      00
 7960 3d28 E8000000 		call	__cxa_allocate_exception
 7960      00
 7961 3d2d 48C70000 		movq	$.LC43, (%rax)
 7961      000000
 7962 3d34 BA000000 		movl	$0, %edx
 7962      00
 7963 3d39 BE000000 		movl	$_ZTIPKc, %esi
 7963      00
 7964 3d3e 4889C7   		movq	%rax, %rdi
 7965              	.LEHB239:
 7966 3d41 E8000000 		call	__cxa_throw
 7966      00
 7967              	.L450:
  25:../ExecuteTest.h **** 	}
 7968              		.loc 4 25 0 is_stmt 1
 7969 3d46 488B85A8 		movq	-1624(%rbp), %rax
 7969      F9FFFF
 7970 3d4d 4889C7   		movq	%rax, %rdi
 7971 3d50 E80BE7FF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv
 7971      FF
 7972              	.LEHE239:
  23:../ExecuteTest.h **** #endif
 7973              		.loc 4 23 0
 7974 3d55 488D8580 		leaq	-1152(%rbp), %rax
 7974      FBFFFF
 7975 3d5c 4889C7   		movq	%rax, %rdi
 7976              	.LEHB240:
 7977 3d5f E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7977      00
 7978              	.LEHE240:
 7979              	.LBE148:
 7980              		.loc 4 42 0
 7981 3d64 E9F00100 		jmp	.L430
 7981      00
 7982              	.L445:
 7983 3d69 4989C4   		movq	%rax, %r12
 7984 3d6c 4889D3   		movq	%rdx, %rbx
 7985              	.LBB149:
  23:../ExecuteTest.h **** #endif
 7986              		.loc 4 23 0
 7987 3d6f 488D8580 		leaq	-1152(%rbp), %rax
 7987      FBFFFF
 7988 3d76 4889C7   		movq	%rax, %rdi
 7989 3d79 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7989      00
 7990 3d7e 4C89E0   		movq	%r12, %rax
 7991 3d81 4889DA   		movq	%rbx, %rdx
 7992 3d84 EB00     		jmp	.L434
 7993              	.L444:
 7994              	.L434:
 7995 3d86 4883FA01 		cmpq	$1, %rdx
 7996 3d8a 740F     		je	.L436
 7997 3d8c 4883FA02 		cmpq	$2, %rdx
 7998 3d90 0F84A600 		je	.L437
 7998      0000
 7999 3d96 E9430100 		jmp	.L451
 7999      00
 8000              	.L436:
 8001              	.LBE149:
 8002              	.LBB150:
  27:../ExecuteTest.h **** 	{
 8003              		.loc 4 27 0
 8004 3d9b 4889C7   		movq	%rax, %rdi
 8005 3d9e E8000000 		call	__cxa_begin_catch
 8005      00
 8006 3da3 488985B0 		movq	%rax, -1616(%rbp)
 8006      F9FFFF
  30:../ExecuteTest.h **** 	}
 8007              		.loc 4 30 0
 8008 3daa 488B85B0 		movq	-1616(%rbp), %rax
 8008      F9FFFF
 8009 3db1 488B00   		movq	(%rax), %rax
 8010 3db4 4883C010 		addq	$16, %rax
 8011 3db8 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8012              		.loc 4 29 0
 8013 3dbb 488B95B0 		movq	-1616(%rbp), %rdx
 8013      F9FFFF
 8014 3dc2 4889D7   		movq	%rdx, %rdi
 8015 3dc5 FFD0     		call	*%rax
 8016 3dc7 4889C3   		movq	%rax, %rbx
 8017 3dca 488B85B0 		movq	-1616(%rbp), %rax
 8017      F9FFFF
 8018 3dd1 4889C7   		movq	%rax, %rdi
 8019              	.LEHB241:
 8020 3dd4 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 8020      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8021              		.loc 4 29 0 is_stmt 0 discriminator 1
 8022 3dd9 4189C4   		movl	%eax, %r12d
 8023 3ddc 488B85B0 		movq	-1616(%rbp), %rax
 8023      F9FFFF
 8024 3de3 4889C7   		movq	%rax, %rdi
 8025 3de6 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 8025      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8026              		.loc 4 29 0 discriminator 2
 8027 3deb 4889C1   		movq	%rax, %rcx
 8028 3dee 488B85A0 		movq	-1632(%rbp), %rax
 8028      F9FFFF
 8029 3df5 488B10   		movq	(%rax), %rdx
 8030 3df8 488B85A0 		movq	-1632(%rbp), %rax
 8030      F9FFFF
 8031 3dff 488B7008 		movq	8(%rax), %rsi
 8032 3e03 488D85C0 		leaq	-1600(%rbp), %rax
 8032      F9FFFF
 8033 3e0a 4589E0   		movl	%r12d, %r8d
 8034 3e0d 4889C7   		movq	%rax, %rdi
 8035 3e10 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 8035      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8036              		.loc 4 29 0 discriminator 4
 8037 3e15 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8037      00
 8038 3e1a 488B00   		movq	(%rax), %rax
 8039 3e1d 488D8DC0 		leaq	-1600(%rbp), %rcx
 8039      F9FFFF
 8040 3e24 4889DA   		movq	%rbx, %rdx
 8041 3e27 4889CE   		movq	%rcx, %rsi
 8042 3e2a 4889C7   		movq	%rax, %rdi
 8043 3e2d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8043      00
 8044              	.LEHE241:
  27:../ExecuteTest.h **** 	{
 8045              		.loc 4 27 0 is_stmt 1 discriminator 8
 8046 3e32 E8000000 		call	__cxa_end_catch
 8046      00
 8047              	.LBE150:
 8048              		.loc 4 42 0 discriminator 8
 8049 3e37 E91D0100 		jmp	.L430
 8049      00
 8050              	.L437:
 8051              	.LBB151:
  32:../ExecuteTest.h **** 	{
 8052              		.loc 4 32 0
 8053 3e3c 4889C7   		movq	%rax, %rdi
 8054 3e3f E8000000 		call	__cxa_begin_catch
 8054      00
 8055 3e44 488985B8 		movq	%rax, -1608(%rbp)
 8055      F9FFFF
 8056              	.LBB152:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8057              		.loc 4 34 0
 8058 3e4b 488D85E0 		leaq	-1568(%rbp), %rax
 8058      F9FFFF
 8059 3e52 4889C7   		movq	%rax, %rdi
 8060              	.LEHB242:
 8061 3e55 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 8061      00
 8062              	.LEHE242:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8063              		.loc 4 35 0
 8064 3e5a 488B85B8 		movq	-1608(%rbp), %rax
 8064      F9FFFF
 8065 3e61 488B00   		movq	(%rax), %rax
 8066 3e64 4883C010 		addq	$16, %rax
 8067 3e68 488B00   		movq	(%rax), %rax
 8068 3e6b 488B95B8 		movq	-1608(%rbp), %rdx
 8068      F9FFFF
 8069 3e72 4889D7   		movq	%rdx, %rdi
 8070 3e75 FFD0     		call	*%rax
 8071 3e77 4889C3   		movq	%rax, %rbx
 8072 3e7a 488D85E0 		leaq	-1568(%rbp), %rax
 8072      F9FFFF
 8073 3e81 BE000000 		movl	$.LC3, %esi
 8073      00
 8074 3e86 4889C7   		movq	%rax, %rdi
 8075              	.LEHB243:
 8076 3e89 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 8076      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8077              		.loc 4 35 0 is_stmt 0 discriminator 1
 8078 3e8e 4889DE   		movq	%rbx, %rsi
 8079 3e91 4889C7   		movq	%rax, %rdi
 8080 3e94 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 8080      00
  36:../ExecuteTest.h **** 	}
 8081              		.loc 4 36 0 is_stmt 1
 8082 3e99 488D85E0 		leaq	-1568(%rbp), %rax
 8082      F9FFFF
 8083 3ea0 4889C7   		movq	%rax, %rdi
 8084 3ea3 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 8084      00
 8085 3ea8 4889C3   		movq	%rax, %rbx
 8086 3eab E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8086      00
  36:../ExecuteTest.h **** 	}
 8087              		.loc 4 36 0 is_stmt 0 discriminator 1
 8088 3eb0 488B00   		movq	(%rax), %rax
 8089 3eb3 488B8DA0 		movq	-1632(%rbp), %rcx
 8089      F9FFFF
 8090 3eba 4889DA   		movq	%rbx, %rdx
 8091 3ebd 4889CE   		movq	%rcx, %rsi
 8092 3ec0 4889C7   		movq	%rax, %rdi
 8093 3ec3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8093      00
 8094              	.LEHE243:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8095              		.loc 4 34 0 is_stmt 1
 8096 3ec8 488D85E0 		leaq	-1568(%rbp), %rax
 8096      F9FFFF
 8097 3ecf 4889C7   		movq	%rax, %rdi
 8098              	.LEHB244:
 8099 3ed2 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8099      00
 8100              	.LEHE244:
 8101              	.LBE152:
  32:../ExecuteTest.h **** 	{
 8102              		.loc 4 32 0
 8103 3ed7 E8000000 		call	__cxa_end_catch
 8103      00
 8104              	.LBE151:
 8105              		.loc 4 42 0
 8106 3edc EB7B     		jmp	.L430
 8107              	.L451:
  38:../ExecuteTest.h **** 	{
 8108              		.loc 4 38 0
 8109 3ede 4889C7   		movq	%rax, %rdi
 8110 3ee1 E8000000 		call	__cxa_begin_catch
 8110      00
 8111              	.LEHB245:
  40:../ExecuteTest.h **** 	}
 8112              		.loc 4 40 0
 8113 3ee6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8113      00
 8114 3eeb 488B00   		movq	(%rax), %rax
 8115 3eee 488B8DA0 		movq	-1632(%rbp), %rcx
 8115      F9FFFF
 8116 3ef5 BA000000 		movl	$.LC44, %edx
 8116      00
 8117 3efa 4889CE   		movq	%rcx, %rsi
 8118 3efd 4889C7   		movq	%rax, %rdi
 8119 3f00 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8119      00
 8120              	.LEHE245:
 8121              	.LEHB246:
  38:../ExecuteTest.h **** 	{
 8122              		.loc 4 38 0
 8123 3f05 E8000000 		call	__cxa_end_catch
 8123      00
 8124              		.loc 4 42 0
 8125 3f0a EB4D     		jmp	.L430
 8126              	.L446:
 8127 3f0c 4889C3   		movq	%rax, %rbx
 8128              	.LBB154:
  27:../ExecuteTest.h **** 	{
 8129              		.loc 4 27 0
 8130 3f0f E8000000 		call	__cxa_end_catch
 8130      00
 8131 3f14 4889D8   		movq	%rbx, %rax
 8132 3f17 4889C7   		movq	%rax, %rdi
 8133 3f1a E8000000 		call	_Unwind_Resume
 8133      00
 8134              	.LEHE246:
 8135              	.L448:
 8136 3f1f 4889C3   		movq	%rax, %rbx
 8137              	.LBE154:
 8138              	.LBB155:
 8139              	.LBB153:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8140              		.loc 4 34 0
 8141 3f22 488D85E0 		leaq	-1568(%rbp), %rax
 8141      F9FFFF
 8142 3f29 4889C7   		movq	%rax, %rdi
 8143 3f2c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8143      00
 8144 3f31 EB03     		jmp	.L441
 8145              	.L447:
 8146 3f33 4889C3   		movq	%rax, %rbx
 8147              	.L441:
 8148              	.LBE153:
  32:../ExecuteTest.h **** 	{
 8149              		.loc 4 32 0
 8150 3f36 E8000000 		call	__cxa_end_catch
 8150      00
 8151 3f3b 4889D8   		movq	%rbx, %rax
 8152 3f3e 4889C7   		movq	%rax, %rdi
 8153              	.LEHB247:
 8154 3f41 E8000000 		call	_Unwind_Resume
 8154      00
 8155              	.LEHE247:
 8156              	.L449:
 8157 3f46 4889C3   		movq	%rax, %rbx
 8158              	.LBE155:
  38:../ExecuteTest.h **** 	{
 8159              		.loc 4 38 0
 8160 3f49 E8000000 		call	__cxa_end_catch
 8160      00
 8161 3f4e 4889D8   		movq	%rbx, %rax
 8162 3f51 4889C7   		movq	%rax, %rdi
 8163              	.LEHB248:
 8164 3f54 E8000000 		call	_Unwind_Resume
 8164      00
 8165              	.LEHE248:
 8166              	.L430:
 8167              		.loc 4 42 0
 8168 3f59 488B45E8 		movq	-24(%rbp), %rax
 8169 3f5d 64483304 		xorq	%fs:40, %rax
 8169      25280000 
 8169      00
 8170 3f66 7405     		je	.L443
 8171 3f68 E8000000 		call	__stack_chk_fail
 8171      00
 8172              	.L443:
 8173 3f6d 4881C450 		addq	$1616, %rsp
 8173      060000
 8174 3f74 5B       		popq	%rbx
 8175 3f75 415C     		popq	%r12
 8176 3f77 5D       		popq	%rbp
 8177              		.cfi_def_cfa 7, 8
 8178 3f78 C3       		ret
 8179              		.cfi_endproc
 8180              	.LFE1464:
 8181              		.section	.gcc_except_table
 8182              		.align 4
 8183              	.LLSDA1464:
 8184 06e8 FF       		.byte	0xff
 8185 06e9 03       		.byte	0x3
 8186 06ea 59       		.uleb128 .LLSDATT1464-.LLSDATTD1464
 8187              	.LLSDATTD1464:
 8188 06eb 01       		.byte	0x1
 8189 06ec 42       		.uleb128 .LLSDACSE1464-.LLSDACSB1464
 8190              	.LLSDACSB1464:
 8191 06ed 2B       		.uleb128 .LEHB237-.LFB1464
 8192 06ee 05       		.uleb128 .LEHE237-.LEHB237
 8193 06ef 00       		.uleb128 0
 8194 06f0 00       		.uleb128 0
 8195 06f1 47       		.uleb128 .LEHB238-.LFB1464
 8196 06f2 05       		.uleb128 .LEHE238-.LEHB238
 8197 06f3 CC01     		.uleb128 .L444-.LFB1464
 8198 06f5 05       		.uleb128 0x5
 8199 06f6 8701     		.uleb128 .LEHB239-.LFB1464
 8200 06f8 14       		.uleb128 .LEHE239-.LEHB239
 8201 06f9 AF01     		.uleb128 .L445-.LFB1464
 8202 06fb 07       		.uleb128 0x7
 8203 06fc A501     		.uleb128 .LEHB240-.LFB1464
 8204 06fe 05       		.uleb128 .LEHE240-.LEHB240
 8205 06ff CC01     		.uleb128 .L444-.LFB1464
 8206 0701 05       		.uleb128 0x5
 8207 0702 9A02     		.uleb128 .LEHB241-.LFB1464
 8208 0704 5E       		.uleb128 .LEHE241-.LEHB241
 8209 0705 D204     		.uleb128 .L446-.LFB1464
 8210 0707 00       		.uleb128 0
 8211 0708 9B03     		.uleb128 .LEHB242-.LFB1464
 8212 070a 05       		.uleb128 .LEHE242-.LEHB242
 8213 070b F904     		.uleb128 .L447-.LFB1464
 8214 070d 00       		.uleb128 0
 8215 070e CF03     		.uleb128 .LEHB243-.LFB1464
 8216 0710 3F       		.uleb128 .LEHE243-.LEHB243
 8217 0711 E504     		.uleb128 .L448-.LFB1464
 8218 0713 00       		.uleb128 0
 8219 0714 9804     		.uleb128 .LEHB244-.LFB1464
 8220 0716 05       		.uleb128 .LEHE244-.LEHB244
 8221 0717 F904     		.uleb128 .L447-.LFB1464
 8222 0719 00       		.uleb128 0
 8223 071a AC04     		.uleb128 .LEHB245-.LFB1464
 8224 071c 1F       		.uleb128 .LEHE245-.LEHB245
 8225 071d 8C05     		.uleb128 .L449-.LFB1464
 8226 071f 00       		.uleb128 0
 8227 0720 CB04     		.uleb128 .LEHB246-.LFB1464
 8228 0722 1A       		.uleb128 .LEHE246-.LEHB246
 8229 0723 00       		.uleb128 0
 8230 0724 00       		.uleb128 0
 8231 0725 8705     		.uleb128 .LEHB247-.LFB1464
 8232 0727 05       		.uleb128 .LEHE247-.LEHB247
 8233 0728 00       		.uleb128 0
 8234 0729 00       		.uleb128 0
 8235 072a 9A05     		.uleb128 .LEHB248-.LFB1464
 8236 072c 05       		.uleb128 .LEHE248-.LEHB248
 8237 072d 00       		.uleb128 0
 8238 072e 00       		.uleb128 0
 8239              	.LLSDACSE1464:
 8240 072f 03       		.byte	0x3
 8241 0730 00       		.byte	0
 8242 0731 02       		.byte	0x2
 8243 0732 7D       		.byte	0x7d
 8244 0733 01       		.byte	0x1
 8245 0734 7D       		.byte	0x7d
 8246 0735 00       		.byte	0
 8247 0736 7D       		.byte	0x7d
 8248 0737 00       		.align 4
 8249 0738 00000000 		.long	0
 8250              	
 8251 073c 00000000 		.long	_ZTISt9exception
 8252 0740 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 8253              	.LLSDATT1464:
 8254              		.text
 8257              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT_RKNS_
 8258              	.LFB1465:
  16:../ExecuteTest.h **** {
 8259              		.loc 4 16 0
 8260              		.cfi_startproc
 8261              		.cfi_personality 0x3,__gxx_personality_v0
 8262              		.cfi_lsda 0x3,.LLSDA1465
 8263 3f79 55       		pushq	%rbp
 8264              		.cfi_def_cfa_offset 16
 8265              		.cfi_offset 6, -16
 8266 3f7a 4889E5   		movq	%rsp, %rbp
 8267              		.cfi_def_cfa_register 6
 8268 3f7d 4154     		pushq	%r12
 8269 3f7f 53       		pushq	%rbx
 8270 3f80 4881EC50 		subq	$1616, %rsp
 8270      060000
 8271              		.cfi_offset 12, -24
 8272              		.cfi_offset 3, -32
 8273 3f87 4889BDA8 		movq	%rdi, -1624(%rbp)
 8273      F9FFFF
 8274 3f8e 4889B5A0 		movq	%rsi, -1632(%rbp)
 8274      F9FFFF
  16:../ExecuteTest.h **** {
 8275              		.loc 4 16 0
 8276 3f95 64488B04 		movq	%fs:40, %rax
 8276      25280000 
 8276      00
 8277 3f9e 488945E8 		movq	%rax, -24(%rbp)
 8278 3fa2 31C0     		xorl	%eax, %eax
 8279              	.LEHB249:
  18:../ExecuteTest.h **** 
 8280              		.loc 4 18 0
 8281 3fa4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 8281      00
 8282              	.LEHE249:
 8283 3fa9 4889C2   		movq	%rax, %rdx
 8284 3fac 488B85A0 		movq	-1632(%rbp), %rax
 8284      F9FFFF
 8285 3fb3 488902   		movq	%rax, (%rdx)
 8286              	.LBB156:
  23:../ExecuteTest.h **** #endif
 8287              		.loc 4 23 0
 8288 3fb6 488D8580 		leaq	-1152(%rbp), %rax
 8288      FBFFFF
 8289 3fbd 4889C7   		movq	%rax, %rdi
 8290              	.LEHB250:
 8291 3fc0 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 8291      00
 8292              	.LEHE250:
  23:../ExecuteTest.h **** #endif
 8293              		.loc 4 23 0 is_stmt 0 discriminator 1
 8294 3fc5 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 8294      000000
 8295 3fcc BE010000 		movl	$1, %esi
 8295      00
 8296 3fd1 4889C7   		movq	%rax, %rdi
 8297 3fd4 E8000000 		call	__sigsetjmp
 8297      00
 8298 3fd9 85C0     		testl	%eax, %eax
 8299 3fdb 0F95C0   		setne	%al
 8300 3fde 84C0     		testb	%al, %al
 8301 3fe0 7423     		je	.L472
  23:../ExecuteTest.h **** #endif
 8302              		.loc 4 23 0 discriminator 3
 8303 3fe2 BF080000 		movl	$8, %edi
 8303      00
 8304 3fe7 E8000000 		call	__cxa_allocate_exception
 8304      00
 8305 3fec 48C70000 		movq	$.LC43, (%rax)
 8305      000000
 8306 3ff3 BA000000 		movl	$0, %edx
 8306      00
 8307 3ff8 BE000000 		movl	$_ZTIPKc, %esi
 8307      00
 8308 3ffd 4889C7   		movq	%rax, %rdi
 8309              	.LEHB251:
 8310 4000 E8000000 		call	__cxa_throw
 8310      00
 8311              	.L472:
  25:../ExecuteTest.h **** 	}
 8312              		.loc 4 25 0 is_stmt 1
 8313 4005 488B85A8 		movq	-1624(%rbp), %rax
 8313      F9FFFF
 8314 400c 4889C7   		movq	%rax, %rdi
 8315 400f E814EAFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv
 8315      FF
 8316              	.LEHE251:
  23:../ExecuteTest.h **** #endif
 8317              		.loc 4 23 0
 8318 4014 488D8580 		leaq	-1152(%rbp), %rax
 8318      FBFFFF
 8319 401b 4889C7   		movq	%rax, %rdi
 8320              	.LEHB252:
 8321 401e E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 8321      00
 8322              	.LEHE252:
 8323              	.LBE156:
 8324              		.loc 4 42 0
 8325 4023 E9F00100 		jmp	.L452
 8325      00
 8326              	.L467:
 8327 4028 4989C4   		movq	%rax, %r12
 8328 402b 4889D3   		movq	%rdx, %rbx
 8329              	.LBB157:
  23:../ExecuteTest.h **** #endif
 8330              		.loc 4 23 0
 8331 402e 488D8580 		leaq	-1152(%rbp), %rax
 8331      FBFFFF
 8332 4035 4889C7   		movq	%rax, %rdi
 8333 4038 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 8333      00
 8334 403d 4C89E0   		movq	%r12, %rax
 8335 4040 4889DA   		movq	%rbx, %rdx
 8336 4043 EB00     		jmp	.L456
 8337              	.L466:
 8338              	.L456:
 8339 4045 4883FA01 		cmpq	$1, %rdx
 8340 4049 740F     		je	.L458
 8341 404b 4883FA02 		cmpq	$2, %rdx
 8342 404f 0F84A600 		je	.L459
 8342      0000
 8343 4055 E9430100 		jmp	.L473
 8343      00
 8344              	.L458:
 8345              	.LBE157:
 8346              	.LBB158:
  27:../ExecuteTest.h **** 	{
 8347              		.loc 4 27 0
 8348 405a 4889C7   		movq	%rax, %rdi
 8349 405d E8000000 		call	__cxa_begin_catch
 8349      00
 8350 4062 488985B0 		movq	%rax, -1616(%rbp)
 8350      F9FFFF
  30:../ExecuteTest.h **** 	}
 8351              		.loc 4 30 0
 8352 4069 488B85B0 		movq	-1616(%rbp), %rax
 8352      F9FFFF
 8353 4070 488B00   		movq	(%rax), %rax
 8354 4073 4883C010 		addq	$16, %rax
 8355 4077 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8356              		.loc 4 29 0
 8357 407a 488B95B0 		movq	-1616(%rbp), %rdx
 8357      F9FFFF
 8358 4081 4889D7   		movq	%rdx, %rdi
 8359 4084 FFD0     		call	*%rax
 8360 4086 4889C3   		movq	%rax, %rbx
 8361 4089 488B85B0 		movq	-1616(%rbp), %rax
 8361      F9FFFF
 8362 4090 4889C7   		movq	%rax, %rdi
 8363              	.LEHB253:
 8364 4093 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 8364      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8365              		.loc 4 29 0 is_stmt 0 discriminator 1
 8366 4098 4189C4   		movl	%eax, %r12d
 8367 409b 488B85B0 		movq	-1616(%rbp), %rax
 8367      F9FFFF
 8368 40a2 4889C7   		movq	%rax, %rdi
 8369 40a5 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 8369      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8370              		.loc 4 29 0 discriminator 2
 8371 40aa 4889C1   		movq	%rax, %rcx
 8372 40ad 488B85A0 		movq	-1632(%rbp), %rax
 8372      F9FFFF
 8373 40b4 488B10   		movq	(%rax), %rdx
 8374 40b7 488B85A0 		movq	-1632(%rbp), %rax
 8374      F9FFFF
 8375 40be 488B7008 		movq	8(%rax), %rsi
 8376 40c2 488D85C0 		leaq	-1600(%rbp), %rax
 8376      F9FFFF
 8377 40c9 4589E0   		movl	%r12d, %r8d
 8378 40cc 4889C7   		movq	%rax, %rdi
 8379 40cf E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 8379      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8380              		.loc 4 29 0 discriminator 4
 8381 40d4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8381      00
 8382 40d9 488B00   		movq	(%rax), %rax
 8383 40dc 488D8DC0 		leaq	-1600(%rbp), %rcx
 8383      F9FFFF
 8384 40e3 4889DA   		movq	%rbx, %rdx
 8385 40e6 4889CE   		movq	%rcx, %rsi
 8386 40e9 4889C7   		movq	%rax, %rdi
 8387 40ec E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8387      00
 8388              	.LEHE253:
  27:../ExecuteTest.h **** 	{
 8389              		.loc 4 27 0 is_stmt 1 discriminator 8
 8390 40f1 E8000000 		call	__cxa_end_catch
 8390      00
 8391              	.LBE158:
 8392              		.loc 4 42 0 discriminator 8
 8393 40f6 E91D0100 		jmp	.L452
 8393      00
 8394              	.L459:
 8395              	.LBB159:
  32:../ExecuteTest.h **** 	{
 8396              		.loc 4 32 0
 8397 40fb 4889C7   		movq	%rax, %rdi
 8398 40fe E8000000 		call	__cxa_begin_catch
 8398      00
 8399 4103 488985B8 		movq	%rax, -1608(%rbp)
 8399      F9FFFF
 8400              	.LBB160:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8401              		.loc 4 34 0
 8402 410a 488D85E0 		leaq	-1568(%rbp), %rax
 8402      F9FFFF
 8403 4111 4889C7   		movq	%rax, %rdi
 8404              	.LEHB254:
 8405 4114 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 8405      00
 8406              	.LEHE254:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8407              		.loc 4 35 0
 8408 4119 488B85B8 		movq	-1608(%rbp), %rax
 8408      F9FFFF
 8409 4120 488B00   		movq	(%rax), %rax
 8410 4123 4883C010 		addq	$16, %rax
 8411 4127 488B00   		movq	(%rax), %rax
 8412 412a 488B95B8 		movq	-1608(%rbp), %rdx
 8412      F9FFFF
 8413 4131 4889D7   		movq	%rdx, %rdi
 8414 4134 FFD0     		call	*%rax
 8415 4136 4889C3   		movq	%rax, %rbx
 8416 4139 488D85E0 		leaq	-1568(%rbp), %rax
 8416      F9FFFF
 8417 4140 BE000000 		movl	$.LC3, %esi
 8417      00
 8418 4145 4889C7   		movq	%rax, %rdi
 8419              	.LEHB255:
 8420 4148 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 8420      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8421              		.loc 4 35 0 is_stmt 0 discriminator 1
 8422 414d 4889DE   		movq	%rbx, %rsi
 8423 4150 4889C7   		movq	%rax, %rdi
 8424 4153 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 8424      00
  36:../ExecuteTest.h **** 	}
 8425              		.loc 4 36 0 is_stmt 1
 8426 4158 488D85E0 		leaq	-1568(%rbp), %rax
 8426      F9FFFF
 8427 415f 4889C7   		movq	%rax, %rdi
 8428 4162 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 8428      00
 8429 4167 4889C3   		movq	%rax, %rbx
 8430 416a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8430      00
  36:../ExecuteTest.h **** 	}
 8431              		.loc 4 36 0 is_stmt 0 discriminator 1
 8432 416f 488B00   		movq	(%rax), %rax
 8433 4172 488B8DA0 		movq	-1632(%rbp), %rcx
 8433      F9FFFF
 8434 4179 4889DA   		movq	%rbx, %rdx
 8435 417c 4889CE   		movq	%rcx, %rsi
 8436 417f 4889C7   		movq	%rax, %rdi
 8437 4182 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8437      00
 8438              	.LEHE255:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8439              		.loc 4 34 0 is_stmt 1
 8440 4187 488D85E0 		leaq	-1568(%rbp), %rax
 8440      F9FFFF
 8441 418e 4889C7   		movq	%rax, %rdi
 8442              	.LEHB256:
 8443 4191 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8443      00
 8444              	.LEHE256:
 8445              	.LBE160:
  32:../ExecuteTest.h **** 	{
 8446              		.loc 4 32 0
 8447 4196 E8000000 		call	__cxa_end_catch
 8447      00
 8448              	.LBE159:
 8449              		.loc 4 42 0
 8450 419b EB7B     		jmp	.L452
 8451              	.L473:
  38:../ExecuteTest.h **** 	{
 8452              		.loc 4 38 0
 8453 419d 4889C7   		movq	%rax, %rdi
 8454 41a0 E8000000 		call	__cxa_begin_catch
 8454      00
 8455              	.LEHB257:
  40:../ExecuteTest.h **** 	}
 8456              		.loc 4 40 0
 8457 41a5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8457      00
 8458 41aa 488B00   		movq	(%rax), %rax
 8459 41ad 488B8DA0 		movq	-1632(%rbp), %rcx
 8459      F9FFFF
 8460 41b4 BA000000 		movl	$.LC44, %edx
 8460      00
 8461 41b9 4889CE   		movq	%rcx, %rsi
 8462 41bc 4889C7   		movq	%rax, %rdi
 8463 41bf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8463      00
 8464              	.LEHE257:
 8465              	.LEHB258:
  38:../ExecuteTest.h **** 	{
 8466              		.loc 4 38 0
 8467 41c4 E8000000 		call	__cxa_end_catch
 8467      00
 8468              		.loc 4 42 0
 8469 41c9 EB4D     		jmp	.L452
 8470              	.L468:
 8471 41cb 4889C3   		movq	%rax, %rbx
 8472              	.LBB162:
  27:../ExecuteTest.h **** 	{
 8473              		.loc 4 27 0
 8474 41ce E8000000 		call	__cxa_end_catch
 8474      00
 8475 41d3 4889D8   		movq	%rbx, %rax
 8476 41d6 4889C7   		movq	%rax, %rdi
 8477 41d9 E8000000 		call	_Unwind_Resume
 8477      00
 8478              	.LEHE258:
 8479              	.L470:
 8480 41de 4889C3   		movq	%rax, %rbx
 8481              	.LBE162:
 8482              	.LBB163:
 8483              	.LBB161:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8484              		.loc 4 34 0
 8485 41e1 488D85E0 		leaq	-1568(%rbp), %rax
 8485      F9FFFF
 8486 41e8 4889C7   		movq	%rax, %rdi
 8487 41eb E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8487      00
 8488 41f0 EB03     		jmp	.L463
 8489              	.L469:
 8490 41f2 4889C3   		movq	%rax, %rbx
 8491              	.L463:
 8492              	.LBE161:
  32:../ExecuteTest.h **** 	{
 8493              		.loc 4 32 0
 8494 41f5 E8000000 		call	__cxa_end_catch
 8494      00
 8495 41fa 4889D8   		movq	%rbx, %rax
 8496 41fd 4889C7   		movq	%rax, %rdi
 8497              	.LEHB259:
 8498 4200 E8000000 		call	_Unwind_Resume
 8498      00
 8499              	.LEHE259:
 8500              	.L471:
 8501 4205 4889C3   		movq	%rax, %rbx
 8502              	.LBE163:
  38:../ExecuteTest.h **** 	{
 8503              		.loc 4 38 0
 8504 4208 E8000000 		call	__cxa_end_catch
 8504      00
 8505 420d 4889D8   		movq	%rbx, %rax
 8506 4210 4889C7   		movq	%rax, %rdi
 8507              	.LEHB260:
 8508 4213 E8000000 		call	_Unwind_Resume
 8508      00
 8509              	.LEHE260:
 8510              	.L452:
 8511              		.loc 4 42 0
 8512 4218 488B45E8 		movq	-24(%rbp), %rax
 8513 421c 64483304 		xorq	%fs:40, %rax
 8513      25280000 
 8513      00
 8514 4225 7405     		je	.L465
 8515 4227 E8000000 		call	__stack_chk_fail
 8515      00
 8516              	.L465:
 8517 422c 4881C450 		addq	$1616, %rsp
 8517      060000
 8518 4233 5B       		popq	%rbx
 8519 4234 415C     		popq	%r12
 8520 4236 5D       		popq	%rbp
 8521              		.cfi_def_cfa 7, 8
 8522 4237 C3       		ret
 8523              		.cfi_endproc
 8524              	.LFE1465:
 8525              		.section	.gcc_except_table
 8526              		.align 4
 8527              	.LLSDA1465:
 8528 0744 FF       		.byte	0xff
 8529 0745 03       		.byte	0x3
 8530 0746 59       		.uleb128 .LLSDATT1465-.LLSDATTD1465
 8531              	.LLSDATTD1465:
 8532 0747 01       		.byte	0x1
 8533 0748 42       		.uleb128 .LLSDACSE1465-.LLSDACSB1465
 8534              	.LLSDACSB1465:
 8535 0749 2B       		.uleb128 .LEHB249-.LFB1465
 8536 074a 05       		.uleb128 .LEHE249-.LEHB249
 8537 074b 00       		.uleb128 0
 8538 074c 00       		.uleb128 0
 8539 074d 47       		.uleb128 .LEHB250-.LFB1465
 8540 074e 05       		.uleb128 .LEHE250-.LEHB250
 8541 074f CC01     		.uleb128 .L466-.LFB1465
 8542 0751 05       		.uleb128 0x5
 8543 0752 8701     		.uleb128 .LEHB251-.LFB1465
 8544 0754 14       		.uleb128 .LEHE251-.LEHB251
 8545 0755 AF01     		.uleb128 .L467-.LFB1465
 8546 0757 07       		.uleb128 0x7
 8547 0758 A501     		.uleb128 .LEHB252-.LFB1465
 8548 075a 05       		.uleb128 .LEHE252-.LEHB252
 8549 075b CC01     		.uleb128 .L466-.LFB1465
 8550 075d 05       		.uleb128 0x5
 8551 075e 9A02     		.uleb128 .LEHB253-.LFB1465
 8552 0760 5E       		.uleb128 .LEHE253-.LEHB253
 8553 0761 D204     		.uleb128 .L468-.LFB1465
 8554 0763 00       		.uleb128 0
 8555 0764 9B03     		.uleb128 .LEHB254-.LFB1465
 8556 0766 05       		.uleb128 .LEHE254-.LEHB254
 8557 0767 F904     		.uleb128 .L469-.LFB1465
 8558 0769 00       		.uleb128 0
 8559 076a CF03     		.uleb128 .LEHB255-.LFB1465
 8560 076c 3F       		.uleb128 .LEHE255-.LEHB255
 8561 076d E504     		.uleb128 .L470-.LFB1465
 8562 076f 00       		.uleb128 0
 8563 0770 9804     		.uleb128 .LEHB256-.LFB1465
 8564 0772 05       		.uleb128 .LEHE256-.LEHB256
 8565 0773 F904     		.uleb128 .L469-.LFB1465
 8566 0775 00       		.uleb128 0
 8567 0776 AC04     		.uleb128 .LEHB257-.LFB1465
 8568 0778 1F       		.uleb128 .LEHE257-.LEHB257
 8569 0779 8C05     		.uleb128 .L471-.LFB1465
 8570 077b 00       		.uleb128 0
 8571 077c CB04     		.uleb128 .LEHB258-.LFB1465
 8572 077e 1A       		.uleb128 .LEHE258-.LEHB258
 8573 077f 00       		.uleb128 0
 8574 0780 00       		.uleb128 0
 8575 0781 8705     		.uleb128 .LEHB259-.LFB1465
 8576 0783 05       		.uleb128 .LEHE259-.LEHB259
 8577 0784 00       		.uleb128 0
 8578 0785 00       		.uleb128 0
 8579 0786 9A05     		.uleb128 .LEHB260-.LFB1465
 8580 0788 05       		.uleb128 .LEHE260-.LEHB260
 8581 0789 00       		.uleb128 0
 8582 078a 00       		.uleb128 0
 8583              	.LLSDACSE1465:
 8584 078b 03       		.byte	0x3
 8585 078c 00       		.byte	0
 8586 078d 02       		.byte	0x2
 8587 078e 7D       		.byte	0x7d
 8588 078f 01       		.byte	0x1
 8589 0790 7D       		.byte	0x7d
 8590 0791 00       		.byte	0
 8591 0792 7D       		.byte	0x7d
 8592 0793 00       		.align 4
 8593 0794 00000000 		.long	0
 8594              	
 8595 0798 00000000 		.long	_ZTISt9exception
 8596 079c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 8597              	.LLSDATT1465:
 8598              		.text
 8600              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE,"axG",
 8601              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 8603              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:
 8604              	.LFB1499:
 8605              		.file 6 "/usr/include/c++/5/bits/basic_string.h"
   1:/usr/include/c++/5/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/5/bits/basic_string.h **** 
   3:/usr/include/c++/5/bits/basic_string.h **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/basic_string.h **** //
   5:/usr/include/c++/5/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/5/bits/basic_string.h **** 
  11:/usr/include/c++/5/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/basic_string.h **** 
  16:/usr/include/c++/5/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/basic_string.h **** 
  20:/usr/include/c++/5/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/basic_string.h **** 
  25:/usr/include/c++/5/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/5/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/5/bits/basic_string.h ****  */
  29:/usr/include/c++/5/bits/basic_string.h **** 
  30:/usr/include/c++/5/bits/basic_string.h **** //
  31:/usr/include/c++/5/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/5/bits/basic_string.h **** //
  33:/usr/include/c++/5/bits/basic_string.h **** 
  34:/usr/include/c++/5/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/5/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/5/bits/basic_string.h **** 
  37:/usr/include/c++/5/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/5/bits/basic_string.h **** 
  39:/usr/include/c++/5/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/5/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/5/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
  43:/usr/include/c++/5/bits/basic_string.h **** #include <initializer_list>
  44:/usr/include/c++/5/bits/basic_string.h **** #endif
  45:/usr/include/c++/5/bits/basic_string.h **** 
  46:/usr/include/c++/5/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/5/bits/basic_string.h **** {
  48:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/5/bits/basic_string.h **** 
  50:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  52:/usr/include/c++/5/bits/basic_string.h ****   /**
  53:/usr/include/c++/5/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  54:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  55:/usr/include/c++/5/bits/basic_string.h ****    *
  56:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup strings
  57:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup sequences
  58:/usr/include/c++/5/bits/basic_string.h ****    *
  59:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  60:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/5/bits/basic_string.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  63:/usr/include/c++/5/bits/basic_string.h ****    *
  64:/usr/include/c++/5/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  65:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  66:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  67:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  68:/usr/include/c++/5/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  69:/usr/include/c++/5/bits/basic_string.h ****    */
  70:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  71:/usr/include/c++/5/bits/basic_string.h ****     class basic_string
  72:/usr/include/c++/5/bits/basic_string.h ****     {
  73:/usr/include/c++/5/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  74:/usr/include/c++/5/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  75:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  76:/usr/include/c++/5/bits/basic_string.h **** 
  77:/usr/include/c++/5/bits/basic_string.h ****       // Types:
  78:/usr/include/c++/5/bits/basic_string.h ****     public:
  79:/usr/include/c++/5/bits/basic_string.h ****       typedef _Traits					traits_type;
  80:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  81:/usr/include/c++/5/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  82:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  83:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  84:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  85:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  86:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  87:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  88:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  89:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  90:/usr/include/c++/5/bits/basic_string.h **** 							const_iterator;
  91:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  92:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  93:/usr/include/c++/5/bits/basic_string.h **** 
  94:/usr/include/c++/5/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
  95:/usr/include/c++/5/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
  96:/usr/include/c++/5/bits/basic_string.h **** 
  97:/usr/include/c++/5/bits/basic_string.h ****     private:
  98:/usr/include/c++/5/bits/basic_string.h ****       // type used for positions in insert, erase etc.
  99:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus < 201103L
 100:/usr/include/c++/5/bits/basic_string.h ****       typedef iterator __const_iterator;
 101:/usr/include/c++/5/bits/basic_string.h **** #else
 102:/usr/include/c++/5/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 103:/usr/include/c++/5/bits/basic_string.h **** #endif
 104:/usr/include/c++/5/bits/basic_string.h **** 
 105:/usr/include/c++/5/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 106:/usr/include/c++/5/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 107:/usr/include/c++/5/bits/basic_string.h ****       {
 108:/usr/include/c++/5/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 109:/usr/include/c++/5/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 110:/usr/include/c++/5/bits/basic_string.h **** 
 111:/usr/include/c++/5/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 112:/usr/include/c++/5/bits/basic_string.h ****       };
 113:/usr/include/c++/5/bits/basic_string.h **** 
 114:/usr/include/c++/5/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 115:/usr/include/c++/5/bits/basic_string.h ****       size_type		_M_string_length;
 116:/usr/include/c++/5/bits/basic_string.h **** 
 117:/usr/include/c++/5/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 118:/usr/include/c++/5/bits/basic_string.h **** 
 119:/usr/include/c++/5/bits/basic_string.h ****       union
 120:/usr/include/c++/5/bits/basic_string.h ****       {
 121:/usr/include/c++/5/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 122:/usr/include/c++/5/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 123:/usr/include/c++/5/bits/basic_string.h ****       };
 124:/usr/include/c++/5/bits/basic_string.h **** 
 125:/usr/include/c++/5/bits/basic_string.h ****       void
 126:/usr/include/c++/5/bits/basic_string.h ****       _M_data(pointer __p)
 127:/usr/include/c++/5/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 128:/usr/include/c++/5/bits/basic_string.h **** 
 129:/usr/include/c++/5/bits/basic_string.h ****       void
 130:/usr/include/c++/5/bits/basic_string.h ****       _M_length(size_type __length)
 131:/usr/include/c++/5/bits/basic_string.h ****       { _M_string_length = __length; }
 132:/usr/include/c++/5/bits/basic_string.h **** 
 133:/usr/include/c++/5/bits/basic_string.h ****       pointer
 134:/usr/include/c++/5/bits/basic_string.h ****       _M_data() const
 135:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 136:/usr/include/c++/5/bits/basic_string.h **** 
 137:/usr/include/c++/5/bits/basic_string.h ****       pointer
 138:/usr/include/c++/5/bits/basic_string.h ****       _M_local_data()
 139:/usr/include/c++/5/bits/basic_string.h ****       {
 140:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/5/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 142:/usr/include/c++/5/bits/basic_string.h **** #else
 143:/usr/include/c++/5/bits/basic_string.h **** 	return pointer(_M_local_buf);
 144:/usr/include/c++/5/bits/basic_string.h **** #endif
 145:/usr/include/c++/5/bits/basic_string.h ****       }
 146:/usr/include/c++/5/bits/basic_string.h **** 
 147:/usr/include/c++/5/bits/basic_string.h ****       const_pointer
 148:/usr/include/c++/5/bits/basic_string.h ****       _M_local_data() const
 149:/usr/include/c++/5/bits/basic_string.h ****       {
 150:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 151:/usr/include/c++/5/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 152:/usr/include/c++/5/bits/basic_string.h **** #else
 153:/usr/include/c++/5/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 154:/usr/include/c++/5/bits/basic_string.h **** #endif
 155:/usr/include/c++/5/bits/basic_string.h ****       }
 156:/usr/include/c++/5/bits/basic_string.h **** 
 157:/usr/include/c++/5/bits/basic_string.h ****       void
 158:/usr/include/c++/5/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 159:/usr/include/c++/5/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 160:/usr/include/c++/5/bits/basic_string.h **** 
 161:/usr/include/c++/5/bits/basic_string.h ****       void
 162:/usr/include/c++/5/bits/basic_string.h ****       _M_set_length(size_type __n)
 163:/usr/include/c++/5/bits/basic_string.h ****       {
 164:/usr/include/c++/5/bits/basic_string.h **** 	_M_length(__n);
 165:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 166:/usr/include/c++/5/bits/basic_string.h ****       }
 167:/usr/include/c++/5/bits/basic_string.h **** 
 168:/usr/include/c++/5/bits/basic_string.h ****       bool
 169:/usr/include/c++/5/bits/basic_string.h ****       _M_is_local() const
 170:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 171:/usr/include/c++/5/bits/basic_string.h **** 
 172:/usr/include/c++/5/bits/basic_string.h ****       // Create & Destroy
 173:/usr/include/c++/5/bits/basic_string.h ****       pointer
 174:/usr/include/c++/5/bits/basic_string.h ****       _M_create(size_type&, size_type);
 175:/usr/include/c++/5/bits/basic_string.h **** 
 176:/usr/include/c++/5/bits/basic_string.h ****       void
 177:/usr/include/c++/5/bits/basic_string.h ****       _M_dispose()
 178:/usr/include/c++/5/bits/basic_string.h ****       {
 179:/usr/include/c++/5/bits/basic_string.h **** 	if (!_M_is_local())
 180:/usr/include/c++/5/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 181:/usr/include/c++/5/bits/basic_string.h ****       }
 182:/usr/include/c++/5/bits/basic_string.h **** 
 183:/usr/include/c++/5/bits/basic_string.h ****       void
 184:/usr/include/c++/5/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 185:/usr/include/c++/5/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 186:/usr/include/c++/5/bits/basic_string.h **** 
 187:/usr/include/c++/5/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 188:/usr/include/c++/5/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 189:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 190:/usr/include/c++/5/bits/basic_string.h ****         void
 191:/usr/include/c++/5/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 192:/usr/include/c++/5/bits/basic_string.h **** 			 std::__false_type)
 193:/usr/include/c++/5/bits/basic_string.h **** 	{
 194:/usr/include/c++/5/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 195:/usr/include/c++/5/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 196:/usr/include/c++/5/bits/basic_string.h **** 	}
 197:/usr/include/c++/5/bits/basic_string.h **** 
 198:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 199:/usr/include/c++/5/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 200:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Integer>
 201:/usr/include/c++/5/bits/basic_string.h ****         void
 202:/usr/include/c++/5/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 203:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 204:/usr/include/c++/5/bits/basic_string.h **** 
 205:/usr/include/c++/5/bits/basic_string.h ****       void
 206:/usr/include/c++/5/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 207:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__req, __c); }
 208:/usr/include/c++/5/bits/basic_string.h **** 
 209:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 210:/usr/include/c++/5/bits/basic_string.h ****         void
 211:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 212:/usr/include/c++/5/bits/basic_string.h **** 	{
 213:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 214:/usr/include/c++/5/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 215:/usr/include/c++/5/bits/basic_string.h ****         }
 216:/usr/include/c++/5/bits/basic_string.h **** 
 217:/usr/include/c++/5/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 218:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 219:/usr/include/c++/5/bits/basic_string.h ****         void
 220:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 221:/usr/include/c++/5/bits/basic_string.h **** 		     std::input_iterator_tag);
 222:/usr/include/c++/5/bits/basic_string.h **** 
 223:/usr/include/c++/5/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 224:/usr/include/c++/5/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 225:/usr/include/c++/5/bits/basic_string.h ****       template<typename _FwdIterator>
 226:/usr/include/c++/5/bits/basic_string.h ****         void
 227:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 228:/usr/include/c++/5/bits/basic_string.h **** 		     std::forward_iterator_tag);
 229:/usr/include/c++/5/bits/basic_string.h **** 
 230:/usr/include/c++/5/bits/basic_string.h ****       void
 231:/usr/include/c++/5/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 232:/usr/include/c++/5/bits/basic_string.h **** 
 233:/usr/include/c++/5/bits/basic_string.h ****       allocator_type&
 234:/usr/include/c++/5/bits/basic_string.h ****       _M_get_allocator()
 235:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
 236:/usr/include/c++/5/bits/basic_string.h **** 
 237:/usr/include/c++/5/bits/basic_string.h ****       const allocator_type&
 238:/usr/include/c++/5/bits/basic_string.h ****       _M_get_allocator() const
 239:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
 240:/usr/include/c++/5/bits/basic_string.h **** 
 241:/usr/include/c++/5/bits/basic_string.h ****     private:
 242:/usr/include/c++/5/bits/basic_string.h **** 
 243:/usr/include/c++/5/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 244:/usr/include/c++/5/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 245:/usr/include/c++/5/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 246:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 247:/usr/include/c++/5/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 248:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 249:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 250:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 251:/usr/include/c++/5/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 252:/usr/include/c++/5/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 253:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Tp>
 254:/usr/include/c++/5/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 255:/usr/include/c++/5/bits/basic_string.h **** #endif
 256:/usr/include/c++/5/bits/basic_string.h **** 
 257:/usr/include/c++/5/bits/basic_string.h ****       size_type
 258:/usr/include/c++/5/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 259:/usr/include/c++/5/bits/basic_string.h ****       {
 260:/usr/include/c++/5/bits/basic_string.h **** 	if (__pos > this->size())
 261:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 262:/usr/include/c++/5/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 263:/usr/include/c++/5/bits/basic_string.h **** 				   __s, __pos, this->size());
 264:/usr/include/c++/5/bits/basic_string.h **** 	return __pos;
 265:/usr/include/c++/5/bits/basic_string.h ****       }
 266:/usr/include/c++/5/bits/basic_string.h **** 
 267:/usr/include/c++/5/bits/basic_string.h ****       void
 268:/usr/include/c++/5/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 269:/usr/include/c++/5/bits/basic_string.h ****       {
 270:/usr/include/c++/5/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 271:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 272:/usr/include/c++/5/bits/basic_string.h ****       }
 273:/usr/include/c++/5/bits/basic_string.h **** 
 274:/usr/include/c++/5/bits/basic_string.h **** 
 275:/usr/include/c++/5/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 276:/usr/include/c++/5/bits/basic_string.h ****       size_type
 277:/usr/include/c++/5/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 278:/usr/include/c++/5/bits/basic_string.h ****       {
 279:/usr/include/c++/5/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 280:/usr/include/c++/5/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 281:/usr/include/c++/5/bits/basic_string.h ****       }
 282:/usr/include/c++/5/bits/basic_string.h **** 
 283:/usr/include/c++/5/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 284:/usr/include/c++/5/bits/basic_string.h ****       bool
 285:/usr/include/c++/5/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 286:/usr/include/c++/5/bits/basic_string.h ****       {
 287:/usr/include/c++/5/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 288:/usr/include/c++/5/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 289:/usr/include/c++/5/bits/basic_string.h ****       }
 290:/usr/include/c++/5/bits/basic_string.h **** 
 291:/usr/include/c++/5/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 292:/usr/include/c++/5/bits/basic_string.h ****       // traits_type::copy/move/assign.
 293:/usr/include/c++/5/bits/basic_string.h ****       static void
 294:/usr/include/c++/5/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 295:/usr/include/c++/5/bits/basic_string.h ****       {
 296:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 297:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 298:/usr/include/c++/5/bits/basic_string.h **** 	else
 299:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 300:/usr/include/c++/5/bits/basic_string.h ****       }
 301:/usr/include/c++/5/bits/basic_string.h **** 
 302:/usr/include/c++/5/bits/basic_string.h ****       static void
 303:/usr/include/c++/5/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 304:/usr/include/c++/5/bits/basic_string.h ****       {
 305:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 306:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 307:/usr/include/c++/5/bits/basic_string.h **** 	else
 308:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 309:/usr/include/c++/5/bits/basic_string.h ****       }
 310:/usr/include/c++/5/bits/basic_string.h **** 
 311:/usr/include/c++/5/bits/basic_string.h ****       static void
 312:/usr/include/c++/5/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 313:/usr/include/c++/5/bits/basic_string.h ****       {
 314:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 315:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 316:/usr/include/c++/5/bits/basic_string.h **** 	else
 317:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 318:/usr/include/c++/5/bits/basic_string.h ****       }
 319:/usr/include/c++/5/bits/basic_string.h **** 
 320:/usr/include/c++/5/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 321:/usr/include/c++/5/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 322:/usr/include/c++/5/bits/basic_string.h ****       template<class _Iterator>
 323:/usr/include/c++/5/bits/basic_string.h ****         static void
 324:/usr/include/c++/5/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 325:/usr/include/c++/5/bits/basic_string.h ****         {
 326:/usr/include/c++/5/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 327:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 328:/usr/include/c++/5/bits/basic_string.h **** 	}
 329:/usr/include/c++/5/bits/basic_string.h **** 
 330:/usr/include/c++/5/bits/basic_string.h ****       static void
 331:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 332:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 333:/usr/include/c++/5/bits/basic_string.h **** 
 334:/usr/include/c++/5/bits/basic_string.h ****       static void
 335:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 336:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 337:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 338:/usr/include/c++/5/bits/basic_string.h **** 
 339:/usr/include/c++/5/bits/basic_string.h ****       static void
 340:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 341:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 342:/usr/include/c++/5/bits/basic_string.h **** 
 343:/usr/include/c++/5/bits/basic_string.h ****       static void
 344:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 345:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 346:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 347:/usr/include/c++/5/bits/basic_string.h **** 
 348:/usr/include/c++/5/bits/basic_string.h ****       static int
 349:/usr/include/c++/5/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 350:/usr/include/c++/5/bits/basic_string.h ****       {
 351:/usr/include/c++/5/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 352:/usr/include/c++/5/bits/basic_string.h **** 
 353:/usr/include/c++/5/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 354:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 355:/usr/include/c++/5/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 356:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 357:/usr/include/c++/5/bits/basic_string.h **** 	else
 358:/usr/include/c++/5/bits/basic_string.h **** 	  return int(__d);
 359:/usr/include/c++/5/bits/basic_string.h ****       }
 360:/usr/include/c++/5/bits/basic_string.h **** 
 361:/usr/include/c++/5/bits/basic_string.h ****       void
 362:/usr/include/c++/5/bits/basic_string.h ****       _M_assign(const basic_string& __rcs);
 363:/usr/include/c++/5/bits/basic_string.h **** 
 364:/usr/include/c++/5/bits/basic_string.h ****       void
 365:/usr/include/c++/5/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 366:/usr/include/c++/5/bits/basic_string.h **** 		size_type __len2);
 367:/usr/include/c++/5/bits/basic_string.h **** 
 368:/usr/include/c++/5/bits/basic_string.h ****       void
 369:/usr/include/c++/5/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 370:/usr/include/c++/5/bits/basic_string.h **** 
 371:/usr/include/c++/5/bits/basic_string.h ****     public:
 372:/usr/include/c++/5/bits/basic_string.h ****       // Construct/copy/destroy:
 373:/usr/include/c++/5/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 374:/usr/include/c++/5/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 375:/usr/include/c++/5/bits/basic_string.h **** 
 376:/usr/include/c++/5/bits/basic_string.h ****       /**
 377:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 378:/usr/include/c++/5/bits/basic_string.h ****        */
 379:/usr/include/c++/5/bits/basic_string.h ****       basic_string()
 380:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 381:/usr/include/c++/5/bits/basic_string.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 382:/usr/include/c++/5/bits/basic_string.h **** #endif
 383:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 384:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 385:/usr/include/c++/5/bits/basic_string.h **** 
 386:/usr/include/c++/5/bits/basic_string.h ****       /**
 387:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 388:/usr/include/c++/5/bits/basic_string.h ****        */
 389:/usr/include/c++/5/bits/basic_string.h ****       explicit
 390:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _Alloc& __a)
 391:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 392:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 393:/usr/include/c++/5/bits/basic_string.h **** 
 394:/usr/include/c++/5/bits/basic_string.h ****       /**
 395:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 396:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 397:/usr/include/c++/5/bits/basic_string.h ****        */
 398:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str)
 399:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __str._M_get_allocator()) // TODO A traits
 400:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 401:/usr/include/c++/5/bits/basic_string.h **** 
 402:/usr/include/c++/5/bits/basic_string.h ****       /**
 403:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 404:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 405:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 406:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 407:/usr/include/c++/5/bits/basic_string.h ****        */
 408:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 409:/usr/include/c++/5/bits/basic_string.h ****       // 2402. [this constructor] shouldn't use Allocator()
 410:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 411:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n = npos)
 412:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 413:/usr/include/c++/5/bits/basic_string.h ****       {
 414:/usr/include/c++/5/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 415:/usr/include/c++/5/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 416:/usr/include/c++/5/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 417:/usr/include/c++/5/bits/basic_string.h ****       }
 418:/usr/include/c++/5/bits/basic_string.h **** 
 419:/usr/include/c++/5/bits/basic_string.h ****       /**
 420:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 421:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 422:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 423:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 424:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 425:/usr/include/c++/5/bits/basic_string.h ****        */
 426:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 427:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 428:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 429:/usr/include/c++/5/bits/basic_string.h ****       {
 430:/usr/include/c++/5/bits/basic_string.h **** 	const _CharT* __start
 431:/usr/include/c++/5/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 432:/usr/include/c++/5/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 433:/usr/include/c++/5/bits/basic_string.h ****       }
 434:/usr/include/c++/5/bits/basic_string.h **** 
 435:/usr/include/c++/5/bits/basic_string.h ****       /**
 436:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 437:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source character %array.
 438:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 439:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 440:/usr/include/c++/5/bits/basic_string.h ****        *
 441:/usr/include/c++/5/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 442:/usr/include/c++/5/bits/basic_string.h ****        *  has no special meaning.
 443:/usr/include/c++/5/bits/basic_string.h ****        */
 444:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 445:/usr/include/c++/5/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 446:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 447:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 448:/usr/include/c++/5/bits/basic_string.h **** 
 449:/usr/include/c++/5/bits/basic_string.h ****       /**
 450:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 451:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source C string.
 452:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 453:/usr/include/c++/5/bits/basic_string.h ****        */
 454:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 455:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 456:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 457:/usr/include/c++/5/bits/basic_string.h **** 
 458:/usr/include/c++/5/bits/basic_string.h ****       /**
 459:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 460:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters.
 461:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to use.
 462:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 463:/usr/include/c++/5/bits/basic_string.h ****        */
 464:/usr/include/c++/5/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 465:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 466:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__n, __c); }
 467:/usr/include/c++/5/bits/basic_string.h **** 
 468:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 469:/usr/include/c++/5/bits/basic_string.h ****       /**
 470:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move construct string.
 471:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 472:/usr/include/c++/5/bits/basic_string.h ****        *
 473:/usr/include/c++/5/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 474:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 475:/usr/include/c++/5/bits/basic_string.h ****        **/
 476:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 477:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 478:/usr/include/c++/5/bits/basic_string.h ****       {
 479:/usr/include/c++/5/bits/basic_string.h **** 	if (__str._M_is_local())
 480:/usr/include/c++/5/bits/basic_string.h **** 	  {
 481:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 482:/usr/include/c++/5/bits/basic_string.h **** 			      _S_local_capacity + 1);
 483:/usr/include/c++/5/bits/basic_string.h **** 	  }
 484:/usr/include/c++/5/bits/basic_string.h **** 	else
 485:/usr/include/c++/5/bits/basic_string.h **** 	  {
 486:/usr/include/c++/5/bits/basic_string.h **** 	    _M_data(__str._M_data());
 487:/usr/include/c++/5/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 488:/usr/include/c++/5/bits/basic_string.h **** 	  }
 489:/usr/include/c++/5/bits/basic_string.h **** 
 490:/usr/include/c++/5/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 491:/usr/include/c++/5/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 492:/usr/include/c++/5/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 493:/usr/include/c++/5/bits/basic_string.h **** 	_M_length(__str.length());
 494:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 495:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_set_length(0);
 496:/usr/include/c++/5/bits/basic_string.h ****       }
 497:/usr/include/c++/5/bits/basic_string.h **** 
 498:/usr/include/c++/5/bits/basic_string.h ****       /**
 499:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 500:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 501:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 502:/usr/include/c++/5/bits/basic_string.h ****        */
 503:/usr/include/c++/5/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 504:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 505:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 506:/usr/include/c++/5/bits/basic_string.h **** 
 507:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 508:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 509:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 510:/usr/include/c++/5/bits/basic_string.h **** 
 511:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 512:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/5/bits/basic_string.h ****       {
 514:/usr/include/c++/5/bits/basic_string.h **** 	if (__str.get_allocator() == __a)
 515:/usr/include/c++/5/bits/basic_string.h **** 	  *this = std::move(__str);
 516:/usr/include/c++/5/bits/basic_string.h **** 	else
 517:/usr/include/c++/5/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 518:/usr/include/c++/5/bits/basic_string.h ****       }
 519:/usr/include/c++/5/bits/basic_string.h **** 
 520:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 521:/usr/include/c++/5/bits/basic_string.h **** 
 522:/usr/include/c++/5/bits/basic_string.h ****       /**
 523:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 524:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __beg  Start of range.
 525:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __end  End of range.
 526:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 527:/usr/include/c++/5/bits/basic_string.h ****        */
 528:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 529:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InputIterator,
 530:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 531:/usr/include/c++/5/bits/basic_string.h **** #else
 532:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InputIterator>
 533:/usr/include/c++/5/bits/basic_string.h **** #endif
 534:/usr/include/c++/5/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 535:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 536:/usr/include/c++/5/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 537:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 538:/usr/include/c++/5/bits/basic_string.h **** 
 539:/usr/include/c++/5/bits/basic_string.h ****       /**
 540:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 541:/usr/include/c++/5/bits/basic_string.h ****        */
 542:/usr/include/c++/5/bits/basic_string.h ****       ~basic_string()
 543:/usr/include/c++/5/bits/basic_string.h ****       { _M_dispose(); }
 544:/usr/include/c++/5/bits/basic_string.h **** 
 545:/usr/include/c++/5/bits/basic_string.h ****       /**
 546:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 547:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/5/bits/basic_string.h ****        */
 549:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 550:/usr/include/c++/5/bits/basic_string.h ****       operator=(const basic_string& __str)
 551:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str); }
 552:/usr/include/c++/5/bits/basic_string.h **** 
 553:/usr/include/c++/5/bits/basic_string.h ****       /**
 554:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 555:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 556:/usr/include/c++/5/bits/basic_string.h ****        */
 557:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 558:/usr/include/c++/5/bits/basic_string.h ****       operator=(const _CharT* __s)
 559:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__s); }
 560:/usr/include/c++/5/bits/basic_string.h **** 
 561:/usr/include/c++/5/bits/basic_string.h ****       /**
 562:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 563:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Source character.
 564:/usr/include/c++/5/bits/basic_string.h ****        *
 565:/usr/include/c++/5/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 566:/usr/include/c++/5/bits/basic_string.h ****        *  (*this)[0] == @a c.
 567:/usr/include/c++/5/bits/basic_string.h ****        */
 568:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 569:/usr/include/c++/5/bits/basic_string.h ****       operator=(_CharT __c)
 570:/usr/include/c++/5/bits/basic_string.h ****       {
 571:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(1, __c);
 572:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 573:/usr/include/c++/5/bits/basic_string.h ****       }
 574:/usr/include/c++/5/bits/basic_string.h **** 
 575:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 576:/usr/include/c++/5/bits/basic_string.h ****       /**
 577:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 578:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 579:/usr/include/c++/5/bits/basic_string.h ****        *
 580:/usr/include/c++/5/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 581:/usr/include/c++/5/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 582:/usr/include/c++/5/bits/basic_string.h ****        **/
 583:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
 584:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 585:/usr/include/c++/5/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 586:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 587:/usr/include/c++/5/bits/basic_string.h ****       operator=(basic_string&& __str)
 588:/usr/include/c++/5/bits/basic_string.h ****       {
 589:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
 590:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 591:/usr/include/c++/5/bits/basic_string.h ****       }
 592:/usr/include/c++/5/bits/basic_string.h **** 
 593:/usr/include/c++/5/bits/basic_string.h ****       /**
 594:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 595:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 596:/usr/include/c++/5/bits/basic_string.h ****        */
 597:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 598:/usr/include/c++/5/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 599:/usr/include/c++/5/bits/basic_string.h ****       {
 600:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 601:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 602:/usr/include/c++/5/bits/basic_string.h ****       }
 603:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 604:/usr/include/c++/5/bits/basic_string.h **** 
 605:/usr/include/c++/5/bits/basic_string.h ****       // Iterators:
 606:/usr/include/c++/5/bits/basic_string.h ****       /**
 607:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 608:/usr/include/c++/5/bits/basic_string.h ****        *  the %string.
 609:/usr/include/c++/5/bits/basic_string.h ****        */
 610:/usr/include/c++/5/bits/basic_string.h ****       iterator
 611:/usr/include/c++/5/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 612:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data()); }
 613:/usr/include/c++/5/bits/basic_string.h **** 
 614:/usr/include/c++/5/bits/basic_string.h ****       /**
 615:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 616:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 617:/usr/include/c++/5/bits/basic_string.h ****        */
 618:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 619:/usr/include/c++/5/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 620:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 621:/usr/include/c++/5/bits/basic_string.h **** 
 622:/usr/include/c++/5/bits/basic_string.h ****       /**
 623:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 624:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 625:/usr/include/c++/5/bits/basic_string.h ****        */
 626:/usr/include/c++/5/bits/basic_string.h ****       iterator
 627:/usr/include/c++/5/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 628:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 629:/usr/include/c++/5/bits/basic_string.h **** 
 630:/usr/include/c++/5/bits/basic_string.h ****       /**
 631:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 632:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
 633:/usr/include/c++/5/bits/basic_string.h ****        */
 634:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 635:/usr/include/c++/5/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 636:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 637:/usr/include/c++/5/bits/basic_string.h **** 
 638:/usr/include/c++/5/bits/basic_string.h ****       /**
 639:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 640:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 641:/usr/include/c++/5/bits/basic_string.h ****        *  order.
 642:/usr/include/c++/5/bits/basic_string.h ****        */
 643:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
 644:/usr/include/c++/5/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 645:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 646:/usr/include/c++/5/bits/basic_string.h **** 
 647:/usr/include/c++/5/bits/basic_string.h ****       /**
 648:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 649:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 650:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
 651:/usr/include/c++/5/bits/basic_string.h ****        */
 652:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 653:/usr/include/c++/5/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 655:/usr/include/c++/5/bits/basic_string.h **** 
 656:/usr/include/c++/5/bits/basic_string.h ****       /**
 657:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 658:/usr/include/c++/5/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 659:/usr/include/c++/5/bits/basic_string.h ****        *  element order.
 660:/usr/include/c++/5/bits/basic_string.h ****        */
 661:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
 662:/usr/include/c++/5/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 663:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 664:/usr/include/c++/5/bits/basic_string.h **** 
 665:/usr/include/c++/5/bits/basic_string.h ****       /**
 666:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 667:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 668:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
 669:/usr/include/c++/5/bits/basic_string.h ****        */
 670:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 671:/usr/include/c++/5/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 672:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 673:/usr/include/c++/5/bits/basic_string.h **** 
 674:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 675:/usr/include/c++/5/bits/basic_string.h ****       /**
 676:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 677:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 678:/usr/include/c++/5/bits/basic_string.h ****        */
 679:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 680:/usr/include/c++/5/bits/basic_string.h ****       cbegin() const noexcept
 681:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 682:/usr/include/c++/5/bits/basic_string.h **** 
 683:/usr/include/c++/5/bits/basic_string.h ****       /**
 684:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 685:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
 686:/usr/include/c++/5/bits/basic_string.h ****        */
 687:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 688:/usr/include/c++/5/bits/basic_string.h ****       cend() const noexcept
 689:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 690:/usr/include/c++/5/bits/basic_string.h **** 
 691:/usr/include/c++/5/bits/basic_string.h ****       /**
 692:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 693:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 694:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
 695:/usr/include/c++/5/bits/basic_string.h ****        */
 696:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 697:/usr/include/c++/5/bits/basic_string.h ****       crbegin() const noexcept
 698:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 699:/usr/include/c++/5/bits/basic_string.h **** 
 700:/usr/include/c++/5/bits/basic_string.h ****       /**
 701:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 702:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 703:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
 704:/usr/include/c++/5/bits/basic_string.h ****        */
 705:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 706:/usr/include/c++/5/bits/basic_string.h ****       crend() const noexcept
 707:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 708:/usr/include/c++/5/bits/basic_string.h **** #endif
 709:/usr/include/c++/5/bits/basic_string.h **** 
 710:/usr/include/c++/5/bits/basic_string.h ****     public:
 711:/usr/include/c++/5/bits/basic_string.h ****       // Capacity:
 712:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 713:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
 714:/usr/include/c++/5/bits/basic_string.h ****       size_type
 715:/usr/include/c++/5/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 716:/usr/include/c++/5/bits/basic_string.h ****       { return _M_string_length; }
 717:/usr/include/c++/5/bits/basic_string.h **** 
 718:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 719:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
 720:/usr/include/c++/5/bits/basic_string.h ****       size_type
 721:/usr/include/c++/5/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 722:/usr/include/c++/5/bits/basic_string.h ****       { return _M_string_length; }
 723:/usr/include/c++/5/bits/basic_string.h **** 
 724:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 725:/usr/include/c++/5/bits/basic_string.h ****       size_type
 726:/usr/include/c++/5/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 727:/usr/include/c++/5/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 728:/usr/include/c++/5/bits/basic_string.h **** 
 729:/usr/include/c++/5/bits/basic_string.h ****       /**
 730:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 731:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 732:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 733:/usr/include/c++/5/bits/basic_string.h ****        *
 734:/usr/include/c++/5/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 735:/usr/include/c++/5/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 736:/usr/include/c++/5/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 737:/usr/include/c++/5/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 738:/usr/include/c++/5/bits/basic_string.h ****        */
 739:/usr/include/c++/5/bits/basic_string.h ****       void
 740:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 741:/usr/include/c++/5/bits/basic_string.h **** 
 742:/usr/include/c++/5/bits/basic_string.h ****       /**
 743:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 744:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 745:/usr/include/c++/5/bits/basic_string.h ****        *
 746:/usr/include/c++/5/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 747:/usr/include/c++/5/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 748:/usr/include/c++/5/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 749:/usr/include/c++/5/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 750:/usr/include/c++/5/bits/basic_string.h ****        *  setting them to 0.
 751:/usr/include/c++/5/bits/basic_string.h ****        */
 752:/usr/include/c++/5/bits/basic_string.h ****       void
 753:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n)
 754:/usr/include/c++/5/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 755:/usr/include/c++/5/bits/basic_string.h **** 
 756:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 757:/usr/include/c++/5/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 758:/usr/include/c++/5/bits/basic_string.h ****       void
 759:/usr/include/c++/5/bits/basic_string.h ****       shrink_to_fit() noexcept
 760:/usr/include/c++/5/bits/basic_string.h ****       {
 761:/usr/include/c++/5/bits/basic_string.h **** #if __cpp_exceptions
 762:/usr/include/c++/5/bits/basic_string.h **** 	if (capacity() > size())
 763:/usr/include/c++/5/bits/basic_string.h **** 	  {
 764:/usr/include/c++/5/bits/basic_string.h **** 	    try
 765:/usr/include/c++/5/bits/basic_string.h **** 	      { reserve(0); }
 766:/usr/include/c++/5/bits/basic_string.h **** 	    catch(...)
 767:/usr/include/c++/5/bits/basic_string.h **** 	      { }
 768:/usr/include/c++/5/bits/basic_string.h **** 	  }
 769:/usr/include/c++/5/bits/basic_string.h **** #endif
 770:/usr/include/c++/5/bits/basic_string.h ****       }
 771:/usr/include/c++/5/bits/basic_string.h **** #endif
 772:/usr/include/c++/5/bits/basic_string.h **** 
 773:/usr/include/c++/5/bits/basic_string.h ****       /**
 774:/usr/include/c++/5/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 775:/usr/include/c++/5/bits/basic_string.h ****        *  before needing to allocate more memory.
 776:/usr/include/c++/5/bits/basic_string.h ****        */
 777:/usr/include/c++/5/bits/basic_string.h ****       size_type
 778:/usr/include/c++/5/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 779:/usr/include/c++/5/bits/basic_string.h ****       {
 780:/usr/include/c++/5/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 781:/usr/include/c++/5/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 782:/usr/include/c++/5/bits/basic_string.h ****       }
 783:/usr/include/c++/5/bits/basic_string.h **** 
 784:/usr/include/c++/5/bits/basic_string.h ****       /**
 785:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 786:/usr/include/c++/5/bits/basic_string.h ****        *          characters.
 787:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 788:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 789:/usr/include/c++/5/bits/basic_string.h ****        *
 790:/usr/include/c++/5/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 791:/usr/include/c++/5/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 792:/usr/include/c++/5/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 793:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
 794:/usr/include/c++/5/bits/basic_string.h ****        *
 795:/usr/include/c++/5/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 796:/usr/include/c++/5/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 797:/usr/include/c++/5/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 798:/usr/include/c++/5/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 799:/usr/include/c++/5/bits/basic_string.h ****        *  data.
 800:/usr/include/c++/5/bits/basic_string.h ****        */
 801:/usr/include/c++/5/bits/basic_string.h ****       void
 802:/usr/include/c++/5/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 803:/usr/include/c++/5/bits/basic_string.h **** 
 804:/usr/include/c++/5/bits/basic_string.h ****       /**
 805:/usr/include/c++/5/bits/basic_string.h ****        *  Erases the string, making it empty.
 806:/usr/include/c++/5/bits/basic_string.h ****        */
 807:/usr/include/c++/5/bits/basic_string.h ****       void
 808:/usr/include/c++/5/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 809:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 810:/usr/include/c++/5/bits/basic_string.h **** 
 811:/usr/include/c++/5/bits/basic_string.h ****       /**
 812:/usr/include/c++/5/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 813:/usr/include/c++/5/bits/basic_string.h ****        *  <code>*this == ""</code>.
 814:/usr/include/c++/5/bits/basic_string.h ****        */
 815:/usr/include/c++/5/bits/basic_string.h ****       bool
 816:/usr/include/c++/5/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 817:/usr/include/c++/5/bits/basic_string.h ****       { return this->size() == 0; }
 818:/usr/include/c++/5/bits/basic_string.h **** 
 819:/usr/include/c++/5/bits/basic_string.h ****       // Element access:
 820:/usr/include/c++/5/bits/basic_string.h ****       /**
 821:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 822:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 823:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 824:/usr/include/c++/5/bits/basic_string.h ****        *
 825:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 826:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 827:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 828:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
 829:/usr/include/c++/5/bits/basic_string.h ****        */
 830:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 831:/usr/include/c++/5/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
 832:/usr/include/c++/5/bits/basic_string.h ****       {
 833:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 834:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
 835:/usr/include/c++/5/bits/basic_string.h ****       }
 836:/usr/include/c++/5/bits/basic_string.h **** 
 837:/usr/include/c++/5/bits/basic_string.h ****       /**
 838:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 839:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 840:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 841:/usr/include/c++/5/bits/basic_string.h ****        *
 842:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 843:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 844:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 845:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
 846:/usr/include/c++/5/bits/basic_string.h ****        */
 847:/usr/include/c++/5/bits/basic_string.h ****       reference
 848:/usr/include/c++/5/bits/basic_string.h ****       operator[](size_type __pos)
 849:/usr/include/c++/5/bits/basic_string.h ****       {
 850:/usr/include/c++/5/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
 851:/usr/include/c++/5/bits/basic_string.h **** 	// and in C++11 mode.
 852:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 853:/usr/include/c++/5/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
 854:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
 855:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
 856:/usr/include/c++/5/bits/basic_string.h ****       }
 857:/usr/include/c++/5/bits/basic_string.h **** 
 858:/usr/include/c++/5/bits/basic_string.h ****       /**
 859:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 860:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
 861:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
 862:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 863:/usr/include/c++/5/bits/basic_string.h ****        *
 864:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 865:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 866:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 867:/usr/include/c++/5/bits/basic_string.h ****        */
 868:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 869:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n) const
 870:/usr/include/c++/5/bits/basic_string.h ****       {
 871:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= this->size())
 872:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 873:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 874:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
 875:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
 876:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
 877:/usr/include/c++/5/bits/basic_string.h ****       }
 878:/usr/include/c++/5/bits/basic_string.h **** 
 879:/usr/include/c++/5/bits/basic_string.h ****       /**
 880:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 881:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
 882:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 883:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 884:/usr/include/c++/5/bits/basic_string.h ****        *
 885:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 886:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 887:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 888:/usr/include/c++/5/bits/basic_string.h ****        */
 889:/usr/include/c++/5/bits/basic_string.h ****       reference
 890:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n)
 891:/usr/include/c++/5/bits/basic_string.h ****       {
 892:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= size())
 893:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 894:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 895:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
 896:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
 897:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
 898:/usr/include/c++/5/bits/basic_string.h ****       }
 899:/usr/include/c++/5/bits/basic_string.h **** 
 900:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 901:/usr/include/c++/5/bits/basic_string.h ****       /**
 902:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
 903:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 904:/usr/include/c++/5/bits/basic_string.h ****        */
 905:/usr/include/c++/5/bits/basic_string.h ****       reference
 906:/usr/include/c++/5/bits/basic_string.h ****       front() noexcept
 907:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
 908:/usr/include/c++/5/bits/basic_string.h **** 
 909:/usr/include/c++/5/bits/basic_string.h ****       /**
 910:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
 911:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 912:/usr/include/c++/5/bits/basic_string.h ****        */
 913:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 914:/usr/include/c++/5/bits/basic_string.h ****       front() const noexcept
 915:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
 916:/usr/include/c++/5/bits/basic_string.h **** 
 917:/usr/include/c++/5/bits/basic_string.h ****       /**
 918:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
 919:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 920:/usr/include/c++/5/bits/basic_string.h ****        */
 921:/usr/include/c++/5/bits/basic_string.h ****       reference
 922:/usr/include/c++/5/bits/basic_string.h ****       back() noexcept
 923:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 924:/usr/include/c++/5/bits/basic_string.h **** 
 925:/usr/include/c++/5/bits/basic_string.h ****       /**
 926:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
 927:/usr/include/c++/5/bits/basic_string.h ****        *  last element of the %string.
 928:/usr/include/c++/5/bits/basic_string.h ****        */
 929:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 930:/usr/include/c++/5/bits/basic_string.h ****       back() const noexcept
 931:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 932:/usr/include/c++/5/bits/basic_string.h **** #endif
 933:/usr/include/c++/5/bits/basic_string.h **** 
 934:/usr/include/c++/5/bits/basic_string.h ****       // Modifiers:
 935:/usr/include/c++/5/bits/basic_string.h ****       /**
 936:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
 937:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 938:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 939:/usr/include/c++/5/bits/basic_string.h ****        */
 940:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 941:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const basic_string& __str)
 942:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__str); }
 943:/usr/include/c++/5/bits/basic_string.h **** 
 944:/usr/include/c++/5/bits/basic_string.h ****       /**
 945:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
 946:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
 947:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 948:/usr/include/c++/5/bits/basic_string.h ****        */
 949:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 950:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const _CharT* __s)
 951:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__s); }
 952:/usr/include/c++/5/bits/basic_string.h **** 
 953:/usr/include/c++/5/bits/basic_string.h ****       /**
 954:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a character.
 955:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to append.
 956:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 957:/usr/include/c++/5/bits/basic_string.h ****        */
 958:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 959:/usr/include/c++/5/bits/basic_string.h ****       operator+=(_CharT __c)
 960:/usr/include/c++/5/bits/basic_string.h ****       {
 961:/usr/include/c++/5/bits/basic_string.h **** 	this->push_back(__c);
 962:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 963:/usr/include/c++/5/bits/basic_string.h ****       }
 964:/usr/include/c++/5/bits/basic_string.h **** 
 965:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 966:/usr/include/c++/5/bits/basic_string.h ****       /**
 967:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
 968:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
 969:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 970:/usr/include/c++/5/bits/basic_string.h ****        */
 971:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 972:/usr/include/c++/5/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
 973:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
 974:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 975:/usr/include/c++/5/bits/basic_string.h **** 
 976:/usr/include/c++/5/bits/basic_string.h ****       /**
 977:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
 978:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 979:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 980:/usr/include/c++/5/bits/basic_string.h ****        */
 981:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 982:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str)
 983:/usr/include/c++/5/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 984:/usr/include/c++/5/bits/basic_string.h **** 
 985:/usr/include/c++/5/bits/basic_string.h ****       /**
 986:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a substring.
 987:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 988:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
 989:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 990:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 991:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
 992:/usr/include/c++/5/bits/basic_string.h ****        *
 993:/usr/include/c++/5/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
 994:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
 995:/usr/include/c++/5/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
 996:/usr/include/c++/5/bits/basic_string.h ****        *  remainder of @a __str is appended.
 997:/usr/include/c++/5/bits/basic_string.h ****        */
 998:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 999:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n)
1000:/usr/include/c++/5/bits/basic_string.h ****       { return _M_append(__str._M_data()
1001:/usr/include/c++/5/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1002:/usr/include/c++/5/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1003:/usr/include/c++/5/bits/basic_string.h **** 
1004:/usr/include/c++/5/bits/basic_string.h ****       /**
1005:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C substring.
1006:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
1007:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1008:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1009:/usr/include/c++/5/bits/basic_string.h ****        */
1010:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1011:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1012:/usr/include/c++/5/bits/basic_string.h ****       {
1013:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1014:/usr/include/c++/5/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1015:/usr/include/c++/5/bits/basic_string.h **** 	return _M_append(__s, __n);
1016:/usr/include/c++/5/bits/basic_string.h ****       }
1017:/usr/include/c++/5/bits/basic_string.h **** 
1018:/usr/include/c++/5/bits/basic_string.h ****       /**
1019:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
1020:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
1021:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1022:/usr/include/c++/5/bits/basic_string.h ****        */
1023:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1024:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s)
1025:/usr/include/c++/5/bits/basic_string.h ****       {
1026:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1027:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1028:/usr/include/c++/5/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1029:/usr/include/c++/5/bits/basic_string.h **** 	return _M_append(__s, __n);
1030:/usr/include/c++/5/bits/basic_string.h ****       }
1031:/usr/include/c++/5/bits/basic_string.h **** 
1032:/usr/include/c++/5/bits/basic_string.h ****       /**
1033:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append multiple characters.
1034:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1035:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
1036:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1037:/usr/include/c++/5/bits/basic_string.h ****        *
1038:/usr/include/c++/5/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1039:/usr/include/c++/5/bits/basic_string.h ****        */
1040:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1041:/usr/include/c++/5/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1042:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1043:/usr/include/c++/5/bits/basic_string.h **** 
1044:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1045:/usr/include/c++/5/bits/basic_string.h ****       /**
1046:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1047:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1048:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1049:/usr/include/c++/5/bits/basic_string.h ****        */
1050:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1051:/usr/include/c++/5/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1052:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1053:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1054:/usr/include/c++/5/bits/basic_string.h **** 
1055:/usr/include/c++/5/bits/basic_string.h ****       /**
1056:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a range of characters.
1057:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1058:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1059:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1060:/usr/include/c++/5/bits/basic_string.h ****        *
1061:/usr/include/c++/5/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1062:/usr/include/c++/5/bits/basic_string.h ****        */
1063:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1064:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1065:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1066:/usr/include/c++/5/bits/basic_string.h **** #else
1067:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1068:/usr/include/c++/5/bits/basic_string.h **** #endif
1069:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1070:/usr/include/c++/5/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1071:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1072:/usr/include/c++/5/bits/basic_string.h **** 
1073:/usr/include/c++/5/bits/basic_string.h ****       /**
1074:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a single character.
1075:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to append.
1076:/usr/include/c++/5/bits/basic_string.h ****        */
1077:/usr/include/c++/5/bits/basic_string.h ****       void
1078:/usr/include/c++/5/bits/basic_string.h ****       push_back(_CharT __c)
1079:/usr/include/c++/5/bits/basic_string.h ****       {
1080:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
1081:/usr/include/c++/5/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1082:/usr/include/c++/5/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1083:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1084:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1085:/usr/include/c++/5/bits/basic_string.h ****       }
1086:/usr/include/c++/5/bits/basic_string.h **** 
1087:/usr/include/c++/5/bits/basic_string.h ****       /**
1088:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1089:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
1090:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1091:/usr/include/c++/5/bits/basic_string.h ****        */
1092:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1093:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str)
1094:/usr/include/c++/5/bits/basic_string.h ****       {
1095:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_assign(__str);
1096:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
1097:/usr/include/c++/5/bits/basic_string.h ****       }
1098:/usr/include/c++/5/bits/basic_string.h **** 
1099:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1100:/usr/include/c++/5/bits/basic_string.h ****       /**
1101:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1102:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
1103:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1104:/usr/include/c++/5/bits/basic_string.h ****        *
1105:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1106:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1107:/usr/include/c++/5/bits/basic_string.h ****        */
1108:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1109:/usr/include/c++/5/bits/basic_string.h ****       assign(basic_string&& __str)
1110:/usr/include/c++/5/bits/basic_string.h ****       {
1111:/usr/include/c++/5/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1112:/usr/include/c++/5/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1113:/usr/include/c++/5/bits/basic_string.h **** 	return *this = std::move(__str);
1114:/usr/include/c++/5/bits/basic_string.h ****       }
1115:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1116:/usr/include/c++/5/bits/basic_string.h **** 
1117:/usr/include/c++/5/bits/basic_string.h ****       /**
1118:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1119:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to use.
1120:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1121:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1122:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1123:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1124:/usr/include/c++/5/bits/basic_string.h ****        *
1125:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1126:/usr/include/c++/5/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1127:/usr/include/c++/5/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1128:/usr/include/c++/5/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1129:/usr/include/c++/5/bits/basic_string.h ****        */
1130:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1131:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1132:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1133:/usr/include/c++/5/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1134:/usr/include/c++/5/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1135:/usr/include/c++/5/bits/basic_string.h **** 
1136:/usr/include/c++/5/bits/basic_string.h ****       /**
1137:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1138:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
1139:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1140:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1141:/usr/include/c++/5/bits/basic_string.h ****        *
1142:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1143:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1144:/usr/include/c++/5/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1145:/usr/include/c++/5/bits/basic_string.h ****        */
1146:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1147:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1148:/usr/include/c++/5/bits/basic_string.h ****       {
1149:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1150:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1151:/usr/include/c++/5/bits/basic_string.h ****       }
1152:/usr/include/c++/5/bits/basic_string.h **** 
1153:/usr/include/c++/5/bits/basic_string.h ****       /**
1154:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1155:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
1156:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1157:/usr/include/c++/5/bits/basic_string.h ****        *
1158:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1159:/usr/include/c++/5/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1160:/usr/include/c++/5/bits/basic_string.h ****        *  function returns.
1161:/usr/include/c++/5/bits/basic_string.h ****        */
1162:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1163:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s)
1164:/usr/include/c++/5/bits/basic_string.h ****       {
1165:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1166:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1167:/usr/include/c++/5/bits/basic_string.h **** 			  traits_type::length(__s));
1168:/usr/include/c++/5/bits/basic_string.h ****       }
1169:/usr/include/c++/5/bits/basic_string.h **** 
1170:/usr/include/c++/5/bits/basic_string.h ****       /**
1171:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1172:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1173:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
1174:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/c++/5/bits/basic_string.h ****        *
1176:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1177:/usr/include/c++/5/bits/basic_string.h ****        *  character @a __c.
1178:/usr/include/c++/5/bits/basic_string.h ****        */
1179:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1180:/usr/include/c++/5/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1181:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1182:/usr/include/c++/5/bits/basic_string.h **** 
1183:/usr/include/c++/5/bits/basic_string.h ****       /**
1184:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1185:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1186:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1187:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1188:/usr/include/c++/5/bits/basic_string.h ****        *
1189:/usr/include/c++/5/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1190:/usr/include/c++/5/bits/basic_string.h ****       */
1191:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1192:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1193:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1194:/usr/include/c++/5/bits/basic_string.h **** #else
1195:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1196:/usr/include/c++/5/bits/basic_string.h **** #endif
1197:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1198:/usr/include/c++/5/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1199:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1200:/usr/include/c++/5/bits/basic_string.h **** 
1201:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1202:/usr/include/c++/5/bits/basic_string.h ****       /**
1203:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1204:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1205:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1206:/usr/include/c++/5/bits/basic_string.h ****        */
1207:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1208:/usr/include/c++/5/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1209:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1210:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1211:/usr/include/c++/5/bits/basic_string.h **** 
1212:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1213:/usr/include/c++/5/bits/basic_string.h ****       /**
1214:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1215:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1216:/usr/include/c++/5/bits/basic_string.h ****        *              insert at.
1217:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1218:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1219:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1220:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1221:/usr/include/c++/5/bits/basic_string.h ****        *
1222:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1223:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1224:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1225:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1226:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1227:/usr/include/c++/5/bits/basic_string.h ****       */
1228:/usr/include/c++/5/bits/basic_string.h ****       iterator
1229:/usr/include/c++/5/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1230:/usr/include/c++/5/bits/basic_string.h ****       {
1231:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1232:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1233:/usr/include/c++/5/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1234:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1235:/usr/include/c++/5/bits/basic_string.h ****       }
1236:/usr/include/c++/5/bits/basic_string.h **** #else
1237:/usr/include/c++/5/bits/basic_string.h ****       /**
1238:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1239:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1240:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1241:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1242:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1243:/usr/include/c++/5/bits/basic_string.h ****        *
1244:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1245:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1246:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1247:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1248:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1249:/usr/include/c++/5/bits/basic_string.h ****       */
1250:/usr/include/c++/5/bits/basic_string.h ****       void
1251:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1252:/usr/include/c++/5/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1253:/usr/include/c++/5/bits/basic_string.h **** #endif
1254:/usr/include/c++/5/bits/basic_string.h **** 
1255:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1256:/usr/include/c++/5/bits/basic_string.h ****       /**
1257:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1258:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1259:/usr/include/c++/5/bits/basic_string.h ****        *              insert at.
1260:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
1261:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
1262:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1263:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1264:/usr/include/c++/5/bits/basic_string.h ****        *
1265:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1266:/usr/include/c++/5/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1267:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1268:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1269:/usr/include/c++/5/bits/basic_string.h ****       */
1270:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1271:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1272:/usr/include/c++/5/bits/basic_string.h **** 	iterator
1273:/usr/include/c++/5/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1274:/usr/include/c++/5/bits/basic_string.h ****         {
1275:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1276:/usr/include/c++/5/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1277:/usr/include/c++/5/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1278:/usr/include/c++/5/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1279:/usr/include/c++/5/bits/basic_string.h **** 	}
1280:/usr/include/c++/5/bits/basic_string.h **** #else
1281:/usr/include/c++/5/bits/basic_string.h ****       /**
1282:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1283:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1284:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
1285:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
1286:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1287:/usr/include/c++/5/bits/basic_string.h ****        *
1288:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1289:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1290:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1291:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1292:/usr/include/c++/5/bits/basic_string.h ****       */
1293:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1294:/usr/include/c++/5/bits/basic_string.h ****         void
1295:/usr/include/c++/5/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1296:/usr/include/c++/5/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1297:/usr/include/c++/5/bits/basic_string.h **** #endif
1298:/usr/include/c++/5/bits/basic_string.h **** 
1299:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1300:/usr/include/c++/5/bits/basic_string.h ****       /**
1301:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1302:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1303:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1304:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1305:/usr/include/c++/5/bits/basic_string.h ****        */
1306:/usr/include/c++/5/bits/basic_string.h ****       void
1307:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1308:/usr/include/c++/5/bits/basic_string.h ****       {
1309:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1310:/usr/include/c++/5/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1311:/usr/include/c++/5/bits/basic_string.h ****       }
1312:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1313:/usr/include/c++/5/bits/basic_string.h **** 
1314:/usr/include/c++/5/bits/basic_string.h ****       /**
1315:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert value of a string.
1316:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1317:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
1318:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1319:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1320:/usr/include/c++/5/bits/basic_string.h ****        *
1321:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1322:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1323:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1324:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1325:/usr/include/c++/5/bits/basic_string.h ****       */
1326:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1327:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1328:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1329:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1330:/usr/include/c++/5/bits/basic_string.h **** 
1331:/usr/include/c++/5/bits/basic_string.h ****       /**
1332:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a substring.
1333:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1334:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
1335:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1336:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1337:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1338:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1339:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1340:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1341:/usr/include/c++/5/bits/basic_string.h ****        *
1342:/usr/include/c++/5/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1343:/usr/include/c++/5/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1344:/usr/include/c++/5/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1345:/usr/include/c++/5/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1346:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1347:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1348:/usr/include/c++/5/bits/basic_string.h ****       */
1349:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1350:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1351:/usr/include/c++/5/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1352:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1353:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1354:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1355:/usr/include/c++/5/bits/basic_string.h **** 
1356:/usr/include/c++/5/bits/basic_string.h ****       /**
1357:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C substring.
1358:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1359:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
1360:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1361:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1363:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1364:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1365:/usr/include/c++/5/bits/basic_string.h ****        *
1366:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1367:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1368:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1369:/usr/include/c++/5/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1370:/usr/include/c++/5/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1371:/usr/include/c++/5/bits/basic_string.h ****       */
1372:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1373:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1374:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1375:/usr/include/c++/5/bits/basic_string.h **** 
1376:/usr/include/c++/5/bits/basic_string.h ****       /**
1377:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C string.
1378:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1379:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
1380:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1381:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1382:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1383:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1384:/usr/include/c++/5/bits/basic_string.h ****        *
1385:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1386:/usr/include/c++/5/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1387:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1388:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1389:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1390:/usr/include/c++/5/bits/basic_string.h ****       */
1391:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1392:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1393:/usr/include/c++/5/bits/basic_string.h ****       {
1394:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1395:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1396:/usr/include/c++/5/bits/basic_string.h **** 			     traits_type::length(__s));
1397:/usr/include/c++/5/bits/basic_string.h ****       }
1398:/usr/include/c++/5/bits/basic_string.h **** 
1399:/usr/include/c++/5/bits/basic_string.h ****       /**
1400:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1401:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1402:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1403:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1404:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1405:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1406:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1407:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1408:/usr/include/c++/5/bits/basic_string.h ****        *
1409:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1410:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1411:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1412:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1413:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1414:/usr/include/c++/5/bits/basic_string.h ****       */
1415:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1416:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1417:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1418:/usr/include/c++/5/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1419:/usr/include/c++/5/bits/basic_string.h **** 
1420:/usr/include/c++/5/bits/basic_string.h ****       /**
1421:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert one character.
1422:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1423:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1424:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1425:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1426:/usr/include/c++/5/bits/basic_string.h ****        *
1427:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1428:/usr/include/c++/5/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1429:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1430:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1431:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1432:/usr/include/c++/5/bits/basic_string.h ****       */
1433:/usr/include/c++/5/bits/basic_string.h ****       iterator
1434:/usr/include/c++/5/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1435:/usr/include/c++/5/bits/basic_string.h ****       {
1436:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1437:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1438:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1439:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1440:/usr/include/c++/5/bits/basic_string.h ****       }
1441:/usr/include/c++/5/bits/basic_string.h **** 
1442:/usr/include/c++/5/bits/basic_string.h ****       /**
1443:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove characters.
1444:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1445:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1446:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1448:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1449:/usr/include/c++/5/bits/basic_string.h ****        *
1450:/usr/include/c++/5/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1451:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1452:/usr/include/c++/5/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1453:/usr/include/c++/5/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1454:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1455:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1456:/usr/include/c++/5/bits/basic_string.h ****       */
1457:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1458:/usr/include/c++/5/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1459:/usr/include/c++/5/bits/basic_string.h ****       {
1460:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(_M_check(__pos, "basic_string::erase"),
1461:/usr/include/c++/5/bits/basic_string.h **** 		       _M_limit(__pos, __n));
1462:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
1463:/usr/include/c++/5/bits/basic_string.h ****       }
1464:/usr/include/c++/5/bits/basic_string.h **** 
1465:/usr/include/c++/5/bits/basic_string.h ****       /**
1466:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove one character.
1467:/usr/include/c++/5/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1468:/usr/include/c++/5/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1469:/usr/include/c++/5/bits/basic_string.h ****        *
1470:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1471:/usr/include/c++/5/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1472:/usr/include/c++/5/bits/basic_string.h ****       */
1473:/usr/include/c++/5/bits/basic_string.h ****       iterator
1474:/usr/include/c++/5/bits/basic_string.h ****       erase(__const_iterator __position)
1475:/usr/include/c++/5/bits/basic_string.h ****       {
1476:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1477:/usr/include/c++/5/bits/basic_string.h **** 				 && __position < end());
1478:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1479:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1480:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1481:/usr/include/c++/5/bits/basic_string.h ****       }
1482:/usr/include/c++/5/bits/basic_string.h **** 
1483:/usr/include/c++/5/bits/basic_string.h ****       /**
1484:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1485:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1486:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1487:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1488:/usr/include/c++/5/bits/basic_string.h ****        *
1489:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1490:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1491:/usr/include/c++/5/bits/basic_string.h ****       */
1492:/usr/include/c++/5/bits/basic_string.h ****       iterator
1493:/usr/include/c++/5/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1494:/usr/include/c++/5/bits/basic_string.h ****       {
1495:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1496:/usr/include/c++/5/bits/basic_string.h **** 				 && __last <= end());
1497:/usr/include/c++/5/bits/basic_string.h ****         const size_type __pos = __first - begin();
1498:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(__pos, __last - __first);
1499:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1500:/usr/include/c++/5/bits/basic_string.h ****       }
1501:/usr/include/c++/5/bits/basic_string.h **** 
1502:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1503:/usr/include/c++/5/bits/basic_string.h ****       /**
1504:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove the last character.
1505:/usr/include/c++/5/bits/basic_string.h ****        *
1506:/usr/include/c++/5/bits/basic_string.h ****        *  The string must be non-empty.
1507:/usr/include/c++/5/bits/basic_string.h ****        */
1508:/usr/include/c++/5/bits/basic_string.h ****       void
1509:/usr/include/c++/5/bits/basic_string.h ****       pop_back() noexcept
1510:/usr/include/c++/5/bits/basic_string.h ****       { _M_erase(size()-1, 1); }
1511:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1512:/usr/include/c++/5/bits/basic_string.h **** 
1513:/usr/include/c++/5/bits/basic_string.h ****       /**
1514:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1515:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1516:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1517:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
1518:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1519:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1520:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1521:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1522:/usr/include/c++/5/bits/basic_string.h ****        *
1523:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1524:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1525:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1526:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1527:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1528:/usr/include/c++/5/bits/basic_string.h ****        *  error is thrown.
1529:/usr/include/c++/5/bits/basic_string.h ****       */
1530:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1531:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1532:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1533:/usr/include/c++/5/bits/basic_string.h **** 
1534:/usr/include/c++/5/bits/basic_string.h ****       /**
1535:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1537:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1538:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
1539:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1540:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1541:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1542:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1543:/usr/include/c++/5/bits/basic_string.h ****        *  __str.size().
1544:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1545:/usr/include/c++/5/bits/basic_string.h ****        *
1546:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1547:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1548:/usr/include/c++/5/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1549:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1550:/usr/include/c++/5/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1551:/usr/include/c++/5/bits/basic_string.h ****       */
1552:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1553:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1554:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1555:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1556:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1557:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1558:/usr/include/c++/5/bits/basic_string.h **** 
1559:/usr/include/c++/5/bits/basic_string.h ****       /**
1560:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1561:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1562:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1563:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
1564:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1565:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1566:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1567:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1568:/usr/include/c++/5/bits/basic_string.h ****        *
1569:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1570:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1571:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1572:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1573:/usr/include/c++/5/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1574:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1575:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1576:/usr/include/c++/5/bits/basic_string.h ****       */
1577:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1578:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1579:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2)
1580:/usr/include/c++/5/bits/basic_string.h ****       {
1581:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1582:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1583:/usr/include/c++/5/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1584:/usr/include/c++/5/bits/basic_string.h ****       }
1585:/usr/include/c++/5/bits/basic_string.h **** 
1586:/usr/include/c++/5/bits/basic_string.h ****       /**
1587:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1588:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1589:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1590:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
1591:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1592:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1593:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1594:/usr/include/c++/5/bits/basic_string.h ****        *
1595:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1596:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1597:/usr/include/c++/5/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1598:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1599:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1600:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1601:/usr/include/c++/5/bits/basic_string.h ****       */
1602:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1603:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1604:/usr/include/c++/5/bits/basic_string.h ****       {
1605:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1606:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1607:/usr/include/c++/5/bits/basic_string.h ****       }
1608:/usr/include/c++/5/bits/basic_string.h **** 
1609:/usr/include/c++/5/bits/basic_string.h ****       /**
1610:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1611:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1612:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1613:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1614:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
1615:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1616:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1617:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1618:/usr/include/c++/5/bits/basic_string.h ****        *
1619:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1620:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1621:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1622:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1623:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1624:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1625:/usr/include/c++/5/bits/basic_string.h ****       */
1626:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1627:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1628:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1629:/usr/include/c++/5/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1630:/usr/include/c++/5/bits/basic_string.h **** 
1631:/usr/include/c++/5/bits/basic_string.h ****       /**
1632:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1633:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1634:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1635:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String value to insert.
1636:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1637:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1638:/usr/include/c++/5/bits/basic_string.h ****        *
1639:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1640:/usr/include/c++/5/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1641:/usr/include/c++/5/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1642:/usr/include/c++/5/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1643:/usr/include/c++/5/bits/basic_string.h ****       */
1644:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1645:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1646:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string& __str)
1647:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1648:/usr/include/c++/5/bits/basic_string.h **** 
1649:/usr/include/c++/5/bits/basic_string.h ****       /**
1650:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1651:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1652:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1653:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
1654:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1655:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1656:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1657:/usr/include/c++/5/bits/basic_string.h ****        *
1658:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1659:/usr/include/c++/5/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1660:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1661:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1662:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1663:/usr/include/c++/5/bits/basic_string.h ****       */
1664:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1665:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1666:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
1667:/usr/include/c++/5/bits/basic_string.h ****       {
1668:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1669:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1670:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
1671:/usr/include/c++/5/bits/basic_string.h ****       }
1672:/usr/include/c++/5/bits/basic_string.h **** 
1673:/usr/include/c++/5/bits/basic_string.h ****       /**
1674:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
1675:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1676:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1677:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
1678:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1679:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1680:/usr/include/c++/5/bits/basic_string.h ****        *
1681:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1682:/usr/include/c++/5/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1683:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1684:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1685:/usr/include/c++/5/bits/basic_string.h ****       */
1686:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1687:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
1688:/usr/include/c++/5/bits/basic_string.h ****       {
1689:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1690:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1691:/usr/include/c++/5/bits/basic_string.h ****       }
1692:/usr/include/c++/5/bits/basic_string.h **** 
1693:/usr/include/c++/5/bits/basic_string.h ****       /**
1694:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1695:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1696:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1697:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1698:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
1699:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1700:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1701:/usr/include/c++/5/bits/basic_string.h ****        *
1702:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1703:/usr/include/c++/5/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1704:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1705:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1706:/usr/include/c++/5/bits/basic_string.h ****       */
1707:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1708:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
1709:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT __c)
1710:/usr/include/c++/5/bits/basic_string.h ****       {
1711:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1712:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1713:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
1714:/usr/include/c++/5/bits/basic_string.h ****       }
1715:/usr/include/c++/5/bits/basic_string.h **** 
1716:/usr/include/c++/5/bits/basic_string.h ****       /**
1717:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
1718:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1719:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1720:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1721:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1722:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1723:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1724:/usr/include/c++/5/bits/basic_string.h ****        *
1725:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1726:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1727:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1728:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1729:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1730:/usr/include/c++/5/bits/basic_string.h ****       */
1731:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1732:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1733:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1734:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1735:/usr/include/c++/5/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
1736:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1737:/usr/include/c++/5/bits/basic_string.h ****         {
1738:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1739:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= end());
1740:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1741:/usr/include/c++/5/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
1742:/usr/include/c++/5/bits/basic_string.h **** 					   std::__false_type());
1743:/usr/include/c++/5/bits/basic_string.h **** 	}
1744:/usr/include/c++/5/bits/basic_string.h **** #else
1745:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1746:/usr/include/c++/5/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
1747:/usr/include/c++/5/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
1748:/usr/include/c++/5/bits/basic_string.h **** #else
1749:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1750:/usr/include/c++/5/bits/basic_string.h **** #endif
1751:/usr/include/c++/5/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
1752:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1753:/usr/include/c++/5/bits/basic_string.h ****         {
1754:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1755:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= end());
1756:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1757:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1758:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1759:/usr/include/c++/5/bits/basic_string.h **** 	}
1760:/usr/include/c++/5/bits/basic_string.h **** #endif
1761:/usr/include/c++/5/bits/basic_string.h **** 
1762:/usr/include/c++/5/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
1763:/usr/include/c++/5/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1764:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1765:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1766:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
1767:/usr/include/c++/5/bits/basic_string.h ****       {
1768:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1769:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1770:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1771:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1772:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1773:/usr/include/c++/5/bits/basic_string.h ****       }
1774:/usr/include/c++/5/bits/basic_string.h **** 
1775:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1776:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1777:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1778:/usr/include/c++/5/bits/basic_string.h ****       {
1779:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1780:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1781:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1782:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1783:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1784:/usr/include/c++/5/bits/basic_string.h ****       }
1785:/usr/include/c++/5/bits/basic_string.h **** 
1786:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1787:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1788:/usr/include/c++/5/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
1789:/usr/include/c++/5/bits/basic_string.h ****       {
1790:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1791:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1792:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1793:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1794:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1795:/usr/include/c++/5/bits/basic_string.h ****       }
1796:/usr/include/c++/5/bits/basic_string.h **** 
1797:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1798:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1799:/usr/include/c++/5/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1800:/usr/include/c++/5/bits/basic_string.h ****       {
1801:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1802:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1803:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1804:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1805:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1806:/usr/include/c++/5/bits/basic_string.h ****       }
1807:/usr/include/c++/5/bits/basic_string.h **** 
1808:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1809:/usr/include/c++/5/bits/basic_string.h ****       /**
1810:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1811:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1812:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1813:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1814:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1815:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1816:/usr/include/c++/5/bits/basic_string.h ****        *
1817:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1818:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1819:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1820:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1821:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1822:/usr/include/c++/5/bits/basic_string.h ****       */
1823:/usr/include/c++/5/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
1824:/usr/include/c++/5/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
1825:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1826:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1827:/usr/include/c++/5/bits/basic_string.h **** 
1828:/usr/include/c++/5/bits/basic_string.h ****     private:
1829:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
1830:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
1831:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1832:/usr/include/c++/5/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
1833:/usr/include/c++/5/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
1834:/usr/include/c++/5/bits/basic_string.h **** 
1835:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1836:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
1837:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1838:/usr/include/c++/5/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
1839:/usr/include/c++/5/bits/basic_string.h **** 			    __false_type);
1840:/usr/include/c++/5/bits/basic_string.h **** 
1841:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1842:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1843:/usr/include/c++/5/bits/basic_string.h **** 		     _CharT __c);
1844:/usr/include/c++/5/bits/basic_string.h **** 
1845:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1846:/usr/include/c++/5/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
1847:/usr/include/c++/5/bits/basic_string.h **** 		 const size_type __len2);
1848:/usr/include/c++/5/bits/basic_string.h **** 
1849:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1850:/usr/include/c++/5/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
1851:/usr/include/c++/5/bits/basic_string.h **** 
1852:/usr/include/c++/5/bits/basic_string.h ****     public:
1853:/usr/include/c++/5/bits/basic_string.h **** 
1854:/usr/include/c++/5/bits/basic_string.h ****       /**
1855:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy substring into C string.
1856:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to copy value into.
1857:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
1858:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
1859:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Number of characters actually copied
1860:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1861:/usr/include/c++/5/bits/basic_string.h ****        *
1862:/usr/include/c++/5/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1863:/usr/include/c++/5/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
1864:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.
1865:/usr/include/c++/5/bits/basic_string.h ****       */
1866:/usr/include/c++/5/bits/basic_string.h ****       size_type
1867:/usr/include/c++/5/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1868:/usr/include/c++/5/bits/basic_string.h **** 
1869:/usr/include/c++/5/bits/basic_string.h ****       /**
1870:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Swap contents with another string.
1871:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String to swap with.
1872:/usr/include/c++/5/bits/basic_string.h ****        *
1873:/usr/include/c++/5/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1874:/usr/include/c++/5/bits/basic_string.h ****        *  time.
1875:/usr/include/c++/5/bits/basic_string.h ****       */
1876:/usr/include/c++/5/bits/basic_string.h ****       void
1877:/usr/include/c++/5/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
1878:/usr/include/c++/5/bits/basic_string.h **** 
1879:/usr/include/c++/5/bits/basic_string.h ****       // String operations:
1880:/usr/include/c++/5/bits/basic_string.h ****       /**
1881:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1882:/usr/include/c++/5/bits/basic_string.h ****        *
1883:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1884:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
1885:/usr/include/c++/5/bits/basic_string.h ****       */
1886:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
1887:/usr/include/c++/5/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1888:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
1889:/usr/include/c++/5/bits/basic_string.h **** 
1890:/usr/include/c++/5/bits/basic_string.h ****       /**
1891:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
1892:/usr/include/c++/5/bits/basic_string.h ****        *
1893:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1894:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
1895:/usr/include/c++/5/bits/basic_string.h ****       */
1896:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
1897:/usr/include/c++/5/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
1898:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
1899:/usr/include/c++/5/bits/basic_string.h **** 
1900:/usr/include/c++/5/bits/basic_string.h ****       /**
1901:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
1902:/usr/include/c++/5/bits/basic_string.h ****       */
1903:/usr/include/c++/5/bits/basic_string.h ****       allocator_type
1904:/usr/include/c++/5/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1905:/usr/include/c++/5/bits/basic_string.h ****       { return _M_get_allocator(); }
1906:/usr/include/c++/5/bits/basic_string.h **** 
1907:/usr/include/c++/5/bits/basic_string.h ****       /**
1908:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C substring.
1909:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1910:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1911:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
1912:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1913:/usr/include/c++/5/bits/basic_string.h ****        *
1914:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
1915:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1916:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1917:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
1918:/usr/include/c++/5/bits/basic_string.h ****       */
1919:/usr/include/c++/5/bits/basic_string.h ****       size_type
1920:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
1921:/usr/include/c++/5/bits/basic_string.h **** 
1922:/usr/include/c++/5/bits/basic_string.h ****       /**
1923:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a string.
1924:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
1925:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1926:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1927:/usr/include/c++/5/bits/basic_string.h ****        *
1928:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
1929:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
1930:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns npos.
1931:/usr/include/c++/5/bits/basic_string.h ****       */
1932:/usr/include/c++/5/bits/basic_string.h ****       size_type
1933:/usr/include/c++/5/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
1934:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1935:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
1936:/usr/include/c++/5/bits/basic_string.h **** 
1937:/usr/include/c++/5/bits/basic_string.h ****       /**
1938:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C string.
1939:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1940:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1941:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1942:/usr/include/c++/5/bits/basic_string.h ****        *
1943:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
1944:/usr/include/c++/5/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
1945:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1946:/usr/include/c++/5/bits/basic_string.h ****       */
1947:/usr/include/c++/5/bits/basic_string.h ****       size_type
1948:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
1949:/usr/include/c++/5/bits/basic_string.h ****       {
1950:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1951:/usr/include/c++/5/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
1952:/usr/include/c++/5/bits/basic_string.h ****       }
1953:/usr/include/c++/5/bits/basic_string.h **** 
1954:/usr/include/c++/5/bits/basic_string.h ****       /**
1955:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
1956:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
1957:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1958:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
1959:/usr/include/c++/5/bits/basic_string.h ****        *
1960:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
1961:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1962:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
1963:/usr/include/c++/5/bits/basic_string.h ****       */
1964:/usr/include/c++/5/bits/basic_string.h ****       size_type
1965:/usr/include/c++/5/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
1966:/usr/include/c++/5/bits/basic_string.h **** 
1967:/usr/include/c++/5/bits/basic_string.h ****       /**
1968:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a string.
1969:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
1970:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1971:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1972:/usr/include/c++/5/bits/basic_string.h ****        *
1973:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
1974:/usr/include/c++/5/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
1975:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1976:/usr/include/c++/5/bits/basic_string.h ****       */
1977:/usr/include/c++/5/bits/basic_string.h ****       size_type
1978:/usr/include/c++/5/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
1979:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1980:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
1981:/usr/include/c++/5/bits/basic_string.h **** 
1982:/usr/include/c++/5/bits/basic_string.h ****       /**
1983:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
1984:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1985:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
1986:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1987:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1988:/usr/include/c++/5/bits/basic_string.h ****        *
1989:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
1990:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1991:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1992:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
1993:/usr/include/c++/5/bits/basic_string.h ****       */
1994:/usr/include/c++/5/bits/basic_string.h ****       size_type
1995:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
1996:/usr/include/c++/5/bits/basic_string.h **** 
1997:/usr/include/c++/5/bits/basic_string.h ****       /**
1998:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C string.
1999:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
2000:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2001:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2002:/usr/include/c++/5/bits/basic_string.h ****        *
2003:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2004:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2005:/usr/include/c++/5/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2006:/usr/include/c++/5/bits/basic_string.h ****       */
2007:/usr/include/c++/5/bits/basic_string.h ****       size_type
2008:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2009:/usr/include/c++/5/bits/basic_string.h ****       {
2010:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2011:/usr/include/c++/5/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2012:/usr/include/c++/5/bits/basic_string.h ****       }
2013:/usr/include/c++/5/bits/basic_string.h **** 
2014:/usr/include/c++/5/bits/basic_string.h ****       /**
2015:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
2016:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2017:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2018:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2019:/usr/include/c++/5/bits/basic_string.h ****        *
2020:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2021:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2022:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2023:/usr/include/c++/5/bits/basic_string.h ****       */
2024:/usr/include/c++/5/bits/basic_string.h ****       size_type
2025:/usr/include/c++/5/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2026:/usr/include/c++/5/bits/basic_string.h **** 
2027:/usr/include/c++/5/bits/basic_string.h ****       /**
2028:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2029:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2030:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2031:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2032:/usr/include/c++/5/bits/basic_string.h ****        *
2033:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2034:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2035:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2036:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2037:/usr/include/c++/5/bits/basic_string.h ****       */
2038:/usr/include/c++/5/bits/basic_string.h ****       size_type
2039:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2040:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2041:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2042:/usr/include/c++/5/bits/basic_string.h **** 
2043:/usr/include/c++/5/bits/basic_string.h ****       /**
2044:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2045:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2046:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2047:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2048:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2049:/usr/include/c++/5/bits/basic_string.h ****        *
2050:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2051:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2052:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2053:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2054:/usr/include/c++/5/bits/basic_string.h ****       */
2055:/usr/include/c++/5/bits/basic_string.h ****       size_type
2056:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
2057:/usr/include/c++/5/bits/basic_string.h **** 
2058:/usr/include/c++/5/bits/basic_string.h ****       /**
2059:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2060:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2061:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2062:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2063:/usr/include/c++/5/bits/basic_string.h ****        *
2064:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2065:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2066:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2067:/usr/include/c++/5/bits/basic_string.h ****       */
2068:/usr/include/c++/5/bits/basic_string.h ****       size_type
2069:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2070:/usr/include/c++/5/bits/basic_string.h ****       {
2071:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2072:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2073:/usr/include/c++/5/bits/basic_string.h ****       }
2074:/usr/include/c++/5/bits/basic_string.h **** 
2075:/usr/include/c++/5/bits/basic_string.h ****       /**
2076:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
2077:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2078:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2079:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2080:/usr/include/c++/5/bits/basic_string.h ****        *
2081:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2082:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2083:/usr/include/c++/5/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2084:/usr/include/c++/5/bits/basic_string.h ****        *
2085:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2086:/usr/include/c++/5/bits/basic_string.h ****       */
2087:/usr/include/c++/5/bits/basic_string.h ****       size_type
2088:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2089:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__c, __pos); }
2090:/usr/include/c++/5/bits/basic_string.h **** 
2091:/usr/include/c++/5/bits/basic_string.h ****       /**
2092:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2093:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2094:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2095:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2096:/usr/include/c++/5/bits/basic_string.h ****        *
2097:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2098:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2099:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2100:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2101:/usr/include/c++/5/bits/basic_string.h ****       */
2102:/usr/include/c++/5/bits/basic_string.h ****       size_type
2103:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2104:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2105:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2106:/usr/include/c++/5/bits/basic_string.h **** 
2107:/usr/include/c++/5/bits/basic_string.h ****       /**
2108:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2109:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2110:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2111:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2112:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2113:/usr/include/c++/5/bits/basic_string.h ****        *
2114:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2115:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2116:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2117:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2118:/usr/include/c++/5/bits/basic_string.h ****       */
2119:/usr/include/c++/5/bits/basic_string.h ****       size_type
2120:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2121:/usr/include/c++/5/bits/basic_string.h **** 
2122:/usr/include/c++/5/bits/basic_string.h ****       /**
2123:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2124:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2125:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2126:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2127:/usr/include/c++/5/bits/basic_string.h ****        *
2128:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2129:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2130:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2131:/usr/include/c++/5/bits/basic_string.h ****       */
2132:/usr/include/c++/5/bits/basic_string.h ****       size_type
2133:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2134:/usr/include/c++/5/bits/basic_string.h ****       {
2135:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2136:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2137:/usr/include/c++/5/bits/basic_string.h ****       }
2138:/usr/include/c++/5/bits/basic_string.h **** 
2139:/usr/include/c++/5/bits/basic_string.h ****       /**
2140:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
2141:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2142:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2143:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2144:/usr/include/c++/5/bits/basic_string.h ****        *
2145:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2146:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2147:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2148:/usr/include/c++/5/bits/basic_string.h ****        *
2149:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2150:/usr/include/c++/5/bits/basic_string.h ****       */
2151:/usr/include/c++/5/bits/basic_string.h ****       size_type
2152:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2153:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2154:/usr/include/c++/5/bits/basic_string.h **** 
2155:/usr/include/c++/5/bits/basic_string.h ****       /**
2156:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2157:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2158:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2159:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2160:/usr/include/c++/5/bits/basic_string.h ****        *
2161:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2162:/usr/include/c++/5/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2163:/usr/include/c++/5/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2164:/usr/include/c++/5/bits/basic_string.h ****       */
2165:/usr/include/c++/5/bits/basic_string.h ****       size_type
2166:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2167:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2168:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2169:/usr/include/c++/5/bits/basic_string.h **** 
2170:/usr/include/c++/5/bits/basic_string.h ****       /**
2171:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2172:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2173:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2174:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2175:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2176:/usr/include/c++/5/bits/basic_string.h ****        *
2177:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2178:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2179:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2180:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2181:/usr/include/c++/5/bits/basic_string.h ****       */
2182:/usr/include/c++/5/bits/basic_string.h ****       size_type
2183:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2184:/usr/include/c++/5/bits/basic_string.h **** 			size_type __n) const;
2185:/usr/include/c++/5/bits/basic_string.h **** 
2186:/usr/include/c++/5/bits/basic_string.h ****       /**
2187:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2188:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2189:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2190:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2191:/usr/include/c++/5/bits/basic_string.h ****        *
2192:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2193:/usr/include/c++/5/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2194:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2195:/usr/include/c++/5/bits/basic_string.h ****       */
2196:/usr/include/c++/5/bits/basic_string.h ****       size_type
2197:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2198:/usr/include/c++/5/bits/basic_string.h ****       {
2199:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2200:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2201:/usr/include/c++/5/bits/basic_string.h ****       }
2202:/usr/include/c++/5/bits/basic_string.h **** 
2203:/usr/include/c++/5/bits/basic_string.h ****       /**
2204:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a different character.
2205:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
2206:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2207:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2208:/usr/include/c++/5/bits/basic_string.h ****        *
2209:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2210:/usr/include/c++/5/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2211:/usr/include/c++/5/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2212:/usr/include/c++/5/bits/basic_string.h ****       */
2213:/usr/include/c++/5/bits/basic_string.h ****       size_type
2214:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2215:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2216:/usr/include/c++/5/bits/basic_string.h **** 
2217:/usr/include/c++/5/bits/basic_string.h ****       /**
2218:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2219:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2220:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2221:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2222:/usr/include/c++/5/bits/basic_string.h ****        *
2223:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2224:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2225:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2226:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2227:/usr/include/c++/5/bits/basic_string.h ****       */
2228:/usr/include/c++/5/bits/basic_string.h ****       size_type
2229:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2230:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2231:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2232:/usr/include/c++/5/bits/basic_string.h **** 
2233:/usr/include/c++/5/bits/basic_string.h ****       /**
2234:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2235:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2236:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2237:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2238:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2239:/usr/include/c++/5/bits/basic_string.h ****        *
2240:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2241:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2242:/usr/include/c++/5/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2243:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2244:/usr/include/c++/5/bits/basic_string.h ****       */
2245:/usr/include/c++/5/bits/basic_string.h ****       size_type
2246:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2247:/usr/include/c++/5/bits/basic_string.h **** 		       size_type __n) const;
2248:/usr/include/c++/5/bits/basic_string.h ****       /**
2249:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2250:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2251:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2252:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2253:/usr/include/c++/5/bits/basic_string.h ****        *
2254:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2255:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2256:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2257:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2258:/usr/include/c++/5/bits/basic_string.h ****       */
2259:/usr/include/c++/5/bits/basic_string.h ****       size_type
2260:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2261:/usr/include/c++/5/bits/basic_string.h ****       {
2262:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2263:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2264:/usr/include/c++/5/bits/basic_string.h ****       }
2265:/usr/include/c++/5/bits/basic_string.h **** 
2266:/usr/include/c++/5/bits/basic_string.h ****       /**
2267:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2268:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
2269:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2270:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2271:/usr/include/c++/5/bits/basic_string.h ****        *
2272:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2273:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2274:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2275:/usr/include/c++/5/bits/basic_string.h ****       */
2276:/usr/include/c++/5/bits/basic_string.h ****       size_type
2277:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2278:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2279:/usr/include/c++/5/bits/basic_string.h **** 
2280:/usr/include/c++/5/bits/basic_string.h ****       /**
2281:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Get a substring.
2282:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2283:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2284:/usr/include/c++/5/bits/basic_string.h ****        *  @return  The new string.
2285:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2286:/usr/include/c++/5/bits/basic_string.h ****        *
2287:/usr/include/c++/5/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2288:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2289:/usr/include/c++/5/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2290:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2291:/usr/include/c++/5/bits/basic_string.h ****       */
2292:/usr/include/c++/5/bits/basic_string.h ****       basic_string
2293:/usr/include/c++/5/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2294:/usr/include/c++/5/bits/basic_string.h ****       { return basic_string(*this,
2295:/usr/include/c++/5/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2296:/usr/include/c++/5/bits/basic_string.h **** 
2297:/usr/include/c++/5/bits/basic_string.h ****       /**
2298:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a string.
2299:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2300:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2301:/usr/include/c++/5/bits/basic_string.h ****        *
2302:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2303:/usr/include/c++/5/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2304:/usr/include/c++/5/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2305:/usr/include/c++/5/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2306:/usr/include/c++/5/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2307:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2308:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2309:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2310:/usr/include/c++/5/bits/basic_string.h ****       */
2311:/usr/include/c++/5/bits/basic_string.h ****       int
2312:/usr/include/c++/5/bits/basic_string.h ****       compare(const basic_string& __str) const
2313:/usr/include/c++/5/bits/basic_string.h ****       {
2314:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
2315:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __osize = __str.size();
2316:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2317:/usr/include/c++/5/bits/basic_string.h **** 
2318:/usr/include/c++/5/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2319:/usr/include/c++/5/bits/basic_string.h **** 	if (!__r)
2320:/usr/include/c++/5/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2321:/usr/include/c++/5/bits/basic_string.h **** 	return __r;
2322:/usr/include/c++/5/bits/basic_string.h ****       }
2323:/usr/include/c++/5/bits/basic_string.h **** 
2324:/usr/include/c++/5/bits/basic_string.h ****       /**
2325:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2326:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2327:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2328:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2329:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2330:/usr/include/c++/5/bits/basic_string.h ****        *
2331:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2332:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2333:/usr/include/c++/5/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2334:/usr/include/c++/5/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2335:/usr/include/c++/5/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2336:/usr/include/c++/5/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2337:/usr/include/c++/5/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2338:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling
2339:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2340:/usr/include/c++/5/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2341:/usr/include/c++/5/bits/basic_string.h ****        *  the shorter one is ordered first.
2342:/usr/include/c++/5/bits/basic_string.h ****       */
2343:/usr/include/c++/5/bits/basic_string.h ****       int
2344:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2345:/usr/include/c++/5/bits/basic_string.h **** 
2346:/usr/include/c++/5/bits/basic_string.h ****       /**
2347:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2348:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2349:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2350:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2351:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2352:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2353:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2354:/usr/include/c++/5/bits/basic_string.h ****        *
2355:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2356:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2357:/usr/include/c++/5/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2358:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2359:/usr/include/c++/5/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2360:/usr/include/c++/5/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2361:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2362:/usr/include/c++/5/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2363:/usr/include/c++/5/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2364:/usr/include/c++/5/bits/basic_string.h ****        *  calling
2365:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2366:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2367:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2368:/usr/include/c++/5/bits/basic_string.h ****       */
2369:/usr/include/c++/5/bits/basic_string.h ****       int
2370:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2371:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2372:/usr/include/c++/5/bits/basic_string.h **** 
2373:/usr/include/c++/5/bits/basic_string.h ****       /**
2374:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a C string.
2375:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
2376:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2377:/usr/include/c++/5/bits/basic_string.h ****        *
2378:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2379:/usr/include/c++/5/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2380:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2381:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2382:/usr/include/c++/5/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2383:/usr/include/c++/5/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2384:/usr/include/c++/5/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2385:/usr/include/c++/5/bits/basic_string.h ****        *  ordered first.
2386:/usr/include/c++/5/bits/basic_string.h ****       */
2387:/usr/include/c++/5/bits/basic_string.h ****       int
2388:/usr/include/c++/5/bits/basic_string.h ****       compare(const _CharT* __s) const;
2389:/usr/include/c++/5/bits/basic_string.h **** 
2390:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2391:/usr/include/c++/5/bits/basic_string.h ****       // 5 String::compare specification questionable
2392:/usr/include/c++/5/bits/basic_string.h ****       /**
2393:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2394:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2395:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2396:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
2397:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2398:/usr/include/c++/5/bits/basic_string.h ****        *
2399:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2400:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2401:/usr/include/c++/5/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2402:/usr/include/c++/5/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2403:/usr/include/c++/5/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2404:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2405:/usr/include/c++/5/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2406:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two string by calling
2407:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2408:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2409:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
2410:/usr/include/c++/5/bits/basic_string.h ****       */
2411:/usr/include/c++/5/bits/basic_string.h ****       int
2412:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2413:/usr/include/c++/5/bits/basic_string.h **** 
2414:/usr/include/c++/5/bits/basic_string.h ****       /**
2415:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2416:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2417:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2418:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2419:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2420:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2421:/usr/include/c++/5/bits/basic_string.h ****        *
2422:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2423:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2424:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2425:/usr/include/c++/5/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2426:/usr/include/c++/5/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2427:/usr/include/c++/5/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2428:/usr/include/c++/5/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
2429:/usr/include/c++/5/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2430:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two strings by calling
2431:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2432:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2433:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
2434:/usr/include/c++/5/bits/basic_string.h ****        *
2435:/usr/include/c++/5/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2436:/usr/include/c++/5/bits/basic_string.h ****        *  no special meaning.
2437:/usr/include/c++/5/bits/basic_string.h ****       */
2438:/usr/include/c++/5/bits/basic_string.h ****       int
2439:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2440:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2) const;
2441:/usr/include/c++/5/bits/basic_string.h ****   };
2442:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
2443:/usr/include/c++/5/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
2444:/usr/include/c++/5/bits/basic_string.h ****   // Reference-counted COW string implentation
2445:/usr/include/c++/5/bits/basic_string.h **** 
2446:/usr/include/c++/5/bits/basic_string.h ****   /**
2447:/usr/include/c++/5/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
2448:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
2449:/usr/include/c++/5/bits/basic_string.h ****    *
2450:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup strings
2451:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup sequences
2452:/usr/include/c++/5/bits/basic_string.h ****    *
2453:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _CharT  Type of character
2454:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
2455:/usr/include/c++/5/bits/basic_string.h ****    *                   char_traits<_CharT>.
2456:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
2457:/usr/include/c++/5/bits/basic_string.h ****    *
2458:/usr/include/c++/5/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
2459:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
2460:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
2461:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
2462:/usr/include/c++/5/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
2463:/usr/include/c++/5/bits/basic_string.h ****    *
2464:/usr/include/c++/5/bits/basic_string.h ****    *  @doctodo
2465:/usr/include/c++/5/bits/basic_string.h ****    *
2466:/usr/include/c++/5/bits/basic_string.h ****    *
2467:/usr/include/c++/5/bits/basic_string.h ****    *  Documentation?  What's that?
2468:/usr/include/c++/5/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
2469:/usr/include/c++/5/bits/basic_string.h ****    *
2470:/usr/include/c++/5/bits/basic_string.h ****    *  A string looks like this:
2471:/usr/include/c++/5/bits/basic_string.h ****    *
2472:/usr/include/c++/5/bits/basic_string.h ****    *  @code
2473:/usr/include/c++/5/bits/basic_string.h ****    *                                        [_Rep]
2474:/usr/include/c++/5/bits/basic_string.h ****    *                                        _M_length
2475:/usr/include/c++/5/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
2476:/usr/include/c++/5/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
2477:/usr/include/c++/5/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
2478:/usr/include/c++/5/bits/basic_string.h ****    *  @endcode
2479:/usr/include/c++/5/bits/basic_string.h ****    *
2480:/usr/include/c++/5/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
2481:/usr/include/c++/5/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
2482:/usr/include/c++/5/bits/basic_string.h ****    *  pointer to the header.
2483:/usr/include/c++/5/bits/basic_string.h ****    *
2484:/usr/include/c++/5/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
2485:/usr/include/c++/5/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
2486:/usr/include/c++/5/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
2487:/usr/include/c++/5/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
2488:/usr/include/c++/5/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
2489:/usr/include/c++/5/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
2490:/usr/include/c++/5/bits/basic_string.h ****    *  object at the front.
2491:/usr/include/c++/5/bits/basic_string.h ****    *
2492:/usr/include/c++/5/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
2493:/usr/include/c++/5/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
2494:/usr/include/c++/5/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
2495:/usr/include/c++/5/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
2496:/usr/include/c++/5/bits/basic_string.h ****    *  string length.)
2497:/usr/include/c++/5/bits/basic_string.h ****    *
2498:/usr/include/c++/5/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
2499:/usr/include/c++/5/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
2500:/usr/include/c++/5/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
2501:/usr/include/c++/5/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
2502:/usr/include/c++/5/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
2503:/usr/include/c++/5/bits/basic_string.h ****    *
2504:/usr/include/c++/5/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
2505:/usr/include/c++/5/bits/basic_string.h ****    *  for a C++ string implementation.
2506:/usr/include/c++/5/bits/basic_string.h ****   */
2507:/usr/include/c++/5/bits/basic_string.h ****   // 21.3  Template class basic_string
2508:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2509:/usr/include/c++/5/bits/basic_string.h ****     class basic_string
2510:/usr/include/c++/5/bits/basic_string.h ****     {
2511:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
2512:/usr/include/c++/5/bits/basic_string.h **** 
2513:/usr/include/c++/5/bits/basic_string.h ****       // Types:
2514:/usr/include/c++/5/bits/basic_string.h ****     public:
2515:/usr/include/c++/5/bits/basic_string.h ****       typedef _Traits					    traits_type;
2516:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
2517:/usr/include/c++/5/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
2518:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
2519:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
2520:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
2521:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
2522:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
2523:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
2524:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
2525:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
2526:/usr/include/c++/5/bits/basic_string.h ****                                                             const_iterator;
2527:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
2528:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
2529:/usr/include/c++/5/bits/basic_string.h **** 
2530:/usr/include/c++/5/bits/basic_string.h ****     private:
2531:/usr/include/c++/5/bits/basic_string.h ****       // _Rep: string representation
2532:/usr/include/c++/5/bits/basic_string.h ****       //   Invariants:
2533:/usr/include/c++/5/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
2534:/usr/include/c++/5/bits/basic_string.h ****       //      must be kept null-terminated.
2535:/usr/include/c++/5/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
2536:/usr/include/c++/5/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
2537:/usr/include/c++/5/bits/basic_string.h ****       //   3. _M_refcount has three states:
2538:/usr/include/c++/5/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
2539:/usr/include/c++/5/bits/basic_string.h ****       //       0: one reference, non-const.
2540:/usr/include/c++/5/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
2541:/usr/include/c++/5/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
2542:/usr/include/c++/5/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
2543:/usr/include/c++/5/bits/basic_string.h ****       //      empty string representation needs no constructor.
2544:/usr/include/c++/5/bits/basic_string.h **** 
2545:/usr/include/c++/5/bits/basic_string.h ****       struct _Rep_base
2546:/usr/include/c++/5/bits/basic_string.h ****       {
2547:/usr/include/c++/5/bits/basic_string.h **** 	size_type		_M_length;
2548:/usr/include/c++/5/bits/basic_string.h **** 	size_type		_M_capacity;
2549:/usr/include/c++/5/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
2550:/usr/include/c++/5/bits/basic_string.h ****       };
2551:/usr/include/c++/5/bits/basic_string.h **** 
2552:/usr/include/c++/5/bits/basic_string.h ****       struct _Rep : _Rep_base
2553:/usr/include/c++/5/bits/basic_string.h ****       {
2554:/usr/include/c++/5/bits/basic_string.h **** 	// Types:
2555:/usr/include/c++/5/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
2556:/usr/include/c++/5/bits/basic_string.h **** 
2557:/usr/include/c++/5/bits/basic_string.h **** 	// (Public) Data members:
2558:/usr/include/c++/5/bits/basic_string.h **** 
2559:/usr/include/c++/5/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
2560:/usr/include/c++/5/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
2561:/usr/include/c++/5/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
2562:/usr/include/c++/5/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
2563:/usr/include/c++/5/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
2564:/usr/include/c++/5/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
2565:/usr/include/c++/5/bits/basic_string.h **** 	// look like this:
2566:/usr/include/c++/5/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
2567:/usr/include/c++/5/bits/basic_string.h **** 	// Solving for m:
2568:/usr/include/c++/5/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
2569:/usr/include/c++/5/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
2570:/usr/include/c++/5/bits/basic_string.h **** 	static const size_type	_S_max_size;
2571:/usr/include/c++/5/bits/basic_string.h **** 	static const _CharT	_S_terminal;
2572:/usr/include/c++/5/bits/basic_string.h **** 
2573:/usr/include/c++/5/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
2574:/usr/include/c++/5/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
2575:/usr/include/c++/5/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
2576:/usr/include/c++/5/bits/basic_string.h **** 
2577:/usr/include/c++/5/bits/basic_string.h ****         static _Rep&
2578:/usr/include/c++/5/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
2579:/usr/include/c++/5/bits/basic_string.h ****         { 
2580:/usr/include/c++/5/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
2581:/usr/include/c++/5/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
2582:/usr/include/c++/5/bits/basic_string.h **** 	  // be reasonably safe in this case.
2583:/usr/include/c++/5/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
2584:/usr/include/c++/5/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
2585:/usr/include/c++/5/bits/basic_string.h **** 	}
2586:/usr/include/c++/5/bits/basic_string.h **** 
2587:/usr/include/c++/5/bits/basic_string.h ****         bool
2588:/usr/include/c++/5/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
2589:/usr/include/c++/5/bits/basic_string.h ****         { return this->_M_refcount < 0; }
2590:/usr/include/c++/5/bits/basic_string.h **** 
2591:/usr/include/c++/5/bits/basic_string.h ****         bool
2592:/usr/include/c++/5/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
2593:/usr/include/c++/5/bits/basic_string.h ****         { return this->_M_refcount > 0; }
2594:/usr/include/c++/5/bits/basic_string.h **** 
2595:/usr/include/c++/5/bits/basic_string.h ****         void
2596:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
2597:/usr/include/c++/5/bits/basic_string.h ****         { this->_M_refcount = -1; }
2598:/usr/include/c++/5/bits/basic_string.h **** 
2599:/usr/include/c++/5/bits/basic_string.h ****         void
2600:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
2601:/usr/include/c++/5/bits/basic_string.h ****         { this->_M_refcount = 0; }
2602:/usr/include/c++/5/bits/basic_string.h **** 
2603:/usr/include/c++/5/bits/basic_string.h **** 	void
2604:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
2605:/usr/include/c++/5/bits/basic_string.h **** 	{
2606:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2607:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2608:/usr/include/c++/5/bits/basic_string.h **** #endif
2609:/usr/include/c++/5/bits/basic_string.h **** 	    {
2610:/usr/include/c++/5/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
2611:/usr/include/c++/5/bits/basic_string.h **** 	      this->_M_length = __n;
2612:/usr/include/c++/5/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
2613:/usr/include/c++/5/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
2614:/usr/include/c++/5/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
2615:/usr/include/c++/5/bits/basic_string.h **** 	    }
2616:/usr/include/c++/5/bits/basic_string.h **** 	}
2617:/usr/include/c++/5/bits/basic_string.h **** 
2618:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2619:/usr/include/c++/5/bits/basic_string.h **** 	_M_refdata() throw()
2620:/usr/include/c++/5/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
2621:/usr/include/c++/5/bits/basic_string.h **** 
2622:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2623:/usr/include/c++/5/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
2624:/usr/include/c++/5/bits/basic_string.h **** 	{
2625:/usr/include/c++/5/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
2626:/usr/include/c++/5/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
2627:/usr/include/c++/5/bits/basic_string.h **** 	}
2628:/usr/include/c++/5/bits/basic_string.h **** 
2629:/usr/include/c++/5/bits/basic_string.h **** 	// Create & Destroy
2630:/usr/include/c++/5/bits/basic_string.h **** 	static _Rep*
2631:/usr/include/c++/5/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
2632:/usr/include/c++/5/bits/basic_string.h **** 
2633:/usr/include/c++/5/bits/basic_string.h **** 	void
2634:/usr/include/c++/5/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
2635:/usr/include/c++/5/bits/basic_string.h **** 	{
2636:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2637:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2638:/usr/include/c++/5/bits/basic_string.h **** #endif
2639:/usr/include/c++/5/bits/basic_string.h **** 	    {
2640:/usr/include/c++/5/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
2641:/usr/include/c++/5/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
2642:/usr/include/c++/5/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
2643:/usr/include/c++/5/bits/basic_string.h **** 							 -1) <= 0)
2644:/usr/include/c++/5/bits/basic_string.h **** 		{
2645:/usr/include/c++/5/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
2646:/usr/include/c++/5/bits/basic_string.h **** 		  _M_destroy(__a);
2647:/usr/include/c++/5/bits/basic_string.h **** 		}
2648:/usr/include/c++/5/bits/basic_string.h **** 	    }
2649:/usr/include/c++/5/bits/basic_string.h **** 	}  // XXX MT
2650:/usr/include/c++/5/bits/basic_string.h **** 
2651:/usr/include/c++/5/bits/basic_string.h **** 	void
2652:/usr/include/c++/5/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
2653:/usr/include/c++/5/bits/basic_string.h **** 
2654:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2655:/usr/include/c++/5/bits/basic_string.h **** 	_M_refcopy() throw()
2656:/usr/include/c++/5/bits/basic_string.h **** 	{
2657:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2658:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2659:/usr/include/c++/5/bits/basic_string.h **** #endif
2660:/usr/include/c++/5/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
2661:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_refdata();
2662:/usr/include/c++/5/bits/basic_string.h **** 	}  // XXX MT
2663:/usr/include/c++/5/bits/basic_string.h **** 
2664:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2665:/usr/include/c++/5/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
2666:/usr/include/c++/5/bits/basic_string.h ****       };
2667:/usr/include/c++/5/bits/basic_string.h **** 
2668:/usr/include/c++/5/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
2669:/usr/include/c++/5/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
2670:/usr/include/c++/5/bits/basic_string.h ****       {
2671:/usr/include/c++/5/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
2672:/usr/include/c++/5/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
2673:/usr/include/c++/5/bits/basic_string.h **** 
2674:/usr/include/c++/5/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
2675:/usr/include/c++/5/bits/basic_string.h ****       };
2676:/usr/include/c++/5/bits/basic_string.h **** 
2677:/usr/include/c++/5/bits/basic_string.h ****     public:
2678:/usr/include/c++/5/bits/basic_string.h ****       // Data Members (public):
2679:/usr/include/c++/5/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
2680:/usr/include/c++/5/bits/basic_string.h ****       // size that the allocator can hold.
2681:/usr/include/c++/5/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
2682:/usr/include/c++/5/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
2683:/usr/include/c++/5/bits/basic_string.h **** 
2684:/usr/include/c++/5/bits/basic_string.h ****     private:
2685:/usr/include/c++/5/bits/basic_string.h ****       // Data Members (private):
2686:/usr/include/c++/5/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
2687:/usr/include/c++/5/bits/basic_string.h **** 
2688:/usr/include/c++/5/bits/basic_string.h ****       _CharT*
2689:/usr/include/c++/5/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
2690:/usr/include/c++/5/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
2691:/usr/include/c++/5/bits/basic_string.h **** 
2692:/usr/include/c++/5/bits/basic_string.h ****       _CharT*
2693:/usr/include/c++/5/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
2694:/usr/include/c++/5/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
2695:/usr/include/c++/5/bits/basic_string.h **** 
2696:/usr/include/c++/5/bits/basic_string.h ****       _Rep*
2697:/usr/include/c++/5/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
2698:/usr/include/c++/5/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
2699:/usr/include/c++/5/bits/basic_string.h **** 
2700:/usr/include/c++/5/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
2701:/usr/include/c++/5/bits/basic_string.h ****       // but they do not call _M_leak.
2702:/usr/include/c++/5/bits/basic_string.h ****       iterator
2703:/usr/include/c++/5/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
2704:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data()); }
2705:/usr/include/c++/5/bits/basic_string.h **** 
2706:/usr/include/c++/5/bits/basic_string.h ****       iterator
2707:/usr/include/c++/5/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
2708:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
2709:/usr/include/c++/5/bits/basic_string.h **** 
2710:/usr/include/c++/5/bits/basic_string.h ****       void
2711:/usr/include/c++/5/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
2712:/usr/include/c++/5/bits/basic_string.h ****       {
2713:/usr/include/c++/5/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
2714:/usr/include/c++/5/bits/basic_string.h **** 	  _M_leak_hard();
2715:/usr/include/c++/5/bits/basic_string.h ****       }
2716:/usr/include/c++/5/bits/basic_string.h **** 
2717:/usr/include/c++/5/bits/basic_string.h ****       size_type
2718:/usr/include/c++/5/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
2719:/usr/include/c++/5/bits/basic_string.h ****       {
2720:/usr/include/c++/5/bits/basic_string.h **** 	if (__pos > this->size())
2721:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
2722:/usr/include/c++/5/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
2723:/usr/include/c++/5/bits/basic_string.h **** 				   __s, __pos, this->size());
2724:/usr/include/c++/5/bits/basic_string.h **** 	return __pos;
2725:/usr/include/c++/5/bits/basic_string.h ****       }
2726:/usr/include/c++/5/bits/basic_string.h **** 
2727:/usr/include/c++/5/bits/basic_string.h ****       void
2728:/usr/include/c++/5/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
2729:/usr/include/c++/5/bits/basic_string.h ****       {
2730:/usr/include/c++/5/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
2731:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
2732:/usr/include/c++/5/bits/basic_string.h ****       }
2733:/usr/include/c++/5/bits/basic_string.h **** 
2734:/usr/include/c++/5/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
2735:/usr/include/c++/5/bits/basic_string.h ****       size_type
2736:/usr/include/c++/5/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
2737:/usr/include/c++/5/bits/basic_string.h ****       {
2738:/usr/include/c++/5/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
2739:/usr/include/c++/5/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
2740:/usr/include/c++/5/bits/basic_string.h ****       }
2741:/usr/include/c++/5/bits/basic_string.h **** 
2742:/usr/include/c++/5/bits/basic_string.h ****       // True if _Rep and source do not overlap.
2743:/usr/include/c++/5/bits/basic_string.h ****       bool
2744:/usr/include/c++/5/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
2745:/usr/include/c++/5/bits/basic_string.h ****       {
2746:/usr/include/c++/5/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
2747:/usr/include/c++/5/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
2748:/usr/include/c++/5/bits/basic_string.h ****       }
2749:/usr/include/c++/5/bits/basic_string.h **** 
2750:/usr/include/c++/5/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
2751:/usr/include/c++/5/bits/basic_string.h ****       // traits_type::copy/move/assign.
2752:/usr/include/c++/5/bits/basic_string.h ****       static void
2753:/usr/include/c++/5/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2754:/usr/include/c++/5/bits/basic_string.h ****       {
2755:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2756:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
2757:/usr/include/c++/5/bits/basic_string.h **** 	else
2758:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
2759:/usr/include/c++/5/bits/basic_string.h ****       }
2760:/usr/include/c++/5/bits/basic_string.h **** 
2761:/usr/include/c++/5/bits/basic_string.h ****       static void
2762:/usr/include/c++/5/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2763:/usr/include/c++/5/bits/basic_string.h ****       {
2764:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2765:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
2766:/usr/include/c++/5/bits/basic_string.h **** 	else
2767:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
2768:/usr/include/c++/5/bits/basic_string.h ****       }
2769:/usr/include/c++/5/bits/basic_string.h **** 
2770:/usr/include/c++/5/bits/basic_string.h ****       static void
2771:/usr/include/c++/5/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
2772:/usr/include/c++/5/bits/basic_string.h ****       {
2773:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2774:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
2775:/usr/include/c++/5/bits/basic_string.h **** 	else
2776:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
2777:/usr/include/c++/5/bits/basic_string.h ****       }
2778:/usr/include/c++/5/bits/basic_string.h **** 
2779:/usr/include/c++/5/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
2780:/usr/include/c++/5/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
2781:/usr/include/c++/5/bits/basic_string.h ****       template<class _Iterator>
2782:/usr/include/c++/5/bits/basic_string.h ****         static void
2783:/usr/include/c++/5/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
2784:/usr/include/c++/5/bits/basic_string.h ****         {
2785:/usr/include/c++/5/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
2786:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
2787:/usr/include/c++/5/bits/basic_string.h **** 	}
2788:/usr/include/c++/5/bits/basic_string.h **** 
2789:/usr/include/c++/5/bits/basic_string.h ****       static void
2790:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
2791:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2792:/usr/include/c++/5/bits/basic_string.h **** 
2793:/usr/include/c++/5/bits/basic_string.h ****       static void
2794:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
2795:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2796:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2797:/usr/include/c++/5/bits/basic_string.h **** 
2798:/usr/include/c++/5/bits/basic_string.h ****       static void
2799:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
2800:/usr/include/c++/5/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2801:/usr/include/c++/5/bits/basic_string.h **** 
2802:/usr/include/c++/5/bits/basic_string.h ****       static void
2803:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
2804:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2805:/usr/include/c++/5/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2806:/usr/include/c++/5/bits/basic_string.h **** 
2807:/usr/include/c++/5/bits/basic_string.h ****       static int
2808:/usr/include/c++/5/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
2809:/usr/include/c++/5/bits/basic_string.h ****       {
2810:/usr/include/c++/5/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
2811:/usr/include/c++/5/bits/basic_string.h **** 
2812:/usr/include/c++/5/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
2813:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
2814:/usr/include/c++/5/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
2815:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
2816:/usr/include/c++/5/bits/basic_string.h **** 	else
2817:/usr/include/c++/5/bits/basic_string.h **** 	  return int(__d);
2818:/usr/include/c++/5/bits/basic_string.h ****       }
2819:/usr/include/c++/5/bits/basic_string.h **** 
2820:/usr/include/c++/5/bits/basic_string.h ****       void
2821:/usr/include/c++/5/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
2822:/usr/include/c++/5/bits/basic_string.h **** 
2823:/usr/include/c++/5/bits/basic_string.h ****       void
2824:/usr/include/c++/5/bits/basic_string.h ****       _M_leak_hard();
2825:/usr/include/c++/5/bits/basic_string.h **** 
2826:/usr/include/c++/5/bits/basic_string.h ****       static _Rep&
2827:/usr/include/c++/5/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
2828:/usr/include/c++/5/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
2829:/usr/include/c++/5/bits/basic_string.h **** 
2830:/usr/include/c++/5/bits/basic_string.h ****     public:
2831:/usr/include/c++/5/bits/basic_string.h ****       // Construct/copy/destroy:
2832:/usr/include/c++/5/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
2833:/usr/include/c++/5/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
2834:/usr/include/c++/5/bits/basic_string.h **** 
2835:/usr/include/c++/5/bits/basic_string.h ****       /**
2836:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
2837:/usr/include/c++/5/bits/basic_string.h ****        */
2838:/usr/include/c++/5/bits/basic_string.h ****       basic_string()
2839:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2840:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
2841:/usr/include/c++/5/bits/basic_string.h **** #else
2842:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
2843:/usr/include/c++/5/bits/basic_string.h **** #endif
2844:/usr/include/c++/5/bits/basic_string.h **** 
2845:/usr/include/c++/5/bits/basic_string.h ****       /**
2846:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
2847:/usr/include/c++/5/bits/basic_string.h ****        */
2848:/usr/include/c++/5/bits/basic_string.h ****       explicit
2849:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _Alloc& __a);
2850:/usr/include/c++/5/bits/basic_string.h **** 
2851:/usr/include/c++/5/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
2852:/usr/include/c++/5/bits/basic_string.h ****       /**
2853:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
2854:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2855:/usr/include/c++/5/bits/basic_string.h ****        */
2856:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str);
2857:/usr/include/c++/5/bits/basic_string.h ****       /**
2858:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
2859:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2860:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2861:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
2862:/usr/include/c++/5/bits/basic_string.h ****        */
2863:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2864:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n = npos);
2865:/usr/include/c++/5/bits/basic_string.h ****       /**
2866:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
2867:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2868:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2869:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
2870:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use.
2871:/usr/include/c++/5/bits/basic_string.h ****        */
2872:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2873:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
2874:/usr/include/c++/5/bits/basic_string.h **** 
2875:/usr/include/c++/5/bits/basic_string.h ****       /**
2876:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
2877:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source character %array.
2878:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
2879:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2880:/usr/include/c++/5/bits/basic_string.h ****        *
2881:/usr/include/c++/5/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
2882:/usr/include/c++/5/bits/basic_string.h ****        *  has no special meaning.
2883:/usr/include/c++/5/bits/basic_string.h ****        */
2884:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
2885:/usr/include/c++/5/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
2886:/usr/include/c++/5/bits/basic_string.h ****       /**
2887:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
2888:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source C string.
2889:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2890:/usr/include/c++/5/bits/basic_string.h ****        */
2891:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
2892:/usr/include/c++/5/bits/basic_string.h ****       /**
2893:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
2894:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters.
2895:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to use.
2896:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2897:/usr/include/c++/5/bits/basic_string.h ****        */
2898:/usr/include/c++/5/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
2899:/usr/include/c++/5/bits/basic_string.h **** 
2900:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
2901:/usr/include/c++/5/bits/basic_string.h ****       /**
2902:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move construct string.
2903:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2904:/usr/include/c++/5/bits/basic_string.h ****        *
2905:/usr/include/c++/5/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
2906:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
2907:/usr/include/c++/5/bits/basic_string.h ****        **/
2908:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str)
2909:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2910:/usr/include/c++/5/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
2911:/usr/include/c++/5/bits/basic_string.h **** #endif
2912:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
2913:/usr/include/c++/5/bits/basic_string.h ****       {
2914:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2915:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
2916:/usr/include/c++/5/bits/basic_string.h **** #else
2917:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
2918:/usr/include/c++/5/bits/basic_string.h **** #endif
2919:/usr/include/c++/5/bits/basic_string.h ****       }
2920:/usr/include/c++/5/bits/basic_string.h **** 
2921:/usr/include/c++/5/bits/basic_string.h ****       /**
2922:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
2923:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
2924:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2925:/usr/include/c++/5/bits/basic_string.h ****        */
2926:/usr/include/c++/5/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
2927:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
2928:/usr/include/c++/5/bits/basic_string.h **** 
2929:/usr/include/c++/5/bits/basic_string.h ****       /**
2930:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
2931:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __beg  Start of range.
2932:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __end  End of range.
2933:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2934:/usr/include/c++/5/bits/basic_string.h ****        */
2935:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
2936:/usr/include/c++/5/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
2937:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
2938:/usr/include/c++/5/bits/basic_string.h **** 
2939:/usr/include/c++/5/bits/basic_string.h ****       /**
2940:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Destroy the string instance.
2941:/usr/include/c++/5/bits/basic_string.h ****        */
2942:/usr/include/c++/5/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
2943:/usr/include/c++/5/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
2944:/usr/include/c++/5/bits/basic_string.h **** 
2945:/usr/include/c++/5/bits/basic_string.h ****       /**
2946:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
2947:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2948:/usr/include/c++/5/bits/basic_string.h ****        */
2949:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2950:/usr/include/c++/5/bits/basic_string.h ****       operator=(const basic_string& __str) 
2951:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str); }
2952:/usr/include/c++/5/bits/basic_string.h **** 
2953:/usr/include/c++/5/bits/basic_string.h ****       /**
2954:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
2955:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
2956:/usr/include/c++/5/bits/basic_string.h ****        */
2957:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2958:/usr/include/c++/5/bits/basic_string.h ****       operator=(const _CharT* __s) 
2959:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__s); }
2960:/usr/include/c++/5/bits/basic_string.h **** 
2961:/usr/include/c++/5/bits/basic_string.h ****       /**
2962:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
2963:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Source character.
2964:/usr/include/c++/5/bits/basic_string.h ****        *
2965:/usr/include/c++/5/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
2966:/usr/include/c++/5/bits/basic_string.h ****        *  (*this)[0] == @a c.
2967:/usr/include/c++/5/bits/basic_string.h ****        */
2968:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2969:/usr/include/c++/5/bits/basic_string.h ****       operator=(_CharT __c) 
2970:/usr/include/c++/5/bits/basic_string.h ****       { 
2971:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(1, __c); 
2972:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
2973:/usr/include/c++/5/bits/basic_string.h ****       }
2974:/usr/include/c++/5/bits/basic_string.h **** 
2975:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
2976:/usr/include/c++/5/bits/basic_string.h ****       /**
2977:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
2978:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2979:/usr/include/c++/5/bits/basic_string.h ****        *
2980:/usr/include/c++/5/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
2981:/usr/include/c++/5/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
2982:/usr/include/c++/5/bits/basic_string.h ****        **/
2983:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
2984:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2985:/usr/include/c++/5/bits/basic_string.h ****       operator=(basic_string&& __str)
2986:/usr/include/c++/5/bits/basic_string.h ****       {
2987:/usr/include/c++/5/bits/basic_string.h **** 	// NB: DR 1204.
2988:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
2989:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
2990:/usr/include/c++/5/bits/basic_string.h ****       }
2991:/usr/include/c++/5/bits/basic_string.h **** 
2992:/usr/include/c++/5/bits/basic_string.h ****       /**
2993:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
2994:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
2995:/usr/include/c++/5/bits/basic_string.h ****        */
2996:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2997:/usr/include/c++/5/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
2998:/usr/include/c++/5/bits/basic_string.h ****       {
2999:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3000:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3001:/usr/include/c++/5/bits/basic_string.h ****       }
3002:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3003:/usr/include/c++/5/bits/basic_string.h **** 
3004:/usr/include/c++/5/bits/basic_string.h ****       // Iterators:
3005:/usr/include/c++/5/bits/basic_string.h ****       /**
3006:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3007:/usr/include/c++/5/bits/basic_string.h ****        *  the %string.  Unshares the string.
3008:/usr/include/c++/5/bits/basic_string.h ****        */
3009:/usr/include/c++/5/bits/basic_string.h ****       iterator
3010:/usr/include/c++/5/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3011:/usr/include/c++/5/bits/basic_string.h ****       {
3012:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3013:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data());
3014:/usr/include/c++/5/bits/basic_string.h ****       }
3015:/usr/include/c++/5/bits/basic_string.h **** 
3016:/usr/include/c++/5/bits/basic_string.h ****       /**
3017:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3018:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
3019:/usr/include/c++/5/bits/basic_string.h ****        */
3020:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3021:/usr/include/c++/5/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3022:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3023:/usr/include/c++/5/bits/basic_string.h **** 
3024:/usr/include/c++/5/bits/basic_string.h ****       /**
3025:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3026:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3027:/usr/include/c++/5/bits/basic_string.h ****        */
3028:/usr/include/c++/5/bits/basic_string.h ****       iterator
3029:/usr/include/c++/5/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3030:/usr/include/c++/5/bits/basic_string.h ****       {
3031:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3032:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3033:/usr/include/c++/5/bits/basic_string.h ****       }
3034:/usr/include/c++/5/bits/basic_string.h **** 
3035:/usr/include/c++/5/bits/basic_string.h ****       /**
3036:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3037:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
3038:/usr/include/c++/5/bits/basic_string.h ****        */
3039:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3040:/usr/include/c++/5/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3041:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3042:/usr/include/c++/5/bits/basic_string.h **** 
3043:/usr/include/c++/5/bits/basic_string.h ****       /**
3044:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3045:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3046:/usr/include/c++/5/bits/basic_string.h ****        *  order.  Unshares the string.
3047:/usr/include/c++/5/bits/basic_string.h ****        */
3048:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
3049:/usr/include/c++/5/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3050:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3051:/usr/include/c++/5/bits/basic_string.h **** 
3052:/usr/include/c++/5/bits/basic_string.h ****       /**
3053:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3054:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3055:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
3056:/usr/include/c++/5/bits/basic_string.h ****        */
3057:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3058:/usr/include/c++/5/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3059:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3060:/usr/include/c++/5/bits/basic_string.h **** 
3061:/usr/include/c++/5/bits/basic_string.h ****       /**
3062:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3063:/usr/include/c++/5/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3064:/usr/include/c++/5/bits/basic_string.h ****        *  element order.  Unshares the string.
3065:/usr/include/c++/5/bits/basic_string.h ****        */
3066:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
3067:/usr/include/c++/5/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3068:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3069:/usr/include/c++/5/bits/basic_string.h **** 
3070:/usr/include/c++/5/bits/basic_string.h ****       /**
3071:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3072:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3073:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
3074:/usr/include/c++/5/bits/basic_string.h ****        */
3075:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3076:/usr/include/c++/5/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3077:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3078:/usr/include/c++/5/bits/basic_string.h **** 
3079:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3080:/usr/include/c++/5/bits/basic_string.h ****       /**
3081:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3082:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
3083:/usr/include/c++/5/bits/basic_string.h ****        */
3084:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3085:/usr/include/c++/5/bits/basic_string.h ****       cbegin() const noexcept
3086:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3087:/usr/include/c++/5/bits/basic_string.h **** 
3088:/usr/include/c++/5/bits/basic_string.h ****       /**
3089:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3090:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
3091:/usr/include/c++/5/bits/basic_string.h ****        */
3092:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3093:/usr/include/c++/5/bits/basic_string.h ****       cend() const noexcept
3094:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3095:/usr/include/c++/5/bits/basic_string.h **** 
3096:/usr/include/c++/5/bits/basic_string.h ****       /**
3097:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3098:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3099:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
3100:/usr/include/c++/5/bits/basic_string.h ****        */
3101:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3102:/usr/include/c++/5/bits/basic_string.h ****       crbegin() const noexcept
3103:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3104:/usr/include/c++/5/bits/basic_string.h **** 
3105:/usr/include/c++/5/bits/basic_string.h ****       /**
3106:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3107:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3108:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
3109:/usr/include/c++/5/bits/basic_string.h ****        */
3110:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3111:/usr/include/c++/5/bits/basic_string.h ****       crend() const noexcept
3112:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3113:/usr/include/c++/5/bits/basic_string.h **** #endif
3114:/usr/include/c++/5/bits/basic_string.h **** 
3115:/usr/include/c++/5/bits/basic_string.h ****     public:
3116:/usr/include/c++/5/bits/basic_string.h ****       // Capacity:
3117:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3118:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
3119:/usr/include/c++/5/bits/basic_string.h ****       size_type
3120:/usr/include/c++/5/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3121:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3122:/usr/include/c++/5/bits/basic_string.h **** 
3123:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3124:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
3125:/usr/include/c++/5/bits/basic_string.h ****       size_type
3126:/usr/include/c++/5/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3127:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3128:/usr/include/c++/5/bits/basic_string.h **** 
3129:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3130:/usr/include/c++/5/bits/basic_string.h ****       size_type
3131:/usr/include/c++/5/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3132:/usr/include/c++/5/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3133:/usr/include/c++/5/bits/basic_string.h **** 
3134:/usr/include/c++/5/bits/basic_string.h ****       /**
3135:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3136:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3137:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3138:/usr/include/c++/5/bits/basic_string.h ****        *
3139:/usr/include/c++/5/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3140:/usr/include/c++/5/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3141:/usr/include/c++/5/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3142:/usr/include/c++/5/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3143:/usr/include/c++/5/bits/basic_string.h ****        */
3144:/usr/include/c++/5/bits/basic_string.h ****       void
3145:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3146:/usr/include/c++/5/bits/basic_string.h **** 
3147:/usr/include/c++/5/bits/basic_string.h ****       /**
3148:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3149:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3150:/usr/include/c++/5/bits/basic_string.h ****        *
3151:/usr/include/c++/5/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3152:/usr/include/c++/5/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3153:/usr/include/c++/5/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3154:/usr/include/c++/5/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3155:/usr/include/c++/5/bits/basic_string.h ****        *  setting them to 0.
3156:/usr/include/c++/5/bits/basic_string.h ****        */
3157:/usr/include/c++/5/bits/basic_string.h ****       void
3158:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n)
3159:/usr/include/c++/5/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3160:/usr/include/c++/5/bits/basic_string.h **** 
3161:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3162:/usr/include/c++/5/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3163:/usr/include/c++/5/bits/basic_string.h ****       void
3164:/usr/include/c++/5/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3165:/usr/include/c++/5/bits/basic_string.h ****       {
3166:/usr/include/c++/5/bits/basic_string.h **** #if __cpp_exceptions
3167:/usr/include/c++/5/bits/basic_string.h **** 	if (capacity() > size())
3168:/usr/include/c++/5/bits/basic_string.h **** 	  {
3169:/usr/include/c++/5/bits/basic_string.h **** 	    try
3170:/usr/include/c++/5/bits/basic_string.h **** 	      { reserve(0); }
3171:/usr/include/c++/5/bits/basic_string.h **** 	    catch(...)
3172:/usr/include/c++/5/bits/basic_string.h **** 	      { }
3173:/usr/include/c++/5/bits/basic_string.h **** 	  }
3174:/usr/include/c++/5/bits/basic_string.h **** #endif
3175:/usr/include/c++/5/bits/basic_string.h ****       }
3176:/usr/include/c++/5/bits/basic_string.h **** #endif
3177:/usr/include/c++/5/bits/basic_string.h **** 
3178:/usr/include/c++/5/bits/basic_string.h ****       /**
3179:/usr/include/c++/5/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3180:/usr/include/c++/5/bits/basic_string.h ****        *  before needing to allocate more memory.
3181:/usr/include/c++/5/bits/basic_string.h ****        */
3182:/usr/include/c++/5/bits/basic_string.h ****       size_type
3183:/usr/include/c++/5/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3184:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3185:/usr/include/c++/5/bits/basic_string.h **** 
3186:/usr/include/c++/5/bits/basic_string.h ****       /**
3187:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3188:/usr/include/c++/5/bits/basic_string.h ****        *          characters.
3189:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3190:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3191:/usr/include/c++/5/bits/basic_string.h ****        *
3192:/usr/include/c++/5/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3193:/usr/include/c++/5/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3194:/usr/include/c++/5/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3195:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3196:/usr/include/c++/5/bits/basic_string.h ****        *
3197:/usr/include/c++/5/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3198:/usr/include/c++/5/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3199:/usr/include/c++/5/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3200:/usr/include/c++/5/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3201:/usr/include/c++/5/bits/basic_string.h ****        *  data.
3202:/usr/include/c++/5/bits/basic_string.h ****        */
3203:/usr/include/c++/5/bits/basic_string.h ****       void
3204:/usr/include/c++/5/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3205:/usr/include/c++/5/bits/basic_string.h **** 
3206:/usr/include/c++/5/bits/basic_string.h ****       /**
3207:/usr/include/c++/5/bits/basic_string.h ****        *  Erases the string, making it empty.
3208:/usr/include/c++/5/bits/basic_string.h ****        */
3209:/usr/include/c++/5/bits/basic_string.h ****       // PR 56166: this should not throw.
3210:/usr/include/c++/5/bits/basic_string.h ****       void
3211:/usr/include/c++/5/bits/basic_string.h ****       clear()
3212:/usr/include/c++/5/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
3213:/usr/include/c++/5/bits/basic_string.h **** 
3214:/usr/include/c++/5/bits/basic_string.h ****       /**
3215:/usr/include/c++/5/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
3216:/usr/include/c++/5/bits/basic_string.h ****        *  <code>*this == ""</code>.
3217:/usr/include/c++/5/bits/basic_string.h ****        */
3218:/usr/include/c++/5/bits/basic_string.h ****       bool
3219:/usr/include/c++/5/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
3220:/usr/include/c++/5/bits/basic_string.h ****       { return this->size() == 0; }
3221:/usr/include/c++/5/bits/basic_string.h **** 
3222:/usr/include/c++/5/bits/basic_string.h ****       // Element access:
3223:/usr/include/c++/5/bits/basic_string.h ****       /**
3224:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3225:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3226:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
3227:/usr/include/c++/5/bits/basic_string.h ****        *
3228:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3229:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3230:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3231:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
3232:/usr/include/c++/5/bits/basic_string.h ****        */
3233:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3234:/usr/include/c++/5/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
3235:/usr/include/c++/5/bits/basic_string.h ****       {
3236:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
3237:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
3238:/usr/include/c++/5/bits/basic_string.h ****       }
3239:/usr/include/c++/5/bits/basic_string.h **** 
3240:/usr/include/c++/5/bits/basic_string.h ****       /**
3241:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3242:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3243:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3244:/usr/include/c++/5/bits/basic_string.h ****        *
3245:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3246:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3247:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3248:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)  Unshares the string.
3249:/usr/include/c++/5/bits/basic_string.h ****        */
3250:/usr/include/c++/5/bits/basic_string.h ****       reference
3251:/usr/include/c++/5/bits/basic_string.h ****       operator[](size_type __pos)
3252:/usr/include/c++/5/bits/basic_string.h ****       {
3253:/usr/include/c++/5/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
3254:/usr/include/c++/5/bits/basic_string.h **** 	// and in C++11 mode.
3255:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
3256:/usr/include/c++/5/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
3257:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
3258:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3259:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
3260:/usr/include/c++/5/bits/basic_string.h ****       }
3261:/usr/include/c++/5/bits/basic_string.h **** 
3262:/usr/include/c++/5/bits/basic_string.h ****       /**
3263:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3264:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
3265:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
3266:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3267:/usr/include/c++/5/bits/basic_string.h ****        *
3268:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3269:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3270:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
3271:/usr/include/c++/5/bits/basic_string.h ****        */
3272:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3273:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n) const
3274:/usr/include/c++/5/bits/basic_string.h ****       {
3275:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= this->size())
3276:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3277:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3278:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
3279:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
3280:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
3281:/usr/include/c++/5/bits/basic_string.h ****       }
3282:/usr/include/c++/5/bits/basic_string.h **** 
3283:/usr/include/c++/5/bits/basic_string.h ****       /**
3284:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3285:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
3286:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3287:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3288:/usr/include/c++/5/bits/basic_string.h ****        *
3289:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3290:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3291:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
3292:/usr/include/c++/5/bits/basic_string.h ****        *  unsharing the string.
3293:/usr/include/c++/5/bits/basic_string.h ****        */
3294:/usr/include/c++/5/bits/basic_string.h ****       reference
3295:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n)
3296:/usr/include/c++/5/bits/basic_string.h ****       {
3297:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= size())
3298:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3299:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3300:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
3301:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
3302:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3303:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
3304:/usr/include/c++/5/bits/basic_string.h ****       }
3305:/usr/include/c++/5/bits/basic_string.h **** 
3306:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3307:/usr/include/c++/5/bits/basic_string.h ****       /**
3308:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
3309:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3310:/usr/include/c++/5/bits/basic_string.h ****        */
3311:/usr/include/c++/5/bits/basic_string.h ****       reference
3312:/usr/include/c++/5/bits/basic_string.h ****       front()
3313:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
3314:/usr/include/c++/5/bits/basic_string.h **** 
3315:/usr/include/c++/5/bits/basic_string.h ****       /**
3316:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
3317:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3318:/usr/include/c++/5/bits/basic_string.h ****        */
3319:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3320:/usr/include/c++/5/bits/basic_string.h ****       front() const _GLIBCXX_NOEXCEPT
3321:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
3322:/usr/include/c++/5/bits/basic_string.h **** 
3323:/usr/include/c++/5/bits/basic_string.h ****       /**
3324:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
3325:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3326:/usr/include/c++/5/bits/basic_string.h ****        */
3327:/usr/include/c++/5/bits/basic_string.h ****       reference
3328:/usr/include/c++/5/bits/basic_string.h ****       back()
3329:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
3330:/usr/include/c++/5/bits/basic_string.h **** 
3331:/usr/include/c++/5/bits/basic_string.h ****       /**
3332:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
3333:/usr/include/c++/5/bits/basic_string.h ****        *  last element of the %string.
3334:/usr/include/c++/5/bits/basic_string.h ****        */
3335:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3336:/usr/include/c++/5/bits/basic_string.h ****       back() const _GLIBCXX_NOEXCEPT
3337:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
3338:/usr/include/c++/5/bits/basic_string.h **** #endif
3339:/usr/include/c++/5/bits/basic_string.h **** 
3340:/usr/include/c++/5/bits/basic_string.h ****       // Modifiers:
3341:/usr/include/c++/5/bits/basic_string.h ****       /**
3342:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
3343:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3344:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3345:/usr/include/c++/5/bits/basic_string.h ****        */
3346:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3347:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const basic_string& __str)
3348:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__str); }
3349:/usr/include/c++/5/bits/basic_string.h **** 
3350:/usr/include/c++/5/bits/basic_string.h ****       /**
3351:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
3352:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3353:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3354:/usr/include/c++/5/bits/basic_string.h ****        */
3355:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3356:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const _CharT* __s)
3357:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__s); }
3358:/usr/include/c++/5/bits/basic_string.h **** 
3359:/usr/include/c++/5/bits/basic_string.h ****       /**
3360:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a character.
3361:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to append.
3362:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3363:/usr/include/c++/5/bits/basic_string.h ****        */
3364:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3365:/usr/include/c++/5/bits/basic_string.h ****       operator+=(_CharT __c)
3366:/usr/include/c++/5/bits/basic_string.h ****       { 
3367:/usr/include/c++/5/bits/basic_string.h **** 	this->push_back(__c);
3368:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3369:/usr/include/c++/5/bits/basic_string.h ****       }
3370:/usr/include/c++/5/bits/basic_string.h **** 
3371:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3372:/usr/include/c++/5/bits/basic_string.h ****       /**
3373:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
3374:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
3375:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3376:/usr/include/c++/5/bits/basic_string.h ****        */
3377:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3378:/usr/include/c++/5/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
3379:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3380:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3381:/usr/include/c++/5/bits/basic_string.h **** 
3382:/usr/include/c++/5/bits/basic_string.h ****       /**
3383:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
3384:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3385:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3386:/usr/include/c++/5/bits/basic_string.h ****        */
3387:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3388:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str);
3389:/usr/include/c++/5/bits/basic_string.h **** 
3390:/usr/include/c++/5/bits/basic_string.h ****       /**
3391:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a substring.
3392:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3393:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
3394:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3395:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3396:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
3397:/usr/include/c++/5/bits/basic_string.h ****        *
3398:/usr/include/c++/5/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
3399:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
3400:/usr/include/c++/5/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
3401:/usr/include/c++/5/bits/basic_string.h ****        *  remainder of @a __str is appended.
3402:/usr/include/c++/5/bits/basic_string.h ****        */
3403:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3404:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
3405:/usr/include/c++/5/bits/basic_string.h **** 
3406:/usr/include/c++/5/bits/basic_string.h ****       /**
3407:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C substring.
3408:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3409:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3410:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3411:/usr/include/c++/5/bits/basic_string.h ****        */
3412:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3413:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
3414:/usr/include/c++/5/bits/basic_string.h **** 
3415:/usr/include/c++/5/bits/basic_string.h ****       /**
3416:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
3417:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3418:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3419:/usr/include/c++/5/bits/basic_string.h ****        */
3420:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3421:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s)
3422:/usr/include/c++/5/bits/basic_string.h ****       {
3423:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3424:/usr/include/c++/5/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
3425:/usr/include/c++/5/bits/basic_string.h ****       }
3426:/usr/include/c++/5/bits/basic_string.h **** 
3427:/usr/include/c++/5/bits/basic_string.h ****       /**
3428:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append multiple characters.
3429:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3430:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
3431:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3432:/usr/include/c++/5/bits/basic_string.h ****        *
3433:/usr/include/c++/5/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
3434:/usr/include/c++/5/bits/basic_string.h ****        */
3435:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3436:/usr/include/c++/5/bits/basic_string.h ****       append(size_type __n, _CharT __c);
3437:/usr/include/c++/5/bits/basic_string.h **** 
3438:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3439:/usr/include/c++/5/bits/basic_string.h ****       /**
3440:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
3441:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
3442:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3443:/usr/include/c++/5/bits/basic_string.h ****        */
3444:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3445:/usr/include/c++/5/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
3446:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3447:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3448:/usr/include/c++/5/bits/basic_string.h **** 
3449:/usr/include/c++/5/bits/basic_string.h ****       /**
3450:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a range of characters.
3451:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3452:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3453:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3454:/usr/include/c++/5/bits/basic_string.h ****        *
3455:/usr/include/c++/5/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
3456:/usr/include/c++/5/bits/basic_string.h ****        */
3457:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3458:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
3459:/usr/include/c++/5/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
3460:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
3461:/usr/include/c++/5/bits/basic_string.h **** 
3462:/usr/include/c++/5/bits/basic_string.h ****       /**
3463:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a single character.
3464:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to append.
3465:/usr/include/c++/5/bits/basic_string.h ****        */
3466:/usr/include/c++/5/bits/basic_string.h ****       void
3467:/usr/include/c++/5/bits/basic_string.h ****       push_back(_CharT __c)
3468:/usr/include/c++/5/bits/basic_string.h ****       { 
3469:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
3470:/usr/include/c++/5/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
3471:/usr/include/c++/5/bits/basic_string.h **** 	  this->reserve(__len);
3472:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
3473:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
3474:/usr/include/c++/5/bits/basic_string.h ****       }
3475:/usr/include/c++/5/bits/basic_string.h **** 
3476:/usr/include/c++/5/bits/basic_string.h ****       /**
3477:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
3478:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
3479:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3480:/usr/include/c++/5/bits/basic_string.h ****        */
3481:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3482:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str);
3483:/usr/include/c++/5/bits/basic_string.h **** 
3484:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3485:/usr/include/c++/5/bits/basic_string.h ****       /**
3486:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
3487:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
3488:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3489:/usr/include/c++/5/bits/basic_string.h ****        *
3490:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
3491:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3492:/usr/include/c++/5/bits/basic_string.h ****        */
3493:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
3494:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3495:/usr/include/c++/5/bits/basic_string.h ****       assign(basic_string&& __str)
3496:/usr/include/c++/5/bits/basic_string.h ****       {
3497:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
3498:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3499:/usr/include/c++/5/bits/basic_string.h ****       }
3500:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3501:/usr/include/c++/5/bits/basic_string.h **** 
3502:/usr/include/c++/5/bits/basic_string.h ****       /**
3503:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
3504:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to use.
3505:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
3506:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
3507:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3508:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
3509:/usr/include/c++/5/bits/basic_string.h ****        *
3510:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
3511:/usr/include/c++/5/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
3512:/usr/include/c++/5/bits/basic_string.h ****        *  is larger than the number of available characters in @a
3513:/usr/include/c++/5/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
3514:/usr/include/c++/5/bits/basic_string.h ****        */
3515:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3516:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
3517:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str._M_data()
3518:/usr/include/c++/5/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
3519:/usr/include/c++/5/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
3520:/usr/include/c++/5/bits/basic_string.h **** 
3521:/usr/include/c++/5/bits/basic_string.h ****       /**
3522:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a C substring.
3523:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
3524:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
3525:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3526:/usr/include/c++/5/bits/basic_string.h ****        *
3527:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
3528:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
3529:/usr/include/c++/5/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
3530:/usr/include/c++/5/bits/basic_string.h ****        */
3531:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3532:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
3533:/usr/include/c++/5/bits/basic_string.h **** 
3534:/usr/include/c++/5/bits/basic_string.h ****       /**
3535:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
3536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
3537:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3538:/usr/include/c++/5/bits/basic_string.h ****        *
3539:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
3540:/usr/include/c++/5/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
3541:/usr/include/c++/5/bits/basic_string.h ****        *  function returns.
3542:/usr/include/c++/5/bits/basic_string.h ****        */
3543:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3544:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s)
3545:/usr/include/c++/5/bits/basic_string.h ****       {
3546:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3547:/usr/include/c++/5/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
3548:/usr/include/c++/5/bits/basic_string.h ****       }
3549:/usr/include/c++/5/bits/basic_string.h **** 
3550:/usr/include/c++/5/bits/basic_string.h ****       /**
3551:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
3552:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
3553:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
3554:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3555:/usr/include/c++/5/bits/basic_string.h ****        *
3556:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
3557:/usr/include/c++/5/bits/basic_string.h ****        *  character @a __c.
3558:/usr/include/c++/5/bits/basic_string.h ****        */
3559:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3560:/usr/include/c++/5/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
3561:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
3562:/usr/include/c++/5/bits/basic_string.h **** 
3563:/usr/include/c++/5/bits/basic_string.h ****       /**
3564:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
3565:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3566:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3567:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3568:/usr/include/c++/5/bits/basic_string.h ****        *
3569:/usr/include/c++/5/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
3570:/usr/include/c++/5/bits/basic_string.h ****       */
3571:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3572:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
3573:/usr/include/c++/5/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
3574:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
3575:/usr/include/c++/5/bits/basic_string.h **** 
3576:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3577:/usr/include/c++/5/bits/basic_string.h ****       /**
3578:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
3579:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
3580:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3581:/usr/include/c++/5/bits/basic_string.h ****        */
3582:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3583:/usr/include/c++/5/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
3584:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
3585:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3586:/usr/include/c++/5/bits/basic_string.h **** 
3587:/usr/include/c++/5/bits/basic_string.h ****       /**
3588:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
3589:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3590:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
3591:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3592:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3593:/usr/include/c++/5/bits/basic_string.h ****        *
3594:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
3595:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
3596:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3597:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3598:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3599:/usr/include/c++/5/bits/basic_string.h ****       */
3600:/usr/include/c++/5/bits/basic_string.h ****       void
3601:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
3602:/usr/include/c++/5/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
3603:/usr/include/c++/5/bits/basic_string.h **** 
3604:/usr/include/c++/5/bits/basic_string.h ****       /**
3605:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
3606:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3607:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
3608:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
3609:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3610:/usr/include/c++/5/bits/basic_string.h ****        *
3611:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
3612:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3613:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3614:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3615:/usr/include/c++/5/bits/basic_string.h ****       */
3616:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3617:/usr/include/c++/5/bits/basic_string.h ****         void
3618:/usr/include/c++/5/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
3619:/usr/include/c++/5/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
3620:/usr/include/c++/5/bits/basic_string.h **** 
3621:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3622:/usr/include/c++/5/bits/basic_string.h ****       /**
3623:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
3624:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3625:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
3626:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3627:/usr/include/c++/5/bits/basic_string.h ****        */
3628:/usr/include/c++/5/bits/basic_string.h ****       void
3629:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
3630:/usr/include/c++/5/bits/basic_string.h ****       {
3631:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3632:/usr/include/c++/5/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
3633:/usr/include/c++/5/bits/basic_string.h ****       }
3634:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3635:/usr/include/c++/5/bits/basic_string.h **** 
3636:/usr/include/c++/5/bits/basic_string.h ****       /**
3637:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert value of a string.
3638:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3639:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
3640:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3641:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3642:/usr/include/c++/5/bits/basic_string.h ****        *
3643:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
3644:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3645:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3646:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3647:/usr/include/c++/5/bits/basic_string.h ****       */
3648:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3649:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
3650:/usr/include/c++/5/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
3651:/usr/include/c++/5/bits/basic_string.h **** 
3652:/usr/include/c++/5/bits/basic_string.h ****       /**
3653:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a substring.
3654:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3655:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
3656:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
3657:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
3658:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3659:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3660:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
3661:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
3662:/usr/include/c++/5/bits/basic_string.h ****        *
3663:/usr/include/c++/5/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
3664:/usr/include/c++/5/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
3665:/usr/include/c++/5/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
3666:/usr/include/c++/5/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
3667:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
3668:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3669:/usr/include/c++/5/bits/basic_string.h ****       */
3670:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3671:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
3672:/usr/include/c++/5/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
3673:/usr/include/c++/5/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
3674:/usr/include/c++/5/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
3675:/usr/include/c++/5/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
3676:/usr/include/c++/5/bits/basic_string.h **** 
3677:/usr/include/c++/5/bits/basic_string.h ****       /**
3678:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C substring.
3679:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3680:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
3681:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
3682:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3683:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3684:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3685:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3686:/usr/include/c++/5/bits/basic_string.h ****        *
3687:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
3688:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
3689:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
3690:/usr/include/c++/5/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
3691:/usr/include/c++/5/bits/basic_string.h ****        *  doesn't change if an error is thrown.
3692:/usr/include/c++/5/bits/basic_string.h ****       */
3693:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3694:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
3695:/usr/include/c++/5/bits/basic_string.h **** 
3696:/usr/include/c++/5/bits/basic_string.h ****       /**
3697:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C string.
3698:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3699:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
3700:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3701:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3702:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3703:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3704:/usr/include/c++/5/bits/basic_string.h ****        *
3705:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
3706:/usr/include/c++/5/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
3707:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
3708:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
3709:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3710:/usr/include/c++/5/bits/basic_string.h ****       */
3711:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3712:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
3713:/usr/include/c++/5/bits/basic_string.h ****       {
3714:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3715:/usr/include/c++/5/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
3716:/usr/include/c++/5/bits/basic_string.h ****       }
3717:/usr/include/c++/5/bits/basic_string.h **** 
3718:/usr/include/c++/5/bits/basic_string.h ****       /**
3719:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
3720:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
3721:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
3722:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3723:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3724:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3725:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3726:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3727:/usr/include/c++/5/bits/basic_string.h ****        *
3728:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
3729:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
3730:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
3731:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3732:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3733:/usr/include/c++/5/bits/basic_string.h ****       */
3734:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3735:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
3736:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
3737:/usr/include/c++/5/bits/basic_string.h **** 			      size_type(0), __n, __c); }
3738:/usr/include/c++/5/bits/basic_string.h **** 
3739:/usr/include/c++/5/bits/basic_string.h ****       /**
3740:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert one character.
3741:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
3742:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3743:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
3744:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3745:/usr/include/c++/5/bits/basic_string.h ****        *
3746:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
3747:/usr/include/c++/5/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
3748:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
3749:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3750:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3751:/usr/include/c++/5/bits/basic_string.h ****       */
3752:/usr/include/c++/5/bits/basic_string.h ****       iterator
3753:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
3754:/usr/include/c++/5/bits/basic_string.h ****       {
3755:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3756:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
3757:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
3758:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
3759:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
3760:/usr/include/c++/5/bits/basic_string.h ****       }
3761:/usr/include/c++/5/bits/basic_string.h **** 
3762:/usr/include/c++/5/bits/basic_string.h ****       /**
3763:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove characters.
3764:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
3765:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
3766:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3767:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3768:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3769:/usr/include/c++/5/bits/basic_string.h ****        *
3770:/usr/include/c++/5/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
3771:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
3772:/usr/include/c++/5/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
3773:/usr/include/c++/5/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
3774:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3775:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3776:/usr/include/c++/5/bits/basic_string.h ****       */
3777:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3778:/usr/include/c++/5/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
3779:/usr/include/c++/5/bits/basic_string.h ****       { 
3780:/usr/include/c++/5/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
3781:/usr/include/c++/5/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
3782:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3783:/usr/include/c++/5/bits/basic_string.h ****       }
3784:/usr/include/c++/5/bits/basic_string.h **** 
3785:/usr/include/c++/5/bits/basic_string.h ****       /**
3786:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove one character.
3787:/usr/include/c++/5/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
3788:/usr/include/c++/5/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
3789:/usr/include/c++/5/bits/basic_string.h ****        *
3790:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
3791:/usr/include/c++/5/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
3792:/usr/include/c++/5/bits/basic_string.h ****       */
3793:/usr/include/c++/5/bits/basic_string.h ****       iterator
3794:/usr/include/c++/5/bits/basic_string.h ****       erase(iterator __position)
3795:/usr/include/c++/5/bits/basic_string.h ****       {
3796:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
3797:/usr/include/c++/5/bits/basic_string.h **** 				 && __position < _M_iend());
3798:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
3799:/usr/include/c++/5/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
3800:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
3801:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
3802:/usr/include/c++/5/bits/basic_string.h ****       }
3803:/usr/include/c++/5/bits/basic_string.h **** 
3804:/usr/include/c++/5/bits/basic_string.h ****       /**
3805:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove a range of characters.
3806:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
3807:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
3808:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
3809:/usr/include/c++/5/bits/basic_string.h ****        *
3810:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
3811:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
3812:/usr/include/c++/5/bits/basic_string.h ****       */
3813:/usr/include/c++/5/bits/basic_string.h ****       iterator
3814:/usr/include/c++/5/bits/basic_string.h ****       erase(iterator __first, iterator __last);
3815:/usr/include/c++/5/bits/basic_string.h ****  
3816:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3817:/usr/include/c++/5/bits/basic_string.h ****       /**
3818:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove the last character.
3819:/usr/include/c++/5/bits/basic_string.h ****        *
3820:/usr/include/c++/5/bits/basic_string.h ****        *  The string must be non-empty.
3821:/usr/include/c++/5/bits/basic_string.h ****        */
3822:/usr/include/c++/5/bits/basic_string.h ****       void
3823:/usr/include/c++/5/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
3824:/usr/include/c++/5/bits/basic_string.h ****       { erase(size()-1, 1); }
3825:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3826:/usr/include/c++/5/bits/basic_string.h **** 
3827:/usr/include/c++/5/bits/basic_string.h ****       /**
3828:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
3829:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3830:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
3831:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
3832:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3833:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3834:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3835:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3836:/usr/include/c++/5/bits/basic_string.h ****        *
3837:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
3838:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
3839:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3840:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
3841:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
3842:/usr/include/c++/5/bits/basic_string.h ****        *  error is thrown.
3843:/usr/include/c++/5/bits/basic_string.h ****       */
3844:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3845:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
3846:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
3847:/usr/include/c++/5/bits/basic_string.h **** 
3848:/usr/include/c++/5/bits/basic_string.h ****       /**
3849:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
3850:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
3851:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3852:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
3853:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
3854:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
3855:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3856:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
3857:/usr/include/c++/5/bits/basic_string.h ****        *  __str.size().
3858:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3859:/usr/include/c++/5/bits/basic_string.h ****        *
3860:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
3861:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
3862:/usr/include/c++/5/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
3863:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
3864:/usr/include/c++/5/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
3865:/usr/include/c++/5/bits/basic_string.h ****       */
3866:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3867:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
3868:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
3869:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
3870:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
3871:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
3872:/usr/include/c++/5/bits/basic_string.h **** 
3873:/usr/include/c++/5/bits/basic_string.h ****       /**
3874:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
3875:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3876:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3877:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
3878:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
3879:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3880:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
3881:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3882:/usr/include/c++/5/bits/basic_string.h ****        *
3883:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
3884:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
3885:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
3886:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
3887:/usr/include/c++/5/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
3888:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
3889:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
3890:/usr/include/c++/5/bits/basic_string.h ****       */
3891:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3892:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
3893:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2);
3894:/usr/include/c++/5/bits/basic_string.h **** 
3895:/usr/include/c++/5/bits/basic_string.h ****       /**
3896:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
3897:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3898:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3899:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
3900:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3901:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
3902:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3903:/usr/include/c++/5/bits/basic_string.h ****        *
3904:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
3905:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
3906:/usr/include/c++/5/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
3907:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
3908:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3909:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3910:/usr/include/c++/5/bits/basic_string.h ****       */
3911:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3912:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
3913:/usr/include/c++/5/bits/basic_string.h ****       {
3914:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3915:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
3916:/usr/include/c++/5/bits/basic_string.h ****       }
3917:/usr/include/c++/5/bits/basic_string.h **** 
3918:/usr/include/c++/5/bits/basic_string.h ****       /**
3919:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
3920:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3921:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3922:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
3923:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
3924:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3925:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
3926:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3927:/usr/include/c++/5/bits/basic_string.h ****        *
3928:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
3929:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
3930:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3931:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
3932:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
3933:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
3934:/usr/include/c++/5/bits/basic_string.h ****       */
3935:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3936:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
3937:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
3938:/usr/include/c++/5/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
3939:/usr/include/c++/5/bits/basic_string.h **** 
3940:/usr/include/c++/5/bits/basic_string.h ****       /**
3941:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
3942:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3943:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3944:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String value to insert.
3945:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3946:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3947:/usr/include/c++/5/bits/basic_string.h ****        *
3948:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3949:/usr/include/c++/5/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
3950:/usr/include/c++/5/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
3951:/usr/include/c++/5/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
3952:/usr/include/c++/5/bits/basic_string.h ****       */
3953:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3954:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
3955:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
3956:/usr/include/c++/5/bits/basic_string.h **** 
3957:/usr/include/c++/5/bits/basic_string.h ****       /**
3958:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
3959:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3960:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3961:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
3962:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
3963:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3964:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3965:/usr/include/c++/5/bits/basic_string.h ****        *
3966:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3967:/usr/include/c++/5/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
3968:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
3969:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
3970:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3971:/usr/include/c++/5/bits/basic_string.h ****       */
3972:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3973:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
3974:/usr/include/c++/5/bits/basic_string.h ****       {
3975:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
3976:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
3977:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
3978:/usr/include/c++/5/bits/basic_string.h ****       }
3979:/usr/include/c++/5/bits/basic_string.h **** 
3980:/usr/include/c++/5/bits/basic_string.h ****       /**
3981:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
3982:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3983:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3984:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
3985:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3986:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3987:/usr/include/c++/5/bits/basic_string.h ****        *
3988:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3989:/usr/include/c++/5/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
3990:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
3991:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3992:/usr/include/c++/5/bits/basic_string.h ****       */
3993:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3994:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
3995:/usr/include/c++/5/bits/basic_string.h ****       {
3996:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3997:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
3998:/usr/include/c++/5/bits/basic_string.h ****       }
3999:/usr/include/c++/5/bits/basic_string.h **** 
4000:/usr/include/c++/5/bits/basic_string.h ****       /**
4001:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4002:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4003:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4004:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4005:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
4006:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4007:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4008:/usr/include/c++/5/bits/basic_string.h ****        *
4009:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4010:/usr/include/c++/5/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4011:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4012:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4013:/usr/include/c++/5/bits/basic_string.h ****       */
4014:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4015:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4016:/usr/include/c++/5/bits/basic_string.h ****       {
4017:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4018:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4019:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4020:/usr/include/c++/5/bits/basic_string.h ****       }
4021:/usr/include/c++/5/bits/basic_string.h **** 
4022:/usr/include/c++/5/bits/basic_string.h ****       /**
4023:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4024:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4025:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4026:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4027:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4028:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4029:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4030:/usr/include/c++/5/bits/basic_string.h ****        *
4031:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4032:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4033:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4034:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4035:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
4036:/usr/include/c++/5/bits/basic_string.h ****       */
4037:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
4038:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
4039:/usr/include/c++/5/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4040:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4041:/usr/include/c++/5/bits/basic_string.h ****         {
4042:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4043:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4044:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4045:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4046:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4047:/usr/include/c++/5/bits/basic_string.h **** 	}
4048:/usr/include/c++/5/bits/basic_string.h **** 
4049:/usr/include/c++/5/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4050:/usr/include/c++/5/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4051:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4052:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4053:/usr/include/c++/5/bits/basic_string.h ****       {
4054:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4055:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4056:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4057:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4058:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4059:/usr/include/c++/5/bits/basic_string.h ****       }
4060:/usr/include/c++/5/bits/basic_string.h **** 
4061:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4062:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4063:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4064:/usr/include/c++/5/bits/basic_string.h ****       {
4065:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4066:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4067:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4068:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4069:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4070:/usr/include/c++/5/bits/basic_string.h ****       }
4071:/usr/include/c++/5/bits/basic_string.h **** 
4072:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4073:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4074:/usr/include/c++/5/bits/basic_string.h ****       {
4075:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4076:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4077:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4078:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4079:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4080:/usr/include/c++/5/bits/basic_string.h ****       }
4081:/usr/include/c++/5/bits/basic_string.h **** 
4082:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4083:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4084:/usr/include/c++/5/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
4085:/usr/include/c++/5/bits/basic_string.h ****       {
4086:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4087:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4088:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4089:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4090:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4091:/usr/include/c++/5/bits/basic_string.h ****       }
4092:/usr/include/c++/5/bits/basic_string.h ****       
4093:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
4094:/usr/include/c++/5/bits/basic_string.h ****       /**
4095:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
4096:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4097:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4098:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4099:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4100:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4101:/usr/include/c++/5/bits/basic_string.h ****        *
4102:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4103:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4104:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4105:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4106:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
4107:/usr/include/c++/5/bits/basic_string.h ****       */
4108:/usr/include/c++/5/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
4109:/usr/include/c++/5/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
4110:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
4111:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
4112:/usr/include/c++/5/bits/basic_string.h **** 
4113:/usr/include/c++/5/bits/basic_string.h ****     private:
4114:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
4115:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
4116:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
4117:/usr/include/c++/5/bits/basic_string.h **** 			    _Integer __val, __true_type)
4118:/usr/include/c++/5/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
4119:/usr/include/c++/5/bits/basic_string.h **** 
4120:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
4121:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
4122:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
4123:/usr/include/c++/5/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
4124:/usr/include/c++/5/bits/basic_string.h **** 
4125:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4126:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
4127:/usr/include/c++/5/bits/basic_string.h **** 		     _CharT __c);
4128:/usr/include/c++/5/bits/basic_string.h **** 
4129:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4130:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
4131:/usr/include/c++/5/bits/basic_string.h **** 		      size_type __n2);
4132:/usr/include/c++/5/bits/basic_string.h **** 
4133:/usr/include/c++/5/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
4134:/usr/include/c++/5/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
4135:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4136:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4137:/usr/include/c++/5/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
4138:/usr/include/c++/5/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
4139:/usr/include/c++/5/bits/basic_string.h **** 	{
4140:/usr/include/c++/5/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
4141:/usr/include/c++/5/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
4142:/usr/include/c++/5/bits/basic_string.h **** 	}
4143:/usr/include/c++/5/bits/basic_string.h **** 
4144:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4145:/usr/include/c++/5/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
4146:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
4147:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4148:/usr/include/c++/5/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
4149:/usr/include/c++/5/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
4150:/usr/include/c++/5/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
4151:/usr/include/c++/5/bits/basic_string.h **** 				    __end, __a); }
4152:/usr/include/c++/5/bits/basic_string.h **** 
4153:/usr/include/c++/5/bits/basic_string.h ****       static _CharT*
4154:/usr/include/c++/5/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
4155:/usr/include/c++/5/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
4156:/usr/include/c++/5/bits/basic_string.h **** 
4157:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4158:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4159:/usr/include/c++/5/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
4160:/usr/include/c++/5/bits/basic_string.h **** 	{
4161:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
4162:/usr/include/c++/5/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
4163:/usr/include/c++/5/bits/basic_string.h ****         }
4164:/usr/include/c++/5/bits/basic_string.h **** 
4165:/usr/include/c++/5/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
4166:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4167:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4168:/usr/include/c++/5/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
4169:/usr/include/c++/5/bits/basic_string.h **** 		      input_iterator_tag);
4170:/usr/include/c++/5/bits/basic_string.h **** 
4171:/usr/include/c++/5/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
4172:/usr/include/c++/5/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
4173:/usr/include/c++/5/bits/basic_string.h ****       template<class _FwdIterator>
4174:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4175:/usr/include/c++/5/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
4176:/usr/include/c++/5/bits/basic_string.h **** 		     forward_iterator_tag);
4177:/usr/include/c++/5/bits/basic_string.h **** 
4178:/usr/include/c++/5/bits/basic_string.h ****       static _CharT*
4179:/usr/include/c++/5/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
4180:/usr/include/c++/5/bits/basic_string.h **** 
4181:/usr/include/c++/5/bits/basic_string.h ****     public:
4182:/usr/include/c++/5/bits/basic_string.h **** 
4183:/usr/include/c++/5/bits/basic_string.h ****       /**
4184:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy substring into C string.
4185:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to copy value into.
4186:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
4187:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
4188:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Number of characters actually copied
4189:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4190:/usr/include/c++/5/bits/basic_string.h ****        *
4191:/usr/include/c++/5/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
4192:/usr/include/c++/5/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
4193:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.
4194:/usr/include/c++/5/bits/basic_string.h ****       */
4195:/usr/include/c++/5/bits/basic_string.h ****       size_type
4196:/usr/include/c++/5/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
4197:/usr/include/c++/5/bits/basic_string.h **** 
4198:/usr/include/c++/5/bits/basic_string.h ****       /**
4199:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Swap contents with another string.
4200:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String to swap with.
4201:/usr/include/c++/5/bits/basic_string.h ****        *
4202:/usr/include/c++/5/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
4203:/usr/include/c++/5/bits/basic_string.h ****        *  time.
4204:/usr/include/c++/5/bits/basic_string.h ****       */
4205:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
4206:/usr/include/c++/5/bits/basic_string.h ****       void
4207:/usr/include/c++/5/bits/basic_string.h ****       swap(basic_string& __s);
4208:/usr/include/c++/5/bits/basic_string.h **** 
4209:/usr/include/c++/5/bits/basic_string.h ****       // String operations:
4210:/usr/include/c++/5/bits/basic_string.h ****       /**
4211:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
4212:/usr/include/c++/5/bits/basic_string.h ****        *
4213:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4214:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
4215:/usr/include/c++/5/bits/basic_string.h ****       */
4216:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
4217:/usr/include/c++/5/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
4218:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
4219:/usr/include/c++/5/bits/basic_string.h **** 
4220:/usr/include/c++/5/bits/basic_string.h ****       /**
4221:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
4222:/usr/include/c++/5/bits/basic_string.h ****        *
4223:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4224:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
4225:/usr/include/c++/5/bits/basic_string.h ****       */
4226:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
4227:/usr/include/c++/5/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
4228:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
4229:/usr/include/c++/5/bits/basic_string.h **** 
4230:/usr/include/c++/5/bits/basic_string.h ****       /**
4231:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
4232:/usr/include/c++/5/bits/basic_string.h ****       */
4233:/usr/include/c++/5/bits/basic_string.h ****       allocator_type
4234:/usr/include/c++/5/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
4235:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
4236:/usr/include/c++/5/bits/basic_string.h **** 
4237:/usr/include/c++/5/bits/basic_string.h ****       /**
4238:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C substring.
4239:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4240:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4241:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
4242:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4243:/usr/include/c++/5/bits/basic_string.h ****        *
4244:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
4245:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4246:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
4247:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4248:/usr/include/c++/5/bits/basic_string.h ****       */
4249:/usr/include/c++/5/bits/basic_string.h ****       size_type
4250:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
4251:/usr/include/c++/5/bits/basic_string.h **** 
4252:/usr/include/c++/5/bits/basic_string.h ****       /**
4253:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a string.
4254:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
4255:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4256:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4257:/usr/include/c++/5/bits/basic_string.h ****        *
4258:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
4259:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
4260:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns npos.
4261:/usr/include/c++/5/bits/basic_string.h ****       */
4262:/usr/include/c++/5/bits/basic_string.h ****       size_type
4263:/usr/include/c++/5/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
4264:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4265:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
4266:/usr/include/c++/5/bits/basic_string.h **** 
4267:/usr/include/c++/5/bits/basic_string.h ****       /**
4268:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C string.
4269:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4270:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4271:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4272:/usr/include/c++/5/bits/basic_string.h ****        *
4273:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
4274:/usr/include/c++/5/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
4275:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
4276:/usr/include/c++/5/bits/basic_string.h ****       */
4277:/usr/include/c++/5/bits/basic_string.h ****       size_type
4278:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
4279:/usr/include/c++/5/bits/basic_string.h ****       {
4280:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4281:/usr/include/c++/5/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
4282:/usr/include/c++/5/bits/basic_string.h ****       }
4283:/usr/include/c++/5/bits/basic_string.h **** 
4284:/usr/include/c++/5/bits/basic_string.h ****       /**
4285:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
4286:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4287:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4288:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4289:/usr/include/c++/5/bits/basic_string.h ****        *
4290:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
4291:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4292:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4293:/usr/include/c++/5/bits/basic_string.h ****       */
4294:/usr/include/c++/5/bits/basic_string.h ****       size_type
4295:/usr/include/c++/5/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
4296:/usr/include/c++/5/bits/basic_string.h **** 
4297:/usr/include/c++/5/bits/basic_string.h ****       /**
4298:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a string.
4299:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
4300:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4301:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
4302:/usr/include/c++/5/bits/basic_string.h ****        *
4303:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
4304:/usr/include/c++/5/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
4305:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
4306:/usr/include/c++/5/bits/basic_string.h ****       */
4307:/usr/include/c++/5/bits/basic_string.h ****       size_type
4308:/usr/include/c++/5/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
4309:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4310:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
4311:/usr/include/c++/5/bits/basic_string.h **** 
4312:/usr/include/c++/5/bits/basic_string.h ****       /**
4313:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
4314:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4315:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4316:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4317:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
4318:/usr/include/c++/5/bits/basic_string.h ****        *
4319:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
4320:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4321:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
4322:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4323:/usr/include/c++/5/bits/basic_string.h ****       */
4324:/usr/include/c++/5/bits/basic_string.h ****       size_type
4325:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
4326:/usr/include/c++/5/bits/basic_string.h **** 
4327:/usr/include/c++/5/bits/basic_string.h ****       /**
4328:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C string.
4329:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4330:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
4331:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
4332:/usr/include/c++/5/bits/basic_string.h ****        *
4333:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
4334:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
4335:/usr/include/c++/5/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
4336:/usr/include/c++/5/bits/basic_string.h ****       */
4337:/usr/include/c++/5/bits/basic_string.h ****       size_type
4338:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
4339:/usr/include/c++/5/bits/basic_string.h ****       {
4340:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4341:/usr/include/c++/5/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
4342:/usr/include/c++/5/bits/basic_string.h ****       }
4343:/usr/include/c++/5/bits/basic_string.h **** 
4344:/usr/include/c++/5/bits/basic_string.h ****       /**
4345:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
4346:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4347:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4348:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4349:/usr/include/c++/5/bits/basic_string.h ****        *
4350:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4351:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4352:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4353:/usr/include/c++/5/bits/basic_string.h ****       */
4354:/usr/include/c++/5/bits/basic_string.h ****       size_type
4355:/usr/include/c++/5/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
4356:/usr/include/c++/5/bits/basic_string.h **** 
4357:/usr/include/c++/5/bits/basic_string.h ****       /**
4358:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of string.
4359:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
4360:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4361:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4362:/usr/include/c++/5/bits/basic_string.h ****        *
4363:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4364:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
4365:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4366:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4367:/usr/include/c++/5/bits/basic_string.h ****       */
4368:/usr/include/c++/5/bits/basic_string.h ****       size_type
4369:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
4370:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4371:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
4372:/usr/include/c++/5/bits/basic_string.h **** 
4373:/usr/include/c++/5/bits/basic_string.h ****       /**
4374:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
4375:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
4376:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4377:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4378:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4379:/usr/include/c++/5/bits/basic_string.h ****        *
4380:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4381:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4382:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
4383:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4384:/usr/include/c++/5/bits/basic_string.h ****       */
4385:/usr/include/c++/5/bits/basic_string.h ****       size_type
4386:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
4387:/usr/include/c++/5/bits/basic_string.h **** 
4388:/usr/include/c++/5/bits/basic_string.h ****       /**
4389:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
4390:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
4391:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4392:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4393:/usr/include/c++/5/bits/basic_string.h ****        *
4394:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4395:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4396:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4397:/usr/include/c++/5/bits/basic_string.h ****       */
4398:/usr/include/c++/5/bits/basic_string.h ****       size_type
4399:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
4400:/usr/include/c++/5/bits/basic_string.h ****       {
4401:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4402:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
4403:/usr/include/c++/5/bits/basic_string.h ****       }
4404:/usr/include/c++/5/bits/basic_string.h **** 
4405:/usr/include/c++/5/bits/basic_string.h ****       /**
4406:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
4407:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4408:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4409:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4410:/usr/include/c++/5/bits/basic_string.h ****        *
4411:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
4412:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
4413:/usr/include/c++/5/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
4414:/usr/include/c++/5/bits/basic_string.h ****        *
4415:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
4416:/usr/include/c++/5/bits/basic_string.h ****       */
4417:/usr/include/c++/5/bits/basic_string.h ****       size_type
4418:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
4419:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__c, __pos); }
4420:/usr/include/c++/5/bits/basic_string.h **** 
4421:/usr/include/c++/5/bits/basic_string.h ****       /**
4422:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
4423:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
4424:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4425:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4426:/usr/include/c++/5/bits/basic_string.h ****        *
4427:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4428:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
4429:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4430:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4431:/usr/include/c++/5/bits/basic_string.h ****       */
4432:/usr/include/c++/5/bits/basic_string.h ****       size_type
4433:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
4434:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4435:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
4436:/usr/include/c++/5/bits/basic_string.h **** 
4437:/usr/include/c++/5/bits/basic_string.h ****       /**
4438:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
4439:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
4440:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4441:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4442:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4443:/usr/include/c++/5/bits/basic_string.h ****        *
4444:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4445:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4446:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
4447:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4448:/usr/include/c++/5/bits/basic_string.h ****       */
4449:/usr/include/c++/5/bits/basic_string.h ****       size_type
4450:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
4451:/usr/include/c++/5/bits/basic_string.h **** 
4452:/usr/include/c++/5/bits/basic_string.h ****       /**
4453:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
4454:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
4455:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4456:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4457:/usr/include/c++/5/bits/basic_string.h ****        *
4458:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4459:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4460:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4461:/usr/include/c++/5/bits/basic_string.h ****       */
4462:/usr/include/c++/5/bits/basic_string.h ****       size_type
4463:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
4464:/usr/include/c++/5/bits/basic_string.h ****       {
4465:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4466:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
4467:/usr/include/c++/5/bits/basic_string.h ****       }
4468:/usr/include/c++/5/bits/basic_string.h **** 
4469:/usr/include/c++/5/bits/basic_string.h ****       /**
4470:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
4471:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4472:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4473:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4474:/usr/include/c++/5/bits/basic_string.h ****        *
4475:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4476:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4477:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4478:/usr/include/c++/5/bits/basic_string.h ****        *
4479:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
4480:/usr/include/c++/5/bits/basic_string.h ****       */
4481:/usr/include/c++/5/bits/basic_string.h ****       size_type
4482:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
4483:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
4484:/usr/include/c++/5/bits/basic_string.h **** 
4485:/usr/include/c++/5/bits/basic_string.h ****       /**
4486:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
4487:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
4488:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4489:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4490:/usr/include/c++/5/bits/basic_string.h ****        *
4491:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
4492:/usr/include/c++/5/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
4493:/usr/include/c++/5/bits/basic_string.h ****        *  was found.  If not found, returns npos.
4494:/usr/include/c++/5/bits/basic_string.h ****       */
4495:/usr/include/c++/5/bits/basic_string.h ****       size_type
4496:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
4497:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4498:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
4499:/usr/include/c++/5/bits/basic_string.h **** 
4500:/usr/include/c++/5/bits/basic_string.h ****       /**
4501:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
4502:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4503:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4504:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
4505:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4506:/usr/include/c++/5/bits/basic_string.h ****        *
4507:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4508:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
4509:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4510:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4511:/usr/include/c++/5/bits/basic_string.h ****       */
4512:/usr/include/c++/5/bits/basic_string.h ****       size_type
4513:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
4514:/usr/include/c++/5/bits/basic_string.h **** 			size_type __n) const;
4515:/usr/include/c++/5/bits/basic_string.h **** 
4516:/usr/include/c++/5/bits/basic_string.h ****       /**
4517:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
4518:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4519:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4520:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4521:/usr/include/c++/5/bits/basic_string.h ****        *
4522:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4523:/usr/include/c++/5/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
4524:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4525:/usr/include/c++/5/bits/basic_string.h ****       */
4526:/usr/include/c++/5/bits/basic_string.h ****       size_type
4527:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
4528:/usr/include/c++/5/bits/basic_string.h ****       {
4529:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4530:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
4531:/usr/include/c++/5/bits/basic_string.h ****       }
4532:/usr/include/c++/5/bits/basic_string.h **** 
4533:/usr/include/c++/5/bits/basic_string.h ****       /**
4534:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a different character.
4535:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
4536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4537:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4538:/usr/include/c++/5/bits/basic_string.h ****        *
4539:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
4540:/usr/include/c++/5/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
4541:/usr/include/c++/5/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
4542:/usr/include/c++/5/bits/basic_string.h ****       */
4543:/usr/include/c++/5/bits/basic_string.h ****       size_type
4544:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
4545:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4546:/usr/include/c++/5/bits/basic_string.h **** 
4547:/usr/include/c++/5/bits/basic_string.h ****       /**
4548:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
4549:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
4550:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4551:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4552:/usr/include/c++/5/bits/basic_string.h ****        *
4553:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4554:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
4555:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4556:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4557:/usr/include/c++/5/bits/basic_string.h ****       */
4558:/usr/include/c++/5/bits/basic_string.h ****       size_type
4559:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
4560:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4561:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
4562:/usr/include/c++/5/bits/basic_string.h **** 
4563:/usr/include/c++/5/bits/basic_string.h ****       /**
4564:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
4565:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4566:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4567:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
4568:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4569:/usr/include/c++/5/bits/basic_string.h ****        *
4570:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
4571:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
4572:/usr/include/c++/5/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
4573:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4574:/usr/include/c++/5/bits/basic_string.h ****       */
4575:/usr/include/c++/5/bits/basic_string.h ****       size_type
4576:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
4577:/usr/include/c++/5/bits/basic_string.h **** 		       size_type __n) const;
4578:/usr/include/c++/5/bits/basic_string.h ****       /**
4579:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
4580:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4581:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4582:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4583:/usr/include/c++/5/bits/basic_string.h ****        *
4584:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4585:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
4586:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4587:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4588:/usr/include/c++/5/bits/basic_string.h ****       */
4589:/usr/include/c++/5/bits/basic_string.h ****       size_type
4590:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
4591:/usr/include/c++/5/bits/basic_string.h ****       {
4592:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4593:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
4594:/usr/include/c++/5/bits/basic_string.h ****       }
4595:/usr/include/c++/5/bits/basic_string.h **** 
4596:/usr/include/c++/5/bits/basic_string.h ****       /**
4597:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a different character.
4598:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
4599:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4600:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4601:/usr/include/c++/5/bits/basic_string.h ****        *
4602:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
4603:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
4604:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4605:/usr/include/c++/5/bits/basic_string.h ****       */
4606:/usr/include/c++/5/bits/basic_string.h ****       size_type
4607:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
4608:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4609:/usr/include/c++/5/bits/basic_string.h **** 
4610:/usr/include/c++/5/bits/basic_string.h ****       /**
4611:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Get a substring.
4612:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
4613:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
4614:/usr/include/c++/5/bits/basic_string.h ****        *  @return  The new string.
4615:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4616:/usr/include/c++/5/bits/basic_string.h ****        *
4617:/usr/include/c++/5/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
4618:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
4619:/usr/include/c++/5/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
4620:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
4621:/usr/include/c++/5/bits/basic_string.h ****       */
4622:/usr/include/c++/5/bits/basic_string.h ****       basic_string
4623:/usr/include/c++/5/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
4624:/usr/include/c++/5/bits/basic_string.h ****       { return basic_string(*this,
4625:/usr/include/c++/5/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
4626:/usr/include/c++/5/bits/basic_string.h **** 
4627:/usr/include/c++/5/bits/basic_string.h ****       /**
4628:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a string.
4629:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4630:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4631:/usr/include/c++/5/bits/basic_string.h ****        *
4632:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
4633:/usr/include/c++/5/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
4634:/usr/include/c++/5/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
4635:/usr/include/c++/5/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
4636:/usr/include/c++/5/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
4637:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
4638:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4639:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
4640:/usr/include/c++/5/bits/basic_string.h ****       */
4641:/usr/include/c++/5/bits/basic_string.h ****       int
4642:/usr/include/c++/5/bits/basic_string.h ****       compare(const basic_string& __str) const
4643:/usr/include/c++/5/bits/basic_string.h ****       {
4644:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
4645:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __osize = __str.size();
4646:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
4647:/usr/include/c++/5/bits/basic_string.h **** 
4648:/usr/include/c++/5/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
4649:/usr/include/c++/5/bits/basic_string.h **** 	if (!__r)
4650:/usr/include/c++/5/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
4651:/usr/include/c++/5/bits/basic_string.h **** 	return __r;
4652:/usr/include/c++/5/bits/basic_string.h ****       }
4653:/usr/include/c++/5/bits/basic_string.h **** 
4654:/usr/include/c++/5/bits/basic_string.h ****       /**
4655:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a string.
4656:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4657:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
4658:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4659:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4660:/usr/include/c++/5/bits/basic_string.h ****        *
4661:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
4662:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
4663:/usr/include/c++/5/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
4664:/usr/include/c++/5/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
4665:/usr/include/c++/5/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
4666:/usr/include/c++/5/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
4667:/usr/include/c++/5/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
4668:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling
4669:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
4670:/usr/include/c++/5/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
4671:/usr/include/c++/5/bits/basic_string.h ****        *  the shorter one is ordered first.
4672:/usr/include/c++/5/bits/basic_string.h ****       */
4673:/usr/include/c++/5/bits/basic_string.h ****       int
4674:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
4675:/usr/include/c++/5/bits/basic_string.h **** 
4676:/usr/include/c++/5/bits/basic_string.h ****       /**
4677:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
4678:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
4679:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4680:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4681:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
4682:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
4683:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4684:/usr/include/c++/5/bits/basic_string.h ****        *
4685:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4686:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
4687:/usr/include/c++/5/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
4688:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
4689:/usr/include/c++/5/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
4690:/usr/include/c++/5/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
4691:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
4692:/usr/include/c++/5/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
4693:/usr/include/c++/5/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
4694:/usr/include/c++/5/bits/basic_string.h ****        *  calling
4695:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
4696:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4697:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
4698:/usr/include/c++/5/bits/basic_string.h ****       */
4699:/usr/include/c++/5/bits/basic_string.h ****       int
4700:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
4701:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
4702:/usr/include/c++/5/bits/basic_string.h **** 
4703:/usr/include/c++/5/bits/basic_string.h ****       /**
4704:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a C string.
4705:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
4706:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4707:/usr/include/c++/5/bits/basic_string.h ****        *
4708:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
4709:/usr/include/c++/5/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
4710:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
4711:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
4712:/usr/include/c++/5/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
4713:/usr/include/c++/5/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
4714:/usr/include/c++/5/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
4715:/usr/include/c++/5/bits/basic_string.h ****        *  ordered first.
4716:/usr/include/c++/5/bits/basic_string.h ****       */
4717:/usr/include/c++/5/bits/basic_string.h ****       int
4718:/usr/include/c++/5/bits/basic_string.h ****       compare(const _CharT* __s) const;
4719:/usr/include/c++/5/bits/basic_string.h **** 
4720:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4721:/usr/include/c++/5/bits/basic_string.h ****       // 5 String::compare specification questionable
4722:/usr/include/c++/5/bits/basic_string.h ****       /**
4723:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
4724:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4725:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4726:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
4727:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4728:/usr/include/c++/5/bits/basic_string.h ****        *
4729:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4730:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
4731:/usr/include/c++/5/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
4732:/usr/include/c++/5/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
4733:/usr/include/c++/5/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
4734:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
4735:/usr/include/c++/5/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
4736:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two string by calling
4737:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
4738:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4739:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
4740:/usr/include/c++/5/bits/basic_string.h ****       */
4741:/usr/include/c++/5/bits/basic_string.h ****       int
4742:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
4743:/usr/include/c++/5/bits/basic_string.h **** 
4744:/usr/include/c++/5/bits/basic_string.h ****       /**
4745:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
4746:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4747:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4748:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  character %array to compare against.
4749:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
4750:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4751:/usr/include/c++/5/bits/basic_string.h ****        *
4752:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4753:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
4754:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
4755:/usr/include/c++/5/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
4756:/usr/include/c++/5/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
4757:/usr/include/c++/5/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
4758:/usr/include/c++/5/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
4759:/usr/include/c++/5/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
4760:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two strings by calling
4761:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
4762:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4763:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
4764:/usr/include/c++/5/bits/basic_string.h ****        *
4765:/usr/include/c++/5/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
4766:/usr/include/c++/5/bits/basic_string.h ****        *  no special meaning.
4767:/usr/include/c++/5/bits/basic_string.h ****       */
4768:/usr/include/c++/5/bits/basic_string.h ****       int
4769:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
4770:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2) const;
4771:/usr/include/c++/5/bits/basic_string.h ****   };
4772:/usr/include/c++/5/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
4773:/usr/include/c++/5/bits/basic_string.h **** 
4774:/usr/include/c++/5/bits/basic_string.h ****   // operator+
4775:/usr/include/c++/5/bits/basic_string.h ****   /**
4776:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate two strings.
4777:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4778:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4779:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4780:/usr/include/c++/5/bits/basic_string.h ****    */
4781:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4782:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
4783:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4784:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4785:/usr/include/c++/5/bits/basic_string.h ****     {
4786:/usr/include/c++/5/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4787:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
4788:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4789:/usr/include/c++/5/bits/basic_string.h ****     }
4790:/usr/include/c++/5/bits/basic_string.h **** 
4791:/usr/include/c++/5/bits/basic_string.h ****   /**
4792:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
4793:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4794:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4795:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4796:/usr/include/c++/5/bits/basic_string.h ****    */
4797:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4798:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4799:/usr/include/c++/5/bits/basic_string.h ****     operator+(const _CharT* __lhs,
4800:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4801:/usr/include/c++/5/bits/basic_string.h **** 
4802:/usr/include/c++/5/bits/basic_string.h ****   /**
4803:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate character and string.
4804:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4805:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4806:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4807:/usr/include/c++/5/bits/basic_string.h ****    */
4808:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4809:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4810:/usr/include/c++/5/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4811:/usr/include/c++/5/bits/basic_string.h **** 
4812:/usr/include/c++/5/bits/basic_string.h ****   /**
4813:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
4814:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4815:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4816:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4817:/usr/include/c++/5/bits/basic_string.h ****    */
4818:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4819:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4820:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4821:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __rhs)
4822:/usr/include/c++/5/bits/basic_string.h ****     {
4823:/usr/include/c++/5/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4824:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
4825:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4826:/usr/include/c++/5/bits/basic_string.h ****     }
4827:/usr/include/c++/5/bits/basic_string.h **** 
4828:/usr/include/c++/5/bits/basic_string.h ****   /**
4829:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate string and character.
4830:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4831:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4832:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4833:/usr/include/c++/5/bits/basic_string.h ****    */
4834:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4835:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4836:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
4837:/usr/include/c++/5/bits/basic_string.h ****     {
4838:/usr/include/c++/5/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
4839:/usr/include/c++/5/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
4840:/usr/include/c++/5/bits/basic_string.h ****       __string_type __str(__lhs);
4841:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
4842:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4843:/usr/include/c++/5/bits/basic_string.h ****     }
4844:/usr/include/c++/5/bits/basic_string.h **** 
4845:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
4846:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4847:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4848:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4849:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4850:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
4851:/usr/include/c++/5/bits/basic_string.h **** 
4852:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4853:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4854:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4855:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4856:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
4857:/usr/include/c++/5/bits/basic_string.h **** 
4858:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4859:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4860:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4861:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4862:/usr/include/c++/5/bits/basic_string.h ****     {
4863:/usr/include/c++/5/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
4864:/usr/include/c++/5/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
4865:/usr/include/c++/5/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
4866:/usr/include/c++/5/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
4867:/usr/include/c++/5/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
4868:/usr/include/c++/5/bits/basic_string.h ****     }
4869:/usr/include/c++/5/bits/basic_string.h **** 
4870:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4871:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4872:/usr/include/c++/5/bits/basic_string.h ****     operator+(const _CharT* __lhs,
4873:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4874:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
4875:/usr/include/c++/5/bits/basic_string.h **** 
4876:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4877:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4878:/usr/include/c++/5/bits/basic_string.h ****     operator+(_CharT __lhs,
4879:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4880:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
4881:/usr/include/c++/5/bits/basic_string.h **** 
4882:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4883:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4884:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4885:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __rhs)
4886:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
4887:/usr/include/c++/5/bits/basic_string.h **** 
4888:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4889:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4890:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4891:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT __rhs)
4892:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
4893:/usr/include/c++/5/bits/basic_string.h **** #endif
4894:/usr/include/c++/5/bits/basic_string.h **** 
4895:/usr/include/c++/5/bits/basic_string.h ****   // operator ==
4896:/usr/include/c++/5/bits/basic_string.h ****   /**
4897:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
4898:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4899:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Second string.
4900:/usr/include/c++/5/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
4901:/usr/include/c++/5/bits/basic_string.h ****    */
4902:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4903:/usr/include/c++/5/bits/basic_string.h ****     inline bool
4904:/usr/include/c++/5/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4905:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4906:/usr/include/c++/5/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
4907:/usr/include/c++/5/bits/basic_string.h **** 
4908:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT>
4909:/usr/include/c++/5/bits/basic_string.h ****     inline
4910:/usr/include/c++/5/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
4911:/usr/include/c++/5/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
4912:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs)
4913:/usr/include/c++/5/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
4914:/usr/include/c++/5/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
4915:/usr/include/c++/5/bits/basic_string.h **** 						    __lhs.size())); }
4916:/usr/include/c++/5/bits/basic_string.h **** 
4917:/usr/include/c++/5/bits/basic_string.h ****   /**
4918:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
4919:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  C string.
4920:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  String.
4921:/usr/include/c++/5/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
4922:/usr/include/c++/5/bits/basic_string.h ****    */
4923:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4924:/usr/include/c++/5/bits/basic_string.h ****     inline bool
4925:/usr/include/c++/5/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 8606              		.loc 6 4925 0
 8607              		.cfi_startproc
 8608 0000 55       		pushq	%rbp
 8609              		.cfi_def_cfa_offset 16
 8610              		.cfi_offset 6, -16
 8611 0001 4889E5   		movq	%rsp, %rbp
 8612              		.cfi_def_cfa_register 6
 8613 0004 4883EC10 		subq	$16, %rsp
 8614 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8615 000c 488975F0 		movq	%rsi, -16(%rbp)
4926:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4927:/usr/include/c++/5/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 8616              		.loc 6 4927 0
 8617 0010 488B55F8 		movq	-8(%rbp), %rdx
 8618 0014 488B45F0 		movq	-16(%rbp), %rax
 8619 0018 4889D6   		movq	%rdx, %rsi
 8620 001b 4889C7   		movq	%rax, %rdi
 8621 001e E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 8621      00
 8622 0023 85C0     		testl	%eax, %eax
 8623 0025 0F94C0   		sete	%al
 8624 0028 C9       		leave
 8625              		.cfi_def_cfa 7, 8
 8626 0029 C3       		ret
 8627              		.cfi_endproc
 8628              	.LFE1499:
 8630              		.section	.rodata
 8631 0977 00       		.align 8
 8634              	_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 8635 0978 00000000 		.quad	0
 8635      00000000 
 8636 0980 00000000 		.quad	_ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
 8636      00000000 
 8637 0988 00000000 		.quad	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
 8637      00000000 
 8638 0990 00000000 		.quad	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev
 8638      00000000 
 8639 0998 00000000 		.quad	_ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv
 8639      00000000 
 8640              		.text
 8641              		.align 2
 8643              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD2Ev:
 8644              	.LFB1550:
 159:TestXmlTestReporter.cpp **** {
 8645              		.loc 3 159 0
 8646              		.cfi_startproc
 8647 4238 55       		pushq	%rbp
 8648              		.cfi_def_cfa_offset 16
 8649              		.cfi_offset 6, -16
 8650 4239 4889E5   		movq	%rsp, %rbp
 8651              		.cfi_def_cfa_register 6
 8652 423c 4883EC10 		subq	$16, %rsp
 8653 4240 48897DF8 		movq	%rdi, -8(%rbp)
 8654              	.LBB164:
 159:TestXmlTestReporter.cpp **** {
 8655              		.loc 3 159 0
 8656 4244 BA000000 		movl	$_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE+16, %edx
 8656      00
 8657 4249 488B45F8 		movq	-8(%rbp), %rax
 8658 424d 488910   		movq	%rdx, (%rax)
 8659 4250 488B45F8 		movq	-8(%rbp), %rax
 8660 4254 4889C7   		movq	%rax, %rdi
 8661 4257 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8661      00
 8662              	.LBE164:
 8663 425c B8000000 		movl	$0, %eax
 8663      00
 8664 4261 85C0     		testl	%eax, %eax
 8665 4263 740C     		je	.L476
 159:TestXmlTestReporter.cpp **** {
 8666              		.loc 3 159 0 is_stmt 0 discriminator 4
 8667 4265 488B45F8 		movq	-8(%rbp), %rax
 8668 4269 4889C7   		movq	%rax, %rdi
 8669 426c E8000000 		call	_ZdlPv
 8669      00
 8670              	.L476:
 159:TestXmlTestReporter.cpp **** {
 8671              		.loc 3 159 0
 8672 4271 C9       		leave
 8673              		.cfi_def_cfa 7, 8
 8674 4272 C3       		ret
 8675              		.cfi_endproc
 8676              	.LFE1550:
 8678              		.set	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev,_ZN12_GLOBAL__N_142TestXmlT
 8679 4273 90       		.align 2
 8681              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev:
 8682              	.LFB1552:
 159:TestXmlTestReporter.cpp **** {
 8683              		.loc 3 159 0 is_stmt 1
 8684              		.cfi_startproc
 8685 4274 55       		pushq	%rbp
 8686              		.cfi_def_cfa_offset 16
 8687              		.cfi_offset 6, -16
 8688 4275 4889E5   		movq	%rsp, %rbp
 8689              		.cfi_def_cfa_register 6
 8690 4278 4883EC10 		subq	$16, %rsp
 8691 427c 48897DF8 		movq	%rdi, -8(%rbp)
 159:TestXmlTestReporter.cpp **** {
 8692              		.loc 3 159 0
 8693 4280 488B45F8 		movq	-8(%rbp), %rax
 8694 4284 4889C7   		movq	%rax, %rdi
 8695 4287 E8ACFFFF 		call	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
 8695      FF
 8696 428c 488B45F8 		movq	-8(%rbp), %rax
 8697 4290 4889C7   		movq	%rax, %rdi
 8698 4293 E8000000 		call	_ZdlPv
 8698      00
 8699 4298 C9       		leave
 8700              		.cfi_def_cfa 7, 8
 8701 4299 C3       		ret
 8702              		.cfi_endproc
 8703              	.LFE1552:
 8705              		.section	.rodata
 8706              		.align 8
 8709              	_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 8710 09a0 00000000 		.quad	0
 8710      00000000 
 8711 09a8 00000000 		.quad	_ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
 8711      00000000 
 8712 09b0 00000000 		.quad	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
 8712      00000000 
 8713 09b8 00000000 		.quad	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev
 8713      00000000 
 8714 09c0 00000000 		.quad	_ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv
 8714      00000000 
 8715              		.text
 8716              		.align 2
 8718              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD2Ev:
 8719              	.LFB1554:
 135:TestXmlTestReporter.cpp **** {
 8720              		.loc 3 135 0
 8721              		.cfi_startproc
 8722 429a 55       		pushq	%rbp
 8723              		.cfi_def_cfa_offset 16
 8724              		.cfi_offset 6, -16
 8725 429b 4889E5   		movq	%rsp, %rbp
 8726              		.cfi_def_cfa_register 6
 8727 429e 4883EC10 		subq	$16, %rsp
 8728 42a2 48897DF8 		movq	%rdi, -8(%rbp)
 8729              	.LBB165:
 135:TestXmlTestReporter.cpp **** {
 8730              		.loc 3 135 0
 8731 42a6 BA000000 		movl	$_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE+16, %edx
 8731      00
 8732 42ab 488B45F8 		movq	-8(%rbp), %rax
 8733 42af 488910   		movq	%rdx, (%rax)
 8734 42b2 488B45F8 		movq	-8(%rbp), %rax
 8735 42b6 4889C7   		movq	%rax, %rdi
 8736 42b9 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8736      00
 8737              	.LBE165:
 8738 42be B8000000 		movl	$0, %eax
 8738      00
 8739 42c3 85C0     		testl	%eax, %eax
 8740 42c5 740C     		je	.L479
 135:TestXmlTestReporter.cpp **** {
 8741              		.loc 3 135 0 is_stmt 0 discriminator 4
 8742 42c7 488B45F8 		movq	-8(%rbp), %rax
 8743 42cb 4889C7   		movq	%rax, %rdi
 8744 42ce E8000000 		call	_ZdlPv
 8744      00
 8745              	.L479:
 135:TestXmlTestReporter.cpp **** {
 8746              		.loc 3 135 0
 8747 42d3 C9       		leave
 8748              		.cfi_def_cfa 7, 8
 8749 42d4 C3       		ret
 8750              		.cfi_endproc
 8751              	.LFE1554:
 8753              		.set	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev,_ZN12_GLOBAL__N_149T
 8754 42d5 90       		.align 2
 8756              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev:
 8757              	.LFB1556:
 135:TestXmlTestReporter.cpp **** {
 8758              		.loc 3 135 0 is_stmt 1
 8759              		.cfi_startproc
 8760 42d6 55       		pushq	%rbp
 8761              		.cfi_def_cfa_offset 16
 8762              		.cfi_offset 6, -16
 8763 42d7 4889E5   		movq	%rsp, %rbp
 8764              		.cfi_def_cfa_register 6
 8765 42da 4883EC10 		subq	$16, %rsp
 8766 42de 48897DF8 		movq	%rdi, -8(%rbp)
 135:TestXmlTestReporter.cpp **** {
 8767              		.loc 3 135 0
 8768 42e2 488B45F8 		movq	-8(%rbp), %rax
 8769 42e6 4889C7   		movq	%rax, %rdi
 8770 42e9 E8ACFFFF 		call	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
 8770      FF
 8771 42ee 488B45F8 		movq	-8(%rbp), %rax
 8772 42f2 4889C7   		movq	%rax, %rdi
 8773 42f5 E8000000 		call	_ZdlPv
 8773      00
 8774 42fa C9       		leave
 8775              		.cfi_def_cfa 7, 8
 8776 42fb C3       		ret
 8777              		.cfi_endproc
 8778              	.LFE1556:
 8780              		.section	.rodata
 8781              		.align 8
 8784              	_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 8785 09c8 00000000 		.quad	0
 8785      00000000 
 8786 09d0 00000000 		.quad	_ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 8786      00000000 
 8787 09d8 00000000 		.quad	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
 8787      00000000 
 8788 09e0 00000000 		.quad	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev
 8788      00000000 
 8789 09e8 00000000 		.quad	_ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv
 8789      00000000 
 8790              		.text
 8791              		.align 2
 8793              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD2Ev:
 8794              	.LFB1558:
 115:TestXmlTestReporter.cpp **** {
 8795              		.loc 3 115 0
 8796              		.cfi_startproc
 8797 42fc 55       		pushq	%rbp
 8798              		.cfi_def_cfa_offset 16
 8799              		.cfi_offset 6, -16
 8800 42fd 4889E5   		movq	%rsp, %rbp
 8801              		.cfi_def_cfa_register 6
 8802 4300 4883EC10 		subq	$16, %rsp
 8803 4304 48897DF8 		movq	%rdi, -8(%rbp)
 8804              	.LBB166:
 115:TestXmlTestReporter.cpp **** {
 8805              		.loc 3 115 0
 8806 4308 BA000000 		movl	$_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE+16, %edx
 8806      00
 8807 430d 488B45F8 		movq	-8(%rbp), %rax
 8808 4311 488910   		movq	%rdx, (%rax)
 8809 4314 488B45F8 		movq	-8(%rbp), %rax
 8810 4318 4889C7   		movq	%rax, %rdi
 8811 431b E8000000 		call	_ZN8UnitTest4TestD2Ev
 8811      00
 8812              	.LBE166:
 8813 4320 B8000000 		movl	$0, %eax
 8813      00
 8814 4325 85C0     		testl	%eax, %eax
 8815 4327 740C     		je	.L482
 115:TestXmlTestReporter.cpp **** {
 8816              		.loc 3 115 0 is_stmt 0 discriminator 4
 8817 4329 488B45F8 		movq	-8(%rbp), %rax
 8818 432d 4889C7   		movq	%rax, %rdi
 8819 4330 E8000000 		call	_ZdlPv
 8819      00
 8820              	.L482:
 115:TestXmlTestReporter.cpp **** {
 8821              		.loc 3 115 0
 8822 4335 C9       		leave
 8823              		.cfi_def_cfa 7, 8
 8824 4336 C3       		ret
 8825              		.cfi_endproc
 8826              	.LFE1558:
 8828              		.set	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev,_ZN12_GLOBAL__N_1
 8829 4337 90       		.align 2
 8831              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev:
 8832              	.LFB1560:
 115:TestXmlTestReporter.cpp **** {
 8833              		.loc 3 115 0 is_stmt 1
 8834              		.cfi_startproc
 8835 4338 55       		pushq	%rbp
 8836              		.cfi_def_cfa_offset 16
 8837              		.cfi_offset 6, -16
 8838 4339 4889E5   		movq	%rsp, %rbp
 8839              		.cfi_def_cfa_register 6
 8840 433c 4883EC10 		subq	$16, %rsp
 8841 4340 48897DF8 		movq	%rdi, -8(%rbp)
 115:TestXmlTestReporter.cpp **** {
 8842              		.loc 3 115 0
 8843 4344 488B45F8 		movq	-8(%rbp), %rax
 8844 4348 4889C7   		movq	%rax, %rdi
 8845 434b E8ACFFFF 		call	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
 8845      FF
 8846 4350 488B45F8 		movq	-8(%rbp), %rax
 8847 4354 4889C7   		movq	%rax, %rdi
 8848 4357 E8000000 		call	_ZdlPv
 8848      00
 8849 435c C9       		leave
 8850              		.cfi_def_cfa 7, 8
 8851 435d C3       		ret
 8852              		.cfi_endproc
 8853              	.LFE1560:
 8855              		.section	.rodata
 8856              		.align 8
 8859              	_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 8860 09f0 00000000 		.quad	0
 8860      00000000 
 8861 09f8 00000000 		.quad	_ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 8861      00000000 
 8862 0a00 00000000 		.quad	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
 8862      00000000 
 8863 0a08 00000000 		.quad	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev
 8863      00000000 
 8864 0a10 00000000 		.quad	_ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv
 8864      00000000 
 8865              		.text
 8866              		.align 2
 8868              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD2Ev:
 8869              	.LFB1562:
  96:TestXmlTestReporter.cpp **** {
 8870              		.loc 3 96 0
 8871              		.cfi_startproc
 8872 435e 55       		pushq	%rbp
 8873              		.cfi_def_cfa_offset 16
 8874              		.cfi_offset 6, -16
 8875 435f 4889E5   		movq	%rsp, %rbp
 8876              		.cfi_def_cfa_register 6
 8877 4362 4883EC10 		subq	$16, %rsp
 8878 4366 48897DF8 		movq	%rdi, -8(%rbp)
 8879              	.LBB167:
  96:TestXmlTestReporter.cpp **** {
 8880              		.loc 3 96 0
 8881 436a BA000000 		movl	$_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE+16, %edx
 8881      00
 8882 436f 488B45F8 		movq	-8(%rbp), %rax
 8883 4373 488910   		movq	%rdx, (%rax)
 8884 4376 488B45F8 		movq	-8(%rbp), %rax
 8885 437a 4889C7   		movq	%rax, %rdi
 8886 437d E8000000 		call	_ZN8UnitTest4TestD2Ev
 8886      00
 8887              	.LBE167:
 8888 4382 B8000000 		movl	$0, %eax
 8888      00
 8889 4387 85C0     		testl	%eax, %eax
 8890 4389 740C     		je	.L485
  96:TestXmlTestReporter.cpp **** {
 8891              		.loc 3 96 0 is_stmt 0 discriminator 4
 8892 438b 488B45F8 		movq	-8(%rbp), %rax
 8893 438f 4889C7   		movq	%rax, %rdi
 8894 4392 E8000000 		call	_ZdlPv
 8894      00
 8895              	.L485:
  96:TestXmlTestReporter.cpp **** {
 8896              		.loc 3 96 0
 8897 4397 C9       		leave
 8898              		.cfi_def_cfa 7, 8
 8899 4398 C3       		ret
 8900              		.cfi_endproc
 8901              	.LFE1562:
 8903              		.set	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev,_ZN12_GL
 8904 4399 90       		.align 2
 8906              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev:
 8907              	.LFB1564:
  96:TestXmlTestReporter.cpp **** {
 8908              		.loc 3 96 0 is_stmt 1
 8909              		.cfi_startproc
 8910 439a 55       		pushq	%rbp
 8911              		.cfi_def_cfa_offset 16
 8912              		.cfi_offset 6, -16
 8913 439b 4889E5   		movq	%rsp, %rbp
 8914              		.cfi_def_cfa_register 6
 8915 439e 4883EC10 		subq	$16, %rsp
 8916 43a2 48897DF8 		movq	%rdi, -8(%rbp)
  96:TestXmlTestReporter.cpp **** {
 8917              		.loc 3 96 0
 8918 43a6 488B45F8 		movq	-8(%rbp), %rax
 8919 43aa 4889C7   		movq	%rax, %rdi
 8920 43ad E8ACFFFF 		call	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
 8920      FF
 8921 43b2 488B45F8 		movq	-8(%rbp), %rax
 8922 43b6 4889C7   		movq	%rax, %rdi
 8923 43b9 E8000000 		call	_ZdlPv
 8923      00
 8924 43be C9       		leave
 8925              		.cfi_def_cfa 7, 8
 8926 43bf C3       		ret
 8927              		.cfi_endproc
 8928              	.LFE1564:
 8930              		.section	.rodata
 8931              		.align 8
 8934              	_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 8935 0a18 00000000 		.quad	0
 8935      00000000 
 8936 0a20 00000000 		.quad	_ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 8936      00000000 
 8937 0a28 00000000 		.quad	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
 8937      00000000 
 8938 0a30 00000000 		.quad	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev
 8938      00000000 
 8939 0a38 00000000 		.quad	_ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImp
 8939      00000000 
 8940              		.text
 8941              		.align 2
 8943              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD2Ev:
 8944              	.LFB1566:
  80:TestXmlTestReporter.cpp **** {
 8945              		.loc 3 80 0
 8946              		.cfi_startproc
 8947 43c0 55       		pushq	%rbp
 8948              		.cfi_def_cfa_offset 16
 8949              		.cfi_offset 6, -16
 8950 43c1 4889E5   		movq	%rsp, %rbp
 8951              		.cfi_def_cfa_register 6
 8952 43c4 4883EC10 		subq	$16, %rsp
 8953 43c8 48897DF8 		movq	%rdi, -8(%rbp)
 8954              	.LBB168:
  80:TestXmlTestReporter.cpp **** {
 8955              		.loc 3 80 0
 8956 43cc BA000000 		movl	$_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE+16, 
 8956      00
 8957 43d1 488B45F8 		movq	-8(%rbp), %rax
 8958 43d5 488910   		movq	%rdx, (%rax)
 8959 43d8 488B45F8 		movq	-8(%rbp), %rax
 8960 43dc 4889C7   		movq	%rax, %rdi
 8961 43df E8000000 		call	_ZN8UnitTest4TestD2Ev
 8961      00
 8962              	.LBE168:
 8963 43e4 B8000000 		movl	$0, %eax
 8963      00
 8964 43e9 85C0     		testl	%eax, %eax
 8965 43eb 740C     		je	.L488
  80:TestXmlTestReporter.cpp **** {
 8966              		.loc 3 80 0 is_stmt 0 discriminator 4
 8967 43ed 488B45F8 		movq	-8(%rbp), %rax
 8968 43f1 4889C7   		movq	%rax, %rdi
 8969 43f4 E8000000 		call	_ZdlPv
 8969      00
 8970              	.L488:
  80:TestXmlTestReporter.cpp **** {
 8971              		.loc 3 80 0
 8972 43f9 C9       		leave
 8973              		.cfi_def_cfa 7, 8
 8974 43fa C3       		ret
 8975              		.cfi_endproc
 8976              	.LFE1566:
 8978              		.set	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev,_ZN1
 8979 43fb 90       		.align 2
 8981              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev:
 8982              	.LFB1568:
  80:TestXmlTestReporter.cpp **** {
 8983              		.loc 3 80 0 is_stmt 1
 8984              		.cfi_startproc
 8985 43fc 55       		pushq	%rbp
 8986              		.cfi_def_cfa_offset 16
 8987              		.cfi_offset 6, -16
 8988 43fd 4889E5   		movq	%rsp, %rbp
 8989              		.cfi_def_cfa_register 6
 8990 4400 4883EC10 		subq	$16, %rsp
 8991 4404 48897DF8 		movq	%rdi, -8(%rbp)
  80:TestXmlTestReporter.cpp **** {
 8992              		.loc 3 80 0
 8993 4408 488B45F8 		movq	-8(%rbp), %rax
 8994 440c 4889C7   		movq	%rax, %rdi
 8995 440f E8ACFFFF 		call	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
 8995      FF
 8996 4414 488B45F8 		movq	-8(%rbp), %rax
 8997 4418 4889C7   		movq	%rax, %rdi
 8998 441b E8000000 		call	_ZdlPv
 8998      00
 8999 4420 C9       		leave
 9000              		.cfi_def_cfa 7, 8
 9001 4421 C3       		ret
 9002              		.cfi_endproc
 9003              	.LFE1568:
 9005              		.section	.rodata
 9006              		.align 8
 9009              	_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9010 0a40 00000000 		.quad	0
 9010      00000000 
 9011 0a48 00000000 		.quad	_ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
 9011      00000000 
 9012 0a50 00000000 		.quad	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
 9012      00000000 
 9013 0a58 00000000 		.quad	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev
 9013      00000000 
 9014 0a60 00000000 		.quad	_ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv
 9014      00000000 
 9015              		.text
 9016              		.align 2
 9018              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD2Ev:
 9019              	.LFB1570:
  68:TestXmlTestReporter.cpp **** {
 9020              		.loc 3 68 0
 9021              		.cfi_startproc
 9022 4422 55       		pushq	%rbp
 9023              		.cfi_def_cfa_offset 16
 9024              		.cfi_offset 6, -16
 9025 4423 4889E5   		movq	%rsp, %rbp
 9026              		.cfi_def_cfa_register 6
 9027 4426 4883EC10 		subq	$16, %rsp
 9028 442a 48897DF8 		movq	%rdi, -8(%rbp)
 9029              	.LBB169:
  68:TestXmlTestReporter.cpp **** {
 9030              		.loc 3 68 0
 9031 442e BA000000 		movl	$_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE+16, %edx
 9031      00
 9032 4433 488B45F8 		movq	-8(%rbp), %rax
 9033 4437 488910   		movq	%rdx, (%rax)
 9034 443a 488B45F8 		movq	-8(%rbp), %rax
 9035 443e 4889C7   		movq	%rax, %rdi
 9036 4441 E8000000 		call	_ZN8UnitTest4TestD2Ev
 9036      00
 9037              	.LBE169:
 9038 4446 B8000000 		movl	$0, %eax
 9038      00
 9039 444b 85C0     		testl	%eax, %eax
 9040 444d 740C     		je	.L491
  68:TestXmlTestReporter.cpp **** {
 9041              		.loc 3 68 0 is_stmt 0 discriminator 4
 9042 444f 488B45F8 		movq	-8(%rbp), %rax
 9043 4453 4889C7   		movq	%rax, %rdi
 9044 4456 E8000000 		call	_ZdlPv
 9044      00
 9045              	.L491:
  68:TestXmlTestReporter.cpp **** {
 9046              		.loc 3 68 0
 9047 445b C9       		leave
 9048              		.cfi_def_cfa 7, 8
 9049 445c C3       		ret
 9050              		.cfi_endproc
 9051              	.LFE1570:
 9053              		.set	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev,_ZN12_GLOBAL__N_150
 9054 445d 90       		.align 2
 9056              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev:
 9057              	.LFB1572:
  68:TestXmlTestReporter.cpp **** {
 9058              		.loc 3 68 0 is_stmt 1
 9059              		.cfi_startproc
 9060 445e 55       		pushq	%rbp
 9061              		.cfi_def_cfa_offset 16
 9062              		.cfi_offset 6, -16
 9063 445f 4889E5   		movq	%rsp, %rbp
 9064              		.cfi_def_cfa_register 6
 9065 4462 4883EC10 		subq	$16, %rsp
 9066 4466 48897DF8 		movq	%rdi, -8(%rbp)
  68:TestXmlTestReporter.cpp **** {
 9067              		.loc 3 68 0
 9068 446a 488B45F8 		movq	-8(%rbp), %rax
 9069 446e 4889C7   		movq	%rax, %rdi
 9070 4471 E8ACFFFF 		call	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
 9070      FF
 9071 4476 488B45F8 		movq	-8(%rbp), %rax
 9072 447a 4889C7   		movq	%rax, %rdi
 9073 447d E8000000 		call	_ZdlPv
 9073      00
 9074 4482 C9       		leave
 9075              		.cfi_def_cfa 7, 8
 9076 4483 C3       		ret
 9077              		.cfi_endproc
 9078              	.LFE1572:
 9080              		.section	.rodata
 9081              		.align 8
 9084              	_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9085 0a68 00000000 		.quad	0
 9085      00000000 
 9086 0a70 00000000 		.quad	_ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 9086      00000000 
 9087 0a78 00000000 		.quad	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
 9087      00000000 
 9088 0a80 00000000 		.quad	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev
 9088      00000000 
 9089 0a88 00000000 		.quad	_ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunIm
 9089      00000000 
 9090              		.text
 9091              		.align 2
 9093              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD2Ev:
 9094              	.LFB1574:
  55:TestXmlTestReporter.cpp **** {
 9095              		.loc 3 55 0
 9096              		.cfi_startproc
 9097 4484 55       		pushq	%rbp
 9098              		.cfi_def_cfa_offset 16
 9099              		.cfi_offset 6, -16
 9100 4485 4889E5   		movq	%rsp, %rbp
 9101              		.cfi_def_cfa_register 6
 9102 4488 4883EC10 		subq	$16, %rsp
 9103 448c 48897DF8 		movq	%rdi, -8(%rbp)
 9104              	.LBB170:
  55:TestXmlTestReporter.cpp **** {
 9105              		.loc 3 55 0
 9106 4490 BA000000 		movl	$_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE+16,
 9106      00
 9107 4495 488B45F8 		movq	-8(%rbp), %rax
 9108 4499 488910   		movq	%rdx, (%rax)
 9109 449c 488B45F8 		movq	-8(%rbp), %rax
 9110 44a0 4889C7   		movq	%rax, %rdi
 9111 44a3 E8000000 		call	_ZN8UnitTest4TestD2Ev
 9111      00
 9112              	.LBE170:
 9113 44a8 B8000000 		movl	$0, %eax
 9113      00
 9114 44ad 85C0     		testl	%eax, %eax
 9115 44af 740C     		je	.L494
  55:TestXmlTestReporter.cpp **** {
 9116              		.loc 3 55 0 is_stmt 0 discriminator 4
 9117 44b1 488B45F8 		movq	-8(%rbp), %rax
 9118 44b5 4889C7   		movq	%rax, %rdi
 9119 44b8 E8000000 		call	_ZdlPv
 9119      00
 9120              	.L494:
  55:TestXmlTestReporter.cpp **** {
 9121              		.loc 3 55 0
 9122 44bd C9       		leave
 9123              		.cfi_def_cfa 7, 8
 9124 44be C3       		ret
 9125              		.cfi_endproc
 9126              	.LFE1574:
 9128              		.set	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev,_ZN
 9129 44bf 90       		.align 2
 9131              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev:
 9132              	.LFB1576:
  55:TestXmlTestReporter.cpp **** {
 9133              		.loc 3 55 0 is_stmt 1
 9134              		.cfi_startproc
 9135 44c0 55       		pushq	%rbp
 9136              		.cfi_def_cfa_offset 16
 9137              		.cfi_offset 6, -16
 9138 44c1 4889E5   		movq	%rsp, %rbp
 9139              		.cfi_def_cfa_register 6
 9140 44c4 4883EC10 		subq	$16, %rsp
 9141 44c8 48897DF8 		movq	%rdi, -8(%rbp)
  55:TestXmlTestReporter.cpp **** {
 9142              		.loc 3 55 0
 9143 44cc 488B45F8 		movq	-8(%rbp), %rax
 9144 44d0 4889C7   		movq	%rax, %rdi
 9145 44d3 E8ACFFFF 		call	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
 9145      FF
 9146 44d8 488B45F8 		movq	-8(%rbp), %rax
 9147 44dc 4889C7   		movq	%rax, %rdi
 9148 44df E8000000 		call	_ZdlPv
 9148      00
 9149 44e4 C9       		leave
 9150              		.cfi_def_cfa 7, 8
 9151 44e5 C3       		ret
 9152              		.cfi_endproc
 9153              	.LFE1576:
 9155              		.section	.rodata
 9156              		.align 8
 9159              	_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 9160 0a90 00000000 		.quad	0
 9160      00000000 
 9161 0a98 00000000 		.quad	_ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
 9161      00000000 
 9162 0aa0 00000000 		.quad	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
 9162      00000000 
 9163 0aa8 00000000 		.quad	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev
 9163      00000000 
 9164 0ab0 00000000 		.quad	_ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv
 9164      00000000 
 9165              		.text
 9166              		.align 2
 9168              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD2Ev:
 9169              	.LFB1578:
  34:TestXmlTestReporter.cpp **** {
 9170              		.loc 3 34 0
 9171              		.cfi_startproc
 9172 44e6 55       		pushq	%rbp
 9173              		.cfi_def_cfa_offset 16
 9174              		.cfi_offset 6, -16
 9175 44e7 4889E5   		movq	%rsp, %rbp
 9176              		.cfi_def_cfa_register 6
 9177 44ea 4883EC10 		subq	$16, %rsp
 9178 44ee 48897DF8 		movq	%rdi, -8(%rbp)
 9179              	.LBB171:
  34:TestXmlTestReporter.cpp **** {
 9180              		.loc 3 34 0
 9181 44f2 BA000000 		movl	$_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE+16, %edx
 9181      00
 9182 44f7 488B45F8 		movq	-8(%rbp), %rax
 9183 44fb 488910   		movq	%rdx, (%rax)
 9184 44fe 488B45F8 		movq	-8(%rbp), %rax
 9185 4502 4889C7   		movq	%rax, %rdi
 9186 4505 E8000000 		call	_ZN8UnitTest4TestD2Ev
 9186      00
 9187              	.LBE171:
 9188 450a B8000000 		movl	$0, %eax
 9188      00
 9189 450f 85C0     		testl	%eax, %eax
 9190 4511 740C     		je	.L497
  34:TestXmlTestReporter.cpp **** {
 9191              		.loc 3 34 0 is_stmt 0 discriminator 4
 9192 4513 488B45F8 		movq	-8(%rbp), %rax
 9193 4517 4889C7   		movq	%rax, %rdi
 9194 451a E8000000 		call	_ZdlPv
 9194      00
 9195              	.L497:
  34:TestXmlTestReporter.cpp **** {
 9196              		.loc 3 34 0
 9197 451f C9       		leave
 9198              		.cfi_def_cfa 7, 8
 9199 4520 C3       		ret
 9200              		.cfi_endproc
 9201              	.LFE1578:
 9203              		.set	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev,_ZN12_GLOBAL__N
 9204 4521 90       		.align 2
 9206              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev:
 9207              	.LFB1580:
  34:TestXmlTestReporter.cpp **** {
 9208              		.loc 3 34 0 is_stmt 1
 9209              		.cfi_startproc
 9210 4522 55       		pushq	%rbp
 9211              		.cfi_def_cfa_offset 16
 9212              		.cfi_offset 6, -16
 9213 4523 4889E5   		movq	%rsp, %rbp
 9214              		.cfi_def_cfa_register 6
 9215 4526 4883EC10 		subq	$16, %rsp
 9216 452a 48897DF8 		movq	%rdi, -8(%rbp)
  34:TestXmlTestReporter.cpp **** {
 9217              		.loc 3 34 0
 9218 452e 488B45F8 		movq	-8(%rbp), %rax
 9219 4532 4889C7   		movq	%rax, %rdi
 9220 4535 E8ACFFFF 		call	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
 9220      FF
 9221 453a 488B45F8 		movq	-8(%rbp), %rax
 9222 453e 4889C7   		movq	%rax, %rdi
 9223 4541 E8000000 		call	_ZdlPv
 9223      00
 9224 4546 C9       		leave
 9225              		.cfi_def_cfa 7, 8
 9226 4547 C3       		ret
 9227              		.cfi_endproc
 9228              	.LFE1580:
 9230              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9231              		.section	.rodata._ZTVN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9232              		.align 8
 9235              	_ZTVN8UnitTest15MemoryOutStreamE:
 9236 0000 90000000 		.quad	144
 9236      00000000 
 9237 0008 00000000 		.quad	0
 9237      00000000 
 9238 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9238      00000000 
 9239 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9239      00000000 
 9240 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9240      00000000 
 9241 0028 70FFFFFF 		.quad	-144
 9241      FFFFFFFF 
 9242 0030 70FFFFFF 		.quad	-144
 9242      FFFFFFFF 
 9243 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9243      00000000 
 9244 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9244      00000000 
 9245 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9245      00000000 
 9246              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9247              		.section	.rodata._ZTTN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9248              		.align 8
 9251              	_ZTTN8UnitTest15MemoryOutStreamE:
 9252 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9252      00000000 
 9253 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9253      00000000 
 9254 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9254      00000000 
 9255 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9255      00000000 
 9256 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9256      00000000 
 9257 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9257      00000000 
 9258              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIc
 9259              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9260              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_trai
 9261              		.align 8
 9264              	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:
 9265 0000 90000000 		.quad	144
 9265      00000000 
 9266 0008 00000000 		.quad	0
 9266      00000000 
 9267 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9267      00000000 
 9268 0018 00000000 		.quad	0
 9268      00000000 
 9269 0020 00000000 		.quad	0
 9269      00000000 
 9270 0028 70FFFFFF 		.quad	-144
 9270      FFFFFFFF 
 9271 0030 70FFFFFF 		.quad	-144
 9271      FFFFFFFF 
 9272 0038 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9272      00000000 
 9273 0040 00000000 		.quad	0
 9273      00000000 
 9274 0048 00000000 		.quad	0
 9274      00000000 
 9275              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9276              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9277              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_So,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStre
 9278              		.align 8
 9281              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9282 0000 90000000 		.quad	144
 9282      00000000 
 9283 0008 00000000 		.quad	0
 9283      00000000 
 9284 0010 00000000 		.quad	_ZTISo
 9284      00000000 
 9285 0018 00000000 		.quad	0
 9285      00000000 
 9286 0020 00000000 		.quad	0
 9286      00000000 
 9287 0028 70FFFFFF 		.quad	-144
 9287      FFFFFFFF 
 9288 0030 70FFFFFF 		.quad	-144
 9288      FFFFFFFF 
 9289 0038 00000000 		.quad	_ZTISo
 9289      00000000 
 9290 0040 00000000 		.quad	0
 9290      00000000 
 9291 0048 00000000 		.quad	0
 9291      00000000 
 9292              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9293              		.align 2
 9294              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 9296              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 9297              	.LFB1583:
  13:../MemoryOutStream.h **** {
 9298              		.loc 2 13 0
 9299              		.cfi_startproc
 9300              		.cfi_personality 0x3,__gxx_personality_v0
 9301              		.cfi_lsda 0x3,.LLSDA1583
 9302 0000 55       		pushq	%rbp
 9303              		.cfi_def_cfa_offset 16
 9304              		.cfi_offset 6, -16
 9305 0001 4889E5   		movq	%rsp, %rbp
 9306              		.cfi_def_cfa_register 6
 9307 0004 53       		pushq	%rbx
 9308 0005 4883EC18 		subq	$24, %rsp
 9309              		.cfi_offset 3, -24
 9310 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9311              	.LBB172:
  13:../MemoryOutStream.h **** {
 9312              		.loc 2 13 0
 9313 000d BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
 9313      00
 9314 0012 488B45E8 		movq	-24(%rbp), %rax
 9315 0016 488910   		movq	%rdx, (%rax)
 9316 0019 BA900000 		movl	$144, %edx
 9316      00
 9317 001e 488B45E8 		movq	-24(%rbp), %rax
 9318 0022 4801D0   		addq	%rdx, %rax
 9319 0025 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
 9319      00
 9320 002a 488910   		movq	%rdx, (%rax)
 9321 002d 488B45E8 		movq	-24(%rbp), %rax
 9322 0031 4883C070 		addq	$112, %rax
 9323 0035 4889C7   		movq	%rax, %rdi
 9324              	.LEHB261:
 9325 0038 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 9325      00
 9326              	.LEHE261:
  13:../MemoryOutStream.h **** {
 9327              		.loc 2 13 0 is_stmt 0 discriminator 14
 9328 003d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9328      00
 9329 0042 488B45E8 		movq	-24(%rbp), %rax
 9330 0046 4889D6   		movq	%rdx, %rsi
 9331 0049 4889C7   		movq	%rax, %rdi
 9332              	.LEHB262:
 9333 004c E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9333      00
 9334              	.LEHE262:
  13:../MemoryOutStream.h **** {
 9335              		.loc 2 13 0 discriminator 20
 9336 0051 B8020000 		movl	$2, %eax
 9336      00
 9337 0056 85C0     		testl	%eax, %eax
 9338 0058 7412     		je	.L501
  13:../MemoryOutStream.h **** {
 9339              		.loc 2 13 0 discriminator 21
 9340 005a 488B45E8 		movq	-24(%rbp), %rax
 9341 005e 48059000 		addq	$144, %rax
 9341      0000
 9342 0064 4889C7   		movq	%rax, %rdi
 9343              	.LEHB263:
 9344 0067 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9344      00
 9345              	.LEHE263:
 9346              	.L501:
 9347              	.LBE172:
  13:../MemoryOutStream.h **** {
 9348              		.loc 2 13 0 discriminator 22
 9349 006c B8000000 		movl	$0, %eax
 9349      00
 9350 0071 85C0     		testl	%eax, %eax
 9351 0073 7450     		je	.L500
  13:../MemoryOutStream.h **** {
 9352              		.loc 2 13 0 discriminator 25
 9353 0075 488B45E8 		movq	-24(%rbp), %rax
 9354 0079 4889C7   		movq	%rax, %rdi
 9355 007c E8000000 		call	_ZdlPv
 9355      00
 9356 0081 EB42     		jmp	.L500
 9357              	.L506:
 9358 0083 4889C3   		movq	%rax, %rbx
 9359              	.LBB173:
  13:../MemoryOutStream.h **** {
 9360              		.loc 2 13 0
 9361 0086 BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9361      00
 9362 008b 488B45E8 		movq	-24(%rbp), %rax
 9363 008f 4889D6   		movq	%rdx, %rsi
 9364 0092 4889C7   		movq	%rax, %rdi
 9365 0095 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9365      00
 9366 009a EB03     		jmp	.L504
 9367              	.L507:
 9368 009c 4889C3   		movq	%rax, %rbx
 9369              	.L504:
  13:../MemoryOutStream.h **** {
 9370              		.loc 2 13 0 discriminator 19
 9371 009f B8020000 		movl	$2, %eax
 9371      00
 9372 00a4 85C0     		testl	%eax, %eax
 9373 00a6 7412     		je	.L505
  13:../MemoryOutStream.h **** {
 9374              		.loc 2 13 0 discriminator 32
 9375 00a8 488B45E8 		movq	-24(%rbp), %rax
 9376 00ac 48059000 		addq	$144, %rax
 9376      0000
 9377 00b2 4889C7   		movq	%rax, %rdi
 9378 00b5 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9378      00
 9379              	.L505:
 9380 00ba 4889D8   		movq	%rbx, %rax
 9381 00bd 4889C7   		movq	%rax, %rdi
 9382              	.LEHB264:
 9383 00c0 E8000000 		call	_Unwind_Resume
 9383      00
 9384              	.LEHE264:
 9385              	.L500:
 9386              	.LBE173:
  13:../MemoryOutStream.h **** {
 9387              		.loc 2 13 0
 9388 00c5 4883C418 		addq	$24, %rsp
 9389 00c9 5B       		popq	%rbx
 9390 00ca 5D       		popq	%rbp
 9391              		.cfi_def_cfa 7, 8
 9392 00cb C3       		ret
 9393              		.cfi_endproc
 9394              	.LFE1583:
 9395              		.section	.gcc_except_table
 9396              	.LLSDA1583:
 9397 07a0 FF       		.byte	0xff
 9398 07a1 FF       		.byte	0xff
 9399 07a2 01       		.byte	0x1
 9400 07a3 13       		.uleb128 .LLSDACSE1583-.LLSDACSB1583
 9401              	.LLSDACSB1583:
 9402 07a4 38       		.uleb128 .LEHB261-.LFB1583
 9403 07a5 05       		.uleb128 .LEHE261-.LEHB261
 9404 07a6 8301     		.uleb128 .L506-.LFB1583
 9405 07a8 00       		.uleb128 0
 9406 07a9 4C       		.uleb128 .LEHB262-.LFB1583
 9407 07aa 05       		.uleb128 .LEHE262-.LEHB262
 9408 07ab 9C01     		.uleb128 .L507-.LFB1583
 9409 07ad 00       		.uleb128 0
 9410 07ae 67       		.uleb128 .LEHB263-.LFB1583
 9411 07af 05       		.uleb128 .LEHE263-.LEHB263
 9412 07b0 00       		.uleb128 0
 9413 07b1 00       		.uleb128 0
 9414 07b2 C001     		.uleb128 .LEHB264-.LFB1583
 9415 07b4 05       		.uleb128 .LEHE264-.LEHB264
 9416 07b5 00       		.uleb128 0
 9417 07b6 00       		.uleb128 0
 9418              	.LLSDACSE1583:
 9419              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9421              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 9422              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9424              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 9425              	.LFB1649:
  13:../MemoryOutStream.h **** {
 9426              		.loc 2 13 0 is_stmt 1
 9427              		.cfi_startproc
 9428 00cc 4C8B17   		movq	(%rdi), %r10
 9429 00cf 49037AE8 		addq	-24(%r10), %rdi
 9430 00d3 E928FFFF 		jmp	.LTHUNK0
 9430      FF
 9431              		.cfi_endproc
 9432              	.LFE1649:
 9434              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9435              		.align 2
 9436              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 9438              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 9439              	.LFB1584:
  13:../MemoryOutStream.h **** {
 9440              		.loc 2 13 0
 9441              		.cfi_startproc
 9442 0000 55       		pushq	%rbp
 9443              		.cfi_def_cfa_offset 16
 9444              		.cfi_offset 6, -16
 9445 0001 4889E5   		movq	%rsp, %rbp
 9446              		.cfi_def_cfa_register 6
 9447 0004 4883EC10 		subq	$16, %rsp
 9448 0008 48897DF8 		movq	%rdi, -8(%rbp)
  13:../MemoryOutStream.h **** {
 9449              		.loc 2 13 0
 9450 000c 488B45F8 		movq	-8(%rbp), %rax
 9451 0010 4889C7   		movq	%rax, %rdi
 9452 0013 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 9452      00
 9453 0018 488B45F8 		movq	-8(%rbp), %rax
 9454 001c 4889C7   		movq	%rax, %rdi
 9455 001f E8000000 		call	_ZdlPv
 9455      00
 9456 0024 C9       		leave
 9457              		.cfi_def_cfa 7, 8
 9458 0025 C3       		ret
 9459              		.cfi_endproc
 9460              	.LFE1584:
 9462              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 9463              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9465              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 9466              	.LFB1650:
  13:../MemoryOutStream.h **** {
 9467              		.loc 2 13 0
 9468              		.cfi_startproc
 9469 0026 4C8B17   		movq	(%rdi), %r10
 9470 0029 49037AE8 		addq	-24(%r10), %rdi
 9471 002d EBD1     		jmp	.LTHUNK1
 9472              		.cfi_endproc
 9473              	.LFE1650:
 9475              		.section	.rodata
 9476 0ab8 00000000 		.align 32
 9476      00000000 
 9479              	_ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 9480 0ac0 2A4E3132 		.string	"*N12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE"
 9480      5F474C4F 
 9480      42414C5F 
 9480      5F4E5F31 
 9480      34325465 
 9481 0afe 0000     		.align 8
 9484              	_ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 9485 0b00 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9485      00000000 
 9486 0b08 00000000 		.quad	_ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
 9486      00000000 
 9487 0b10 00000000 		.quad	_ZTIN8UnitTest4TestE
 9487      00000000 
 9488 0b18 00000000 		.align 32
 9488      00000000 
 9491              	_ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 9492 0b20 2A4E3132 		.string	"*N12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE"
 9492      5F474C4F 
 9492      42414C5F 
 9492      5F4E5F31 
 9492      34395465 
 9493 0b65 000000   		.align 8
 9496              	_ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 9497 0b68 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9497      00000000 
 9498 0b70 00000000 		.quad	_ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
 9498      00000000 
 9499 0b78 00000000 		.quad	_ZTIN8UnitTest4TestE
 9499      00000000 
 9500              		.align 32
 9503              	_ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 9504 0b80 2A4E3132 		.string	"*N12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE"
 9504      5F474C4F 
 9504      42414C5F 
 9504      5F4E5F31 
 9504      35325465 
 9505              		.align 8
 9508              	_ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 9509 0bc8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9509      00000000 
 9510 0bd0 00000000 		.quad	_ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 9510      00000000 
 9511 0bd8 00000000 		.quad	_ZTIN8UnitTest4TestE
 9511      00000000 
 9512              		.align 32
 9515              	_ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 9516 0be0 2A4E3132 		.string	"*N12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE"
 9516      5F474C4F 
 9516      42414C5F 
 9516      5F4E5F31 
 9516      36315465 
 9517 0c31 00000000 		.align 8
 9517      000000
 9520              	_ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 9521 0c38 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9521      00000000 
 9522 0c40 00000000 		.quad	_ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 9522      00000000 
 9523 0c48 00000000 		.quad	_ZTIN8UnitTest4TestE
 9523      00000000 
 9524 0c50 00000000 		.align 32
 9524      00000000 
 9524      00000000 
 9524      00000000 
 9527              	_ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 9528 0c60 2A4E3132 		.string	"*N12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE"
 9528      5F474C4F 
 9528      42414C5F 
 9528      5F4E5F31 
 9528      36355465 
 9529 0cb5 000000   		.align 8
 9532              	_ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 9533 0cb8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9533      00000000 
 9534 0cc0 00000000 		.quad	_ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 9534      00000000 
 9535 0cc8 00000000 		.quad	_ZTIN8UnitTest4TestE
 9535      00000000 
 9536 0cd0 00000000 		.align 32
 9536      00000000 
 9536      00000000 
 9536      00000000 
 9539              	_ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9540 0ce0 2A4E3132 		.string	"*N12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE"
 9540      5F474C4F 
 9540      42414C5F 
 9540      5F4E5F31 
 9540      35305465 
 9541 0d26 0000     		.align 8
 9544              	_ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9545 0d28 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9545      00000000 
 9546 0d30 00000000 		.quad	_ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
 9546      00000000 
 9547 0d38 00000000 		.quad	_ZTIN8UnitTest4TestE
 9547      00000000 
 9548              		.align 32
 9551              	_ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9552 0d40 2A4E3132 		.string	"*N12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE"
 9552      5F474C4F 
 9552      42414C5F 
 9552      5F4E5F31 
 9552      36365465 
 9553 0d96 0000     		.align 8
 9556              	_ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9557 0d98 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9557      00000000 
 9558 0da0 00000000 		.quad	_ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 9558      00000000 
 9559 0da8 00000000 		.quad	_ZTIN8UnitTest4TestE
 9559      00000000 
 9560 0db0 00000000 		.align 32
 9560      00000000 
 9560      00000000 
 9560      00000000 
 9563              	_ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 9564 0dc0 2A4E3132 		.string	"*N12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE"
 9564      5F474C4F 
 9564      42414C5F 
 9564      5F4E5F31 
 9564      35345465 
 9565 0e0a 00000000 		.align 8
 9565      0000
 9568              	_ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 9569 0e10 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9569      00000000 
 9570 0e18 00000000 		.quad	_ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
 9570      00000000 
 9571 0e20 00000000 		.quad	_ZTIN8UnitTest4TestE
 9571      00000000 
 9572              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 9573              		.section	.rodata._ZTIN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTIN8UnitTest15MemoryOutStreamE,
 9574              		.align 8
 9577              	_ZTIN8UnitTest15MemoryOutStreamE:
 9578 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9578      00000000 
 9579 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 9579      00000000 
 9580 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9580      00000000 
 9581              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 9582              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 9583              		.align 16
 9586              	_ZTSN8UnitTest15MemoryOutStreamE:
 9587 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 9587      69745465 
 9587      73743135 
 9587      4D656D6F 
 9587      72794F75 
 9588              		.text
 9590              	_Z41__static_initialization_and_destruction_0ii:
 9591              	.LFB1585:
 182:TestXmlTestReporter.cpp **** 
 183:TestXmlTestReporter.cpp **** }
 9592              		.loc 3 183 0
 9593              		.cfi_startproc
 9594 4548 55       		pushq	%rbp
 9595              		.cfi_def_cfa_offset 16
 9596              		.cfi_offset 6, -16
 9597 4549 4889E5   		movq	%rsp, %rbp
 9598              		.cfi_def_cfa_register 6
 9599 454c 4883EC10 		subq	$16, %rsp
 9600 4550 897DFC   		movl	%edi, -4(%rbp)
 9601 4553 8975F8   		movl	%esi, -8(%rbp)
 9602              		.loc 3 183 0
 9603 4556 837DFC01 		cmpl	$1, -4(%rbp)
 9604 455a 0F85B501 		jne	.L511
 9604      0000
 9605              		.loc 3 183 0 is_stmt 0 discriminator 1
 9606 4560 817DF8FF 		cmpl	$65535, -8(%rbp)
 9606      FF0000
 9607 4567 0F85A801 		jne	.L511
 9607      0000
  34:TestXmlTestReporter.cpp **** {
 9608              		.loc 3 34 0 is_stmt 1
 9609 456d BF000000 		movl	$_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE, %edi
 9609      00
 9610 4572 E861BBFF 		call	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev
 9610      FF
 9611 4577 BA000000 		movl	$__dso_handle, %edx
 9611      00
 9612 457c BE000000 		movl	$_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE, %esi
 9612      00
 9613 4581 BF000000 		movl	$_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev, %edi
 9613      00
 9614 4586 E8000000 		call	__cxa_atexit
 9614      00
 9615 458b E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9615      00
 9616 4590 BA000000 		movl	$_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE, %edx
 9616      00
 9617 4595 4889C6   		movq	%rax, %rsi
 9618 4598 BF000000 		movl	$_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE, %edi
 9618      00
 9619 459d E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9619      00
  55:TestXmlTestReporter.cpp **** {
 9620              		.loc 3 55 0
 9621 45a2 BF000000 		movl	$_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 9621      00
 9622 45a7 E886C0FF 		call	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev
 9622      FF
 9623 45ac BA000000 		movl	$__dso_handle, %edx
 9623      00
 9624 45b1 BE000000 		movl	$_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 9624      00
 9625 45b6 BF000000 		movl	$_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev, %
 9625      00
 9626 45bb E8000000 		call	__cxa_atexit
 9626      00
 9627 45c0 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9627      00
 9628 45c5 BA000000 		movl	$_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 9628      00
 9629 45ca 4889C6   		movq	%rax, %rsi
 9630 45cd BF000000 		movl	$_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE, %ed
 9630      00
 9631 45d2 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9631      00
  68:TestXmlTestReporter.cpp **** {
 9632              		.loc 3 68 0
 9633 45d7 BF000000 		movl	$_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE, %edi
 9633      00
 9634 45dc E8BDC6FF 		call	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev
 9634      FF
 9635 45e1 BA000000 		movl	$__dso_handle, %edx
 9635      00
 9636 45e6 BE000000 		movl	$_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE, %esi
 9636      00
 9637 45eb BF000000 		movl	$_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev, %edi
 9637      00
 9638 45f0 E8000000 		call	__cxa_atexit
 9638      00
 9639 45f5 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9639      00
 9640 45fa BA000000 		movl	$_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE, %edx
 9640      00
 9641 45ff 4889C6   		movq	%rax, %rsi
 9642 4602 BF000000 		movl	$_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE, %edi
 9642      00
 9643 4607 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9643      00
  80:TestXmlTestReporter.cpp **** {
 9644              		.loc 3 80 0
 9645 460c BF000000 		movl	$_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 9645      00
 9646 4611 E848CBFF 		call	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev
 9646      FF
 9647 4616 BA000000 		movl	$__dso_handle, %edx
 9647      00
 9648 461b BE000000 		movl	$_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 9648      00
 9649 4620 BF000000 		movl	$_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev, %e
 9649      00
 9650 4625 E8000000 		call	__cxa_atexit
 9650      00
 9651 462a E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9651      00
 9652 462f BA000000 		movl	$_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 9652      00
 9653 4634 4889C6   		movq	%rax, %rsi
 9654 4637 BF000000 		movl	$_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE, %edi
 9654      00
 9655 463c E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9655      00
  96:TestXmlTestReporter.cpp **** {
 9656              		.loc 3 96 0
 9657 4641 BF000000 		movl	$_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE, %
 9657      00
 9658 4646 E825D0FF 		call	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev
 9658      FF
 9659 464b BA000000 		movl	$__dso_handle, %edx
 9659      00
 9660 4650 BE000000 		movl	$_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE, %
 9660      00
 9661 4655 BF000000 		movl	$_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev, %edi
 9661      00
 9662 465a E8000000 		call	__cxa_atexit
 9662      00
 9663 465f E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9663      00
 9664 4664 BA000000 		movl	$_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE, %
 9664      00
 9665 4669 4889C6   		movq	%rax, %rsi
 9666 466c BF000000 		movl	$_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE, %edi
 9666      00
 9667 4671 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9667      00
 115:TestXmlTestReporter.cpp **** {
 9668              		.loc 3 115 0
 9669 4676 BF000000 		movl	$_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE, %edi
 9669      00
 9670 467b E824D5FF 		call	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev
 9670      FF
 9671 4680 BA000000 		movl	$__dso_handle, %edx
 9671      00
 9672 4685 BE000000 		movl	$_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE, %esi
 9672      00
 9673 468a BF000000 		movl	$_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev, %edi
 9673      00
 9674 468f E8000000 		call	__cxa_atexit
 9674      00
 9675 4694 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9675      00
 9676 4699 BA000000 		movl	$_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE, %edx
 9676      00
 9677 469e 4889C6   		movq	%rax, %rsi
 9678 46a1 BF000000 		movl	$_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE, %edi
 9678      00
 9679 46a6 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9679      00
 135:TestXmlTestReporter.cpp **** {
 9680              		.loc 3 135 0
 9681 46ab BF000000 		movl	$_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE, %edi
 9681      00
 9682 46b0 E849DAFF 		call	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev
 9682      FF
 9683 46b5 BA000000 		movl	$__dso_handle, %edx
 9683      00
 9684 46ba BE000000 		movl	$_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE, %esi
 9684      00
 9685 46bf BF000000 		movl	$_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev, %edi
 9685      00
 9686 46c4 E8000000 		call	__cxa_atexit
 9686      00
 9687 46c9 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9687      00
 9688 46ce BA000000 		movl	$_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE, %edx
 9688      00
 9689 46d3 4889C6   		movq	%rax, %rsi
 9690 46d6 BF000000 		movl	$_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE, %edi
 9690      00
 9691 46db E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9691      00
 159:TestXmlTestReporter.cpp **** {
 9692              		.loc 3 159 0
 9693 46e0 BF000000 		movl	$_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE, %edi
 9693      00
 9694 46e5 E8DCDFFF 		call	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev
 9694      FF
 9695 46ea BA000000 		movl	$__dso_handle, %edx
 9695      00
 9696 46ef BE000000 		movl	$_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE, %esi
 9696      00
 9697 46f4 BF000000 		movl	$_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev, %edi
 9697      00
 9698 46f9 E8000000 		call	__cxa_atexit
 9698      00
 9699 46fe E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9699      00
 9700 4703 BA000000 		movl	$_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE, %edx
 9700      00
 9701 4708 4889C6   		movq	%rax, %rsi
 9702 470b BF000000 		movl	$_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE, %edi
 9702      00
 9703 4710 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9703      00
 9704              	.L511:
 9705              		.loc 3 183 0
 9706 4715 90       		nop
 9707 4716 C9       		leave
 9708              		.cfi_def_cfa 7, 8
 9709 4717 C3       		ret
 9710              		.cfi_endproc
 9711              	.LFE1585:
 9713              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 9714              		.align 2
 9715              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 9717              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 9718              	.LFB1588:
 9719              		.file 7 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 9720              		.loc 7 12 0
 9721              		.cfi_startproc
 9722              		.cfi_personality 0x3,__gxx_personality_v0
 9723              		.cfi_lsda 0x3,.LLSDA1588
 9724 0000 55       		pushq	%rbp
 9725              		.cfi_def_cfa_offset 16
 9726              		.cfi_offset 6, -16
 9727 0001 4889E5   		movq	%rsp, %rbp
 9728              		.cfi_def_cfa_register 6
 9729 0004 53       		pushq	%rbx
 9730 0005 4883EC18 		subq	$24, %rsp
 9731              		.cfi_offset 3, -24
 9732 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9733              	.LBB174:
 9734              		.loc 7 12 0
 9735 000d BA000000 		movl	$_ZTVN8UnitTest20DeferredTestReporterE+16, %edx
 9735      00
 9736 0012 488B45E8 		movq	-24(%rbp), %rax
 9737 0016 488910   		movq	%rdx, (%rax)
 9738 0019 488B45E8 		movq	-24(%rbp), %rax
 9739 001d 4883C008 		addq	$8, %rax
 9740 0021 4889C7   		movq	%rax, %rdi
 9741              	.LEHB265:
 9742 0024 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 9742      00
 9743              	.LEHE265:
 9744              		.loc 7 12 0 is_stmt 0 discriminator 2
 9745 0029 488B45E8 		movq	-24(%rbp), %rax
 9746 002d 4889C7   		movq	%rax, %rdi
 9747              	.LEHB266:
 9748 0030 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 9748      00
 9749              	.LEHE266:
 9750              	.LBE174:
 9751 0035 B8000000 		movl	$0, %eax
 9751      00
 9752 003a 85C0     		testl	%eax, %eax
 9753 003c 7428     		je	.L512
 9754              		.loc 7 12 0 discriminator 6
 9755 003e 488B45E8 		movq	-24(%rbp), %rax
 9756 0042 4889C7   		movq	%rax, %rdi
 9757 0045 E8000000 		call	_ZdlPv
 9757      00
 9758 004a EB1A     		jmp	.L512
 9759              	.L515:
 9760 004c 4889C3   		movq	%rax, %rbx
 9761              	.LBB175:
 9762              		.loc 7 12 0
 9763 004f 488B45E8 		movq	-24(%rbp), %rax
 9764 0053 4889C7   		movq	%rax, %rdi
 9765 0056 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 9765      00
 9766 005b 4889D8   		movq	%rbx, %rax
 9767 005e 4889C7   		movq	%rax, %rdi
 9768              	.LEHB267:
 9769 0061 E8000000 		call	_Unwind_Resume
 9769      00
 9770              	.LEHE267:
 9771              	.L512:
 9772              	.LBE175:
 9773 0066 4883C418 		addq	$24, %rsp
 9774 006a 5B       		popq	%rbx
 9775 006b 5D       		popq	%rbp
 9776              		.cfi_def_cfa 7, 8
 9777 006c C3       		ret
 9778              		.cfi_endproc
 9779              	.LFE1588:
 9780              		.section	.gcc_except_table
 9781              	.LLSDA1588:
 9782 07b7 FF       		.byte	0xff
 9783 07b8 FF       		.byte	0xff
 9784 07b9 01       		.byte	0x1
 9785 07ba 0C       		.uleb128 .LLSDACSE1588-.LLSDACSB1588
 9786              	.LLSDACSB1588:
 9787 07bb 24       		.uleb128 .LEHB265-.LFB1588
 9788 07bc 05       		.uleb128 .LEHE265-.LEHB265
 9789 07bd 4C       		.uleb128 .L515-.LFB1588
 9790 07be 00       		.uleb128 0
 9791 07bf 30       		.uleb128 .LEHB266-.LFB1588
 9792 07c0 05       		.uleb128 .LEHE266-.LEHB266
 9793 07c1 00       		.uleb128 0
 9794 07c2 00       		.uleb128 0
 9795 07c3 61       		.uleb128 .LEHB267-.LFB1588
 9796 07c4 05       		.uleb128 .LEHE267-.LEHB267
 9797 07c5 00       		.uleb128 0
 9798 07c6 00       		.uleb128 0
 9799              	.LLSDACSE1588:
 9800              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 9802              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 9803              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 9804              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 9805              		.align 2
 9806              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 9808              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 9809              	.LFB1590:
 9810              		.loc 7 12 0 is_stmt 1
 9811              		.cfi_startproc
 9812 0000 55       		pushq	%rbp
 9813              		.cfi_def_cfa_offset 16
 9814              		.cfi_offset 6, -16
 9815 0001 4889E5   		movq	%rsp, %rbp
 9816              		.cfi_def_cfa_register 6
 9817 0004 4883EC10 		subq	$16, %rsp
 9818 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9819              		.loc 7 12 0
 9820 000c 488B45F8 		movq	-8(%rbp), %rax
 9821 0010 4889C7   		movq	%rax, %rdi
 9822 0013 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 9822      00
 9823 0018 488B45F8 		movq	-8(%rbp), %rax
 9824 001c 4889C7   		movq	%rax, %rdi
 9825 001f E8000000 		call	_ZdlPv
 9825      00
 9826 0024 C9       		leave
 9827              		.cfi_def_cfa 7, 8
 9828 0025 C3       		ret
 9829              		.cfi_endproc
 9830              	.LFE1590:
 9832              		.section	.text._ZN8UnitTest15XmlTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 9833              		.align 2
 9834              		.weak	_ZN8UnitTest15XmlTestReporterD2Ev
 9836              	_ZN8UnitTest15XmlTestReporterD2Ev:
 9837              	.LFB1591:
 9838              		.file 8 "../XmlTestReporter.h"
   1:../XmlTestReporter.h **** #ifndef UNITTEST_XMLTESTREPORTER_H
   2:../XmlTestReporter.h **** #define UNITTEST_XMLTESTREPORTER_H
   3:../XmlTestReporter.h **** 
   4:../XmlTestReporter.h **** #include "DeferredTestReporter.h"
   5:../XmlTestReporter.h **** 
   6:../XmlTestReporter.h **** #include <iosfwd>
   7:../XmlTestReporter.h **** 
   8:../XmlTestReporter.h **** namespace UnitTest
   9:../XmlTestReporter.h **** {
  10:../XmlTestReporter.h **** 
  11:../XmlTestReporter.h **** class XmlTestReporter : public DeferredTestReporter
 9839              		.loc 8 11 0
 9840              		.cfi_startproc
 9841 0000 55       		pushq	%rbp
 9842              		.cfi_def_cfa_offset 16
 9843              		.cfi_offset 6, -16
 9844 0001 4889E5   		movq	%rsp, %rbp
 9845              		.cfi_def_cfa_register 6
 9846 0004 4883EC10 		subq	$16, %rsp
 9847 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9848              	.LBB176:
 9849              		.loc 8 11 0
 9850 000c BA000000 		movl	$_ZTVN8UnitTest15XmlTestReporterE+16, %edx
 9850      00
 9851 0011 488B45F8 		movq	-8(%rbp), %rax
 9852 0015 488910   		movq	%rdx, (%rax)
 9853 0018 488B45F8 		movq	-8(%rbp), %rax
 9854 001c 4889C7   		movq	%rax, %rdi
 9855 001f E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 9855      00
 9856              	.LBE176:
 9857 0024 B8000000 		movl	$0, %eax
 9857      00
 9858 0029 85C0     		testl	%eax, %eax
 9859 002b 740C     		je	.L517
 9860              		.loc 8 11 0 is_stmt 0 discriminator 4
 9861 002d 488B45F8 		movq	-8(%rbp), %rax
 9862 0031 4889C7   		movq	%rax, %rdi
 9863 0034 E8000000 		call	_ZdlPv
 9863      00
 9864              	.L517:
 9865              		.loc 8 11 0
 9866 0039 C9       		leave
 9867              		.cfi_def_cfa 7, 8
 9868 003a C3       		ret
 9869              		.cfi_endproc
 9870              	.LFE1591:
 9872              		.weak	_ZN8UnitTest15XmlTestReporterD1Ev
 9873              		.set	_ZN8UnitTest15XmlTestReporterD1Ev,_ZN8UnitTest15XmlTestReporterD2Ev
 9874              		.section	.text._ZN8UnitTest15XmlTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 9875              		.align 2
 9876              		.weak	_ZN8UnitTest15XmlTestReporterD0Ev
 9878              	_ZN8UnitTest15XmlTestReporterD0Ev:
 9879              	.LFB1593:
 9880              		.loc 8 11 0 is_stmt 1
 9881              		.cfi_startproc
 9882 0000 55       		pushq	%rbp
 9883              		.cfi_def_cfa_offset 16
 9884              		.cfi_offset 6, -16
 9885 0001 4889E5   		movq	%rsp, %rbp
 9886              		.cfi_def_cfa_register 6
 9887 0004 4883EC10 		subq	$16, %rsp
 9888 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9889              		.loc 8 11 0
 9890 000c 488B45F8 		movq	-8(%rbp), %rax
 9891 0010 4889C7   		movq	%rax, %rdi
 9892 0013 E8000000 		call	_ZN8UnitTest15XmlTestReporterD1Ev
 9892      00
 9893 0018 488B45F8 		movq	-8(%rbp), %rax
 9894 001c 4889C7   		movq	%rax, %rdi
 9895 001f E8000000 		call	_ZdlPv
 9895      00
 9896 0024 C9       		leave
 9897              		.cfi_def_cfa 7, 8
 9898 0025 C3       		ret
 9899              		.cfi_endproc
 9900              	.LFE1593:
 9902              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 9903              		.align 2
 9904              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 9906              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 9907              	.LFB1595:
 9908              		.file 9 "/usr/include/c++/5/bits/stl_vector.h"
   1:/usr/include/c++/5/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_vector.h **** 
   3:/usr/include/c++/5/bits/stl_vector.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_vector.h **** //
   5:/usr/include/c++/5/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_vector.h **** 
  11:/usr/include/c++/5/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_vector.h **** 
  16:/usr/include/c++/5/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_vector.h **** 
  20:/usr/include/c++/5/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_vector.h **** 
  25:/usr/include/c++/5/bits/stl_vector.h **** /*
  26:/usr/include/c++/5/bits/stl_vector.h ****  *
  27:/usr/include/c++/5/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_vector.h ****  *
  30:/usr/include/c++/5/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_vector.h ****  *
  38:/usr/include/c++/5/bits/stl_vector.h ****  *
  39:/usr/include/c++/5/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/5/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_vector.h ****  *
  42:/usr/include/c++/5/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/5/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_vector.h ****  */
  50:/usr/include/c++/5/bits/stl_vector.h **** 
  51:/usr/include/c++/5/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/5/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/5/bits/stl_vector.h ****  */
  55:/usr/include/c++/5/bits/stl_vector.h **** 
  56:/usr/include/c++/5/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/5/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/5/bits/stl_vector.h **** 
  59:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/5/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/5/bits/stl_vector.h **** #endif
  65:/usr/include/c++/5/bits/stl_vector.h **** 
  66:/usr/include/c++/5/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/5/bits/stl_vector.h **** {
  68:/usr/include/c++/5/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/5/bits/stl_vector.h **** 
  70:/usr/include/c++/5/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/5/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/5/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/5/bits/stl_vector.h ****     {
  74:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/5/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/5/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/5/bits/stl_vector.h **** 
  79:/usr/include/c++/5/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/5/bits/stl_vector.h ****       {
  82:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/5/bits/stl_vector.h **** 
  86:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  88:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/5/bits/stl_vector.h **** 
  90:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  92:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/5/bits/stl_vector.h **** 
  94:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
  98:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/5/bits/stl_vector.h **** #endif
 100:/usr/include/c++/5/bits/stl_vector.h **** 
 101:/usr/include/c++/5/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:/usr/include/c++/5/bits/stl_vector.h **** 	{
 103:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/5/bits/stl_vector.h **** 	}
 107:/usr/include/c++/5/bits/stl_vector.h ****       };
 108:/usr/include/c++/5/bits/stl_vector.h ****       
 109:/usr/include/c++/5/bits/stl_vector.h ****     public:
 110:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/5/bits/stl_vector.h **** 
 112:/usr/include/c++/5/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/5/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/5/bits/stl_vector.h **** 
 116:/usr/include/c++/5/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/5/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/5/bits/stl_vector.h **** 
 120:/usr/include/c++/5/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/5/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/5/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/5/bits/stl_vector.h **** 
 124:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/5/bits/stl_vector.h **** 
 127:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/5/bits/stl_vector.h **** 
 130:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/5/bits/stl_vector.h **** 
 134:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/5/bits/stl_vector.h **** 
 138:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/5/bits/stl_vector.h **** 
 142:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/5/bits/stl_vector.h **** 
 146:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/5/bits/stl_vector.h ****       {
 149:/usr/include/c++/5/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/5/bits/stl_vector.h **** 	else
 152:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/5/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/5/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/5/bits/stl_vector.h ****       }
 157:/usr/include/c++/5/bits/stl_vector.h **** #endif
 158:/usr/include/c++/5/bits/stl_vector.h **** 
 159:/usr/include/c++/5/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/5/bits/stl_vector.h **** 
 163:/usr/include/c++/5/bits/stl_vector.h ****     public:
 164:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/5/bits/stl_vector.h **** 
 166:/usr/include/c++/5/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/5/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/5/bits/stl_vector.h ****       {
 169:/usr/include/c++/5/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:/usr/include/c++/5/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 171:/usr/include/c++/5/bits/stl_vector.h ****       }
 172:/usr/include/c++/5/bits/stl_vector.h **** 
 173:/usr/include/c++/5/bits/stl_vector.h ****       void
 174:/usr/include/c++/5/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:/usr/include/c++/5/bits/stl_vector.h ****       {
 176:/usr/include/c++/5/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:/usr/include/c++/5/bits/stl_vector.h **** 	if (__p)
 178:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:/usr/include/c++/5/bits/stl_vector.h ****       }
 180:/usr/include/c++/5/bits/stl_vector.h **** 
 181:/usr/include/c++/5/bits/stl_vector.h ****     private:
 182:/usr/include/c++/5/bits/stl_vector.h ****       void
 183:/usr/include/c++/5/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 184:/usr/include/c++/5/bits/stl_vector.h ****       {
 185:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:/usr/include/c++/5/bits/stl_vector.h ****       }
 189:/usr/include/c++/5/bits/stl_vector.h ****     };
 190:/usr/include/c++/5/bits/stl_vector.h **** 
 191:/usr/include/c++/5/bits/stl_vector.h **** 
 192:/usr/include/c++/5/bits/stl_vector.h ****   /**
 193:/usr/include/c++/5/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:/usr/include/c++/5/bits/stl_vector.h ****    *  individual elements in any order.
 195:/usr/include/c++/5/bits/stl_vector.h ****    *
 196:/usr/include/c++/5/bits/stl_vector.h ****    *  @ingroup sequences
 197:/usr/include/c++/5/bits/stl_vector.h ****    *
 198:/usr/include/c++/5/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:/usr/include/c++/5/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:/usr/include/c++/5/bits/stl_vector.h ****    *
 201:/usr/include/c++/5/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:/usr/include/c++/5/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:/usr/include/c++/5/bits/stl_vector.h ****    *
 207:/usr/include/c++/5/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:/usr/include/c++/5/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:/usr/include/c++/5/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:/usr/include/c++/5/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:/usr/include/c++/5/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 212:/usr/include/c++/5/bits/stl_vector.h ****   */
 213:/usr/include/c++/5/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:/usr/include/c++/5/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:/usr/include/c++/5/bits/stl_vector.h ****     {
 216:/usr/include/c++/5/bits/stl_vector.h ****       // Concept requirements.
 217:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:/usr/include/c++/5/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 219:/usr/include/c++/5/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 220:/usr/include/c++/5/bits/stl_vector.h ****       
 221:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 222:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 223:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 224:/usr/include/c++/5/bits/stl_vector.h **** 
 225:/usr/include/c++/5/bits/stl_vector.h ****     public:
 226:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Tp					 value_type;
 227:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 228:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 229:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 230:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 231:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 232:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 233:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator;
 234:/usr/include/c++/5/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 235:/usr/include/c++/5/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 236:/usr/include/c++/5/bits/stl_vector.h ****       typedef size_t					 size_type;
 237:/usr/include/c++/5/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 238:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 239:/usr/include/c++/5/bits/stl_vector.h **** 
 240:/usr/include/c++/5/bits/stl_vector.h ****     protected:
 241:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_allocate;
 242:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_deallocate;
 243:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_impl;
 244:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 245:/usr/include/c++/5/bits/stl_vector.h **** 
 246:/usr/include/c++/5/bits/stl_vector.h ****     public:
 247:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 248:/usr/include/c++/5/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 249:/usr/include/c++/5/bits/stl_vector.h **** 
 250:/usr/include/c++/5/bits/stl_vector.h ****       /**
 251:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 252:/usr/include/c++/5/bits/stl_vector.h ****        */
 253:/usr/include/c++/5/bits/stl_vector.h ****       vector()
 254:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 255:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 256:/usr/include/c++/5/bits/stl_vector.h **** #endif
 257:/usr/include/c++/5/bits/stl_vector.h ****       : _Base() { }
 258:/usr/include/c++/5/bits/stl_vector.h **** 
 259:/usr/include/c++/5/bits/stl_vector.h ****       /**
 260:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 261:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 262:/usr/include/c++/5/bits/stl_vector.h ****        */
 263:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 264:/usr/include/c++/5/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 265:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__a) { }
 266:/usr/include/c++/5/bits/stl_vector.h **** 
 267:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 268:/usr/include/c++/5/bits/stl_vector.h ****       /**
 269:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 270:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 271:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 272:/usr/include/c++/5/bits/stl_vector.h ****        *
 273:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 274:/usr/include/c++/5/bits/stl_vector.h ****        *  constructed elements.
 275:/usr/include/c++/5/bits/stl_vector.h ****        */
 276:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 277:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 278:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 279:/usr/include/c++/5/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 280:/usr/include/c++/5/bits/stl_vector.h **** 
 281:/usr/include/c++/5/bits/stl_vector.h ****       /**
 282:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 283:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 284:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 285:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 286:/usr/include/c++/5/bits/stl_vector.h ****        *
 287:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 288:/usr/include/c++/5/bits/stl_vector.h ****        */
 289:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 290:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 291:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 292:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 293:/usr/include/c++/5/bits/stl_vector.h **** #else
 294:/usr/include/c++/5/bits/stl_vector.h ****       /**
 295:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 296:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 297:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 298:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 299:/usr/include/c++/5/bits/stl_vector.h ****        *
 300:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 301:/usr/include/c++/5/bits/stl_vector.h ****        */
 302:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 303:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 304:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 305:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 306:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 307:/usr/include/c++/5/bits/stl_vector.h **** #endif
 308:/usr/include/c++/5/bits/stl_vector.h **** 
 309:/usr/include/c++/5/bits/stl_vector.h ****       /**
 310:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 311:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 312:/usr/include/c++/5/bits/stl_vector.h ****        *
 313:/usr/include/c++/5/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 314:/usr/include/c++/5/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 315:/usr/include/c++/5/bits/stl_vector.h ****        *  but any extra memory in
 316:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 317:/usr/include/c++/5/bits/stl_vector.h ****        */
 318:/usr/include/c++/5/bits/stl_vector.h ****       vector(const vector& __x)
 319:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(),
 320:/usr/include/c++/5/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 321:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 322:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 323:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 324:/usr/include/c++/5/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 325:/usr/include/c++/5/bits/stl_vector.h ****       }
 326:/usr/include/c++/5/bits/stl_vector.h **** 
 327:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 328:/usr/include/c++/5/bits/stl_vector.h ****       /**
 329:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 330:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 331:/usr/include/c++/5/bits/stl_vector.h ****        *
 332:/usr/include/c++/5/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 333:/usr/include/c++/5/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 334:/usr/include/c++/5/bits/stl_vector.h ****        */
 335:/usr/include/c++/5/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 336:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 337:/usr/include/c++/5/bits/stl_vector.h **** 
 338:/usr/include/c++/5/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 339:/usr/include/c++/5/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 340:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 341:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 342:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 343:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 344:/usr/include/c++/5/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 345:/usr/include/c++/5/bits/stl_vector.h ****       }
 346:/usr/include/c++/5/bits/stl_vector.h **** 
 347:/usr/include/c++/5/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 348:/usr/include/c++/5/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 349:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 350:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 351:/usr/include/c++/5/bits/stl_vector.h ****       {
 352:/usr/include/c++/5/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 353:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 354:/usr/include/c++/5/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 355:/usr/include/c++/5/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 356:/usr/include/c++/5/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 357:/usr/include/c++/5/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 358:/usr/include/c++/5/bits/stl_vector.h **** 	    __rv.clear();
 359:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 360:/usr/include/c++/5/bits/stl_vector.h ****       }
 361:/usr/include/c++/5/bits/stl_vector.h **** 
 362:/usr/include/c++/5/bits/stl_vector.h ****       /**
 363:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 364:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 365:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 366:/usr/include/c++/5/bits/stl_vector.h ****        *
 367:/usr/include/c++/5/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 368:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer_list @a __l.
 369:/usr/include/c++/5/bits/stl_vector.h ****        *
 370:/usr/include/c++/5/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 371:/usr/include/c++/5/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 372:/usr/include/c++/5/bits/stl_vector.h ****        */
 373:/usr/include/c++/5/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 374:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 375:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__a)
 376:/usr/include/c++/5/bits/stl_vector.h ****       {
 377:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 378:/usr/include/c++/5/bits/stl_vector.h **** 			    random_access_iterator_tag());
 379:/usr/include/c++/5/bits/stl_vector.h ****       }
 380:/usr/include/c++/5/bits/stl_vector.h **** #endif
 381:/usr/include/c++/5/bits/stl_vector.h **** 
 382:/usr/include/c++/5/bits/stl_vector.h ****       /**
 383:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 384:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 385:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 386:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 387:/usr/include/c++/5/bits/stl_vector.h ****        *
 388:/usr/include/c++/5/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 389:/usr/include/c++/5/bits/stl_vector.h ****        *  [first,last).
 390:/usr/include/c++/5/bits/stl_vector.h ****        *
 391:/usr/include/c++/5/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 392:/usr/include/c++/5/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 393:/usr/include/c++/5/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 394:/usr/include/c++/5/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 395:/usr/include/c++/5/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 396:/usr/include/c++/5/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 397:/usr/include/c++/5/bits/stl_vector.h ****        */
 398:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 399:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
 400:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 401:/usr/include/c++/5/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 402:/usr/include/c++/5/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 403:/usr/include/c++/5/bits/stl_vector.h **** 	: _Base(__a)
 404:/usr/include/c++/5/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 405:/usr/include/c++/5/bits/stl_vector.h **** #else
 406:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
 407:/usr/include/c++/5/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 408:/usr/include/c++/5/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 409:/usr/include/c++/5/bits/stl_vector.h **** 	: _Base(__a)
 410:/usr/include/c++/5/bits/stl_vector.h ****         {
 411:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 412:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 413:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 414:/usr/include/c++/5/bits/stl_vector.h **** 	}
 415:/usr/include/c++/5/bits/stl_vector.h **** #endif
 416:/usr/include/c++/5/bits/stl_vector.h **** 
 417:/usr/include/c++/5/bits/stl_vector.h ****       /**
 418:/usr/include/c++/5/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 419:/usr/include/c++/5/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 420:/usr/include/c++/5/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 421:/usr/include/c++/5/bits/stl_vector.h ****        *  responsibility.
 422:/usr/include/c++/5/bits/stl_vector.h ****        */
 423:/usr/include/c++/5/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 9909              		.loc 9 423 0
 9910              		.cfi_startproc
 9911              		.cfi_personality 0x3,__gxx_personality_v0
 9912              		.cfi_lsda 0x3,.LLSDA1595
 9913 0000 55       		pushq	%rbp
 9914              		.cfi_def_cfa_offset 16
 9915              		.cfi_offset 6, -16
 9916 0001 4889E5   		movq	%rsp, %rbp
 9917              		.cfi_def_cfa_register 6
 9918 0004 53       		pushq	%rbx
 9919 0005 4883EC18 		subq	$24, %rsp
 9920              		.cfi_offset 3, -24
 9921 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9922              	.LBB177:
 424:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 425:/usr/include/c++/5/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 9923              		.loc 9 425 0
 9924 000d 488B45E8 		movq	-24(%rbp), %rax
 9925 0011 4889C7   		movq	%rax, %rdi
 9926 0014 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 9926      00
 9927 0019 4889C2   		movq	%rax, %rdx
 424:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 9928              		.loc 9 424 0
 9929 001c 488B45E8 		movq	-24(%rbp), %rax
 9930 0020 488B4808 		movq	8(%rax), %rcx
 9931 0024 488B45E8 		movq	-24(%rbp), %rax
 9932 0028 488B00   		movq	(%rax), %rax
 9933 002b 4889CE   		movq	%rcx, %rsi
 9934 002e 4889C7   		movq	%rax, %rdi
 9935              	.LEHB268:
 9936 0031 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 9936      00
 9937              	.LEHE268:
 9938              		.loc 9 425 0
 9939 0036 488B45E8 		movq	-24(%rbp), %rax
 9940 003a 4889C7   		movq	%rax, %rdi
 9941              	.LEHB269:
 9942 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 9942      00
 9943              	.LEHE269:
 9944              	.LBE177:
 9945 0042 EB1A     		jmp	.L523
 9946              	.L522:
 9947 0044 4889C3   		movq	%rax, %rbx
 9948              	.LBB178:
 9949 0047 488B45E8 		movq	-24(%rbp), %rax
 9950 004b 4889C7   		movq	%rax, %rdi
 9951 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 9951      00
 9952 0053 4889D8   		movq	%rbx, %rax
 9953 0056 4889C7   		movq	%rax, %rdi
 9954              	.LEHB270:
 9955 0059 E8000000 		call	_Unwind_Resume
 9955      00
 9956              	.LEHE270:
 9957              	.L523:
 9958              	.LBE178:
 9959 005e 4883C418 		addq	$24, %rsp
 9960 0062 5B       		popq	%rbx
 9961 0063 5D       		popq	%rbp
 9962              		.cfi_def_cfa 7, 8
 9963 0064 C3       		ret
 9964              		.cfi_endproc
 9965              	.LFE1595:
 9966              		.section	.gcc_except_table
 9967              	.LLSDA1595:
 9968 07c7 FF       		.byte	0xff
 9969 07c8 FF       		.byte	0xff
 9970 07c9 01       		.byte	0x1
 9971 07ca 0C       		.uleb128 .LLSDACSE1595-.LLSDACSB1595
 9972              	.LLSDACSB1595:
 9973 07cb 31       		.uleb128 .LEHB268-.LFB1595
 9974 07cc 05       		.uleb128 .LEHE268-.LEHB268
 9975 07cd 44       		.uleb128 .L522-.LFB1595
 9976 07ce 00       		.uleb128 0
 9977 07cf 3D       		.uleb128 .LEHB269-.LFB1595
 9978 07d0 05       		.uleb128 .LEHE269-.LEHB269
 9979 07d1 00       		.uleb128 0
 9980 07d2 00       		.uleb128 0
 9981 07d3 59       		.uleb128 .LEHB270-.LFB1595
 9982 07d4 05       		.uleb128 .LEHE270-.LEHB270
 9983 07d5 00       		.uleb128 0
 9984 07d6 00       		.uleb128 0
 9985              	.LLSDACSE1595:
 9986              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 9988              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 9989              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 9990              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 9991              		.align 2
 9992              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 9994              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 9995              	.LFB1599:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 9996              		.loc 9 79 0
 9997              		.cfi_startproc
 9998 0000 55       		pushq	%rbp
 9999              		.cfi_def_cfa_offset 16
 10000              		.cfi_offset 6, -16
 10001 0001 4889E5   		movq	%rsp, %rbp
 10002              		.cfi_def_cfa_register 6
 10003 0004 4883EC10 		subq	$16, %rsp
 10004 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10005              	.LBB179:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 10006              		.loc 9 79 0
 10007 000c 488B45F8 		movq	-8(%rbp), %rax
 10008 0010 4889C7   		movq	%rax, %rdi
 10009 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10009      00
 10010              	.LBE179:
 10011 0018 90       		nop
 10012 0019 C9       		leave
 10013              		.cfi_def_cfa 7, 8
 10014 001a C3       		ret
 10015              		.cfi_endproc
 10016              	.LFE1599:
 10018              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10019              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 10020              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 10021              		.align 2
 10022              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10024              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 10025              	.LFB1601:
 159:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 10026              		.loc 9 159 0
 10027              		.cfi_startproc
 10028              		.cfi_personality 0x3,__gxx_personality_v0
 10029              		.cfi_lsda 0x3,.LLSDA1601
 10030 0000 55       		pushq	%rbp
 10031              		.cfi_def_cfa_offset 16
 10032              		.cfi_offset 6, -16
 10033 0001 4889E5   		movq	%rsp, %rbp
 10034              		.cfi_def_cfa_register 6
 10035 0004 53       		pushq	%rbx
 10036 0005 4883EC18 		subq	$24, %rsp
 10037              		.cfi_offset 3, -24
 10038 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10039              	.LBB180:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 10040              		.loc 9 161 0
 10041 000d 488B45E8 		movq	-24(%rbp), %rax
 10042 0011 488B4010 		movq	16(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10043              		.loc 9 160 0
 10044 0015 4889C2   		movq	%rax, %rdx
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 10045              		.loc 9 161 0
 10046 0018 488B45E8 		movq	-24(%rbp), %rax
 10047 001c 488B00   		movq	(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10048              		.loc 9 160 0
 10049 001f 4829C2   		subq	%rax, %rdx
 10050 0022 4889D0   		movq	%rdx, %rax
 10051 0025 48C1F807 		sarq	$7, %rax
 10052 0029 4889C2   		movq	%rax, %rdx
 10053 002c 488B45E8 		movq	-24(%rbp), %rax
 10054 0030 488B08   		movq	(%rax), %rcx
 10055 0033 488B45E8 		movq	-24(%rbp), %rax
 10056 0037 4889CE   		movq	%rcx, %rsi
 10057 003a 4889C7   		movq	%rax, %rdi
 10058              	.LEHB271:
 10059 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 10059      00
 10060              	.LEHE271:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 10061              		.loc 9 161 0
 10062 0042 488B45E8 		movq	-24(%rbp), %rax
 10063 0046 4889C7   		movq	%rax, %rdi
 10064 0049 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10064      00
 10065              	.LBE180:
 10066 004e EB1A     		jmp	.L528
 10067              	.L527:
 10068 0050 4889C3   		movq	%rax, %rbx
 10069              	.LBB181:
 10070 0053 488B45E8 		movq	-24(%rbp), %rax
 10071 0057 4889C7   		movq	%rax, %rdi
 10072 005a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10072      00
 10073 005f 4889D8   		movq	%rbx, %rax
 10074 0062 4889C7   		movq	%rax, %rdi
 10075              	.LEHB272:
 10076 0065 E8000000 		call	_Unwind_Resume
 10076      00
 10077              	.LEHE272:
 10078              	.L528:
 10079              	.LBE181:
 10080 006a 4883C418 		addq	$24, %rsp
 10081 006e 5B       		popq	%rbx
 10082 006f 5D       		popq	%rbp
 10083              		.cfi_def_cfa 7, 8
 10084 0070 C3       		ret
 10085              		.cfi_endproc
 10086              	.LFE1601:
 10087              		.section	.gcc_except_table
 10088              	.LLSDA1601:
 10089 07d7 FF       		.byte	0xff
 10090 07d8 FF       		.byte	0xff
 10091 07d9 01       		.byte	0x1
 10092 07da 08       		.uleb128 .LLSDACSE1601-.LLSDACSB1601
 10093              	.LLSDACSB1601:
 10094 07db 3D       		.uleb128 .LEHB271-.LFB1601
 10095 07dc 05       		.uleb128 .LEHE271-.LEHB271
 10096 07dd 50       		.uleb128 .L527-.LFB1601
 10097 07de 00       		.uleb128 0
 10098 07df 65       		.uleb128 .LEHB272-.LFB1601
 10099 07e0 05       		.uleb128 .LEHE272-.LEHB272
 10100 07e1 00       		.uleb128 0
 10101 07e2 00       		.uleb128 0
 10102              	.LLSDACSE1601:
 10103              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 10105              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 10106              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 10107              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 10108              		.align 2
 10109              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 10111              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 10112              	.LFB1603:
 113:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 10113              		.loc 9 113 0
 10114              		.cfi_startproc
 10115 0000 55       		pushq	%rbp
 10116              		.cfi_def_cfa_offset 16
 10117              		.cfi_offset 6, -16
 10118 0001 4889E5   		movq	%rsp, %rbp
 10119              		.cfi_def_cfa_register 6
 10120 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/bits/stl_vector.h **** 
 10121              		.loc 9 114 0
 10122 0008 488B45F8 		movq	-8(%rbp), %rax
 10123 000c 5D       		popq	%rbp
 10124              		.cfi_def_cfa 7, 8
 10125 000d C3       		ret
 10126              		.cfi_endproc
 10127              	.LFE1603:
 10129              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 10130              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 10132              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 10133              	.LFB1604:
 10134              		.file 10 "/usr/include/c++/5/bits/stl_construct.h"
   1:/usr/include/c++/5/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_construct.h **** 
   3:/usr/include/c++/5/bits/stl_construct.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_construct.h **** //
   5:/usr/include/c++/5/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_construct.h **** 
  11:/usr/include/c++/5/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_construct.h **** 
  16:/usr/include/c++/5/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_construct.h **** 
  20:/usr/include/c++/5/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_construct.h **** 
  25:/usr/include/c++/5/bits/stl_construct.h **** /*
  26:/usr/include/c++/5/bits/stl_construct.h ****  *
  27:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_construct.h ****  *
  30:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_construct.h ****  *
  38:/usr/include/c++/5/bits/stl_construct.h ****  *
  39:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_construct.h ****  *
  42:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_construct.h ****  */
  50:/usr/include/c++/5/bits/stl_construct.h **** 
  51:/usr/include/c++/5/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/5/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/5/bits/stl_construct.h ****  */
  55:/usr/include/c++/5/bits/stl_construct.h **** 
  56:/usr/include/c++/5/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/5/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/5/bits/stl_construct.h **** 
  59:/usr/include/c++/5/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/5/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/5/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/5/bits/stl_construct.h **** 
  63:/usr/include/c++/5/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/5/bits/stl_construct.h **** {
  65:/usr/include/c++/5/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/5/bits/stl_construct.h **** 
  67:/usr/include/c++/5/bits/stl_construct.h ****   /**
  68:/usr/include/c++/5/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/5/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/5/bits/stl_construct.h ****    */
  71:/usr/include/c++/5/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/5/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/5/bits/stl_construct.h **** #else
  77:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/5/bits/stl_construct.h ****     {
  81:/usr/include/c++/5/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/5/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/5/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/5/bits/stl_construct.h ****     }
  85:/usr/include/c++/5/bits/stl_construct.h **** #endif
  86:/usr/include/c++/5/bits/stl_construct.h **** 
  87:/usr/include/c++/5/bits/stl_construct.h ****   /**
  88:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/5/bits/stl_construct.h ****    */
  90:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/5/bits/stl_construct.h **** 
  95:/usr/include/c++/5/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/5/bits/stl_construct.h ****     {
  98:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/5/bits/stl_construct.h ****         static void
 100:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/5/bits/stl_construct.h **** 	{
 102:/usr/include/c++/5/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/5/bits/stl_construct.h **** 	}
 105:/usr/include/c++/5/bits/stl_construct.h ****     };
 106:/usr/include/c++/5/bits/stl_construct.h **** 
 107:/usr/include/c++/5/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/5/bits/stl_construct.h ****     {
 110:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/5/bits/stl_construct.h ****         static void
 112:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/5/bits/stl_construct.h ****     };
 114:/usr/include/c++/5/bits/stl_construct.h **** 
 115:/usr/include/c++/5/bits/stl_construct.h ****   /**
 116:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/5/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/5/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/5/bits/stl_construct.h ****    */
 120:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/5/bits/stl_construct.h ****     {
 124:/usr/include/c++/5/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/5/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/5/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/5/bits/stl_construct.h ****     }
 129:/usr/include/c++/5/bits/stl_construct.h **** 
 130:/usr/include/c++/5/bits/stl_construct.h ****   /**
 131:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/5/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/5/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/5/bits/stl_construct.h ****    */
 135:/usr/include/c++/5/bits/stl_construct.h **** 
 136:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/5/bits/stl_construct.h ****     void
 138:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/5/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/5/bits/stl_construct.h ****     {
 141:/usr/include/c++/5/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/5/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/5/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/5/bits/stl_construct.h ****     }
 145:/usr/include/c++/5/bits/stl_construct.h **** 
 146:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 10135              		.loc 10 148 0
 10136              		.cfi_startproc
 10137 0000 55       		pushq	%rbp
 10138              		.cfi_def_cfa_offset 16
 10139              		.cfi_offset 6, -16
 10140 0001 4889E5   		movq	%rsp, %rbp
 10141              		.cfi_def_cfa_register 6
 10142 0004 4883EC20 		subq	$32, %rsp
 10143 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10144 000c 488975F0 		movq	%rsi, -16(%rbp)
 10145 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/5/bits/stl_construct.h ****     {
 151:/usr/include/c++/5/bits/stl_construct.h ****       _Destroy(__first, __last);
 10146              		.loc 10 151 0
 10147 0014 488B55F0 		movq	-16(%rbp), %rdx
 10148 0018 488B45F8 		movq	-8(%rbp), %rax
 10149 001c 4889D6   		movq	%rdx, %rsi
 10150 001f 4889C7   		movq	%rax, %rdi
 10151 0022 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 10151      00
 152:/usr/include/c++/5/bits/stl_construct.h ****     }
 10152              		.loc 10 152 0
 10153 0027 90       		nop
 10154 0028 C9       		leave
 10155              		.cfi_def_cfa 7, 8
 10156 0029 C3       		ret
 10157              		.cfi_endproc
 10158              	.LFE1604:
 10160              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 10161              		.align 2
 10162              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10164              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 10165              	.LFB1606:
 10166              		.file 11 "/usr/include/c++/5/bits/allocator.h"
   1:/usr/include/c++/5/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/5/bits/allocator.h **** 
   3:/usr/include/c++/5/bits/allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/allocator.h **** //
   5:/usr/include/c++/5/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/allocator.h **** // any later version.
  10:/usr/include/c++/5/bits/allocator.h **** 
  11:/usr/include/c++/5/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/allocator.h **** 
  16:/usr/include/c++/5/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/allocator.h **** 
  20:/usr/include/c++/5/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/allocator.h **** 
  25:/usr/include/c++/5/bits/allocator.h **** /*
  26:/usr/include/c++/5/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/5/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/5/bits/allocator.h ****  *
  29:/usr/include/c++/5/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/5/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/5/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/5/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/5/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/5/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/5/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/5/bits/allocator.h ****  */
  37:/usr/include/c++/5/bits/allocator.h **** 
  38:/usr/include/c++/5/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/5/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/5/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/5/bits/allocator.h ****  */
  42:/usr/include/c++/5/bits/allocator.h **** 
  43:/usr/include/c++/5/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/5/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/5/bits/allocator.h **** 
  46:/usr/include/c++/5/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/5/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/5/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/5/bits/allocator.h **** #endif
  51:/usr/include/c++/5/bits/allocator.h **** 
  52:/usr/include/c++/5/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/5/bits/allocator.h **** {
  54:/usr/include/c++/5/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/5/bits/allocator.h **** 
  56:/usr/include/c++/5/bits/allocator.h ****   /**
  57:/usr/include/c++/5/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/5/bits/allocator.h ****    *  @{
  59:/usr/include/c++/5/bits/allocator.h ****    */
  60:/usr/include/c++/5/bits/allocator.h **** 
  61:/usr/include/c++/5/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/5/bits/allocator.h ****   template<>
  63:/usr/include/c++/5/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/5/bits/allocator.h ****     {
  65:/usr/include/c++/5/bits/allocator.h ****     public:
  66:/usr/include/c++/5/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/5/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/5/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/5/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/5/bits/allocator.h **** 
  72:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/5/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/5/bits/allocator.h **** 
  76:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/5/bits/allocator.h **** #endif
  81:/usr/include/c++/5/bits/allocator.h ****     };
  82:/usr/include/c++/5/bits/allocator.h **** 
  83:/usr/include/c++/5/bits/allocator.h ****   /**
  84:/usr/include/c++/5/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/5/bits/allocator.h ****    *
  86:/usr/include/c++/5/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
  87:/usr/include/c++/5/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/5/bits/allocator.h ****    *
  89:/usr/include/c++/5/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/5/bits/allocator.h ****    */
  91:/usr/include/c++/5/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/5/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/5/bits/allocator.h ****     {
  94:/usr/include/c++/5/bits/allocator.h ****    public:
  95:/usr/include/c++/5/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp        value_type;
 102:/usr/include/c++/5/bits/allocator.h **** 
 103:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/5/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/5/bits/allocator.h **** 
 107:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/5/bits/allocator.h **** #endif
 112:/usr/include/c++/5/bits/allocator.h **** 
 113:/usr/include/c++/5/bits/allocator.h ****       allocator() throw() { }
 114:/usr/include/c++/5/bits/allocator.h **** 
 115:/usr/include/c++/5/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/5/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/5/bits/allocator.h **** 
 118:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/5/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/5/bits/allocator.h **** 
 121:/usr/include/c++/5/bits/allocator.h ****       ~allocator() throw() { }
 10167              		.loc 11 121 0
 10168              		.cfi_startproc
 10169 0000 55       		pushq	%rbp
 10170              		.cfi_def_cfa_offset 16
 10171              		.cfi_offset 6, -16
 10172 0001 4889E5   		movq	%rsp, %rbp
 10173              		.cfi_def_cfa_register 6
 10174 0004 4883EC10 		subq	$16, %rsp
 10175 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10176              	.LBB182:
 10177              		.loc 11 121 0
 10178 000c 488B45F8 		movq	-8(%rbp), %rax
 10179 0010 4889C7   		movq	%rax, %rdi
 10180 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 10180      00
 10181              	.LBE182:
 10182 0018 90       		nop
 10183 0019 C9       		leave
 10184              		.cfi_def_cfa 7, 8
 10185 001a C3       		ret
 10186              		.cfi_endproc
 10187              	.LFE1606:
 10189              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 10190              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10191              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 10192              		.align 2
 10193              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 10195              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 10196              	.LFB1608:
 174:/usr/include/c++/5/bits/stl_vector.h ****       {
 10197              		.loc 9 174 0
 10198              		.cfi_startproc
 10199 0000 55       		pushq	%rbp
 10200              		.cfi_def_cfa_offset 16
 10201              		.cfi_offset 6, -16
 10202 0001 4889E5   		movq	%rsp, %rbp
 10203              		.cfi_def_cfa_register 6
 10204 0004 4883EC20 		subq	$32, %rsp
 10205 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10206 000c 488975F0 		movq	%rsi, -16(%rbp)
 10207 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10208              		.loc 9 177 0
 10209 0014 48837DF0 		cmpq	$0, -16(%rbp)
 10209      00
 10210 0019 7417     		je	.L535
 178:/usr/include/c++/5/bits/stl_vector.h ****       }
 10211              		.loc 9 178 0
 10212 001b 488B45F8 		movq	-8(%rbp), %rax
 10213 001f 488B55E8 		movq	-24(%rbp), %rdx
 10214 0023 488B4DF0 		movq	-16(%rbp), %rcx
 10215 0027 4889CE   		movq	%rcx, %rsi
 10216 002a 4889C7   		movq	%rax, %rdi
 10217 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 10217      00
 10218              	.L535:
 179:/usr/include/c++/5/bits/stl_vector.h **** 
 10219              		.loc 9 179 0
 10220 0032 90       		nop
 10221 0033 C9       		leave
 10222              		.cfi_def_cfa 7, 8
 10223 0034 C3       		ret
 10224              		.cfi_endproc
 10225              	.LFE1608:
 10227              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 10228              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 10230              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 10231              	.LFB1609:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 10232              		.loc 10 122 0
 10233              		.cfi_startproc
 10234 0000 55       		pushq	%rbp
 10235              		.cfi_def_cfa_offset 16
 10236              		.cfi_offset 6, -16
 10237 0001 4889E5   		movq	%rsp, %rbp
 10238              		.cfi_def_cfa_register 6
 10239 0004 4883EC10 		subq	$16, %rsp
 10240 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10241 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 10242              		.loc 10 126 0
 10243 0010 488B55F0 		movq	-16(%rbp), %rdx
 10244 0014 488B45F8 		movq	-8(%rbp), %rax
 10245 0018 4889D6   		movq	%rdx, %rsi
 10246 001b 4889C7   		movq	%rax, %rdi
 10247 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 10247      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 10248              		.loc 10 128 0
 10249 0023 90       		nop
 10250 0024 C9       		leave
 10251              		.cfi_def_cfa 7, 8
 10252 0025 C3       		ret
 10253              		.cfi_endproc
 10254              	.LFE1609:
 10256              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 10257              		.align 2
 10258              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 10260              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 10261              	.LFB1611:
 10262              		.file 12 "/usr/include/c++/5/ext/new_allocator.h"
   1:/usr/include/c++/5/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/5/ext/new_allocator.h **** 
   3:/usr/include/c++/5/ext/new_allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/new_allocator.h **** //
   5:/usr/include/c++/5/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/5/ext/new_allocator.h **** 
  11:/usr/include/c++/5/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/new_allocator.h **** 
  16:/usr/include/c++/5/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/new_allocator.h **** 
  20:/usr/include/c++/5/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/new_allocator.h **** 
  25:/usr/include/c++/5/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/5/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/new_allocator.h ****  */
  28:/usr/include/c++/5/ext/new_allocator.h **** 
  29:/usr/include/c++/5/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/5/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/5/ext/new_allocator.h **** 
  32:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/5/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/5/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/5/ext/new_allocator.h **** #endif
  39:/usr/include/c++/5/ext/new_allocator.h **** 
  40:/usr/include/c++/5/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/5/ext/new_allocator.h **** {
  42:/usr/include/c++/5/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/5/ext/new_allocator.h **** 
  44:/usr/include/c++/5/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/5/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/5/ext/new_allocator.h **** 
  47:/usr/include/c++/5/ext/new_allocator.h ****   /**
  48:/usr/include/c++/5/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/5/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/5/ext/new_allocator.h ****    *
  51:/usr/include/c++/5/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/5/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/5/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/5/ext/new_allocator.h ****    *
  55:/usr/include/c++/5/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/5/ext/new_allocator.h ****    */
  57:/usr/include/c++/5/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/5/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/5/ext/new_allocator.h ****     {
  60:/usr/include/c++/5/ext/new_allocator.h ****     public:
  61:/usr/include/c++/5/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/5/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/5/ext/new_allocator.h **** 
  69:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/5/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/5/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/5/ext/new_allocator.h **** 
  73:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/5/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/5/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/5/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/5/ext/new_allocator.h **** #endif
  78:/usr/include/c++/5/ext/new_allocator.h **** 
  79:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/5/ext/new_allocator.h **** 
  81:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/5/ext/new_allocator.h **** 
  83:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/5/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/5/ext/new_allocator.h **** 
  86:/usr/include/c++/5/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 10263              		.loc 12 86 0
 10264              		.cfi_startproc
 10265 0000 55       		pushq	%rbp
 10266              		.cfi_def_cfa_offset 16
 10267              		.cfi_offset 6, -16
 10268 0001 4889E5   		movq	%rsp, %rbp
 10269              		.cfi_def_cfa_register 6
 10270 0004 48897DF8 		movq	%rdi, -8(%rbp)
 10271              		.loc 12 86 0
 10272 0008 90       		nop
 10273 0009 5D       		popq	%rbp
 10274              		.cfi_def_cfa 7, 8
 10275 000a C3       		ret
 10276              		.cfi_endproc
 10277              	.LFE1611:
 10279              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 10280              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 10281              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_
 10282              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 10284              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:
 10285              	.LFB1613:
 10286              		.file 13 "/usr/include/c++/5/ext/alloc_traits.h"
   1:/usr/include/c++/5/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/5/ext/alloc_traits.h **** 
   3:/usr/include/c++/5/ext/alloc_traits.h **** // Copyright (C) 2011-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/alloc_traits.h **** //
   5:/usr/include/c++/5/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/5/ext/alloc_traits.h **** 
  11:/usr/include/c++/5/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/alloc_traits.h **** 
  16:/usr/include/c++/5/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/alloc_traits.h **** 
  20:/usr/include/c++/5/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/alloc_traits.h **** 
  25:/usr/include/c++/5/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/5/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/alloc_traits.h ****  */
  28:/usr/include/c++/5/ext/alloc_traits.h **** 
  29:/usr/include/c++/5/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/5/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/5/ext/alloc_traits.h **** 
  32:/usr/include/c++/5/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/5/ext/alloc_traits.h **** 
  34:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/5/ext/alloc_traits.h **** #else
  38:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/5/ext/alloc_traits.h **** 
  41:/usr/include/c++/5/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/5/ext/alloc_traits.h **** {
  43:/usr/include/c++/5/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/5/ext/alloc_traits.h **** 
  45:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Alloc>
  47:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal : std::false_type { };
  48:/usr/include/c++/5/ext/alloc_traits.h **** 
  49:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  50:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<std::allocator<_Tp>>
  51:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  52:/usr/include/c++/5/ext/alloc_traits.h **** 
  53:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename, typename> struct array_allocator;
  54:/usr/include/c++/5/ext/alloc_traits.h **** 
  55:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp, typename _Array>
  56:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<array_allocator<_Tp, _Array>>
  57:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  58:/usr/include/c++/5/ext/alloc_traits.h **** 
  59:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct bitmap_allocator;
  60:/usr/include/c++/5/ext/alloc_traits.h **** 
  61:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  62:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<bitmap_allocator<_Tp>>
  63:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  64:/usr/include/c++/5/ext/alloc_traits.h **** 
  65:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct malloc_allocator;
  66:/usr/include/c++/5/ext/alloc_traits.h **** 
  67:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  68:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<malloc_allocator<_Tp>>
  69:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  70:/usr/include/c++/5/ext/alloc_traits.h **** 
  71:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct mt_allocator;
  72:/usr/include/c++/5/ext/alloc_traits.h **** 
  73:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  74:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<mt_allocator<_Tp>>
  75:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  76:/usr/include/c++/5/ext/alloc_traits.h **** 
  77:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct new_allocator;
  78:/usr/include/c++/5/ext/alloc_traits.h **** 
  79:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  80:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<new_allocator<_Tp>>
  81:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  82:/usr/include/c++/5/ext/alloc_traits.h **** 
  83:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct pool_allocator;
  84:/usr/include/c++/5/ext/alloc_traits.h **** 
  85:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  86:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<pool_allocator<_Tp>>
  87:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  88:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  89:/usr/include/c++/5/ext/alloc_traits.h **** 
  90:/usr/include/c++/5/ext/alloc_traits.h **** /**
  91:/usr/include/c++/5/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++0x allocators.
  92:/usr/include/c++/5/ext/alloc_traits.h ****  * @ingroup allocators
  93:/usr/include/c++/5/ext/alloc_traits.h **** */
  94:/usr/include/c++/5/ext/alloc_traits.h **** template<typename _Alloc>
  95:/usr/include/c++/5/ext/alloc_traits.h ****   struct __alloc_traits
  96:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/5/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  98:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  99:/usr/include/c++/5/ext/alloc_traits.h ****   {
 100:/usr/include/c++/5/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
 101:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
 102:/usr/include/c++/5/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
 103:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
 104:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
 105:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
 106:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
 107:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
 108:/usr/include/c++/5/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
 109:/usr/include/c++/5/ext/alloc_traits.h ****     typedef value_type&                             reference;
 110:/usr/include/c++/5/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
 111:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::allocate;
 112:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::deallocate;
 113:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::construct;
 114:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::destroy;
 115:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::max_size;
 116:/usr/include/c++/5/ext/alloc_traits.h **** 
 117:/usr/include/c++/5/ext/alloc_traits.h ****   private:
 118:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr>
 119:/usr/include/c++/5/ext/alloc_traits.h ****       using __is_custom_pointer
 120:/usr/include/c++/5/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
 121:/usr/include/c++/5/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
 122:/usr/include/c++/5/ext/alloc_traits.h **** 
 123:/usr/include/c++/5/ext/alloc_traits.h ****   public:
 124:/usr/include/c++/5/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
 125:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
 126:/usr/include/c++/5/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 127:/usr/include/c++/5/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
 128:/usr/include/c++/5/ext/alloc_traits.h ****       {
 129:/usr/include/c++/5/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
 130:/usr/include/c++/5/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
 131:/usr/include/c++/5/ext/alloc_traits.h ****       }
 132:/usr/include/c++/5/ext/alloc_traits.h **** 
 133:/usr/include/c++/5/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
 134:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr>
 135:/usr/include/c++/5/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 136:/usr/include/c++/5/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
 137:/usr/include/c++/5/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
 138:/usr/include/c++/5/ext/alloc_traits.h **** 
 139:/usr/include/c++/5/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 140:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 141:/usr/include/c++/5/ext/alloc_traits.h **** 
 142:/usr/include/c++/5/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
 143:/usr/include/c++/5/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 144:/usr/include/c++/5/ext/alloc_traits.h **** 
 145:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 146:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 147:/usr/include/c++/5/ext/alloc_traits.h **** 
 148:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 149:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 150:/usr/include/c++/5/ext/alloc_traits.h **** 
 151:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 152:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 153:/usr/include/c++/5/ext/alloc_traits.h **** 
 154:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 155:/usr/include/c++/5/ext/alloc_traits.h ****     { return __allocator_always_compares_equal<_Alloc>::value; }
 156:/usr/include/c++/5/ext/alloc_traits.h **** 
 157:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 158:/usr/include/c++/5/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 159:/usr/include/c++/5/ext/alloc_traits.h **** 
 160:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_swap()
 161:/usr/include/c++/5/ext/alloc_traits.h ****     {
 162:/usr/include/c++/5/ext/alloc_traits.h ****       using std::swap;
 163:/usr/include/c++/5/ext/alloc_traits.h ****       return !_S_propagate_on_swap()
 164:/usr/include/c++/5/ext/alloc_traits.h ****        	|| noexcept(swap(std::declval<_Alloc&>(), std::declval<_Alloc&>()));
 165:/usr/include/c++/5/ext/alloc_traits.h ****     }
 166:/usr/include/c++/5/ext/alloc_traits.h **** 
 167:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Tp>
 168:/usr/include/c++/5/ext/alloc_traits.h ****       struct rebind
 169:/usr/include/c++/5/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 170:/usr/include/c++/5/ext/alloc_traits.h **** #else
 171:/usr/include/c++/5/ext/alloc_traits.h **** 
 172:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 173:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 174:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 175:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 176:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 177:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 178:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 179:/usr/include/c++/5/ext/alloc_traits.h **** 
 180:/usr/include/c++/5/ext/alloc_traits.h ****     static pointer
 181:/usr/include/c++/5/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 182:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 183:/usr/include/c++/5/ext/alloc_traits.h **** 
 184:/usr/include/c++/5/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 10287              		.loc 13 184 0
 10288              		.cfi_startproc
 10289 0000 55       		pushq	%rbp
 10290              		.cfi_def_cfa_offset 16
 10291              		.cfi_offset 6, -16
 10292 0001 4889E5   		movq	%rsp, %rbp
 10293              		.cfi_def_cfa_register 6
 10294 0004 4883EC20 		subq	$32, %rsp
 10295 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10296 000c 488975F0 		movq	%rsi, -16(%rbp)
 10297 0010 488955E8 		movq	%rdx, -24(%rbp)
 185:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 10298              		.loc 13 185 0
 10299 0014 488B55E8 		movq	-24(%rbp), %rdx
 10300 0018 488B4DF0 		movq	-16(%rbp), %rcx
 10301 001c 488B45F8 		movq	-8(%rbp), %rax
 10302 0020 4889CE   		movq	%rcx, %rsi
 10303 0023 4889C7   		movq	%rax, %rdi
 10304 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 10304      00
 10305 002b 90       		nop
 10306 002c C9       		leave
 10307              		.cfi_def_cfa 7, 8
 10308 002d C3       		ret
 10309              		.cfi_endproc
 10310              	.LFE1613:
 10312              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 10313              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 10315              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 10316              	.LFB1614:
 100:/usr/include/c++/5/bits/stl_construct.h **** 	{
 10317              		.loc 10 100 0
 10318              		.cfi_startproc
 10319 0000 55       		pushq	%rbp
 10320              		.cfi_def_cfa_offset 16
 10321              		.cfi_offset 6, -16
 10322 0001 4889E5   		movq	%rsp, %rbp
 10323              		.cfi_def_cfa_register 6
 10324 0004 4883EC10 		subq	$16, %rsp
 10325 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10326 000c 488975F0 		movq	%rsi, -16(%rbp)
 10327              	.L541:
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10328              		.loc 10 102 0 discriminator 2
 10329 0010 488B45F8 		movq	-8(%rbp), %rax
 10330 0014 483B45F0 		cmpq	-16(%rbp), %rax
 10331 0018 741B     		je	.L542
 103:/usr/include/c++/5/bits/stl_construct.h **** 	}
 10332              		.loc 10 103 0 discriminator 1
 10333 001a 488B45F8 		movq	-8(%rbp), %rax
 10334 001e 4889C7   		movq	%rax, %rdi
 10335 0021 E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 10335      00
 10336 0026 4889C7   		movq	%rax, %rdi
 10337 0029 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 10337      00
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10338              		.loc 10 102 0 discriminator 1
 10339 002e 48836DF8 		subq	$-128, -8(%rbp)
 10339      80
 10340 0033 EBDB     		jmp	.L541
 10341              	.L542:
 104:/usr/include/c++/5/bits/stl_construct.h ****     };
 10342              		.loc 10 104 0
 10343 0035 90       		nop
 10344 0036 C9       		leave
 10345              		.cfi_def_cfa 7, 8
 10346 0037 C3       		ret
 10347              		.cfi_endproc
 10348              	.LFE1614:
 10350              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 10351              		.align 2
 10352              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 10354              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 10355              	.LFB1615:
  87:/usr/include/c++/5/ext/new_allocator.h **** 
  88:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/5/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/5/ext/new_allocator.h **** 
  92:/usr/include/c++/5/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/5/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/5/ext/new_allocator.h **** 
  96:/usr/include/c++/5/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/5/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/5/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/5/ext/new_allocator.h ****       { 
 101:/usr/include/c++/5/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/5/ext/new_allocator.h **** 
 104:/usr/include/c++/5/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/5/ext/new_allocator.h ****       }
 106:/usr/include/c++/5/ext/new_allocator.h **** 
 107:/usr/include/c++/5/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/5/ext/new_allocator.h ****       void
 109:/usr/include/c++/5/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 10356              		.loc 12 109 0
 10357              		.cfi_startproc
 10358 0000 55       		pushq	%rbp
 10359              		.cfi_def_cfa_offset 16
 10360              		.cfi_offset 6, -16
 10361 0001 4889E5   		movq	%rsp, %rbp
 10362              		.cfi_def_cfa_register 6
 10363 0004 4883EC20 		subq	$32, %rsp
 10364 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10365 000c 488975F0 		movq	%rsi, -16(%rbp)
 10366 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 10367              		.loc 12 110 0
 10368 0014 488B45F0 		movq	-16(%rbp), %rax
 10369 0018 4889C7   		movq	%rax, %rdi
 10370 001b E8000000 		call	_ZdlPv
 10370      00
 10371 0020 90       		nop
 10372 0021 C9       		leave
 10373              		.cfi_def_cfa 7, 8
 10374 0022 C3       		ret
 10375              		.cfi_endproc
 10376              	.LFE1615:
 10378              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 10379              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 10381              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 10382              	.LFB1616:
 10383              		.file 14 "/usr/include/c++/5/bits/move.h"
   1:/usr/include/c++/5/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/5/bits/move.h **** 
   3:/usr/include/c++/5/bits/move.h **** // Copyright (C) 2007-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/move.h **** //
   5:/usr/include/c++/5/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/move.h **** // any later version.
  10:/usr/include/c++/5/bits/move.h **** 
  11:/usr/include/c++/5/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/move.h **** 
  16:/usr/include/c++/5/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/move.h **** 
  20:/usr/include/c++/5/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/move.h **** 
  25:/usr/include/c++/5/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/5/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/5/bits/move.h ****  */
  29:/usr/include/c++/5/bits/move.h **** 
  30:/usr/include/c++/5/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/5/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/5/bits/move.h **** 
  33:/usr/include/c++/5/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/5/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/5/bits/move.h **** 
  36:/usr/include/c++/5/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/5/bits/move.h **** {
  38:/usr/include/c++/5/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/5/bits/move.h **** 
  40:/usr/include/c++/5/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/5/bits/move.h ****   /**
  42:/usr/include/c++/5/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/5/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/5/bits/move.h ****    */
  45:/usr/include/c++/5/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/5/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/5/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 10384              		.loc 14 47 0
 10385              		.cfi_startproc
 10386 0000 55       		pushq	%rbp
 10387              		.cfi_def_cfa_offset 16
 10388              		.cfi_offset 6, -16
 10389 0001 4889E5   		movq	%rsp, %rbp
 10390              		.cfi_def_cfa_register 6
 10391 0004 48897DF8 		movq	%rdi, -8(%rbp)
  48:/usr/include/c++/5/bits/move.h ****     {
  49:/usr/include/c++/5/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/5/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
 10392              		.loc 14 50 0
 10393 0008 488B45F8 		movq	-8(%rbp), %rax
  51:/usr/include/c++/5/bits/move.h ****     }
 10394              		.loc 14 51 0
 10395 000c 5D       		popq	%rbp
 10396              		.cfi_def_cfa 7, 8
 10397 000d C3       		ret
 10398              		.cfi_endproc
 10399              	.LFE1616:
 10401              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 10402              		.align 2
 10403              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 10405              	_ZN8UnitTest18DeferredTestResultD2Ev:
 10406              	.LFB1619:
 10407              		.file 15 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 10408              		.loc 15 10 0
 10409              		.cfi_startproc
 10410              		.cfi_personality 0x3,__gxx_personality_v0
 10411              		.cfi_lsda 0x3,.LLSDA1619
 10412 0000 55       		pushq	%rbp
 10413              		.cfi_def_cfa_offset 16
 10414              		.cfi_offset 6, -16
 10415 0001 4889E5   		movq	%rsp, %rbp
 10416              		.cfi_def_cfa_register 6
 10417 0004 53       		pushq	%rbx
 10418 0005 4883EC18 		subq	$24, %rsp
 10419              		.cfi_offset 3, -24
 10420 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10421              	.LBB183:
 10422              		.loc 15 10 0
 10423 000d 488B45E8 		movq	-24(%rbp), %rax
 10424 0011 4883C060 		addq	$96, %rax
 10425 0015 4889C7   		movq	%rax, %rdi
 10426              	.LEHB273:
 10427 0018 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 10427      00
 10428              	.LEHE273:
 10429              		.loc 15 10 0 is_stmt 0 discriminator 2
 10430 001d 488B45E8 		movq	-24(%rbp), %rax
 10431 0021 4883C040 		addq	$64, %rax
 10432 0025 4889C7   		movq	%rax, %rdi
 10433              	.LEHB274:
 10434 0028 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 10434      00
 10435              	.LEHE274:
 10436              		.loc 15 10 0 discriminator 4
 10437 002d 488B45E8 		movq	-24(%rbp), %rax
 10438 0031 4883C020 		addq	$32, %rax
 10439 0035 4889C7   		movq	%rax, %rdi
 10440              	.LEHB275:
 10441 0038 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 10441      00
 10442              	.LEHE275:
 10443              		.loc 15 10 0 discriminator 6
 10444 003d 488B45E8 		movq	-24(%rbp), %rax
 10445 0041 4889C7   		movq	%rax, %rdi
 10446              	.LEHB276:
 10447 0044 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 10447      00
 10448              	.LEHE276:
 10449              	.LBE183:
 10450 0049 EB44     		jmp	.L553
 10451              	.L550:
 10452 004b 4889C3   		movq	%rax, %rbx
 10453              	.LBB184:
 10454              		.loc 15 10 0
 10455 004e 488B45E8 		movq	-24(%rbp), %rax
 10456 0052 4883C040 		addq	$64, %rax
 10457 0056 4889C7   		movq	%rax, %rdi
 10458 0059 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 10458      00
 10459 005e EB03     		jmp	.L548
 10460              	.L551:
 10461 0060 4889C3   		movq	%rax, %rbx
 10462              	.L548:
 10463              		.loc 15 10 0 discriminator 3
 10464 0063 488B45E8 		movq	-24(%rbp), %rax
 10465 0067 4883C020 		addq	$32, %rax
 10466 006b 4889C7   		movq	%rax, %rdi
 10467 006e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 10467      00
 10468 0073 EB03     		jmp	.L549
 10469              	.L552:
 10470 0075 4889C3   		movq	%rax, %rbx
 10471              	.L549:
 10472              		.loc 15 10 0 discriminator 5
 10473 0078 488B45E8 		movq	-24(%rbp), %rax
 10474 007c 4889C7   		movq	%rax, %rdi
 10475 007f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 10475      00
 10476 0084 4889D8   		movq	%rbx, %rax
 10477 0087 4889C7   		movq	%rax, %rdi
 10478              	.LEHB277:
 10479 008a E8000000 		call	_Unwind_Resume
 10479      00
 10480              	.LEHE277:
 10481              	.L553:
 10482              	.LBE184:
 10483              		.loc 15 10 0
 10484 008f 4883C418 		addq	$24, %rsp
 10485 0093 5B       		popq	%rbx
 10486 0094 5D       		popq	%rbp
 10487              		.cfi_def_cfa 7, 8
 10488 0095 C3       		ret
 10489              		.cfi_endproc
 10490              	.LFE1619:
 10491              		.section	.gcc_except_table
 10492              	.LLSDA1619:
 10493 07e3 FF       		.byte	0xff
 10494 07e4 FF       		.byte	0xff
 10495 07e5 01       		.byte	0x1
 10496 07e6 15       		.uleb128 .LLSDACSE1619-.LLSDACSB1619
 10497              	.LLSDACSB1619:
 10498 07e7 18       		.uleb128 .LEHB273-.LFB1619
 10499 07e8 05       		.uleb128 .LEHE273-.LEHB273
 10500 07e9 4B       		.uleb128 .L550-.LFB1619
 10501 07ea 00       		.uleb128 0
 10502 07eb 28       		.uleb128 .LEHB274-.LFB1619
 10503 07ec 05       		.uleb128 .LEHE274-.LEHB274
 10504 07ed 60       		.uleb128 .L551-.LFB1619
 10505 07ee 00       		.uleb128 0
 10506 07ef 38       		.uleb128 .LEHB275-.LFB1619
 10507 07f0 05       		.uleb128 .LEHE275-.LEHB275
 10508 07f1 75       		.uleb128 .L552-.LFB1619
 10509 07f2 00       		.uleb128 0
 10510 07f3 44       		.uleb128 .LEHB276-.LFB1619
 10511 07f4 05       		.uleb128 .LEHE276-.LEHB276
 10512 07f5 00       		.uleb128 0
 10513 07f6 00       		.uleb128 0
 10514 07f7 8A01     		.uleb128 .LEHB277-.LFB1619
 10515 07f9 05       		.uleb128 .LEHE277-.LEHB277
 10516 07fa 00       		.uleb128 0
 10517 07fb 00       		.uleb128 0
 10518              	.LLSDACSE1619:
 10519              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 10521              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 10522              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 10523              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 10524              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 10526              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 10527              	.LFB1617:
  92:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 10528              		.loc 10 92 0 is_stmt 1
 10529              		.cfi_startproc
 10530 0000 55       		pushq	%rbp
 10531              		.cfi_def_cfa_offset 16
 10532              		.cfi_offset 6, -16
 10533 0001 4889E5   		movq	%rsp, %rbp
 10534              		.cfi_def_cfa_register 6
 10535 0004 4883EC10 		subq	$16, %rsp
 10536 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/5/bits/stl_construct.h **** 
 10537              		.loc 10 93 0
 10538 000c 488B45F8 		movq	-8(%rbp), %rax
 10539 0010 4889C7   		movq	%rax, %rdi
 10540 0013 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 10540      00
 10541 0018 90       		nop
 10542 0019 C9       		leave
 10543              		.cfi_def_cfa 7, 8
 10544 001a C3       		ret
 10545              		.cfi_endproc
 10546              	.LFE1617:
 10548              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 10549              		.align 2
 10550              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
 10552              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 10553              	.LFB1622:
 423:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 10554              		.loc 9 423 0
 10555              		.cfi_startproc
 10556              		.cfi_personality 0x3,__gxx_personality_v0
 10557              		.cfi_lsda 0x3,.LLSDA1622
 10558 0000 55       		pushq	%rbp
 10559              		.cfi_def_cfa_offset 16
 10560              		.cfi_offset 6, -16
 10561 0001 4889E5   		movq	%rsp, %rbp
 10562              		.cfi_def_cfa_register 6
 10563 0004 53       		pushq	%rbx
 10564 0005 4883EC18 		subq	$24, %rsp
 10565              		.cfi_offset 3, -24
 10566 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10567              	.LBB185:
 10568              		.loc 9 425 0
 10569 000d 488B45E8 		movq	-24(%rbp), %rax
 10570 0011 4889C7   		movq	%rax, %rdi
 10571 0014 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 10571      00
 10572 0019 4889C2   		movq	%rax, %rdx
 424:/usr/include/c++/5/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 10573              		.loc 9 424 0
 10574 001c 488B45E8 		movq	-24(%rbp), %rax
 10575 0020 488B4808 		movq	8(%rax), %rcx
 10576 0024 488B45E8 		movq	-24(%rbp), %rax
 10577 0028 488B00   		movq	(%rax), %rax
 10578 002b 4889CE   		movq	%rcx, %rsi
 10579 002e 4889C7   		movq	%rax, %rdi
 10580              	.LEHB278:
 10581 0031 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 10581      00
 10582              	.LEHE278:
 10583              		.loc 9 425 0
 10584 0036 488B45E8 		movq	-24(%rbp), %rax
 10585 003a 4889C7   		movq	%rax, %rdi
 10586              	.LEHB279:
 10587 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 10587      00
 10588              	.LEHE279:
 10589              	.LBE185:
 10590 0042 EB1A     		jmp	.L558
 10591              	.L557:
 10592 0044 4889C3   		movq	%rax, %rbx
 10593              	.LBB186:
 10594 0047 488B45E8 		movq	-24(%rbp), %rax
 10595 004b 4889C7   		movq	%rax, %rdi
 10596 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 10596      00
 10597 0053 4889D8   		movq	%rbx, %rax
 10598 0056 4889C7   		movq	%rax, %rdi
 10599              	.LEHB280:
 10600 0059 E8000000 		call	_Unwind_Resume
 10600      00
 10601              	.LEHE280:
 10602              	.L558:
 10603              	.LBE186:
 10604 005e 4883C418 		addq	$24, %rsp
 10605 0062 5B       		popq	%rbx
 10606 0063 5D       		popq	%rbp
 10607              		.cfi_def_cfa 7, 8
 10608 0064 C3       		ret
 10609              		.cfi_endproc
 10610              	.LFE1622:
 10611              		.section	.gcc_except_table
 10612              	.LLSDA1622:
 10613 07fc FF       		.byte	0xff
 10614 07fd FF       		.byte	0xff
 10615 07fe 01       		.byte	0x1
 10616 07ff 0C       		.uleb128 .LLSDACSE1622-.LLSDACSB1622
 10617              	.LLSDACSB1622:
 10618 0800 31       		.uleb128 .LEHB278-.LFB1622
 10619 0801 05       		.uleb128 .LEHE278-.LEHB278
 10620 0802 44       		.uleb128 .L557-.LFB1622
 10621 0803 00       		.uleb128 0
 10622 0804 3D       		.uleb128 .LEHB279-.LFB1622
 10623 0805 05       		.uleb128 .LEHE279-.LEHB279
 10624 0806 00       		.uleb128 0
 10625 0807 00       		.uleb128 0
 10626 0808 59       		.uleb128 .LEHB280-.LFB1622
 10627 0809 05       		.uleb128 .LEHE280-.LEHB280
 10628 080a 00       		.uleb128 0
 10629 080b 00       		.uleb128 0
 10630              	.LLSDACSE1622:
 10631              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 10633              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 10634              		.set	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev,_ZNSt
 10635              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 10636              		.align 2
 10637              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 10639              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector
 10640              	.LFB1626:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 10641              		.loc 9 79 0
 10642              		.cfi_startproc
 10643 0000 55       		pushq	%rbp
 10644              		.cfi_def_cfa_offset 16
 10645              		.cfi_offset 6, -16
 10646 0001 4889E5   		movq	%rsp, %rbp
 10647              		.cfi_def_cfa_register 6
 10648 0004 4883EC10 		subq	$16, %rsp
 10649 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10650              	.LBB187:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 10651              		.loc 9 79 0
 10652 000c 488B45F8 		movq	-8(%rbp), %rax
 10653 0010 4889C7   		movq	%rax, %rdi
 10654 0013 E8000000 		call	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 10654      00
 10655              	.LBE187:
 10656 0018 90       		nop
 10657 0019 C9       		leave
 10658              		.cfi_def_cfa 7, 8
 10659 001a C3       		ret
 10660              		.cfi_endproc
 10661              	.LFE1626:
 10663              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 10664              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 10665              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 10666              		.align 2
 10667              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2
 10669              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 10670              	.LFB1628:
 159:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 10671              		.loc 9 159 0
 10672              		.cfi_startproc
 10673              		.cfi_personality 0x3,__gxx_personality_v0
 10674              		.cfi_lsda 0x3,.LLSDA1628
 10675 0000 55       		pushq	%rbp
 10676              		.cfi_def_cfa_offset 16
 10677              		.cfi_offset 6, -16
 10678 0001 4889E5   		movq	%rsp, %rbp
 10679              		.cfi_def_cfa_register 6
 10680 0004 53       		pushq	%rbx
 10681 0005 4883EC18 		subq	$24, %rsp
 10682              		.cfi_offset 3, -24
 10683 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10684              	.LBB188:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 10685              		.loc 9 161 0
 10686 000d 488B45E8 		movq	-24(%rbp), %rax
 10687 0011 488B4010 		movq	16(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10688              		.loc 9 160 0
 10689 0015 4889C2   		movq	%rax, %rdx
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 10690              		.loc 9 161 0
 10691 0018 488B45E8 		movq	-24(%rbp), %rax
 10692 001c 488B00   		movq	(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10693              		.loc 9 160 0
 10694 001f 4829C2   		subq	%rax, %rdx
 10695 0022 4889D0   		movq	%rdx, %rax
 10696 0025 48C1F803 		sarq	$3, %rax
 10697 0029 4889C2   		movq	%rax, %rdx
 10698 002c 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 10698      CCCCCCCC 
 10698      CCCC
 10699 0036 480FAFC2 		imulq	%rdx, %rax
 10700 003a 4889C2   		movq	%rax, %rdx
 10701 003d 488B45E8 		movq	-24(%rbp), %rax
 10702 0041 488B08   		movq	(%rax), %rcx
 10703 0044 488B45E8 		movq	-24(%rbp), %rax
 10704 0048 4889CE   		movq	%rcx, %rsi
 10705 004b 4889C7   		movq	%rax, %rdi
 10706              	.LEHB281:
 10707 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 10707      00
 10708              	.LEHE281:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 10709              		.loc 9 161 0
 10710 0053 488B45E8 		movq	-24(%rbp), %rax
 10711 0057 4889C7   		movq	%rax, %rdi
 10712 005a E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 10712      00
 10713              	.LBE188:
 10714 005f EB1A     		jmp	.L563
 10715              	.L562:
 10716 0061 4889C3   		movq	%rax, %rbx
 10717              	.LBB189:
 10718 0064 488B45E8 		movq	-24(%rbp), %rax
 10719 0068 4889C7   		movq	%rax, %rdi
 10720 006b E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 10720      00
 10721 0070 4889D8   		movq	%rbx, %rax
 10722 0073 4889C7   		movq	%rax, %rdi
 10723              	.LEHB282:
 10724 0076 E8000000 		call	_Unwind_Resume
 10724      00
 10725              	.LEHE282:
 10726              	.L563:
 10727              	.LBE189:
 10728 007b 4883C418 		addq	$24, %rsp
 10729 007f 5B       		popq	%rbx
 10730 0080 5D       		popq	%rbp
 10731              		.cfi_def_cfa 7, 8
 10732 0081 C3       		ret
 10733              		.cfi_endproc
 10734              	.LFE1628:
 10735              		.section	.gcc_except_table
 10736              	.LLSDA1628:
 10737 080c FF       		.byte	0xff
 10738 080d FF       		.byte	0xff
 10739 080e 01       		.byte	0x1
 10740 080f 08       		.uleb128 .LLSDACSE1628-.LLSDACSB1628
 10741              	.LLSDACSB1628:
 10742 0810 4E       		.uleb128 .LEHB281-.LFB1628
 10743 0811 05       		.uleb128 .LEHE281-.LEHB281
 10744 0812 61       		.uleb128 .L562-.LFB1628
 10745 0813 00       		.uleb128 0
 10746 0814 76       		.uleb128 .LEHB282-.LFB1628
 10747 0815 05       		.uleb128 .LEHE282-.LEHB282
 10748 0816 00       		.uleb128 0
 10749 0817 00       		.uleb128 0
 10750              	.LLSDACSE1628:
 10751              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 10753              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1
 10754              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1E
 10755              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 10756              		.align 2
 10757              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 10759              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_
 10760              	.LFB1630:
 113:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 10761              		.loc 9 113 0
 10762              		.cfi_startproc
 10763 0000 55       		pushq	%rbp
 10764              		.cfi_def_cfa_offset 16
 10765              		.cfi_offset 6, -16
 10766 0001 4889E5   		movq	%rsp, %rbp
 10767              		.cfi_def_cfa_register 6
 10768 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/bits/stl_vector.h **** 
 10769              		.loc 9 114 0
 10770 0008 488B45F8 		movq	-8(%rbp), %rax
 10771 000c 5D       		popq	%rbp
 10772              		.cfi_def_cfa 7, 8
 10773 000d C3       		ret
 10774              		.cfi_endproc
 10775              	.LFE1630:
 10777              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT
 10778              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT
 10780              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:
 10781              	.LFB1631:
 148:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 10782              		.loc 10 148 0
 10783              		.cfi_startproc
 10784 0000 55       		pushq	%rbp
 10785              		.cfi_def_cfa_offset 16
 10786              		.cfi_offset 6, -16
 10787 0001 4889E5   		movq	%rsp, %rbp
 10788              		.cfi_def_cfa_register 6
 10789 0004 4883EC20 		subq	$32, %rsp
 10790 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10791 000c 488975F0 		movq	%rsi, -16(%rbp)
 10792 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/5/bits/stl_construct.h ****     }
 10793              		.loc 10 151 0
 10794 0014 488B55F0 		movq	-16(%rbp), %rdx
 10795 0018 488B45F8 		movq	-8(%rbp), %rax
 10796 001c 4889D6   		movq	%rdx, %rsi
 10797 001f 4889C7   		movq	%rax, %rdi
 10798 0022 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 10798      00
 10799              		.loc 10 152 0
 10800 0027 90       		nop
 10801 0028 C9       		leave
 10802              		.cfi_def_cfa 7, 8
 10803 0029 C3       		ret
 10804              		.cfi_endproc
 10805              	.LFE1631:
 10807              		.section	.text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev,"axG",@pr
 10808              		.align 2
 10809              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 10811              	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 10812              	.LFB1633:
 10813              		.loc 11 121 0
 10814              		.cfi_startproc
 10815 0000 55       		pushq	%rbp
 10816              		.cfi_def_cfa_offset 16
 10817              		.cfi_offset 6, -16
 10818 0001 4889E5   		movq	%rsp, %rbp
 10819              		.cfi_def_cfa_register 6
 10820 0004 4883EC10 		subq	$16, %rsp
 10821 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10822              	.LBB190:
 10823              		.loc 11 121 0
 10824 000c 488B45F8 		movq	-8(%rbp), %rax
 10825 0010 4889C7   		movq	%rax, %rdi
 10826 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 10826      00
 10827              	.LBE190:
 10828 0018 90       		nop
 10829 0019 C9       		leave
 10830              		.cfi_def_cfa 7, 8
 10831 001a C3       		ret
 10832              		.cfi_endproc
 10833              	.LFE1633:
 10835              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
 10836              		.set	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev,_ZNSaISt4pairIiNSt7
 10837              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 10838              		.align 2
 10839              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13
 10841              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deal
 10842              	.LFB1635:
 174:/usr/include/c++/5/bits/stl_vector.h ****       {
 10843              		.loc 9 174 0
 10844              		.cfi_startproc
 10845 0000 55       		pushq	%rbp
 10846              		.cfi_def_cfa_offset 16
 10847              		.cfi_offset 6, -16
 10848 0001 4889E5   		movq	%rsp, %rbp
 10849              		.cfi_def_cfa_register 6
 10850 0004 4883EC20 		subq	$32, %rsp
 10851 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10852 000c 488975F0 		movq	%rsi, -16(%rbp)
 10853 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10854              		.loc 9 177 0
 10855 0014 48837DF0 		cmpq	$0, -16(%rbp)
 10855      00
 10856 0019 7417     		je	.L570
 178:/usr/include/c++/5/bits/stl_vector.h ****       }
 10857              		.loc 9 178 0
 10858 001b 488B45F8 		movq	-8(%rbp), %rax
 10859 001f 488B55E8 		movq	-24(%rbp), %rdx
 10860 0023 488B4DF0 		movq	-16(%rbp), %rcx
 10861 0027 4889CE   		movq	%rcx, %rsi
 10862 002a 4889C7   		movq	%rax, %rdi
 10863 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 10863      00
 10864              	.L570:
 179:/usr/include/c++/5/bits/stl_vector.h **** 
 10865              		.loc 9 179 0
 10866 0032 90       		nop
 10867 0033 C9       		leave
 10868              		.cfi_def_cfa 7, 8
 10869 0034 C3       		ret
 10870              		.cfi_endproc
 10871              	.LFE1635:
 10873              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9
 10874              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 10876              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
 10877              	.LFB1636:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 10878              		.loc 10 122 0
 10879              		.cfi_startproc
 10880 0000 55       		pushq	%rbp
 10881              		.cfi_def_cfa_offset 16
 10882              		.cfi_offset 6, -16
 10883 0001 4889E5   		movq	%rsp, %rbp
 10884              		.cfi_def_cfa_register 6
 10885 0004 4883EC10 		subq	$16, %rsp
 10886 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10887 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 10888              		.loc 10 126 0
 10889 0010 488B55F0 		movq	-16(%rbp), %rdx
 10890 0014 488B45F8 		movq	-8(%rbp), %rax
 10891 0018 4889D6   		movq	%rdx, %rsi
 10892 001b 4889C7   		movq	%rax, %rdi
 10893 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 10893      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 10894              		.loc 10 128 0
 10895 0023 90       		nop
 10896 0024 C9       		leave
 10897              		.cfi_def_cfa 7, 8
 10898 0025 C3       		ret
 10899              		.cfi_endproc
 10900              	.LFE1636:
 10902              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 10903              		.align 2
 10904              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 10906              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 10907              	.LFB1638:
  86:/usr/include/c++/5/ext/new_allocator.h **** 
 10908              		.loc 12 86 0
 10909              		.cfi_startproc
 10910 0000 55       		pushq	%rbp
 10911              		.cfi_def_cfa_offset 16
 10912              		.cfi_offset 6, -16
 10913 0001 4889E5   		movq	%rsp, %rbp
 10914              		.cfi_def_cfa_register 6
 10915 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/5/ext/new_allocator.h **** 
 10916              		.loc 12 86 0
 10917 0008 90       		nop
 10918 0009 5D       		popq	%rbp
 10919              		.cfi_def_cfa 7, 8
 10920 000a C3       		ret
 10921              		.cfi_endproc
 10922              	.LFE1638:
 10924              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 10925              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 10926              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 10927              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 10929              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10
 10930              	.LFB1640:
 184:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 10931              		.loc 13 184 0
 10932              		.cfi_startproc
 10933 0000 55       		pushq	%rbp
 10934              		.cfi_def_cfa_offset 16
 10935              		.cfi_offset 6, -16
 10936 0001 4889E5   		movq	%rsp, %rbp
 10937              		.cfi_def_cfa_register 6
 10938 0004 4883EC20 		subq	$32, %rsp
 10939 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10940 000c 488975F0 		movq	%rsi, -16(%rbp)
 10941 0010 488955E8 		movq	%rdx, -24(%rbp)
 10942              		.loc 13 185 0
 10943 0014 488B55E8 		movq	-24(%rbp), %rdx
 10944 0018 488B4DF0 		movq	-16(%rbp), %rcx
 10945 001c 488B45F8 		movq	-8(%rbp), %rax
 10946 0020 4889CE   		movq	%rcx, %rsi
 10947 0023 4889C7   		movq	%rax, %rdi
 10948 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE1
 10948      00
 10949 002b 90       		nop
 10950 002c C9       		leave
 10951              		.cfi_def_cfa 7, 8
 10952 002d C3       		ret
 10953              		.cfi_endproc
 10954              	.LFE1640:
 10956              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 10957              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcES
 10959              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 10960              	.LFB1641:
 100:/usr/include/c++/5/bits/stl_construct.h **** 	{
 10961              		.loc 10 100 0
 10962              		.cfi_startproc
 10963 0000 55       		pushq	%rbp
 10964              		.cfi_def_cfa_offset 16
 10965              		.cfi_offset 6, -16
 10966 0001 4889E5   		movq	%rsp, %rbp
 10967              		.cfi_def_cfa_register 6
 10968 0004 4883EC10 		subq	$16, %rsp
 10969 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10970 000c 488975F0 		movq	%rsi, -16(%rbp)
 10971              	.L576:
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10972              		.loc 10 102 0 discriminator 2
 10973 0010 488B45F8 		movq	-8(%rbp), %rax
 10974 0014 483B45F0 		cmpq	-16(%rbp), %rax
 10975 0018 741B     		je	.L577
 103:/usr/include/c++/5/bits/stl_construct.h **** 	}
 10976              		.loc 10 103 0 discriminator 1
 10977 001a 488B45F8 		movq	-8(%rbp), %rax
 10978 001e 4889C7   		movq	%rax, %rdi
 10979 0021 E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 10979      00
 10980 0026 4889C7   		movq	%rax, %rdi
 10981 0029 E8000000 		call	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 10981      00
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10982              		.loc 10 102 0 discriminator 1
 10983 002e 488345F8 		addq	$40, -8(%rbp)
 10983      28
 10984 0033 EBDB     		jmp	.L576
 10985              	.L577:
 104:/usr/include/c++/5/bits/stl_construct.h ****     };
 10986              		.loc 10 104 0
 10987 0035 90       		nop
 10988 0036 C9       		leave
 10989              		.cfi_def_cfa 7, 8
 10990 0037 C3       		ret
 10991              		.cfi_endproc
 10992              	.LFE1641:
 10994              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 10995              		.align 2
 10996              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 10998              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deall
 10999              	.LFB1642:
 109:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 11000              		.loc 12 109 0
 11001              		.cfi_startproc
 11002 0000 55       		pushq	%rbp
 11003              		.cfi_def_cfa_offset 16
 11004              		.cfi_offset 6, -16
 11005 0001 4889E5   		movq	%rsp, %rbp
 11006              		.cfi_def_cfa_register 6
 11007 0004 4883EC20 		subq	$32, %rsp
 11008 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11009 000c 488975F0 		movq	%rsi, -16(%rbp)
 11010 0010 488955E8 		movq	%rdx, -24(%rbp)
 11011              		.loc 12 110 0
 11012 0014 488B45F0 		movq	-16(%rbp), %rax
 11013 0018 4889C7   		movq	%rax, %rdi
 11014 001b E8000000 		call	_ZdlPv
 11014      00
 11015 0020 90       		nop
 11016 0021 C9       		leave
 11017              		.cfi_def_cfa 7, 8
 11018 0022 C3       		ret
 11019              		.cfi_endproc
 11020              	.LFE1642:
 11022              		.section	.text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT
 11023              		.weak	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 11025              	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:
 11026              	.LFB1643:
  47:/usr/include/c++/5/bits/move.h ****     {
 11027              		.loc 14 47 0
 11028              		.cfi_startproc
 11029 0000 55       		pushq	%rbp
 11030              		.cfi_def_cfa_offset 16
 11031              		.cfi_offset 6, -16
 11032 0001 4889E5   		movq	%rsp, %rbp
 11033              		.cfi_def_cfa_register 6
 11034 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/5/bits/move.h ****     }
 11035              		.loc 14 50 0
 11036 0008 488B45F8 		movq	-8(%rbp), %rax
 11037              		.loc 14 51 0
 11038 000c 5D       		popq	%rbp
 11039              		.cfi_def_cfa 7, 8
 11040 000d C3       		ret
 11041              		.cfi_endproc
 11042              	.LFE1643:
 11044              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev,"axG",@progbi
 11045              		.align 2
 11046              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
 11048              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
 11049              	.LFB1646:
 11050              		.file 16 "/usr/include/c++/5/bits/stl_pair.h"
   1:/usr/include/c++/5/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_pair.h **** 
   3:/usr/include/c++/5/bits/stl_pair.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_pair.h **** //
   5:/usr/include/c++/5/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_pair.h **** 
  11:/usr/include/c++/5/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_pair.h **** 
  16:/usr/include/c++/5/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_pair.h **** 
  20:/usr/include/c++/5/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_pair.h **** 
  25:/usr/include/c++/5/bits/stl_pair.h **** /*
  26:/usr/include/c++/5/bits/stl_pair.h ****  *
  27:/usr/include/c++/5/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_pair.h ****  *
  30:/usr/include/c++/5/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_pair.h ****  *
  38:/usr/include/c++/5/bits/stl_pair.h ****  *
  39:/usr/include/c++/5/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_pair.h ****  *
  42:/usr/include/c++/5/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_pair.h ****  */
  50:/usr/include/c++/5/bits/stl_pair.h **** 
  51:/usr/include/c++/5/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/5/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/5/bits/stl_pair.h ****  */
  55:/usr/include/c++/5/bits/stl_pair.h **** 
  56:/usr/include/c++/5/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/5/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/5/bits/stl_pair.h **** 
  59:/usr/include/c++/5/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/5/bits/stl_pair.h **** 
  61:/usr/include/c++/5/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/5/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/5/bits/stl_pair.h **** #endif
  64:/usr/include/c++/5/bits/stl_pair.h **** 
  65:/usr/include/c++/5/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/5/bits/stl_pair.h **** {
  67:/usr/include/c++/5/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/5/bits/stl_pair.h **** 
  69:/usr/include/c++/5/bits/stl_pair.h ****   /**
  70:/usr/include/c++/5/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/5/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/5/bits/stl_pair.h ****    */
  73:/usr/include/c++/5/bits/stl_pair.h **** 
  74:/usr/include/c++/5/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/5/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/5/bits/stl_pair.h ****   struct piecewise_construct_t { };
  77:/usr/include/c++/5/bits/stl_pair.h **** 
  78:/usr/include/c++/5/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/5/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  80:/usr/include/c++/5/bits/stl_pair.h **** 
  81:/usr/include/c++/5/bits/stl_pair.h ****   // Forward declarations.
  82:/usr/include/c++/5/bits/stl_pair.h ****   template<typename...>
  83:/usr/include/c++/5/bits/stl_pair.h ****     class tuple;
  84:/usr/include/c++/5/bits/stl_pair.h **** 
  85:/usr/include/c++/5/bits/stl_pair.h ****   template<std::size_t...>
  86:/usr/include/c++/5/bits/stl_pair.h ****     struct _Index_tuple;
  87:/usr/include/c++/5/bits/stl_pair.h **** #endif
  88:/usr/include/c++/5/bits/stl_pair.h **** 
  89:/usr/include/c++/5/bits/stl_pair.h ****  /**
  90:/usr/include/c++/5/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
  91:/usr/include/c++/5/bits/stl_pair.h ****    *
  92:/usr/include/c++/5/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
  93:/usr/include/c++/5/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
  94:/usr/include/c++/5/bits/stl_pair.h ****    */
  95:/usr/include/c++/5/bits/stl_pair.h ****   template<class _T1, class _T2>
  96:/usr/include/c++/5/bits/stl_pair.h ****     struct pair
 11051              		.loc 16 96 0
 11052              		.cfi_startproc
 11053 0000 55       		pushq	%rbp
 11054              		.cfi_def_cfa_offset 16
 11055              		.cfi_offset 6, -16
 11056 0001 4889E5   		movq	%rsp, %rbp
 11057              		.cfi_def_cfa_register 6
 11058 0004 4883EC10 		subq	$16, %rsp
 11059 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11060              	.LBB191:
 11061              		.loc 16 96 0
 11062 000c 488B45F8 		movq	-8(%rbp), %rax
 11063 0010 4883C008 		addq	$8, %rax
 11064 0014 4889C7   		movq	%rax, %rdi
 11065 0017 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 11065      00
 11066              	.LBE191:
 11067 001c 90       		nop
 11068 001d C9       		leave
 11069              		.cfi_def_cfa 7, 8
 11070 001e C3       		ret
 11071              		.cfi_endproc
 11072              	.LFE1646:
 11074              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 11075              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,_ZNSt4pairIiNSt7__cxx11
 11076              		.section	.text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_,"
 11077              		.weak	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 11079              	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:
 11080              	.LFB1644:
  92:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 11081              		.loc 10 92 0
 11082              		.cfi_startproc
 11083 0000 55       		pushq	%rbp
 11084              		.cfi_def_cfa_offset 16
 11085              		.cfi_offset 6, -16
 11086 0001 4889E5   		movq	%rsp, %rbp
 11087              		.cfi_def_cfa_register 6
 11088 0004 4883EC10 		subq	$16, %rsp
 11089 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/5/bits/stl_construct.h **** 
 11090              		.loc 10 93 0
 11091 000c 488B45F8 		movq	-8(%rbp), %rax
 11092 0010 4889C7   		movq	%rax, %rdi
 11093 0013 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 11093      00
 11094 0018 90       		nop
 11095 0019 C9       		leave
 11096              		.cfi_def_cfa 7, 8
 11097 001a C3       		ret
 11098              		.cfi_endproc
 11099              	.LFE1644:
 11101              		.text
 11103              	_GLOBAL__sub_I_TestXmlTestReporter.cpp:
 11104              	.LFB1648:
 11105              		.loc 3 183 0
 11106              		.cfi_startproc
 11107 4718 55       		pushq	%rbp
 11108              		.cfi_def_cfa_offset 16
 11109              		.cfi_offset 6, -16
 11110 4719 4889E5   		movq	%rsp, %rbp
 11111              		.cfi_def_cfa_register 6
 11112              		.loc 3 183 0
 11113 471c BEFFFF00 		movl	$65535, %esi
 11113      00
 11114 4721 BF010000 		movl	$1, %edi
 11114      00
 11115 4726 E81DFEFF 		call	_Z41__static_initialization_and_destruction_0ii
 11115      FF
 11116 472b 5D       		popq	%rbp
 11117              		.cfi_def_cfa 7, 8
 11118 472c C3       		ret
 11119              		.cfi_endproc
 11120              	.LFE1648:
 11122              		.section	.init_array,"aw"
 11123              		.align 8
 11124 0000 00000000 		.quad	_GLOBAL__sub_I_TestXmlTestReporter.cpp
 11124      00000000 
 11125              		.section	.rodata
 11126              		.align 4
 11127              	.LC10:
 11128 0e28 CDCCCC3D 		.long	1036831949
 11129              		.align 4
 11130              	.LC16:
 11131 0e2c 0000803F 		.long	1065353216
 11132              		.align 4
 11133              	.LC38:
 11134 0e30 CDCC8C3F 		.long	1066192077
 11135              		.text
 11136              	.Letext0:
 11137              		.file 17 "../TestDetails.h"
 11138              		.file 18 "../TestList.h"
 11139              		.file 19 "../TestResults.h"
 11140              		.file 20 "../PosixUtils/SignalTranslator.h"
 11141              		.file 21 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h"
 11142              		.file 22 "/usr/include/c++/5/bits/basic_string.tcc"
 11143              		.file 23 "/usr/include/c++/5/bits/stringfwd.h"
 11144              		.file 24 "/usr/include/c++/5/cwchar"
 11145              		.file 25 "/usr/include/c++/5/bits/char_traits.h"
 11146              		.file 26 "/usr/include/c++/5/clocale"
 11147              		.file 27 "/usr/include/c++/5/cwctype"
 11148              		.file 28 "/usr/include/c++/5/bits/vector.tcc"
 11149              		.file 29 "/usr/include/c++/5/iosfwd"
 11150              		.file 30 "/usr/include/c++/5/bits/stl_iterator_base_types.h"
 11151              		.file 31 "/usr/include/c++/5/debug/debug.h"
 11152              		.file 32 "/usr/include/c++/5/bits/predefined_ops.h"
 11153              		.file 33 "/usr/include/c++/5/ext/numeric_traits.h"
 11154              		.file 34 "/usr/include/c++/5/bits/stl_iterator.h"
 11155              		.file 35 "/usr/include/stdio.h"
 11156              		.file 36 "<built-in>"
 11157              		.file 37 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 11158              		.file 38 "/usr/include/wchar.h"
 11159              		.file 39 "/usr/include/time.h"
 11160              		.file 40 "/usr/include/locale.h"
 11161              		.file 41 "/usr/include/x86_64-linux-gnu/bits/types.h"
 11162              		.file 42 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 11163              		.file 43 "/usr/include/wctype.h"
 11164              		.file 44 "/usr/include/x86_64-linux-gnu/bits/sigset.h"
 11165              		.file 45 "/usr/include/setjmp.h"
 11166              		.file 46 "/usr/include/x86_64-linux-gnu/bits/siginfo.h"
 11167              		.file 47 "/usr/include/signal.h"
 11168              		.file 48 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 11169              		.file 49 "/usr/include/x86_64-linux-gnu/sys/time.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestXmlTestReporter.cpp
     /tmp/ccuGFGHr.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/ccuGFGHr.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/ccuGFGHr.s:9251   .rodata._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/ccuGFGHr.s:9235   .rodata._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/ccuGFGHr.s:145    .text:0000000000000000 _ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
     /tmp/ccuGFGHr.s:226    .text:000000000000005c _ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
     /tmp/ccuGFGHr.s:9836   .text._ZN8UnitTest15XmlTestReporterD2Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD1Ev
     /tmp/ccuGFGHr.s:302    .text:00000000000000aa _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:302    .text:00000000000000aa _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:339    .text:00000000000000d8 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC2Ev
     /tmp/ccuGFGHr.s:9159   .rodata:0000000000000a90 _ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccuGFGHr.s:339    .text:00000000000000d8 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev
     /tmp/ccuGFGHr.s:373    .bss:0000000000000000 _ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE
     /tmp/ccuGFGHr.s:373    .bss:0000000000000038 _ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccuGFGHr.s:378    .text:0000000000000118 _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD2Ev
     /tmp/ccuGFGHr.s:378    .text:0000000000000118 _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
     /tmp/ccuGFGHr.s:415    .text:0000000000000134 _ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv
     /tmp/ccuGFGHr.s:5676   .text:0000000000002c40 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:9296   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccuGFGHr.s:769    .text:000000000000043a _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv
     /tmp/ccuGFGHr.s:6028   .text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:975    .text:0000000000000604 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:975    .text:0000000000000604 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:1011   .text:0000000000000632 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC2Ev
     /tmp/ccuGFGHr.s:9084   .rodata:0000000000000a68 _ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccuGFGHr.s:1011   .text:0000000000000632 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev
     /tmp/ccuGFGHr.s:1045   .bss:0000000000000040 _ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanceE
     /tmp/ccuGFGHr.s:1045   .bss:0000000000000078 _ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccuGFGHr.s:1050   .text:0000000000000672 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD2Ev
     /tmp/ccuGFGHr.s:1050   .text:0000000000000672 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
     /tmp/ccuGFGHr.s:1077   .text:000000000000068e _ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunImplEv
     /tmp/ccuGFGHr.s:6169   .text:0000000000002eff _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:1431   .text:0000000000000994 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunImplEv
     /tmp/ccuGFGHr.s:6515   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/ccuGFGHr.s:1765   .text:0000000000000c70 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:1765   .text:0000000000000c70 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:1800   .text:0000000000000c9e _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC2Ev
     /tmp/ccuGFGHr.s:9009   .rodata:0000000000000a40 _ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccuGFGHr.s:1800   .text:0000000000000c9e _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev
     /tmp/ccuGFGHr.s:1834   .bss:0000000000000080 _ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE
     /tmp/ccuGFGHr.s:1834   .bss:00000000000000b8 _ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccuGFGHr.s:1839   .text:0000000000000cde _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD2Ev
     /tmp/ccuGFGHr.s:1839   .text:0000000000000cde _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
     /tmp/ccuGFGHr.s:1866   .text:0000000000000cfa _ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv
     /tmp/ccuGFGHr.s:6537   .text:00000000000031be _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:2209   .text:0000000000001000 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv
     /tmp/ccuGFGHr.s:2384   .text:0000000000001130 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:2384   .text:0000000000001130 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:2420   .text:000000000000115e _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC2Ev
     /tmp/ccuGFGHr.s:8934   .rodata:0000000000000a18 _ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccuGFGHr.s:2420   .text:000000000000115e _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev
     /tmp/ccuGFGHr.s:2454   .bss:00000000000000c0 _ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
     /tmp/ccuGFGHr.s:2454   .bss:00000000000000f8 _ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccuGFGHr.s:2459   .text:000000000000119e _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD2Ev
     /tmp/ccuGFGHr.s:2459   .text:000000000000119e _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
     /tmp/ccuGFGHr.s:2486   .text:00000000000011ba _ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImplEv
     /tmp/ccuGFGHr.s:6881   .text:000000000000347d _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:2829   .text:00000000000014c0 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImplEv
     /tmp/ccuGFGHr.s:3019   .text:0000000000001642 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:3019   .text:0000000000001642 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:3055   .text:0000000000001670 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC2Ev
     /tmp/ccuGFGHr.s:8859   .rodata:00000000000009f0 _ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccuGFGHr.s:3055   .text:0000000000001670 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev
     /tmp/ccuGFGHr.s:3089   .bss:0000000000000100 _ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE
     /tmp/ccuGFGHr.s:3089   .bss:0000000000000138 _ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccuGFGHr.s:3094   .text:00000000000016b0 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD2Ev
     /tmp/ccuGFGHr.s:3094   .text:00000000000016b0 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
     /tmp/ccuGFGHr.s:3121   .text:00000000000016cc _ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv
     /tmp/ccuGFGHr.s:7225   .text:000000000000373c _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:3470   .text:00000000000019d2 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv
     /tmp/ccuGFGHr.s:3668   .text:0000000000001b76 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:3668   .text:0000000000001b76 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:3703   .text:0000000000001ba4 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC2Ev
     /tmp/ccuGFGHr.s:8784   .rodata:00000000000009c8 _ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccuGFGHr.s:3703   .text:0000000000001ba4 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev
     /tmp/ccuGFGHr.s:3737   .bss:0000000000000140 _ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE
     /tmp/ccuGFGHr.s:3737   .bss:0000000000000178 _ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccuGFGHr.s:3742   .text:0000000000001be4 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD2Ev
     /tmp/ccuGFGHr.s:3742   .text:0000000000001be4 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
     /tmp/ccuGFGHr.s:3769   .text:0000000000001c00 _ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv
     /tmp/ccuGFGHr.s:7569   .text:00000000000039fb _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:4114   .text:0000000000001f06 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv
     /tmp/ccuGFGHr.s:4320   .text:00000000000020d0 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:4320   .text:00000000000020d0 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:4355   .text:00000000000020fe _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC2Ev
     /tmp/ccuGFGHr.s:8709   .rodata:00000000000009a0 _ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccuGFGHr.s:4355   .text:00000000000020fe _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev
     /tmp/ccuGFGHr.s:4389   .bss:0000000000000180 _ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE
     /tmp/ccuGFGHr.s:4389   .bss:00000000000001b8 _ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccuGFGHr.s:4394   .text:000000000000213e _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD2Ev
     /tmp/ccuGFGHr.s:4394   .text:000000000000213e _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
     /tmp/ccuGFGHr.s:4421   .text:000000000000215a _ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv
     /tmp/ccuGFGHr.s:7913   .text:0000000000003cba _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:4773   .text:0000000000002460 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv
     /tmp/ccuGFGHr.s:5002   .text:0000000000002698 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:5002   .text:0000000000002698 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccuGFGHr.s:5037   .text:00000000000026c6 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC2Ev
     /tmp/ccuGFGHr.s:8634   .rodata:0000000000000978 _ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccuGFGHr.s:5037   .text:00000000000026c6 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev
     /tmp/ccuGFGHr.s:5071   .bss:00000000000001c0 _ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE
     /tmp/ccuGFGHr.s:5071   .bss:00000000000001f8 _ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccuGFGHr.s:5076   .text:0000000000002706 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD2Ev
     /tmp/ccuGFGHr.s:5076   .text:0000000000002706 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
     /tmp/ccuGFGHr.s:5103   .text:0000000000002722 _ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv
     /tmp/ccuGFGHr.s:8257   .text:0000000000003f79 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccuGFGHr.s:5449   .text:0000000000002a28 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv
     /tmp/ccuGFGHr.s:8603   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
     /tmp/ccuGFGHr.s:9484   .rodata:0000000000000b00 _ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccuGFGHr.s:8643   .text:0000000000004238 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
     /tmp/ccuGFGHr.s:8681   .text:0000000000004274 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev
     /tmp/ccuGFGHr.s:8643   .text:0000000000004238 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD2Ev
     /tmp/ccuGFGHr.s:9496   .rodata:0000000000000b68 _ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccuGFGHr.s:8718   .text:000000000000429a _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
     /tmp/ccuGFGHr.s:8756   .text:00000000000042d6 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev
     /tmp/ccuGFGHr.s:8718   .text:000000000000429a _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD2Ev
     /tmp/ccuGFGHr.s:9508   .rodata:0000000000000bc8 _ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccuGFGHr.s:8793   .text:00000000000042fc _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
     /tmp/ccuGFGHr.s:8831   .text:0000000000004338 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev
     /tmp/ccuGFGHr.s:8793   .text:00000000000042fc _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD2Ev
     /tmp/ccuGFGHr.s:9520   .rodata:0000000000000c38 _ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccuGFGHr.s:8868   .text:000000000000435e _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
     /tmp/ccuGFGHr.s:8906   .text:000000000000439a _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev
     /tmp/ccuGFGHr.s:8868   .text:000000000000435e _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD2Ev
     /tmp/ccuGFGHr.s:9532   .rodata:0000000000000cb8 _ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccuGFGHr.s:8943   .text:00000000000043c0 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
     /tmp/ccuGFGHr.s:8981   .text:00000000000043fc _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev
     /tmp/ccuGFGHr.s:8943   .text:00000000000043c0 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD2Ev
     /tmp/ccuGFGHr.s:9544   .rodata:0000000000000d28 _ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccuGFGHr.s:9018   .text:0000000000004422 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
     /tmp/ccuGFGHr.s:9056   .text:000000000000445e _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev
     /tmp/ccuGFGHr.s:9018   .text:0000000000004422 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD2Ev
     /tmp/ccuGFGHr.s:9556   .rodata:0000000000000d98 _ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccuGFGHr.s:9093   .text:0000000000004484 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
     /tmp/ccuGFGHr.s:9131   .text:00000000000044c0 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev
     /tmp/ccuGFGHr.s:9093   .text:0000000000004484 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD2Ev
     /tmp/ccuGFGHr.s:9568   .rodata:0000000000000e10 _ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccuGFGHr.s:9168   .text:00000000000044e6 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
     /tmp/ccuGFGHr.s:9206   .text:0000000000004522 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev
     /tmp/ccuGFGHr.s:9168   .text:00000000000044e6 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD2Ev
     /tmp/ccuGFGHr.s:9577   .rodata._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/ccuGFGHr.s:9438   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccuGFGHr.s:9424   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000cc _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccuGFGHr.s:9465   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000026 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccuGFGHr.s:9264   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
     /tmp/ccuGFGHr.s:9281   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/ccuGFGHr.s:9479   .rodata:0000000000000ac0 _ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccuGFGHr.s:9491   .rodata:0000000000000b20 _ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccuGFGHr.s:9503   .rodata:0000000000000b80 _ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccuGFGHr.s:9515   .rodata:0000000000000be0 _ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccuGFGHr.s:9527   .rodata:0000000000000c60 _ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccuGFGHr.s:9539   .rodata:0000000000000ce0 _ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccuGFGHr.s:9551   .rodata:0000000000000d40 _ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccuGFGHr.s:9563   .rodata:0000000000000dc0 _ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccuGFGHr.s:9586   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/ccuGFGHr.s:9590   .text:0000000000004548 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccuGFGHr.s:9717   .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/ccuGFGHr.s:9906   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccuGFGHr.s:9717   .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/ccuGFGHr.s:9808   .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/ccuGFGHr.s:9836   .text._ZN8UnitTest15XmlTestReporterD2Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD2Ev
     /tmp/ccuGFGHr.s:9878   .text._ZN8UnitTest15XmlTestReporterD0Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD0Ev
     /tmp/ccuGFGHr.s:9906   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccuGFGHr.s:10111  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccuGFGHr.s:10132  .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/ccuGFGHr.s:10024  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccuGFGHr.s:9994   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/ccuGFGHr.s:10164  .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccuGFGHr.s:9994   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/ccuGFGHr.s:10195  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccuGFGHr.s:10024  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccuGFGHr.s:10230  .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/ccuGFGHr.s:10260  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccuGFGHr.s:10164  .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccuGFGHr.s:10284  .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
     /tmp/ccuGFGHr.s:10315  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/ccuGFGHr.s:10260  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccuGFGHr.s:10354  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/ccuGFGHr.s:10381  .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/ccuGFGHr.s:10526  .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/ccuGFGHr.s:10405  .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/ccuGFGHr.s:10552  .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccuGFGHr.s:10405  .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/ccuGFGHr.s:10552  .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccuGFGHr.s:10759  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv
     /tmp/ccuGFGHr.s:10780  .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E
     /tmp/ccuGFGHr.s:10669  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccuGFGHr.s:10639  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev
     /tmp/ccuGFGHr.s:10811  .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccuGFGHr.s:10639  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD1Ev
     /tmp/ccuGFGHr.s:10841  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m
     /tmp/ccuGFGHr.s:10669  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccuGFGHr.s:10876  .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
     /tmp/ccuGFGHr.s:10906  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccuGFGHr.s:10811  .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccuGFGHr.s:10929  .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m
     /tmp/ccuGFGHr.s:10959  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_
     /tmp/ccuGFGHr.s:10906  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccuGFGHr.s:10998  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m
     /tmp/ccuGFGHr.s:11025  .text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:0000000000000000 _ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
     /tmp/ccuGFGHr.s:11079  .text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
     /tmp/ccuGFGHr.s:11048  .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
     /tmp/ccuGFGHr.s:11048  .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
     /tmp/ccuGFGHr.s:11103  .text:0000000000004718 _GLOBAL__sub_I_TestXmlTestReporter.cpp
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZN8UnitTest15XmlTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED5Ev

UNDEFINED SYMBOLS
__gxx_personality_v0
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
_ZN8UnitTest15XmlTestReporterC1ERSo
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_begin_catch
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZN8UnitTest11CurrentTest7ResultsEv
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_end_catch
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
__stack_chk_fail
_ZTISt9exception
_ZTIN8UnitTest15AssertExceptionE
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
_ZN8UnitTest11CurrentTest7DetailsEv
_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZdlPv
_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISo
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZTVN8UnitTest15XmlTestReporterE
