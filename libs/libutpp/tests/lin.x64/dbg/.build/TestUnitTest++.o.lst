   1              		.file	"TestUnitTest++.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 B8000000 		movl	$.LC0, %eax
  21      00
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 0009 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000a C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1057:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x3,__gxx_personality_v0
  39              		.cfi_lsda 0x3,.LLSDA1057
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 48059000 		addq	$144, %rax
  52      0000
  53 0017 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 001a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
  55      00
  56              	.LEHE0:
  57 001f B9000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %ecx
  57      00
  58 0024 488B45E8 		movq	-24(%rbp), %rax
  59 0028 BA100000 		movl	$16, %edx
  59      00
  60 002d 4889CE   		movq	%rcx, %rsi
  61 0030 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0033 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 9
  66 0038 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
  66      00
  67 003d 488B45E8 		movq	-24(%rbp), %rax
  68 0041 488910   		movq	%rdx, (%rax)
  69 0044 BA900000 		movl	$144, %edx
  69      00
  70 0049 488B45E8 		movq	-24(%rbp), %rax
  71 004d 4801D0   		addq	%rdx, %rax
  72 0050 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
  72      00
  73 0055 488910   		movq	%rdx, (%rax)
  74 0058 488B45E8 		movq	-24(%rbp), %rax
  75 005c 4883C070 		addq	$112, %rax
  76 0060 4889C7   		movq	%rax, %rdi
  77              	.LEHB2:
  78 0063 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
  78      00
  79              	.LEHE2:
  80              	.LBE2:
  81              		.loc 2 16 0
  82 0068 EB39     		jmp	.L9
  83              	.L7:
  84 006a 4889C3   		movq	%rax, %rbx
  85              	.LBB3:
  86 006d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
  86      00
  87 0072 488B45E8 		movq	-24(%rbp), %rax
  88 0076 4889D6   		movq	%rdx, %rsi
  89 0079 4889C7   		movq	%rax, %rdi
  90 007c E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
  90      00
  91 0081 EB03     		jmp	.L8
  92              	.L6:
  93 0083 4889C3   		movq	%rax, %rbx
  94              	.L8:
  95              		.loc 2 16 0 discriminator 28
  96 0086 488B45E8 		movq	-24(%rbp), %rax
  97 008a 48059000 		addq	$144, %rax
  97      0000
  98 0090 4889C7   		movq	%rax, %rdi
  99 0093 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
  99      00
 100 0098 4889D8   		movq	%rbx, %rax
 101 009b 4889C7   		movq	%rax, %rdi
 102              	.LEHB3:
 103 009e E8000000 		call	_Unwind_Resume
 103      00
 104              	.LEHE3:
 105              	.L9:
 106              	.LBE3:
 107              		.loc 2 16 0
 108 00a3 4883C418 		addq	$24, %rsp
 109 00a7 5B       		popq	%rbx
 110 00a8 5D       		popq	%rbp
 111              		.cfi_def_cfa 7, 8
 112 00a9 C3       		ret
 113              		.cfi_endproc
 114              	.LFE1057:
 115              		.globl	__gxx_personality_v0
 116              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 117              	.LLSDA1057:
 118 0000 FF       		.byte	0xff
 119 0001 FF       		.byte	0xff
 120 0002 01       		.byte	0x1
 121 0003 12       		.uleb128 .LLSDACSE1057-.LLSDACSB1057
 122              	.LLSDACSB1057:
 123 0004 1A       		.uleb128 .LEHB0-.LFB1057
 124 0005 05       		.uleb128 .LEHE0-.LEHB0
 125 0006 00       		.uleb128 0
 126 0007 00       		.uleb128 0
 127 0008 33       		.uleb128 .LEHB1-.LFB1057
 128 0009 05       		.uleb128 .LEHE1-.LEHB1
 129 000a 8301     		.uleb128 .L6-.LFB1057
 130 000c 00       		.uleb128 0
 131 000d 63       		.uleb128 .LEHB2-.LFB1057
 132 000e 05       		.uleb128 .LEHE2-.LEHB2
 133 000f 6A       		.uleb128 .L7-.LFB1057
 134 0010 00       		.uleb128 0
 135 0011 9E01     		.uleb128 .LEHB3-.LFB1057
 136 0013 05       		.uleb128 .LEHE3-.LEHB3
 137 0014 00       		.uleb128 0
 138 0015 00       		.uleb128 0
 139              	.LLSDACSE1057:
 140              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 142              		.section	.text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE,"axG",@progb
 143              		.align 2
 144              		.weak	_ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 146              	_ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:
 147              	.LFB1073:
 148              		.file 3 "ScopedCurrentTest.h"
   1:ScopedCurrentTest.h **** #ifndef UNITTEST_SCOPEDCURRENTTEST_H
   2:ScopedCurrentTest.h **** #define UNITTEST_SCOPEDCURRENTTEST_H
   3:ScopedCurrentTest.h **** 
   4:ScopedCurrentTest.h **** #include "../CurrentTest.h"
   5:ScopedCurrentTest.h **** #include <cstddef>
   6:ScopedCurrentTest.h **** 
   7:ScopedCurrentTest.h **** class ScopedCurrentTest
   8:ScopedCurrentTest.h **** {
   9:ScopedCurrentTest.h **** public:
  10:ScopedCurrentTest.h **** 	ScopedCurrentTest()
  11:ScopedCurrentTest.h **** 		: m_oldTestResults(UnitTest::CurrentTest::Results())
  12:ScopedCurrentTest.h **** 		, m_oldTestDetails(UnitTest::CurrentTest::Details())
  13:ScopedCurrentTest.h **** 	{
  14:ScopedCurrentTest.h **** 	}
  15:ScopedCurrentTest.h **** 
  16:ScopedCurrentTest.h **** 	explicit ScopedCurrentTest(UnitTest::TestResults& newResults, const UnitTest::TestDetails* newDeta
 149              		.loc 3 16 0 is_stmt 1
 150              		.cfi_startproc
 151 0000 55       		pushq	%rbp
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 6, -16
 154 0001 4889E5   		movq	%rsp, %rbp
 155              		.cfi_def_cfa_register 6
 156 0004 4883EC20 		subq	$32, %rsp
 157 0008 48897DF8 		movq	%rdi, -8(%rbp)
 158 000c 488975F0 		movq	%rsi, -16(%rbp)
 159 0010 488955E8 		movq	%rdx, -24(%rbp)
 160              	.LBB4:
  17:ScopedCurrentTest.h **** 		: m_oldTestResults(UnitTest::CurrentTest::Results())
 161              		.loc 3 17 0
 162 0014 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 162      00
 163 0019 488B10   		movq	(%rax), %rdx
  18:ScopedCurrentTest.h **** 		, m_oldTestDetails(UnitTest::CurrentTest::Details())
 164              		.loc 3 18 0
 165 001c 488B45F8 		movq	-8(%rbp), %rax
 166 0020 488910   		movq	%rdx, (%rax)
 167 0023 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 167      00
 168 0028 488B10   		movq	(%rax), %rdx
 169 002b 488B45F8 		movq	-8(%rbp), %rax
 170 002f 48895008 		movq	%rdx, 8(%rax)
  19:ScopedCurrentTest.h **** 	{
  20:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Results() = &newResults;
 171              		.loc 3 20 0
 172 0033 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 172      00
 173 0038 4889C2   		movq	%rax, %rdx
 174 003b 488B45F0 		movq	-16(%rbp), %rax
 175 003f 488902   		movq	%rax, (%rdx)
  21:ScopedCurrentTest.h **** 
  22:ScopedCurrentTest.h **** 		if (newDetails != NULL)
 176              		.loc 3 22 0
 177 0042 48837DE8 		cmpq	$0, -24(%rbp)
 177      00
 178 0047 740F     		je	.L12
  23:ScopedCurrentTest.h **** 			UnitTest::CurrentTest::Details() = newDetails;
 179              		.loc 3 23 0
 180 0049 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 180      00
 181 004e 4889C2   		movq	%rax, %rdx
 182 0051 488B45E8 		movq	-24(%rbp), %rax
 183 0055 488902   		movq	%rax, (%rdx)
 184              	.L12:
 185              	.LBE4:
  24:ScopedCurrentTest.h **** 	}
 186              		.loc 3 24 0
 187 0058 90       		nop
 188 0059 C9       		leave
 189              		.cfi_def_cfa 7, 8
 190 005a C3       		ret
 191              		.cfi_endproc
 192              	.LFE1073:
 194              		.weak	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 195              		.set	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE,_ZN17ScopedCurrentTest
 196              		.section	.text._ZN17ScopedCurrentTestD2Ev,"axG",@progbits,_ZN17ScopedCurrentTestD5Ev,comdat
 197              		.align 2
 198              		.weak	_ZN17ScopedCurrentTestD2Ev
 200              	_ZN17ScopedCurrentTestD2Ev:
 201              	.LFB1076:
  25:ScopedCurrentTest.h **** 
  26:ScopedCurrentTest.h **** 	~ScopedCurrentTest()
 202              		.loc 3 26 0
 203              		.cfi_startproc
 204 0000 55       		pushq	%rbp
 205              		.cfi_def_cfa_offset 16
 206              		.cfi_offset 6, -16
 207 0001 4889E5   		movq	%rsp, %rbp
 208              		.cfi_def_cfa_register 6
 209 0004 4883EC10 		subq	$16, %rsp
 210 0008 48897DF8 		movq	%rdi, -8(%rbp)
 211              	.LBB5:
  27:ScopedCurrentTest.h **** 	{
  28:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Results() = m_oldTestResults;
 212              		.loc 3 28 0
 213 000c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 213      00
 214 0011 4889C2   		movq	%rax, %rdx
 215 0014 488B45F8 		movq	-8(%rbp), %rax
 216 0018 488B00   		movq	(%rax), %rax
 217 001b 488902   		movq	%rax, (%rdx)
  29:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Details() = m_oldTestDetails;
 218              		.loc 3 29 0
 219 001e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 219      00
 220 0023 4889C2   		movq	%rax, %rdx
 221 0026 488B45F8 		movq	-8(%rbp), %rax
 222 002a 488B4008 		movq	8(%rax), %rax
 223 002e 488902   		movq	%rax, (%rdx)
 224              	.LBE5:
  30:ScopedCurrentTest.h **** 	}
 225              		.loc 3 30 0
 226 0031 90       		nop
 227 0032 C9       		leave
 228              		.cfi_def_cfa 7, 8
 229 0033 C3       		ret
 230              		.cfi_endproc
 231              	.LFE1076:
 233              		.weak	_ZN17ScopedCurrentTestD1Ev
 234              		.set	_ZN17ScopedCurrentTestD1Ev,_ZN17ScopedCurrentTestD2Ev
 235              		.section	.rodata
 236              	.LC1:
 237 000d 54657374 		.string	"TestUnitTest++.cpp"
 237      556E6974 
 237      54657374 
 237      2B2B2E63 
 237      707000
 238              	.LC2:
 239 0020 56616C69 		.string	"ValidCheckSucceeds"
 239      64436865 
 239      636B5375 
 239      63636565 
 239      647300
 240              		.text
 241              		.align 2
 243              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev:
 244              	.LFB1341:
 245              		.file 4 "TestUnitTest++.cpp"
   1:TestUnitTest++.cpp **** #include "../UnitTest++.h"
   2:TestUnitTest++.cpp **** #include "../ReportAssert.h"
   3:TestUnitTest++.cpp **** #include "ScopedCurrentTest.h"
   4:TestUnitTest++.cpp **** 
   5:TestUnitTest++.cpp **** #include <vector>
   6:TestUnitTest++.cpp **** 
   7:TestUnitTest++.cpp **** // These are sample tests that show the different features of the framework
   8:TestUnitTest++.cpp **** 
   9:TestUnitTest++.cpp **** namespace {
  10:TestUnitTest++.cpp **** 
  11:TestUnitTest++.cpp **** TEST(ValidCheckSucceeds)
 246              		.loc 4 11 0
 247              		.cfi_startproc
 248 0000 55       		pushq	%rbp
 249              		.cfi_def_cfa_offset 16
 250              		.cfi_offset 6, -16
 251 0001 4889E5   		movq	%rsp, %rbp
 252              		.cfi_def_cfa_register 6
 253 0004 4883EC10 		subq	$16, %rsp
 254 0008 48897DF8 		movq	%rdi, -8(%rbp)
 255              	.LBB6:
 256              		.loc 4 11 0
 257 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 257      00
 258 0011 4889C2   		movq	%rax, %rdx
 259 0014 488B45F8 		movq	-8(%rbp), %rax
 260 0018 41B80B00 		movl	$11, %r8d
 260      0000
 261 001e B9000000 		movl	$.LC1, %ecx
 261      00
 262 0023 BE000000 		movl	$.LC2, %esi
 262      00
 263 0028 4889C7   		movq	%rax, %rdi
 264 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 264      00
 265 0030 BA000000 		movl	$_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE+16, %edx
 265      00
 266 0035 488B45F8 		movq	-8(%rbp), %rax
 267 0039 488910   		movq	%rdx, (%rax)
 268              	.LBE6:
 269 003c 90       		nop
 270 003d C9       		leave
 271              		.cfi_def_cfa 7, 8
 272 003e C3       		ret
 273              		.cfi_endproc
 274              	.LFE1341:
 276              		.set	_ZN12_GLOBAL__N_122TestValidCheckSucceedsC1Ev,_ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev
 277              		.local	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE
 278              		.comm	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE,56,32
 279              		.local	_ZN12_GLOBAL__N_123adderValidCheckSucceedsE
 280              		.comm	_ZN12_GLOBAL__N_123adderValidCheckSucceedsE,1,1
 281              		.section	.rodata
 282              	.LC3:
 283 0033 6200     		.string	"b"
 284 0035 000000   		.align 8
 285              	.LC4:
 286 0038 556E6861 		.string	"Unhandled exception in CHECK(b)"
 286      6E646C65 
 286      64206578 
 286      63657074 
 286      696F6E20 
 287              		.text
 288 003f 90       		.align 2
 290              	_ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv:
 291              	.LFB1343:
  12:TestUnitTest++.cpp **** {
 292              		.loc 4 12 0
 293              		.cfi_startproc
 294              		.cfi_personality 0x3,__gxx_personality_v0
 295              		.cfi_lsda 0x3,.LLSDA1343
 296 0040 55       		pushq	%rbp
 297              		.cfi_def_cfa_offset 16
 298              		.cfi_offset 6, -16
 299 0041 4889E5   		movq	%rsp, %rbp
 300              		.cfi_def_cfa_register 6
 301 0044 53       		pushq	%rbx
 302 0045 4883EC58 		subq	$88, %rsp
 303              		.cfi_offset 3, -24
 304 0049 48897DA8 		movq	%rdi, -88(%rbp)
 305              		.loc 4 12 0
 306 004d 64488B04 		movq	%fs:40, %rax
 306      25280000 
 306      00
 307 0056 488945E8 		movq	%rax, -24(%rbp)
 308 005a 31C0     		xorl	%eax, %eax
  13:TestUnitTest++.cpp ****     bool const b = true;
 309              		.loc 4 13 0
 310 005c C645BF01 		movb	$1, -65(%rbp)
  14:TestUnitTest++.cpp ****     CHECK(b);
 311              		.loc 4 14 0
 312 0060 BF010000 		movl	$1, %edi
 312      00
 313 0065 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 313      00
 314 006a 83F001   		xorl	$1, %eax
 315 006d 84C0     		testb	%al, %al
 316 006f 0F849400 		je	.L22
 316      0000
 317              	.LEHB4:
 318              		.loc 4 14 0 is_stmt 0 discriminator 1
 319 0075 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 319      00
 320 007a 488B08   		movq	(%rax), %rcx
 321 007d 488D45C0 		leaq	-64(%rbp), %rax
 322 0081 BA0E0000 		movl	$14, %edx
 322      00
 323 0086 4889CE   		movq	%rcx, %rsi
 324 0089 4889C7   		movq	%rax, %rdi
 325 008c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 325      00
 326              		.loc 4 14 0 discriminator 3
 327 0091 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 327      00
 328 0096 488B00   		movq	(%rax), %rax
 329 0099 488D4DC0 		leaq	-64(%rbp), %rcx
 330 009d BA000000 		movl	$.LC3, %edx
 330      00
 331 00a2 4889CE   		movq	%rcx, %rsi
 332 00a5 4889C7   		movq	%rax, %rdi
 333 00a8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 333      00
 334              	.LEHE4:
  15:TestUnitTest++.cpp **** }
 335              		.loc 4 15 0 is_stmt 1
 336 00ad EB5A     		jmp	.L22
 337              	.L20:
  14:TestUnitTest++.cpp ****     CHECK(b);
 338              		.loc 4 14 0
 339 00af 4889C7   		movq	%rax, %rdi
 340 00b2 E8000000 		call	__cxa_begin_catch
 340      00
 341              	.LEHB5:
 342 00b7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 342      00
 343 00bc 488B08   		movq	(%rax), %rcx
 344 00bf 488D45C0 		leaq	-64(%rbp), %rax
 345 00c3 BA0E0000 		movl	$14, %edx
 345      00
 346 00c8 4889CE   		movq	%rcx, %rsi
 347 00cb 4889C7   		movq	%rax, %rdi
 348 00ce E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 348      00
  14:TestUnitTest++.cpp ****     CHECK(b);
 349              		.loc 4 14 0 is_stmt 0 discriminator 11
 350 00d3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 350      00
 351 00d8 488B00   		movq	(%rax), %rax
 352 00db 488D4DC0 		leaq	-64(%rbp), %rcx
 353 00df BA000000 		movl	$.LC4, %edx
 353      00
 354 00e4 4889CE   		movq	%rcx, %rsi
 355 00e7 4889C7   		movq	%rax, %rdi
 356 00ea E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 356      00
 357              	.LEHE5:
 358              	.LEHB6:
  14:TestUnitTest++.cpp ****     CHECK(b);
 359              		.loc 4 14 0 discriminator 15
 360 00ef E8000000 		call	__cxa_end_catch
 360      00
 361              	.LEHE6:
 362              		.loc 4 15 0 is_stmt 1 discriminator 15
 363 00f4 EB13     		jmp	.L22
 364              	.L21:
 365 00f6 4889C3   		movq	%rax, %rbx
  14:TestUnitTest++.cpp ****     CHECK(b);
 366              		.loc 4 14 0
 367 00f9 E8000000 		call	__cxa_end_catch
 367      00
 368 00fe 4889D8   		movq	%rbx, %rax
 369 0101 4889C7   		movq	%rax, %rdi
 370              	.LEHB7:
 371 0104 E8000000 		call	_Unwind_Resume
 371      00
 372              	.LEHE7:
 373              	.L22:
 374              		.loc 4 15 0
 375 0109 90       		nop
 376 010a 488B45E8 		movq	-24(%rbp), %rax
 377 010e 64483304 		xorq	%fs:40, %rax
 377      25280000 
 377      00
 378 0117 7405     		je	.L19
 379 0119 E8000000 		call	__stack_chk_fail
 379      00
 380              	.L19:
 381 011e 4883C458 		addq	$88, %rsp
 382 0122 5B       		popq	%rbx
 383 0123 5D       		popq	%rbp
 384              		.cfi_def_cfa 7, 8
 385 0124 C3       		ret
 386              		.cfi_endproc
 387              	.LFE1343:
 388              		.section	.gcc_except_table,"a",@progbits
 389              		.align 4
 390              	.LLSDA1343:
 391 0000 FF       		.byte	0xff
 392 0001 03       		.byte	0x3
 393 0002 1D       		.uleb128 .LLSDATT1343-.LLSDATTD1343
 394              	.LLSDATTD1343:
 395 0003 01       		.byte	0x1
 396 0004 13       		.uleb128 .LLSDACSE1343-.LLSDACSB1343
 397              	.LLSDACSB1343:
 398 0005 35       		.uleb128 .LEHB4-.LFB1343
 399 0006 38       		.uleb128 .LEHE4-.LEHB4
 400 0007 6F       		.uleb128 .L20-.LFB1343
 401 0008 01       		.uleb128 0x1
 402 0009 77       		.uleb128 .LEHB5-.LFB1343
 403 000a 38       		.uleb128 .LEHE5-.LEHB5
 404 000b B601     		.uleb128 .L21-.LFB1343
 405 000d 00       		.uleb128 0
 406 000e AF01     		.uleb128 .LEHB6-.LFB1343
 407 0010 05       		.uleb128 .LEHE6-.LEHB6
 408 0011 00       		.uleb128 0
 409 0012 00       		.uleb128 0
 410 0013 C401     		.uleb128 .LEHB7-.LFB1343
 411 0015 05       		.uleb128 .LEHE7-.LEHB7
 412 0016 00       		.uleb128 0
 413 0017 00       		.uleb128 0
 414              	.LLSDACSE1343:
 415 0018 01       		.byte	0x1
 416 0019 00       		.byte	0
 417 001a 0000     		.align 4
 418 001c 00000000 		.long	0
 419              	
 420              	.LLSDATT1343:
 421              		.text
 423              		.section	.rodata
 424              	.LC5:
 425 0058 43686563 		.string	"CheckWorksWithPointers"
 425      6B576F72 
 425      6B735769 
 425      7468506F 
 425      696E7465 
 426              		.text
 427 0125 90       		.align 2
 429              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersC2Ev:
 430              	.LFB1345:
  16:TestUnitTest++.cpp **** 
  17:TestUnitTest++.cpp **** TEST(CheckWorksWithPointers)
 431              		.loc 4 17 0
 432              		.cfi_startproc
 433 0126 55       		pushq	%rbp
 434              		.cfi_def_cfa_offset 16
 435              		.cfi_offset 6, -16
 436 0127 4889E5   		movq	%rsp, %rbp
 437              		.cfi_def_cfa_register 6
 438 012a 4883EC10 		subq	$16, %rsp
 439 012e 48897DF8 		movq	%rdi, -8(%rbp)
 440              	.LBB7:
 441              		.loc 4 17 0
 442 0132 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 442      00
 443 0137 4889C2   		movq	%rax, %rdx
 444 013a 488B45F8 		movq	-8(%rbp), %rax
 445 013e 41B81100 		movl	$17, %r8d
 445      0000
 446 0144 B9000000 		movl	$.LC1, %ecx
 446      00
 447 0149 BE000000 		movl	$.LC5, %esi
 447      00
 448 014e 4889C7   		movq	%rax, %rdi
 449 0151 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 449      00
 450 0156 BA000000 		movl	$_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE+16, %edx
 450      00
 451 015b 488B45F8 		movq	-8(%rbp), %rax
 452 015f 488910   		movq	%rdx, (%rax)
 453              	.LBE7:
 454 0162 90       		nop
 455 0163 C9       		leave
 456              		.cfi_def_cfa 7, 8
 457 0164 C3       		ret
 458              		.cfi_endproc
 459              	.LFE1345:
 461              		.set	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersC1Ev,_ZN12_GLOBAL__N_126TestCheckWorksWithPointe
 462              		.local	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE
 463              		.comm	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE,56,32
 464              		.local	_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE
 465              		.comm	_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE,1,1
 466              		.section	.rodata
 467              	.LC6:
 468 006f 7000     		.string	"p"
 469              	.LC7:
 470 0071 7020213D 		.string	"p != 0"
 470      203000
 471              		.align 8
 472              	.LC8:
 473 0078 556E6861 		.string	"Unhandled exception in CHECK(p)"
 473      6E646C65 
 473      64206578 
 473      63657074 
 473      696F6E20 
 474              		.align 8
 475              	.LC9:
 476 0098 556E6861 		.string	"Unhandled exception in CHECK(p != 0)"
 476      6E646C65 
 476      64206578 
 476      63657074 
 476      696F6E20 
 477              		.text
 478 0165 90       		.align 2
 480              	_ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv:
 481              	.LFB1347:
  18:TestUnitTest++.cpp **** {
 482              		.loc 4 18 0
 483              		.cfi_startproc
 484              		.cfi_personality 0x3,__gxx_personality_v0
 485              		.cfi_lsda 0x3,.LLSDA1347
 486 0166 55       		pushq	%rbp
 487              		.cfi_def_cfa_offset 16
 488              		.cfi_offset 6, -16
 489 0167 4889E5   		movq	%rsp, %rbp
 490              		.cfi_def_cfa_register 6
 491 016a 53       		pushq	%rbx
 492 016b 4883EC58 		subq	$88, %rsp
 493              		.cfi_offset 3, -24
 494 016f 48897DA8 		movq	%rdi, -88(%rbp)
 495              		.loc 4 18 0
 496 0173 64488B04 		movq	%fs:40, %rax
 496      25280000 
 496      00
 497 017c 488945E8 		movq	%rax, -24(%rbp)
 498 0180 31C0     		xorl	%eax, %eax
  19:TestUnitTest++.cpp ****     void* p = (void *)0x100;
 499              		.loc 4 19 0
 500 0182 48C745B8 		movq	$256, -72(%rbp)
 500      00010000 
  20:TestUnitTest++.cpp ****     CHECK(p);
 501              		.loc 4 20 0
 502 018a 488B45B8 		movq	-72(%rbp), %rax
 503 018e 4889C7   		movq	%rax, %rdi
 504 0191 E8000000 		call	_ZN8UnitTest5CheckIPvEEbT_
 504      00
 505 0196 83F001   		xorl	$1, %eax
 506 0199 84C0     		testb	%al, %al
 507 019b 7438     		je	.L25
 508              	.LEHB8:
 509              		.loc 4 20 0 is_stmt 0 discriminator 1
 510 019d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 510      00
 511 01a2 488B08   		movq	(%rax), %rcx
 512 01a5 488D45C0 		leaq	-64(%rbp), %rax
 513 01a9 BA140000 		movl	$20, %edx
 513      00
 514 01ae 4889CE   		movq	%rcx, %rsi
 515 01b1 4889C7   		movq	%rax, %rdi
 516 01b4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 516      00
 517              		.loc 4 20 0 discriminator 3
 518 01b9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 518      00
 519 01be 488B00   		movq	(%rax), %rax
 520 01c1 488D4DC0 		leaq	-64(%rbp), %rcx
 521 01c5 BA000000 		movl	$.LC6, %edx
 521      00
 522 01ca 4889CE   		movq	%rcx, %rsi
 523 01cd 4889C7   		movq	%rax, %rdi
 524 01d0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 524      00
 525              	.LEHE8:
 526              	.L25:
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 527              		.loc 4 21 0 is_stmt 1
 528 01d5 48837DB8 		cmpq	$0, -72(%rbp)
 528      00
 529 01da 0F95C0   		setne	%al
 530 01dd 0FB6C0   		movzbl	%al, %eax
 531 01e0 89C7     		movl	%eax, %edi
 532 01e2 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 532      00
 533 01e7 83F001   		xorl	$1, %eax
 534 01ea 84C0     		testb	%al, %al
 535 01ec 0F84F400 		je	.L36
 535      0000
 536              	.LEHB9:
 537              		.loc 4 21 0 is_stmt 0 discriminator 1
 538 01f2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 538      00
 539 01f7 488B08   		movq	(%rax), %rcx
 540 01fa 488D45C0 		leaq	-64(%rbp), %rax
 541 01fe BA150000 		movl	$21, %edx
 541      00
 542 0203 4889CE   		movq	%rcx, %rsi
 543 0206 4889C7   		movq	%rax, %rdi
 544 0209 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 544      00
 545              		.loc 4 21 0 discriminator 3
 546 020e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 546      00
 547 0213 488B00   		movq	(%rax), %rax
 548 0216 488D4DC0 		leaq	-64(%rbp), %rcx
 549 021a BA000000 		movl	$.LC7, %edx
 549      00
 550 021f 4889CE   		movq	%rcx, %rsi
 551 0222 4889C7   		movq	%rax, %rdi
 552 0225 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 552      00
 553              	.LEHE9:
  22:TestUnitTest++.cpp **** }
 554              		.loc 4 22 0 is_stmt 1
 555 022a E9B70000 		jmp	.L36
 555      00
 556              	.L32:
  20:TestUnitTest++.cpp ****     CHECK(p);
 557              		.loc 4 20 0
 558 022f 4889C7   		movq	%rax, %rdi
 559 0232 E8000000 		call	__cxa_begin_catch
 559      00
 560              	.LEHB10:
 561 0237 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 561      00
 562 023c 488B08   		movq	(%rax), %rcx
 563 023f 488D45C0 		leaq	-64(%rbp), %rax
 564 0243 BA140000 		movl	$20, %edx
 564      00
 565 0248 4889CE   		movq	%rcx, %rsi
 566 024b 4889C7   		movq	%rax, %rdi
 567 024e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 567      00
  20:TestUnitTest++.cpp ****     CHECK(p);
 568              		.loc 4 20 0 is_stmt 0 discriminator 11
 569 0253 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 569      00
 570 0258 488B00   		movq	(%rax), %rax
 571 025b 488D4DC0 		leaq	-64(%rbp), %rcx
 572 025f BA000000 		movl	$.LC8, %edx
 572      00
 573 0264 4889CE   		movq	%rcx, %rsi
 574 0267 4889C7   		movq	%rax, %rdi
 575 026a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 575      00
 576              	.LEHE10:
 577              	.LEHB11:
  20:TestUnitTest++.cpp ****     CHECK(p);
 578              		.loc 4 20 0 discriminator 15
 579 026f E8000000 		call	__cxa_end_catch
 579      00
 580              	.LEHE11:
 581 0274 E95CFFFF 		jmp	.L25
 581      FF
 582              	.L33:
 583 0279 4889C3   		movq	%rax, %rbx
  20:TestUnitTest++.cpp ****     CHECK(p);
 584              		.loc 4 20 0
 585 027c E8000000 		call	__cxa_end_catch
 585      00
 586 0281 4889D8   		movq	%rbx, %rax
 587 0284 4889C7   		movq	%rax, %rdi
 588              	.LEHB12:
 589 0287 E8000000 		call	_Unwind_Resume
 589      00
 590              	.LEHE12:
 591              	.L34:
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 592              		.loc 4 21 0 is_stmt 1
 593 028c 4889C7   		movq	%rax, %rdi
 594 028f E8000000 		call	__cxa_begin_catch
 594      00
 595              	.LEHB13:
 596 0294 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 596      00
 597 0299 488B08   		movq	(%rax), %rcx
 598 029c 488D45C0 		leaq	-64(%rbp), %rax
 599 02a0 BA150000 		movl	$21, %edx
 599      00
 600 02a5 4889CE   		movq	%rcx, %rsi
 601 02a8 4889C7   		movq	%rax, %rdi
 602 02ab E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 602      00
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 603              		.loc 4 21 0 is_stmt 0 discriminator 11
 604 02b0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 604      00
 605 02b5 488B00   		movq	(%rax), %rax
 606 02b8 488D4DC0 		leaq	-64(%rbp), %rcx
 607 02bc BA000000 		movl	$.LC9, %edx
 607      00
 608 02c1 4889CE   		movq	%rcx, %rsi
 609 02c4 4889C7   		movq	%rax, %rdi
 610 02c7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 610      00
 611              	.LEHE13:
 612              	.LEHB14:
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 613              		.loc 4 21 0 discriminator 15
 614 02cc E8000000 		call	__cxa_end_catch
 614      00
 615              	.LEHE14:
 616              		.loc 4 22 0 is_stmt 1 discriminator 15
 617 02d1 EB13     		jmp	.L36
 618              	.L35:
 619 02d3 4889C3   		movq	%rax, %rbx
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 620              		.loc 4 21 0
 621 02d6 E8000000 		call	__cxa_end_catch
 621      00
 622 02db 4889D8   		movq	%rbx, %rax
 623 02de 4889C7   		movq	%rax, %rdi
 624              	.LEHB15:
 625 02e1 E8000000 		call	_Unwind_Resume
 625      00
 626              	.LEHE15:
 627              	.L36:
 628              		.loc 4 22 0
 629 02e6 90       		nop
 630 02e7 488B45E8 		movq	-24(%rbp), %rax
 631 02eb 64483304 		xorq	%fs:40, %rax
 631      25280000 
 631      00
 632 02f4 7405     		je	.L31
 633 02f6 E8000000 		call	__stack_chk_fail
 633      00
 634              	.L31:
 635 02fb 4883C458 		addq	$88, %rsp
 636 02ff 5B       		popq	%rbx
 637 0300 5D       		popq	%rbp
 638              		.cfi_def_cfa 7, 8
 639 0301 C3       		ret
 640              		.cfi_endproc
 641              	.LFE1347:
 642              		.section	.gcc_except_table
 643              		.align 4
 644              	.LLSDA1347:
 645 0020 FF       		.byte	0xff
 646 0021 03       		.byte	0x3
 647 0022 35       		.uleb128 .LLSDATT1347-.LLSDATTD1347
 648              	.LLSDATTD1347:
 649 0023 01       		.byte	0x1
 650 0024 2B       		.uleb128 .LLSDACSE1347-.LLSDACSB1347
 651              	.LLSDACSB1347:
 652 0025 37       		.uleb128 .LEHB8-.LFB1347
 653 0026 38       		.uleb128 .LEHE8-.LEHB8
 654 0027 C901     		.uleb128 .L32-.LFB1347
 655 0029 01       		.uleb128 0x1
 656 002a 8C01     		.uleb128 .LEHB9-.LFB1347
 657 002c 38       		.uleb128 .LEHE9-.LEHB9
 658 002d A602     		.uleb128 .L34-.LFB1347
 659 002f 01       		.uleb128 0x1
 660 0030 D101     		.uleb128 .LEHB10-.LFB1347
 661 0032 38       		.uleb128 .LEHE10-.LEHB10
 662 0033 9302     		.uleb128 .L33-.LFB1347
 663 0035 00       		.uleb128 0
 664 0036 8902     		.uleb128 .LEHB11-.LFB1347
 665 0038 05       		.uleb128 .LEHE11-.LEHB11
 666 0039 00       		.uleb128 0
 667 003a 00       		.uleb128 0
 668 003b A102     		.uleb128 .LEHB12-.LFB1347
 669 003d 05       		.uleb128 .LEHE12-.LEHB12
 670 003e 00       		.uleb128 0
 671 003f 00       		.uleb128 0
 672 0040 AE02     		.uleb128 .LEHB13-.LFB1347
 673 0042 38       		.uleb128 .LEHE13-.LEHB13
 674 0043 ED02     		.uleb128 .L35-.LFB1347
 675 0045 00       		.uleb128 0
 676 0046 E602     		.uleb128 .LEHB14-.LFB1347
 677 0048 05       		.uleb128 .LEHE14-.LEHB14
 678 0049 00       		.uleb128 0
 679 004a 00       		.uleb128 0
 680 004b FB02     		.uleb128 .LEHB15-.LFB1347
 681 004d 05       		.uleb128 .LEHE15-.LEHB15
 682 004e 00       		.uleb128 0
 683 004f 00       		.uleb128 0
 684              	.LLSDACSE1347:
 685 0050 01       		.byte	0x1
 686 0051 00       		.byte	0
 687 0052 0000     		.align 4
 688 0054 00000000 		.long	0
 689              	
 690              	.LLSDATT1347:
 691              		.text
 693              		.section	.rodata
 694              	.LC10:
 695 00bd 56616C69 		.string	"ValidCheckEqualSucceeds"
 695      64436865 
 695      636B4571 
 695      75616C53 
 695      75636365 
 696              		.text
 697              		.align 2
 699              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC2Ev:
 700              	.LFB1349:
  23:TestUnitTest++.cpp **** 
  24:TestUnitTest++.cpp **** TEST(ValidCheckEqualSucceeds)
 701              		.loc 4 24 0
 702              		.cfi_startproc
 703 0302 55       		pushq	%rbp
 704              		.cfi_def_cfa_offset 16
 705              		.cfi_offset 6, -16
 706 0303 4889E5   		movq	%rsp, %rbp
 707              		.cfi_def_cfa_register 6
 708 0306 4883EC10 		subq	$16, %rsp
 709 030a 48897DF8 		movq	%rdi, -8(%rbp)
 710              	.LBB8:
 711              		.loc 4 24 0
 712 030e E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 712      00
 713 0313 4889C2   		movq	%rax, %rdx
 714 0316 488B45F8 		movq	-8(%rbp), %rax
 715 031a 41B81800 		movl	$24, %r8d
 715      0000
 716 0320 B9000000 		movl	$.LC1, %ecx
 716      00
 717 0325 BE000000 		movl	$.LC10, %esi
 717      00
 718 032a 4889C7   		movq	%rax, %rdi
 719 032d E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 719      00
 720 0332 BA000000 		movl	$_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE+16, %edx
 720      00
 721 0337 488B45F8 		movq	-8(%rbp), %rax
 722 033b 488910   		movq	%rdx, (%rax)
 723              	.LBE8:
 724 033e 90       		nop
 725 033f C9       		leave
 726              		.cfi_def_cfa 7, 8
 727 0340 C3       		ret
 728              		.cfi_endproc
 729              	.LFE1349:
 731              		.set	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC1Ev,_ZN12_GLOBAL__N_127TestValidCheckEqualSucc
 732              		.local	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE
 733              		.comm	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE,56,32
 734              		.local	_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE
 735              		.comm	_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE,1,1
 736              		.section	.rodata
 737 00d5 000000   		.align 8
 738              	.LC11:
 739 00d8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(x, y)"
 739      6E646C65 
 739      64206578 
 739      63657074 
 739      696F6E20 
 740              		.text
 741 0341 90       		.align 2
 743              	_ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv:
 744              	.LFB1351:
  25:TestUnitTest++.cpp **** {
 745              		.loc 4 25 0
 746              		.cfi_startproc
 747              		.cfi_personality 0x3,__gxx_personality_v0
 748              		.cfi_lsda 0x3,.LLSDA1351
 749 0342 55       		pushq	%rbp
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 6, -16
 752 0343 4889E5   		movq	%rsp, %rbp
 753              		.cfi_def_cfa_register 6
 754 0346 53       		pushq	%rbx
 755 0347 4883EC58 		subq	$88, %rsp
 756              		.cfi_offset 3, -24
 757 034b 48897DA8 		movq	%rdi, -88(%rbp)
 758              		.loc 4 25 0
 759 034f 64488B04 		movq	%fs:40, %rax
 759      25280000 
 759      00
 760 0358 488945E8 		movq	%rax, -24(%rbp)
 761 035c 31C0     		xorl	%eax, %eax
  26:TestUnitTest++.cpp ****     int const x = 3;
 762              		.loc 4 26 0
 763 035e C745B803 		movl	$3, -72(%rbp)
 763      000000
  27:TestUnitTest++.cpp ****     int const y = 3;
 764              		.loc 4 27 0
 765 0365 C745BC03 		movl	$3, -68(%rbp)
 765      000000
 766              	.LEHB16:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 767              		.loc 4 28 0
 768 036c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 768      00
 769 0371 488B08   		movq	(%rax), %rcx
 770 0374 488D45C0 		leaq	-64(%rbp), %rax
 771 0378 BA1C0000 		movl	$28, %edx
 771      00
 772 037d 4889CE   		movq	%rcx, %rsi
 773 0380 4889C7   		movq	%rax, %rdi
 774 0383 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 774      00
 775              		.loc 4 28 0 is_stmt 0 discriminator 2
 776 0388 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 776      00
 777 038d 488B00   		movq	(%rax), %rax
 778 0390 488D4DC0 		leaq	-64(%rbp), %rcx
 779 0394 488D55BC 		leaq	-68(%rbp), %rdx
 780 0398 488D75B8 		leaq	-72(%rbp), %rsi
 781 039c 4889C7   		movq	%rax, %rdi
 782 039f E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 782      00
 783              	.LEHE16:
  29:TestUnitTest++.cpp **** }
 784              		.loc 4 29 0 is_stmt 1
 785 03a4 EB5A     		jmp	.L38
 786              	.L43:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 787              		.loc 4 28 0
 788 03a6 4889C7   		movq	%rax, %rdi
 789 03a9 E8000000 		call	__cxa_begin_catch
 789      00
 790              	.LEHB17:
 791 03ae E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 791      00
 792 03b3 488B08   		movq	(%rax), %rcx
 793 03b6 488D45C0 		leaq	-64(%rbp), %rax
 794 03ba BA1C0000 		movl	$28, %edx
 794      00
 795 03bf 4889CE   		movq	%rcx, %rsi
 796 03c2 4889C7   		movq	%rax, %rdi
 797 03c5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 797      00
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 798              		.loc 4 28 0 is_stmt 0 discriminator 10
 799 03ca E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 799      00
 800 03cf 488B00   		movq	(%rax), %rax
 801 03d2 488D4DC0 		leaq	-64(%rbp), %rcx
 802 03d6 BA000000 		movl	$.LC11, %edx
 802      00
 803 03db 4889CE   		movq	%rcx, %rsi
 804 03de 4889C7   		movq	%rax, %rdi
 805 03e1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 805      00
 806              	.LEHE17:
 807              	.LEHB18:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 808              		.loc 4 28 0 discriminator 14
 809 03e6 E8000000 		call	__cxa_end_catch
 809      00
 810              	.LEHE18:
 811              		.loc 4 29 0 is_stmt 1 discriminator 14
 812 03eb EB13     		jmp	.L38
 813              	.L44:
 814 03ed 4889C3   		movq	%rax, %rbx
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 815              		.loc 4 28 0
 816 03f0 E8000000 		call	__cxa_end_catch
 816      00
 817 03f5 4889D8   		movq	%rbx, %rax
 818 03f8 4889C7   		movq	%rax, %rdi
 819              	.LEHB19:
 820 03fb E8000000 		call	_Unwind_Resume
 820      00
 821              	.LEHE19:
 822              	.L38:
 823              		.loc 4 29 0
 824 0400 488B45E8 		movq	-24(%rbp), %rax
 825 0404 64483304 		xorq	%fs:40, %rax
 825      25280000 
 825      00
 826 040d 7405     		je	.L42
 827 040f E8000000 		call	__stack_chk_fail
 827      00
 828              	.L42:
 829 0414 4883C458 		addq	$88, %rsp
 830 0418 5B       		popq	%rbx
 831 0419 5D       		popq	%rbp
 832              		.cfi_def_cfa 7, 8
 833 041a C3       		ret
 834              		.cfi_endproc
 835              	.LFE1351:
 836              		.section	.gcc_except_table
 837              		.align 4
 838              	.LLSDA1351:
 839 0058 FF       		.byte	0xff
 840 0059 03       		.byte	0x3
 841 005a 1D       		.uleb128 .LLSDATT1351-.LLSDATTD1351
 842              	.LLSDATTD1351:
 843 005b 01       		.byte	0x1
 844 005c 13       		.uleb128 .LLSDACSE1351-.LLSDACSB1351
 845              	.LLSDACSB1351:
 846 005d 2A       		.uleb128 .LEHB16-.LFB1351
 847 005e 38       		.uleb128 .LEHE16-.LEHB16
 848 005f 64       		.uleb128 .L43-.LFB1351
 849 0060 01       		.uleb128 0x1
 850 0061 6C       		.uleb128 .LEHB17-.LFB1351
 851 0062 38       		.uleb128 .LEHE17-.LEHB17
 852 0063 AB01     		.uleb128 .L44-.LFB1351
 853 0065 00       		.uleb128 0
 854 0066 A401     		.uleb128 .LEHB18-.LFB1351
 855 0068 05       		.uleb128 .LEHE18-.LEHB18
 856 0069 00       		.uleb128 0
 857 006a 00       		.uleb128 0
 858 006b B901     		.uleb128 .LEHB19-.LFB1351
 859 006d 05       		.uleb128 .LEHE19-.LEHB19
 860 006e 00       		.uleb128 0
 861 006f 00       		.uleb128 0
 862              	.LLSDACSE1351:
 863 0070 01       		.byte	0x1
 864 0071 00       		.byte	0
 865 0072 0000     		.align 4
 866 0074 00000000 		.long	0
 867              	
 868              	.LLSDATT1351:
 869              		.text
 871              		.section	.rodata
 872              	.LC12:
 873 0101 43686563 		.string	"CheckEqualWorksWithPointers"
 873      6B457175 
 873      616C576F 
 873      726B7357 
 873      69746850 
 874              		.text
 875 041b 90       		.align 2
 877              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC2Ev:
 878              	.LFB1353:
  30:TestUnitTest++.cpp **** 
  31:TestUnitTest++.cpp **** TEST(CheckEqualWorksWithPointers)
 879              		.loc 4 31 0
 880              		.cfi_startproc
 881 041c 55       		pushq	%rbp
 882              		.cfi_def_cfa_offset 16
 883              		.cfi_offset 6, -16
 884 041d 4889E5   		movq	%rsp, %rbp
 885              		.cfi_def_cfa_register 6
 886 0420 4883EC10 		subq	$16, %rsp
 887 0424 48897DF8 		movq	%rdi, -8(%rbp)
 888              	.LBB9:
 889              		.loc 4 31 0
 890 0428 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 890      00
 891 042d 4889C2   		movq	%rax, %rdx
 892 0430 488B45F8 		movq	-8(%rbp), %rax
 893 0434 41B81F00 		movl	$31, %r8d
 893      0000
 894 043a B9000000 		movl	$.LC1, %ecx
 894      00
 895 043f BE000000 		movl	$.LC12, %esi
 895      00
 896 0444 4889C7   		movq	%rax, %rdi
 897 0447 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 897      00
 898 044c BA000000 		movl	$_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE+16, %edx
 898      00
 899 0451 488B45F8 		movq	-8(%rbp), %rax
 900 0455 488910   		movq	%rdx, (%rax)
 901              	.LBE9:
 902 0458 90       		nop
 903 0459 C9       		leave
 904              		.cfi_def_cfa 7, 8
 905 045a C3       		ret
 906              		.cfi_endproc
 907              	.LFE1353:
 909              		.set	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC1Ev,_ZN12_GLOBAL__N_131TestCheckEqualWorks
 910              		.local	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE
 911              		.comm	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE,56,32
 912              		.local	_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE
 913              		.comm	_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE,1,1
 914              		.section	.rodata
 915 011d 000000   		.align 8
 916              	.LC13:
 917 0120 556E6861 		.string	"Unhandled exception in CHECK_EQUAL((void*)0, p)"
 917      6E646C65 
 917      64206578 
 917      63657074 
 917      696F6E20 
 918              		.text
 919 045b 90       		.align 2
 921              	_ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv:
 922              	.LFB1355:
  32:TestUnitTest++.cpp **** {
 923              		.loc 4 32 0
 924              		.cfi_startproc
 925              		.cfi_personality 0x3,__gxx_personality_v0
 926              		.cfi_lsda 0x3,.LLSDA1355
 927 045c 55       		pushq	%rbp
 928              		.cfi_def_cfa_offset 16
 929              		.cfi_offset 6, -16
 930 045d 4889E5   		movq	%rsp, %rbp
 931              		.cfi_def_cfa_register 6
 932 0460 53       		pushq	%rbx
 933 0461 4883EC58 		subq	$88, %rsp
 934              		.cfi_offset 3, -24
 935 0465 48897DA8 		movq	%rdi, -88(%rbp)
 936              		.loc 4 32 0
 937 0469 64488B04 		movq	%fs:40, %rax
 937      25280000 
 937      00
 938 0472 488945E8 		movq	%rax, -24(%rbp)
 939 0476 31C0     		xorl	%eax, %eax
  33:TestUnitTest++.cpp ****     void* p = (void *)0;
 940              		.loc 4 33 0
 941 0478 48C745B0 		movq	$0, -80(%rbp)
 941      00000000 
 942              	.LEHB20:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 943              		.loc 4 34 0
 944 0480 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 944      00
 945 0485 488B08   		movq	(%rax), %rcx
 946 0488 488D45C0 		leaq	-64(%rbp), %rax
 947 048c BA220000 		movl	$34, %edx
 947      00
 948 0491 4889CE   		movq	%rcx, %rsi
 949 0494 4889C7   		movq	%rax, %rdi
 950 0497 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 950      00
 951              	.LEHE20:
 952              		.loc 4 34 0 is_stmt 0 discriminator 2
 953 049c 48C745B8 		movq	$0, -72(%rbp)
 953      00000000 
 954              	.LEHB21:
 955 04a4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 955      00
 956 04a9 488B00   		movq	(%rax), %rax
 957 04ac 488D4DC0 		leaq	-64(%rbp), %rcx
 958 04b0 488D55B0 		leaq	-80(%rbp), %rdx
 959 04b4 488D75B8 		leaq	-72(%rbp), %rsi
 960 04b8 4889C7   		movq	%rax, %rdi
 961 04bb E8000000 		call	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 961      00
 962              	.LEHE21:
  35:TestUnitTest++.cpp **** }
 963              		.loc 4 35 0 is_stmt 1
 964 04c0 EB5C     		jmp	.L46
 965              	.L53:
 966 04c2 EB00     		jmp	.L48
 967              	.L52:
 968              	.L48:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 969              		.loc 4 34 0
 970 04c4 4889C7   		movq	%rax, %rdi
 971 04c7 E8000000 		call	__cxa_begin_catch
 971      00
 972              	.LEHB22:
 973 04cc E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 973      00
 974 04d1 488B08   		movq	(%rax), %rcx
 975 04d4 488D45C0 		leaq	-64(%rbp), %rax
 976 04d8 BA220000 		movl	$34, %edx
 976      00
 977 04dd 4889CE   		movq	%rcx, %rsi
 978 04e0 4889C7   		movq	%rax, %rdi
 979 04e3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 979      00
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 980              		.loc 4 34 0 is_stmt 0 discriminator 10
 981 04e8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 981      00
 982 04ed 488B00   		movq	(%rax), %rax
 983 04f0 488D4DC0 		leaq	-64(%rbp), %rcx
 984 04f4 BA000000 		movl	$.LC13, %edx
 984      00
 985 04f9 4889CE   		movq	%rcx, %rsi
 986 04fc 4889C7   		movq	%rax, %rdi
 987 04ff E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 987      00
 988              	.LEHE22:
 989              	.LEHB23:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 990              		.loc 4 34 0 discriminator 14
 991 0504 E8000000 		call	__cxa_end_catch
 991      00
 992              	.LEHE23:
 993              		.loc 4 35 0 is_stmt 1 discriminator 14
 994 0509 EB13     		jmp	.L46
 995              	.L54:
 996 050b 4889C3   		movq	%rax, %rbx
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 997              		.loc 4 34 0
 998 050e E8000000 		call	__cxa_end_catch
 998      00
 999 0513 4889D8   		movq	%rbx, %rax
 1000 0516 4889C7   		movq	%rax, %rdi
 1001              	.LEHB24:
 1002 0519 E8000000 		call	_Unwind_Resume
 1002      00
 1003              	.LEHE24:
 1004              	.L46:
 1005              		.loc 4 35 0
 1006 051e 488B45E8 		movq	-24(%rbp), %rax
 1007 0522 64483304 		xorq	%fs:40, %rax
 1007      25280000 
 1007      00
 1008 052b 7405     		je	.L51
 1009 052d E8000000 		call	__stack_chk_fail
 1009      00
 1010              	.L51:
 1011 0532 4883C458 		addq	$88, %rsp
 1012 0536 5B       		popq	%rbx
 1013 0537 5D       		popq	%rbp
 1014              		.cfi_def_cfa 7, 8
 1015 0538 C3       		ret
 1016              		.cfi_endproc
 1017              	.LFE1355:
 1018              		.section	.gcc_except_table
 1019              		.align 4
 1020              	.LLSDA1355:
 1021 0078 FF       		.byte	0xff
 1022 0079 03       		.byte	0x3
 1023 007a 21       		.uleb128 .LLSDATT1355-.LLSDATTD1355
 1024              	.LLSDATTD1355:
 1025 007b 01       		.byte	0x1
 1026 007c 17       		.uleb128 .LLSDACSE1355-.LLSDACSB1355
 1027              	.LLSDACSB1355:
 1028 007d 24       		.uleb128 .LEHB20-.LFB1355
 1029 007e 1C       		.uleb128 .LEHE20-.LEHB20
 1030 007f 68       		.uleb128 .L52-.LFB1355
 1031 0080 01       		.uleb128 0x1
 1032 0081 48       		.uleb128 .LEHB21-.LFB1355
 1033 0082 1C       		.uleb128 .LEHE21-.LEHB21
 1034 0083 66       		.uleb128 .L53-.LFB1355
 1035 0084 03       		.uleb128 0x3
 1036 0085 70       		.uleb128 .LEHB22-.LFB1355
 1037 0086 38       		.uleb128 .LEHE22-.LEHB22
 1038 0087 AF01     		.uleb128 .L54-.LFB1355
 1039 0089 00       		.uleb128 0
 1040 008a A801     		.uleb128 .LEHB23-.LFB1355
 1041 008c 05       		.uleb128 .LEHE23-.LEHB23
 1042 008d 00       		.uleb128 0
 1043 008e 00       		.uleb128 0
 1044 008f BD01     		.uleb128 .LEHB24-.LFB1355
 1045 0091 05       		.uleb128 .LEHE24-.LEHB24
 1046 0092 00       		.uleb128 0
 1047 0093 00       		.uleb128 0
 1048              	.LLSDACSE1355:
 1049 0094 01       		.byte	0x1
 1050 0095 00       		.byte	0
 1051 0096 00       		.byte	0
 1052 0097 7D       		.byte	0x7d
 1053              		.align 4
 1054 0098 00000000 		.long	0
 1055              	
 1056              	.LLSDATT1355:
 1057              		.text
 1059              		.section	.rodata
 1060              	.LC14:
 1061 0150 56616C69 		.string	"ValidCheckCloseSucceeds"
 1061      64436865 
 1061      636B436C 
 1061      6F736553 
 1061      75636365 
 1062              		.text
 1063 0539 90       		.align 2
 1065              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC2Ev:
 1066              	.LFB1357:
  36:TestUnitTest++.cpp **** 
  37:TestUnitTest++.cpp **** TEST(ValidCheckCloseSucceeds)
 1067              		.loc 4 37 0
 1068              		.cfi_startproc
 1069 053a 55       		pushq	%rbp
 1070              		.cfi_def_cfa_offset 16
 1071              		.cfi_offset 6, -16
 1072 053b 4889E5   		movq	%rsp, %rbp
 1073              		.cfi_def_cfa_register 6
 1074 053e 4883EC10 		subq	$16, %rsp
 1075 0542 48897DF8 		movq	%rdi, -8(%rbp)
 1076              	.LBB10:
 1077              		.loc 4 37 0
 1078 0546 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1078      00
 1079 054b 4889C2   		movq	%rax, %rdx
 1080 054e 488B45F8 		movq	-8(%rbp), %rax
 1081 0552 41B82500 		movl	$37, %r8d
 1081      0000
 1082 0558 B9000000 		movl	$.LC1, %ecx
 1082      00
 1083 055d BE000000 		movl	$.LC14, %esi
 1083      00
 1084 0562 4889C7   		movq	%rax, %rdi
 1085 0565 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1085      00
 1086 056a BA000000 		movl	$_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE+16, %edx
 1086      00
 1087 056f 488B45F8 		movq	-8(%rbp), %rax
 1088 0573 488910   		movq	%rdx, (%rax)
 1089              	.LBE10:
 1090 0576 90       		nop
 1091 0577 C9       		leave
 1092              		.cfi_def_cfa 7, 8
 1093 0578 C3       		ret
 1094              		.cfi_endproc
 1095              	.LFE1357:
 1097              		.set	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC1Ev,_ZN12_GLOBAL__N_127TestValidCheckCloseSucc
 1098              		.local	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE
 1099              		.comm	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE,56,32
 1100              		.local	_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE
 1101              		.comm	_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE,1,1
 1102              		.section	.rodata
 1103              		.align 8
 1104              	.LC18:
 1105 0168 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(2.0f, 2.001f)"
 1105      6E646C65 
 1105      64206578 
 1105      63657074 
 1105      696F6E20 
 1106 0199 00000000 		.align 8
 1106      000000
 1107              	.LC19:
 1108 01a0 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(2.001f, 2.0f)"
 1108      6E646C65 
 1108      64206578 
 1108      63657074 
 1108      696F6E20 
 1109              		.text
 1110 0579 90       		.align 2
 1112              	_ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv:
 1113              	.LFB1359:
  38:TestUnitTest++.cpp **** {
 1114              		.loc 4 38 0
 1115              		.cfi_startproc
 1116              		.cfi_personality 0x3,__gxx_personality_v0
 1117              		.cfi_lsda 0x3,.LLSDA1359
 1118 057a 55       		pushq	%rbp
 1119              		.cfi_def_cfa_offset 16
 1120              		.cfi_offset 6, -16
 1121 057b 4889E5   		movq	%rsp, %rbp
 1122              		.cfi_def_cfa_register 6
 1123 057e 53       		pushq	%rbx
 1124 057f 4883EC58 		subq	$88, %rsp
 1125              		.cfi_offset 3, -24
 1126 0583 48897DA8 		movq	%rdi, -88(%rbp)
 1127              		.loc 4 38 0
 1128 0587 64488B04 		movq	%fs:40, %rax
 1128      25280000 
 1128      00
 1129 0590 488945E8 		movq	%rax, -24(%rbp)
 1130 0594 31C0     		xorl	%eax, %eax
 1131              	.LEHB25:
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1132              		.loc 4 39 0
 1133 0596 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1133      00
 1134 059b 488B08   		movq	(%rax), %rcx
 1135 059e 488D45C0 		leaq	-64(%rbp), %rax
 1136 05a2 BA270000 		movl	$39, %edx
 1136      00
 1137 05a7 4889CE   		movq	%rcx, %rsi
 1138 05aa 4889C7   		movq	%rax, %rdi
 1139 05ad E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1139      00
 1140              	.LEHE25:
 1141              		.loc 4 39 0 is_stmt 0 discriminator 2
 1142 05b2 F30F1005 		movss	.LC15(%rip), %xmm0
 1142      00000000 
 1143 05ba F30F1145 		movss	%xmm0, -68(%rbp)
 1143      BC
 1144 05bf F30F1005 		movss	.LC16(%rip), %xmm0
 1144      00000000 
 1145 05c7 F30F1145 		movss	%xmm0, -72(%rbp)
 1145      B8
 1146 05cc F30F1005 		movss	.LC17(%rip), %xmm0
 1146      00000000 
 1147 05d4 F30F1145 		movss	%xmm0, -76(%rbp)
 1147      B4
 1148              	.LEHB26:
 1149 05d9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1149      00
 1150 05de 488B00   		movq	(%rax), %rax
 1151 05e1 488D7DC0 		leaq	-64(%rbp), %rdi
 1152 05e5 488D4DBC 		leaq	-68(%rbp), %rcx
 1153 05e9 488D55B8 		leaq	-72(%rbp), %rdx
 1154 05ed 488D75B4 		leaq	-76(%rbp), %rsi
 1155 05f1 4989F8   		movq	%rdi, %r8
 1156 05f4 4889C7   		movq	%rax, %rdi
 1157 05f7 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 1157      00
 1158              	.LEHE26:
 1159              	.L59:
 1160              	.LEHB27:
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1161              		.loc 4 40 0 is_stmt 1
 1162 05fc E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1162      00
 1163 0601 488B08   		movq	(%rax), %rcx
 1164 0604 488D45C0 		leaq	-64(%rbp), %rax
 1165 0608 BA280000 		movl	$40, %edx
 1165      00
 1166 060d 4889CE   		movq	%rcx, %rsi
 1167 0610 4889C7   		movq	%rax, %rdi
 1168 0613 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1168      00
 1169              	.LEHE27:
 1170              		.loc 4 40 0 is_stmt 0 discriminator 2
 1171 0618 F30F1005 		movss	.LC15(%rip), %xmm0
 1171      00000000 
 1172 0620 F30F1145 		movss	%xmm0, -68(%rbp)
 1172      BC
 1173 0625 F30F1005 		movss	.LC17(%rip), %xmm0
 1173      00000000 
 1174 062d F30F1145 		movss	%xmm0, -72(%rbp)
 1174      B8
 1175 0632 F30F1005 		movss	.LC16(%rip), %xmm0
 1175      00000000 
 1176 063a F30F1145 		movss	%xmm0, -76(%rbp)
 1176      B4
 1177              	.LEHB28:
 1178 063f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1178      00
 1179 0644 488B00   		movq	(%rax), %rax
 1180 0647 488D7DC0 		leaq	-64(%rbp), %rdi
 1181 064b 488D4DBC 		leaq	-68(%rbp), %rcx
 1182 064f 488D55B8 		leaq	-72(%rbp), %rdx
 1183 0653 488D75B4 		leaq	-76(%rbp), %rsi
 1184 0657 4989F8   		movq	%rdi, %r8
 1185 065a 4889C7   		movq	%rax, %rdi
 1186 065d E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 1186      00
 1187              	.LEHE28:
  41:TestUnitTest++.cpp **** }
 1188              		.loc 4 41 0 is_stmt 1
 1189 0662 E9BB0000 		jmp	.L56
 1189      00
 1190              	.L67:
 1191 0667 EB00     		jmp	.L58
 1192              	.L66:
 1193              	.L58:
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1194              		.loc 4 39 0
 1195 0669 4889C7   		movq	%rax, %rdi
 1196 066c E8000000 		call	__cxa_begin_catch
 1196      00
 1197              	.LEHB29:
 1198 0671 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1198      00
 1199 0676 488B08   		movq	(%rax), %rcx
 1200 0679 488D45C0 		leaq	-64(%rbp), %rax
 1201 067d BA270000 		movl	$39, %edx
 1201      00
 1202 0682 4889CE   		movq	%rcx, %rsi
 1203 0685 4889C7   		movq	%rax, %rdi
 1204 0688 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1204      00
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1205              		.loc 4 39 0 is_stmt 0 discriminator 10
 1206 068d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1206      00
 1207 0692 488B00   		movq	(%rax), %rax
 1208 0695 488D4DC0 		leaq	-64(%rbp), %rcx
 1209 0699 BA000000 		movl	$.LC18, %edx
 1209      00
 1210 069e 4889CE   		movq	%rcx, %rsi
 1211 06a1 4889C7   		movq	%rax, %rdi
 1212 06a4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1212      00
 1213              	.LEHE29:
 1214              	.LEHB30:
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1215              		.loc 4 39 0 discriminator 14
 1216 06a9 E8000000 		call	__cxa_end_catch
 1216      00
 1217              	.LEHE30:
 1218 06ae E949FFFF 		jmp	.L59
 1218      FF
 1219              	.L68:
 1220 06b3 4889C3   		movq	%rax, %rbx
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1221              		.loc 4 39 0
 1222 06b6 E8000000 		call	__cxa_end_catch
 1222      00
 1223 06bb 4889D8   		movq	%rbx, %rax
 1224 06be 4889C7   		movq	%rax, %rdi
 1225              	.LEHB31:
 1226 06c1 E8000000 		call	_Unwind_Resume
 1226      00
 1227              	.LEHE31:
 1228              	.L70:
 1229 06c6 EB00     		jmp	.L62
 1230              	.L69:
 1231              	.L62:
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1232              		.loc 4 40 0 is_stmt 1
 1233 06c8 4889C7   		movq	%rax, %rdi
 1234 06cb E8000000 		call	__cxa_begin_catch
 1234      00
 1235              	.LEHB32:
 1236 06d0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1236      00
 1237 06d5 488B08   		movq	(%rax), %rcx
 1238 06d8 488D45C0 		leaq	-64(%rbp), %rax
 1239 06dc BA280000 		movl	$40, %edx
 1239      00
 1240 06e1 4889CE   		movq	%rcx, %rsi
 1241 06e4 4889C7   		movq	%rax, %rdi
 1242 06e7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1242      00
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1243              		.loc 4 40 0 is_stmt 0 discriminator 10
 1244 06ec E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1244      00
 1245 06f1 488B00   		movq	(%rax), %rax
 1246 06f4 488D4DC0 		leaq	-64(%rbp), %rcx
 1247 06f8 BA000000 		movl	$.LC19, %edx
 1247      00
 1248 06fd 4889CE   		movq	%rcx, %rsi
 1249 0700 4889C7   		movq	%rax, %rdi
 1250 0703 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1250      00
 1251              	.LEHE32:
 1252              	.LEHB33:
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1253              		.loc 4 40 0 discriminator 14
 1254 0708 E8000000 		call	__cxa_end_catch
 1254      00
 1255              	.LEHE33:
 1256              		.loc 4 41 0 is_stmt 1 discriminator 14
 1257 070d EB13     		jmp	.L56
 1258              	.L71:
 1259 070f 4889C3   		movq	%rax, %rbx
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1260              		.loc 4 40 0
 1261 0712 E8000000 		call	__cxa_end_catch
 1261      00
 1262 0717 4889D8   		movq	%rbx, %rax
 1263 071a 4889C7   		movq	%rax, %rdi
 1264              	.LEHB34:
 1265 071d E8000000 		call	_Unwind_Resume
 1265      00
 1266              	.LEHE34:
 1267              	.L56:
 1268              		.loc 4 41 0
 1269 0722 488B45E8 		movq	-24(%rbp), %rax
 1270 0726 64483304 		xorq	%fs:40, %rax
 1270      25280000 
 1270      00
 1271 072f 7405     		je	.L65
 1272 0731 E8000000 		call	__stack_chk_fail
 1272      00
 1273              	.L65:
 1274 0736 4883C458 		addq	$88, %rsp
 1275 073a 5B       		popq	%rbx
 1276 073b 5D       		popq	%rbp
 1277              		.cfi_def_cfa 7, 8
 1278 073c C3       		ret
 1279              		.cfi_endproc
 1280              	.LFE1359:
 1281              		.section	.gcc_except_table
 1282              		.align 4
 1283              	.LLSDA1359:
 1284 009c FF       		.byte	0xff
 1285 009d 03       		.byte	0x3
 1286 009e 41       		.uleb128 .LLSDATT1359-.LLSDATTD1359
 1287              	.LLSDATTD1359:
 1288 009f 01       		.byte	0x1
 1289 00a0 36       		.uleb128 .LLSDACSE1359-.LLSDACSB1359
 1290              	.LLSDACSB1359:
 1291 00a1 1C       		.uleb128 .LEHB25-.LFB1359
 1292 00a2 1C       		.uleb128 .LEHE25-.LEHB25
 1293 00a3 EF01     		.uleb128 .L66-.LFB1359
 1294 00a5 01       		.uleb128 0x1
 1295 00a6 5F       		.uleb128 .LEHB26-.LFB1359
 1296 00a7 23       		.uleb128 .LEHE26-.LEHB26
 1297 00a8 ED01     		.uleb128 .L67-.LFB1359
 1298 00aa 03       		.uleb128 0x3
 1299 00ab 8201     		.uleb128 .LEHB27-.LFB1359
 1300 00ad 1C       		.uleb128 .LEHE27-.LEHB27
 1301 00ae CE02     		.uleb128 .L69-.LFB1359
 1302 00b0 01       		.uleb128 0x1
 1303 00b1 C501     		.uleb128 .LEHB28-.LFB1359
 1304 00b3 23       		.uleb128 .LEHE28-.LEHB28
 1305 00b4 CC02     		.uleb128 .L70-.LFB1359
 1306 00b6 03       		.uleb128 0x3
 1307 00b7 F701     		.uleb128 .LEHB29-.LFB1359
 1308 00b9 38       		.uleb128 .LEHE29-.LEHB29
 1309 00ba B902     		.uleb128 .L68-.LFB1359
 1310 00bc 00       		.uleb128 0
 1311 00bd AF02     		.uleb128 .LEHB30-.LFB1359
 1312 00bf 05       		.uleb128 .LEHE30-.LEHB30
 1313 00c0 00       		.uleb128 0
 1314 00c1 00       		.uleb128 0
 1315 00c2 C702     		.uleb128 .LEHB31-.LFB1359
 1316 00c4 05       		.uleb128 .LEHE31-.LEHB31
 1317 00c5 00       		.uleb128 0
 1318 00c6 00       		.uleb128 0
 1319 00c7 D602     		.uleb128 .LEHB32-.LFB1359
 1320 00c9 38       		.uleb128 .LEHE32-.LEHB32
 1321 00ca 9503     		.uleb128 .L71-.LFB1359
 1322 00cc 00       		.uleb128 0
 1323 00cd 8E03     		.uleb128 .LEHB33-.LFB1359
 1324 00cf 05       		.uleb128 .LEHE33-.LEHB33
 1325 00d0 00       		.uleb128 0
 1326 00d1 00       		.uleb128 0
 1327 00d2 A303     		.uleb128 .LEHB34-.LFB1359
 1328 00d4 05       		.uleb128 .LEHE34-.LEHB34
 1329 00d5 00       		.uleb128 0
 1330 00d6 00       		.uleb128 0
 1331              	.LLSDACSE1359:
 1332 00d7 01       		.byte	0x1
 1333 00d8 00       		.byte	0
 1334 00d9 00       		.byte	0
 1335 00da 7D       		.byte	0x7d
 1336 00db 00       		.align 4
 1337 00dc 00000000 		.long	0
 1338              	
 1339              	.LLSDATT1359:
 1340              		.text
 1342              		.section	.rodata
 1343              	.LC20:
 1344 01d1 41727261 		.string	"ArrayCloseSucceeds"
 1344      79436C6F 
 1344      73655375 
 1344      63636565 
 1344      647300
 1345              		.text
 1346 073d 90       		.align 2
 1348              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev:
 1349              	.LFB1361:
  42:TestUnitTest++.cpp **** 
  43:TestUnitTest++.cpp **** TEST(ArrayCloseSucceeds)
 1350              		.loc 4 43 0
 1351              		.cfi_startproc
 1352 073e 55       		pushq	%rbp
 1353              		.cfi_def_cfa_offset 16
 1354              		.cfi_offset 6, -16
 1355 073f 4889E5   		movq	%rsp, %rbp
 1356              		.cfi_def_cfa_register 6
 1357 0742 4883EC10 		subq	$16, %rsp
 1358 0746 48897DF8 		movq	%rdi, -8(%rbp)
 1359              	.LBB11:
 1360              		.loc 4 43 0
 1361 074a E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1361      00
 1362 074f 4889C2   		movq	%rax, %rdx
 1363 0752 488B45F8 		movq	-8(%rbp), %rax
 1364 0756 41B82B00 		movl	$43, %r8d
 1364      0000
 1365 075c B9000000 		movl	$.LC1, %ecx
 1365      00
 1366 0761 BE000000 		movl	$.LC20, %esi
 1366      00
 1367 0766 4889C7   		movq	%rax, %rdi
 1368 0769 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1368      00
 1369 076e BA000000 		movl	$_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE+16, %edx
 1369      00
 1370 0773 488B45F8 		movq	-8(%rbp), %rax
 1371 0777 488910   		movq	%rdx, (%rax)
 1372              	.LBE11:
 1373 077a 90       		nop
 1374 077b C9       		leave
 1375              		.cfi_def_cfa 7, 8
 1376 077c C3       		ret
 1377              		.cfi_endproc
 1378              	.LFE1361:
 1380              		.set	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC1Ev,_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev
 1381              		.local	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE
 1382              		.comm	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE,56,32
 1383              		.local	_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE
 1384              		.comm	_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE,1,1
 1385              		.section	.rodata
 1386 01e4 00000000 		.align 8
 1387              	.LC25:
 1388 01e8 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_CLOSE(a1, a2)"
 1388      6E646C65 
 1388      64206578 
 1388      63657074 
 1388      696F6E20 
 1389              		.text
 1390 077d 90       		.align 2
 1392              	_ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv:
 1393              	.LFB1363:
  44:TestUnitTest++.cpp **** {
 1394              		.loc 4 44 0
 1395              		.cfi_startproc
 1396              		.cfi_personality 0x3,__gxx_personality_v0
 1397              		.cfi_lsda 0x3,.LLSDA1363
 1398 077e 55       		pushq	%rbp
 1399              		.cfi_def_cfa_offset 16
 1400              		.cfi_offset 6, -16
 1401 077f 4889E5   		movq	%rsp, %rbp
 1402              		.cfi_def_cfa_register 6
 1403 0782 53       		pushq	%rbx
 1404 0783 4883EC78 		subq	$120, %rsp
 1405              		.cfi_offset 3, -24
 1406 0787 48897D88 		movq	%rdi, -120(%rbp)
 1407              		.loc 4 44 0
 1408 078b 64488B04 		movq	%fs:40, %rax
 1408      25280000 
 1408      00
 1409 0794 488945E8 		movq	%rax, -24(%rbp)
 1410 0798 31C0     		xorl	%eax, %eax
  45:TestUnitTest++.cpp ****     float const a1[] = {1, 2, 3};
 1411              		.loc 4 45 0
 1412 079a F30F1005 		movss	.LC21(%rip), %xmm0
 1412      00000000 
 1413 07a2 F30F1145 		movss	%xmm0, -64(%rbp)
 1413      C0
 1414 07a7 F30F1005 		movss	.LC17(%rip), %xmm0
 1414      00000000 
 1415 07af F30F1145 		movss	%xmm0, -60(%rbp)
 1415      C4
 1416 07b4 F30F1005 		movss	.LC22(%rip), %xmm0
 1416      00000000 
 1417 07bc F30F1145 		movss	%xmm0, -56(%rbp)
 1417      C8
  46:TestUnitTest++.cpp ****     float const a2[] = {1, 2.01f, 3};
 1418              		.loc 4 46 0
 1419 07c1 F30F1005 		movss	.LC21(%rip), %xmm0
 1419      00000000 
 1420 07c9 F30F1145 		movss	%xmm0, -48(%rbp)
 1420      D0
 1421 07ce F30F1005 		movss	.LC23(%rip), %xmm0
 1421      00000000 
 1422 07d6 F30F1145 		movss	%xmm0, -44(%rbp)
 1422      D4
 1423 07db F30F1005 		movss	.LC22(%rip), %xmm0
 1423      00000000 
 1424 07e3 F30F1145 		movss	%xmm0, -40(%rbp)
 1424      D8
 1425              	.LEHB35:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1426              		.loc 4 47 0
 1427 07e8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1427      00
 1428 07ed 488B08   		movq	(%rax), %rcx
 1429 07f0 488D45A0 		leaq	-96(%rbp), %rax
 1430 07f4 BA2F0000 		movl	$47, %edx
 1430      00
 1431 07f9 4889CE   		movq	%rcx, %rsi
 1432 07fc 4889C7   		movq	%rax, %rdi
 1433 07ff E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1433      00
 1434              	.LEHE35:
 1435              		.loc 4 47 0 is_stmt 0 discriminator 2
 1436 0804 F30F1005 		movss	.LC24(%rip), %xmm0
 1436      00000000 
 1437 080c F30F1145 		movss	%xmm0, -100(%rbp)
 1437      9C
 1438              	.LEHB36:
 1439 0811 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1439      00
 1440 0816 488B00   		movq	(%rax), %rax
 1441 0819 488D7DA0 		leaq	-96(%rbp), %rdi
 1442 081d 488D4D9C 		leaq	-100(%rbp), %rcx
 1443 0821 488D55D0 		leaq	-48(%rbp), %rdx
 1444 0825 488D75C0 		leaq	-64(%rbp), %rsi
 1445 0829 4989F9   		movq	%rdi, %r9
 1446 082c 4989C8   		movq	%rcx, %r8
 1447 082f B9030000 		movl	$3, %ecx
 1447      00
 1448 0834 4889C7   		movq	%rax, %rdi
 1449 0837 E8000000 		call	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
 1449      00
 1450              	.LEHE36:
  48:TestUnitTest++.cpp **** }
 1451              		.loc 4 48 0 is_stmt 1
 1452 083c EB5C     		jmp	.L73
 1453              	.L80:
 1454 083e EB00     		jmp	.L75
 1455              	.L79:
 1456              	.L75:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1457              		.loc 4 47 0
 1458 0840 4889C7   		movq	%rax, %rdi
 1459 0843 E8000000 		call	__cxa_begin_catch
 1459      00
 1460              	.LEHB37:
 1461 0848 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1461      00
 1462 084d 488B08   		movq	(%rax), %rcx
 1463 0850 488D45A0 		leaq	-96(%rbp), %rax
 1464 0854 BA2F0000 		movl	$47, %edx
 1464      00
 1465 0859 4889CE   		movq	%rcx, %rsi
 1466 085c 4889C7   		movq	%rax, %rdi
 1467 085f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1467      00
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1468              		.loc 4 47 0 is_stmt 0 discriminator 10
 1469 0864 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1469      00
 1470 0869 488B00   		movq	(%rax), %rax
 1471 086c 488D4DA0 		leaq	-96(%rbp), %rcx
 1472 0870 BA000000 		movl	$.LC25, %edx
 1472      00
 1473 0875 4889CE   		movq	%rcx, %rsi
 1474 0878 4889C7   		movq	%rax, %rdi
 1475 087b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1475      00
 1476              	.LEHE37:
 1477              	.LEHB38:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1478              		.loc 4 47 0 discriminator 14
 1479 0880 E8000000 		call	__cxa_end_catch
 1479      00
 1480              	.LEHE38:
 1481              		.loc 4 48 0 is_stmt 1 discriminator 14
 1482 0885 EB13     		jmp	.L73
 1483              	.L81:
 1484 0887 4889C3   		movq	%rax, %rbx
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1485              		.loc 4 47 0
 1486 088a E8000000 		call	__cxa_end_catch
 1486      00
 1487 088f 4889D8   		movq	%rbx, %rax
 1488 0892 4889C7   		movq	%rax, %rdi
 1489              	.LEHB39:
 1490 0895 E8000000 		call	_Unwind_Resume
 1490      00
 1491              	.LEHE39:
 1492              	.L73:
 1493              		.loc 4 48 0
 1494 089a 488B45E8 		movq	-24(%rbp), %rax
 1495 089e 64483304 		xorq	%fs:40, %rax
 1495      25280000 
 1495      00
 1496 08a7 7405     		je	.L78
 1497 08a9 E8000000 		call	__stack_chk_fail
 1497      00
 1498              	.L78:
 1499 08ae 4883C478 		addq	$120, %rsp
 1500 08b2 5B       		popq	%rbx
 1501 08b3 5D       		popq	%rbp
 1502              		.cfi_def_cfa 7, 8
 1503 08b4 C3       		ret
 1504              		.cfi_endproc
 1505              	.LFE1363:
 1506              		.section	.gcc_except_table
 1507              		.align 4
 1508              	.LLSDA1363:
 1509 00e0 FF       		.byte	0xff
 1510 00e1 03       		.byte	0x3
 1511 00e2 25       		.uleb128 .LLSDATT1363-.LLSDATTD1363
 1512              	.LLSDATTD1363:
 1513 00e3 01       		.byte	0x1
 1514 00e4 1B       		.uleb128 .LLSDACSE1363-.LLSDACSB1363
 1515              	.LLSDACSB1363:
 1516 00e5 6A       		.uleb128 .LEHB35-.LFB1363
 1517 00e6 1C       		.uleb128 .LEHE35-.LEHB35
 1518 00e7 C201     		.uleb128 .L79-.LFB1363
 1519 00e9 01       		.uleb128 0x1
 1520 00ea 9301     		.uleb128 .LEHB36-.LFB1363
 1521 00ec 2B       		.uleb128 .LEHE36-.LEHB36
 1522 00ed C001     		.uleb128 .L80-.LFB1363
 1523 00ef 03       		.uleb128 0x3
 1524 00f0 CA01     		.uleb128 .LEHB37-.LFB1363
 1525 00f2 38       		.uleb128 .LEHE37-.LEHB37
 1526 00f3 8902     		.uleb128 .L81-.LFB1363
 1527 00f5 00       		.uleb128 0
 1528 00f6 8202     		.uleb128 .LEHB38-.LFB1363
 1529 00f8 05       		.uleb128 .LEHE38-.LEHB38
 1530 00f9 00       		.uleb128 0
 1531 00fa 00       		.uleb128 0
 1532 00fb 9702     		.uleb128 .LEHB39-.LFB1363
 1533 00fd 05       		.uleb128 .LEHE39-.LEHB39
 1534 00fe 00       		.uleb128 0
 1535 00ff 00       		.uleb128 0
 1536              	.LLSDACSE1363:
 1537 0100 01       		.byte	0x1
 1538 0101 00       		.byte	0
 1539 0102 00       		.byte	0
 1540 0103 7D       		.byte	0x7d
 1541              		.align 4
 1542 0104 00000000 		.long	0
 1543              	
 1544              	.LLSDATT1363:
 1545              		.text
 1547              		.section	.rodata
 1548 0219 00000000 		.align 8
 1548      000000
 1549              	.LC26:
 1550 0220 43686563 		.string	"CheckArrayCloseWorksWithVectors"
 1550      6B417272 
 1550      6179436C 
 1550      6F736557 
 1550      6F726B73 
 1551              		.text
 1552 08b5 90       		.align 2
 1554              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC2Ev:
 1555              	.LFB1365:
  49:TestUnitTest++.cpp **** 
  50:TestUnitTest++.cpp **** TEST (CheckArrayCloseWorksWithVectors)
 1556              		.loc 4 50 0
 1557              		.cfi_startproc
 1558 08b6 55       		pushq	%rbp
 1559              		.cfi_def_cfa_offset 16
 1560              		.cfi_offset 6, -16
 1561 08b7 4889E5   		movq	%rsp, %rbp
 1562              		.cfi_def_cfa_register 6
 1563 08ba 4883EC10 		subq	$16, %rsp
 1564 08be 48897DF8 		movq	%rdi, -8(%rbp)
 1565              	.LBB12:
 1566              		.loc 4 50 0
 1567 08c2 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1567      00
 1568 08c7 4889C2   		movq	%rax, %rdx
 1569 08ca 488B45F8 		movq	-8(%rbp), %rax
 1570 08ce 41B83200 		movl	$50, %r8d
 1570      0000
 1571 08d4 B9000000 		movl	$.LC1, %ecx
 1571      00
 1572 08d9 BE000000 		movl	$.LC26, %esi
 1572      00
 1573 08de 4889C7   		movq	%rax, %rdi
 1574 08e1 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1574      00
 1575 08e6 BA000000 		movl	$_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE+16, %edx
 1575      00
 1576 08eb 488B45F8 		movq	-8(%rbp), %rax
 1577 08ef 488910   		movq	%rdx, (%rax)
 1578              	.LBE12:
 1579 08f2 90       		nop
 1580 08f3 C9       		leave
 1581              		.cfi_def_cfa 7, 8
 1582 08f4 C3       		ret
 1583              		.cfi_endproc
 1584              	.LFE1365:
 1586              		.set	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC1Ev,_ZN12_GLOBAL__N_135TestCheckArrayC
 1587              		.local	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE
 1588              		.comm	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE,56,32
 1589              		.local	_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE
 1590              		.comm	_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE,1,1
 1591              		.section	.rodata
 1592              		.align 8
 1593              	.LC29:
 1594 0240 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_CLOSE(a, a)"
 1594      6E646C65 
 1594      64206578 
 1594      63657074 
 1594      696F6E20 
 1595              		.text
 1596 08f5 90       		.align 2
 1598              	_ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv:
 1599              	.LFB1367:
  51:TestUnitTest++.cpp **** {
 1600              		.loc 4 51 0
 1601              		.cfi_startproc
 1602              		.cfi_personality 0x3,__gxx_personality_v0
 1603              		.cfi_lsda 0x3,.LLSDA1367
 1604 08f6 55       		pushq	%rbp
 1605              		.cfi_def_cfa_offset 16
 1606              		.cfi_offset 6, -16
 1607 08f7 4889E5   		movq	%rsp, %rbp
 1608              		.cfi_def_cfa_register 6
 1609 08fa 53       		pushq	%rbx
 1610 08fb 4883EC78 		subq	$120, %rsp
 1611              		.cfi_offset 3, -24
 1612 08ff 48897D88 		movq	%rdi, -120(%rbp)
 1613              		.loc 4 51 0
 1614 0903 64488B04 		movq	%fs:40, %rax
 1614      25280000 
 1614      00
 1615 090c 488945E8 		movq	%rax, -24(%rbp)
 1616 0910 31C0     		xorl	%eax, %eax
  52:TestUnitTest++.cpp ****     std::vector< float > a(4);
 1617              		.loc 4 52 0
 1618 0912 488D4598 		leaq	-104(%rbp), %rax
 1619 0916 4889C7   		movq	%rax, %rdi
 1620 0919 E8000000 		call	_ZNSaIfEC1Ev
 1620      00
 1621 091e 660FEFC0 		pxor	%xmm0, %xmm0
 1622 0922 F30F1145 		movss	%xmm0, -64(%rbp)
 1622      C0
 1623 0927 488D4D98 		leaq	-104(%rbp), %rcx
 1624 092b 488D55C0 		leaq	-64(%rbp), %rdx
 1625 092f 488D45A0 		leaq	-96(%rbp), %rax
 1626 0933 BE040000 		movl	$4, %esi
 1626      00
 1627 0938 4889C7   		movq	%rax, %rdi
 1628              	.LEHB40:
 1629 093b E8000000 		call	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
 1629      00
 1630              	.LEHE40:
 1631              		.loc 4 52 0 is_stmt 0 discriminator 2
 1632 0940 488D4598 		leaq	-104(%rbp), %rax
 1633 0944 4889C7   		movq	%rax, %rdi
 1634 0947 E8000000 		call	_ZNSaIfED1Ev
 1634      00
 1635              	.LBB13:
  53:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1636              		.loc 4 53 0 is_stmt 1 discriminator 2
 1637 094c C7459C00 		movl	$0, -100(%rbp)
 1637      000000
 1638              	.L85:
 1639              		.loc 4 53 0 is_stmt 0 discriminator 3
 1640 0953 837D9C03 		cmpl	$3, -100(%rbp)
 1641 0957 7F28     		jg	.L84
  54:TestUnitTest++.cpp ****         a[i] = (float)i;
 1642              		.loc 4 54 0 is_stmt 1 discriminator 2
 1643 0959 8B459C   		movl	-100(%rbp), %eax
 1644 095c 4863D0   		movslq	%eax, %rdx
 1645 095f 488D45A0 		leaq	-96(%rbp), %rax
 1646 0963 4889D6   		movq	%rdx, %rsi
 1647 0966 4889C7   		movq	%rax, %rdi
 1648 0969 E8000000 		call	_ZNSt6vectorIfSaIfEEixEm
 1648      00
 1649 096e 660FEFC0 		pxor	%xmm0, %xmm0
 1650 0972 F30F2A45 		cvtsi2ss	-100(%rbp), %xmm0
 1650      9C
 1651 0977 F30F1100 		movss	%xmm0, (%rax)
  53:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1652              		.loc 4 53 0 discriminator 2
 1653 097b 83459C01 		addl	$1, -100(%rbp)
 1654 097f EBD2     		jmp	.L85
 1655              	.L84:
 1656              	.LEHB41:
 1657              	.LBE13:
  55:TestUnitTest++.cpp **** 
  56:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a, a, (int)a.size(), 0.0001f);
 1658              		.loc 4 56 0
 1659 0981 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1659      00
 1660 0986 488B08   		movq	(%rax), %rcx
 1661 0989 488D45C0 		leaq	-64(%rbp), %rax
 1662 098d BA380000 		movl	$56, %edx
 1662      00
 1663 0992 4889CE   		movq	%rcx, %rsi
 1664 0995 4889C7   		movq	%rax, %rdi
 1665 0998 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1665      00
 1666              	.LEHE41:
 1667              		.loc 4 56 0 is_stmt 0 discriminator 2
 1668 099d F30F1005 		movss	.LC28(%rip), %xmm0
 1668      00000000 
 1669 09a5 F30F1145 		movss	%xmm0, -104(%rbp)
 1669      98
 1670 09aa 488D45A0 		leaq	-96(%rbp), %rax
 1671 09ae 4889C7   		movq	%rax, %rdi
 1672 09b1 E8000000 		call	_ZNKSt6vectorIfSaIfEE4sizeEv
 1672      00
 1673 09b6 89C3     		movl	%eax, %ebx
 1674              	.LEHB42:
 1675 09b8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1675      00
 1676 09bd 488B00   		movq	(%rax), %rax
 1677 09c0 488D7DC0 		leaq	-64(%rbp), %rdi
 1678 09c4 488D4D98 		leaq	-104(%rbp), %rcx
 1679 09c8 488D55A0 		leaq	-96(%rbp), %rdx
 1680 09cc 488D75A0 		leaq	-96(%rbp), %rsi
 1681 09d0 4989F9   		movq	%rdi, %r9
 1682 09d3 4989C8   		movq	%rcx, %r8
 1683 09d6 89D9     		movl	%ebx, %ecx
 1684 09d8 4889C7   		movq	%rax, %rdi
 1685 09db E8000000 		call	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_1
 1685      00
 1686              	.LEHE42:
 1687              	.L89:
  52:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1688              		.loc 4 52 0 is_stmt 1
 1689 09e0 488D45A0 		leaq	-96(%rbp), %rax
 1690 09e4 4889C7   		movq	%rax, %rdi
 1691              	.LEHB43:
 1692 09e7 E8000000 		call	_ZNSt6vectorIfSaIfEED1Ev
 1692      00
  57:TestUnitTest++.cpp **** }
 1693              		.loc 4 57 0
 1694 09ec 90       		nop
 1695 09ed 488B45E8 		movq	-24(%rbp), %rax
 1696 09f1 64483304 		xorq	%fs:40, %rax
 1696      25280000 
 1696      00
 1697 09fa 0F849400 		je	.L92
 1697      0000
 1698 0a00 E98A0000 		jmp	.L98
 1698      00
 1699              	.L93:
 1700 0a05 4889C3   		movq	%rax, %rbx
 1701 0a08 488D4598 		leaq	-104(%rbp), %rax
 1702 0a0c 4889C7   		movq	%rax, %rdi
 1703 0a0f E8000000 		call	_ZNSaIfED1Ev
 1703      00
 1704 0a14 4889D8   		movq	%rbx, %rax
 1705 0a17 4889C7   		movq	%rax, %rdi
 1706 0a1a E8000000 		call	_Unwind_Resume
 1706      00
 1707              	.LEHE43:
 1708              	.L95:
 1709 0a1f EB00     		jmp	.L88
 1710              	.L94:
 1711              	.L88:
  56:TestUnitTest++.cpp **** }
 1712              		.loc 4 56 0
 1713 0a21 4889C7   		movq	%rax, %rdi
 1714 0a24 E8000000 		call	__cxa_begin_catch
 1714      00
 1715              	.LEHB44:
 1716 0a29 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1716      00
 1717 0a2e 488B08   		movq	(%rax), %rcx
 1718 0a31 488D45C0 		leaq	-64(%rbp), %rax
 1719 0a35 BA380000 		movl	$56, %edx
 1719      00
 1720 0a3a 4889CE   		movq	%rcx, %rsi
 1721 0a3d 4889C7   		movq	%rax, %rdi
 1722 0a40 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1722      00
  56:TestUnitTest++.cpp **** }
 1723              		.loc 4 56 0 is_stmt 0 discriminator 10
 1724 0a45 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1724      00
 1725 0a4a 488B00   		movq	(%rax), %rax
 1726 0a4d 488D4DC0 		leaq	-64(%rbp), %rcx
 1727 0a51 BA000000 		movl	$.LC29, %edx
 1727      00
 1728 0a56 4889CE   		movq	%rcx, %rsi
 1729 0a59 4889C7   		movq	%rax, %rdi
 1730 0a5c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1730      00
 1731              	.LEHE44:
 1732              	.LEHB45:
  56:TestUnitTest++.cpp **** }
 1733              		.loc 4 56 0 discriminator 14
 1734 0a61 E8000000 		call	__cxa_end_catch
 1734      00
 1735              	.LEHE45:
  56:TestUnitTest++.cpp **** }
 1736              		.loc 4 56 0
 1737 0a66 E975FFFF 		jmp	.L89
 1737      FF
 1738              	.L97:
 1739 0a6b 4889C3   		movq	%rax, %rbx
 1740 0a6e E8000000 		call	__cxa_end_catch
 1740      00
 1741 0a73 EB03     		jmp	.L91
 1742              	.L96:
 1743 0a75 4889C3   		movq	%rax, %rbx
 1744              	.L91:
  52:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1745              		.loc 4 52 0 is_stmt 1
 1746 0a78 488D45A0 		leaq	-96(%rbp), %rax
 1747 0a7c 4889C7   		movq	%rax, %rdi
 1748 0a7f E8000000 		call	_ZNSt6vectorIfSaIfEED1Ev
 1748      00
 1749 0a84 4889D8   		movq	%rbx, %rax
 1750 0a87 4889C7   		movq	%rax, %rdi
 1751              	.LEHB46:
 1752 0a8a E8000000 		call	_Unwind_Resume
 1752      00
 1753              	.LEHE46:
 1754              	.L98:
 1755              		.loc 4 57 0
 1756 0a8f E8000000 		call	__stack_chk_fail
 1756      00
 1757              	.L92:
 1758 0a94 4883C478 		addq	$120, %rsp
 1759 0a98 5B       		popq	%rbx
 1760 0a99 5D       		popq	%rbp
 1761              		.cfi_def_cfa 7, 8
 1762 0a9a C3       		ret
 1763              		.cfi_endproc
 1764              	.LFE1367:
 1765              		.section	.gcc_except_table
 1766              		.align 4
 1767              	.LLSDA1367:
 1768 0108 FF       		.byte	0xff
 1769 0109 03       		.byte	0x3
 1770 010a 31       		.uleb128 .LLSDATT1367-.LLSDATTD1367
 1771              	.LLSDATTD1367:
 1772 010b 01       		.byte	0x1
 1773 010c 27       		.uleb128 .LLSDACSE1367-.LLSDACSB1367
 1774              	.LLSDACSB1367:
 1775 010d 45       		.uleb128 .LEHB40-.LFB1367
 1776 010e 05       		.uleb128 .LEHE40-.LEHB40
 1777 010f 8F02     		.uleb128 .L93-.LFB1367
 1778 0111 00       		.uleb128 0
 1779 0112 8B01     		.uleb128 .LEHB41-.LFB1367
 1780 0114 1C       		.uleb128 .LEHE41-.LEHB41
 1781 0115 AB02     		.uleb128 .L94-.LFB1367
 1782 0117 01       		.uleb128 0x1
 1783 0118 C201     		.uleb128 .LEHB42-.LFB1367
 1784 011a 28       		.uleb128 .LEHE42-.LEHB42
 1785 011b A902     		.uleb128 .L95-.LFB1367
 1786 011d 01       		.uleb128 0x1
 1787 011e F101     		.uleb128 .LEHB43-.LFB1367
 1788 0120 38       		.uleb128 .LEHE43-.LEHB43
 1789 0121 00       		.uleb128 0
 1790 0122 00       		.uleb128 0
 1791 0123 B302     		.uleb128 .LEHB44-.LFB1367
 1792 0125 38       		.uleb128 .LEHE44-.LEHB44
 1793 0126 F502     		.uleb128 .L97-.LFB1367
 1794 0128 00       		.uleb128 0
 1795 0129 EB02     		.uleb128 .LEHB45-.LFB1367
 1796 012b 05       		.uleb128 .LEHE45-.LEHB45
 1797 012c FF02     		.uleb128 .L96-.LFB1367
 1798 012e 00       		.uleb128 0
 1799 012f 9403     		.uleb128 .LEHB46-.LFB1367
 1800 0131 05       		.uleb128 .LEHE46-.LEHB46
 1801 0132 00       		.uleb128 0
 1802 0133 00       		.uleb128 0
 1803              	.LLSDACSE1367:
 1804 0134 01       		.byte	0x1
 1805 0135 00       		.byte	0
 1806 0136 0000     		.align 4
 1807 0138 00000000 		.long	0
 1808              	
 1809              	.LLSDATT1367:
 1810              		.text
 1812              		.section	.rodata
 1813 026f 00       		.align 8
 1814              	.LC30:
 1815 0270 43686563 		.string	"CheckThrowMacroSucceedsOnCorrectException"
 1815      6B546872 
 1815      6F774D61 
 1815      63726F53 
 1815      75636365 
 1816              		.text
 1817 0a9b 90       		.align 2
 1819              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC2Ev:
 1820              	.LFB1369:
  58:TestUnitTest++.cpp **** 
  59:TestUnitTest++.cpp **** TEST(CheckThrowMacroSucceedsOnCorrectException)
 1821              		.loc 4 59 0
 1822              		.cfi_startproc
 1823 0a9c 55       		pushq	%rbp
 1824              		.cfi_def_cfa_offset 16
 1825              		.cfi_offset 6, -16
 1826 0a9d 4889E5   		movq	%rsp, %rbp
 1827              		.cfi_def_cfa_register 6
 1828 0aa0 4883EC10 		subq	$16, %rsp
 1829 0aa4 48897DF8 		movq	%rdi, -8(%rbp)
 1830              	.LBB14:
 1831              		.loc 4 59 0
 1832 0aa8 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1832      00
 1833 0aad 4889C2   		movq	%rax, %rdx
 1834 0ab0 488B45F8 		movq	-8(%rbp), %rax
 1835 0ab4 41B83B00 		movl	$59, %r8d
 1835      0000
 1836 0aba B9000000 		movl	$.LC1, %ecx
 1836      00
 1837 0abf BE000000 		movl	$.LC30, %esi
 1837      00
 1838 0ac4 4889C7   		movq	%rax, %rdi
 1839 0ac7 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1839      00
 1840 0acc BA000000 		movl	$_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE+16, %edx
 1840      00
 1841 0ad1 488B45F8 		movq	-8(%rbp), %rax
 1842 0ad5 488910   		movq	%rdx, (%rax)
 1843              	.LBE14:
 1844 0ad8 90       		nop
 1845 0ad9 C9       		leave
 1846              		.cfi_def_cfa 7, 8
 1847 0ada C3       		ret
 1848              		.cfi_endproc
 1849              	.LFE1369:
 1851              		.set	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC1Ev,_ZN12_GLOBAL__N_145TestC
 1852              		.local	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE
 1853              		.comm	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE,56,32
 1854              		.local	_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE
 1855              		.comm	_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE,1,1
 1856              		.section	.rodata
 1857 029a 00000000 		.align 8
 1857      0000
 1858              	.LC31:
 1859 02a0 45787065 		.string	"Expected exception: \"TestException\" not thrown"
 1859      63746564 
 1859      20657863 
 1859      65707469 
 1859      6F6E3A20 
 1860              		.text
 1861 0adb 90       		.align 2
 1863              	_ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv:
 1864              	.LFB1371:
  60:TestUnitTest++.cpp **** {
 1865              		.loc 4 60 0
 1866              		.cfi_startproc
 1867              		.cfi_personality 0x3,__gxx_personality_v0
 1868              		.cfi_lsda 0x3,.LLSDA1371
 1869 0adc 55       		pushq	%rbp
 1870              		.cfi_def_cfa_offset 16
 1871              		.cfi_offset 6, -16
 1872 0add 4889E5   		movq	%rsp, %rbp
 1873              		.cfi_def_cfa_register 6
 1874 0ae0 4883EC50 		subq	$80, %rsp
 1875 0ae4 48897DB8 		movq	%rdi, -72(%rbp)
 1876              		.loc 4 60 0
 1877 0ae8 64488B04 		movq	%fs:40, %rax
 1877      25280000 
 1877      00
 1878 0af1 488945F8 		movq	%rax, -8(%rbp)
 1879 0af5 31C0     		xorl	%eax, %eax
 1880              	.LBB15:
  61:TestUnitTest++.cpp ****     struct TestException {};
  62:TestUnitTest++.cpp ****     CHECK_THROW(throw TestException(), TestException);
 1881              		.loc 4 62 0
 1882 0af7 C645C700 		movb	$0, -57(%rbp)
 1883 0afb BF010000 		movl	$1, %edi
 1883      00
 1884 0b00 E8000000 		call	__cxa_allocate_exception
 1884      00
 1885 0b05 BA000000 		movl	$0, %edx
 1885      00
 1886 0b0a BE000000 		movl	$_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 1886      00
 1887 0b0f 4889C7   		movq	%rax, %rdi
 1888              	.LEHB47:
 1889 0b12 E8000000 		call	__cxa_throw
 1889      00
 1890              	.LEHE47:
 1891              	.L105:
 1892              		.loc 4 62 0 is_stmt 0 discriminator 6
 1893 0b17 0FB645C7 		movzbl	-57(%rbp), %eax
 1894 0b1b 83F001   		xorl	$1, %eax
 1895 0b1e 84C0     		testb	%al, %al
 1896 0b20 7466     		je	.L109
 1897              	.LEHB48:
 1898              		.loc 4 62 0 discriminator 1
 1899 0b22 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1899      00
 1900 0b27 488B08   		movq	(%rax), %rcx
 1901 0b2a 488D45D0 		leaq	-48(%rbp), %rax
 1902 0b2e BA3E0000 		movl	$62, %edx
 1902      00
 1903 0b33 4889CE   		movq	%rcx, %rsi
 1904 0b36 4889C7   		movq	%rax, %rdi
 1905 0b39 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1905      00
 1906 0b3e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1906      00
 1907 0b43 488B00   		movq	(%rax), %rax
 1908 0b46 488D4DD0 		leaq	-48(%rbp), %rcx
 1909 0b4a BA000000 		movl	$.LC31, %edx
 1909      00
 1910 0b4f 4889CE   		movq	%rcx, %rsi
 1911 0b52 4889C7   		movq	%rax, %rdi
 1912 0b55 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1912      00
 1913              	.LBE15:
  63:TestUnitTest++.cpp **** }
 1914              		.loc 4 63 0 is_stmt 1 discriminator 1
 1915 0b5a EB2C     		jmp	.L109
 1916              	.L107:
 1917 0b5c 4883FA01 		cmpq	$1, %rdx
 1918 0b60 7517     		jne	.L108
 1919              	.LBB17:
 1920              	.LBB16:
  62:TestUnitTest++.cpp **** }
 1921              		.loc 4 62 0
 1922 0b62 4889C7   		movq	%rax, %rdi
 1923 0b65 E8000000 		call	__cxa_begin_catch
 1923      00
 1924 0b6a 488945C8 		movq	%rax, -56(%rbp)
 1925 0b6e C645C701 		movb	$1, -57(%rbp)
 1926 0b72 E8000000 		call	__cxa_end_catch
 1926      00
 1927 0b77 EB9E     		jmp	.L105
 1928              	.L108:
 1929              	.LBE16:
  62:TestUnitTest++.cpp **** }
 1930              		.loc 4 62 0 is_stmt 0 discriminator 7
 1931 0b79 4889C7   		movq	%rax, %rdi
 1932 0b7c E8000000 		call	__cxa_begin_catch
 1932      00
 1933 0b81 E8000000 		call	__cxa_end_catch
 1933      00
 1934              	.LEHE48:
 1935 0b86 EB8F     		jmp	.L105
 1936              	.L109:
 1937              	.LBE17:
 1938              		.loc 4 63 0 is_stmt 1
 1939 0b88 90       		nop
 1940 0b89 488B45F8 		movq	-8(%rbp), %rax
 1941 0b8d 64483304 		xorq	%fs:40, %rax
 1941      25280000 
 1941      00
 1942 0b96 7405     		je	.L106
 1943 0b98 E8000000 		call	__stack_chk_fail
 1943      00
 1944              	.L106:
 1945 0b9d C9       		leave
 1946              		.cfi_def_cfa 7, 8
 1947 0b9e C3       		ret
 1948              		.cfi_endproc
 1949              	.LFE1371:
 1950              		.section	.gcc_except_table
 1951              		.align 4
 1952              	.LLSDA1371:
 1953 013c FF       		.byte	0xff
 1954 013d 03       		.byte	0x3
 1955 013e 19       		.uleb128 .LLSDATT1371-.LLSDATTD1371
 1956              	.LLSDATTD1371:
 1957 013f 01       		.byte	0x1
 1958 0140 09       		.uleb128 .LLSDACSE1371-.LLSDACSB1371
 1959              	.LLSDACSB1371:
 1960 0141 36       		.uleb128 .LEHB47-.LFB1371
 1961 0142 05       		.uleb128 .LEHE47-.LEHB47
 1962 0143 8001     		.uleb128 .L107-.LFB1371
 1963 0145 03       		.uleb128 0x3
 1964 0146 46       		.uleb128 .LEHB48-.LFB1371
 1965 0147 64       		.uleb128 .LEHE48-.LEHB48
 1966 0148 00       		.uleb128 0
 1967 0149 00       		.uleb128 0
 1968              	.LLSDACSE1371:
 1969 014a 02       		.byte	0x2
 1970 014b 00       		.byte	0
 1971 014c 01       		.byte	0x1
 1972 014d 7D       		.byte	0x7d
 1973 014e 0000     		.align 4
 1974 0150 00000000 		.long	0
 1975              	
 1976 0154 00000000 		.long	_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 1977              	.LLSDATT1371:
 1978              		.text
 1980              		.section	.rodata
 1981              	.LC32:
 1982 02cf 43686563 		.string	"CheckAssertSucceeds"
 1982      6B417373 
 1982      65727453 
 1982      75636365 
 1982      65647300 
 1983              		.text
 1984 0b9f 90       		.align 2
 1986              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev:
 1987              	.LFB1373:
  64:TestUnitTest++.cpp **** 
  65:TestUnitTest++.cpp **** TEST(CheckAssertSucceeds)
 1988              		.loc 4 65 0
 1989              		.cfi_startproc
 1990 0ba0 55       		pushq	%rbp
 1991              		.cfi_def_cfa_offset 16
 1992              		.cfi_offset 6, -16
 1993 0ba1 4889E5   		movq	%rsp, %rbp
 1994              		.cfi_def_cfa_register 6
 1995 0ba4 4883EC10 		subq	$16, %rsp
 1996 0ba8 48897DF8 		movq	%rdi, -8(%rbp)
 1997              	.LBB18:
 1998              		.loc 4 65 0
 1999 0bac E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1999      00
 2000 0bb1 4889C2   		movq	%rax, %rdx
 2001 0bb4 488B45F8 		movq	-8(%rbp), %rax
 2002 0bb8 41B84100 		movl	$65, %r8d
 2002      0000
 2003 0bbe B9000000 		movl	$.LC1, %ecx
 2003      00
 2004 0bc3 BE000000 		movl	$.LC32, %esi
 2004      00
 2005 0bc8 4889C7   		movq	%rax, %rdi
 2006 0bcb E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2006      00
 2007 0bd0 BA000000 		movl	$_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE+16, %edx
 2007      00
 2008 0bd5 488B45F8 		movq	-8(%rbp), %rax
 2009 0bd9 488910   		movq	%rdx, (%rax)
 2010              	.LBE18:
 2011 0bdc 90       		nop
 2012 0bdd C9       		leave
 2013              		.cfi_def_cfa 7, 8
 2014 0bde C3       		ret
 2015              		.cfi_endproc
 2016              	.LFE1373:
 2018              		.set	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC1Ev,_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev
 2019              		.local	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE
 2020              		.comm	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE,56,32
 2021              		.local	_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE
 2022              		.comm	_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE,1,1
 2023              		.section	.rodata
 2024              	.LC33:
 2025 02e3 66696C65 		.string	"file"
 2025      00
 2026              	.LC34:
 2027 02e8 64657363 		.string	"desc"
 2027      00
 2028 02ed 000000   		.align 8
 2029              	.LC35:
 2030 02f0 45787065 		.string	"Expected exception: \"UnitTest::AssertException\" not thrown"
 2030      63746564 
 2030      20657863 
 2030      65707469 
 2030      6F6E3A20 
 2031              		.text
 2032 0bdf 90       		.align 2
 2034              	_ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv:
 2035              	.LFB1375:
  66:TestUnitTest++.cpp **** {
 2036              		.loc 4 66 0
 2037              		.cfi_startproc
 2038              		.cfi_personality 0x3,__gxx_personality_v0
 2039              		.cfi_lsda 0x3,.LLSDA1375
 2040 0be0 55       		pushq	%rbp
 2041              		.cfi_def_cfa_offset 16
 2042              		.cfi_offset 6, -16
 2043 0be1 4889E5   		movq	%rsp, %rbp
 2044              		.cfi_def_cfa_register 6
 2045 0be4 4883EC50 		subq	$80, %rsp
 2046 0be8 48897DB8 		movq	%rdi, -72(%rbp)
 2047              		.loc 4 66 0
 2048 0bec 64488B04 		movq	%fs:40, %rax
 2048      25280000 
 2048      00
 2049 0bf5 488945F8 		movq	%rax, -8(%rbp)
 2050 0bf9 31C0     		xorl	%eax, %eax
 2051              	.LBB19:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 2052              		.loc 4 67 0
 2053 0bfb C645C700 		movb	$0, -57(%rbp)
 2054 0bff BA000000 		movl	$0, %edx
 2054      00
 2055 0c04 BE000000 		movl	$.LC33, %esi
 2055      00
 2056 0c09 BF000000 		movl	$.LC34, %edi
 2056      00
 2057              	.LEHB49:
 2058 0c0e E8000000 		call	_ZN8UnitTest12ReportAssertEPKcS1_i
 2058      00
 2059              	.LEHE49:
 2060              	.L116:
 2061              		.loc 4 67 0 is_stmt 0 discriminator 1
 2062 0c13 0FB645C7 		movzbl	-57(%rbp), %eax
 2063 0c17 83F001   		xorl	$1, %eax
 2064 0c1a 84C0     		testb	%al, %al
 2065 0c1c 7466     		je	.L120
 2066              	.LEHB50:
 2067              		.loc 4 67 0 discriminator 2
 2068 0c1e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2068      00
 2069 0c23 488B08   		movq	(%rax), %rcx
 2070 0c26 488D45D0 		leaq	-48(%rbp), %rax
 2071 0c2a BA430000 		movl	$67, %edx
 2071      00
 2072 0c2f 4889CE   		movq	%rcx, %rsi
 2073 0c32 4889C7   		movq	%rax, %rdi
 2074 0c35 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2074      00
 2075 0c3a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2075      00
 2076 0c3f 488B00   		movq	(%rax), %rax
 2077 0c42 488D4DD0 		leaq	-48(%rbp), %rcx
 2078 0c46 BA000000 		movl	$.LC35, %edx
 2078      00
 2079 0c4b 4889CE   		movq	%rcx, %rsi
 2080 0c4e 4889C7   		movq	%rax, %rdi
 2081 0c51 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2081      00
 2082              	.LBE19:
  68:TestUnitTest++.cpp **** }
 2083              		.loc 4 68 0 is_stmt 1 discriminator 2
 2084 0c56 EB2C     		jmp	.L120
 2085              	.L118:
 2086 0c58 4883FA01 		cmpq	$1, %rdx
 2087 0c5c 7517     		jne	.L119
 2088              	.LBB21:
 2089              	.LBB20:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 2090              		.loc 4 67 0 discriminator 7
 2091 0c5e 4889C7   		movq	%rax, %rdi
 2092 0c61 E8000000 		call	__cxa_begin_catch
 2092      00
 2093 0c66 488945C8 		movq	%rax, -56(%rbp)
 2094 0c6a C645C701 		movb	$1, -57(%rbp)
 2095 0c6e E8000000 		call	__cxa_end_catch
 2095      00
 2096 0c73 EB9E     		jmp	.L116
 2097              	.L119:
 2098              	.LBE20:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 2099              		.loc 4 67 0 is_stmt 0 discriminator 8
 2100 0c75 4889C7   		movq	%rax, %rdi
 2101 0c78 E8000000 		call	__cxa_begin_catch
 2101      00
 2102 0c7d E8000000 		call	__cxa_end_catch
 2102      00
 2103              	.LEHE50:
 2104 0c82 EB8F     		jmp	.L116
 2105              	.L120:
 2106              	.LBE21:
 2107              		.loc 4 68 0 is_stmt 1
 2108 0c84 90       		nop
 2109 0c85 488B45F8 		movq	-8(%rbp), %rax
 2110 0c89 64483304 		xorq	%fs:40, %rax
 2110      25280000 
 2110      00
 2111 0c92 7405     		je	.L117
 2112 0c94 E8000000 		call	__stack_chk_fail
 2112      00
 2113              	.L117:
 2114 0c99 C9       		leave
 2115              		.cfi_def_cfa 7, 8
 2116 0c9a C3       		ret
 2117              		.cfi_endproc
 2118              	.LFE1375:
 2119              		.section	.gcc_except_table
 2120              		.align 4
 2121              	.LLSDA1375:
 2122 0158 FF       		.byte	0xff
 2123 0159 03       		.byte	0x3
 2124 015a 19       		.uleb128 .LLSDATT1375-.LLSDATTD1375
 2125              	.LLSDATTD1375:
 2126 015b 01       		.byte	0x1
 2127 015c 08       		.uleb128 .LLSDACSE1375-.LLSDACSB1375
 2128              	.LLSDACSB1375:
 2129 015d 2E       		.uleb128 .LEHB49-.LFB1375
 2130 015e 05       		.uleb128 .LEHE49-.LEHB49
 2131 015f 78       		.uleb128 .L118-.LFB1375
 2132 0160 03       		.uleb128 0x3
 2133 0161 3E       		.uleb128 .LEHB50-.LFB1375
 2134 0162 64       		.uleb128 .LEHE50-.LEHB50
 2135 0163 00       		.uleb128 0
 2136 0164 00       		.uleb128 0
 2137              	.LLSDACSE1375:
 2138 0165 02       		.byte	0x2
 2139 0166 00       		.byte	0
 2140 0167 01       		.byte	0x1
 2141 0168 7D       		.byte	0x7d
 2142 0169 000000   		.align 4
 2143 016c 00000000 		.long	0
 2144              	
 2145 0170 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2146              	.LLSDATT1375:
 2147              		.text
 2149              		.section	.rodata
 2150 032b 00000000 		.align 8
 2150      00
 2151              	.LC36:
 2152 0330 43686563 		.string	"CheckThrowMacroFailsOnMissingException"
 2152      6B546872 
 2152      6F774D61 
 2152      63726F46 
 2152      61696C73 
 2153              		.text
 2154 0c9b 90       		.align 2
 2156              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC2Ev:
 2157              	.LFB1377:
  69:TestUnitTest++.cpp **** 
  70:TestUnitTest++.cpp **** TEST(CheckThrowMacroFailsOnMissingException)
 2158              		.loc 4 70 0
 2159              		.cfi_startproc
 2160 0c9c 55       		pushq	%rbp
 2161              		.cfi_def_cfa_offset 16
 2162              		.cfi_offset 6, -16
 2163 0c9d 4889E5   		movq	%rsp, %rbp
 2164              		.cfi_def_cfa_register 6
 2165 0ca0 4883EC10 		subq	$16, %rsp
 2166 0ca4 48897DF8 		movq	%rdi, -8(%rbp)
 2167              	.LBB22:
 2168              		.loc 4 70 0
 2169 0ca8 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2169      00
 2170 0cad 4889C2   		movq	%rax, %rdx
 2171 0cb0 488B45F8 		movq	-8(%rbp), %rax
 2172 0cb4 41B84600 		movl	$70, %r8d
 2172      0000
 2173 0cba B9000000 		movl	$.LC1, %ecx
 2173      00
 2174 0cbf BE000000 		movl	$.LC36, %esi
 2174      00
 2175 0cc4 4889C7   		movq	%rax, %rdi
 2176 0cc7 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2176      00
 2177 0ccc BA000000 		movl	$_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE+16, %edx
 2177      00
 2178 0cd1 488B45F8 		movq	-8(%rbp), %rax
 2179 0cd5 488910   		movq	%rdx, (%rax)
 2180              	.LBE22:
 2181 0cd8 90       		nop
 2182 0cd9 C9       		leave
 2183              		.cfi_def_cfa 7, 8
 2184 0cda C3       		ret
 2185              		.cfi_endproc
 2186              	.LFE1377:
 2188              		.set	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC1Ev,_ZN12_GLOBAL__N_142TestChec
 2189              		.local	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE
 2190              		.comm	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE,56,32
 2191              		.local	_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE
 2192              		.comm	_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE,1,1
 2193              		.section	.rodata
 2194              	.LC37:
 2195 0357 00       		.string	""
 2196              	.LC38:
 2197 0358 6E6F7468 		.string	"nothrow"
 2197      726F7700 
 2198              		.text
 2199 0cdb 90       		.align 2
 2201              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC2Ev:
 2202              	.LFB1381:
  71:TestUnitTest++.cpp **** {
  72:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
  73:TestUnitTest++.cpp ****     {
  74:TestUnitTest++.cpp ****     public:
  75:TestUnitTest++.cpp ****         NoThrowTest() : Test("nothrow") {}
 2203              		.loc 4 75 0
 2204              		.cfi_startproc
 2205 0cdc 55       		pushq	%rbp
 2206              		.cfi_def_cfa_offset 16
 2207              		.cfi_offset 6, -16
 2208 0cdd 4889E5   		movq	%rsp, %rbp
 2209              		.cfi_def_cfa_register 6
 2210 0ce0 4883EC10 		subq	$16, %rsp
 2211 0ce4 48897DF8 		movq	%rdi, -8(%rbp)
 2212              	.LBB23:
 2213              		.loc 4 75 0
 2214 0ce8 488B45F8 		movq	-8(%rbp), %rax
 2215 0cec 41B80000 		movl	$0, %r8d
 2215      0000
 2216 0cf2 B9000000 		movl	$.LC37, %ecx
 2216      00
 2217 0cf7 BA000000 		movl	$.LC0, %edx
 2217      00
 2218 0cfc BE000000 		movl	$.LC38, %esi
 2218      00
 2219 0d01 4889C7   		movq	%rax, %rdi
 2220 0d04 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2220      00
 2221 0d09 BA000000 		movl	$_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest+16
 2221      00
 2222 0d0e 488B45F8 		movq	-8(%rbp), %rax
 2223 0d12 488910   		movq	%rdx, (%rax)
 2224              	.LBE23:
 2225 0d15 90       		nop
 2226 0d16 C9       		leave
 2227              		.cfi_def_cfa 7, 8
 2228 0d17 C3       		ret
 2229              		.cfi_endproc
 2230              	.LFE1381:
 2232              		.set	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC1Ev,
 2233              		.align 2
 2235              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9DontThrow
 2236              	.LFB1383:
  76:TestUnitTest++.cpp ****         void DontThrow() const
 2237              		.loc 4 76 0
 2238              		.cfi_startproc
 2239 0d18 55       		pushq	%rbp
 2240              		.cfi_def_cfa_offset 16
 2241              		.cfi_offset 6, -16
 2242 0d19 4889E5   		movq	%rsp, %rbp
 2243              		.cfi_def_cfa_register 6
 2244 0d1c 48897DF8 		movq	%rdi, -8(%rbp)
  77:TestUnitTest++.cpp ****         {
  78:TestUnitTest++.cpp ****         }
 2245              		.loc 4 78 0
 2246 0d20 90       		nop
 2247 0d21 5D       		popq	%rbp
 2248              		.cfi_def_cfa 7, 8
 2249 0d22 C3       		ret
 2250              		.cfi_endproc
 2251              	.LFE1383:
 2253              		.section	.rodata
 2254              		.align 8
 2255              	.LC39:
 2256 0360 45787065 		.string	"Expected exception: \"int\" not thrown"
 2256      63746564 
 2256      20657863 
 2256      65707469 
 2256      6F6E3A20 
 2257              		.text
 2258 0d23 90       		.align 2
 2260              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7RunImplEv
 2261              	.LFB1384:
  79:TestUnitTest++.cpp **** 
  80:TestUnitTest++.cpp ****         virtual void RunImpl() const
 2262              		.loc 4 80 0
 2263              		.cfi_startproc
 2264 0d24 55       		pushq	%rbp
 2265              		.cfi_def_cfa_offset 16
 2266              		.cfi_offset 6, -16
 2267 0d25 4889E5   		movq	%rsp, %rbp
 2268              		.cfi_def_cfa_register 6
 2269 0d28 4883EC50 		subq	$80, %rsp
 2270 0d2c 48897DB8 		movq	%rdi, -72(%rbp)
 2271              		.loc 4 80 0
 2272 0d30 64488B04 		movq	%fs:40, %rax
 2272      25280000 
 2272      00
 2273 0d39 488945F8 		movq	%rax, -8(%rbp)
 2274 0d3d 31C0     		xorl	%eax, %eax
 2275              	.LBB24:
  81:TestUnitTest++.cpp ****         {
  82:TestUnitTest++.cpp ****             CHECK_THROW(DontThrow(), int);
 2276              		.loc 4 82 0
 2277 0d3f C645CF00 		movb	$0, -49(%rbp)
 2278 0d43 488B45B8 		movq	-72(%rbp), %rax
 2279 0d47 4889C7   		movq	%rax, %rdi
 2280 0d4a E8C9FFFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9Don
 2280      FF
 2281 0d4f 0FB645CF 		movzbl	-49(%rbp), %eax
 2282 0d53 83F001   		xorl	$1, %eax
 2283 0d56 84C0     		testb	%al, %al
 2284 0d58 7438     		je	.L127
 2285              		.loc 4 82 0 is_stmt 0 discriminator 1
 2286 0d5a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2286      00
 2287 0d5f 488B08   		movq	(%rax), %rcx
 2288 0d62 488D45D0 		leaq	-48(%rbp), %rax
 2289 0d66 BA520000 		movl	$82, %edx
 2289      00
 2290 0d6b 4889CE   		movq	%rcx, %rsi
 2291 0d6e 4889C7   		movq	%rax, %rdi
 2292 0d71 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2292      00
 2293 0d76 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2293      00
 2294 0d7b 488B00   		movq	(%rax), %rax
 2295 0d7e 488D4DD0 		leaq	-48(%rbp), %rcx
 2296 0d82 BA000000 		movl	$.LC39, %edx
 2296      00
 2297 0d87 4889CE   		movq	%rcx, %rsi
 2298 0d8a 4889C7   		movq	%rax, %rdi
 2299 0d8d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2299      00
 2300              	.L127:
 2301              	.LBE24:
  83:TestUnitTest++.cpp ****         }
 2302              		.loc 4 83 0 is_stmt 1
 2303 0d92 90       		nop
 2304 0d93 488B45F8 		movq	-8(%rbp), %rax
 2305 0d97 64483304 		xorq	%fs:40, %rax
 2305      25280000 
 2305      00
 2306 0da0 7405     		je	.L126
 2307 0da2 E8000000 		call	__stack_chk_fail
 2307      00
 2308              	.L126:
 2309 0da7 C9       		leave
 2310              		.cfi_def_cfa 7, 8
 2311 0da8 C3       		ret
 2312              		.cfi_endproc
 2313              	.LFE1384:
 2315              		.section	.rodata
 2316 0385 000000   		.align 8
 2317              	.LC40:
 2318 0388 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, results.GetFailureCount())"
 2318      6E646C65 
 2318      64206578 
 2318      63657074 
 2318      696F6E20 
 2319              		.text
 2320 0da9 90       		.align 2
 2322              	_ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv:
 2323              	.LFB1379:
  71:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
 2324              		.loc 4 71 0
 2325              		.cfi_startproc
 2326              		.cfi_personality 0x3,__gxx_personality_v0
 2327              		.cfi_lsda 0x3,.LLSDA1379
 2328 0daa 55       		pushq	%rbp
 2329              		.cfi_def_cfa_offset 16
 2330              		.cfi_offset 6, -16
 2331 0dab 4889E5   		movq	%rsp, %rbp
 2332              		.cfi_def_cfa_register 6
 2333 0dae 53       		pushq	%rbx
 2334 0daf 4881EC98 		subq	$152, %rsp
 2334      000000
 2335              		.cfi_offset 3, -24
 2336 0db6 4889BD68 		movq	%rdi, -152(%rbp)
 2336      FFFFFF
  71:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
 2337              		.loc 4 71 0
 2338 0dbd 64488B04 		movq	%fs:40, %rax
 2338      25280000 
 2338      00
 2339 0dc6 488945E8 		movq	%rax, -24(%rbp)
 2340 0dca 31C0     		xorl	%eax, %eax
  84:TestUnitTest++.cpp ****     };
  85:TestUnitTest++.cpp **** 
  86:TestUnitTest++.cpp ****     UnitTest::TestResults results;
 2341              		.loc 4 86 0
 2342 0dcc 488D4590 		leaq	-112(%rbp), %rax
 2343 0dd0 BE000000 		movl	$0, %esi
 2343      00
 2344 0dd5 4889C7   		movq	%rax, %rdi
 2345              	.LEHB51:
 2346 0dd8 E8000000 		call	_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE
 2346      00
 2347              	.LBB25:
  87:TestUnitTest++.cpp **** 	{
  88:TestUnitTest++.cpp **** 		ScopedCurrentTest scopedResults(results);
 2348              		.loc 4 88 0
 2349 0ddd 488D4D90 		leaq	-112(%rbp), %rcx
 2350 0de1 488D4580 		leaq	-128(%rbp), %rax
 2351 0de5 BA000000 		movl	$0, %edx
 2351      00
 2352 0dea 4889CE   		movq	%rcx, %rsi
 2353 0ded 4889C7   		movq	%rax, %rdi
 2354 0df0 E8000000 		call	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 2354      00
 2355              	.LEHE51:
  89:TestUnitTest++.cpp **** 
  90:TestUnitTest++.cpp **** 		NoThrowTest test;
 2356              		.loc 4 90 0
 2357 0df5 488D45B0 		leaq	-80(%rbp), %rax
 2358 0df9 4889C7   		movq	%rax, %rdi
 2359              	.LEHB52:
 2360 0dfc E8DBFEFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC1Ev
 2360      FF
 2361              	.LEHE52:
  91:TestUnitTest++.cpp **** 		test.Run();
 2362              		.loc 4 91 0
 2363 0e01 488D45B0 		leaq	-80(%rbp), %rax
 2364 0e05 4889C7   		movq	%rax, %rdi
 2365              	.LEHB53:
 2366 0e08 E8000000 		call	_ZN8UnitTest4Test3RunEv
 2366      00
 2367              	.LEHE53:
  90:TestUnitTest++.cpp **** 		test.Run();
 2368              		.loc 4 90 0
 2369 0e0d 488D45B0 		leaq	-80(%rbp), %rax
 2370 0e11 4889C7   		movq	%rax, %rdi
 2371              	.LEHB54:
 2372 0e14 E8DF1500 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 2372      00
 2373              	.LEHE54:
  88:TestUnitTest++.cpp **** 
 2374              		.loc 4 88 0
 2375 0e19 488D4580 		leaq	-128(%rbp), %rax
 2376 0e1d 4889C7   		movq	%rax, %rdi
 2377              	.LEHB55:
 2378 0e20 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2378      00
 2379              	.LEHE55:
 2380              	.LEHB56:
 2381              	.LBE25:
  92:TestUnitTest++.cpp **** 	}
  93:TestUnitTest++.cpp **** 
  94:TestUnitTest++.cpp **** 	CHECK_EQUAL(1, results.GetFailureCount());
 2382              		.loc 4 94 0
 2383 0e25 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2383      00
 2384 0e2a 488B08   		movq	(%rax), %rcx
 2385 0e2d 488D45B0 		leaq	-80(%rbp), %rax
 2386 0e31 BA5E0000 		movl	$94, %edx
 2386      00
 2387 0e36 4889CE   		movq	%rcx, %rsi
 2388 0e39 4889C7   		movq	%rax, %rdi
 2389 0e3c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2389      00
 2390              		.loc 4 94 0 is_stmt 0 discriminator 2
 2391 0e41 488D4590 		leaq	-112(%rbp), %rax
 2392 0e45 4889C7   		movq	%rax, %rdi
 2393 0e48 E8000000 		call	_ZNK8UnitTest11TestResults15GetFailureCountEv
 2393      00
 2394              	.LEHE56:
 2395 0e4d 894580   		movl	%eax, -128(%rbp)
 2396 0e50 C7857CFF 		movl	$1, -132(%rbp)
 2396      FFFF0100 
 2396      0000
 2397              	.LEHB57:
 2398 0e5a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2398      00
 2399              		.loc 4 94 0 discriminator 4
 2400 0e5f 488B00   		movq	(%rax), %rax
 2401 0e62 488D4DB0 		leaq	-80(%rbp), %rcx
 2402 0e66 488D5580 		leaq	-128(%rbp), %rdx
 2403 0e6a 488DB57C 		leaq	-132(%rbp), %rsi
 2403      FFFFFF
 2404 0e71 4889C7   		movq	%rax, %rdi
 2405 0e74 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2405      00
 2406              	.LEHE57:
  95:TestUnitTest++.cpp **** }
 2407              		.loc 4 95 0 is_stmt 1
 2408 0e79 E9870000 		jmp	.L128
 2408      00
 2409              	.L137:
 2410 0e7e 4889C3   		movq	%rax, %rbx
 2411              	.LBB26:
  90:TestUnitTest++.cpp **** 		test.Run();
 2412              		.loc 4 90 0
 2413 0e81 488D45B0 		leaq	-80(%rbp), %rax
 2414 0e85 4889C7   		movq	%rax, %rdi
 2415 0e88 E86B1500 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 2415      00
 2416 0e8d EB03     		jmp	.L130
 2417              	.L136:
 2418 0e8f 4889C3   		movq	%rax, %rbx
 2419              	.L130:
  88:TestUnitTest++.cpp **** 
 2420              		.loc 4 88 0
 2421 0e92 488D4580 		leaq	-128(%rbp), %rax
 2422 0e96 4889C7   		movq	%rax, %rdi
 2423 0e99 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2423      00
 2424 0e9e 4889D8   		movq	%rbx, %rax
 2425 0ea1 4889C7   		movq	%rax, %rdi
 2426              	.LEHB58:
 2427 0ea4 E8000000 		call	_Unwind_Resume
 2427      00
 2428              	.LEHE58:
 2429              	.L139:
 2430 0ea9 EB00     		jmp	.L132
 2431              	.L138:
 2432              	.L132:
 2433              	.LBE26:
  94:TestUnitTest++.cpp **** }
 2434              		.loc 4 94 0
 2435 0eab 4889C7   		movq	%rax, %rdi
 2436 0eae E8000000 		call	__cxa_begin_catch
 2436      00
 2437              	.LEHB59:
 2438 0eb3 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2438      00
 2439 0eb8 488B08   		movq	(%rax), %rcx
 2440 0ebb 488D45B0 		leaq	-80(%rbp), %rax
 2441 0ebf BA5E0000 		movl	$94, %edx
 2441      00
 2442 0ec4 4889CE   		movq	%rcx, %rsi
 2443 0ec7 4889C7   		movq	%rax, %rdi
 2444 0eca E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2444      00
  94:TestUnitTest++.cpp **** }
 2445              		.loc 4 94 0 is_stmt 0 discriminator 12
 2446 0ecf E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2446      00
 2447 0ed4 488B00   		movq	(%rax), %rax
 2448 0ed7 488D4DB0 		leaq	-80(%rbp), %rcx
 2449 0edb BA000000 		movl	$.LC40, %edx
 2449      00
 2450 0ee0 4889CE   		movq	%rcx, %rsi
 2451 0ee3 4889C7   		movq	%rax, %rdi
 2452 0ee6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2452      00
 2453              	.LEHE59:
 2454              	.LEHB60:
  94:TestUnitTest++.cpp **** }
 2455              		.loc 4 94 0 discriminator 16
 2456 0eeb E8000000 		call	__cxa_end_catch
 2456      00
 2457              	.LEHE60:
 2458              		.loc 4 95 0 is_stmt 1 discriminator 16
 2459 0ef0 EB13     		jmp	.L128
 2460              	.L140:
 2461 0ef2 4889C3   		movq	%rax, %rbx
  94:TestUnitTest++.cpp **** }
 2462              		.loc 4 94 0
 2463 0ef5 E8000000 		call	__cxa_end_catch
 2463      00
 2464 0efa 4889D8   		movq	%rbx, %rax
 2465 0efd 4889C7   		movq	%rax, %rdi
 2466              	.LEHB61:
 2467 0f00 E8000000 		call	_Unwind_Resume
 2467      00
 2468              	.LEHE61:
 2469              	.L128:
 2470              		.loc 4 95 0
 2471 0f05 488B45E8 		movq	-24(%rbp), %rax
 2472 0f09 64483304 		xorq	%fs:40, %rax
 2472      25280000 
 2472      00
 2473 0f12 7405     		je	.L135
 2474 0f14 E8000000 		call	__stack_chk_fail
 2474      00
 2475              	.L135:
 2476 0f19 4881C498 		addq	$152, %rsp
 2476      000000
 2477 0f20 5B       		popq	%rbx
 2478 0f21 5D       		popq	%rbp
 2479              		.cfi_def_cfa 7, 8
 2480 0f22 C3       		ret
 2481              		.cfi_endproc
 2482              	.LFE1379:
 2483              		.section	.gcc_except_table
 2484              		.align 4
 2485              	.LLSDA1379:
 2486 0174 FF       		.byte	0xff
 2487 0175 03       		.byte	0x3
 2488 0176 41       		.uleb128 .LLSDATT1379-.LLSDATTD1379
 2489              	.LLSDATTD1379:
 2490 0177 01       		.byte	0x1
 2491 0178 37       		.uleb128 .LLSDACSE1379-.LLSDACSB1379
 2492              	.LLSDACSB1379:
 2493 0179 2E       		.uleb128 .LEHB51-.LFB1379
 2494 017a 1D       		.uleb128 .LEHE51-.LEHB51
 2495 017b 00       		.uleb128 0
 2496 017c 00       		.uleb128 0
 2497 017d 52       		.uleb128 .LEHB52-.LFB1379
 2498 017e 05       		.uleb128 .LEHE52-.LEHB52
 2499 017f E501     		.uleb128 .L136-.LFB1379
 2500 0181 00       		.uleb128 0
 2501 0182 5E       		.uleb128 .LEHB53-.LFB1379
 2502 0183 05       		.uleb128 .LEHE53-.LEHB53
 2503 0184 D401     		.uleb128 .L137-.LFB1379
 2504 0186 00       		.uleb128 0
 2505 0187 6A       		.uleb128 .LEHB54-.LFB1379
 2506 0188 05       		.uleb128 .LEHE54-.LEHB54
 2507 0189 E501     		.uleb128 .L136-.LFB1379
 2508 018b 00       		.uleb128 0
 2509 018c 76       		.uleb128 .LEHB55-.LFB1379
 2510 018d 05       		.uleb128 .LEHE55-.LEHB55
 2511 018e 00       		.uleb128 0
 2512 018f 00       		.uleb128 0
 2513 0190 7B       		.uleb128 .LEHB56-.LFB1379
 2514 0191 28       		.uleb128 .LEHE56-.LEHB56
 2515 0192 8102     		.uleb128 .L138-.LFB1379
 2516 0194 01       		.uleb128 0x1
 2517 0195 B001     		.uleb128 .LEHB57-.LFB1379
 2518 0197 1F       		.uleb128 .LEHE57-.LEHB57
 2519 0198 FF01     		.uleb128 .L139-.LFB1379
 2520 019a 03       		.uleb128 0x3
 2521 019b FA01     		.uleb128 .LEHB58-.LFB1379
 2522 019d 05       		.uleb128 .LEHE58-.LEHB58
 2523 019e 00       		.uleb128 0
 2524 019f 00       		.uleb128 0
 2525 01a0 8902     		.uleb128 .LEHB59-.LFB1379
 2526 01a2 38       		.uleb128 .LEHE59-.LEHB59
 2527 01a3 C802     		.uleb128 .L140-.LFB1379
 2528 01a5 00       		.uleb128 0
 2529 01a6 C102     		.uleb128 .LEHB60-.LFB1379
 2530 01a8 05       		.uleb128 .LEHE60-.LEHB60
 2531 01a9 00       		.uleb128 0
 2532 01aa 00       		.uleb128 0
 2533 01ab D602     		.uleb128 .LEHB61-.LFB1379
 2534 01ad 05       		.uleb128 .LEHE61-.LEHB61
 2535 01ae 00       		.uleb128 0
 2536 01af 00       		.uleb128 0
 2537              	.LLSDACSE1379:
 2538 01b0 01       		.byte	0x1
 2539 01b1 00       		.byte	0
 2540 01b2 00       		.byte	0
 2541 01b3 7D       		.byte	0x7d
 2542              		.align 4
 2543 01b4 00000000 		.long	0
 2544              	
 2545              	.LLSDATT1379:
 2546              		.text
 2548              		.section	.rodata
 2549 03c9 00000000 		.align 8
 2549      000000
 2550              	.LC41:
 2551 03d0 43686563 		.string	"CheckThrowMacroFailsOnWrongException"
 2551      6B546872 
 2551      6F774D61 
 2551      63726F46 
 2551      61696C73 
 2552              		.text
 2553 0f23 90       		.align 2
 2555              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC2Ev:
 2556              	.LFB1386:
  96:TestUnitTest++.cpp **** 
  97:TestUnitTest++.cpp **** TEST(CheckThrowMacroFailsOnWrongException)
 2557              		.loc 4 97 0
 2558              		.cfi_startproc
 2559 0f24 55       		pushq	%rbp
 2560              		.cfi_def_cfa_offset 16
 2561              		.cfi_offset 6, -16
 2562 0f25 4889E5   		movq	%rsp, %rbp
 2563              		.cfi_def_cfa_register 6
 2564 0f28 4883EC10 		subq	$16, %rsp
 2565 0f2c 48897DF8 		movq	%rdi, -8(%rbp)
 2566              	.LBB27:
 2567              		.loc 4 97 0
 2568 0f30 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2568      00
 2569 0f35 4889C2   		movq	%rax, %rdx
 2570 0f38 488B45F8 		movq	-8(%rbp), %rax
 2571 0f3c 41B86100 		movl	$97, %r8d
 2571      0000
 2572 0f42 B9000000 		movl	$.LC1, %ecx
 2572      00
 2573 0f47 BE000000 		movl	$.LC41, %esi
 2573      00
 2574 0f4c 4889C7   		movq	%rax, %rdi
 2575 0f4f E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2575      00
 2576 0f54 BA000000 		movl	$_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE+16, %edx
 2576      00
 2577 0f59 488B45F8 		movq	-8(%rbp), %rax
 2578 0f5d 488910   		movq	%rdx, (%rax)
 2579              	.LBE27:
 2580 0f60 90       		nop
 2581 0f61 C9       		leave
 2582              		.cfi_def_cfa 7, 8
 2583 0f62 C3       		ret
 2584              		.cfi_endproc
 2585              	.LFE1386:
 2587              		.set	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC1Ev,_ZN12_GLOBAL__N_140TestCheckT
 2588              		.local	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE
 2589              		.comm	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE,56,32
 2590              		.local	_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE
 2591              		.comm	_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE,1,1
 2592              		.section	.rodata
 2593              	.LC42:
 2594 03f5 77726F6E 		.string	"wrongthrow"
 2594      67746872 
 2594      6F7700
 2595              		.text
 2596 0f63 90       		.align 2
 2598              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC2Ev:
 2599              	.LFB1390:
  98:TestUnitTest++.cpp **** {
  99:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 100:TestUnitTest++.cpp ****     {
 101:TestUnitTest++.cpp ****     public:
 102:TestUnitTest++.cpp ****         WrongThrowTest() : Test("wrongthrow") {}
 2600              		.loc 4 102 0
 2601              		.cfi_startproc
 2602 0f64 55       		pushq	%rbp
 2603              		.cfi_def_cfa_offset 16
 2604              		.cfi_offset 6, -16
 2605 0f65 4889E5   		movq	%rsp, %rbp
 2606              		.cfi_def_cfa_register 6
 2607 0f68 4883EC10 		subq	$16, %rsp
 2608 0f6c 48897DF8 		movq	%rdi, -8(%rbp)
 2609              	.LBB28:
 2610              		.loc 4 102 0
 2611 0f70 488B45F8 		movq	-8(%rbp), %rax
 2612 0f74 41B80000 		movl	$0, %r8d
 2612      0000
 2613 0f7a B9000000 		movl	$.LC37, %ecx
 2613      00
 2614 0f7f BA000000 		movl	$.LC0, %edx
 2614      00
 2615 0f84 BE000000 		movl	$.LC42, %esi
 2615      00
 2616 0f89 4889C7   		movq	%rax, %rdi
 2617 0f8c E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2617      00
 2618 0f91 BA000000 		movl	$_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest+1
 2618      00
 2619 0f96 488B45F8 		movq	-8(%rbp), %rax
 2620 0f9a 488910   		movq	%rdx, (%rax)
 2621              	.LBE28:
 2622 0f9d 90       		nop
 2623 0f9e C9       		leave
 2624              		.cfi_def_cfa 7, 8
 2625 0f9f C3       		ret
 2626              		.cfi_endproc
 2627              	.LFE1390:
 2629              		.set	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC1Ev
 2630              		.section	.rodata
 2631              	.LC43:
 2632 0400 6F6F7073 		.string	"oops"
 2632      00
 2633              		.text
 2634              		.align 2
 2636              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7RunImplE
 2637              	.LFB1392:
 103:TestUnitTest++.cpp ****         virtual void RunImpl() const
 2638              		.loc 4 103 0
 2639              		.cfi_startproc
 2640              		.cfi_personality 0x3,__gxx_personality_v0
 2641              		.cfi_lsda 0x3,.LLSDA1392
 2642 0fa0 55       		pushq	%rbp
 2643              		.cfi_def_cfa_offset 16
 2644              		.cfi_offset 6, -16
 2645 0fa1 4889E5   		movq	%rsp, %rbp
 2646              		.cfi_def_cfa_register 6
 2647 0fa4 4883EC50 		subq	$80, %rsp
 2648 0fa8 48897DB8 		movq	%rdi, -72(%rbp)
 2649              		.loc 4 103 0
 2650 0fac 64488B04 		movq	%fs:40, %rax
 2650      25280000 
 2650      00
 2651 0fb5 488945F8 		movq	%rax, -8(%rbp)
 2652 0fb9 31C0     		xorl	%eax, %eax
 2653              	.LBB29:
 104:TestUnitTest++.cpp ****         {
 105:TestUnitTest++.cpp ****             CHECK_THROW(throw "oops", int);
 2654              		.loc 4 105 0
 2655 0fbb C645C700 		movb	$0, -57(%rbp)
 2656 0fbf BF080000 		movl	$8, %edi
 2656      00
 2657 0fc4 E8000000 		call	__cxa_allocate_exception
 2657      00
 2658 0fc9 48C70000 		movq	$.LC43, (%rax)
 2658      000000
 2659 0fd0 BA000000 		movl	$0, %edx
 2659      00
 2660 0fd5 BE000000 		movl	$_ZTIPKc, %esi
 2660      00
 2661 0fda 4889C7   		movq	%rax, %rdi
 2662              	.LEHB62:
 2663 0fdd E8000000 		call	__cxa_throw
 2663      00
 2664              	.LEHE62:
 2665              	.L148:
 2666              		.loc 4 105 0 is_stmt 0 discriminator 6
 2667 0fe2 0FB645C7 		movzbl	-57(%rbp), %eax
 2668 0fe6 83F001   		xorl	$1, %eax
 2669 0fe9 84C0     		testb	%al, %al
 2670 0feb 7466     		je	.L152
 2671              	.LEHB63:
 2672              		.loc 4 105 0 discriminator 1
 2673 0fed E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2673      00
 2674 0ff2 488B08   		movq	(%rax), %rcx
 2675 0ff5 488D45D0 		leaq	-48(%rbp), %rax
 2676 0ff9 BA690000 		movl	$105, %edx
 2676      00
 2677 0ffe 4889CE   		movq	%rcx, %rsi
 2678 1001 4889C7   		movq	%rax, %rdi
 2679 1004 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2679      00
 2680 1009 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2680      00
 2681 100e 488B00   		movq	(%rax), %rax
 2682 1011 488D4DD0 		leaq	-48(%rbp), %rcx
 2683 1015 BA000000 		movl	$.LC39, %edx
 2683      00
 2684 101a 4889CE   		movq	%rcx, %rsi
 2685 101d 4889C7   		movq	%rax, %rdi
 2686 1020 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2686      00
 2687              	.LBE29:
 106:TestUnitTest++.cpp ****         }
 2688              		.loc 4 106 0 is_stmt 1 discriminator 1
 2689 1025 EB2C     		jmp	.L152
 2690              	.L150:
 2691 1027 4883FA01 		cmpq	$1, %rdx
 2692 102b 7517     		jne	.L151
 2693              	.LBB31:
 2694              	.LBB30:
 105:TestUnitTest++.cpp ****         }
 2695              		.loc 4 105 0
 2696 102d 4889C7   		movq	%rax, %rdi
 2697 1030 E8000000 		call	__cxa_begin_catch
 2697      00
 2698 1035 488945C8 		movq	%rax, -56(%rbp)
 2699 1039 C645C701 		movb	$1, -57(%rbp)
 2700 103d E8000000 		call	__cxa_end_catch
 2700      00
 2701 1042 EB9E     		jmp	.L148
 2702              	.L151:
 2703              	.LBE30:
 105:TestUnitTest++.cpp ****         }
 2704              		.loc 4 105 0 is_stmt 0 discriminator 7
 2705 1044 4889C7   		movq	%rax, %rdi
 2706 1047 E8000000 		call	__cxa_begin_catch
 2706      00
 2707 104c E8000000 		call	__cxa_end_catch
 2707      00
 2708              	.LEHE63:
 2709 1051 EB8F     		jmp	.L148
 2710              	.L152:
 2711              	.LBE31:
 2712              		.loc 4 106 0 is_stmt 1
 2713 1053 90       		nop
 2714 1054 488B45F8 		movq	-8(%rbp), %rax
 2715 1058 64483304 		xorq	%fs:40, %rax
 2715      25280000 
 2715      00
 2716 1061 7405     		je	.L149
 2717 1063 E8000000 		call	__stack_chk_fail
 2717      00
 2718              	.L149:
 2719 1068 C9       		leave
 2720              		.cfi_def_cfa 7, 8
 2721 1069 C3       		ret
 2722              		.cfi_endproc
 2723              	.LFE1392:
 2724              		.section	.gcc_except_table
 2725              		.align 4
 2726              	.LLSDA1392:
 2727 01b8 FF       		.byte	0xff
 2728 01b9 03       		.byte	0x3
 2729 01ba 19       		.uleb128 .LLSDATT1392-.LLSDATTD1392
 2730              	.LLSDATTD1392:
 2731 01bb 01       		.byte	0x1
 2732 01bc 09       		.uleb128 .LLSDACSE1392-.LLSDACSB1392
 2733              	.LLSDACSB1392:
 2734 01bd 3D       		.uleb128 .LEHB62-.LFB1392
 2735 01be 05       		.uleb128 .LEHE62-.LEHB62
 2736 01bf 8701     		.uleb128 .L150-.LFB1392
 2737 01c1 03       		.uleb128 0x3
 2738 01c2 4D       		.uleb128 .LEHB63-.LFB1392
 2739 01c3 64       		.uleb128 .LEHE63-.LEHB63
 2740 01c4 00       		.uleb128 0
 2741 01c5 00       		.uleb128 0
 2742              	.LLSDACSE1392:
 2743 01c6 02       		.byte	0x2
 2744 01c7 00       		.byte	0
 2745 01c8 01       		.byte	0x1
 2746 01c9 7D       		.byte	0x7d
 2747 01ca 0000     		.align 4
 2748 01cc 00000000 		.long	0
 2749              	
 2750 01d0 00000000 		.long	_ZTIi
 2751              	.LLSDATT1392:
 2752              		.text
 2754              		.align 2
 2756              	_ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv:
 2757              	.LFB1388:
  98:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 2758              		.loc 4 98 0
 2759              		.cfi_startproc
 2760              		.cfi_personality 0x3,__gxx_personality_v0
 2761              		.cfi_lsda 0x3,.LLSDA1388
 2762 106a 55       		pushq	%rbp
 2763              		.cfi_def_cfa_offset 16
 2764              		.cfi_offset 6, -16
 2765 106b 4889E5   		movq	%rsp, %rbp
 2766              		.cfi_def_cfa_register 6
 2767 106e 53       		pushq	%rbx
 2768 106f 4881EC98 		subq	$152, %rsp
 2768      000000
 2769              		.cfi_offset 3, -24
 2770 1076 4889BD68 		movq	%rdi, -152(%rbp)
 2770      FFFFFF
  98:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 2771              		.loc 4 98 0
 2772 107d 64488B04 		movq	%fs:40, %rax
 2772      25280000 
 2772      00
 2773 1086 488945E8 		movq	%rax, -24(%rbp)
 2774 108a 31C0     		xorl	%eax, %eax
 107:TestUnitTest++.cpp ****     };
 108:TestUnitTest++.cpp **** 
 109:TestUnitTest++.cpp ****     UnitTest::TestResults results;
 2775              		.loc 4 109 0
 2776 108c 488D4590 		leaq	-112(%rbp), %rax
 2777 1090 BE000000 		movl	$0, %esi
 2777      00
 2778 1095 4889C7   		movq	%rax, %rdi
 2779              	.LEHB64:
 2780 1098 E8000000 		call	_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE
 2780      00
 2781              	.LBB32:
 110:TestUnitTest++.cpp **** 	{
 111:TestUnitTest++.cpp **** 		ScopedCurrentTest scopedResults(results);
 2782              		.loc 4 111 0
 2783 109d 488D4D90 		leaq	-112(%rbp), %rcx
 2784 10a1 488D4580 		leaq	-128(%rbp), %rax
 2785 10a5 BA000000 		movl	$0, %edx
 2785      00
 2786 10aa 4889CE   		movq	%rcx, %rsi
 2787 10ad 4889C7   		movq	%rax, %rdi
 2788 10b0 E8000000 		call	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 2788      00
 2789              	.LEHE64:
 112:TestUnitTest++.cpp **** 
 113:TestUnitTest++.cpp **** 		WrongThrowTest test;
 2790              		.loc 4 113 0
 2791 10b5 488D45B0 		leaq	-80(%rbp), %rax
 2792 10b9 4889C7   		movq	%rax, %rdi
 2793              	.LEHB65:
 2794 10bc E8A3FEFF 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC1Ev
 2794      FF
 2795              	.LEHE65:
 114:TestUnitTest++.cpp **** 		test.Run();
 2796              		.loc 4 114 0
 2797 10c1 488D45B0 		leaq	-80(%rbp), %rax
 2798 10c5 4889C7   		movq	%rax, %rdi
 2799              	.LEHB66:
 2800 10c8 E8000000 		call	_ZN8UnitTest4Test3RunEv
 2800      00
 2801              	.LEHE66:
 113:TestUnitTest++.cpp **** 		test.Run();
 2802              		.loc 4 113 0
 2803 10cd 488D45B0 		leaq	-80(%rbp), %rax
 2804 10d1 4889C7   		movq	%rax, %rdi
 2805              	.LEHB67:
 2806 10d4 E85B1200 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 2806      00
 2807              	.LEHE67:
 111:TestUnitTest++.cpp **** 
 2808              		.loc 4 111 0
 2809 10d9 488D4580 		leaq	-128(%rbp), %rax
 2810 10dd 4889C7   		movq	%rax, %rdi
 2811              	.LEHB68:
 2812 10e0 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2812      00
 2813              	.LEHE68:
 2814              	.LEHB69:
 2815              	.LBE32:
 115:TestUnitTest++.cpp **** 	}
 116:TestUnitTest++.cpp **** 
 117:TestUnitTest++.cpp **** 	CHECK_EQUAL(1, results.GetFailureCount());
 2816              		.loc 4 117 0
 2817 10e5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2817      00
 2818 10ea 488B08   		movq	(%rax), %rcx
 2819 10ed 488D45B0 		leaq	-80(%rbp), %rax
 2820 10f1 BA750000 		movl	$117, %edx
 2820      00
 2821 10f6 4889CE   		movq	%rcx, %rsi
 2822 10f9 4889C7   		movq	%rax, %rdi
 2823 10fc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2823      00
 2824              		.loc 4 117 0 is_stmt 0 discriminator 2
 2825 1101 488D4590 		leaq	-112(%rbp), %rax
 2826 1105 4889C7   		movq	%rax, %rdi
 2827 1108 E8000000 		call	_ZNK8UnitTest11TestResults15GetFailureCountEv
 2827      00
 2828              	.LEHE69:
 2829 110d 894580   		movl	%eax, -128(%rbp)
 2830 1110 C7857CFF 		movl	$1, -132(%rbp)
 2830      FFFF0100 
 2830      0000
 2831              	.LEHB70:
 2832 111a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2832      00
 2833              		.loc 4 117 0 discriminator 4
 2834 111f 488B00   		movq	(%rax), %rax
 2835 1122 488D4DB0 		leaq	-80(%rbp), %rcx
 2836 1126 488D5580 		leaq	-128(%rbp), %rdx
 2837 112a 488DB57C 		leaq	-132(%rbp), %rsi
 2837      FFFFFF
 2838 1131 4889C7   		movq	%rax, %rdi
 2839 1134 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2839      00
 2840              	.LEHE70:
 118:TestUnitTest++.cpp **** }
 2841              		.loc 4 118 0 is_stmt 1
 2842 1139 E9870000 		jmp	.L153
 2842      00
 2843              	.L162:
 2844 113e 4889C3   		movq	%rax, %rbx
 2845              	.LBB33:
 113:TestUnitTest++.cpp **** 		test.Run();
 2846              		.loc 4 113 0
 2847 1141 488D45B0 		leaq	-80(%rbp), %rax
 2848 1145 4889C7   		movq	%rax, %rdi
 2849 1148 E8E71100 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 2849      00
 2850 114d EB03     		jmp	.L155
 2851              	.L161:
 2852 114f 4889C3   		movq	%rax, %rbx
 2853              	.L155:
 111:TestUnitTest++.cpp **** 
 2854              		.loc 4 111 0
 2855 1152 488D4580 		leaq	-128(%rbp), %rax
 2856 1156 4889C7   		movq	%rax, %rdi
 2857 1159 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2857      00
 2858 115e 4889D8   		movq	%rbx, %rax
 2859 1161 4889C7   		movq	%rax, %rdi
 2860              	.LEHB71:
 2861 1164 E8000000 		call	_Unwind_Resume
 2861      00
 2862              	.LEHE71:
 2863              	.L164:
 2864 1169 EB00     		jmp	.L157
 2865              	.L163:
 2866              	.L157:
 2867              	.LBE33:
 117:TestUnitTest++.cpp **** }
 2868              		.loc 4 117 0
 2869 116b 4889C7   		movq	%rax, %rdi
 2870 116e E8000000 		call	__cxa_begin_catch
 2870      00
 2871              	.LEHB72:
 2872 1173 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2872      00
 2873 1178 488B08   		movq	(%rax), %rcx
 2874 117b 488D45B0 		leaq	-80(%rbp), %rax
 2875 117f BA750000 		movl	$117, %edx
 2875      00
 2876 1184 4889CE   		movq	%rcx, %rsi
 2877 1187 4889C7   		movq	%rax, %rdi
 2878 118a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2878      00
 117:TestUnitTest++.cpp **** }
 2879              		.loc 4 117 0 is_stmt 0 discriminator 12
 2880 118f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2880      00
 2881 1194 488B00   		movq	(%rax), %rax
 2882 1197 488D4DB0 		leaq	-80(%rbp), %rcx
 2883 119b BA000000 		movl	$.LC40, %edx
 2883      00
 2884 11a0 4889CE   		movq	%rcx, %rsi
 2885 11a3 4889C7   		movq	%rax, %rdi
 2886 11a6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2886      00
 2887              	.LEHE72:
 2888              	.LEHB73:
 117:TestUnitTest++.cpp **** }
 2889              		.loc 4 117 0 discriminator 16
 2890 11ab E8000000 		call	__cxa_end_catch
 2890      00
 2891              	.LEHE73:
 2892              		.loc 4 118 0 is_stmt 1 discriminator 16
 2893 11b0 EB13     		jmp	.L153
 2894              	.L165:
 2895 11b2 4889C3   		movq	%rax, %rbx
 117:TestUnitTest++.cpp **** }
 2896              		.loc 4 117 0
 2897 11b5 E8000000 		call	__cxa_end_catch
 2897      00
 2898 11ba 4889D8   		movq	%rbx, %rax
 2899 11bd 4889C7   		movq	%rax, %rdi
 2900              	.LEHB74:
 2901 11c0 E8000000 		call	_Unwind_Resume
 2901      00
 2902              	.LEHE74:
 2903              	.L153:
 2904              		.loc 4 118 0
 2905 11c5 488B45E8 		movq	-24(%rbp), %rax
 2906 11c9 64483304 		xorq	%fs:40, %rax
 2906      25280000 
 2906      00
 2907 11d2 7405     		je	.L160
 2908 11d4 E8000000 		call	__stack_chk_fail
 2908      00
 2909              	.L160:
 2910 11d9 4881C498 		addq	$152, %rsp
 2910      000000
 2911 11e0 5B       		popq	%rbx
 2912 11e1 5D       		popq	%rbp
 2913              		.cfi_def_cfa 7, 8
 2914 11e2 C3       		ret
 2915              		.cfi_endproc
 2916              	.LFE1388:
 2917              		.section	.gcc_except_table
 2918              		.align 4
 2919              	.LLSDA1388:
 2920 01d4 FF       		.byte	0xff
 2921 01d5 03       		.byte	0x3
 2922 01d6 41       		.uleb128 .LLSDATT1388-.LLSDATTD1388
 2923              	.LLSDATTD1388:
 2924 01d7 01       		.byte	0x1
 2925 01d8 37       		.uleb128 .LLSDACSE1388-.LLSDACSB1388
 2926              	.LLSDACSB1388:
 2927 01d9 2E       		.uleb128 .LEHB64-.LFB1388
 2928 01da 1D       		.uleb128 .LEHE64-.LEHB64
 2929 01db 00       		.uleb128 0
 2930 01dc 00       		.uleb128 0
 2931 01dd 52       		.uleb128 .LEHB65-.LFB1388
 2932 01de 05       		.uleb128 .LEHE65-.LEHB65
 2933 01df E501     		.uleb128 .L161-.LFB1388
 2934 01e1 00       		.uleb128 0
 2935 01e2 5E       		.uleb128 .LEHB66-.LFB1388
 2936 01e3 05       		.uleb128 .LEHE66-.LEHB66
 2937 01e4 D401     		.uleb128 .L162-.LFB1388
 2938 01e6 00       		.uleb128 0
 2939 01e7 6A       		.uleb128 .LEHB67-.LFB1388
 2940 01e8 05       		.uleb128 .LEHE67-.LEHB67
 2941 01e9 E501     		.uleb128 .L161-.LFB1388
 2942 01eb 00       		.uleb128 0
 2943 01ec 76       		.uleb128 .LEHB68-.LFB1388
 2944 01ed 05       		.uleb128 .LEHE68-.LEHB68
 2945 01ee 00       		.uleb128 0
 2946 01ef 00       		.uleb128 0
 2947 01f0 7B       		.uleb128 .LEHB69-.LFB1388
 2948 01f1 28       		.uleb128 .LEHE69-.LEHB69
 2949 01f2 8102     		.uleb128 .L163-.LFB1388
 2950 01f4 01       		.uleb128 0x1
 2951 01f5 B001     		.uleb128 .LEHB70-.LFB1388
 2952 01f7 1F       		.uleb128 .LEHE70-.LEHB70
 2953 01f8 FF01     		.uleb128 .L164-.LFB1388
 2954 01fa 03       		.uleb128 0x3
 2955 01fb FA01     		.uleb128 .LEHB71-.LFB1388
 2956 01fd 05       		.uleb128 .LEHE71-.LEHB71
 2957 01fe 00       		.uleb128 0
 2958 01ff 00       		.uleb128 0
 2959 0200 8902     		.uleb128 .LEHB72-.LFB1388
 2960 0202 38       		.uleb128 .LEHE72-.LEHB72
 2961 0203 C802     		.uleb128 .L165-.LFB1388
 2962 0205 00       		.uleb128 0
 2963 0206 C102     		.uleb128 .LEHB73-.LFB1388
 2964 0208 05       		.uleb128 .LEHE73-.LEHB73
 2965 0209 00       		.uleb128 0
 2966 020a 00       		.uleb128 0
 2967 020b D602     		.uleb128 .LEHB74-.LFB1388
 2968 020d 05       		.uleb128 .LEHE74-.LEHB74
 2969 020e 00       		.uleb128 0
 2970 020f 00       		.uleb128 0
 2971              	.LLSDACSE1388:
 2972 0210 01       		.byte	0x1
 2973 0211 00       		.byte	0
 2974 0212 00       		.byte	0
 2975 0213 7D       		.byte	0x7d
 2976              		.align 4
 2977 0214 00000000 		.long	0
 2978              	
 2979              	.LLSDATT1388:
 2980              		.text
 2982 11e3 90       		.align 2
 2984              	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev:
 2985              	.LFB1394:
 119:TestUnitTest++.cpp **** 
 120:TestUnitTest++.cpp **** struct SimpleFixture
 121:TestUnitTest++.cpp **** {
 122:TestUnitTest++.cpp ****     SimpleFixture()
 2986              		.loc 4 122 0
 2987              		.cfi_startproc
 2988 11e4 55       		pushq	%rbp
 2989              		.cfi_def_cfa_offset 16
 2990              		.cfi_offset 6, -16
 2991 11e5 4889E5   		movq	%rsp, %rbp
 2992              		.cfi_def_cfa_register 6
 2993 11e8 48897DF8 		movq	%rdi, -8(%rbp)
 2994              	.LBB34:
 123:TestUnitTest++.cpp ****     {
 124:TestUnitTest++.cpp ****         ++instanceCount;
 2995              		.loc 4 124 0
 2996 11ec 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 2996      0000
 2997 11f2 83C001   		addl	$1, %eax
 2998 11f5 89050000 		movl	%eax, _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip)
 2998      0000
 2999              	.LBE34:
 125:TestUnitTest++.cpp ****     }
 3000              		.loc 4 125 0
 3001 11fb 90       		nop
 3002 11fc 5D       		popq	%rbp
 3003              		.cfi_def_cfa 7, 8
 3004 11fd C3       		ret
 3005              		.cfi_endproc
 3006              	.LFE1394:
 3008              		.align 2
 3010              	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev:
 3011              	.LFB1397:
 126:TestUnitTest++.cpp ****     ~SimpleFixture()
 3012              		.loc 4 126 0
 3013              		.cfi_startproc
 3014 11fe 55       		pushq	%rbp
 3015              		.cfi_def_cfa_offset 16
 3016              		.cfi_offset 6, -16
 3017 11ff 4889E5   		movq	%rsp, %rbp
 3018              		.cfi_def_cfa_register 6
 3019 1202 48897DF8 		movq	%rdi, -8(%rbp)
 3020              	.LBB35:
 127:TestUnitTest++.cpp ****     {
 128:TestUnitTest++.cpp ****         --instanceCount;
 3021              		.loc 4 128 0
 3022 1206 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 3022      0000
 3023 120c 83E801   		subl	$1, %eax
 3024 120f 89050000 		movl	%eax, _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip)
 3024      0000
 3025              	.LBE35:
 129:TestUnitTest++.cpp ****     }
 3026              		.loc 4 129 0
 3027 1215 90       		nop
 3028 1216 5D       		popq	%rbp
 3029              		.cfi_def_cfa 7, 8
 3030 1217 C3       		ret
 3031              		.cfi_endproc
 3032              	.LFE1397:
 3034              		.local	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE
 3035              		.comm	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE,4,4
 3036              		.align 2
 3038              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC2ERKN8UnitTest11TestDetailsE:
 3039              	.LFB1400:
 130:TestUnitTest++.cpp **** 
 131:TestUnitTest++.cpp ****     static int instanceCount;
 132:TestUnitTest++.cpp **** };
 133:TestUnitTest++.cpp **** 
 134:TestUnitTest++.cpp **** int SimpleFixture::instanceCount = 0;
 135:TestUnitTest++.cpp **** 
 136:TestUnitTest++.cpp **** TEST_FIXTURE(SimpleFixture, DefaultFixtureCtorIsCalled)
 3040              		.loc 4 136 0
 3041              		.cfi_startproc
 3042 1218 55       		pushq	%rbp
 3043              		.cfi_def_cfa_offset 16
 3044              		.cfi_offset 6, -16
 3045 1219 4889E5   		movq	%rsp, %rbp
 3046              		.cfi_def_cfa_register 6
 3047 121c 4883EC10 		subq	$16, %rsp
 3048 1220 48897DF8 		movq	%rdi, -8(%rbp)
 3049 1224 488975F0 		movq	%rsi, -16(%rbp)
 3050              	.LBB36:
 3051              		.loc 4 136 0
 3052 1228 488B45F8 		movq	-8(%rbp), %rax
 3053 122c 4889C7   		movq	%rax, %rdi
 3054 122f E8B0FFFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev
 3054      FF
 3055 1234 488B45F8 		movq	-8(%rbp), %rax
 3056 1238 488B55F0 		movq	-16(%rbp), %rdx
 3057 123c 488910   		movq	%rdx, (%rax)
 3058              	.LBE36:
 3059 123f 90       		nop
 3060 1240 C9       		leave
 3061              		.cfi_def_cfa 7, 8
 3062 1241 C3       		ret
 3063              		.cfi_endproc
 3064              	.LFE1400:
 3066              		.set	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC1ERKN8UnitTest11TestDetailsE
 3067              		.section	.rodata
 3068              	.LC44:
 3069 0405 44656661 		.string	"DefaultFixtureCtorIsCalled"
 3069      756C7446 
 3069      69787475 
 3069      72654374 
 3069      6F724973 
 3070              		.text
 3071              		.align 2
 3073              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC2Ev:
 3074              	.LFB1403:
 3075              		.loc 4 136 0
 3076              		.cfi_startproc
 3077 1242 55       		pushq	%rbp
 3078              		.cfi_def_cfa_offset 16
 3079              		.cfi_offset 6, -16
 3080 1243 4889E5   		movq	%rsp, %rbp
 3081              		.cfi_def_cfa_register 6
 3082 1246 4883EC10 		subq	$16, %rsp
 3083 124a 48897DF8 		movq	%rdi, -8(%rbp)
 3084              	.LBB37:
 3085              		.loc 4 136 0
 3086 124e E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3086      00
 3087 1253 4889C2   		movq	%rax, %rdx
 3088 1256 488B45F8 		movq	-8(%rbp), %rax
 3089 125a 41B88800 		movl	$136, %r8d
 3089      0000
 3090 1260 B9000000 		movl	$.LC1, %ecx
 3090      00
 3091 1265 BE000000 		movl	$.LC44, %esi
 3091      00
 3092 126a 4889C7   		movq	%rax, %rdi
 3093 126d E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3093      00
 3094 1272 BA000000 		movl	$_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE+16, %edx
 3094      00
 3095 1277 488B45F8 		movq	-8(%rbp), %rax
 3096 127b 488910   		movq	%rdx, (%rax)
 3097              	.LBE37:
 3098 127e 90       		nop
 3099 127f C9       		leave
 3100              		.cfi_def_cfa 7, 8
 3101 1280 C3       		ret
 3102              		.cfi_endproc
 3103              	.LFE1403:
 3105              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC1Ev,_ZN12_GLOBAL__N_143TestSim
 3106              		.local	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE
 3107              		.comm	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE,56,32
 3108              		.local	_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE
 3109              		.comm	_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE,1,1
 3110 1281 90       		.align 2
 3112              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD2Ev:
 3113              	.LFB1407:
 3114              		.loc 4 136 0
 3115              		.cfi_startproc
 3116 1282 55       		pushq	%rbp
 3117              		.cfi_def_cfa_offset 16
 3118              		.cfi_offset 6, -16
 3119 1283 4889E5   		movq	%rsp, %rbp
 3120              		.cfi_def_cfa_register 6
 3121 1286 4883EC08 		subq	$8, %rsp
 3122 128a 48897DF8 		movq	%rdi, -8(%rbp)
 3123              	.LBB38:
 3124              		.loc 4 136 0
 3125 128e 488B45F8 		movq	-8(%rbp), %rax
 3126 1292 4889C7   		movq	%rax, %rdi
 3127 1295 E864FFFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev
 3127      FF
 3128              	.LBE38:
 3129 129a 90       		nop
 3130 129b C9       		leave
 3131              		.cfi_def_cfa 7, 8
 3132 129c C3       		ret
 3133              		.cfi_endproc
 3134              	.LFE1407:
 3136              		.set	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD1Ev,_ZN12_GLOBAL__N_145Simpl
 3137              		.section	.rodata
 3138              	.LC45:
 3139 0420 556E6861 		.string	"Unhandled exception: "
 3139      6E646C65 
 3139      64206578 
 3139      63657074 
 3139      696F6E3A 
 3140 0436 0000     		.align 8
 3141              	.LC46:
 3142 0438 556E6861 		.string	"Unhandled exception while destroying fixture SimpleFixture"
 3142      6E646C65 
 3142      64206578 
 3142      63657074 
 3142      696F6E20 
 3143 0473 00000000 		.align 8
 3143      00
 3144              	.LC47:
 3145 0478 556E6861 		.string	"Unhandled exception while constructing fixture SimpleFixture"
 3145      6E646C65 
 3145      64206578 
 3145      63657074 
 3145      696F6E20 
 3146              		.text
 3147 129d 90       		.align 2
 3149              	_ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv:
 3150              	.LFB1405:
 3151              		.loc 4 136 0
 3152              		.cfi_startproc
 3153              		.cfi_personality 0x3,__gxx_personality_v0
 3154              		.cfi_lsda 0x3,.LLSDA1405
 3155 129e 55       		pushq	%rbp
 3156              		.cfi_def_cfa_offset 16
 3157              		.cfi_offset 6, -16
 3158 129f 4889E5   		movq	%rsp, %rbp
 3159              		.cfi_def_cfa_register 6
 3160 12a2 4154     		pushq	%r12
 3161 12a4 53       		pushq	%rbx
 3162 12a5 4881ECF0 		subq	$496, %rsp
 3162      010000
 3163              		.cfi_offset 12, -24
 3164              		.cfi_offset 3, -32
 3165 12ac 4889BD08 		movq	%rdi, -504(%rbp)
 3165      FEFFFF
 3166              		.loc 4 136 0
 3167 12b3 64488B04 		movq	%fs:40, %rax
 3167      25280000 
 3167      00
 3168 12bc 488945E8 		movq	%rax, -24(%rbp)
 3169 12c0 31C0     		xorl	%eax, %eax
 3170 12c2 C6851FFE 		movb	$0, -481(%rbp)
 3170      FFFF00
 3171              	.LBB39:
 3172 12c9 488B8508 		movq	-504(%rbp), %rax
 3172      FEFFFF
 3173 12d0 488D5008 		leaq	8(%rax), %rdx
 3174 12d4 488D8530 		leaq	-464(%rbp), %rax
 3174      FEFFFF
 3175 12db 4889D6   		movq	%rdx, %rsi
 3176 12de 4889C7   		movq	%rax, %rdi
 3177 12e1 E832FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC1ERKN8UnitTest11TestDetailsE
 3177      FF
 3178 12e6 C6851FFE 		movb	$1, -481(%rbp)
 3178      FFFF01
 3179 12ed 488B8508 		movq	-504(%rbp), %rax
 3179      FEFFFF
 3180 12f4 488D5008 		leaq	8(%rax), %rdx
 3181 12f8 488D8530 		leaq	-464(%rbp), %rax
 3181      FEFFFF
 3182 12ff 4889D6   		movq	%rdx, %rsi
 3183 1302 4889C7   		movq	%rax, %rdi
 3184              	.LEHB75:
 3185 1305 E8230900 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvR
 3185      00
 3186              	.LEHE75:
 3187              		.loc 4 136 0 is_stmt 0 discriminator 2
 3188 130a 488D8530 		leaq	-464(%rbp), %rax
 3188      FEFFFF
 3189 1311 4889C7   		movq	%rax, %rdi
 3190 1314 E869FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD1Ev
 3190      FF
 3191              	.LBE39:
 3192 1319 E9640200 		jmp	.L171
 3192      00
 3193              	.L184:
 3194 131e 4989C4   		movq	%rax, %r12
 3195 1321 4889D3   		movq	%rdx, %rbx
 3196              	.LBB40:
 3197              		.loc 4 136 0
 3198 1324 488D8530 		leaq	-464(%rbp), %rax
 3198      FEFFFF
 3199 132b 4889C7   		movq	%rax, %rdi
 3200 132e E84FFFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD1Ev
 3200      FF
 3201 1333 4C89E0   		movq	%r12, %rax
 3202 1336 4889DA   		movq	%rbx, %rdx
 3203 1339 4883FA01 		cmpq	$1, %rdx
 3204 133d 740F     		je	.L174
 3205 133f 4883FA02 		cmpq	$2, %rdx
 3206 1343 0F84A700 		je	.L175
 3206      0000
 3207 1349 E94B0100 		jmp	.L189
 3207      00
 3208              	.L174:
 3209              	.LBE40:
 3210              	.LBB41:
 3211 134e 4889C7   		movq	%rax, %rdi
 3212 1351 E8000000 		call	__cxa_begin_catch
 3212      00
 3213 1356 48898520 		movq	%rax, -480(%rbp)
 3213      FEFFFF
 3214 135d 488B8520 		movq	-480(%rbp), %rax
 3214      FEFFFF
 3215 1364 488B00   		movq	(%rax), %rax
 3216 1367 4883C010 		addq	$16, %rax
 3217 136b 488B00   		movq	(%rax), %rax
 3218 136e 488B9520 		movq	-480(%rbp), %rdx
 3218      FEFFFF
 3219 1375 4889D7   		movq	%rdx, %rdi
 3220 1378 FFD0     		call	*%rax
 3221 137a 4889C3   		movq	%rax, %rbx
 3222 137d 488B8520 		movq	-480(%rbp), %rax
 3222      FEFFFF
 3223 1384 4889C7   		movq	%rax, %rdi
 3224              	.LEHB76:
 3225 1387 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3225      00
 3226 138c 4189C4   		movl	%eax, %r12d
 3227 138f 488B8520 		movq	-480(%rbp), %rax
 3227      FEFFFF
 3228 1396 4889C7   		movq	%rax, %rdi
 3229 1399 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3229      00
 3230              		.loc 4 136 0 discriminator 4
 3231 139e 4889C1   		movq	%rax, %rcx
 3232 13a1 488B8508 		movq	-504(%rbp), %rax
 3232      FEFFFF
 3233 13a8 488B5008 		movq	8(%rax), %rdx
 3234 13ac 488B8508 		movq	-504(%rbp), %rax
 3234      FEFFFF
 3235 13b3 488B7010 		movq	16(%rax), %rsi
 3236 13b7 488D8530 		leaq	-464(%rbp), %rax
 3236      FEFFFF
 3237 13be 4589E0   		movl	%r12d, %r8d
 3238 13c1 4889C7   		movq	%rax, %rdi
 3239 13c4 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3239      00
 3240              		.loc 4 136 0 discriminator 8
 3241 13c9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3241      00
 3242 13ce 488B00   		movq	(%rax), %rax
 3243 13d1 488D8D30 		leaq	-464(%rbp), %rcx
 3243      FEFFFF
 3244 13d8 4889DA   		movq	%rbx, %rdx
 3245 13db 4889CE   		movq	%rcx, %rsi
 3246 13de 4889C7   		movq	%rax, %rdi
 3247 13e1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3247      00
 3248              	.LEHE76:
 3249              		.loc 4 136 0 discriminator 12
 3250 13e6 E8000000 		call	__cxa_end_catch
 3250      00
 3251              	.LBE41:
 3252 13eb E9920100 		jmp	.L171
 3252      00
 3253              	.L175:
 3254              	.LBB42:
 3255              		.loc 4 136 0
 3256 13f0 4889C7   		movq	%rax, %rdi
 3257 13f3 E8000000 		call	__cxa_begin_catch
 3257      00
 3258 13f8 48898528 		movq	%rax, -472(%rbp)
 3258      FEFFFF
 3259              	.LBB43:
 3260 13ff 488D8550 		leaq	-432(%rbp), %rax
 3260      FEFFFF
 3261 1406 4889C7   		movq	%rax, %rdi
 3262              	.LEHB77:
 3263 1409 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3263      00
 3264              	.LEHE77:
 3265              		.loc 4 136 0 discriminator 14
 3266 140e 488B8528 		movq	-472(%rbp), %rax
 3266      FEFFFF
 3267 1415 488B00   		movq	(%rax), %rax
 3268 1418 4883C010 		addq	$16, %rax
 3269 141c 488B00   		movq	(%rax), %rax
 3270 141f 488B9528 		movq	-472(%rbp), %rdx
 3270      FEFFFF
 3271 1426 4889D7   		movq	%rdx, %rdi
 3272 1429 FFD0     		call	*%rax
 3273 142b 4889C3   		movq	%rax, %rbx
 3274 142e 488D8550 		leaq	-432(%rbp), %rax
 3274      FEFFFF
 3275 1435 BE000000 		movl	$.LC45, %esi
 3275      00
 3276 143a 4889C7   		movq	%rax, %rdi
 3277              	.LEHB78:
 3278 143d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3278      00
 3279 1442 4889DE   		movq	%rbx, %rsi
 3280 1445 4889C7   		movq	%rax, %rdi
 3281 1448 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3281      00
 3282              		.loc 4 136 0 discriminator 18
 3283 144d 488D8550 		leaq	-432(%rbp), %rax
 3283      FEFFFF
 3284 1454 4889C7   		movq	%rax, %rdi
 3285 1457 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3285      00
 3286 145c 4989C4   		movq	%rax, %r12
 3287 145f 488B8508 		movq	-504(%rbp), %rax
 3287      FEFFFF
 3288 1466 488D5808 		leaq	8(%rax), %rbx
 3289 146a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3289      00
 3290              		.loc 4 136 0 discriminator 20
 3291 146f 488B00   		movq	(%rax), %rax
 3292 1472 4C89E2   		movq	%r12, %rdx
 3293 1475 4889DE   		movq	%rbx, %rsi
 3294 1478 4889C7   		movq	%rax, %rdi
 3295 147b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3295      00
 3296              	.LEHE78:
 3297              		.loc 4 136 0 discriminator 24
 3298 1480 488D8550 		leaq	-432(%rbp), %rax
 3298      FEFFFF
 3299 1487 4889C7   		movq	%rax, %rdi
 3300              	.LEHB79:
 3301 148a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3301      00
 3302              	.LEHE79:
 3303              	.LBE43:
 3304              		.loc 4 136 0 discriminator 25
 3305 148f E8000000 		call	__cxa_end_catch
 3305      00
 3306              	.LBE42:
 3307 1494 E9E90000 		jmp	.L171
 3307      00
 3308              	.L189:
 3309              		.loc 4 136 0
 3310 1499 4889C7   		movq	%rax, %rdi
 3311 149c E8000000 		call	__cxa_begin_catch
 3311      00
 3312 14a1 80BD1FFE 		cmpb	$0, -481(%rbp)
 3312      FFFF00
 3313 14a8 7443     		je	.L177
 3314              		.loc 4 136 0 discriminator 27
 3315 14aa 488B8508 		movq	-504(%rbp), %rax
 3315      FEFFFF
 3316 14b1 488D4808 		leaq	8(%rax), %rcx
 3317 14b5 488D8530 		leaq	-464(%rbp), %rax
 3317      FEFFFF
 3318 14bc BA880000 		movl	$136, %edx
 3318      00
 3319 14c1 4889CE   		movq	%rcx, %rsi
 3320 14c4 4889C7   		movq	%rax, %rdi
 3321              	.LEHB80:
 3322 14c7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3322      00
 3323              		.loc 4 136 0 discriminator 30
 3324 14cc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3324      00
 3325 14d1 488B00   		movq	(%rax), %rax
 3326 14d4 488D8D30 		leaq	-464(%rbp), %rcx
 3326      FEFFFF
 3327 14db BA000000 		movl	$.LC46, %edx
 3327      00
 3328 14e0 4889CE   		movq	%rcx, %rsi
 3329 14e3 4889C7   		movq	%rax, %rdi
 3330 14e6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3330      00
 3331 14eb EB41     		jmp	.L178
 3332              	.L177:
 3333              		.loc 4 136 0 discriminator 28
 3334 14ed 488B8508 		movq	-504(%rbp), %rax
 3334      FEFFFF
 3335 14f4 488D4808 		leaq	8(%rax), %rcx
 3336 14f8 488D8530 		leaq	-464(%rbp), %rax
 3336      FEFFFF
 3337 14ff BA880000 		movl	$136, %edx
 3337      00
 3338 1504 4889CE   		movq	%rcx, %rsi
 3339 1507 4889C7   		movq	%rax, %rdi
 3340 150a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3340      00
 3341              		.loc 4 136 0 discriminator 37
 3342 150f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3342      00
 3343 1514 488B00   		movq	(%rax), %rax
 3344 1517 488D8D30 		leaq	-464(%rbp), %rcx
 3344      FEFFFF
 3345 151e BA000000 		movl	$.LC47, %edx
 3345      00
 3346 1523 4889CE   		movq	%rcx, %rsi
 3347 1526 4889C7   		movq	%rax, %rdi
 3348 1529 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3348      00
 3349              	.LEHE80:
 3350              	.L178:
 3351              	.LEHB81:
 3352              		.loc 4 136 0 discriminator 42
 3353 152e E8000000 		call	__cxa_end_catch
 3353      00
 3354 1533 EB4D     		jmp	.L171
 3355              	.L185:
 3356 1535 4889C3   		movq	%rax, %rbx
 3357              	.LBB45:
 3358              		.loc 4 136 0
 3359 1538 E8000000 		call	__cxa_end_catch
 3359      00
 3360 153d 4889D8   		movq	%rbx, %rax
 3361 1540 4889C7   		movq	%rax, %rdi
 3362 1543 E8000000 		call	_Unwind_Resume
 3362      00
 3363              	.LEHE81:
 3364              	.L187:
 3365 1548 4889C3   		movq	%rax, %rbx
 3366              	.LBE45:
 3367              	.LBB46:
 3368              	.LBB44:
 3369 154b 488D8550 		leaq	-432(%rbp), %rax
 3369      FEFFFF
 3370 1552 4889C7   		movq	%rax, %rdi
 3371 1555 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3371      00
 3372 155a EB03     		jmp	.L181
 3373              	.L186:
 3374 155c 4889C3   		movq	%rax, %rbx
 3375              	.L181:
 3376              	.LBE44:
 3377 155f E8000000 		call	__cxa_end_catch
 3377      00
 3378 1564 4889D8   		movq	%rbx, %rax
 3379 1567 4889C7   		movq	%rax, %rdi
 3380              	.LEHB82:
 3381 156a E8000000 		call	_Unwind_Resume
 3381      00
 3382              	.LEHE82:
 3383              	.L188:
 3384 156f 4889C3   		movq	%rax, %rbx
 3385              	.LBE46:
 3386 1572 E8000000 		call	__cxa_end_catch
 3386      00
 3387 1577 4889D8   		movq	%rbx, %rax
 3388 157a 4889C7   		movq	%rax, %rdi
 3389              	.LEHB83:
 3390 157d E8000000 		call	_Unwind_Resume
 3390      00
 3391              	.LEHE83:
 3392              	.L171:
 3393 1582 488B45E8 		movq	-24(%rbp), %rax
 3394 1586 64483304 		xorq	%fs:40, %rax
 3394      25280000 
 3394      00
 3395 158f 7405     		je	.L183
 3396 1591 E8000000 		call	__stack_chk_fail
 3396      00
 3397              	.L183:
 3398 1596 4881C4F0 		addq	$496, %rsp
 3398      010000
 3399 159d 5B       		popq	%rbx
 3400 159e 415C     		popq	%r12
 3401 15a0 5D       		popq	%rbp
 3402              		.cfi_def_cfa 7, 8
 3403 15a1 C3       		ret
 3404              		.cfi_endproc
 3405              	.LFE1405:
 3406              		.section	.gcc_except_table
 3407              		.align 4
 3408              	.LLSDA1405:
 3409 0218 FF       		.byte	0xff
 3410 0219 03       		.byte	0x3
 3411 021a 49       		.uleb128 .LLSDATT1405-.LLSDATTD1405
 3412              	.LLSDATTD1405:
 3413 021b 01       		.byte	0x1
 3414 021c 32       		.uleb128 .LLSDACSE1405-.LLSDACSB1405
 3415              	.LLSDACSB1405:
 3416 021d 67       		.uleb128 .LEHB75-.LFB1405
 3417 021e 05       		.uleb128 .LEHE75-.LEHB75
 3418 021f 8001     		.uleb128 .L184-.LFB1405
 3419 0221 07       		.uleb128 0x7
 3420 0222 E901     		.uleb128 .LEHB76-.LFB1405
 3421 0224 5F       		.uleb128 .LEHE76-.LEHB76
 3422 0225 9705     		.uleb128 .L185-.LFB1405
 3423 0227 00       		.uleb128 0
 3424 0228 EB02     		.uleb128 .LEHB77-.LFB1405
 3425 022a 05       		.uleb128 .LEHE77-.LEHB77
 3426 022b BE05     		.uleb128 .L186-.LFB1405
 3427 022d 00       		.uleb128 0
 3428 022e 9F03     		.uleb128 .LEHB78-.LFB1405
 3429 0230 43       		.uleb128 .LEHE78-.LEHB78
 3430 0231 AA05     		.uleb128 .L187-.LFB1405
 3431 0233 00       		.uleb128 0
 3432 0234 EC03     		.uleb128 .LEHB79-.LFB1405
 3433 0236 05       		.uleb128 .LEHE79-.LEHB79
 3434 0237 BE05     		.uleb128 .L186-.LFB1405
 3435 0239 00       		.uleb128 0
 3436 023a A904     		.uleb128 .LEHB80-.LFB1405
 3437 023c 67       		.uleb128 .LEHE80-.LEHB80
 3438 023d D105     		.uleb128 .L188-.LFB1405
 3439 023f 00       		.uleb128 0
 3440 0240 9005     		.uleb128 .LEHB81-.LFB1405
 3441 0242 1A       		.uleb128 .LEHE81-.LEHB81
 3442 0243 00       		.uleb128 0
 3443 0244 00       		.uleb128 0
 3444 0245 CC05     		.uleb128 .LEHB82-.LFB1405
 3445 0247 05       		.uleb128 .LEHE82-.LEHB82
 3446 0248 00       		.uleb128 0
 3447 0249 00       		.uleb128 0
 3448 024a DF05     		.uleb128 .LEHB83-.LFB1405
 3449 024c 05       		.uleb128 .LEHE83-.LEHB83
 3450 024d 00       		.uleb128 0
 3451 024e 00       		.uleb128 0
 3452              	.LLSDACSE1405:
 3453 024f 03       		.byte	0x3
 3454 0250 00       		.byte	0
 3455 0251 02       		.byte	0x2
 3456 0252 7D       		.byte	0x7d
 3457 0253 01       		.byte	0x1
 3458 0254 7D       		.byte	0x7d
 3459 0255 00       		.byte	0
 3460 0256 7D       		.byte	0x7d
 3461 0257 00       		.align 4
 3462 0258 00000000 		.long	0
 3463              	
 3464 025c 00000000 		.long	_ZTISt9exception
 3465 0260 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3466              	.LLSDATT1405:
 3467              		.text
 3469              		.section	.rodata
 3470 04b5 000000   		.align 8
 3471              	.LC48:
 3472 04b8 53696D70 		.string	"SimpleFixture::instanceCount > 0"
 3472      6C654669 
 3472      78747572 
 3472      653A3A69 
 3472      6E737461 
 3473 04d9 00000000 		.align 8
 3473      000000
 3474              	.LC49:
 3475 04e0 556E6861 		.string	"Unhandled exception in CHECK(SimpleFixture::instanceCount > 0)"
 3475      6E646C65 
 3475      64206578 
 3475      63657074 
 3475      696F6E20 
 3476              		.text
 3477              		.align 2
 3479              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv:
 3480              	.LFB1409:
 137:TestUnitTest++.cpp **** {
 3481              		.loc 4 137 0 is_stmt 1
 3482              		.cfi_startproc
 3483              		.cfi_personality 0x3,__gxx_personality_v0
 3484              		.cfi_lsda 0x3,.LLSDA1409
 3485 15a2 55       		pushq	%rbp
 3486              		.cfi_def_cfa_offset 16
 3487              		.cfi_offset 6, -16
 3488 15a3 4889E5   		movq	%rsp, %rbp
 3489              		.cfi_def_cfa_register 6
 3490 15a6 53       		pushq	%rbx
 3491 15a7 4883EC48 		subq	$72, %rsp
 3492              		.cfi_offset 3, -24
 3493 15ab 48897DB8 		movq	%rdi, -72(%rbp)
 3494              		.loc 4 137 0
 3495 15af 64488B04 		movq	%fs:40, %rax
 3495      25280000 
 3495      00
 3496 15b8 488945E8 		movq	%rax, -24(%rbp)
 3497 15bc 31C0     		xorl	%eax, %eax
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3498              		.loc 4 138 0
 3499 15be 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 3499      0000
 3500 15c4 85C0     		testl	%eax, %eax
 3501 15c6 0F9FC0   		setg	%al
 3502 15c9 0FB6C0   		movzbl	%al, %eax
 3503 15cc 89C7     		movl	%eax, %edi
 3504 15ce E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 3504      00
 3505 15d3 83F001   		xorl	$1, %eax
 3506 15d6 84C0     		testb	%al, %al
 3507 15d8 0F849400 		je	.L197
 3507      0000
 3508              	.LEHB84:
 3509              		.loc 4 138 0 is_stmt 0 discriminator 1
 3510 15de E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3510      00
 3511 15e3 488B08   		movq	(%rax), %rcx
 3512 15e6 488D45C0 		leaq	-64(%rbp), %rax
 3513 15ea BA8A0000 		movl	$138, %edx
 3513      00
 3514 15ef 4889CE   		movq	%rcx, %rsi
 3515 15f2 4889C7   		movq	%rax, %rdi
 3516 15f5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3516      00
 3517              		.loc 4 138 0 discriminator 3
 3518 15fa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3518      00
 3519 15ff 488B00   		movq	(%rax), %rax
 3520 1602 488D4DC0 		leaq	-64(%rbp), %rcx
 3521 1606 BA000000 		movl	$.LC48, %edx
 3521      00
 3522 160b 4889CE   		movq	%rcx, %rsi
 3523 160e 4889C7   		movq	%rax, %rdi
 3524 1611 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3524      00
 3525              	.LEHE84:
 139:TestUnitTest++.cpp **** }
 3526              		.loc 4 139 0 is_stmt 1
 3527 1616 EB5A     		jmp	.L197
 3528              	.L195:
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3529              		.loc 4 138 0
 3530 1618 4889C7   		movq	%rax, %rdi
 3531 161b E8000000 		call	__cxa_begin_catch
 3531      00
 3532              	.LEHB85:
 3533 1620 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3533      00
 3534 1625 488B08   		movq	(%rax), %rcx
 3535 1628 488D45C0 		leaq	-64(%rbp), %rax
 3536 162c BA8A0000 		movl	$138, %edx
 3536      00
 3537 1631 4889CE   		movq	%rcx, %rsi
 3538 1634 4889C7   		movq	%rax, %rdi
 3539 1637 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3539      00
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3540              		.loc 4 138 0 is_stmt 0 discriminator 11
 3541 163c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3541      00
 3542 1641 488B00   		movq	(%rax), %rax
 3543 1644 488D4DC0 		leaq	-64(%rbp), %rcx
 3544 1648 BA000000 		movl	$.LC49, %edx
 3544      00
 3545 164d 4889CE   		movq	%rcx, %rsi
 3546 1650 4889C7   		movq	%rax, %rdi
 3547 1653 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3547      00
 3548              	.LEHE85:
 3549              	.LEHB86:
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3550              		.loc 4 138 0 discriminator 15
 3551 1658 E8000000 		call	__cxa_end_catch
 3551      00
 3552              	.LEHE86:
 3553              		.loc 4 139 0 is_stmt 1 discriminator 15
 3554 165d EB13     		jmp	.L197
 3555              	.L196:
 3556 165f 4889C3   		movq	%rax, %rbx
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3557              		.loc 4 138 0
 3558 1662 E8000000 		call	__cxa_end_catch
 3558      00
 3559 1667 4889D8   		movq	%rbx, %rax
 3560 166a 4889C7   		movq	%rax, %rdi
 3561              	.LEHB87:
 3562 166d E8000000 		call	_Unwind_Resume
 3562      00
 3563              	.LEHE87:
 3564              	.L197:
 3565              		.loc 4 139 0
 3566 1672 90       		nop
 3567 1673 488B45E8 		movq	-24(%rbp), %rax
 3568 1677 64483304 		xorq	%fs:40, %rax
 3568      25280000 
 3568      00
 3569 1680 7405     		je	.L194
 3570 1682 E8000000 		call	__stack_chk_fail
 3570      00
 3571              	.L194:
 3572 1687 4883C448 		addq	$72, %rsp
 3573 168b 5B       		popq	%rbx
 3574 168c 5D       		popq	%rbp
 3575              		.cfi_def_cfa 7, 8
 3576 168d C3       		ret
 3577              		.cfi_endproc
 3578              	.LFE1409:
 3579              		.section	.gcc_except_table
 3580              		.align 4
 3581              	.LLSDA1409:
 3582 0264 FF       		.byte	0xff
 3583 0265 03       		.byte	0x3
 3584 0266 1D       		.uleb128 .LLSDATT1409-.LLSDATTD1409
 3585              	.LLSDATTD1409:
 3586 0267 01       		.byte	0x1
 3587 0268 13       		.uleb128 .LLSDACSE1409-.LLSDACSB1409
 3588              	.LLSDACSB1409:
 3589 0269 3C       		.uleb128 .LEHB84-.LFB1409
 3590 026a 38       		.uleb128 .LEHE84-.LEHB84
 3591 026b 76       		.uleb128 .L195-.LFB1409
 3592 026c 01       		.uleb128 0x1
 3593 026d 7E       		.uleb128 .LEHB85-.LFB1409
 3594 026e 38       		.uleb128 .LEHE85-.LEHB85
 3595 026f BD01     		.uleb128 .L196-.LFB1409
 3596 0271 00       		.uleb128 0
 3597 0272 B601     		.uleb128 .LEHB86-.LFB1409
 3598 0274 05       		.uleb128 .LEHE86-.LEHB86
 3599 0275 00       		.uleb128 0
 3600 0276 00       		.uleb128 0
 3601 0277 CB01     		.uleb128 .LEHB87-.LFB1409
 3602 0279 05       		.uleb128 .LEHE87-.LEHB87
 3603 027a 00       		.uleb128 0
 3604 027b 00       		.uleb128 0
 3605              	.LLSDACSE1409:
 3606 027c 01       		.byte	0x1
 3607 027d 00       		.byte	0
 3608 027e 0000     		.align 4
 3609 0280 00000000 		.long	0
 3610              	
 3611              	.LLSDATT1409:
 3612              		.text
 3614              		.align 2
 3616              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC2ERKN8UnitTest11TestDetailsE:
 3617              	.LFB1411:
 140:TestUnitTest++.cpp **** 
 141:TestUnitTest++.cpp **** TEST_FIXTURE(SimpleFixture, OnlyOneFixtureAliveAtATime)
 3618              		.loc 4 141 0
 3619              		.cfi_startproc
 3620 168e 55       		pushq	%rbp
 3621              		.cfi_def_cfa_offset 16
 3622              		.cfi_offset 6, -16
 3623 168f 4889E5   		movq	%rsp, %rbp
 3624              		.cfi_def_cfa_register 6
 3625 1692 4883EC10 		subq	$16, %rsp
 3626 1696 48897DF8 		movq	%rdi, -8(%rbp)
 3627 169a 488975F0 		movq	%rsi, -16(%rbp)
 3628              	.LBB47:
 3629              		.loc 4 141 0
 3630 169e 488B45F8 		movq	-8(%rbp), %rax
 3631 16a2 4889C7   		movq	%rax, %rdi
 3632 16a5 E83AFBFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev
 3632      FF
 3633 16aa 488B45F8 		movq	-8(%rbp), %rax
 3634 16ae 488B55F0 		movq	-16(%rbp), %rdx
 3635 16b2 488910   		movq	%rdx, (%rax)
 3636              	.LBE47:
 3637 16b5 90       		nop
 3638 16b6 C9       		leave
 3639              		.cfi_def_cfa 7, 8
 3640 16b7 C3       		ret
 3641              		.cfi_endproc
 3642              	.LFE1411:
 3644              		.set	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC1ERKN8UnitTest11TestDetailsE
 3645              		.section	.rodata
 3646              	.LC50:
 3647 051f 4F6E6C79 		.string	"OnlyOneFixtureAliveAtATime"
 3647      4F6E6546 
 3647      69787475 
 3647      7265416C 
 3647      69766541 
 3648              		.text
 3649              		.align 2
 3651              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC2Ev:
 3652              	.LFB1414:
 3653              		.loc 4 141 0
 3654              		.cfi_startproc
 3655 16b8 55       		pushq	%rbp
 3656              		.cfi_def_cfa_offset 16
 3657              		.cfi_offset 6, -16
 3658 16b9 4889E5   		movq	%rsp, %rbp
 3659              		.cfi_def_cfa_register 6
 3660 16bc 4883EC10 		subq	$16, %rsp
 3661 16c0 48897DF8 		movq	%rdi, -8(%rbp)
 3662              	.LBB48:
 3663              		.loc 4 141 0
 3664 16c4 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3664      00
 3665 16c9 4889C2   		movq	%rax, %rdx
 3666 16cc 488B45F8 		movq	-8(%rbp), %rax
 3667 16d0 41B88D00 		movl	$141, %r8d
 3667      0000
 3668 16d6 B9000000 		movl	$.LC1, %ecx
 3668      00
 3669 16db BE000000 		movl	$.LC50, %esi
 3669      00
 3670 16e0 4889C7   		movq	%rax, %rdi
 3671 16e3 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3671      00
 3672 16e8 BA000000 		movl	$_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE+16, %edx
 3672      00
 3673 16ed 488B45F8 		movq	-8(%rbp), %rax
 3674 16f1 488910   		movq	%rdx, (%rax)
 3675              	.LBE48:
 3676 16f4 90       		nop
 3677 16f5 C9       		leave
 3678              		.cfi_def_cfa 7, 8
 3679 16f6 C3       		ret
 3680              		.cfi_endproc
 3681              	.LFE1414:
 3683              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC1Ev,_ZN12_GLOBAL__N_143TestSim
 3684              		.local	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE
 3685              		.comm	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE,56,32
 3686              		.local	_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE
 3687              		.comm	_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE,1,1
 3688 16f7 90       		.align 2
 3690              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD2Ev:
 3691              	.LFB1418:
 3692              		.loc 4 141 0
 3693              		.cfi_startproc
 3694 16f8 55       		pushq	%rbp
 3695              		.cfi_def_cfa_offset 16
 3696              		.cfi_offset 6, -16
 3697 16f9 4889E5   		movq	%rsp, %rbp
 3698              		.cfi_def_cfa_register 6
 3699 16fc 4883EC08 		subq	$8, %rsp
 3700 1700 48897DF8 		movq	%rdi, -8(%rbp)
 3701              	.LBB49:
 3702              		.loc 4 141 0
 3703 1704 488B45F8 		movq	-8(%rbp), %rax
 3704 1708 4889C7   		movq	%rax, %rdi
 3705 170b E8EEFAFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev
 3705      FF
 3706              	.LBE49:
 3707 1710 90       		nop
 3708 1711 C9       		leave
 3709              		.cfi_def_cfa 7, 8
 3710 1712 C3       		ret
 3711              		.cfi_endproc
 3712              	.LFE1418:
 3714              		.set	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD1Ev,_ZN12_GLOBAL__N_145Simpl
 3715 1713 90       		.align 2
 3717              	_ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv:
 3718              	.LFB1416:
 3719              		.loc 4 141 0
 3720              		.cfi_startproc
 3721              		.cfi_personality 0x3,__gxx_personality_v0
 3722              		.cfi_lsda 0x3,.LLSDA1416
 3723 1714 55       		pushq	%rbp
 3724              		.cfi_def_cfa_offset 16
 3725              		.cfi_offset 6, -16
 3726 1715 4889E5   		movq	%rsp, %rbp
 3727              		.cfi_def_cfa_register 6
 3728 1718 4154     		pushq	%r12
 3729 171a 53       		pushq	%rbx
 3730 171b 4881ECF0 		subq	$496, %rsp
 3730      010000
 3731              		.cfi_offset 12, -24
 3732              		.cfi_offset 3, -32
 3733 1722 4889BD08 		movq	%rdi, -504(%rbp)
 3733      FEFFFF
 3734              		.loc 4 141 0
 3735 1729 64488B04 		movq	%fs:40, %rax
 3735      25280000 
 3735      00
 3736 1732 488945E8 		movq	%rax, -24(%rbp)
 3737 1736 31C0     		xorl	%eax, %eax
 3738 1738 C6851FFE 		movb	$0, -481(%rbp)
 3738      FFFF00
 3739              	.LBB50:
 3740 173f 488B8508 		movq	-504(%rbp), %rax
 3740      FEFFFF
 3741 1746 488D5008 		leaq	8(%rax), %rdx
 3742 174a 488D8530 		leaq	-464(%rbp), %rax
 3742      FEFFFF
 3743 1751 4889D6   		movq	%rdx, %rsi
 3744 1754 4889C7   		movq	%rax, %rdi
 3745 1757 E832FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC1ERKN8UnitTest11TestDetailsE
 3745      FF
 3746 175c C6851FFE 		movb	$1, -481(%rbp)
 3746      FFFF01
 3747 1763 488B8508 		movq	-504(%rbp), %rax
 3747      FEFFFF
 3748 176a 488D5008 		leaq	8(%rax), %rdx
 3749 176e 488D8530 		leaq	-464(%rbp), %rax
 3749      FEFFFF
 3750 1775 4889D6   		movq	%rdx, %rsi
 3751 1778 4889C7   		movq	%rax, %rdi
 3752              	.LEHB88:
 3753 177b E86C0700 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvR
 3753      00
 3754              	.LEHE88:
 3755              		.loc 4 141 0 is_stmt 0 discriminator 2
 3756 1780 488D8530 		leaq	-464(%rbp), %rax
 3756      FEFFFF
 3757 1787 4889C7   		movq	%rax, %rdi
 3758 178a E869FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD1Ev
 3758      FF
 3759              	.LBE50:
 3760 178f E9640200 		jmp	.L201
 3760      00
 3761              	.L214:
 3762 1794 4989C4   		movq	%rax, %r12
 3763 1797 4889D3   		movq	%rdx, %rbx
 3764              	.LBB51:
 3765              		.loc 4 141 0
 3766 179a 488D8530 		leaq	-464(%rbp), %rax
 3766      FEFFFF
 3767 17a1 4889C7   		movq	%rax, %rdi
 3768 17a4 E84FFFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD1Ev
 3768      FF
 3769 17a9 4C89E0   		movq	%r12, %rax
 3770 17ac 4889DA   		movq	%rbx, %rdx
 3771 17af 4883FA01 		cmpq	$1, %rdx
 3772 17b3 740F     		je	.L204
 3773 17b5 4883FA02 		cmpq	$2, %rdx
 3774 17b9 0F84A700 		je	.L205
 3774      0000
 3775 17bf E94B0100 		jmp	.L219
 3775      00
 3776              	.L204:
 3777              	.LBE51:
 3778              	.LBB52:
 3779 17c4 4889C7   		movq	%rax, %rdi
 3780 17c7 E8000000 		call	__cxa_begin_catch
 3780      00
 3781 17cc 48898520 		movq	%rax, -480(%rbp)
 3781      FEFFFF
 3782 17d3 488B8520 		movq	-480(%rbp), %rax
 3782      FEFFFF
 3783 17da 488B00   		movq	(%rax), %rax
 3784 17dd 4883C010 		addq	$16, %rax
 3785 17e1 488B00   		movq	(%rax), %rax
 3786 17e4 488B9520 		movq	-480(%rbp), %rdx
 3786      FEFFFF
 3787 17eb 4889D7   		movq	%rdx, %rdi
 3788 17ee FFD0     		call	*%rax
 3789 17f0 4889C3   		movq	%rax, %rbx
 3790 17f3 488B8520 		movq	-480(%rbp), %rax
 3790      FEFFFF
 3791 17fa 4889C7   		movq	%rax, %rdi
 3792              	.LEHB89:
 3793 17fd E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3793      00
 3794 1802 4189C4   		movl	%eax, %r12d
 3795 1805 488B8520 		movq	-480(%rbp), %rax
 3795      FEFFFF
 3796 180c 4889C7   		movq	%rax, %rdi
 3797 180f E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3797      00
 3798              		.loc 4 141 0 discriminator 4
 3799 1814 4889C1   		movq	%rax, %rcx
 3800 1817 488B8508 		movq	-504(%rbp), %rax
 3800      FEFFFF
 3801 181e 488B5008 		movq	8(%rax), %rdx
 3802 1822 488B8508 		movq	-504(%rbp), %rax
 3802      FEFFFF
 3803 1829 488B7010 		movq	16(%rax), %rsi
 3804 182d 488D8530 		leaq	-464(%rbp), %rax
 3804      FEFFFF
 3805 1834 4589E0   		movl	%r12d, %r8d
 3806 1837 4889C7   		movq	%rax, %rdi
 3807 183a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3807      00
 3808              		.loc 4 141 0 discriminator 8
 3809 183f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3809      00
 3810 1844 488B00   		movq	(%rax), %rax
 3811 1847 488D8D30 		leaq	-464(%rbp), %rcx
 3811      FEFFFF
 3812 184e 4889DA   		movq	%rbx, %rdx
 3813 1851 4889CE   		movq	%rcx, %rsi
 3814 1854 4889C7   		movq	%rax, %rdi
 3815 1857 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3815      00
 3816              	.LEHE89:
 3817              		.loc 4 141 0 discriminator 12
 3818 185c E8000000 		call	__cxa_end_catch
 3818      00
 3819              	.LBE52:
 3820 1861 E9920100 		jmp	.L201
 3820      00
 3821              	.L205:
 3822              	.LBB53:
 3823              		.loc 4 141 0
 3824 1866 4889C7   		movq	%rax, %rdi
 3825 1869 E8000000 		call	__cxa_begin_catch
 3825      00
 3826 186e 48898528 		movq	%rax, -472(%rbp)
 3826      FEFFFF
 3827              	.LBB54:
 3828 1875 488D8550 		leaq	-432(%rbp), %rax
 3828      FEFFFF
 3829 187c 4889C7   		movq	%rax, %rdi
 3830              	.LEHB90:
 3831 187f E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3831      00
 3832              	.LEHE90:
 3833              		.loc 4 141 0 discriminator 14
 3834 1884 488B8528 		movq	-472(%rbp), %rax
 3834      FEFFFF
 3835 188b 488B00   		movq	(%rax), %rax
 3836 188e 4883C010 		addq	$16, %rax
 3837 1892 488B00   		movq	(%rax), %rax
 3838 1895 488B9528 		movq	-472(%rbp), %rdx
 3838      FEFFFF
 3839 189c 4889D7   		movq	%rdx, %rdi
 3840 189f FFD0     		call	*%rax
 3841 18a1 4889C3   		movq	%rax, %rbx
 3842 18a4 488D8550 		leaq	-432(%rbp), %rax
 3842      FEFFFF
 3843 18ab BE000000 		movl	$.LC45, %esi
 3843      00
 3844 18b0 4889C7   		movq	%rax, %rdi
 3845              	.LEHB91:
 3846 18b3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3846      00
 3847 18b8 4889DE   		movq	%rbx, %rsi
 3848 18bb 4889C7   		movq	%rax, %rdi
 3849 18be E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3849      00
 3850              		.loc 4 141 0 discriminator 18
 3851 18c3 488D8550 		leaq	-432(%rbp), %rax
 3851      FEFFFF
 3852 18ca 4889C7   		movq	%rax, %rdi
 3853 18cd E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3853      00
 3854 18d2 4989C4   		movq	%rax, %r12
 3855 18d5 488B8508 		movq	-504(%rbp), %rax
 3855      FEFFFF
 3856 18dc 488D5808 		leaq	8(%rax), %rbx
 3857 18e0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3857      00
 3858              		.loc 4 141 0 discriminator 20
 3859 18e5 488B00   		movq	(%rax), %rax
 3860 18e8 4C89E2   		movq	%r12, %rdx
 3861 18eb 4889DE   		movq	%rbx, %rsi
 3862 18ee 4889C7   		movq	%rax, %rdi
 3863 18f1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3863      00
 3864              	.LEHE91:
 3865              		.loc 4 141 0 discriminator 24
 3866 18f6 488D8550 		leaq	-432(%rbp), %rax
 3866      FEFFFF
 3867 18fd 4889C7   		movq	%rax, %rdi
 3868              	.LEHB92:
 3869 1900 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3869      00
 3870              	.LEHE92:
 3871              	.LBE54:
 3872              		.loc 4 141 0 discriminator 25
 3873 1905 E8000000 		call	__cxa_end_catch
 3873      00
 3874              	.LBE53:
 3875 190a E9E90000 		jmp	.L201
 3875      00
 3876              	.L219:
 3877              		.loc 4 141 0
 3878 190f 4889C7   		movq	%rax, %rdi
 3879 1912 E8000000 		call	__cxa_begin_catch
 3879      00
 3880 1917 80BD1FFE 		cmpb	$0, -481(%rbp)
 3880      FFFF00
 3881 191e 7443     		je	.L207
 3882              		.loc 4 141 0 discriminator 27
 3883 1920 488B8508 		movq	-504(%rbp), %rax
 3883      FEFFFF
 3884 1927 488D4808 		leaq	8(%rax), %rcx
 3885 192b 488D8530 		leaq	-464(%rbp), %rax
 3885      FEFFFF
 3886 1932 BA8D0000 		movl	$141, %edx
 3886      00
 3887 1937 4889CE   		movq	%rcx, %rsi
 3888 193a 4889C7   		movq	%rax, %rdi
 3889              	.LEHB93:
 3890 193d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3890      00
 3891              		.loc 4 141 0 discriminator 30
 3892 1942 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3892      00
 3893 1947 488B00   		movq	(%rax), %rax
 3894 194a 488D8D30 		leaq	-464(%rbp), %rcx
 3894      FEFFFF
 3895 1951 BA000000 		movl	$.LC46, %edx
 3895      00
 3896 1956 4889CE   		movq	%rcx, %rsi
 3897 1959 4889C7   		movq	%rax, %rdi
 3898 195c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3898      00
 3899 1961 EB41     		jmp	.L208
 3900              	.L207:
 3901              		.loc 4 141 0 discriminator 28
 3902 1963 488B8508 		movq	-504(%rbp), %rax
 3902      FEFFFF
 3903 196a 488D4808 		leaq	8(%rax), %rcx
 3904 196e 488D8530 		leaq	-464(%rbp), %rax
 3904      FEFFFF
 3905 1975 BA8D0000 		movl	$141, %edx
 3905      00
 3906 197a 4889CE   		movq	%rcx, %rsi
 3907 197d 4889C7   		movq	%rax, %rdi
 3908 1980 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3908      00
 3909              		.loc 4 141 0 discriminator 37
 3910 1985 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3910      00
 3911 198a 488B00   		movq	(%rax), %rax
 3912 198d 488D8D30 		leaq	-464(%rbp), %rcx
 3912      FEFFFF
 3913 1994 BA000000 		movl	$.LC47, %edx
 3913      00
 3914 1999 4889CE   		movq	%rcx, %rsi
 3915 199c 4889C7   		movq	%rax, %rdi
 3916 199f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3916      00
 3917              	.LEHE93:
 3918              	.L208:
 3919              	.LEHB94:
 3920              		.loc 4 141 0 discriminator 42
 3921 19a4 E8000000 		call	__cxa_end_catch
 3921      00
 3922 19a9 EB4D     		jmp	.L201
 3923              	.L215:
 3924 19ab 4889C3   		movq	%rax, %rbx
 3925              	.LBB56:
 3926              		.loc 4 141 0
 3927 19ae E8000000 		call	__cxa_end_catch
 3927      00
 3928 19b3 4889D8   		movq	%rbx, %rax
 3929 19b6 4889C7   		movq	%rax, %rdi
 3930 19b9 E8000000 		call	_Unwind_Resume
 3930      00
 3931              	.LEHE94:
 3932              	.L217:
 3933 19be 4889C3   		movq	%rax, %rbx
 3934              	.LBE56:
 3935              	.LBB57:
 3936              	.LBB55:
 3937 19c1 488D8550 		leaq	-432(%rbp), %rax
 3937      FEFFFF
 3938 19c8 4889C7   		movq	%rax, %rdi
 3939 19cb E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3939      00
 3940 19d0 EB03     		jmp	.L211
 3941              	.L216:
 3942 19d2 4889C3   		movq	%rax, %rbx
 3943              	.L211:
 3944              	.LBE55:
 3945 19d5 E8000000 		call	__cxa_end_catch
 3945      00
 3946 19da 4889D8   		movq	%rbx, %rax
 3947 19dd 4889C7   		movq	%rax, %rdi
 3948              	.LEHB95:
 3949 19e0 E8000000 		call	_Unwind_Resume
 3949      00
 3950              	.LEHE95:
 3951              	.L218:
 3952 19e5 4889C3   		movq	%rax, %rbx
 3953              	.LBE57:
 3954 19e8 E8000000 		call	__cxa_end_catch
 3954      00
 3955 19ed 4889D8   		movq	%rbx, %rax
 3956 19f0 4889C7   		movq	%rax, %rdi
 3957              	.LEHB96:
 3958 19f3 E8000000 		call	_Unwind_Resume
 3958      00
 3959              	.LEHE96:
 3960              	.L201:
 3961 19f8 488B45E8 		movq	-24(%rbp), %rax
 3962 19fc 64483304 		xorq	%fs:40, %rax
 3962      25280000 
 3962      00
 3963 1a05 7405     		je	.L213
 3964 1a07 E8000000 		call	__stack_chk_fail
 3964      00
 3965              	.L213:
 3966 1a0c 4881C4F0 		addq	$496, %rsp
 3966      010000
 3967 1a13 5B       		popq	%rbx
 3968 1a14 415C     		popq	%r12
 3969 1a16 5D       		popq	%rbp
 3970              		.cfi_def_cfa 7, 8
 3971 1a17 C3       		ret
 3972              		.cfi_endproc
 3973              	.LFE1416:
 3974              		.section	.gcc_except_table
 3975              		.align 4
 3976              	.LLSDA1416:
 3977 0284 FF       		.byte	0xff
 3978 0285 03       		.byte	0x3
 3979 0286 49       		.uleb128 .LLSDATT1416-.LLSDATTD1416
 3980              	.LLSDATTD1416:
 3981 0287 01       		.byte	0x1
 3982 0288 32       		.uleb128 .LLSDACSE1416-.LLSDACSB1416
 3983              	.LLSDACSB1416:
 3984 0289 67       		.uleb128 .LEHB88-.LFB1416
 3985 028a 05       		.uleb128 .LEHE88-.LEHB88
 3986 028b 8001     		.uleb128 .L214-.LFB1416
 3987 028d 07       		.uleb128 0x7
 3988 028e E901     		.uleb128 .LEHB89-.LFB1416
 3989 0290 5F       		.uleb128 .LEHE89-.LEHB89
 3990 0291 9705     		.uleb128 .L215-.LFB1416
 3991 0293 00       		.uleb128 0
 3992 0294 EB02     		.uleb128 .LEHB90-.LFB1416
 3993 0296 05       		.uleb128 .LEHE90-.LEHB90
 3994 0297 BE05     		.uleb128 .L216-.LFB1416
 3995 0299 00       		.uleb128 0
 3996 029a 9F03     		.uleb128 .LEHB91-.LFB1416
 3997 029c 43       		.uleb128 .LEHE91-.LEHB91
 3998 029d AA05     		.uleb128 .L217-.LFB1416
 3999 029f 00       		.uleb128 0
 4000 02a0 EC03     		.uleb128 .LEHB92-.LFB1416
 4001 02a2 05       		.uleb128 .LEHE92-.LEHB92
 4002 02a3 BE05     		.uleb128 .L216-.LFB1416
 4003 02a5 00       		.uleb128 0
 4004 02a6 A904     		.uleb128 .LEHB93-.LFB1416
 4005 02a8 67       		.uleb128 .LEHE93-.LEHB93
 4006 02a9 D105     		.uleb128 .L218-.LFB1416
 4007 02ab 00       		.uleb128 0
 4008 02ac 9005     		.uleb128 .LEHB94-.LFB1416
 4009 02ae 1A       		.uleb128 .LEHE94-.LEHB94
 4010 02af 00       		.uleb128 0
 4011 02b0 00       		.uleb128 0
 4012 02b1 CC05     		.uleb128 .LEHB95-.LFB1416
 4013 02b3 05       		.uleb128 .LEHE95-.LEHB95
 4014 02b4 00       		.uleb128 0
 4015 02b5 00       		.uleb128 0
 4016 02b6 DF05     		.uleb128 .LEHB96-.LFB1416
 4017 02b8 05       		.uleb128 .LEHE96-.LEHB96
 4018 02b9 00       		.uleb128 0
 4019 02ba 00       		.uleb128 0
 4020              	.LLSDACSE1416:
 4021 02bb 03       		.byte	0x3
 4022 02bc 00       		.byte	0
 4023 02bd 02       		.byte	0x2
 4024 02be 7D       		.byte	0x7d
 4025 02bf 01       		.byte	0x1
 4026 02c0 7D       		.byte	0x7d
 4027 02c1 00       		.byte	0
 4028 02c2 7D       		.byte	0x7d
 4029 02c3 00       		.align 4
 4030 02c4 00000000 		.long	0
 4031              	
 4032 02c8 00000000 		.long	_ZTISt9exception
 4033 02cc 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 4034              	.LLSDATT1416:
 4035              		.text
 4037              		.section	.rodata
 4038 053a 00000000 		.align 8
 4038      0000
 4039              	.LC51:
 4040 0540 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, SimpleFixture::instanceCount)"
 4040      6E646C65 
 4040      64206578 
 4040      63657074 
 4040      696F6E20 
 4041              		.text
 4042              		.align 2
 4044              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv:
 4045              	.LFB1420:
 142:TestUnitTest++.cpp **** {
 4046              		.loc 4 142 0 is_stmt 1
 4047              		.cfi_startproc
 4048              		.cfi_personality 0x3,__gxx_personality_v0
 4049              		.cfi_lsda 0x3,.LLSDA1420
 4050 1a18 55       		pushq	%rbp
 4051              		.cfi_def_cfa_offset 16
 4052              		.cfi_offset 6, -16
 4053 1a19 4889E5   		movq	%rsp, %rbp
 4054              		.cfi_def_cfa_register 6
 4055 1a1c 53       		pushq	%rbx
 4056 1a1d 4883EC58 		subq	$88, %rsp
 4057              		.cfi_offset 3, -24
 4058 1a21 48897DA8 		movq	%rdi, -88(%rbp)
 4059              		.loc 4 142 0
 4060 1a25 64488B04 		movq	%fs:40, %rax
 4060      25280000 
 4060      00
 4061 1a2e 488945E8 		movq	%rax, -24(%rbp)
 4062 1a32 31C0     		xorl	%eax, %eax
 4063              	.LEHB97:
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4064              		.loc 4 143 0
 4065 1a34 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4065      00
 4066 1a39 488B08   		movq	(%rax), %rcx
 4067 1a3c 488D45C0 		leaq	-64(%rbp), %rax
 4068 1a40 BA8F0000 		movl	$143, %edx
 4068      00
 4069 1a45 4889CE   		movq	%rcx, %rsi
 4070 1a48 4889C7   		movq	%rax, %rdi
 4071 1a4b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4071      00
 4072              	.LEHE97:
 4073              		.loc 4 143 0 is_stmt 0 discriminator 2
 4074 1a50 C745BC01 		movl	$1, -68(%rbp)
 4074      000000
 4075              	.LEHB98:
 4076 1a57 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4076      00
 4077 1a5c 488B00   		movq	(%rax), %rax
 4078 1a5f 488D55C0 		leaq	-64(%rbp), %rdx
 4079 1a63 488D75BC 		leaq	-68(%rbp), %rsi
 4080 1a67 4889D1   		movq	%rdx, %rcx
 4081 1a6a BA000000 		movl	$_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE, %edx
 4081      00
 4082 1a6f 4889C7   		movq	%rax, %rdi
 4083 1a72 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4083      00
 4084              	.LEHE98:
 144:TestUnitTest++.cpp **** }
 4085              		.loc 4 144 0 is_stmt 1
 4086 1a77 EB5C     		jmp	.L220
 4087              	.L227:
 4088 1a79 EB00     		jmp	.L222
 4089              	.L226:
 4090              	.L222:
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4091              		.loc 4 143 0
 4092 1a7b 4889C7   		movq	%rax, %rdi
 4093 1a7e E8000000 		call	__cxa_begin_catch
 4093      00
 4094              	.LEHB99:
 4095 1a83 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4095      00
 4096 1a88 488B08   		movq	(%rax), %rcx
 4097 1a8b 488D45C0 		leaq	-64(%rbp), %rax
 4098 1a8f BA8F0000 		movl	$143, %edx
 4098      00
 4099 1a94 4889CE   		movq	%rcx, %rsi
 4100 1a97 4889C7   		movq	%rax, %rdi
 4101 1a9a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4101      00
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4102              		.loc 4 143 0 is_stmt 0 discriminator 10
 4103 1a9f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4103      00
 4104 1aa4 488B00   		movq	(%rax), %rax
 4105 1aa7 488D4DC0 		leaq	-64(%rbp), %rcx
 4106 1aab BA000000 		movl	$.LC51, %edx
 4106      00
 4107 1ab0 4889CE   		movq	%rcx, %rsi
 4108 1ab3 4889C7   		movq	%rax, %rdi
 4109 1ab6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4109      00
 4110              	.LEHE99:
 4111              	.LEHB100:
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4112              		.loc 4 143 0 discriminator 14
 4113 1abb E8000000 		call	__cxa_end_catch
 4113      00
 4114              	.LEHE100:
 4115              		.loc 4 144 0 is_stmt 1 discriminator 14
 4116 1ac0 EB13     		jmp	.L220
 4117              	.L228:
 4118 1ac2 4889C3   		movq	%rax, %rbx
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4119              		.loc 4 143 0
 4120 1ac5 E8000000 		call	__cxa_end_catch
 4120      00
 4121 1aca 4889D8   		movq	%rbx, %rax
 4122 1acd 4889C7   		movq	%rax, %rdi
 4123              	.LEHB101:
 4124 1ad0 E8000000 		call	_Unwind_Resume
 4124      00
 4125              	.LEHE101:
 4126              	.L220:
 4127              		.loc 4 144 0
 4128 1ad5 488B45E8 		movq	-24(%rbp), %rax
 4129 1ad9 64483304 		xorq	%fs:40, %rax
 4129      25280000 
 4129      00
 4130 1ae2 7405     		je	.L225
 4131 1ae4 E8000000 		call	__stack_chk_fail
 4131      00
 4132              	.L225:
 4133 1ae9 4883C458 		addq	$88, %rsp
 4134 1aed 5B       		popq	%rbx
 4135 1aee 5D       		popq	%rbp
 4136              		.cfi_def_cfa 7, 8
 4137 1aef C3       		ret
 4138              		.cfi_endproc
 4139              	.LFE1420:
 4140              		.section	.gcc_except_table
 4141              		.align 4
 4142              	.LLSDA1420:
 4143 02d0 FF       		.byte	0xff
 4144 02d1 03       		.byte	0x3
 4145 02d2 21       		.uleb128 .LLSDATT1420-.LLSDATTD1420
 4146              	.LLSDATTD1420:
 4147 02d3 01       		.byte	0x1
 4148 02d4 17       		.uleb128 .LLSDACSE1420-.LLSDACSB1420
 4149              	.LLSDACSB1420:
 4150 02d5 1C       		.uleb128 .LEHB97-.LFB1420
 4151 02d6 1C       		.uleb128 .LEHE97-.LEHB97
 4152 02d7 63       		.uleb128 .L226-.LFB1420
 4153 02d8 01       		.uleb128 0x1
 4154 02d9 3F       		.uleb128 .LEHB98-.LFB1420
 4155 02da 20       		.uleb128 .LEHE98-.LEHB98
 4156 02db 61       		.uleb128 .L227-.LFB1420
 4157 02dc 03       		.uleb128 0x3
 4158 02dd 6B       		.uleb128 .LEHB99-.LFB1420
 4159 02de 38       		.uleb128 .LEHE99-.LEHB99
 4160 02df AA01     		.uleb128 .L228-.LFB1420
 4161 02e1 00       		.uleb128 0
 4162 02e2 A301     		.uleb128 .LEHB100-.LFB1420
 4163 02e4 05       		.uleb128 .LEHE100-.LEHB100
 4164 02e5 00       		.uleb128 0
 4165 02e6 00       		.uleb128 0
 4166 02e7 B801     		.uleb128 .LEHB101-.LFB1420
 4167 02e9 05       		.uleb128 .LEHE101-.LEHB101
 4168 02ea 00       		.uleb128 0
 4169 02eb 00       		.uleb128 0
 4170              	.LLSDACSE1420:
 4171 02ec 01       		.byte	0x1
 4172 02ed 00       		.byte	0
 4173 02ee 00       		.byte	0
 4174 02ef 7D       		.byte	0x7d
 4175              		.align 4
 4176 02f0 00000000 		.long	0
 4177              	
 4178              	.LLSDATT1420:
 4179              		.text
 4182              	_ZN12_GLOBAL__N_19CheckBoolEb:
 4183              	.LFB1421:
 145:TestUnitTest++.cpp **** 
 146:TestUnitTest++.cpp **** void CheckBool(const bool b)
 147:TestUnitTest++.cpp **** {
 4184              		.loc 4 147 0
 4185              		.cfi_startproc
 4186              		.cfi_personality 0x3,__gxx_personality_v0
 4187              		.cfi_lsda 0x3,.LLSDA1421
 4188 1af0 55       		pushq	%rbp
 4189              		.cfi_def_cfa_offset 16
 4190              		.cfi_offset 6, -16
 4191 1af1 4889E5   		movq	%rsp, %rbp
 4192              		.cfi_def_cfa_register 6
 4193 1af4 53       		pushq	%rbx
 4194 1af5 4883EC48 		subq	$72, %rsp
 4195              		.cfi_offset 3, -24
 4196 1af9 89F8     		movl	%edi, %eax
 4197 1afb 8845BC   		movb	%al, -68(%rbp)
 4198              		.loc 4 147 0
 4199 1afe 64488B04 		movq	%fs:40, %rax
 4199      25280000 
 4199      00
 4200 1b07 488945E8 		movq	%rax, -24(%rbp)
 4201 1b0b 31C0     		xorl	%eax, %eax
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4202              		.loc 4 148 0
 4203 1b0d 0FB645BC 		movzbl	-68(%rbp), %eax
 4204 1b11 89C7     		movl	%eax, %edi
 4205 1b13 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 4205      00
 4206 1b18 83F001   		xorl	$1, %eax
 4207 1b1b 84C0     		testb	%al, %al
 4208 1b1d 0F849400 		je	.L236
 4208      0000
 4209              	.LEHB102:
 4210              		.loc 4 148 0 is_stmt 0 discriminator 1
 4211 1b23 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4211      00
 4212 1b28 488B08   		movq	(%rax), %rcx
 4213 1b2b 488D45C0 		leaq	-64(%rbp), %rax
 4214 1b2f BA940000 		movl	$148, %edx
 4214      00
 4215 1b34 4889CE   		movq	%rcx, %rsi
 4216 1b37 4889C7   		movq	%rax, %rdi
 4217 1b3a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4217      00
 4218              		.loc 4 148 0 discriminator 3
 4219 1b3f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4219      00
 4220 1b44 488B00   		movq	(%rax), %rax
 4221 1b47 488D4DC0 		leaq	-64(%rbp), %rcx
 4222 1b4b BA000000 		movl	$.LC3, %edx
 4222      00
 4223 1b50 4889CE   		movq	%rcx, %rsi
 4224 1b53 4889C7   		movq	%rax, %rdi
 4225 1b56 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4225      00
 4226              	.LEHE102:
 149:TestUnitTest++.cpp **** }
 4227              		.loc 4 149 0 is_stmt 1
 4228 1b5b EB5A     		jmp	.L236
 4229              	.L234:
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4230              		.loc 4 148 0
 4231 1b5d 4889C7   		movq	%rax, %rdi
 4232 1b60 E8000000 		call	__cxa_begin_catch
 4232      00
 4233              	.LEHB103:
 4234 1b65 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4234      00
 4235 1b6a 488B08   		movq	(%rax), %rcx
 4236 1b6d 488D45C0 		leaq	-64(%rbp), %rax
 4237 1b71 BA940000 		movl	$148, %edx
 4237      00
 4238 1b76 4889CE   		movq	%rcx, %rsi
 4239 1b79 4889C7   		movq	%rax, %rdi
 4240 1b7c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4240      00
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4241              		.loc 4 148 0 is_stmt 0 discriminator 11
 4242 1b81 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4242      00
 4243 1b86 488B00   		movq	(%rax), %rax
 4244 1b89 488D4DC0 		leaq	-64(%rbp), %rcx
 4245 1b8d BA000000 		movl	$.LC4, %edx
 4245      00
 4246 1b92 4889CE   		movq	%rcx, %rsi
 4247 1b95 4889C7   		movq	%rax, %rdi
 4248 1b98 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4248      00
 4249              	.LEHE103:
 4250              	.LEHB104:
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4251              		.loc 4 148 0 discriminator 15
 4252 1b9d E8000000 		call	__cxa_end_catch
 4252      00
 4253              	.LEHE104:
 4254              		.loc 4 149 0 is_stmt 1 discriminator 15
 4255 1ba2 EB13     		jmp	.L236
 4256              	.L235:
 4257 1ba4 4889C3   		movq	%rax, %rbx
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4258              		.loc 4 148 0
 4259 1ba7 E8000000 		call	__cxa_end_catch
 4259      00
 4260 1bac 4889D8   		movq	%rbx, %rax
 4261 1baf 4889C7   		movq	%rax, %rdi
 4262              	.LEHB105:
 4263 1bb2 E8000000 		call	_Unwind_Resume
 4263      00
 4264              	.LEHE105:
 4265              	.L236:
 4266              		.loc 4 149 0
 4267 1bb7 90       		nop
 4268 1bb8 488B45E8 		movq	-24(%rbp), %rax
 4269 1bbc 64483304 		xorq	%fs:40, %rax
 4269      25280000 
 4269      00
 4270 1bc5 7405     		je	.L233
 4271 1bc7 E8000000 		call	__stack_chk_fail
 4271      00
 4272              	.L233:
 4273 1bcc 4883C448 		addq	$72, %rsp
 4274 1bd0 5B       		popq	%rbx
 4275 1bd1 5D       		popq	%rbp
 4276              		.cfi_def_cfa 7, 8
 4277 1bd2 C3       		ret
 4278              		.cfi_endproc
 4279              	.LFE1421:
 4280              		.section	.gcc_except_table
 4281              		.align 4
 4282              	.LLSDA1421:
 4283 02f4 FF       		.byte	0xff
 4284 02f5 03       		.byte	0x3
 4285 02f6 1D       		.uleb128 .LLSDATT1421-.LLSDATTD1421
 4286              	.LLSDATTD1421:
 4287 02f7 01       		.byte	0x1
 4288 02f8 13       		.uleb128 .LLSDACSE1421-.LLSDACSB1421
 4289              	.LLSDACSB1421:
 4290 02f9 33       		.uleb128 .LEHB102-.LFB1421
 4291 02fa 38       		.uleb128 .LEHE102-.LEHB102
 4292 02fb 6D       		.uleb128 .L234-.LFB1421
 4293 02fc 01       		.uleb128 0x1
 4294 02fd 75       		.uleb128 .LEHB103-.LFB1421
 4295 02fe 38       		.uleb128 .LEHE103-.LEHB103
 4296 02ff B401     		.uleb128 .L235-.LFB1421
 4297 0301 00       		.uleb128 0
 4298 0302 AD01     		.uleb128 .LEHB104-.LFB1421
 4299 0304 05       		.uleb128 .LEHE104-.LEHB104
 4300 0305 00       		.uleb128 0
 4301 0306 00       		.uleb128 0
 4302 0307 C201     		.uleb128 .LEHB105-.LFB1421
 4303 0309 05       		.uleb128 .LEHE105-.LEHB105
 4304 030a 00       		.uleb128 0
 4305 030b 00       		.uleb128 0
 4306              	.LLSDACSE1421:
 4307 030c 01       		.byte	0x1
 4308 030d 00       		.byte	0
 4309 030e 0000     		.align 4
 4310 0310 00000000 		.long	0
 4311              	
 4312              	.LLSDATT1421:
 4313              		.text
 4315              		.section	.rodata
 4316 0584 00000000 		.align 8
 4317              	.LC52:
 4318 0588 43616E43 		.string	"CanCallCHECKOutsideOfTestFunction"
 4318      616C6C43 
 4318      4845434B 
 4318      4F757473 
 4318      6964654F 
 4319              		.text
 4320 1bd3 90       		.align 2
 4322              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC2Ev:
 4323              	.LFB1423:
 150:TestUnitTest++.cpp **** 
 151:TestUnitTest++.cpp **** TEST(CanCallCHECKOutsideOfTestFunction)
 4324              		.loc 4 151 0
 4325              		.cfi_startproc
 4326 1bd4 55       		pushq	%rbp
 4327              		.cfi_def_cfa_offset 16
 4328              		.cfi_offset 6, -16
 4329 1bd5 4889E5   		movq	%rsp, %rbp
 4330              		.cfi_def_cfa_register 6
 4331 1bd8 4883EC10 		subq	$16, %rsp
 4332 1bdc 48897DF8 		movq	%rdi, -8(%rbp)
 4333              	.LBB58:
 4334              		.loc 4 151 0
 4335 1be0 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4335      00
 4336 1be5 4889C2   		movq	%rax, %rdx
 4337 1be8 488B45F8 		movq	-8(%rbp), %rax
 4338 1bec 41B89700 		movl	$151, %r8d
 4338      0000
 4339 1bf2 B9000000 		movl	$.LC1, %ecx
 4339      00
 4340 1bf7 BE000000 		movl	$.LC52, %esi
 4340      00
 4341 1bfc 4889C7   		movq	%rax, %rdi
 4342 1bff E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 4342      00
 4343 1c04 BA000000 		movl	$_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE+16, %edx
 4343      00
 4344 1c09 488B45F8 		movq	-8(%rbp), %rax
 4345 1c0d 488910   		movq	%rdx, (%rax)
 4346              	.LBE58:
 4347 1c10 90       		nop
 4348 1c11 C9       		leave
 4349              		.cfi_def_cfa 7, 8
 4350 1c12 C3       		ret
 4351              		.cfi_endproc
 4352              	.LFE1423:
 4354              		.set	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC1Ev,_ZN12_GLOBAL__N_137TestCanCallCH
 4355              		.local	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE
 4356              		.comm	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE,56,32
 4357              		.local	_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE
 4358              		.comm	_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE,1,1
 4359 1c13 90       		.align 2
 4361              	_ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv:
 4362              	.LFB1425:
 152:TestUnitTest++.cpp **** {
 4363              		.loc 4 152 0
 4364              		.cfi_startproc
 4365 1c14 55       		pushq	%rbp
 4366              		.cfi_def_cfa_offset 16
 4367              		.cfi_offset 6, -16
 4368 1c15 4889E5   		movq	%rsp, %rbp
 4369              		.cfi_def_cfa_register 6
 4370 1c18 4883EC10 		subq	$16, %rsp
 4371 1c1c 48897DF8 		movq	%rdi, -8(%rbp)
 153:TestUnitTest++.cpp **** 	CheckBool(true);
 4372              		.loc 4 153 0
 4373 1c20 BF010000 		movl	$1, %edi
 4373      00
 4374 1c25 E8C6FEFF 		call	_ZN12_GLOBAL__N_19CheckBoolEb
 4374      FF
 154:TestUnitTest++.cpp **** }
 4375              		.loc 4 154 0
 4376 1c2a 90       		nop
 4377 1c2b C9       		leave
 4378              		.cfi_def_cfa 7, 8
 4379 1c2c C3       		ret
 4380              		.cfi_endproc
 4381              	.LFE1425:
 4383              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 4384              		.weak	_ZN8UnitTest5CheckIbEEbT_
 4386              	_ZN8UnitTest5CheckIbEEbT_:
 4387              	.LFB1454:
 4388              		.file 5 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
 4389              		.loc 5 12 0
 4390              		.cfi_startproc
 4391 0000 55       		pushq	%rbp
 4392              		.cfi_def_cfa_offset 16
 4393              		.cfi_offset 6, -16
 4394 0001 4889E5   		movq	%rsp, %rbp
 4395              		.cfi_def_cfa_register 6
 4396 0004 89F8     		movl	%edi, %eax
 4397 0006 8845FC   		movb	%al, -4(%rbp)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
 4398              		.loc 5 14 0
 4399 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** }
 4400              		.loc 5 15 0
 4401 000d 5D       		popq	%rbp
 4402              		.cfi_def_cfa 7, 8
 4403 000e C3       		ret
 4404              		.cfi_endproc
 4405              	.LFE1454:
 4407              		.section	.text._ZN8UnitTest5CheckIPvEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIPvEEbT_,comdat
 4408              		.weak	_ZN8UnitTest5CheckIPvEEbT_
 4410              	_ZN8UnitTest5CheckIPvEEbT_:
 4411              	.LFB1455:
  12:../Checks.h   **** {
 4412              		.loc 5 12 0
 4413              		.cfi_startproc
 4414 0000 55       		pushq	%rbp
 4415              		.cfi_def_cfa_offset 16
 4416              		.cfi_offset 6, -16
 4417 0001 4889E5   		movq	%rsp, %rbp
 4418              		.cfi_def_cfa_register 6
 4419 0004 48897DF8 		movq	%rdi, -8(%rbp)
  14:../Checks.h   **** }
 4420              		.loc 5 14 0
 4421 0008 48837DF8 		cmpq	$0, -8(%rbp)
 4421      00
 4422 000d 0F95C0   		setne	%al
 4423              		.loc 5 15 0
 4424 0010 5D       		popq	%rbp
 4425              		.cfi_def_cfa 7, 8
 4426 0011 C3       		ret
 4427              		.cfi_endproc
 4428              	.LFE1455:
 4430              		.section	.rodata
 4431              	.LC53:
 4432 05aa 45787065 		.string	"Expected "
 4432      63746564 
 4432      2000
 4433              	.LC54:
 4434 05b4 20627574 		.string	" but was "
 4434      20776173 
 4434      2000
 4435              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 4436              		.weak	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4438              	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 4439              	.LFB1456:
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 4440              		.loc 5 19 0
 4441              		.cfi_startproc
 4442              		.cfi_personality 0x3,__gxx_personality_v0
 4443              		.cfi_lsda 0x3,.LLSDA1456
 4444 0000 55       		pushq	%rbp
 4445              		.cfi_def_cfa_offset 16
 4446              		.cfi_offset 6, -16
 4447 0001 4889E5   		movq	%rsp, %rbp
 4448              		.cfi_def_cfa_register 6
 4449 0004 4154     		pushq	%r12
 4450 0006 53       		pushq	%rbx
 4451 0007 4881ECC0 		subq	$448, %rsp
 4451      010000
 4452              		.cfi_offset 12, -24
 4453              		.cfi_offset 3, -32
 4454 000e 4889BD48 		movq	%rdi, -440(%rbp)
 4454      FEFFFF
 4455 0015 4889B540 		movq	%rsi, -448(%rbp)
 4455      FEFFFF
 4456 001c 48899538 		movq	%rdx, -456(%rbp)
 4456      FEFFFF
 4457 0023 48898D30 		movq	%rcx, -464(%rbp)
 4457      FEFFFF
 4458              		.loc 5 19 0
 4459 002a 64488B04 		movq	%fs:40, %rax
 4459      25280000 
 4459      00
 4460 0033 488945E8 		movq	%rax, -24(%rbp)
 4461 0037 31C0     		xorl	%eax, %eax
 4462              	.LBB59:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 4463              		.loc 5 21 0
 4464 0039 488B8540 		movq	-448(%rbp), %rax
 4464      FEFFFF
 4465 0040 8B10     		movl	(%rax), %edx
 4466 0042 488B8538 		movq	-456(%rbp), %rax
 4466      FEFFFF
 4467 0049 8B00     		movl	(%rax), %eax
 4468 004b 39C2     		cmpl	%eax, %edx
 4469 004d 0F84B100 		je	.L248
 4469      0000
 4470              	.LBB60:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 4471              		.loc 5 23 0
 4472 0053 488D8550 		leaq	-432(%rbp), %rax
 4472      FEFFFF
 4473 005a 4889C7   		movq	%rax, %rdi
 4474              	.LEHB106:
 4475 005d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4475      00
 4476              	.LEHE106:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4477              		.loc 5 24 0
 4478 0062 488B8538 		movq	-456(%rbp), %rax
 4478      FEFFFF
 4479 0069 8B18     		movl	(%rax), %ebx
 4480 006b 488B8540 		movq	-448(%rbp), %rax
 4480      FEFFFF
 4481 0072 448B20   		movl	(%rax), %r12d
 4482 0075 488D8550 		leaq	-432(%rbp), %rax
 4482      FEFFFF
 4483 007c BE000000 		movl	$.LC53, %esi
 4483      00
 4484 0081 4889C7   		movq	%rax, %rdi
 4485              	.LEHB107:
 4486 0084 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4486      00
 4487 0089 4489E6   		movl	%r12d, %esi
 4488 008c 4889C7   		movq	%rax, %rdi
 4489 008f E8000000 		call	_ZNSolsEi
 4489      00
 4490              		.loc 5 24 0 is_stmt 0 discriminator 1
 4491 0094 BE000000 		movl	$.LC54, %esi
 4491      00
 4492 0099 4889C7   		movq	%rax, %rdi
 4493 009c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4493      00
 4494              		.loc 5 24 0 discriminator 2
 4495 00a1 89DE     		movl	%ebx, %esi
 4496 00a3 4889C7   		movq	%rax, %rdi
 4497 00a6 E8000000 		call	_ZNSolsEi
 4497      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 4498              		.loc 5 26 0 is_stmt 1
 4499 00ab 488D8550 		leaq	-432(%rbp), %rax
 4499      FEFFFF
 4500 00b2 4889C7   		movq	%rax, %rdi
 4501 00b5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4501      00
 4502 00ba 4889C2   		movq	%rax, %rdx
 4503 00bd 488B8D30 		movq	-464(%rbp), %rcx
 4503      FEFFFF
 4504 00c4 488B8548 		movq	-440(%rbp), %rax
 4504      FEFFFF
 4505 00cb 4889CE   		movq	%rcx, %rsi
 4506 00ce 4889C7   		movq	%rax, %rdi
 4507 00d1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4507      00
 4508              	.LEHE107:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4509              		.loc 5 23 0
 4510 00d6 488D8550 		leaq	-432(%rbp), %rax
 4510      FEFFFF
 4511 00dd 4889C7   		movq	%rax, %rdi
 4512              	.LEHB108:
 4513 00e0 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4513      00
 4514              	.LEHE108:
 4515              	.LBE60:
 4516              	.LBE59:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 4517              		.loc 5 28 0
 4518 00e5 EB1D     		jmp	.L248
 4519              	.L247:
 4520 00e7 4889C3   		movq	%rax, %rbx
 4521              	.LBB62:
 4522              	.LBB61:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4523              		.loc 5 23 0
 4524 00ea 488D8550 		leaq	-432(%rbp), %rax
 4524      FEFFFF
 4525 00f1 4889C7   		movq	%rax, %rdi
 4526 00f4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4526      00
 4527 00f9 4889D8   		movq	%rbx, %rax
 4528 00fc 4889C7   		movq	%rax, %rdi
 4529              	.LEHB109:
 4530 00ff E8000000 		call	_Unwind_Resume
 4530      00
 4531              	.LEHE109:
 4532              	.L248:
 4533              	.LBE61:
 4534              	.LBE62:
 4535              		.loc 5 28 0
 4536 0104 90       		nop
 4537 0105 488B45E8 		movq	-24(%rbp), %rax
 4538 0109 64483304 		xorq	%fs:40, %rax
 4538      25280000 
 4538      00
 4539 0112 7405     		je	.L246
 4540 0114 E8000000 		call	__stack_chk_fail
 4540      00
 4541              	.L246:
 4542 0119 4881C4C0 		addq	$448, %rsp
 4542      010000
 4543 0120 5B       		popq	%rbx
 4544 0121 415C     		popq	%r12
 4545 0123 5D       		popq	%rbp
 4546              		.cfi_def_cfa 7, 8
 4547 0124 C3       		ret
 4548              		.cfi_endproc
 4549              	.LFE1456:
 4550              		.section	.gcc_except_table
 4551              	.LLSDA1456:
 4552 0314 FF       		.byte	0xff
 4553 0315 FF       		.byte	0xff
 4554 0316 01       		.byte	0x1
 4555 0317 14       		.uleb128 .LLSDACSE1456-.LLSDACSB1456
 4556              	.LLSDACSB1456:
 4557 0318 5D       		.uleb128 .LEHB106-.LFB1456
 4558 0319 05       		.uleb128 .LEHE106-.LEHB106
 4559 031a 00       		.uleb128 0
 4560 031b 00       		.uleb128 0
 4561 031c 8401     		.uleb128 .LEHB107-.LFB1456
 4562 031e 52       		.uleb128 .LEHE107-.LEHB107
 4563 031f E701     		.uleb128 .L247-.LFB1456
 4564 0321 00       		.uleb128 0
 4565 0322 E001     		.uleb128 .LEHB108-.LFB1456
 4566 0324 05       		.uleb128 .LEHE108-.LEHB108
 4567 0325 00       		.uleb128 0
 4568 0326 00       		.uleb128 0
 4569 0327 FF01     		.uleb128 .LEHB109-.LFB1456
 4570 0329 05       		.uleb128 .LEHE109-.LEHB109
 4571 032a 00       		.uleb128 0
 4572 032b 00       		.uleb128 0
 4573              	.LLSDACSE1456:
 4574              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 4576              		.section	.text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 4577              		.weak	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4579              	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 4580              	.LFB1457:
  19:../Checks.h   **** {
 4581              		.loc 5 19 0
 4582              		.cfi_startproc
 4583              		.cfi_personality 0x3,__gxx_personality_v0
 4584              		.cfi_lsda 0x3,.LLSDA1457
 4585 0000 55       		pushq	%rbp
 4586              		.cfi_def_cfa_offset 16
 4587              		.cfi_offset 6, -16
 4588 0001 4889E5   		movq	%rsp, %rbp
 4589              		.cfi_def_cfa_register 6
 4590 0004 4154     		pushq	%r12
 4591 0006 53       		pushq	%rbx
 4592 0007 4881ECC0 		subq	$448, %rsp
 4592      010000
 4593              		.cfi_offset 12, -24
 4594              		.cfi_offset 3, -32
 4595 000e 4889BD48 		movq	%rdi, -440(%rbp)
 4595      FEFFFF
 4596 0015 4889B540 		movq	%rsi, -448(%rbp)
 4596      FEFFFF
 4597 001c 48899538 		movq	%rdx, -456(%rbp)
 4597      FEFFFF
 4598 0023 48898D30 		movq	%rcx, -464(%rbp)
 4598      FEFFFF
  19:../Checks.h   **** {
 4599              		.loc 5 19 0
 4600 002a 64488B04 		movq	%fs:40, %rax
 4600      25280000 
 4600      00
 4601 0033 488945E8 		movq	%rax, -24(%rbp)
 4602 0037 31C0     		xorl	%eax, %eax
 4603              	.LBB63:
  21:../Checks.h   ****     {
 4604              		.loc 5 21 0
 4605 0039 488B8540 		movq	-448(%rbp), %rax
 4605      FEFFFF
 4606 0040 488B10   		movq	(%rax), %rdx
 4607 0043 488B8538 		movq	-456(%rbp), %rax
 4607      FEFFFF
 4608 004a 488B00   		movq	(%rax), %rax
 4609 004d 4839C2   		cmpq	%rax, %rdx
 4610 0050 0F84B300 		je	.L254
 4610      0000
 4611              	.LBB64:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4612              		.loc 5 23 0
 4613 0056 488D8550 		leaq	-432(%rbp), %rax
 4613      FEFFFF
 4614 005d 4889C7   		movq	%rax, %rdi
 4615              	.LEHB110:
 4616 0060 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4616      00
 4617              	.LEHE110:
  24:../Checks.h   **** 
 4618              		.loc 5 24 0
 4619 0065 488B8538 		movq	-456(%rbp), %rax
 4619      FEFFFF
 4620 006c 488B18   		movq	(%rax), %rbx
 4621 006f 488B8540 		movq	-448(%rbp), %rax
 4621      FEFFFF
 4622 0076 4C8B20   		movq	(%rax), %r12
 4623 0079 488D8550 		leaq	-432(%rbp), %rax
 4623      FEFFFF
 4624 0080 BE000000 		movl	$.LC53, %esi
 4624      00
 4625 0085 4889C7   		movq	%rax, %rdi
 4626              	.LEHB111:
 4627 0088 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4627      00
 4628 008d 4C89E6   		movq	%r12, %rsi
 4629 0090 4889C7   		movq	%rax, %rdi
 4630 0093 E8000000 		call	_ZNSolsEPKv
 4630      00
  24:../Checks.h   **** 
 4631              		.loc 5 24 0 is_stmt 0 discriminator 1
 4632 0098 BE000000 		movl	$.LC54, %esi
 4632      00
 4633 009d 4889C7   		movq	%rax, %rdi
 4634 00a0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4634      00
  24:../Checks.h   **** 
 4635              		.loc 5 24 0 discriminator 2
 4636 00a5 4889DE   		movq	%rbx, %rsi
 4637 00a8 4889C7   		movq	%rax, %rdi
 4638 00ab E8000000 		call	_ZNSolsEPKv
 4638      00
  26:../Checks.h   ****     }
 4639              		.loc 5 26 0 is_stmt 1
 4640 00b0 488D8550 		leaq	-432(%rbp), %rax
 4640      FEFFFF
 4641 00b7 4889C7   		movq	%rax, %rdi
 4642 00ba E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4642      00
 4643 00bf 4889C2   		movq	%rax, %rdx
 4644 00c2 488B8D30 		movq	-464(%rbp), %rcx
 4644      FEFFFF
 4645 00c9 488B8548 		movq	-440(%rbp), %rax
 4645      FEFFFF
 4646 00d0 4889CE   		movq	%rcx, %rsi
 4647 00d3 4889C7   		movq	%rax, %rdi
 4648 00d6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4648      00
 4649              	.LEHE111:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4650              		.loc 5 23 0
 4651 00db 488D8550 		leaq	-432(%rbp), %rax
 4651      FEFFFF
 4652 00e2 4889C7   		movq	%rax, %rdi
 4653              	.LEHB112:
 4654 00e5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4654      00
 4655              	.LEHE112:
 4656              	.LBE64:
 4657              	.LBE63:
 4658              		.loc 5 28 0
 4659 00ea EB1D     		jmp	.L254
 4660              	.L253:
 4661 00ec 4889C3   		movq	%rax, %rbx
 4662              	.LBB66:
 4663              	.LBB65:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4664              		.loc 5 23 0
 4665 00ef 488D8550 		leaq	-432(%rbp), %rax
 4665      FEFFFF
 4666 00f6 4889C7   		movq	%rax, %rdi
 4667 00f9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4667      00
 4668 00fe 4889D8   		movq	%rbx, %rax
 4669 0101 4889C7   		movq	%rax, %rdi
 4670              	.LEHB113:
 4671 0104 E8000000 		call	_Unwind_Resume
 4671      00
 4672              	.LEHE113:
 4673              	.L254:
 4674              	.LBE65:
 4675              	.LBE66:
 4676              		.loc 5 28 0
 4677 0109 90       		nop
 4678 010a 488B45E8 		movq	-24(%rbp), %rax
 4679 010e 64483304 		xorq	%fs:40, %rax
 4679      25280000 
 4679      00
 4680 0117 7405     		je	.L252
 4681 0119 E8000000 		call	__stack_chk_fail
 4681      00
 4682              	.L252:
 4683 011e 4881C4C0 		addq	$448, %rsp
 4683      010000
 4684 0125 5B       		popq	%rbx
 4685 0126 415C     		popq	%r12
 4686 0128 5D       		popq	%rbp
 4687              		.cfi_def_cfa 7, 8
 4688 0129 C3       		ret
 4689              		.cfi_endproc
 4690              	.LFE1457:
 4691              		.section	.gcc_except_table
 4692              	.LLSDA1457:
 4693 032c FF       		.byte	0xff
 4694 032d FF       		.byte	0xff
 4695 032e 01       		.byte	0x1
 4696 032f 14       		.uleb128 .LLSDACSE1457-.LLSDACSB1457
 4697              	.LLSDACSB1457:
 4698 0330 60       		.uleb128 .LEHB110-.LFB1457
 4699 0331 05       		.uleb128 .LEHE110-.LEHB110
 4700 0332 00       		.uleb128 0
 4701 0333 00       		.uleb128 0
 4702 0334 8801     		.uleb128 .LEHB111-.LFB1457
 4703 0336 53       		.uleb128 .LEHE111-.LEHB111
 4704 0337 EC01     		.uleb128 .L253-.LFB1457
 4705 0339 00       		.uleb128 0
 4706 033a E501     		.uleb128 .LEHB112-.LFB1457
 4707 033c 05       		.uleb128 .LEHE112-.LEHB112
 4708 033d 00       		.uleb128 0
 4709 033e 00       		.uleb128 0
 4710 033f 8402     		.uleb128 .LEHB113-.LFB1457
 4711 0341 05       		.uleb128 .LEHE113-.LEHB113
 4712 0342 00       		.uleb128 0
 4713 0343 00       		.uleb128 0
 4714              	.LLSDACSE1457:
 4715              		.section	.text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 4717              		.section	.rodata
 4718              	.LC55:
 4719 05be 202B2F2D 		.string	" +/- "
 4719      2000
 4720              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 4721              		.weak	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 4723              	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:
 4724              	.LFB1458:
  29:../Checks.h   **** 
  30:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:../Checks.h   **** 
  32:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:../Checks.h   **** 
  34:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:../Checks.h   **** 
  36:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:../Checks.h   **** 
  38:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  39:../Checks.h   **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:../Checks.h   **** {
  41:../Checks.h   ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:../Checks.h   **** }
  43:../Checks.h   **** 
  44:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  45:../Checks.h   **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
 4725              		.loc 5 45 0
 4726              		.cfi_startproc
 4727              		.cfi_personality 0x3,__gxx_personality_v0
 4728              		.cfi_lsda 0x3,.LLSDA1458
 4729 0000 55       		pushq	%rbp
 4730              		.cfi_def_cfa_offset 16
 4731              		.cfi_offset 6, -16
 4732 0001 4889E5   		movq	%rsp, %rbp
 4733              		.cfi_def_cfa_register 6
 4734 0004 4155     		pushq	%r13
 4735 0006 4154     		pushq	%r12
 4736 0008 53       		pushq	%rbx
 4737 0009 4881ECD8 		subq	$472, %rsp
 4737      010000
 4738              		.cfi_offset 13, -24
 4739              		.cfi_offset 12, -32
 4740              		.cfi_offset 3, -40
 4741 0010 4889BD38 		movq	%rdi, -456(%rbp)
 4741      FEFFFF
 4742 0017 4889B530 		movq	%rsi, -464(%rbp)
 4742      FEFFFF
 4743 001e 48899528 		movq	%rdx, -472(%rbp)
 4743      FEFFFF
 4744 0025 48898D20 		movq	%rcx, -480(%rbp)
 4744      FEFFFF
 4745 002c 4C898518 		movq	%r8, -488(%rbp)
 4745      FEFFFF
 4746              		.loc 5 45 0
 4747 0033 64488B04 		movq	%fs:40, %rax
 4747      25280000 
 4747      00
 4748 003c 488945D8 		movq	%rax, -40(%rbp)
 4749 0040 31C0     		xorl	%eax, %eax
 4750              	.LBB67:
  46:../Checks.h   ****                 TestDetails const& details)
  47:../Checks.h   **** {
  48:../Checks.h   ****     if (!AreClose(expected, actual, tolerance))
 4751              		.loc 5 48 0
 4752 0042 488B9520 		movq	-480(%rbp), %rdx
 4752      FEFFFF
 4753 0049 488B8D28 		movq	-472(%rbp), %rcx
 4753      FEFFFF
 4754 0050 488B8530 		movq	-464(%rbp), %rax
 4754      FEFFFF
 4755 0057 4889CE   		movq	%rcx, %rsi
 4756 005a 4889C7   		movq	%rax, %rdi
 4757 005d E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 4757      00
 4758 0062 83F001   		xorl	$1, %eax
 4759 0065 84C0     		testb	%al, %al
 4760 0067 0F84F700 		je	.L260
 4760      0000
 4761              	.LBB68:
  49:../Checks.h   ****     { 
  50:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 4762              		.loc 5 50 0
 4763 006d 488D8540 		leaq	-448(%rbp), %rax
 4763      FEFFFF
 4764 0074 4889C7   		movq	%rax, %rdi
 4765              	.LEHB114:
 4766 0077 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4766      00
 4767              	.LEHE114:
  51:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 4768              		.loc 5 51 0
 4769 007c 488B8528 		movq	-472(%rbp), %rax
 4769      FEFFFF
 4770 0083 8B18     		movl	(%rax), %ebx
 4771 0085 488B8520 		movq	-480(%rbp), %rax
 4771      FEFFFF
 4772 008c 448B20   		movl	(%rax), %r12d
 4773 008f 488B8530 		movq	-464(%rbp), %rax
 4773      FEFFFF
 4774 0096 448B28   		movl	(%rax), %r13d
 4775 0099 488D8540 		leaq	-448(%rbp), %rax
 4775      FEFFFF
 4776 00a0 BE000000 		movl	$.LC53, %esi
 4776      00
 4777 00a5 4889C7   		movq	%rax, %rdi
 4778              	.LEHB115:
 4779 00a8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4779      00
 4780 00ad 4489AD14 		movl	%r13d, -492(%rbp)
 4780      FEFFFF
 4781 00b4 F30F1085 		movss	-492(%rbp), %xmm0
 4781      14FEFFFF 
 4782 00bc 4889C7   		movq	%rax, %rdi
 4783 00bf E8000000 		call	_ZNSolsEf
 4783      00
 4784              		.loc 5 51 0 is_stmt 0 discriminator 1
 4785 00c4 BE000000 		movl	$.LC55, %esi
 4785      00
 4786 00c9 4889C7   		movq	%rax, %rdi
 4787 00cc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4787      00
 4788              		.loc 5 51 0 discriminator 2
 4789 00d1 4489A514 		movl	%r12d, -492(%rbp)
 4789      FEFFFF
 4790 00d8 F30F1085 		movss	-492(%rbp), %xmm0
 4790      14FEFFFF 
 4791 00e0 4889C7   		movq	%rax, %rdi
 4792 00e3 E8000000 		call	_ZNSolsEf
 4792      00
 4793              		.loc 5 51 0 discriminator 3
 4794 00e8 BE000000 		movl	$.LC54, %esi
 4794      00
 4795 00ed 4889C7   		movq	%rax, %rdi
 4796 00f0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4796      00
 4797              		.loc 5 51 0 discriminator 4
 4798 00f5 899D14FE 		movl	%ebx, -492(%rbp)
 4798      FFFF
 4799 00fb F30F1085 		movss	-492(%rbp), %xmm0
 4799      14FEFFFF 
 4800 0103 4889C7   		movq	%rax, %rdi
 4801 0106 E8000000 		call	_ZNSolsEf
 4801      00
  52:../Checks.h   **** 
  53:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 4802              		.loc 5 53 0 is_stmt 1
 4803 010b 488D8540 		leaq	-448(%rbp), %rax
 4803      FEFFFF
 4804 0112 4889C7   		movq	%rax, %rdi
 4805 0115 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4805      00
 4806 011a 4889C2   		movq	%rax, %rdx
 4807 011d 488B8D18 		movq	-488(%rbp), %rcx
 4807      FEFFFF
 4808 0124 488B8538 		movq	-456(%rbp), %rax
 4808      FEFFFF
 4809 012b 4889CE   		movq	%rcx, %rsi
 4810 012e 4889C7   		movq	%rax, %rdi
 4811 0131 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4811      00
 4812              	.LEHE115:
  50:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 4813              		.loc 5 50 0
 4814 0136 488D8540 		leaq	-448(%rbp), %rax
 4814      FEFFFF
 4815 013d 4889C7   		movq	%rax, %rdi
 4816              	.LEHB116:
 4817 0140 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4817      00
 4818              	.LEHE116:
 4819              	.LBE68:
 4820              	.LBE67:
  54:../Checks.h   ****     }
  55:../Checks.h   **** }
 4821              		.loc 5 55 0
 4822 0145 EB1D     		jmp	.L260
 4823              	.L259:
 4824 0147 4889C3   		movq	%rax, %rbx
 4825              	.LBB70:
 4826              	.LBB69:
  50:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 4827              		.loc 5 50 0
 4828 014a 488D8540 		leaq	-448(%rbp), %rax
 4828      FEFFFF
 4829 0151 4889C7   		movq	%rax, %rdi
 4830 0154 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4830      00
 4831 0159 4889D8   		movq	%rbx, %rax
 4832 015c 4889C7   		movq	%rax, %rdi
 4833              	.LEHB117:
 4834 015f E8000000 		call	_Unwind_Resume
 4834      00
 4835              	.LEHE117:
 4836              	.L260:
 4837              	.LBE69:
 4838              	.LBE70:
 4839              		.loc 5 55 0
 4840 0164 90       		nop
 4841 0165 488B45D8 		movq	-40(%rbp), %rax
 4842 0169 64483304 		xorq	%fs:40, %rax
 4842      25280000 
 4842      00
 4843 0172 7405     		je	.L258
 4844 0174 E8000000 		call	__stack_chk_fail
 4844      00
 4845              	.L258:
 4846 0179 4881C4D8 		addq	$472, %rsp
 4846      010000
 4847 0180 5B       		popq	%rbx
 4848 0181 415C     		popq	%r12
 4849 0183 415D     		popq	%r13
 4850 0185 5D       		popq	%rbp
 4851              		.cfi_def_cfa 7, 8
 4852 0186 C3       		ret
 4853              		.cfi_endproc
 4854              	.LFE1458:
 4855              		.section	.gcc_except_table
 4856              	.LLSDA1458:
 4857 0344 FF       		.byte	0xff
 4858 0345 FF       		.byte	0xff
 4859 0346 01       		.byte	0x1
 4860 0347 15       		.uleb128 .LLSDACSE1458-.LLSDACSB1458
 4861              	.LLSDACSB1458:
 4862 0348 77       		.uleb128 .LEHB114-.LFB1458
 4863 0349 05       		.uleb128 .LEHE114-.LEHB114
 4864 034a 00       		.uleb128 0
 4865 034b 00       		.uleb128 0
 4866 034c A801     		.uleb128 .LEHB115-.LFB1458
 4867 034e 8E01     		.uleb128 .LEHE115-.LEHB115
 4868 0350 C702     		.uleb128 .L259-.LFB1458
 4869 0352 00       		.uleb128 0
 4870 0353 C002     		.uleb128 .LEHB116-.LFB1458
 4871 0355 05       		.uleb128 .LEHE116-.LEHB116
 4872 0356 00       		.uleb128 0
 4873 0357 00       		.uleb128 0
 4874 0358 DF02     		.uleb128 .LEHB117-.LFB1458
 4875 035a 05       		.uleb128 .LEHE117-.LEHB117
 4876 035b 00       		.uleb128 0
 4877 035c 00       		.uleb128 0
 4878              	.LLSDACSE1458:
 4879              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 4881              		.section	.rodata
 4882              	.LC56:
 4883 05c4 45787065 		.string	"Expected [ "
 4883      63746564 
 4883      205B2000 
 4884              	.LC57:
 4885 05d0 2000     		.string	" "
 4886              	.LC58:
 4887 05d2 5D202B2F 		.string	"] +/- "
 4887      2D2000
 4888              	.LC59:
 4889 05d9 20627574 		.string	" but was [ "
 4889      20776173 
 4889      205B2000 
 4890              	.LC60:
 4891 05e5 5D00     		.string	"]"
 4892              		.section	.text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11Te
 4893              		.weak	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetails
 4895              	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:
 4896              	.LFB1459:
  56:../Checks.h   **** 
  57:../Checks.h   **** 
  58:../Checks.h   **** template< typename Expected, typename Actual >
  59:../Checks.h   **** void CheckArrayEqual(TestResults& results, Expected const& expected, Actual const& actual,
  60:../Checks.h   ****                 int const count, TestDetails const& details)
  61:../Checks.h   **** {
  62:../Checks.h   ****     bool equal = true;
  63:../Checks.h   ****     for (int i = 0; i < count; ++i)
  64:../Checks.h   ****         equal &= (expected[i] == actual[i]);
  65:../Checks.h   **** 
  66:../Checks.h   ****     if (!equal)
  67:../Checks.h   ****     {
  68:../Checks.h   ****         UnitTest::MemoryOutStream stream;
  69:../Checks.h   **** 
  70:../Checks.h   **** 		stream << "Expected [ ";
  71:../Checks.h   **** 
  72:../Checks.h   **** 		for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
  73:../Checks.h   ****             stream << expected[expectedIndex] << " ";
  74:../Checks.h   **** 
  75:../Checks.h   **** 		stream << "] but was [ ";
  76:../Checks.h   **** 
  77:../Checks.h   **** 		for (int actualIndex = 0; actualIndex < count; ++actualIndex)
  78:../Checks.h   ****             stream << actual[actualIndex] << " ";
  79:../Checks.h   **** 
  80:../Checks.h   **** 		stream << "]";
  81:../Checks.h   **** 
  82:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
  83:../Checks.h   ****     }
  84:../Checks.h   **** }
  85:../Checks.h   **** 
  86:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  87:../Checks.h   **** bool ArrayAreClose(Expected const& expected, Actual const& actual, int const count, Tolerance const
  88:../Checks.h   **** {
  89:../Checks.h   ****     bool equal = true;
  90:../Checks.h   ****     for (int i = 0; i < count; ++i)
  91:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
  92:../Checks.h   ****     return equal;
  93:../Checks.h   **** }
  94:../Checks.h   **** 
  95:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  96:../Checks.h   **** void CheckArrayClose(TestResults& results, Expected const& expected, Actual const& actual,
 4897              		.loc 5 96 0
 4898              		.cfi_startproc
 4899              		.cfi_personality 0x3,__gxx_personality_v0
 4900              		.cfi_lsda 0x3,.LLSDA1459
 4901 0000 55       		pushq	%rbp
 4902              		.cfi_def_cfa_offset 16
 4903              		.cfi_offset 6, -16
 4904 0001 4889E5   		movq	%rsp, %rbp
 4905              		.cfi_def_cfa_register 6
 4906 0004 53       		pushq	%rbx
 4907 0005 4881ECE8 		subq	$488, %rsp
 4907      010000
 4908              		.cfi_offset 3, -24
 4909 000c 4889BD38 		movq	%rdi, -456(%rbp)
 4909      FEFFFF
 4910 0013 4889B530 		movq	%rsi, -464(%rbp)
 4910      FEFFFF
 4911 001a 48899528 		movq	%rdx, -472(%rbp)
 4911      FEFFFF
 4912 0021 898D24FE 		movl	%ecx, -476(%rbp)
 4912      FFFF
 4913 0027 4C898518 		movq	%r8, -488(%rbp)
 4913      FEFFFF
 4914 002e 4C898D10 		movq	%r9, -496(%rbp)
 4914      FEFFFF
 4915              		.loc 5 96 0
 4916 0035 64488B04 		movq	%fs:40, %rax
 4916      25280000 
 4916      00
 4917 003e 488945E8 		movq	%rax, -24(%rbp)
 4918 0042 31C0     		xorl	%eax, %eax
  97:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
  98:../Checks.h   **** {
  99:../Checks.h   ****     bool equal = ArrayAreClose(expected, actual, count, tolerance);
 4919              		.loc 5 99 0
 4920 0044 488B8D18 		movq	-488(%rbp), %rcx
 4920      FEFFFF
 4921 004b 8B9524FE 		movl	-476(%rbp), %edx
 4921      FFFF
 4922 0051 488BB528 		movq	-472(%rbp), %rsi
 4922      FEFFFF
 4923 0058 488B8530 		movq	-464(%rbp), %rax
 4923      FEFFFF
 4924 005f 4889C7   		movq	%rax, %rdi
 4925 0062 E8000000 		call	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
 4925      00
 4926 0067 888547FE 		movb	%al, -441(%rbp)
 4926      FFFF
 4927              	.LBB71:
 100:../Checks.h   **** 
 101:../Checks.h   ****     if (!equal)
 4928              		.loc 5 101 0
 4929 006d 0FB68547 		movzbl	-441(%rbp), %eax
 4929      FEFFFF
 4930 0074 83F001   		xorl	$1, %eax
 4931 0077 84C0     		testb	%al, %al
 4932 0079 0F848C01 		je	.L270
 4932      0000
 4933              	.LBB72:
 102:../Checks.h   ****     {
 103:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 4934              		.loc 5 103 0
 4935 007f 488D8550 		leaq	-432(%rbp), %rax
 4935      FEFFFF
 4936 0086 4889C7   		movq	%rax, %rdi
 4937              	.LEHB118:
 4938 0089 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4938      00
 4939              	.LEHE118:
 104:../Checks.h   **** 
 105:../Checks.h   ****         stream << "Expected [ ";
 4940              		.loc 5 105 0
 4941 008e 488D8550 		leaq	-432(%rbp), %rax
 4941      FEFFFF
 4942 0095 BE000000 		movl	$.LC56, %esi
 4942      00
 4943 009a 4889C7   		movq	%rax, %rdi
 4944              	.LEHB119:
 4945 009d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4945      00
 4946              	.LBB73:
 106:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 4947              		.loc 5 106 0
 4948 00a2 C78548FE 		movl	$0, -440(%rbp)
 4948      FFFF0000 
 4948      0000
 4949              	.L264:
 4950              		.loc 5 106 0 is_stmt 0 discriminator 1
 4951 00ac 8B8548FE 		movl	-440(%rbp), %eax
 4951      FFFF
 4952 00b2 3B8524FE 		cmpl	-476(%rbp), %eax
 4952      FFFF
 4953 00b8 7D46     		jge	.L263
 107:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 4954              		.loc 5 107 0 is_stmt 1
 4955 00ba 488B8530 		movq	-464(%rbp), %rax
 4955      FEFFFF
 4956 00c1 8B9548FE 		movl	-440(%rbp), %edx
 4956      FFFF
 4957 00c7 4863D2   		movslq	%edx, %rdx
 4958 00ca 8B1490   		movl	(%rax,%rdx,4), %edx
 4959 00cd 488D8550 		leaq	-432(%rbp), %rax
 4959      FEFFFF
 4960 00d4 899520FE 		movl	%edx, -480(%rbp)
 4960      FFFF
 4961 00da F30F1085 		movss	-480(%rbp), %xmm0
 4961      20FEFFFF 
 4962 00e2 4889C7   		movq	%rax, %rdi
 4963 00e5 E8000000 		call	_ZNSolsEf
 4963      00
 4964 00ea BE000000 		movl	$.LC57, %esi
 4964      00
 4965 00ef 4889C7   		movq	%rax, %rdi
 4966 00f2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4966      00
 106:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 4967              		.loc 5 106 0 discriminator 2
 4968 00f7 838548FE 		addl	$1, -440(%rbp)
 4968      FFFF01
 4969 00fe EBAC     		jmp	.L264
 4970              	.L263:
 4971              	.LBE73:
 108:../Checks.h   ****         stream << "] +/- " << tolerance << " but was [ ";
 4972              		.loc 5 108 0
 4973 0100 488B8518 		movq	-488(%rbp), %rax
 4973      FEFFFF
 4974 0107 8B18     		movl	(%rax), %ebx
 4975 0109 488D8550 		leaq	-432(%rbp), %rax
 4975      FEFFFF
 4976 0110 BE000000 		movl	$.LC58, %esi
 4976      00
 4977 0115 4889C7   		movq	%rax, %rdi
 4978 0118 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4978      00
 4979 011d 899D20FE 		movl	%ebx, -480(%rbp)
 4979      FFFF
 4980 0123 F30F1085 		movss	-480(%rbp), %xmm0
 4980      20FEFFFF 
 4981 012b 4889C7   		movq	%rax, %rdi
 4982 012e E8000000 		call	_ZNSolsEf
 4982      00
 4983              		.loc 5 108 0 is_stmt 0 discriminator 1
 4984 0133 BE000000 		movl	$.LC59, %esi
 4984      00
 4985 0138 4889C7   		movq	%rax, %rdi
 4986 013b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4986      00
 4987              	.LBB74:
 109:../Checks.h   **** 
 110:../Checks.h   **** 		for (int actualIndex = 0; actualIndex < count; ++actualIndex)
 4988              		.loc 5 110 0 is_stmt 1
 4989 0140 C7854CFE 		movl	$0, -436(%rbp)
 4989      FFFF0000 
 4989      0000
 4990              	.L266:
 4991              		.loc 5 110 0 is_stmt 0 discriminator 1
 4992 014a 8B854CFE 		movl	-436(%rbp), %eax
 4992      FFFF
 4993 0150 3B8524FE 		cmpl	-476(%rbp), %eax
 4993      FFFF
 4994 0156 7D46     		jge	.L265
 111:../Checks.h   ****             stream << actual[actualIndex] << " ";
 4995              		.loc 5 111 0 is_stmt 1
 4996 0158 488B8528 		movq	-472(%rbp), %rax
 4996      FEFFFF
 4997 015f 8B954CFE 		movl	-436(%rbp), %edx
 4997      FFFF
 4998 0165 4863D2   		movslq	%edx, %rdx
 4999 0168 8B1490   		movl	(%rax,%rdx,4), %edx
 5000 016b 488D8550 		leaq	-432(%rbp), %rax
 5000      FEFFFF
 5001 0172 899520FE 		movl	%edx, -480(%rbp)
 5001      FFFF
 5002 0178 F30F1085 		movss	-480(%rbp), %xmm0
 5002      20FEFFFF 
 5003 0180 4889C7   		movq	%rax, %rdi
 5004 0183 E8000000 		call	_ZNSolsEf
 5004      00
 5005 0188 BE000000 		movl	$.LC57, %esi
 5005      00
 5006 018d 4889C7   		movq	%rax, %rdi
 5007 0190 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5007      00
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5008              		.loc 5 110 0 discriminator 2
 5009 0195 83854CFE 		addl	$1, -436(%rbp)
 5009      FFFF01
 5010 019c EBAC     		jmp	.L266
 5011              	.L265:
 5012              	.LBE74:
 112:../Checks.h   ****         stream << "]";
 5013              		.loc 5 112 0
 5014 019e 488D8550 		leaq	-432(%rbp), %rax
 5014      FEFFFF
 5015 01a5 BE000000 		movl	$.LC60, %esi
 5015      00
 5016 01aa 4889C7   		movq	%rax, %rdi
 5017 01ad E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5017      00
 113:../Checks.h   **** 
 114:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 5018              		.loc 5 114 0
 5019 01b2 488D8550 		leaq	-432(%rbp), %rax
 5019      FEFFFF
 5020 01b9 4889C7   		movq	%rax, %rdi
 5021 01bc E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5021      00
 5022 01c1 4889C2   		movq	%rax, %rdx
 5023 01c4 488B8D10 		movq	-496(%rbp), %rcx
 5023      FEFFFF
 5024 01cb 488B8538 		movq	-456(%rbp), %rax
 5024      FEFFFF
 5025 01d2 4889CE   		movq	%rcx, %rsi
 5026 01d5 4889C7   		movq	%rax, %rdi
 5027 01d8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5027      00
 5028              	.LEHE119:
 103:../Checks.h   **** 
 5029              		.loc 5 103 0
 5030 01dd 488D8550 		leaq	-432(%rbp), %rax
 5030      FEFFFF
 5031 01e4 4889C7   		movq	%rax, %rdi
 5032              	.LEHB120:
 5033 01e7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5033      00
 5034              	.LEHE120:
 5035              	.LBE72:
 5036              	.LBE71:
 115:../Checks.h   ****     }
 116:../Checks.h   **** }
 5037              		.loc 5 116 0
 5038 01ec EB1D     		jmp	.L270
 5039              	.L269:
 5040 01ee 4889C3   		movq	%rax, %rbx
 5041              	.LBB76:
 5042              	.LBB75:
 103:../Checks.h   **** 
 5043              		.loc 5 103 0
 5044 01f1 488D8550 		leaq	-432(%rbp), %rax
 5044      FEFFFF
 5045 01f8 4889C7   		movq	%rax, %rdi
 5046 01fb E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5046      00
 5047 0200 4889D8   		movq	%rbx, %rax
 5048 0203 4889C7   		movq	%rax, %rdi
 5049              	.LEHB121:
 5050 0206 E8000000 		call	_Unwind_Resume
 5050      00
 5051              	.LEHE121:
 5052              	.L270:
 5053              	.LBE75:
 5054              	.LBE76:
 5055              		.loc 5 116 0
 5056 020b 90       		nop
 5057 020c 488B45E8 		movq	-24(%rbp), %rax
 5058 0210 64483304 		xorq	%fs:40, %rax
 5058      25280000 
 5058      00
 5059 0219 7405     		je	.L268
 5060 021b E8000000 		call	__stack_chk_fail
 5060      00
 5061              	.L268:
 5062 0220 4881C4E8 		addq	$488, %rsp
 5062      010000
 5063 0227 5B       		popq	%rbx
 5064 0228 5D       		popq	%rbp
 5065              		.cfi_def_cfa 7, 8
 5066 0229 C3       		ret
 5067              		.cfi_endproc
 5068              	.LFE1459:
 5069              		.section	.gcc_except_table
 5070              	.LLSDA1459:
 5071 035d FF       		.byte	0xff
 5072 035e FF       		.byte	0xff
 5073 035f 01       		.byte	0x1
 5074 0360 16       		.uleb128 .LLSDACSE1459-.LLSDACSB1459
 5075              	.LLSDACSB1459:
 5076 0361 8901     		.uleb128 .LEHB118-.LFB1459
 5077 0363 05       		.uleb128 .LEHE118-.LEHB118
 5078 0364 00       		.uleb128 0
 5079 0365 00       		.uleb128 0
 5080 0366 9D01     		.uleb128 .LEHB119-.LFB1459
 5081 0368 C002     		.uleb128 .LEHE119-.LEHB119
 5082 036a EE03     		.uleb128 .L269-.LFB1459
 5083 036c 00       		.uleb128 0
 5084 036d E703     		.uleb128 .LEHB120-.LFB1459
 5085 036f 05       		.uleb128 .LEHE120-.LEHB120
 5086 0370 00       		.uleb128 0
 5087 0371 00       		.uleb128 0
 5088 0372 8604     		.uleb128 .LEHB121-.LFB1459
 5089 0374 05       		.uleb128 .LEHE121-.LEHB121
 5090 0375 00       		.uleb128 0
 5091 0376 00       		.uleb128 0
 5092              	.LLSDACSE1459:
 5093              		.section	.text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11Te
 5095              		.section	.text._ZNSaIfEC2Ev,"axG",@progbits,_ZNSaIfEC5Ev,comdat
 5096              		.align 2
 5097              		.weak	_ZNSaIfEC2Ev
 5099              	_ZNSaIfEC2Ev:
 5100              	.LFB1461:
 5101              		.file 6 "/usr/include/c++/5/bits/allocator.h"
   1:/usr/include/c++/5/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/5/bits/allocator.h **** 
   3:/usr/include/c++/5/bits/allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/allocator.h **** //
   5:/usr/include/c++/5/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/allocator.h **** // any later version.
  10:/usr/include/c++/5/bits/allocator.h **** 
  11:/usr/include/c++/5/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/allocator.h **** 
  16:/usr/include/c++/5/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/allocator.h **** 
  20:/usr/include/c++/5/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/allocator.h **** 
  25:/usr/include/c++/5/bits/allocator.h **** /*
  26:/usr/include/c++/5/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/5/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/5/bits/allocator.h ****  *
  29:/usr/include/c++/5/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/5/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/5/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/5/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/5/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/5/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/5/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/5/bits/allocator.h ****  */
  37:/usr/include/c++/5/bits/allocator.h **** 
  38:/usr/include/c++/5/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/5/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/5/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/5/bits/allocator.h ****  */
  42:/usr/include/c++/5/bits/allocator.h **** 
  43:/usr/include/c++/5/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/5/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/5/bits/allocator.h **** 
  46:/usr/include/c++/5/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/5/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/5/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/5/bits/allocator.h **** #endif
  51:/usr/include/c++/5/bits/allocator.h **** 
  52:/usr/include/c++/5/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/5/bits/allocator.h **** {
  54:/usr/include/c++/5/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/5/bits/allocator.h **** 
  56:/usr/include/c++/5/bits/allocator.h ****   /**
  57:/usr/include/c++/5/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/5/bits/allocator.h ****    *  @{
  59:/usr/include/c++/5/bits/allocator.h ****    */
  60:/usr/include/c++/5/bits/allocator.h **** 
  61:/usr/include/c++/5/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/5/bits/allocator.h ****   template<>
  63:/usr/include/c++/5/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/5/bits/allocator.h ****     {
  65:/usr/include/c++/5/bits/allocator.h ****     public:
  66:/usr/include/c++/5/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/5/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/5/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/5/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/5/bits/allocator.h **** 
  72:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/5/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/5/bits/allocator.h **** 
  76:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/5/bits/allocator.h **** #endif
  81:/usr/include/c++/5/bits/allocator.h ****     };
  82:/usr/include/c++/5/bits/allocator.h **** 
  83:/usr/include/c++/5/bits/allocator.h ****   /**
  84:/usr/include/c++/5/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/5/bits/allocator.h ****    *
  86:/usr/include/c++/5/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
  87:/usr/include/c++/5/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/5/bits/allocator.h ****    *
  89:/usr/include/c++/5/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/5/bits/allocator.h ****    */
  91:/usr/include/c++/5/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/5/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/5/bits/allocator.h ****     {
  94:/usr/include/c++/5/bits/allocator.h ****    public:
  95:/usr/include/c++/5/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp        value_type;
 102:/usr/include/c++/5/bits/allocator.h **** 
 103:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/5/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/5/bits/allocator.h **** 
 107:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/5/bits/allocator.h **** #endif
 112:/usr/include/c++/5/bits/allocator.h **** 
 113:/usr/include/c++/5/bits/allocator.h ****       allocator() throw() { }
 5102              		.loc 6 113 0
 5103              		.cfi_startproc
 5104 0000 55       		pushq	%rbp
 5105              		.cfi_def_cfa_offset 16
 5106              		.cfi_offset 6, -16
 5107 0001 4889E5   		movq	%rsp, %rbp
 5108              		.cfi_def_cfa_register 6
 5109 0004 4883EC10 		subq	$16, %rsp
 5110 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5111              	.LBB77:
 5112              		.loc 6 113 0
 5113 000c 488B45F8 		movq	-8(%rbp), %rax
 5114 0010 4889C7   		movq	%rax, %rdi
 5115 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 5115      00
 5116              	.LBE77:
 5117 0018 90       		nop
 5118 0019 C9       		leave
 5119              		.cfi_def_cfa 7, 8
 5120 001a C3       		ret
 5121              		.cfi_endproc
 5122              	.LFE1461:
 5124              		.weak	_ZNSaIfEC1Ev
 5125              		.set	_ZNSaIfEC1Ev,_ZNSaIfEC2Ev
 5126              		.section	.text._ZNSaIfED2Ev,"axG",@progbits,_ZNSaIfED5Ev,comdat
 5127              		.align 2
 5128              		.weak	_ZNSaIfED2Ev
 5130              	_ZNSaIfED2Ev:
 5131              	.LFB1464:
 114:/usr/include/c++/5/bits/allocator.h **** 
 115:/usr/include/c++/5/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/5/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/5/bits/allocator.h **** 
 118:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/5/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/5/bits/allocator.h **** 
 121:/usr/include/c++/5/bits/allocator.h ****       ~allocator() throw() { }
 5132              		.loc 6 121 0
 5133              		.cfi_startproc
 5134 0000 55       		pushq	%rbp
 5135              		.cfi_def_cfa_offset 16
 5136              		.cfi_offset 6, -16
 5137 0001 4889E5   		movq	%rsp, %rbp
 5138              		.cfi_def_cfa_register 6
 5139 0004 4883EC10 		subq	$16, %rsp
 5140 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5141              	.LBB78:
 5142              		.loc 6 121 0
 5143 000c 488B45F8 		movq	-8(%rbp), %rax
 5144 0010 4889C7   		movq	%rax, %rdi
 5145 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfED2Ev
 5145      00
 5146              	.LBE78:
 5147 0018 90       		nop
 5148 0019 C9       		leave
 5149              		.cfi_def_cfa 7, 8
 5150 001a C3       		ret
 5151              		.cfi_endproc
 5152              	.LFE1464:
 5154              		.weak	_ZNSaIfED1Ev
 5155              		.set	_ZNSaIfED1Ev,_ZNSaIfED2Ev
 5156              		.section	.text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_,"axG",@progbits,_ZNSt6vectorIfSaIfEEC5EmRKfRKS0_,c
 5157              		.align 2
 5158              		.weak	_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
 5160              	_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:
 5161              	.LFB1467:
 5162              		.file 7 "/usr/include/c++/5/bits/stl_vector.h"
   1:/usr/include/c++/5/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_vector.h **** 
   3:/usr/include/c++/5/bits/stl_vector.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_vector.h **** //
   5:/usr/include/c++/5/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_vector.h **** 
  11:/usr/include/c++/5/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_vector.h **** 
  16:/usr/include/c++/5/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_vector.h **** 
  20:/usr/include/c++/5/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_vector.h **** 
  25:/usr/include/c++/5/bits/stl_vector.h **** /*
  26:/usr/include/c++/5/bits/stl_vector.h ****  *
  27:/usr/include/c++/5/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_vector.h ****  *
  30:/usr/include/c++/5/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_vector.h ****  *
  38:/usr/include/c++/5/bits/stl_vector.h ****  *
  39:/usr/include/c++/5/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/5/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_vector.h ****  *
  42:/usr/include/c++/5/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/5/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_vector.h ****  */
  50:/usr/include/c++/5/bits/stl_vector.h **** 
  51:/usr/include/c++/5/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/5/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/5/bits/stl_vector.h ****  */
  55:/usr/include/c++/5/bits/stl_vector.h **** 
  56:/usr/include/c++/5/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/5/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/5/bits/stl_vector.h **** 
  59:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/5/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/5/bits/stl_vector.h **** #endif
  65:/usr/include/c++/5/bits/stl_vector.h **** 
  66:/usr/include/c++/5/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/5/bits/stl_vector.h **** {
  68:/usr/include/c++/5/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/5/bits/stl_vector.h **** 
  70:/usr/include/c++/5/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/5/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/5/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/5/bits/stl_vector.h ****     {
  74:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/5/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/5/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/5/bits/stl_vector.h **** 
  79:/usr/include/c++/5/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/5/bits/stl_vector.h ****       {
  82:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/5/bits/stl_vector.h **** 
  86:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  88:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/5/bits/stl_vector.h **** 
  90:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  92:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/5/bits/stl_vector.h **** 
  94:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
  98:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/5/bits/stl_vector.h **** #endif
 100:/usr/include/c++/5/bits/stl_vector.h **** 
 101:/usr/include/c++/5/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:/usr/include/c++/5/bits/stl_vector.h **** 	{
 103:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/5/bits/stl_vector.h **** 	}
 107:/usr/include/c++/5/bits/stl_vector.h ****       };
 108:/usr/include/c++/5/bits/stl_vector.h ****       
 109:/usr/include/c++/5/bits/stl_vector.h ****     public:
 110:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/5/bits/stl_vector.h **** 
 112:/usr/include/c++/5/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/5/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/5/bits/stl_vector.h **** 
 116:/usr/include/c++/5/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/5/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/5/bits/stl_vector.h **** 
 120:/usr/include/c++/5/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/5/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/5/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/5/bits/stl_vector.h **** 
 124:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/5/bits/stl_vector.h **** 
 127:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/5/bits/stl_vector.h **** 
 130:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/5/bits/stl_vector.h **** 
 134:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/5/bits/stl_vector.h **** 
 138:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/5/bits/stl_vector.h **** 
 142:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/5/bits/stl_vector.h **** 
 146:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/5/bits/stl_vector.h ****       {
 149:/usr/include/c++/5/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/5/bits/stl_vector.h **** 	else
 152:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/5/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/5/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/5/bits/stl_vector.h ****       }
 157:/usr/include/c++/5/bits/stl_vector.h **** #endif
 158:/usr/include/c++/5/bits/stl_vector.h **** 
 159:/usr/include/c++/5/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/5/bits/stl_vector.h **** 
 163:/usr/include/c++/5/bits/stl_vector.h ****     public:
 164:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/5/bits/stl_vector.h **** 
 166:/usr/include/c++/5/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/5/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/5/bits/stl_vector.h ****       {
 169:/usr/include/c++/5/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:/usr/include/c++/5/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 171:/usr/include/c++/5/bits/stl_vector.h ****       }
 172:/usr/include/c++/5/bits/stl_vector.h **** 
 173:/usr/include/c++/5/bits/stl_vector.h ****       void
 174:/usr/include/c++/5/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:/usr/include/c++/5/bits/stl_vector.h ****       {
 176:/usr/include/c++/5/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:/usr/include/c++/5/bits/stl_vector.h **** 	if (__p)
 178:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:/usr/include/c++/5/bits/stl_vector.h ****       }
 180:/usr/include/c++/5/bits/stl_vector.h **** 
 181:/usr/include/c++/5/bits/stl_vector.h ****     private:
 182:/usr/include/c++/5/bits/stl_vector.h ****       void
 183:/usr/include/c++/5/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 184:/usr/include/c++/5/bits/stl_vector.h ****       {
 185:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:/usr/include/c++/5/bits/stl_vector.h ****       }
 189:/usr/include/c++/5/bits/stl_vector.h ****     };
 190:/usr/include/c++/5/bits/stl_vector.h **** 
 191:/usr/include/c++/5/bits/stl_vector.h **** 
 192:/usr/include/c++/5/bits/stl_vector.h ****   /**
 193:/usr/include/c++/5/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:/usr/include/c++/5/bits/stl_vector.h ****    *  individual elements in any order.
 195:/usr/include/c++/5/bits/stl_vector.h ****    *
 196:/usr/include/c++/5/bits/stl_vector.h ****    *  @ingroup sequences
 197:/usr/include/c++/5/bits/stl_vector.h ****    *
 198:/usr/include/c++/5/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:/usr/include/c++/5/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:/usr/include/c++/5/bits/stl_vector.h ****    *
 201:/usr/include/c++/5/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:/usr/include/c++/5/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:/usr/include/c++/5/bits/stl_vector.h ****    *
 207:/usr/include/c++/5/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:/usr/include/c++/5/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:/usr/include/c++/5/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:/usr/include/c++/5/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:/usr/include/c++/5/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 212:/usr/include/c++/5/bits/stl_vector.h ****   */
 213:/usr/include/c++/5/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:/usr/include/c++/5/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:/usr/include/c++/5/bits/stl_vector.h ****     {
 216:/usr/include/c++/5/bits/stl_vector.h ****       // Concept requirements.
 217:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:/usr/include/c++/5/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 219:/usr/include/c++/5/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 220:/usr/include/c++/5/bits/stl_vector.h ****       
 221:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 222:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 223:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 224:/usr/include/c++/5/bits/stl_vector.h **** 
 225:/usr/include/c++/5/bits/stl_vector.h ****     public:
 226:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Tp					 value_type;
 227:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 228:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 229:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 230:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 231:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 232:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 233:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator;
 234:/usr/include/c++/5/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 235:/usr/include/c++/5/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 236:/usr/include/c++/5/bits/stl_vector.h ****       typedef size_t					 size_type;
 237:/usr/include/c++/5/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 238:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 239:/usr/include/c++/5/bits/stl_vector.h **** 
 240:/usr/include/c++/5/bits/stl_vector.h ****     protected:
 241:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_allocate;
 242:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_deallocate;
 243:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_impl;
 244:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 245:/usr/include/c++/5/bits/stl_vector.h **** 
 246:/usr/include/c++/5/bits/stl_vector.h ****     public:
 247:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 248:/usr/include/c++/5/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 249:/usr/include/c++/5/bits/stl_vector.h **** 
 250:/usr/include/c++/5/bits/stl_vector.h ****       /**
 251:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 252:/usr/include/c++/5/bits/stl_vector.h ****        */
 253:/usr/include/c++/5/bits/stl_vector.h ****       vector()
 254:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 255:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 256:/usr/include/c++/5/bits/stl_vector.h **** #endif
 257:/usr/include/c++/5/bits/stl_vector.h ****       : _Base() { }
 258:/usr/include/c++/5/bits/stl_vector.h **** 
 259:/usr/include/c++/5/bits/stl_vector.h ****       /**
 260:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 261:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 262:/usr/include/c++/5/bits/stl_vector.h ****        */
 263:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 264:/usr/include/c++/5/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 265:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__a) { }
 266:/usr/include/c++/5/bits/stl_vector.h **** 
 267:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 268:/usr/include/c++/5/bits/stl_vector.h ****       /**
 269:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 270:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 271:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 272:/usr/include/c++/5/bits/stl_vector.h ****        *
 273:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 274:/usr/include/c++/5/bits/stl_vector.h ****        *  constructed elements.
 275:/usr/include/c++/5/bits/stl_vector.h ****        */
 276:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 277:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 278:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 279:/usr/include/c++/5/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 280:/usr/include/c++/5/bits/stl_vector.h **** 
 281:/usr/include/c++/5/bits/stl_vector.h ****       /**
 282:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 283:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 284:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 285:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 286:/usr/include/c++/5/bits/stl_vector.h ****        *
 287:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 288:/usr/include/c++/5/bits/stl_vector.h ****        */
 289:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 290:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 291:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 292:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 293:/usr/include/c++/5/bits/stl_vector.h **** #else
 294:/usr/include/c++/5/bits/stl_vector.h ****       /**
 295:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 296:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 297:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 298:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 299:/usr/include/c++/5/bits/stl_vector.h ****        *
 300:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 301:/usr/include/c++/5/bits/stl_vector.h ****        */
 302:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 303:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 5163              		.loc 7 303 0
 5164              		.cfi_startproc
 5165              		.cfi_personality 0x3,__gxx_personality_v0
 5166              		.cfi_lsda 0x3,.LLSDA1467
 5167 0000 55       		pushq	%rbp
 5168              		.cfi_def_cfa_offset 16
 5169              		.cfi_offset 6, -16
 5170 0001 4889E5   		movq	%rsp, %rbp
 5171              		.cfi_def_cfa_register 6
 5172 0004 53       		pushq	%rbx
 5173 0005 4883EC28 		subq	$40, %rsp
 5174              		.cfi_offset 3, -24
 5175 0009 48897DE8 		movq	%rdi, -24(%rbp)
 5176 000d 488975E0 		movq	%rsi, -32(%rbp)
 5177 0011 488955D8 		movq	%rdx, -40(%rbp)
 5178 0015 48894DD0 		movq	%rcx, -48(%rbp)
 5179              	.LBB79:
 304:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 305:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 5180              		.loc 7 305 0
 5181 0019 488B45E8 		movq	-24(%rbp), %rax
 5182 001d 488B55D0 		movq	-48(%rbp), %rdx
 5183 0021 488B4DE0 		movq	-32(%rbp), %rcx
 5184 0025 4889CE   		movq	%rcx, %rsi
 5185 0028 4889C7   		movq	%rax, %rdi
 5186              	.LEHB122:
 5187 002b E8000000 		call	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 5187      00
 5188              	.LEHE122:
 306:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 5189              		.loc 7 306 0
 5190 0030 488B55D8 		movq	-40(%rbp), %rdx
 5191 0034 488B4DE0 		movq	-32(%rbp), %rcx
 5192 0038 488B45E8 		movq	-24(%rbp), %rax
 5193 003c 4889CE   		movq	%rcx, %rsi
 5194 003f 4889C7   		movq	%rax, %rdi
 5195              	.LEHB123:
 5196 0042 E8000000 		call	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
 5196      00
 5197              	.LEHE123:
 5198              	.LBE79:
 5199 0047 EB1A     		jmp	.L276
 5200              	.L275:
 5201 0049 4889C3   		movq	%rax, %rbx
 5202              	.LBB80:
 305:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 5203              		.loc 7 305 0
 5204 004c 488B45E8 		movq	-24(%rbp), %rax
 5205 0050 4889C7   		movq	%rax, %rdi
 5206 0053 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5206      00
 5207 0058 4889D8   		movq	%rbx, %rax
 5208 005b 4889C7   		movq	%rax, %rdi
 5209              	.LEHB124:
 5210 005e E8000000 		call	_Unwind_Resume
 5210      00
 5211              	.LEHE124:
 5212              	.L276:
 5213              	.LBE80:
 5214              		.loc 7 306 0
 5215 0063 4883C428 		addq	$40, %rsp
 5216 0067 5B       		popq	%rbx
 5217 0068 5D       		popq	%rbp
 5218              		.cfi_def_cfa 7, 8
 5219 0069 C3       		ret
 5220              		.cfi_endproc
 5221              	.LFE1467:
 5222              		.section	.gcc_except_table
 5223              	.LLSDA1467:
 5224 0377 FF       		.byte	0xff
 5225 0378 FF       		.byte	0xff
 5226 0379 01       		.byte	0x1
 5227 037a 0C       		.uleb128 .LLSDACSE1467-.LLSDACSB1467
 5228              	.LLSDACSB1467:
 5229 037b 2B       		.uleb128 .LEHB122-.LFB1467
 5230 037c 05       		.uleb128 .LEHE122-.LEHB122
 5231 037d 00       		.uleb128 0
 5232 037e 00       		.uleb128 0
 5233 037f 42       		.uleb128 .LEHB123-.LFB1467
 5234 0380 05       		.uleb128 .LEHE123-.LEHB123
 5235 0381 49       		.uleb128 .L275-.LFB1467
 5236 0382 00       		.uleb128 0
 5237 0383 5E       		.uleb128 .LEHB124-.LFB1467
 5238 0384 05       		.uleb128 .LEHE124-.LEHB124
 5239 0385 00       		.uleb128 0
 5240 0386 00       		.uleb128 0
 5241              	.LLSDACSE1467:
 5242              		.section	.text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_,"axG",@progbits,_ZNSt6vectorIfSaIfEEC5EmRKfRKS0_,c
 5244              		.weak	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
 5245              		.set	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_,_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
 5246              		.section	.text._ZNSt6vectorIfSaIfEED2Ev,"axG",@progbits,_ZNSt6vectorIfSaIfEED5Ev,comdat
 5247              		.align 2
 5248              		.weak	_ZNSt6vectorIfSaIfEED2Ev
 5250              	_ZNSt6vectorIfSaIfEED2Ev:
 5251              	.LFB1470:
 307:/usr/include/c++/5/bits/stl_vector.h **** #endif
 308:/usr/include/c++/5/bits/stl_vector.h **** 
 309:/usr/include/c++/5/bits/stl_vector.h ****       /**
 310:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 311:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 312:/usr/include/c++/5/bits/stl_vector.h ****        *
 313:/usr/include/c++/5/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 314:/usr/include/c++/5/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 315:/usr/include/c++/5/bits/stl_vector.h ****        *  but any extra memory in
 316:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 317:/usr/include/c++/5/bits/stl_vector.h ****        */
 318:/usr/include/c++/5/bits/stl_vector.h ****       vector(const vector& __x)
 319:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(),
 320:/usr/include/c++/5/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 321:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 322:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 323:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 324:/usr/include/c++/5/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 325:/usr/include/c++/5/bits/stl_vector.h ****       }
 326:/usr/include/c++/5/bits/stl_vector.h **** 
 327:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 328:/usr/include/c++/5/bits/stl_vector.h ****       /**
 329:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 330:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 331:/usr/include/c++/5/bits/stl_vector.h ****        *
 332:/usr/include/c++/5/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 333:/usr/include/c++/5/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 334:/usr/include/c++/5/bits/stl_vector.h ****        */
 335:/usr/include/c++/5/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 336:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 337:/usr/include/c++/5/bits/stl_vector.h **** 
 338:/usr/include/c++/5/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 339:/usr/include/c++/5/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 340:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 341:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 342:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 343:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 344:/usr/include/c++/5/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 345:/usr/include/c++/5/bits/stl_vector.h ****       }
 346:/usr/include/c++/5/bits/stl_vector.h **** 
 347:/usr/include/c++/5/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 348:/usr/include/c++/5/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 349:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 350:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 351:/usr/include/c++/5/bits/stl_vector.h ****       {
 352:/usr/include/c++/5/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 353:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 354:/usr/include/c++/5/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 355:/usr/include/c++/5/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 356:/usr/include/c++/5/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 357:/usr/include/c++/5/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 358:/usr/include/c++/5/bits/stl_vector.h **** 	    __rv.clear();
 359:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 360:/usr/include/c++/5/bits/stl_vector.h ****       }
 361:/usr/include/c++/5/bits/stl_vector.h **** 
 362:/usr/include/c++/5/bits/stl_vector.h ****       /**
 363:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 364:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 365:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 366:/usr/include/c++/5/bits/stl_vector.h ****        *
 367:/usr/include/c++/5/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 368:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer_list @a __l.
 369:/usr/include/c++/5/bits/stl_vector.h ****        *
 370:/usr/include/c++/5/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 371:/usr/include/c++/5/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 372:/usr/include/c++/5/bits/stl_vector.h ****        */
 373:/usr/include/c++/5/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 374:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 375:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__a)
 376:/usr/include/c++/5/bits/stl_vector.h ****       {
 377:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 378:/usr/include/c++/5/bits/stl_vector.h **** 			    random_access_iterator_tag());
 379:/usr/include/c++/5/bits/stl_vector.h ****       }
 380:/usr/include/c++/5/bits/stl_vector.h **** #endif
 381:/usr/include/c++/5/bits/stl_vector.h **** 
 382:/usr/include/c++/5/bits/stl_vector.h ****       /**
 383:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 384:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 385:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 386:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 387:/usr/include/c++/5/bits/stl_vector.h ****        *
 388:/usr/include/c++/5/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 389:/usr/include/c++/5/bits/stl_vector.h ****        *  [first,last).
 390:/usr/include/c++/5/bits/stl_vector.h ****        *
 391:/usr/include/c++/5/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 392:/usr/include/c++/5/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 393:/usr/include/c++/5/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 394:/usr/include/c++/5/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 395:/usr/include/c++/5/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 396:/usr/include/c++/5/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 397:/usr/include/c++/5/bits/stl_vector.h ****        */
 398:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 399:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
 400:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 401:/usr/include/c++/5/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 402:/usr/include/c++/5/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 403:/usr/include/c++/5/bits/stl_vector.h **** 	: _Base(__a)
 404:/usr/include/c++/5/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 405:/usr/include/c++/5/bits/stl_vector.h **** #else
 406:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
 407:/usr/include/c++/5/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 408:/usr/include/c++/5/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 409:/usr/include/c++/5/bits/stl_vector.h **** 	: _Base(__a)
 410:/usr/include/c++/5/bits/stl_vector.h ****         {
 411:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 412:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 413:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 414:/usr/include/c++/5/bits/stl_vector.h **** 	}
 415:/usr/include/c++/5/bits/stl_vector.h **** #endif
 416:/usr/include/c++/5/bits/stl_vector.h **** 
 417:/usr/include/c++/5/bits/stl_vector.h ****       /**
 418:/usr/include/c++/5/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 419:/usr/include/c++/5/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 420:/usr/include/c++/5/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 421:/usr/include/c++/5/bits/stl_vector.h ****        *  responsibility.
 422:/usr/include/c++/5/bits/stl_vector.h ****        */
 423:/usr/include/c++/5/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 5252              		.loc 7 423 0
 5253              		.cfi_startproc
 5254              		.cfi_personality 0x3,__gxx_personality_v0
 5255              		.cfi_lsda 0x3,.LLSDA1470
 5256 0000 55       		pushq	%rbp
 5257              		.cfi_def_cfa_offset 16
 5258              		.cfi_offset 6, -16
 5259 0001 4889E5   		movq	%rsp, %rbp
 5260              		.cfi_def_cfa_register 6
 5261 0004 53       		pushq	%rbx
 5262 0005 4883EC18 		subq	$24, %rsp
 5263              		.cfi_offset 3, -24
 5264 0009 48897DE8 		movq	%rdi, -24(%rbp)
 5265              	.LBB81:
 424:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 425:/usr/include/c++/5/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 5266              		.loc 7 425 0
 5267 000d 488B45E8 		movq	-24(%rbp), %rax
 5268 0011 4889C7   		movq	%rax, %rdi
 5269 0014 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 5269      00
 5270 0019 4889C2   		movq	%rax, %rdx
 424:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 5271              		.loc 7 424 0
 5272 001c 488B45E8 		movq	-24(%rbp), %rax
 5273 0020 488B4808 		movq	8(%rax), %rcx
 5274 0024 488B45E8 		movq	-24(%rbp), %rax
 5275 0028 488B00   		movq	(%rax), %rax
 5276 002b 4889CE   		movq	%rcx, %rsi
 5277 002e 4889C7   		movq	%rax, %rdi
 5278              	.LEHB125:
 5279 0031 E8000000 		call	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E
 5279      00
 5280              	.LEHE125:
 5281              		.loc 7 425 0
 5282 0036 488B45E8 		movq	-24(%rbp), %rax
 5283 003a 4889C7   		movq	%rax, %rdi
 5284              	.LEHB126:
 5285 003d E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5285      00
 5286              	.LEHE126:
 5287              	.LBE81:
 5288 0042 EB1A     		jmp	.L280
 5289              	.L279:
 5290 0044 4889C3   		movq	%rax, %rbx
 5291              	.LBB82:
 5292 0047 488B45E8 		movq	-24(%rbp), %rax
 5293 004b 4889C7   		movq	%rax, %rdi
 5294 004e E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5294      00
 5295 0053 4889D8   		movq	%rbx, %rax
 5296 0056 4889C7   		movq	%rax, %rdi
 5297              	.LEHB127:
 5298 0059 E8000000 		call	_Unwind_Resume
 5298      00
 5299              	.LEHE127:
 5300              	.L280:
 5301              	.LBE82:
 5302 005e 4883C418 		addq	$24, %rsp
 5303 0062 5B       		popq	%rbx
 5304 0063 5D       		popq	%rbp
 5305              		.cfi_def_cfa 7, 8
 5306 0064 C3       		ret
 5307              		.cfi_endproc
 5308              	.LFE1470:
 5309              		.section	.gcc_except_table
 5310              	.LLSDA1470:
 5311 0387 FF       		.byte	0xff
 5312 0388 FF       		.byte	0xff
 5313 0389 01       		.byte	0x1
 5314 038a 0C       		.uleb128 .LLSDACSE1470-.LLSDACSB1470
 5315              	.LLSDACSB1470:
 5316 038b 31       		.uleb128 .LEHB125-.LFB1470
 5317 038c 05       		.uleb128 .LEHE125-.LEHB125
 5318 038d 44       		.uleb128 .L279-.LFB1470
 5319 038e 00       		.uleb128 0
 5320 038f 3D       		.uleb128 .LEHB126-.LFB1470
 5321 0390 05       		.uleb128 .LEHE126-.LEHB126
 5322 0391 00       		.uleb128 0
 5323 0392 00       		.uleb128 0
 5324 0393 59       		.uleb128 .LEHB127-.LFB1470
 5325 0394 05       		.uleb128 .LEHE127-.LEHB127
 5326 0395 00       		.uleb128 0
 5327 0396 00       		.uleb128 0
 5328              	.LLSDACSE1470:
 5329              		.section	.text._ZNSt6vectorIfSaIfEED2Ev,"axG",@progbits,_ZNSt6vectorIfSaIfEED5Ev,comdat
 5331              		.weak	_ZNSt6vectorIfSaIfEED1Ev
 5332              		.set	_ZNSt6vectorIfSaIfEED1Ev,_ZNSt6vectorIfSaIfEED2Ev
 5333              		.section	.text._ZNSt6vectorIfSaIfEEixEm,"axG",@progbits,_ZNSt6vectorIfSaIfEEixEm,comdat
 5334              		.align 2
 5335              		.weak	_ZNSt6vectorIfSaIfEEixEm
 5337              	_ZNSt6vectorIfSaIfEEixEm:
 5338              	.LFB1472:
 426:/usr/include/c++/5/bits/stl_vector.h **** 
 427:/usr/include/c++/5/bits/stl_vector.h ****       /**
 428:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 429:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 430:/usr/include/c++/5/bits/stl_vector.h ****        *
 431:/usr/include/c++/5/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 432:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 433:/usr/include/c++/5/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 434:/usr/include/c++/5/bits/stl_vector.h ****        */
 435:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 436:/usr/include/c++/5/bits/stl_vector.h ****       operator=(const vector& __x);
 437:/usr/include/c++/5/bits/stl_vector.h **** 
 438:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 439:/usr/include/c++/5/bits/stl_vector.h ****       /**
 440:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 441:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 442:/usr/include/c++/5/bits/stl_vector.h ****        *
 443:/usr/include/c++/5/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 444:/usr/include/c++/5/bits/stl_vector.h ****        *  if the allocators permit it).
 445:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 446:/usr/include/c++/5/bits/stl_vector.h ****        */
 447:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 448:/usr/include/c++/5/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 449:/usr/include/c++/5/bits/stl_vector.h ****       {
 450:/usr/include/c++/5/bits/stl_vector.h ****         constexpr bool __move_storage =
 451:/usr/include/c++/5/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 452:/usr/include/c++/5/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 453:/usr/include/c++/5/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
 454:/usr/include/c++/5/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 455:/usr/include/c++/5/bits/stl_vector.h **** 	return *this;
 456:/usr/include/c++/5/bits/stl_vector.h ****       }
 457:/usr/include/c++/5/bits/stl_vector.h **** 
 458:/usr/include/c++/5/bits/stl_vector.h ****       /**
 459:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 460:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 461:/usr/include/c++/5/bits/stl_vector.h ****        *
 462:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 463:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer list @a __l.
 464:/usr/include/c++/5/bits/stl_vector.h ****        *
 465:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 466:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 467:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 468:/usr/include/c++/5/bits/stl_vector.h ****        */
 469:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 470:/usr/include/c++/5/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 471:/usr/include/c++/5/bits/stl_vector.h ****       {
 472:/usr/include/c++/5/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 473:/usr/include/c++/5/bits/stl_vector.h **** 	return *this;
 474:/usr/include/c++/5/bits/stl_vector.h ****       }
 475:/usr/include/c++/5/bits/stl_vector.h **** #endif
 476:/usr/include/c++/5/bits/stl_vector.h **** 
 477:/usr/include/c++/5/bits/stl_vector.h ****       /**
 478:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 479:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 480:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 481:/usr/include/c++/5/bits/stl_vector.h ****        *
 482:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 483:/usr/include/c++/5/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 484:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 485:/usr/include/c++/5/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 486:/usr/include/c++/5/bits/stl_vector.h ****        */
 487:/usr/include/c++/5/bits/stl_vector.h ****       void
 488:/usr/include/c++/5/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 489:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 490:/usr/include/c++/5/bits/stl_vector.h **** 
 491:/usr/include/c++/5/bits/stl_vector.h ****       /**
 492:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 493:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 494:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 495:/usr/include/c++/5/bits/stl_vector.h ****        *
 496:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 497:/usr/include/c++/5/bits/stl_vector.h ****        *  range [__first,__last).
 498:/usr/include/c++/5/bits/stl_vector.h ****        *
 499:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 500:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 501:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 502:/usr/include/c++/5/bits/stl_vector.h ****        */
 503:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 504:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
 505:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 506:/usr/include/c++/5/bits/stl_vector.h ****         void
 507:/usr/include/c++/5/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 508:/usr/include/c++/5/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 509:/usr/include/c++/5/bits/stl_vector.h **** #else
 510:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
 511:/usr/include/c++/5/bits/stl_vector.h ****         void
 512:/usr/include/c++/5/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 513:/usr/include/c++/5/bits/stl_vector.h ****         {
 514:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 515:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 516:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 517:/usr/include/c++/5/bits/stl_vector.h **** 	}
 518:/usr/include/c++/5/bits/stl_vector.h **** #endif
 519:/usr/include/c++/5/bits/stl_vector.h **** 
 520:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 521:/usr/include/c++/5/bits/stl_vector.h ****       /**
 522:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 523:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 524:/usr/include/c++/5/bits/stl_vector.h ****        *
 525:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 526:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer list @a __l.
 527:/usr/include/c++/5/bits/stl_vector.h ****        *
 528:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 529:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 530:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 531:/usr/include/c++/5/bits/stl_vector.h ****        */
 532:/usr/include/c++/5/bits/stl_vector.h ****       void
 533:/usr/include/c++/5/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 534:/usr/include/c++/5/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 535:/usr/include/c++/5/bits/stl_vector.h **** #endif
 536:/usr/include/c++/5/bits/stl_vector.h **** 
 537:/usr/include/c++/5/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 538:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::get_allocator;
 539:/usr/include/c++/5/bits/stl_vector.h **** 
 540:/usr/include/c++/5/bits/stl_vector.h ****       // iterators
 541:/usr/include/c++/5/bits/stl_vector.h ****       /**
 542:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 543:/usr/include/c++/5/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 544:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 545:/usr/include/c++/5/bits/stl_vector.h ****        */
 546:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 547:/usr/include/c++/5/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 548:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 549:/usr/include/c++/5/bits/stl_vector.h **** 
 550:/usr/include/c++/5/bits/stl_vector.h ****       /**
 551:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 552:/usr/include/c++/5/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 553:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 554:/usr/include/c++/5/bits/stl_vector.h ****        */
 555:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 556:/usr/include/c++/5/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 557:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 558:/usr/include/c++/5/bits/stl_vector.h **** 
 559:/usr/include/c++/5/bits/stl_vector.h ****       /**
 560:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 561:/usr/include/c++/5/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 562:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 563:/usr/include/c++/5/bits/stl_vector.h ****        */
 564:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 565:/usr/include/c++/5/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 566:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 567:/usr/include/c++/5/bits/stl_vector.h **** 
 568:/usr/include/c++/5/bits/stl_vector.h ****       /**
 569:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 570:/usr/include/c++/5/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 571:/usr/include/c++/5/bits/stl_vector.h ****        *  ordinary element order.
 572:/usr/include/c++/5/bits/stl_vector.h ****        */
 573:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 574:/usr/include/c++/5/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 575:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 576:/usr/include/c++/5/bits/stl_vector.h **** 
 577:/usr/include/c++/5/bits/stl_vector.h ****       /**
 578:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 579:/usr/include/c++/5/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 580:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 581:/usr/include/c++/5/bits/stl_vector.h ****        */
 582:/usr/include/c++/5/bits/stl_vector.h ****       reverse_iterator
 583:/usr/include/c++/5/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 584:/usr/include/c++/5/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 585:/usr/include/c++/5/bits/stl_vector.h **** 
 586:/usr/include/c++/5/bits/stl_vector.h ****       /**
 587:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 588:/usr/include/c++/5/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 589:/usr/include/c++/5/bits/stl_vector.h ****        *  reverse element order.
 590:/usr/include/c++/5/bits/stl_vector.h ****        */
 591:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 592:/usr/include/c++/5/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 593:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 594:/usr/include/c++/5/bits/stl_vector.h **** 
 595:/usr/include/c++/5/bits/stl_vector.h ****       /**
 596:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 597:/usr/include/c++/5/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 598:/usr/include/c++/5/bits/stl_vector.h ****        *  in reverse element order.
 599:/usr/include/c++/5/bits/stl_vector.h ****        */
 600:/usr/include/c++/5/bits/stl_vector.h ****       reverse_iterator
 601:/usr/include/c++/5/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 602:/usr/include/c++/5/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 603:/usr/include/c++/5/bits/stl_vector.h **** 
 604:/usr/include/c++/5/bits/stl_vector.h ****       /**
 605:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 606:/usr/include/c++/5/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 607:/usr/include/c++/5/bits/stl_vector.h ****        *  is done in reverse element order.
 608:/usr/include/c++/5/bits/stl_vector.h ****        */
 609:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 610:/usr/include/c++/5/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 611:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 612:/usr/include/c++/5/bits/stl_vector.h **** 
 613:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 614:/usr/include/c++/5/bits/stl_vector.h ****       /**
 615:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 616:/usr/include/c++/5/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 617:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 618:/usr/include/c++/5/bits/stl_vector.h ****        */
 619:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 620:/usr/include/c++/5/bits/stl_vector.h ****       cbegin() const noexcept
 621:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 622:/usr/include/c++/5/bits/stl_vector.h **** 
 623:/usr/include/c++/5/bits/stl_vector.h ****       /**
 624:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 625:/usr/include/c++/5/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 626:/usr/include/c++/5/bits/stl_vector.h ****        *  ordinary element order.
 627:/usr/include/c++/5/bits/stl_vector.h ****        */
 628:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 629:/usr/include/c++/5/bits/stl_vector.h ****       cend() const noexcept
 630:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 631:/usr/include/c++/5/bits/stl_vector.h **** 
 632:/usr/include/c++/5/bits/stl_vector.h ****       /**
 633:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 634:/usr/include/c++/5/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 635:/usr/include/c++/5/bits/stl_vector.h ****        *  reverse element order.
 636:/usr/include/c++/5/bits/stl_vector.h ****        */
 637:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 638:/usr/include/c++/5/bits/stl_vector.h ****       crbegin() const noexcept
 639:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 640:/usr/include/c++/5/bits/stl_vector.h **** 
 641:/usr/include/c++/5/bits/stl_vector.h ****       /**
 642:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 643:/usr/include/c++/5/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 644:/usr/include/c++/5/bits/stl_vector.h ****        *  is done in reverse element order.
 645:/usr/include/c++/5/bits/stl_vector.h ****        */
 646:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 647:/usr/include/c++/5/bits/stl_vector.h ****       crend() const noexcept
 648:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 649:/usr/include/c++/5/bits/stl_vector.h **** #endif
 650:/usr/include/c++/5/bits/stl_vector.h **** 
 651:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.2] capacity
 652:/usr/include/c++/5/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 653:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 654:/usr/include/c++/5/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 655:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 656:/usr/include/c++/5/bits/stl_vector.h **** 
 657:/usr/include/c++/5/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 658:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 659:/usr/include/c++/5/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 660:/usr/include/c++/5/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 661:/usr/include/c++/5/bits/stl_vector.h **** 
 662:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 663:/usr/include/c++/5/bits/stl_vector.h ****       /**
 664:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 665:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 666:/usr/include/c++/5/bits/stl_vector.h ****        *
 667:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 668:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 669:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 670:/usr/include/c++/5/bits/stl_vector.h ****        *  default constructed elements are appended.
 671:/usr/include/c++/5/bits/stl_vector.h ****        */
 672:/usr/include/c++/5/bits/stl_vector.h ****       void
 673:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size)
 674:/usr/include/c++/5/bits/stl_vector.h ****       {
 675:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 676:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 677:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 678:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 679:/usr/include/c++/5/bits/stl_vector.h ****       }
 680:/usr/include/c++/5/bits/stl_vector.h **** 
 681:/usr/include/c++/5/bits/stl_vector.h ****       /**
 682:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 683:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 684:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 685:/usr/include/c++/5/bits/stl_vector.h ****        *
 686:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 687:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 688:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 689:/usr/include/c++/5/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 690:/usr/include/c++/5/bits/stl_vector.h ****        *  given data.
 691:/usr/include/c++/5/bits/stl_vector.h ****        */
 692:/usr/include/c++/5/bits/stl_vector.h ****       void
 693:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 694:/usr/include/c++/5/bits/stl_vector.h ****       {
 695:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 696:/usr/include/c++/5/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 697:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 698:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 699:/usr/include/c++/5/bits/stl_vector.h ****       }
 700:/usr/include/c++/5/bits/stl_vector.h **** #else
 701:/usr/include/c++/5/bits/stl_vector.h ****       /**
 702:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 703:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 704:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 705:/usr/include/c++/5/bits/stl_vector.h ****        *
 706:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 707:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 708:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 709:/usr/include/c++/5/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 710:/usr/include/c++/5/bits/stl_vector.h ****        *  given data.
 711:/usr/include/c++/5/bits/stl_vector.h ****        */
 712:/usr/include/c++/5/bits/stl_vector.h ****       void
 713:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 714:/usr/include/c++/5/bits/stl_vector.h ****       {
 715:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 716:/usr/include/c++/5/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 717:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 718:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 719:/usr/include/c++/5/bits/stl_vector.h ****       }
 720:/usr/include/c++/5/bits/stl_vector.h **** #endif
 721:/usr/include/c++/5/bits/stl_vector.h **** 
 722:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 723:/usr/include/c++/5/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 724:/usr/include/c++/5/bits/stl_vector.h ****       void
 725:/usr/include/c++/5/bits/stl_vector.h ****       shrink_to_fit()
 726:/usr/include/c++/5/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 727:/usr/include/c++/5/bits/stl_vector.h **** #endif
 728:/usr/include/c++/5/bits/stl_vector.h **** 
 729:/usr/include/c++/5/bits/stl_vector.h ****       /**
 730:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 731:/usr/include/c++/5/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 732:/usr/include/c++/5/bits/stl_vector.h ****        */
 733:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 734:/usr/include/c++/5/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 735:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 736:/usr/include/c++/5/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 737:/usr/include/c++/5/bits/stl_vector.h **** 
 738:/usr/include/c++/5/bits/stl_vector.h ****       /**
 739:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 740:/usr/include/c++/5/bits/stl_vector.h ****        *  equal end().)
 741:/usr/include/c++/5/bits/stl_vector.h ****        */
 742:/usr/include/c++/5/bits/stl_vector.h ****       bool
 743:/usr/include/c++/5/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 744:/usr/include/c++/5/bits/stl_vector.h ****       { return begin() == end(); }
 745:/usr/include/c++/5/bits/stl_vector.h **** 
 746:/usr/include/c++/5/bits/stl_vector.h ****       /**
 747:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 748:/usr/include/c++/5/bits/stl_vector.h ****        *          elements.
 749:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 750:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 751:/usr/include/c++/5/bits/stl_vector.h ****        *
 752:/usr/include/c++/5/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 753:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 754:/usr/include/c++/5/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 755:/usr/include/c++/5/bits/stl_vector.h ****        *  thrown.
 756:/usr/include/c++/5/bits/stl_vector.h ****        *
 757:/usr/include/c++/5/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 758:/usr/include/c++/5/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 759:/usr/include/c++/5/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 760:/usr/include/c++/5/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 761:/usr/include/c++/5/bits/stl_vector.h ****        *  and copying of %vector data.
 762:/usr/include/c++/5/bits/stl_vector.h ****        */
 763:/usr/include/c++/5/bits/stl_vector.h ****       void
 764:/usr/include/c++/5/bits/stl_vector.h ****       reserve(size_type __n);
 765:/usr/include/c++/5/bits/stl_vector.h **** 
 766:/usr/include/c++/5/bits/stl_vector.h ****       // element access
 767:/usr/include/c++/5/bits/stl_vector.h ****       /**
 768:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 769:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 770:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 771:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 772:/usr/include/c++/5/bits/stl_vector.h ****        *
 773:/usr/include/c++/5/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 774:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 775:/usr/include/c++/5/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 776:/usr/include/c++/5/bits/stl_vector.h ****        *  see at().)
 777:/usr/include/c++/5/bits/stl_vector.h ****        */
 778:/usr/include/c++/5/bits/stl_vector.h ****       reference
 779:/usr/include/c++/5/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 5339              		.loc 7 779 0
 5340              		.cfi_startproc
 5341 0000 55       		pushq	%rbp
 5342              		.cfi_def_cfa_offset 16
 5343              		.cfi_offset 6, -16
 5344 0001 4889E5   		movq	%rsp, %rbp
 5345              		.cfi_def_cfa_register 6
 5346 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5347 0008 488975F0 		movq	%rsi, -16(%rbp)
 780:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 5348              		.loc 7 780 0
 5349 000c 488B45F8 		movq	-8(%rbp), %rax
 5350 0010 488B00   		movq	(%rax), %rax
 5351 0013 488B55F0 		movq	-16(%rbp), %rdx
 5352 0017 48C1E202 		salq	$2, %rdx
 5353 001b 4801D0   		addq	%rdx, %rax
 5354 001e 5D       		popq	%rbp
 5355              		.cfi_def_cfa 7, 8
 5356 001f C3       		ret
 5357              		.cfi_endproc
 5358              	.LFE1472:
 5360              		.section	.text._ZNKSt6vectorIfSaIfEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIfSaIfEE4sizeEv,comdat
 5361              		.align 2
 5362              		.weak	_ZNKSt6vectorIfSaIfEE4sizeEv
 5364              	_ZNKSt6vectorIfSaIfEE4sizeEv:
 5365              	.LFB1473:
 654:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5366              		.loc 7 654 0
 5367              		.cfi_startproc
 5368 0000 55       		pushq	%rbp
 5369              		.cfi_def_cfa_offset 16
 5370              		.cfi_offset 6, -16
 5371 0001 4889E5   		movq	%rsp, %rbp
 5372              		.cfi_def_cfa_register 6
 5373 0004 48897DF8 		movq	%rdi, -8(%rbp)
 655:/usr/include/c++/5/bits/stl_vector.h **** 
 5374              		.loc 7 655 0
 5375 0008 488B45F8 		movq	-8(%rbp), %rax
 5376 000c 488B4008 		movq	8(%rax), %rax
 5377 0010 4889C2   		movq	%rax, %rdx
 5378 0013 488B45F8 		movq	-8(%rbp), %rax
 5379 0017 488B00   		movq	(%rax), %rax
 5380 001a 4829C2   		subq	%rax, %rdx
 5381 001d 4889D0   		movq	%rdx, %rax
 5382 0020 48C1F802 		sarq	$2, %rax
 5383 0024 5D       		popq	%rbp
 5384              		.cfi_def_cfa 7, 8
 5385 0025 C3       		ret
 5386              		.cfi_endproc
 5387              	.LFE1473:
 5389              		.section	.text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iR
 5390              		.weak	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_
 5392              	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestD
 5393              	.LFB1474:
  96:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
 5394              		.loc 5 96 0
 5395              		.cfi_startproc
 5396              		.cfi_personality 0x3,__gxx_personality_v0
 5397              		.cfi_lsda 0x3,.LLSDA1474
 5398 0000 55       		pushq	%rbp
 5399              		.cfi_def_cfa_offset 16
 5400              		.cfi_offset 6, -16
 5401 0001 4889E5   		movq	%rsp, %rbp
 5402              		.cfi_def_cfa_register 6
 5403 0004 53       		pushq	%rbx
 5404 0005 4881ECE8 		subq	$488, %rsp
 5404      010000
 5405              		.cfi_offset 3, -24
 5406 000c 4889BD38 		movq	%rdi, -456(%rbp)
 5406      FEFFFF
 5407 0013 4889B530 		movq	%rsi, -464(%rbp)
 5407      FEFFFF
 5408 001a 48899528 		movq	%rdx, -472(%rbp)
 5408      FEFFFF
 5409 0021 898D24FE 		movl	%ecx, -476(%rbp)
 5409      FFFF
 5410 0027 4C898518 		movq	%r8, -488(%rbp)
 5410      FEFFFF
 5411 002e 4C898D10 		movq	%r9, -496(%rbp)
 5411      FEFFFF
  96:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
 5412              		.loc 5 96 0
 5413 0035 64488B04 		movq	%fs:40, %rax
 5413      25280000 
 5413      00
 5414 003e 488945E8 		movq	%rax, -24(%rbp)
 5415 0042 31C0     		xorl	%eax, %eax
  99:../Checks.h   **** 
 5416              		.loc 5 99 0
 5417 0044 488B8D18 		movq	-488(%rbp), %rcx
 5417      FEFFFF
 5418 004b 8B9524FE 		movl	-476(%rbp), %edx
 5418      FFFF
 5419 0051 488BB528 		movq	-472(%rbp), %rsi
 5419      FEFFFF
 5420 0058 488B8530 		movq	-464(%rbp), %rax
 5420      FEFFFF
 5421 005f 4889C7   		movq	%rax, %rdi
 5422              	.LEHB128:
 5423 0062 E8000000 		call	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
 5423      00
 5424 0067 888547FE 		movb	%al, -441(%rbp)
 5424      FFFF
 5425              	.LBB83:
 101:../Checks.h   ****     {
 5426              		.loc 5 101 0
 5427 006d 0FB68547 		movzbl	-441(%rbp), %eax
 5427      FEFFFF
 5428 0074 83F001   		xorl	$1, %eax
 5429 0077 84C0     		testb	%al, %al
 5430 0079 0F84A001 		je	.L294
 5430      0000
 5431              	.LBB84:
 103:../Checks.h   **** 
 5432              		.loc 5 103 0
 5433 007f 488D8550 		leaq	-432(%rbp), %rax
 5433      FEFFFF
 5434 0086 4889C7   		movq	%rax, %rdi
 5435 0089 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5435      00
 5436              	.LEHE128:
 105:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 5437              		.loc 5 105 0
 5438 008e 488D8550 		leaq	-432(%rbp), %rax
 5438      FEFFFF
 5439 0095 BE000000 		movl	$.LC56, %esi
 5439      00
 5440 009a 4889C7   		movq	%rax, %rdi
 5441              	.LEHB129:
 5442 009d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5442      00
 5443              	.LBB85:
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5444              		.loc 5 106 0
 5445 00a2 C78548FE 		movl	$0, -440(%rbp)
 5445      FFFF0000 
 5445      0000
 5446              	.L288:
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5447              		.loc 5 106 0 is_stmt 0 discriminator 1
 5448 00ac 8B8548FE 		movl	-440(%rbp), %eax
 5448      FFFF
 5449 00b2 3B8524FE 		cmpl	-476(%rbp), %eax
 5449      FFFF
 5450 00b8 7D50     		jge	.L287
 107:../Checks.h   ****         stream << "] +/- " << tolerance << " but was [ ";
 5451              		.loc 5 107 0 is_stmt 1
 5452 00ba 8B8548FE 		movl	-440(%rbp), %eax
 5452      FFFF
 5453 00c0 4863D0   		movslq	%eax, %rdx
 5454 00c3 488B8530 		movq	-464(%rbp), %rax
 5454      FEFFFF
 5455 00ca 4889D6   		movq	%rdx, %rsi
 5456 00cd 4889C7   		movq	%rax, %rdi
 5457 00d0 E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 5457      00
 5458 00d5 8B10     		movl	(%rax), %edx
 5459 00d7 488D8550 		leaq	-432(%rbp), %rax
 5459      FEFFFF
 5460 00de 899520FE 		movl	%edx, -480(%rbp)
 5460      FFFF
 5461 00e4 F30F1085 		movss	-480(%rbp), %xmm0
 5461      20FEFFFF 
 5462 00ec 4889C7   		movq	%rax, %rdi
 5463 00ef E8000000 		call	_ZNSolsEf
 5463      00
 5464 00f4 BE000000 		movl	$.LC57, %esi
 5464      00
 5465 00f9 4889C7   		movq	%rax, %rdi
 5466 00fc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5466      00
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5467              		.loc 5 106 0 discriminator 2
 5468 0101 838548FE 		addl	$1, -440(%rbp)
 5468      FFFF01
 5469 0108 EBA2     		jmp	.L288
 5470              	.L287:
 5471              	.LBE85:
 108:../Checks.h   **** 
 5472              		.loc 5 108 0
 5473 010a 488B8518 		movq	-488(%rbp), %rax
 5473      FEFFFF
 5474 0111 8B18     		movl	(%rax), %ebx
 5475 0113 488D8550 		leaq	-432(%rbp), %rax
 5475      FEFFFF
 5476 011a BE000000 		movl	$.LC58, %esi
 5476      00
 5477 011f 4889C7   		movq	%rax, %rdi
 5478 0122 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5478      00
 5479 0127 899D20FE 		movl	%ebx, -480(%rbp)
 5479      FFFF
 5480 012d F30F1085 		movss	-480(%rbp), %xmm0
 5480      20FEFFFF 
 5481 0135 4889C7   		movq	%rax, %rdi
 5482 0138 E8000000 		call	_ZNSolsEf
 5482      00
 108:../Checks.h   **** 
 5483              		.loc 5 108 0 is_stmt 0 discriminator 1
 5484 013d BE000000 		movl	$.LC59, %esi
 5484      00
 5485 0142 4889C7   		movq	%rax, %rdi
 5486 0145 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5486      00
 5487              	.LBB86:
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5488              		.loc 5 110 0 is_stmt 1
 5489 014a C7854CFE 		movl	$0, -436(%rbp)
 5489      FFFF0000 
 5489      0000
 5490              	.L290:
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5491              		.loc 5 110 0 is_stmt 0 discriminator 1
 5492 0154 8B854CFE 		movl	-436(%rbp), %eax
 5492      FFFF
 5493 015a 3B8524FE 		cmpl	-476(%rbp), %eax
 5493      FFFF
 5494 0160 7D50     		jge	.L289
 111:../Checks.h   ****         stream << "]";
 5495              		.loc 5 111 0 is_stmt 1
 5496 0162 8B854CFE 		movl	-436(%rbp), %eax
 5496      FFFF
 5497 0168 4863D0   		movslq	%eax, %rdx
 5498 016b 488B8528 		movq	-472(%rbp), %rax
 5498      FEFFFF
 5499 0172 4889D6   		movq	%rdx, %rsi
 5500 0175 4889C7   		movq	%rax, %rdi
 5501 0178 E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 5501      00
 5502 017d 8B10     		movl	(%rax), %edx
 5503 017f 488D8550 		leaq	-432(%rbp), %rax
 5503      FEFFFF
 5504 0186 899520FE 		movl	%edx, -480(%rbp)
 5504      FFFF
 5505 018c F30F1085 		movss	-480(%rbp), %xmm0
 5505      20FEFFFF 
 5506 0194 4889C7   		movq	%rax, %rdi
 5507 0197 E8000000 		call	_ZNSolsEf
 5507      00
 5508 019c BE000000 		movl	$.LC57, %esi
 5508      00
 5509 01a1 4889C7   		movq	%rax, %rdi
 5510 01a4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5510      00
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5511              		.loc 5 110 0 discriminator 2
 5512 01a9 83854CFE 		addl	$1, -436(%rbp)
 5512      FFFF01
 5513 01b0 EBA2     		jmp	.L290
 5514              	.L289:
 5515              	.LBE86:
 112:../Checks.h   **** 
 5516              		.loc 5 112 0
 5517 01b2 488D8550 		leaq	-432(%rbp), %rax
 5517      FEFFFF
 5518 01b9 BE000000 		movl	$.LC60, %esi
 5518      00
 5519 01be 4889C7   		movq	%rax, %rdi
 5520 01c1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5520      00
 114:../Checks.h   ****     }
 5521              		.loc 5 114 0
 5522 01c6 488D8550 		leaq	-432(%rbp), %rax
 5522      FEFFFF
 5523 01cd 4889C7   		movq	%rax, %rdi
 5524 01d0 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5524      00
 5525 01d5 4889C2   		movq	%rax, %rdx
 5526 01d8 488B8D10 		movq	-496(%rbp), %rcx
 5526      FEFFFF
 5527 01df 488B8538 		movq	-456(%rbp), %rax
 5527      FEFFFF
 5528 01e6 4889CE   		movq	%rcx, %rsi
 5529 01e9 4889C7   		movq	%rax, %rdi
 5530 01ec E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5530      00
 5531              	.LEHE129:
 103:../Checks.h   **** 
 5532              		.loc 5 103 0
 5533 01f1 488D8550 		leaq	-432(%rbp), %rax
 5533      FEFFFF
 5534 01f8 4889C7   		movq	%rax, %rdi
 5535              	.LEHB130:
 5536 01fb E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5536      00
 5537              	.LEHE130:
 5538              	.LBE84:
 5539              	.LBE83:
 5540              		.loc 5 116 0
 5541 0200 EB1D     		jmp	.L294
 5542              	.L293:
 5543 0202 4889C3   		movq	%rax, %rbx
 5544              	.LBB88:
 5545              	.LBB87:
 103:../Checks.h   **** 
 5546              		.loc 5 103 0
 5547 0205 488D8550 		leaq	-432(%rbp), %rax
 5547      FEFFFF
 5548 020c 4889C7   		movq	%rax, %rdi
 5549 020f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5549      00
 5550 0214 4889D8   		movq	%rbx, %rax
 5551 0217 4889C7   		movq	%rax, %rdi
 5552              	.LEHB131:
 5553 021a E8000000 		call	_Unwind_Resume
 5553      00
 5554              	.LEHE131:
 5555              	.L294:
 5556              	.LBE87:
 5557              	.LBE88:
 5558              		.loc 5 116 0
 5559 021f 90       		nop
 5560 0220 488B45E8 		movq	-24(%rbp), %rax
 5561 0224 64483304 		xorq	%fs:40, %rax
 5561      25280000 
 5561      00
 5562 022d 7405     		je	.L292
 5563 022f E8000000 		call	__stack_chk_fail
 5563      00
 5564              	.L292:
 5565 0234 4881C4E8 		addq	$488, %rsp
 5565      010000
 5566 023b 5B       		popq	%rbx
 5567 023c 5D       		popq	%rbp
 5568              		.cfi_def_cfa 7, 8
 5569 023d C3       		ret
 5570              		.cfi_endproc
 5571              	.LFE1474:
 5572              		.section	.gcc_except_table
 5573              	.LLSDA1474:
 5574 0397 FF       		.byte	0xff
 5575 0398 FF       		.byte	0xff
 5576 0399 01       		.byte	0x1
 5577 039a 15       		.uleb128 .LLSDACSE1474-.LLSDACSB1474
 5578              	.LLSDACSB1474:
 5579 039b 62       		.uleb128 .LEHB128-.LFB1474
 5580 039c 2C       		.uleb128 .LEHE128-.LEHB128
 5581 039d 00       		.uleb128 0
 5582 039e 00       		.uleb128 0
 5583 039f 9D01     		.uleb128 .LEHB129-.LFB1474
 5584 03a1 D402     		.uleb128 .LEHE129-.LEHB129
 5585 03a3 8204     		.uleb128 .L293-.LFB1474
 5586 03a5 00       		.uleb128 0
 5587 03a6 FB03     		.uleb128 .LEHB130-.LFB1474
 5588 03a8 05       		.uleb128 .LEHE130-.LEHB130
 5589 03a9 00       		.uleb128 0
 5590 03aa 00       		.uleb128 0
 5591 03ab 9A04     		.uleb128 .LEHB131-.LFB1474
 5592 03ad 05       		.uleb128 .LEHE131-.LEHB131
 5593 03ae 00       		.uleb128 0
 5594 03af 00       		.uleb128 0
 5595              	.LLSDACSE1474:
 5596              		.section	.text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iR
 5598              		.section	.rodata
 5599              	.LC61:
 5600 05e7 556E6861 		.string	"Unhandled system exception"
 5600      6E646C65 
 5600      64207379 
 5600      7374656D 
 5600      20657863 
 5601              	.LC62:
 5602 0602 556E6861 		.string	"Unhandled exception: Crash!"
 5602      6E646C65 
 5602      64206578 
 5602      63657074 
 5602      696F6E3A 
 5603              		.text
 5605              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvRT_RKNS
 5606              	.LFB1475:
 5607              		.file 8 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5608              		.loc 8 16 0
 5609              		.cfi_startproc
 5610              		.cfi_personality 0x3,__gxx_personality_v0
 5611              		.cfi_lsda 0x3,.LLSDA1475
 5612 1c2d 55       		pushq	%rbp
 5613              		.cfi_def_cfa_offset 16
 5614              		.cfi_offset 6, -16
 5615 1c2e 4889E5   		movq	%rsp, %rbp
 5616              		.cfi_def_cfa_register 6
 5617 1c31 4154     		pushq	%r12
 5618 1c33 53       		pushq	%rbx
 5619 1c34 4881EC50 		subq	$1616, %rsp
 5619      060000
 5620              		.cfi_offset 12, -24
 5621              		.cfi_offset 3, -32
 5622 1c3b 4889BDA8 		movq	%rdi, -1624(%rbp)
 5622      F9FFFF
 5623 1c42 4889B5A0 		movq	%rsi, -1632(%rbp)
 5623      F9FFFF
 5624              		.loc 8 16 0
 5625 1c49 64488B04 		movq	%fs:40, %rax
 5625      25280000 
 5625      00
 5626 1c52 488945E8 		movq	%rax, -24(%rbp)
 5627 1c56 31C0     		xorl	%eax, %eax
 5628              	.LEHB132:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5629              		.loc 8 18 0
 5630 1c58 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5630      00
 5631              	.LEHE132:
 5632 1c5d 4889C2   		movq	%rax, %rdx
 5633 1c60 488B85A0 		movq	-1632(%rbp), %rax
 5633      F9FFFF
 5634 1c67 488902   		movq	%rax, (%rdx)
 5635              	.LBB89:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5636              		.loc 8 23 0
 5637 1c6a 488D8580 		leaq	-1152(%rbp), %rax
 5637      FBFFFF
 5638 1c71 4889C7   		movq	%rax, %rdi
 5639              	.LEHB133:
 5640 1c74 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5640      00
 5641              	.LEHE133:
 5642              		.loc 8 23 0 is_stmt 0 discriminator 1
 5643 1c79 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5643      000000
 5644 1c80 BE010000 		movl	$1, %esi
 5644      00
 5645 1c85 4889C7   		movq	%rax, %rdi
 5646 1c88 E8000000 		call	__sigsetjmp
 5646      00
 5647 1c8d 85C0     		testl	%eax, %eax
 5648 1c8f 0F95C0   		setne	%al
 5649 1c92 84C0     		testb	%al, %al
 5650 1c94 7423     		je	.L315
 5651              		.loc 8 23 0 discriminator 3
 5652 1c96 BF080000 		movl	$8, %edi
 5652      00
 5653 1c9b E8000000 		call	__cxa_allocate_exception
 5653      00
 5654 1ca0 48C70000 		movq	$.LC61, (%rax)
 5654      000000
 5655 1ca7 BA000000 		movl	$0, %edx
 5655      00
 5656 1cac BE000000 		movl	$_ZTIPKc, %esi
 5656      00
 5657 1cb1 4889C7   		movq	%rax, %rdi
 5658              	.LEHB134:
 5659 1cb4 E8000000 		call	__cxa_throw
 5659      00
 5660              	.L315:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5661              		.loc 8 25 0 is_stmt 1
 5662 1cb9 488B85A8 		movq	-1624(%rbp), %rax
 5662      F9FFFF
 5663 1cc0 4889C7   		movq	%rax, %rdi
 5664 1cc3 E8DAF8FF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv
 5664      FF
 5665              	.LEHE134:
  23:../ExecuteTest.h **** #endif
 5666              		.loc 8 23 0
 5667 1cc8 488D8580 		leaq	-1152(%rbp), %rax
 5667      FBFFFF
 5668 1ccf 4889C7   		movq	%rax, %rdi
 5669              	.LEHB135:
 5670 1cd2 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5670      00
 5671              	.LEHE135:
 5672              	.LBE89:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5673              		.loc 8 42 0
 5674 1cd7 E9F00100 		jmp	.L295
 5674      00
 5675              	.L310:
 5676 1cdc 4989C4   		movq	%rax, %r12
 5677 1cdf 4889D3   		movq	%rdx, %rbx
 5678              	.LBB90:
  23:../ExecuteTest.h **** #endif
 5679              		.loc 8 23 0
 5680 1ce2 488D8580 		leaq	-1152(%rbp), %rax
 5680      FBFFFF
 5681 1ce9 4889C7   		movq	%rax, %rdi
 5682 1cec E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5682      00
 5683 1cf1 4C89E0   		movq	%r12, %rax
 5684 1cf4 4889DA   		movq	%rbx, %rdx
 5685 1cf7 EB00     		jmp	.L299
 5686              	.L309:
 5687              	.L299:
 5688 1cf9 4883FA01 		cmpq	$1, %rdx
 5689 1cfd 740F     		je	.L301
 5690 1cff 4883FA02 		cmpq	$2, %rdx
 5691 1d03 0F84A600 		je	.L302
 5691      0000
 5692 1d09 E9430100 		jmp	.L316
 5692      00
 5693              	.L301:
 5694              	.LBE90:
 5695              	.LBB91:
  27:../ExecuteTest.h **** 	{
 5696              		.loc 8 27 0
 5697 1d0e 4889C7   		movq	%rax, %rdi
 5698 1d11 E8000000 		call	__cxa_begin_catch
 5698      00
 5699 1d16 488985B0 		movq	%rax, -1616(%rbp)
 5699      F9FFFF
  30:../ExecuteTest.h **** 	}
 5700              		.loc 8 30 0
 5701 1d1d 488B85B0 		movq	-1616(%rbp), %rax
 5701      F9FFFF
 5702 1d24 488B00   		movq	(%rax), %rax
 5703 1d27 4883C010 		addq	$16, %rax
 5704 1d2b 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5705              		.loc 8 29 0
 5706 1d2e 488B95B0 		movq	-1616(%rbp), %rdx
 5706      F9FFFF
 5707 1d35 4889D7   		movq	%rdx, %rdi
 5708 1d38 FFD0     		call	*%rax
 5709 1d3a 4889C3   		movq	%rax, %rbx
 5710 1d3d 488B85B0 		movq	-1616(%rbp), %rax
 5710      F9FFFF
 5711 1d44 4889C7   		movq	%rax, %rdi
 5712              	.LEHB136:
 5713 1d47 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5713      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5714              		.loc 8 29 0 is_stmt 0 discriminator 1
 5715 1d4c 4189C4   		movl	%eax, %r12d
 5716 1d4f 488B85B0 		movq	-1616(%rbp), %rax
 5716      F9FFFF
 5717 1d56 4889C7   		movq	%rax, %rdi
 5718 1d59 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5718      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5719              		.loc 8 29 0 discriminator 2
 5720 1d5e 4889C1   		movq	%rax, %rcx
 5721 1d61 488B85A0 		movq	-1632(%rbp), %rax
 5721      F9FFFF
 5722 1d68 488B10   		movq	(%rax), %rdx
 5723 1d6b 488B85A0 		movq	-1632(%rbp), %rax
 5723      F9FFFF
 5724 1d72 488B7008 		movq	8(%rax), %rsi
 5725 1d76 488D85C0 		leaq	-1600(%rbp), %rax
 5725      F9FFFF
 5726 1d7d 4589E0   		movl	%r12d, %r8d
 5727 1d80 4889C7   		movq	%rax, %rdi
 5728 1d83 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5728      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5729              		.loc 8 29 0 discriminator 4
 5730 1d88 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5730      00
 5731 1d8d 488B00   		movq	(%rax), %rax
 5732 1d90 488D8DC0 		leaq	-1600(%rbp), %rcx
 5732      F9FFFF
 5733 1d97 4889DA   		movq	%rbx, %rdx
 5734 1d9a 4889CE   		movq	%rcx, %rsi
 5735 1d9d 4889C7   		movq	%rax, %rdi
 5736 1da0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5736      00
 5737              	.LEHE136:
  27:../ExecuteTest.h **** 	{
 5738              		.loc 8 27 0 is_stmt 1 discriminator 8
 5739 1da5 E8000000 		call	__cxa_end_catch
 5739      00
 5740              	.LBE91:
 5741              		.loc 8 42 0 discriminator 8
 5742 1daa E91D0100 		jmp	.L295
 5742      00
 5743              	.L302:
 5744              	.LBB92:
  32:../ExecuteTest.h **** 	{
 5745              		.loc 8 32 0
 5746 1daf 4889C7   		movq	%rax, %rdi
 5747 1db2 E8000000 		call	__cxa_begin_catch
 5747      00
 5748 1db7 488985B8 		movq	%rax, -1608(%rbp)
 5748      F9FFFF
 5749              	.LBB93:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5750              		.loc 8 34 0
 5751 1dbe 488D85E0 		leaq	-1568(%rbp), %rax
 5751      F9FFFF
 5752 1dc5 4889C7   		movq	%rax, %rdi
 5753              	.LEHB137:
 5754 1dc8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5754      00
 5755              	.LEHE137:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5756              		.loc 8 35 0
 5757 1dcd 488B85B8 		movq	-1608(%rbp), %rax
 5757      F9FFFF
 5758 1dd4 488B00   		movq	(%rax), %rax
 5759 1dd7 4883C010 		addq	$16, %rax
 5760 1ddb 488B00   		movq	(%rax), %rax
 5761 1dde 488B95B8 		movq	-1608(%rbp), %rdx
 5761      F9FFFF
 5762 1de5 4889D7   		movq	%rdx, %rdi
 5763 1de8 FFD0     		call	*%rax
 5764 1dea 4889C3   		movq	%rax, %rbx
 5765 1ded 488D85E0 		leaq	-1568(%rbp), %rax
 5765      F9FFFF
 5766 1df4 BE000000 		movl	$.LC45, %esi
 5766      00
 5767 1df9 4889C7   		movq	%rax, %rdi
 5768              	.LEHB138:
 5769 1dfc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5769      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5770              		.loc 8 35 0 is_stmt 0 discriminator 1
 5771 1e01 4889DE   		movq	%rbx, %rsi
 5772 1e04 4889C7   		movq	%rax, %rdi
 5773 1e07 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5773      00
  36:../ExecuteTest.h **** 	}
 5774              		.loc 8 36 0 is_stmt 1
 5775 1e0c 488D85E0 		leaq	-1568(%rbp), %rax
 5775      F9FFFF
 5776 1e13 4889C7   		movq	%rax, %rdi
 5777 1e16 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5777      00
 5778 1e1b 4889C3   		movq	%rax, %rbx
 5779 1e1e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5779      00
  36:../ExecuteTest.h **** 	}
 5780              		.loc 8 36 0 is_stmt 0 discriminator 1
 5781 1e23 488B00   		movq	(%rax), %rax
 5782 1e26 488B8DA0 		movq	-1632(%rbp), %rcx
 5782      F9FFFF
 5783 1e2d 4889DA   		movq	%rbx, %rdx
 5784 1e30 4889CE   		movq	%rcx, %rsi
 5785 1e33 4889C7   		movq	%rax, %rdi
 5786 1e36 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5786      00
 5787              	.LEHE138:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5788              		.loc 8 34 0 is_stmt 1
 5789 1e3b 488D85E0 		leaq	-1568(%rbp), %rax
 5789      F9FFFF
 5790 1e42 4889C7   		movq	%rax, %rdi
 5791              	.LEHB139:
 5792 1e45 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5792      00
 5793              	.LEHE139:
 5794              	.LBE93:
  32:../ExecuteTest.h **** 	{
 5795              		.loc 8 32 0
 5796 1e4a E8000000 		call	__cxa_end_catch
 5796      00
 5797              	.LBE92:
 5798              		.loc 8 42 0
 5799 1e4f EB7B     		jmp	.L295
 5800              	.L316:
  38:../ExecuteTest.h **** 	{
 5801              		.loc 8 38 0
 5802 1e51 4889C7   		movq	%rax, %rdi
 5803 1e54 E8000000 		call	__cxa_begin_catch
 5803      00
 5804              	.LEHB140:
  40:../ExecuteTest.h **** 	}
 5805              		.loc 8 40 0
 5806 1e59 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5806      00
 5807 1e5e 488B00   		movq	(%rax), %rax
 5808 1e61 488B8DA0 		movq	-1632(%rbp), %rcx
 5808      F9FFFF
 5809 1e68 BA000000 		movl	$.LC62, %edx
 5809      00
 5810 1e6d 4889CE   		movq	%rcx, %rsi
 5811 1e70 4889C7   		movq	%rax, %rdi
 5812 1e73 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5812      00
 5813              	.LEHE140:
 5814              	.LEHB141:
  38:../ExecuteTest.h **** 	{
 5815              		.loc 8 38 0
 5816 1e78 E8000000 		call	__cxa_end_catch
 5816      00
 5817              		.loc 8 42 0
 5818 1e7d EB4D     		jmp	.L295
 5819              	.L311:
 5820 1e7f 4889C3   		movq	%rax, %rbx
 5821              	.LBB95:
  27:../ExecuteTest.h **** 	{
 5822              		.loc 8 27 0
 5823 1e82 E8000000 		call	__cxa_end_catch
 5823      00
 5824 1e87 4889D8   		movq	%rbx, %rax
 5825 1e8a 4889C7   		movq	%rax, %rdi
 5826 1e8d E8000000 		call	_Unwind_Resume
 5826      00
 5827              	.LEHE141:
 5828              	.L313:
 5829 1e92 4889C3   		movq	%rax, %rbx
 5830              	.LBE95:
 5831              	.LBB96:
 5832              	.LBB94:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5833              		.loc 8 34 0
 5834 1e95 488D85E0 		leaq	-1568(%rbp), %rax
 5834      F9FFFF
 5835 1e9c 4889C7   		movq	%rax, %rdi
 5836 1e9f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5836      00
 5837 1ea4 EB03     		jmp	.L306
 5838              	.L312:
 5839 1ea6 4889C3   		movq	%rax, %rbx
 5840              	.L306:
 5841              	.LBE94:
  32:../ExecuteTest.h **** 	{
 5842              		.loc 8 32 0
 5843 1ea9 E8000000 		call	__cxa_end_catch
 5843      00
 5844 1eae 4889D8   		movq	%rbx, %rax
 5845 1eb1 4889C7   		movq	%rax, %rdi
 5846              	.LEHB142:
 5847 1eb4 E8000000 		call	_Unwind_Resume
 5847      00
 5848              	.LEHE142:
 5849              	.L314:
 5850 1eb9 4889C3   		movq	%rax, %rbx
 5851              	.LBE96:
  38:../ExecuteTest.h **** 	{
 5852              		.loc 8 38 0
 5853 1ebc E8000000 		call	__cxa_end_catch
 5853      00
 5854 1ec1 4889D8   		movq	%rbx, %rax
 5855 1ec4 4889C7   		movq	%rax, %rdi
 5856              	.LEHB143:
 5857 1ec7 E8000000 		call	_Unwind_Resume
 5857      00
 5858              	.LEHE143:
 5859              	.L295:
 5860              		.loc 8 42 0
 5861 1ecc 488B45E8 		movq	-24(%rbp), %rax
 5862 1ed0 64483304 		xorq	%fs:40, %rax
 5862      25280000 
 5862      00
 5863 1ed9 7405     		je	.L308
 5864 1edb E8000000 		call	__stack_chk_fail
 5864      00
 5865              	.L308:
 5866 1ee0 4881C450 		addq	$1616, %rsp
 5866      060000
 5867 1ee7 5B       		popq	%rbx
 5868 1ee8 415C     		popq	%r12
 5869 1eea 5D       		popq	%rbp
 5870              		.cfi_def_cfa 7, 8
 5871 1eeb C3       		ret
 5872              		.cfi_endproc
 5873              	.LFE1475:
 5874              		.section	.gcc_except_table
 5875              		.align 4
 5876              	.LLSDA1475:
 5877 03b0 FF       		.byte	0xff
 5878 03b1 03       		.byte	0x3
 5879 03b2 59       		.uleb128 .LLSDATT1475-.LLSDATTD1475
 5880              	.LLSDATTD1475:
 5881 03b3 01       		.byte	0x1
 5882 03b4 42       		.uleb128 .LLSDACSE1475-.LLSDACSB1475
 5883              	.LLSDACSB1475:
 5884 03b5 2B       		.uleb128 .LEHB132-.LFB1475
 5885 03b6 05       		.uleb128 .LEHE132-.LEHB132
 5886 03b7 00       		.uleb128 0
 5887 03b8 00       		.uleb128 0
 5888 03b9 47       		.uleb128 .LEHB133-.LFB1475
 5889 03ba 05       		.uleb128 .LEHE133-.LEHB133
 5890 03bb CC01     		.uleb128 .L309-.LFB1475
 5891 03bd 05       		.uleb128 0x5
 5892 03be 8701     		.uleb128 .LEHB134-.LFB1475
 5893 03c0 14       		.uleb128 .LEHE134-.LEHB134
 5894 03c1 AF01     		.uleb128 .L310-.LFB1475
 5895 03c3 07       		.uleb128 0x7
 5896 03c4 A501     		.uleb128 .LEHB135-.LFB1475
 5897 03c6 05       		.uleb128 .LEHE135-.LEHB135
 5898 03c7 CC01     		.uleb128 .L309-.LFB1475
 5899 03c9 05       		.uleb128 0x5
 5900 03ca 9A02     		.uleb128 .LEHB136-.LFB1475
 5901 03cc 5E       		.uleb128 .LEHE136-.LEHB136
 5902 03cd D204     		.uleb128 .L311-.LFB1475
 5903 03cf 00       		.uleb128 0
 5904 03d0 9B03     		.uleb128 .LEHB137-.LFB1475
 5905 03d2 05       		.uleb128 .LEHE137-.LEHB137
 5906 03d3 F904     		.uleb128 .L312-.LFB1475
 5907 03d5 00       		.uleb128 0
 5908 03d6 CF03     		.uleb128 .LEHB138-.LFB1475
 5909 03d8 3F       		.uleb128 .LEHE138-.LEHB138
 5910 03d9 E504     		.uleb128 .L313-.LFB1475
 5911 03db 00       		.uleb128 0
 5912 03dc 9804     		.uleb128 .LEHB139-.LFB1475
 5913 03de 05       		.uleb128 .LEHE139-.LEHB139
 5914 03df F904     		.uleb128 .L312-.LFB1475
 5915 03e1 00       		.uleb128 0
 5916 03e2 AC04     		.uleb128 .LEHB140-.LFB1475
 5917 03e4 1F       		.uleb128 .LEHE140-.LEHB140
 5918 03e5 8C05     		.uleb128 .L314-.LFB1475
 5919 03e7 00       		.uleb128 0
 5920 03e8 CB04     		.uleb128 .LEHB141-.LFB1475
 5921 03ea 1A       		.uleb128 .LEHE141-.LEHB141
 5922 03eb 00       		.uleb128 0
 5923 03ec 00       		.uleb128 0
 5924 03ed 8705     		.uleb128 .LEHB142-.LFB1475
 5925 03ef 05       		.uleb128 .LEHE142-.LEHB142
 5926 03f0 00       		.uleb128 0
 5927 03f1 00       		.uleb128 0
 5928 03f2 9A05     		.uleb128 .LEHB143-.LFB1475
 5929 03f4 05       		.uleb128 .LEHE143-.LEHB143
 5930 03f5 00       		.uleb128 0
 5931 03f6 00       		.uleb128 0
 5932              	.LLSDACSE1475:
 5933 03f7 03       		.byte	0x3
 5934 03f8 00       		.byte	0
 5935 03f9 02       		.byte	0x2
 5936 03fa 7D       		.byte	0x7d
 5937 03fb 01       		.byte	0x1
 5938 03fc 7D       		.byte	0x7d
 5939 03fd 00       		.byte	0
 5940 03fe 7D       		.byte	0x7d
 5941 03ff 00       		.align 4
 5942 0400 00000000 		.long	0
 5943              	
 5944 0404 00000000 		.long	_ZTISt9exception
 5945 0408 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5946              	.LLSDATT1475:
 5947              		.text
 5950              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvRT_RKNS
 5951              	.LFB1477:
  16:../ExecuteTest.h **** {
 5952              		.loc 8 16 0
 5953              		.cfi_startproc
 5954              		.cfi_personality 0x3,__gxx_personality_v0
 5955              		.cfi_lsda 0x3,.LLSDA1477
 5956 1eec 55       		pushq	%rbp
 5957              		.cfi_def_cfa_offset 16
 5958              		.cfi_offset 6, -16
 5959 1eed 4889E5   		movq	%rsp, %rbp
 5960              		.cfi_def_cfa_register 6
 5961 1ef0 4154     		pushq	%r12
 5962 1ef2 53       		pushq	%rbx
 5963 1ef3 4881EC50 		subq	$1616, %rsp
 5963      060000
 5964              		.cfi_offset 12, -24
 5965              		.cfi_offset 3, -32
 5966 1efa 4889BDA8 		movq	%rdi, -1624(%rbp)
 5966      F9FFFF
 5967 1f01 4889B5A0 		movq	%rsi, -1632(%rbp)
 5967      F9FFFF
  16:../ExecuteTest.h **** {
 5968              		.loc 8 16 0
 5969 1f08 64488B04 		movq	%fs:40, %rax
 5969      25280000 
 5969      00
 5970 1f11 488945E8 		movq	%rax, -24(%rbp)
 5971 1f15 31C0     		xorl	%eax, %eax
 5972              	.LEHB144:
  18:../ExecuteTest.h **** 
 5973              		.loc 8 18 0
 5974 1f17 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5974      00
 5975              	.LEHE144:
 5976 1f1c 4889C2   		movq	%rax, %rdx
 5977 1f1f 488B85A0 		movq	-1632(%rbp), %rax
 5977      F9FFFF
 5978 1f26 488902   		movq	%rax, (%rdx)
 5979              	.LBB97:
  23:../ExecuteTest.h **** #endif
 5980              		.loc 8 23 0
 5981 1f29 488D8580 		leaq	-1152(%rbp), %rax
 5981      FBFFFF
 5982 1f30 4889C7   		movq	%rax, %rdi
 5983              	.LEHB145:
 5984 1f33 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5984      00
 5985              	.LEHE145:
  23:../ExecuteTest.h **** #endif
 5986              		.loc 8 23 0 is_stmt 0 discriminator 1
 5987 1f38 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5987      000000
 5988 1f3f BE010000 		movl	$1, %esi
 5988      00
 5989 1f44 4889C7   		movq	%rax, %rdi
 5990 1f47 E8000000 		call	__sigsetjmp
 5990      00
 5991 1f4c 85C0     		testl	%eax, %eax
 5992 1f4e 0F95C0   		setne	%al
 5993 1f51 84C0     		testb	%al, %al
 5994 1f53 7423     		je	.L337
  23:../ExecuteTest.h **** #endif
 5995              		.loc 8 23 0 discriminator 3
 5996 1f55 BF080000 		movl	$8, %edi
 5996      00
 5997 1f5a E8000000 		call	__cxa_allocate_exception
 5997      00
 5998 1f5f 48C70000 		movq	$.LC61, (%rax)
 5998      000000
 5999 1f66 BA000000 		movl	$0, %edx
 5999      00
 6000 1f6b BE000000 		movl	$_ZTIPKc, %esi
 6000      00
 6001 1f70 4889C7   		movq	%rax, %rdi
 6002              	.LEHB146:
 6003 1f73 E8000000 		call	__cxa_throw
 6003      00
 6004              	.L337:
  25:../ExecuteTest.h **** 	}
 6005              		.loc 8 25 0 is_stmt 1
 6006 1f78 488B85A8 		movq	-1624(%rbp), %rax
 6006      F9FFFF
 6007 1f7f 4889C7   		movq	%rax, %rdi
 6008 1f82 E891FAFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv
 6008      FF
 6009              	.LEHE146:
  23:../ExecuteTest.h **** #endif
 6010              		.loc 8 23 0
 6011 1f87 488D8580 		leaq	-1152(%rbp), %rax
 6011      FBFFFF
 6012 1f8e 4889C7   		movq	%rax, %rdi
 6013              	.LEHB147:
 6014 1f91 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6014      00
 6015              	.LEHE147:
 6016              	.LBE97:
 6017              		.loc 8 42 0
 6018 1f96 E9F00100 		jmp	.L317
 6018      00
 6019              	.L332:
 6020 1f9b 4989C4   		movq	%rax, %r12
 6021 1f9e 4889D3   		movq	%rdx, %rbx
 6022              	.LBB98:
  23:../ExecuteTest.h **** #endif
 6023              		.loc 8 23 0
 6024 1fa1 488D8580 		leaq	-1152(%rbp), %rax
 6024      FBFFFF
 6025 1fa8 4889C7   		movq	%rax, %rdi
 6026 1fab E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6026      00
 6027 1fb0 4C89E0   		movq	%r12, %rax
 6028 1fb3 4889DA   		movq	%rbx, %rdx
 6029 1fb6 EB00     		jmp	.L321
 6030              	.L331:
 6031              	.L321:
 6032 1fb8 4883FA01 		cmpq	$1, %rdx
 6033 1fbc 740F     		je	.L323
 6034 1fbe 4883FA02 		cmpq	$2, %rdx
 6035 1fc2 0F84A600 		je	.L324
 6035      0000
 6036 1fc8 E9430100 		jmp	.L338
 6036      00
 6037              	.L323:
 6038              	.LBE98:
 6039              	.LBB99:
  27:../ExecuteTest.h **** 	{
 6040              		.loc 8 27 0
 6041 1fcd 4889C7   		movq	%rax, %rdi
 6042 1fd0 E8000000 		call	__cxa_begin_catch
 6042      00
 6043 1fd5 488985B0 		movq	%rax, -1616(%rbp)
 6043      F9FFFF
  30:../ExecuteTest.h **** 	}
 6044              		.loc 8 30 0
 6045 1fdc 488B85B0 		movq	-1616(%rbp), %rax
 6045      F9FFFF
 6046 1fe3 488B00   		movq	(%rax), %rax
 6047 1fe6 4883C010 		addq	$16, %rax
 6048 1fea 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6049              		.loc 8 29 0
 6050 1fed 488B95B0 		movq	-1616(%rbp), %rdx
 6050      F9FFFF
 6051 1ff4 4889D7   		movq	%rdx, %rdi
 6052 1ff7 FFD0     		call	*%rax
 6053 1ff9 4889C3   		movq	%rax, %rbx
 6054 1ffc 488B85B0 		movq	-1616(%rbp), %rax
 6054      F9FFFF
 6055 2003 4889C7   		movq	%rax, %rdi
 6056              	.LEHB148:
 6057 2006 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6057      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6058              		.loc 8 29 0 is_stmt 0 discriminator 1
 6059 200b 4189C4   		movl	%eax, %r12d
 6060 200e 488B85B0 		movq	-1616(%rbp), %rax
 6060      F9FFFF
 6061 2015 4889C7   		movq	%rax, %rdi
 6062 2018 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6062      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6063              		.loc 8 29 0 discriminator 2
 6064 201d 4889C1   		movq	%rax, %rcx
 6065 2020 488B85A0 		movq	-1632(%rbp), %rax
 6065      F9FFFF
 6066 2027 488B10   		movq	(%rax), %rdx
 6067 202a 488B85A0 		movq	-1632(%rbp), %rax
 6067      F9FFFF
 6068 2031 488B7008 		movq	8(%rax), %rsi
 6069 2035 488D85C0 		leaq	-1600(%rbp), %rax
 6069      F9FFFF
 6070 203c 4589E0   		movl	%r12d, %r8d
 6071 203f 4889C7   		movq	%rax, %rdi
 6072 2042 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6072      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6073              		.loc 8 29 0 discriminator 4
 6074 2047 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6074      00
 6075 204c 488B00   		movq	(%rax), %rax
 6076 204f 488D8DC0 		leaq	-1600(%rbp), %rcx
 6076      F9FFFF
 6077 2056 4889DA   		movq	%rbx, %rdx
 6078 2059 4889CE   		movq	%rcx, %rsi
 6079 205c 4889C7   		movq	%rax, %rdi
 6080 205f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6080      00
 6081              	.LEHE148:
  27:../ExecuteTest.h **** 	{
 6082              		.loc 8 27 0 is_stmt 1 discriminator 8
 6083 2064 E8000000 		call	__cxa_end_catch
 6083      00
 6084              	.LBE99:
 6085              		.loc 8 42 0 discriminator 8
 6086 2069 E91D0100 		jmp	.L317
 6086      00
 6087              	.L324:
 6088              	.LBB100:
  32:../ExecuteTest.h **** 	{
 6089              		.loc 8 32 0
 6090 206e 4889C7   		movq	%rax, %rdi
 6091 2071 E8000000 		call	__cxa_begin_catch
 6091      00
 6092 2076 488985B8 		movq	%rax, -1608(%rbp)
 6092      F9FFFF
 6093              	.LBB101:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6094              		.loc 8 34 0
 6095 207d 488D85E0 		leaq	-1568(%rbp), %rax
 6095      F9FFFF
 6096 2084 4889C7   		movq	%rax, %rdi
 6097              	.LEHB149:
 6098 2087 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6098      00
 6099              	.LEHE149:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6100              		.loc 8 35 0
 6101 208c 488B85B8 		movq	-1608(%rbp), %rax
 6101      F9FFFF
 6102 2093 488B00   		movq	(%rax), %rax
 6103 2096 4883C010 		addq	$16, %rax
 6104 209a 488B00   		movq	(%rax), %rax
 6105 209d 488B95B8 		movq	-1608(%rbp), %rdx
 6105      F9FFFF
 6106 20a4 4889D7   		movq	%rdx, %rdi
 6107 20a7 FFD0     		call	*%rax
 6108 20a9 4889C3   		movq	%rax, %rbx
 6109 20ac 488D85E0 		leaq	-1568(%rbp), %rax
 6109      F9FFFF
 6110 20b3 BE000000 		movl	$.LC45, %esi
 6110      00
 6111 20b8 4889C7   		movq	%rax, %rdi
 6112              	.LEHB150:
 6113 20bb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6113      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6114              		.loc 8 35 0 is_stmt 0 discriminator 1
 6115 20c0 4889DE   		movq	%rbx, %rsi
 6116 20c3 4889C7   		movq	%rax, %rdi
 6117 20c6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6117      00
  36:../ExecuteTest.h **** 	}
 6118              		.loc 8 36 0 is_stmt 1
 6119 20cb 488D85E0 		leaq	-1568(%rbp), %rax
 6119      F9FFFF
 6120 20d2 4889C7   		movq	%rax, %rdi
 6121 20d5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6121      00
 6122 20da 4889C3   		movq	%rax, %rbx
 6123 20dd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6123      00
  36:../ExecuteTest.h **** 	}
 6124              		.loc 8 36 0 is_stmt 0 discriminator 1
 6125 20e2 488B00   		movq	(%rax), %rax
 6126 20e5 488B8DA0 		movq	-1632(%rbp), %rcx
 6126      F9FFFF
 6127 20ec 4889DA   		movq	%rbx, %rdx
 6128 20ef 4889CE   		movq	%rcx, %rsi
 6129 20f2 4889C7   		movq	%rax, %rdi
 6130 20f5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6130      00
 6131              	.LEHE150:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6132              		.loc 8 34 0 is_stmt 1
 6133 20fa 488D85E0 		leaq	-1568(%rbp), %rax
 6133      F9FFFF
 6134 2101 4889C7   		movq	%rax, %rdi
 6135              	.LEHB151:
 6136 2104 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6136      00
 6137              	.LEHE151:
 6138              	.LBE101:
  32:../ExecuteTest.h **** 	{
 6139              		.loc 8 32 0
 6140 2109 E8000000 		call	__cxa_end_catch
 6140      00
 6141              	.LBE100:
 6142              		.loc 8 42 0
 6143 210e EB7B     		jmp	.L317
 6144              	.L338:
  38:../ExecuteTest.h **** 	{
 6145              		.loc 8 38 0
 6146 2110 4889C7   		movq	%rax, %rdi
 6147 2113 E8000000 		call	__cxa_begin_catch
 6147      00
 6148              	.LEHB152:
  40:../ExecuteTest.h **** 	}
 6149              		.loc 8 40 0
 6150 2118 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6150      00
 6151 211d 488B00   		movq	(%rax), %rax
 6152 2120 488B8DA0 		movq	-1632(%rbp), %rcx
 6152      F9FFFF
 6153 2127 BA000000 		movl	$.LC62, %edx
 6153      00
 6154 212c 4889CE   		movq	%rcx, %rsi
 6155 212f 4889C7   		movq	%rax, %rdi
 6156 2132 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6156      00
 6157              	.LEHE152:
 6158              	.LEHB153:
  38:../ExecuteTest.h **** 	{
 6159              		.loc 8 38 0
 6160 2137 E8000000 		call	__cxa_end_catch
 6160      00
 6161              		.loc 8 42 0
 6162 213c EB4D     		jmp	.L317
 6163              	.L333:
 6164 213e 4889C3   		movq	%rax, %rbx
 6165              	.LBB103:
  27:../ExecuteTest.h **** 	{
 6166              		.loc 8 27 0
 6167 2141 E8000000 		call	__cxa_end_catch
 6167      00
 6168 2146 4889D8   		movq	%rbx, %rax
 6169 2149 4889C7   		movq	%rax, %rdi
 6170 214c E8000000 		call	_Unwind_Resume
 6170      00
 6171              	.LEHE153:
 6172              	.L335:
 6173 2151 4889C3   		movq	%rax, %rbx
 6174              	.LBE103:
 6175              	.LBB104:
 6176              	.LBB102:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6177              		.loc 8 34 0
 6178 2154 488D85E0 		leaq	-1568(%rbp), %rax
 6178      F9FFFF
 6179 215b 4889C7   		movq	%rax, %rdi
 6180 215e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6180      00
 6181 2163 EB03     		jmp	.L328
 6182              	.L334:
 6183 2165 4889C3   		movq	%rax, %rbx
 6184              	.L328:
 6185              	.LBE102:
  32:../ExecuteTest.h **** 	{
 6186              		.loc 8 32 0
 6187 2168 E8000000 		call	__cxa_end_catch
 6187      00
 6188 216d 4889D8   		movq	%rbx, %rax
 6189 2170 4889C7   		movq	%rax, %rdi
 6190              	.LEHB154:
 6191 2173 E8000000 		call	_Unwind_Resume
 6191      00
 6192              	.LEHE154:
 6193              	.L336:
 6194 2178 4889C3   		movq	%rax, %rbx
 6195              	.LBE104:
  38:../ExecuteTest.h **** 	{
 6196              		.loc 8 38 0
 6197 217b E8000000 		call	__cxa_end_catch
 6197      00
 6198 2180 4889D8   		movq	%rbx, %rax
 6199 2183 4889C7   		movq	%rax, %rdi
 6200              	.LEHB155:
 6201 2186 E8000000 		call	_Unwind_Resume
 6201      00
 6202              	.LEHE155:
 6203              	.L317:
 6204              		.loc 8 42 0
 6205 218b 488B45E8 		movq	-24(%rbp), %rax
 6206 218f 64483304 		xorq	%fs:40, %rax
 6206      25280000 
 6206      00
 6207 2198 7405     		je	.L330
 6208 219a E8000000 		call	__stack_chk_fail
 6208      00
 6209              	.L330:
 6210 219f 4881C450 		addq	$1616, %rsp
 6210      060000
 6211 21a6 5B       		popq	%rbx
 6212 21a7 415C     		popq	%r12
 6213 21a9 5D       		popq	%rbp
 6214              		.cfi_def_cfa 7, 8
 6215 21aa C3       		ret
 6216              		.cfi_endproc
 6217              	.LFE1477:
 6218              		.section	.gcc_except_table
 6219              		.align 4
 6220              	.LLSDA1477:
 6221 040c FF       		.byte	0xff
 6222 040d 03       		.byte	0x3
 6223 040e 59       		.uleb128 .LLSDATT1477-.LLSDATTD1477
 6224              	.LLSDATTD1477:
 6225 040f 01       		.byte	0x1
 6226 0410 42       		.uleb128 .LLSDACSE1477-.LLSDACSB1477
 6227              	.LLSDACSB1477:
 6228 0411 2B       		.uleb128 .LEHB144-.LFB1477
 6229 0412 05       		.uleb128 .LEHE144-.LEHB144
 6230 0413 00       		.uleb128 0
 6231 0414 00       		.uleb128 0
 6232 0415 47       		.uleb128 .LEHB145-.LFB1477
 6233 0416 05       		.uleb128 .LEHE145-.LEHB145
 6234 0417 CC01     		.uleb128 .L331-.LFB1477
 6235 0419 05       		.uleb128 0x5
 6236 041a 8701     		.uleb128 .LEHB146-.LFB1477
 6237 041c 14       		.uleb128 .LEHE146-.LEHB146
 6238 041d AF01     		.uleb128 .L332-.LFB1477
 6239 041f 07       		.uleb128 0x7
 6240 0420 A501     		.uleb128 .LEHB147-.LFB1477
 6241 0422 05       		.uleb128 .LEHE147-.LEHB147
 6242 0423 CC01     		.uleb128 .L331-.LFB1477
 6243 0425 05       		.uleb128 0x5
 6244 0426 9A02     		.uleb128 .LEHB148-.LFB1477
 6245 0428 5E       		.uleb128 .LEHE148-.LEHB148
 6246 0429 D204     		.uleb128 .L333-.LFB1477
 6247 042b 00       		.uleb128 0
 6248 042c 9B03     		.uleb128 .LEHB149-.LFB1477
 6249 042e 05       		.uleb128 .LEHE149-.LEHB149
 6250 042f F904     		.uleb128 .L334-.LFB1477
 6251 0431 00       		.uleb128 0
 6252 0432 CF03     		.uleb128 .LEHB150-.LFB1477
 6253 0434 3F       		.uleb128 .LEHE150-.LEHB150
 6254 0435 E504     		.uleb128 .L335-.LFB1477
 6255 0437 00       		.uleb128 0
 6256 0438 9804     		.uleb128 .LEHB151-.LFB1477
 6257 043a 05       		.uleb128 .LEHE151-.LEHB151
 6258 043b F904     		.uleb128 .L334-.LFB1477
 6259 043d 00       		.uleb128 0
 6260 043e AC04     		.uleb128 .LEHB152-.LFB1477
 6261 0440 1F       		.uleb128 .LEHE152-.LEHB152
 6262 0441 8C05     		.uleb128 .L336-.LFB1477
 6263 0443 00       		.uleb128 0
 6264 0444 CB04     		.uleb128 .LEHB153-.LFB1477
 6265 0446 1A       		.uleb128 .LEHE153-.LEHB153
 6266 0447 00       		.uleb128 0
 6267 0448 00       		.uleb128 0
 6268 0449 8705     		.uleb128 .LEHB154-.LFB1477
 6269 044b 05       		.uleb128 .LEHE154-.LEHB154
 6270 044c 00       		.uleb128 0
 6271 044d 00       		.uleb128 0
 6272 044e 9A05     		.uleb128 .LEHB155-.LFB1477
 6273 0450 05       		.uleb128 .LEHE155-.LEHB155
 6274 0451 00       		.uleb128 0
 6275 0452 00       		.uleb128 0
 6276              	.LLSDACSE1477:
 6277 0453 03       		.byte	0x3
 6278 0454 00       		.byte	0
 6279 0455 02       		.byte	0x2
 6280 0456 7D       		.byte	0x7d
 6281 0457 01       		.byte	0x1
 6282 0458 7D       		.byte	0x7d
 6283 0459 00       		.byte	0
 6284 045a 7D       		.byte	0x7d
 6285 045b 00       		.align 4
 6286 045c 00000000 		.long	0
 6287              	
 6288 0460 00000000 		.long	_ZTISt9exception
 6289 0464 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6290              	.LLSDATT1477:
 6291              		.text
 6293              		.section	.text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_,"axG",@progbits,_ZN8UnitTest8AreCloseIff
 6294              		.weak	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6296              	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:
 6297              	.LFB1507:
  39:../Checks.h   **** {
 6298              		.loc 5 39 0
 6299              		.cfi_startproc
 6300 0000 55       		pushq	%rbp
 6301              		.cfi_def_cfa_offset 16
 6302              		.cfi_offset 6, -16
 6303 0001 4889E5   		movq	%rsp, %rbp
 6304              		.cfi_def_cfa_register 6
 6305 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6306 0008 488975F0 		movq	%rsi, -16(%rbp)
 6307 000c 488955E8 		movq	%rdx, -24(%rbp)
  41:../Checks.h   **** }
 6308              		.loc 5 41 0
 6309 0010 488B45F0 		movq	-16(%rbp), %rax
 6310 0014 F30F1008 		movss	(%rax), %xmm1
 6311 0018 488B45F8 		movq	-8(%rbp), %rax
 6312 001c F30F1000 		movss	(%rax), %xmm0
 6313 0020 488B45E8 		movq	-24(%rbp), %rax
 6314 0024 F30F1010 		movss	(%rax), %xmm2
 6315 0028 F30F5CC2 		subss	%xmm2, %xmm0
 6316 002c 0F2EC8   		ucomiss	%xmm0, %xmm1
 6317 002f 7228     		jb	.L340
  41:../Checks.h   **** }
 6318              		.loc 5 41 0 is_stmt 0 discriminator 1
 6319 0031 488B45F0 		movq	-16(%rbp), %rax
 6320 0035 F30F1008 		movss	(%rax), %xmm1
 6321 0039 488B45F8 		movq	-8(%rbp), %rax
 6322 003d F30F1010 		movss	(%rax), %xmm2
 6323 0041 488B45E8 		movq	-24(%rbp), %rax
 6324 0045 F30F1000 		movss	(%rax), %xmm0
 6325 0049 F30F58C2 		addss	%xmm2, %xmm0
 6326 004d 0F2EC1   		ucomiss	%xmm1, %xmm0
 6327 0050 7207     		jb	.L340
  41:../Checks.h   **** }
 6328              		.loc 5 41 0 discriminator 3
 6329 0052 B8010000 		movl	$1, %eax
 6329      00
 6330 0057 EB05     		jmp	.L344
 6331              	.L340:
  41:../Checks.h   **** }
 6332              		.loc 5 41 0 discriminator 4
 6333 0059 B8000000 		movl	$0, %eax
 6333      00
 6334              	.L344:
  42:../Checks.h   **** 
 6335              		.loc 5 42 0 is_stmt 1 discriminator 7
 6336 005e 5D       		popq	%rbp
 6337              		.cfi_def_cfa 7, 8
 6338 005f C3       		ret
 6339              		.cfi_endproc
 6340              	.LFE1507:
 6342              		.section	.text._ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_,"axG",@progbits,_ZN8UnitTest
 6343              		.weak	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
 6345              	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_:
 6346              	.LFB1509:
  87:../Checks.h   **** {
 6347              		.loc 5 87 0
 6348              		.cfi_startproc
 6349 0000 55       		pushq	%rbp
 6350              		.cfi_def_cfa_offset 16
 6351              		.cfi_offset 6, -16
 6352 0001 4889E5   		movq	%rsp, %rbp
 6353              		.cfi_def_cfa_register 6
 6354 0004 4883EC30 		subq	$48, %rsp
 6355 0008 48897DE8 		movq	%rdi, -24(%rbp)
 6356 000c 488975E0 		movq	%rsi, -32(%rbp)
 6357 0010 8955DC   		movl	%edx, -36(%rbp)
 6358 0013 48894DD0 		movq	%rcx, -48(%rbp)
  89:../Checks.h   ****     for (int i = 0; i < count; ++i)
 6359              		.loc 5 89 0
 6360 0017 C645FB01 		movb	$1, -5(%rbp)
 6361              	.LBB105:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6362              		.loc 5 90 0
 6363 001b C745FC00 		movl	$0, -4(%rbp)
 6363      000000
 6364              	.L349:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6365              		.loc 5 90 0 is_stmt 0 discriminator 3
 6366 0022 8B45FC   		movl	-4(%rbp), %eax
 6367 0025 3B45DC   		cmpl	-36(%rbp), %eax
 6368 0028 7D50     		jge	.L348
  91:../Checks.h   ****     return equal;
 6369              		.loc 5 91 0 is_stmt 1 discriminator 2
 6370 002a 8B45FC   		movl	-4(%rbp), %eax
 6371 002d 4898     		cltq
 6372 002f 488D1485 		leaq	0(,%rax,4), %rdx
 6372      00000000 
 6373 0037 488B45E0 		movq	-32(%rbp), %rax
 6374 003b 488D3402 		leaq	(%rdx,%rax), %rsi
 6375 003f 8B45FC   		movl	-4(%rbp), %eax
 6376 0042 4898     		cltq
 6377 0044 488D1485 		leaq	0(,%rax,4), %rdx
 6377      00000000 
 6378 004c 488B45E8 		movq	-24(%rbp), %rax
 6379 0050 488D0C02 		leaq	(%rdx,%rax), %rcx
 6380 0054 488B45D0 		movq	-48(%rbp), %rax
 6381 0058 4889C2   		movq	%rax, %rdx
 6382 005b 4889CF   		movq	%rcx, %rdi
 6383 005e E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6383      00
 6384 0063 0FB655FB 		movzbl	-5(%rbp), %edx
 6385 0067 0FB6C0   		movzbl	%al, %eax
 6386 006a 21D0     		andl	%edx, %eax
 6387 006c 85C0     		testl	%eax, %eax
 6388 006e 0F95C0   		setne	%al
 6389 0071 8845FB   		movb	%al, -5(%rbp)
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6390              		.loc 5 90 0 discriminator 2
 6391 0074 8345FC01 		addl	$1, -4(%rbp)
 6392 0078 EBA8     		jmp	.L349
 6393              	.L348:
 6394              	.LBE105:
  92:../Checks.h   **** }
 6395              		.loc 5 92 0
 6396 007a 0FB645FB 		movzbl	-5(%rbp), %eax
  93:../Checks.h   **** 
 6397              		.loc 5 93 0
 6398 007e C9       		leave
 6399              		.cfi_def_cfa 7, 8
 6400 007f C3       		ret
 6401              		.cfi_endproc
 6402              	.LFE1509:
 6404              		.section	.text._ZN9__gnu_cxx13new_allocatorIfEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIfE
 6405              		.align 2
 6406              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 6408              	_ZN9__gnu_cxx13new_allocatorIfEC2Ev:
 6409              	.LFB1511:
 6410              		.file 9 "/usr/include/c++/5/ext/new_allocator.h"
   1:/usr/include/c++/5/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/5/ext/new_allocator.h **** 
   3:/usr/include/c++/5/ext/new_allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/new_allocator.h **** //
   5:/usr/include/c++/5/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/5/ext/new_allocator.h **** 
  11:/usr/include/c++/5/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/new_allocator.h **** 
  16:/usr/include/c++/5/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/new_allocator.h **** 
  20:/usr/include/c++/5/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/new_allocator.h **** 
  25:/usr/include/c++/5/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/5/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/new_allocator.h ****  */
  28:/usr/include/c++/5/ext/new_allocator.h **** 
  29:/usr/include/c++/5/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/5/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/5/ext/new_allocator.h **** 
  32:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/5/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/5/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/5/ext/new_allocator.h **** #endif
  39:/usr/include/c++/5/ext/new_allocator.h **** 
  40:/usr/include/c++/5/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/5/ext/new_allocator.h **** {
  42:/usr/include/c++/5/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/5/ext/new_allocator.h **** 
  44:/usr/include/c++/5/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/5/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/5/ext/new_allocator.h **** 
  47:/usr/include/c++/5/ext/new_allocator.h ****   /**
  48:/usr/include/c++/5/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/5/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/5/ext/new_allocator.h ****    *
  51:/usr/include/c++/5/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/5/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/5/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/5/ext/new_allocator.h ****    *
  55:/usr/include/c++/5/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/5/ext/new_allocator.h ****    */
  57:/usr/include/c++/5/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/5/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/5/ext/new_allocator.h ****     {
  60:/usr/include/c++/5/ext/new_allocator.h ****     public:
  61:/usr/include/c++/5/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/5/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/5/ext/new_allocator.h **** 
  69:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/5/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/5/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/5/ext/new_allocator.h **** 
  73:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/5/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/5/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/5/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/5/ext/new_allocator.h **** #endif
  78:/usr/include/c++/5/ext/new_allocator.h **** 
  79:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 6411              		.loc 9 79 0
 6412              		.cfi_startproc
 6413 0000 55       		pushq	%rbp
 6414              		.cfi_def_cfa_offset 16
 6415              		.cfi_offset 6, -16
 6416 0001 4889E5   		movq	%rsp, %rbp
 6417              		.cfi_def_cfa_register 6
 6418 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6419              		.loc 9 79 0
 6420 0008 90       		nop
 6421 0009 5D       		popq	%rbp
 6422              		.cfi_def_cfa 7, 8
 6423 000a C3       		ret
 6424              		.cfi_endproc
 6425              	.LFE1511:
 6427              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC1Ev
 6428              		.set	_ZN9__gnu_cxx13new_allocatorIfEC1Ev,_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 6429              		.section	.text._ZN9__gnu_cxx13new_allocatorIfED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIfE
 6430              		.align 2
 6431              		.weak	_ZN9__gnu_cxx13new_allocatorIfED2Ev
 6433              	_ZN9__gnu_cxx13new_allocatorIfED2Ev:
 6434              	.LFB1514:
  80:/usr/include/c++/5/ext/new_allocator.h **** 
  81:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/5/ext/new_allocator.h **** 
  83:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/5/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/5/ext/new_allocator.h **** 
  86:/usr/include/c++/5/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 6435              		.loc 9 86 0
 6436              		.cfi_startproc
 6437 0000 55       		pushq	%rbp
 6438              		.cfi_def_cfa_offset 16
 6439              		.cfi_offset 6, -16
 6440 0001 4889E5   		movq	%rsp, %rbp
 6441              		.cfi_def_cfa_register 6
 6442 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6443              		.loc 9 86 0
 6444 0008 90       		nop
 6445 0009 5D       		popq	%rbp
 6446              		.cfi_def_cfa 7, 8
 6447 000a C3       		ret
 6448              		.cfi_endproc
 6449              	.LFE1514:
 6451              		.weak	_ZN9__gnu_cxx13new_allocatorIfED1Ev
 6452              		.set	_ZN9__gnu_cxx13new_allocatorIfED1Ev,_ZN9__gnu_cxx13new_allocatorIfED2Ev
 6453              		.section	.text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIf
 6454              		.align 2
 6455              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
 6457              	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:
 6458              	.LFB1518:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 6459              		.loc 7 79 0
 6460              		.cfi_startproc
 6461 0000 55       		pushq	%rbp
 6462              		.cfi_def_cfa_offset 16
 6463              		.cfi_offset 6, -16
 6464 0001 4889E5   		movq	%rsp, %rbp
 6465              		.cfi_def_cfa_register 6
 6466 0004 4883EC10 		subq	$16, %rsp
 6467 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6468              	.LBB106:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 6469              		.loc 7 79 0
 6470 000c 488B45F8 		movq	-8(%rbp), %rax
 6471 0010 4889C7   		movq	%rax, %rdi
 6472 0013 E8000000 		call	_ZNSaIfED2Ev
 6472      00
 6473              	.LBE106:
 6474 0018 90       		nop
 6475 0019 C9       		leave
 6476              		.cfi_def_cfa 7, 8
 6477 001a C3       		ret
 6478              		.cfi_endproc
 6479              	.LFE1518:
 6481              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6482              		.set	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev,_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
 6483              		.section	.text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEEC5E
 6484              		.align 2
 6485              		.weak	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 6487              	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:
 6488              	.LFB1520:
 134:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 6489              		.loc 7 134 0
 6490              		.cfi_startproc
 6491              		.cfi_personality 0x3,__gxx_personality_v0
 6492              		.cfi_lsda 0x3,.LLSDA1520
 6493 0000 55       		pushq	%rbp
 6494              		.cfi_def_cfa_offset 16
 6495              		.cfi_offset 6, -16
 6496 0001 4889E5   		movq	%rsp, %rbp
 6497              		.cfi_def_cfa_register 6
 6498 0004 53       		pushq	%rbx
 6499 0005 4883EC28 		subq	$40, %rsp
 6500              		.cfi_offset 3, -24
 6501 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6502 000d 488975E0 		movq	%rsi, -32(%rbp)
 6503 0011 488955D8 		movq	%rdx, -40(%rbp)
 6504              	.LBB107:
 135:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 6505              		.loc 7 135 0
 6506 0015 488B45E8 		movq	-24(%rbp), %rax
 6507 0019 488B55D8 		movq	-40(%rbp), %rdx
 6508 001d 4889D6   		movq	%rdx, %rsi
 6509 0020 4889C7   		movq	%rax, %rdi
 6510 0023 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
 6510      00
 136:/usr/include/c++/5/bits/stl_vector.h **** 
 6511              		.loc 7 136 0
 6512 0028 488B55E0 		movq	-32(%rbp), %rdx
 6513 002c 488B45E8 		movq	-24(%rbp), %rax
 6514 0030 4889D6   		movq	%rdx, %rsi
 6515 0033 4889C7   		movq	%rax, %rdi
 6516              	.LEHB156:
 6517 0036 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
 6517      00
 6518              	.LEHE156:
 6519              	.LBE107:
 6520 003b EB1A     		jmp	.L357
 6521              	.L356:
 6522 003d 4889C3   		movq	%rax, %rbx
 6523              	.LBB108:
 135:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 6524              		.loc 7 135 0
 6525 0040 488B45E8 		movq	-24(%rbp), %rax
 6526 0044 4889C7   		movq	%rax, %rdi
 6527 0047 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6527      00
 6528 004c 4889D8   		movq	%rbx, %rax
 6529 004f 4889C7   		movq	%rax, %rdi
 6530              	.LEHB157:
 6531 0052 E8000000 		call	_Unwind_Resume
 6531      00
 6532              	.LEHE157:
 6533              	.L357:
 6534              	.LBE108:
 136:/usr/include/c++/5/bits/stl_vector.h **** 
 6535              		.loc 7 136 0
 6536 0057 4883C428 		addq	$40, %rsp
 6537 005b 5B       		popq	%rbx
 6538 005c 5D       		popq	%rbp
 6539              		.cfi_def_cfa 7, 8
 6540 005d C3       		ret
 6541              		.cfi_endproc
 6542              	.LFE1520:
 6543              		.section	.gcc_except_table
 6544              	.LLSDA1520:
 6545 0468 FF       		.byte	0xff
 6546 0469 FF       		.byte	0xff
 6547 046a 01       		.byte	0x1
 6548 046b 08       		.uleb128 .LLSDACSE1520-.LLSDACSB1520
 6549              	.LLSDACSB1520:
 6550 046c 36       		.uleb128 .LEHB156-.LFB1520
 6551 046d 05       		.uleb128 .LEHE156-.LEHB156
 6552 046e 3D       		.uleb128 .L356-.LFB1520
 6553 046f 00       		.uleb128 0
 6554 0470 52       		.uleb128 .LEHB157-.LFB1520
 6555 0471 05       		.uleb128 .LEHE157-.LEHB157
 6556 0472 00       		.uleb128 0
 6557 0473 00       		.uleb128 0
 6558              	.LLSDACSE1520:
 6559              		.section	.text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEEC5E
 6561              		.weak	_ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_
 6562              		.set	_ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_,_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 6563              		.section	.text._ZNSt12_Vector_baseIfSaIfEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEED5Ev,com
 6564              		.align 2
 6565              		.weak	_ZNSt12_Vector_baseIfSaIfEED2Ev
 6567              	_ZNSt12_Vector_baseIfSaIfEED2Ev:
 6568              	.LFB1523:
 159:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 6569              		.loc 7 159 0
 6570              		.cfi_startproc
 6571              		.cfi_personality 0x3,__gxx_personality_v0
 6572              		.cfi_lsda 0x3,.LLSDA1523
 6573 0000 55       		pushq	%rbp
 6574              		.cfi_def_cfa_offset 16
 6575              		.cfi_offset 6, -16
 6576 0001 4889E5   		movq	%rsp, %rbp
 6577              		.cfi_def_cfa_register 6
 6578 0004 53       		pushq	%rbx
 6579 0005 4883EC18 		subq	$24, %rsp
 6580              		.cfi_offset 3, -24
 6581 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6582              	.LBB109:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 6583              		.loc 7 161 0
 6584 000d 488B45E8 		movq	-24(%rbp), %rax
 6585 0011 488B4010 		movq	16(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 6586              		.loc 7 160 0
 6587 0015 4889C2   		movq	%rax, %rdx
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 6588              		.loc 7 161 0
 6589 0018 488B45E8 		movq	-24(%rbp), %rax
 6590 001c 488B00   		movq	(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 6591              		.loc 7 160 0
 6592 001f 4829C2   		subq	%rax, %rdx
 6593 0022 4889D0   		movq	%rdx, %rax
 6594 0025 48C1F802 		sarq	$2, %rax
 6595 0029 4889C2   		movq	%rax, %rdx
 6596 002c 488B45E8 		movq	-24(%rbp), %rax
 6597 0030 488B08   		movq	(%rax), %rcx
 6598 0033 488B45E8 		movq	-24(%rbp), %rax
 6599 0037 4889CE   		movq	%rcx, %rsi
 6600 003a 4889C7   		movq	%rax, %rdi
 6601              	.LEHB158:
 6602 003d E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
 6602      00
 6603              	.LEHE158:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 6604              		.loc 7 161 0
 6605 0042 488B45E8 		movq	-24(%rbp), %rax
 6606 0046 4889C7   		movq	%rax, %rdi
 6607 0049 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6607      00
 6608              	.LBE109:
 6609 004e EB1A     		jmp	.L361
 6610              	.L360:
 6611 0050 4889C3   		movq	%rax, %rbx
 6612              	.LBB110:
 6613 0053 488B45E8 		movq	-24(%rbp), %rax
 6614 0057 4889C7   		movq	%rax, %rdi
 6615 005a E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6615      00
 6616 005f 4889D8   		movq	%rbx, %rax
 6617 0062 4889C7   		movq	%rax, %rdi
 6618              	.LEHB159:
 6619 0065 E8000000 		call	_Unwind_Resume
 6619      00
 6620              	.LEHE159:
 6621              	.L361:
 6622              	.LBE110:
 6623 006a 4883C418 		addq	$24, %rsp
 6624 006e 5B       		popq	%rbx
 6625 006f 5D       		popq	%rbp
 6626              		.cfi_def_cfa 7, 8
 6627 0070 C3       		ret
 6628              		.cfi_endproc
 6629              	.LFE1523:
 6630              		.section	.gcc_except_table
 6631              	.LLSDA1523:
 6632 0474 FF       		.byte	0xff
 6633 0475 FF       		.byte	0xff
 6634 0476 01       		.byte	0x1
 6635 0477 08       		.uleb128 .LLSDACSE1523-.LLSDACSB1523
 6636              	.LLSDACSB1523:
 6637 0478 3D       		.uleb128 .LEHB158-.LFB1523
 6638 0479 05       		.uleb128 .LEHE158-.LEHB158
 6639 047a 50       		.uleb128 .L360-.LFB1523
 6640 047b 00       		.uleb128 0
 6641 047c 65       		.uleb128 .LEHB159-.LFB1523
 6642 047d 05       		.uleb128 .LEHE159-.LEHB159
 6643 047e 00       		.uleb128 0
 6644 047f 00       		.uleb128 0
 6645              	.LLSDACSE1523:
 6646              		.section	.text._ZNSt12_Vector_baseIfSaIfEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEED5Ev,com
 6648              		.weak	_ZNSt12_Vector_baseIfSaIfEED1Ev
 6649              		.set	_ZNSt12_Vector_baseIfSaIfEED1Ev,_ZNSt12_Vector_baseIfSaIfEED2Ev
 6650              		.section	.text._ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf,"axG",@progbits,_ZNSt6vectorIfSaIfEE1
 6651              		.align 2
 6652              		.weak	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
 6654              	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf:
 6655              	.LFB1525:
 781:/usr/include/c++/5/bits/stl_vector.h **** 
 782:/usr/include/c++/5/bits/stl_vector.h ****       /**
 783:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 784:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 785:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 786:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 787:/usr/include/c++/5/bits/stl_vector.h ****        *
 788:/usr/include/c++/5/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 789:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 790:/usr/include/c++/5/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 791:/usr/include/c++/5/bits/stl_vector.h ****        *  see at().)
 792:/usr/include/c++/5/bits/stl_vector.h ****        */
 793:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 794:/usr/include/c++/5/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 795:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 796:/usr/include/c++/5/bits/stl_vector.h **** 
 797:/usr/include/c++/5/bits/stl_vector.h ****     protected:
 798:/usr/include/c++/5/bits/stl_vector.h ****       /// Safety check used only from at().
 799:/usr/include/c++/5/bits/stl_vector.h ****       void
 800:/usr/include/c++/5/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 801:/usr/include/c++/5/bits/stl_vector.h ****       {
 802:/usr/include/c++/5/bits/stl_vector.h **** 	if (__n >= this->size())
 803:/usr/include/c++/5/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 804:/usr/include/c++/5/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 805:/usr/include/c++/5/bits/stl_vector.h **** 				       "(which is %zu)"),
 806:/usr/include/c++/5/bits/stl_vector.h **** 				   __n, this->size());
 807:/usr/include/c++/5/bits/stl_vector.h ****       }
 808:/usr/include/c++/5/bits/stl_vector.h **** 
 809:/usr/include/c++/5/bits/stl_vector.h ****     public:
 810:/usr/include/c++/5/bits/stl_vector.h ****       /**
 811:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 812:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 813:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 814:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 815:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 816:/usr/include/c++/5/bits/stl_vector.h ****        *
 817:/usr/include/c++/5/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 818:/usr/include/c++/5/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 819:/usr/include/c++/5/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 820:/usr/include/c++/5/bits/stl_vector.h ****        */
 821:/usr/include/c++/5/bits/stl_vector.h ****       reference
 822:/usr/include/c++/5/bits/stl_vector.h ****       at(size_type __n)
 823:/usr/include/c++/5/bits/stl_vector.h ****       {
 824:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_check(__n);
 825:/usr/include/c++/5/bits/stl_vector.h **** 	return (*this)[__n]; 
 826:/usr/include/c++/5/bits/stl_vector.h ****       }
 827:/usr/include/c++/5/bits/stl_vector.h **** 
 828:/usr/include/c++/5/bits/stl_vector.h ****       /**
 829:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 830:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 831:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 832:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 833:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 834:/usr/include/c++/5/bits/stl_vector.h ****        *
 835:/usr/include/c++/5/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 836:/usr/include/c++/5/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 837:/usr/include/c++/5/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 838:/usr/include/c++/5/bits/stl_vector.h ****        */
 839:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 840:/usr/include/c++/5/bits/stl_vector.h ****       at(size_type __n) const
 841:/usr/include/c++/5/bits/stl_vector.h ****       {
 842:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_check(__n);
 843:/usr/include/c++/5/bits/stl_vector.h **** 	return (*this)[__n];
 844:/usr/include/c++/5/bits/stl_vector.h ****       }
 845:/usr/include/c++/5/bits/stl_vector.h **** 
 846:/usr/include/c++/5/bits/stl_vector.h ****       /**
 847:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 848:/usr/include/c++/5/bits/stl_vector.h ****        *  element of the %vector.
 849:/usr/include/c++/5/bits/stl_vector.h ****        */
 850:/usr/include/c++/5/bits/stl_vector.h ****       reference
 851:/usr/include/c++/5/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 852:/usr/include/c++/5/bits/stl_vector.h ****       { return *begin(); }
 853:/usr/include/c++/5/bits/stl_vector.h **** 
 854:/usr/include/c++/5/bits/stl_vector.h ****       /**
 855:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 856:/usr/include/c++/5/bits/stl_vector.h ****        *  element of the %vector.
 857:/usr/include/c++/5/bits/stl_vector.h ****        */
 858:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 859:/usr/include/c++/5/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 860:/usr/include/c++/5/bits/stl_vector.h ****       { return *begin(); }
 861:/usr/include/c++/5/bits/stl_vector.h **** 
 862:/usr/include/c++/5/bits/stl_vector.h ****       /**
 863:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
 864:/usr/include/c++/5/bits/stl_vector.h ****        *  element of the %vector.
 865:/usr/include/c++/5/bits/stl_vector.h ****        */
 866:/usr/include/c++/5/bits/stl_vector.h ****       reference
 867:/usr/include/c++/5/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 868:/usr/include/c++/5/bits/stl_vector.h ****       { return *(end() - 1); }
 869:/usr/include/c++/5/bits/stl_vector.h ****       
 870:/usr/include/c++/5/bits/stl_vector.h ****       /**
 871:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 872:/usr/include/c++/5/bits/stl_vector.h ****        *  last element of the %vector.
 873:/usr/include/c++/5/bits/stl_vector.h ****        */
 874:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 875:/usr/include/c++/5/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 876:/usr/include/c++/5/bits/stl_vector.h ****       { return *(end() - 1); }
 877:/usr/include/c++/5/bits/stl_vector.h **** 
 878:/usr/include/c++/5/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 879:/usr/include/c++/5/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 880:/usr/include/c++/5/bits/stl_vector.h ****       // data access
 881:/usr/include/c++/5/bits/stl_vector.h ****       /**
 882:/usr/include/c++/5/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 883:/usr/include/c++/5/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 884:/usr/include/c++/5/bits/stl_vector.h ****        */
 885:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 886:/usr/include/c++/5/bits/stl_vector.h ****       _Tp*
 887:/usr/include/c++/5/bits/stl_vector.h **** #else
 888:/usr/include/c++/5/bits/stl_vector.h ****       pointer
 889:/usr/include/c++/5/bits/stl_vector.h **** #endif
 890:/usr/include/c++/5/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 891:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 892:/usr/include/c++/5/bits/stl_vector.h **** 
 893:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 894:/usr/include/c++/5/bits/stl_vector.h ****       const _Tp*
 895:/usr/include/c++/5/bits/stl_vector.h **** #else
 896:/usr/include/c++/5/bits/stl_vector.h ****       const_pointer
 897:/usr/include/c++/5/bits/stl_vector.h **** #endif
 898:/usr/include/c++/5/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 899:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 900:/usr/include/c++/5/bits/stl_vector.h **** 
 901:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 902:/usr/include/c++/5/bits/stl_vector.h ****       /**
 903:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 904:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 905:/usr/include/c++/5/bits/stl_vector.h ****        *
 906:/usr/include/c++/5/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 907:/usr/include/c++/5/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 908:/usr/include/c++/5/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 909:/usr/include/c++/5/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 910:/usr/include/c++/5/bits/stl_vector.h ****        *  available.
 911:/usr/include/c++/5/bits/stl_vector.h ****        */
 912:/usr/include/c++/5/bits/stl_vector.h ****       void
 913:/usr/include/c++/5/bits/stl_vector.h ****       push_back(const value_type& __x)
 914:/usr/include/c++/5/bits/stl_vector.h ****       {
 915:/usr/include/c++/5/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 916:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 917:/usr/include/c++/5/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 918:/usr/include/c++/5/bits/stl_vector.h **** 	                             __x);
 919:/usr/include/c++/5/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 920:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 921:/usr/include/c++/5/bits/stl_vector.h **** 	else
 922:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 923:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_emplace_back_aux(__x);
 924:/usr/include/c++/5/bits/stl_vector.h **** #else
 925:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_insert_aux(end(), __x);
 926:/usr/include/c++/5/bits/stl_vector.h **** #endif
 927:/usr/include/c++/5/bits/stl_vector.h ****       }
 928:/usr/include/c++/5/bits/stl_vector.h **** 
 929:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 930:/usr/include/c++/5/bits/stl_vector.h ****       void
 931:/usr/include/c++/5/bits/stl_vector.h ****       push_back(value_type&& __x)
 932:/usr/include/c++/5/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 933:/usr/include/c++/5/bits/stl_vector.h **** 
 934:/usr/include/c++/5/bits/stl_vector.h ****       template<typename... _Args>
 935:/usr/include/c++/5/bits/stl_vector.h ****         void
 936:/usr/include/c++/5/bits/stl_vector.h ****         emplace_back(_Args&&... __args);
 937:/usr/include/c++/5/bits/stl_vector.h **** #endif
 938:/usr/include/c++/5/bits/stl_vector.h **** 
 939:/usr/include/c++/5/bits/stl_vector.h ****       /**
 940:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Removes last element.
 941:/usr/include/c++/5/bits/stl_vector.h ****        *
 942:/usr/include/c++/5/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 943:/usr/include/c++/5/bits/stl_vector.h ****        *
 944:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 945:/usr/include/c++/5/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 946:/usr/include/c++/5/bits/stl_vector.h ****        *  called.
 947:/usr/include/c++/5/bits/stl_vector.h ****        */
 948:/usr/include/c++/5/bits/stl_vector.h ****       void
 949:/usr/include/c++/5/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 950:/usr/include/c++/5/bits/stl_vector.h ****       {
 951:/usr/include/c++/5/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 952:/usr/include/c++/5/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 953:/usr/include/c++/5/bits/stl_vector.h ****       }
 954:/usr/include/c++/5/bits/stl_vector.h **** 
 955:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 956:/usr/include/c++/5/bits/stl_vector.h ****       /**
 957:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 958:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 959:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __args  Arguments.
 960:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 961:/usr/include/c++/5/bits/stl_vector.h ****        *
 962:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 963:/usr/include/c++/5/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 964:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 965:/usr/include/c++/5/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 966:/usr/include/c++/5/bits/stl_vector.h ****        *  std::list.
 967:/usr/include/c++/5/bits/stl_vector.h ****        */
 968:/usr/include/c++/5/bits/stl_vector.h ****       template<typename... _Args>
 969:/usr/include/c++/5/bits/stl_vector.h ****         iterator
 970:/usr/include/c++/5/bits/stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 971:/usr/include/c++/5/bits/stl_vector.h **** 
 972:/usr/include/c++/5/bits/stl_vector.h ****       /**
 973:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 974:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 975:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 976:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 977:/usr/include/c++/5/bits/stl_vector.h ****        *
 978:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 979:/usr/include/c++/5/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 980:/usr/include/c++/5/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 981:/usr/include/c++/5/bits/stl_vector.h ****        *  used the user should consider using std::list.
 982:/usr/include/c++/5/bits/stl_vector.h ****        */
 983:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 984:/usr/include/c++/5/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 985:/usr/include/c++/5/bits/stl_vector.h **** #else
 986:/usr/include/c++/5/bits/stl_vector.h ****       /**
 987:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 988:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 989:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 990:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 991:/usr/include/c++/5/bits/stl_vector.h ****        *
 992:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 993:/usr/include/c++/5/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 994:/usr/include/c++/5/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 995:/usr/include/c++/5/bits/stl_vector.h ****        *  used the user should consider using std::list.
 996:/usr/include/c++/5/bits/stl_vector.h ****        */
 997:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 998:/usr/include/c++/5/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
 999:/usr/include/c++/5/bits/stl_vector.h **** #endif
1000:/usr/include/c++/5/bits/stl_vector.h **** 
1001:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1002:/usr/include/c++/5/bits/stl_vector.h ****       /**
1003:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1004:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1005:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1006:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1007:/usr/include/c++/5/bits/stl_vector.h ****        *
1008:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1009:/usr/include/c++/5/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1010:/usr/include/c++/5/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1011:/usr/include/c++/5/bits/stl_vector.h ****        *  used the user should consider using std::list.
1012:/usr/include/c++/5/bits/stl_vector.h ****        */
1013:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1014:/usr/include/c++/5/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1015:/usr/include/c++/5/bits/stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1016:/usr/include/c++/5/bits/stl_vector.h **** 
1017:/usr/include/c++/5/bits/stl_vector.h ****       /**
1018:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1019:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1020:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1021:/usr/include/c++/5/bits/stl_vector.h ****        *
1022:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert copies of the data in the 
1023:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1024:/usr/include/c++/5/bits/stl_vector.h ****        *  specified by @a position.
1025:/usr/include/c++/5/bits/stl_vector.h ****        *
1026:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1027:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1028:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1029:/usr/include/c++/5/bits/stl_vector.h ****        */
1030:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1031:/usr/include/c++/5/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1032:/usr/include/c++/5/bits/stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1033:/usr/include/c++/5/bits/stl_vector.h **** #endif
1034:/usr/include/c++/5/bits/stl_vector.h **** 
1035:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1036:/usr/include/c++/5/bits/stl_vector.h ****       /**
1037:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1038:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1039:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1040:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1041:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1042:/usr/include/c++/5/bits/stl_vector.h ****        *
1043:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1044:/usr/include/c++/5/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1045:/usr/include/c++/5/bits/stl_vector.h ****        *
1046:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1047:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1048:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1049:/usr/include/c++/5/bits/stl_vector.h ****        */
1050:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1051:/usr/include/c++/5/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1052:/usr/include/c++/5/bits/stl_vector.h ****       {
1053:/usr/include/c++/5/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1054:/usr/include/c++/5/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1055:/usr/include/c++/5/bits/stl_vector.h **** 	return begin() + __offset;
1056:/usr/include/c++/5/bits/stl_vector.h ****       }
1057:/usr/include/c++/5/bits/stl_vector.h **** #else
1058:/usr/include/c++/5/bits/stl_vector.h ****       /**
1059:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1060:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1061:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1062:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1063:/usr/include/c++/5/bits/stl_vector.h ****        *
1064:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1065:/usr/include/c++/5/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1066:/usr/include/c++/5/bits/stl_vector.h ****        *
1067:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1068:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1069:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1070:/usr/include/c++/5/bits/stl_vector.h ****        */
1071:/usr/include/c++/5/bits/stl_vector.h ****       void
1072:/usr/include/c++/5/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1073:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1074:/usr/include/c++/5/bits/stl_vector.h **** #endif
1075:/usr/include/c++/5/bits/stl_vector.h **** 
1076:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1077:/usr/include/c++/5/bits/stl_vector.h ****       /**
1078:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1079:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1080:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1081:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1082:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1083:/usr/include/c++/5/bits/stl_vector.h ****        *
1084:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1085:/usr/include/c++/5/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1086:/usr/include/c++/5/bits/stl_vector.h ****        *  by @a pos.
1087:/usr/include/c++/5/bits/stl_vector.h ****        *
1088:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1089:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1090:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1091:/usr/include/c++/5/bits/stl_vector.h ****        */
1092:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
1093:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1094:/usr/include/c++/5/bits/stl_vector.h ****         iterator
1095:/usr/include/c++/5/bits/stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1096:/usr/include/c++/5/bits/stl_vector.h **** 	       _InputIterator __last)
1097:/usr/include/c++/5/bits/stl_vector.h ****         {
1098:/usr/include/c++/5/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1099:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1100:/usr/include/c++/5/bits/stl_vector.h **** 			     __first, __last, __false_type());
1101:/usr/include/c++/5/bits/stl_vector.h **** 	  return begin() + __offset;
1102:/usr/include/c++/5/bits/stl_vector.h **** 	}
1103:/usr/include/c++/5/bits/stl_vector.h **** #else
1104:/usr/include/c++/5/bits/stl_vector.h ****       /**
1105:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1106:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1107:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1108:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1109:/usr/include/c++/5/bits/stl_vector.h ****        *
1110:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1111:/usr/include/c++/5/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1112:/usr/include/c++/5/bits/stl_vector.h ****        *  by @a pos.
1113:/usr/include/c++/5/bits/stl_vector.h ****        *
1114:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1115:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1116:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1117:/usr/include/c++/5/bits/stl_vector.h ****        */
1118:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1119:/usr/include/c++/5/bits/stl_vector.h ****         void
1120:/usr/include/c++/5/bits/stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1121:/usr/include/c++/5/bits/stl_vector.h **** 	       _InputIterator __last)
1122:/usr/include/c++/5/bits/stl_vector.h ****         {
1123:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1124:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1125:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1126:/usr/include/c++/5/bits/stl_vector.h **** 	}
1127:/usr/include/c++/5/bits/stl_vector.h **** #endif
1128:/usr/include/c++/5/bits/stl_vector.h **** 
1129:/usr/include/c++/5/bits/stl_vector.h ****       /**
1130:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1131:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1132:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1133:/usr/include/c++/5/bits/stl_vector.h ****        *
1134:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1135:/usr/include/c++/5/bits/stl_vector.h ****        *  shorten the %vector by one.
1136:/usr/include/c++/5/bits/stl_vector.h ****        *
1137:/usr/include/c++/5/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1138:/usr/include/c++/5/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1139:/usr/include/c++/5/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1140:/usr/include/c++/5/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1141:/usr/include/c++/5/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1142:/usr/include/c++/5/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1143:/usr/include/c++/5/bits/stl_vector.h ****        */
1144:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1145:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1146:/usr/include/c++/5/bits/stl_vector.h ****       erase(const_iterator __position)
1147:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1148:/usr/include/c++/5/bits/stl_vector.h **** #else
1149:/usr/include/c++/5/bits/stl_vector.h ****       erase(iterator __position)
1150:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_erase(__position); }
1151:/usr/include/c++/5/bits/stl_vector.h **** #endif
1152:/usr/include/c++/5/bits/stl_vector.h **** 
1153:/usr/include/c++/5/bits/stl_vector.h ****       /**
1154:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1155:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1156:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1157:/usr/include/c++/5/bits/stl_vector.h ****        *                  erased.
1158:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1159:/usr/include/c++/5/bits/stl_vector.h ****        *           prior to erasing (or end()).
1160:/usr/include/c++/5/bits/stl_vector.h ****        *
1161:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will erase the elements in the range
1162:/usr/include/c++/5/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1163:/usr/include/c++/5/bits/stl_vector.h ****        *
1164:/usr/include/c++/5/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1165:/usr/include/c++/5/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1166:/usr/include/c++/5/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1167:/usr/include/c++/5/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1168:/usr/include/c++/5/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1169:/usr/include/c++/5/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1170:/usr/include/c++/5/bits/stl_vector.h ****        */
1171:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1172:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1173:/usr/include/c++/5/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1174:/usr/include/c++/5/bits/stl_vector.h ****       {
1175:/usr/include/c++/5/bits/stl_vector.h **** 	const auto __beg = begin();
1176:/usr/include/c++/5/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1177:/usr/include/c++/5/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1178:/usr/include/c++/5/bits/stl_vector.h ****       }
1179:/usr/include/c++/5/bits/stl_vector.h **** #else
1180:/usr/include/c++/5/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1181:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1182:/usr/include/c++/5/bits/stl_vector.h **** #endif
1183:/usr/include/c++/5/bits/stl_vector.h **** 
1184:/usr/include/c++/5/bits/stl_vector.h ****       /**
1185:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1186:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1187:/usr/include/c++/5/bits/stl_vector.h ****        *
1188:/usr/include/c++/5/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1189:/usr/include/c++/5/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1190:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1191:/usr/include/c++/5/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1192:/usr/include/c++/5/bits/stl_vector.h ****        */
1193:/usr/include/c++/5/bits/stl_vector.h ****       void
1194:/usr/include/c++/5/bits/stl_vector.h ****       swap(vector& __x)
1195:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1196:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_nothrow_swap())
1197:/usr/include/c++/5/bits/stl_vector.h **** #endif
1198:/usr/include/c++/5/bits/stl_vector.h ****       {
1199:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1200:/usr/include/c++/5/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1201:/usr/include/c++/5/bits/stl_vector.h **** 	                          __x._M_get_Tp_allocator());
1202:/usr/include/c++/5/bits/stl_vector.h ****       }
1203:/usr/include/c++/5/bits/stl_vector.h **** 
1204:/usr/include/c++/5/bits/stl_vector.h ****       /**
1205:/usr/include/c++/5/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1206:/usr/include/c++/5/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1207:/usr/include/c++/5/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1208:/usr/include/c++/5/bits/stl_vector.h ****        *  the user's responsibility.
1209:/usr/include/c++/5/bits/stl_vector.h ****        */
1210:/usr/include/c++/5/bits/stl_vector.h ****       void
1211:/usr/include/c++/5/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1212:/usr/include/c++/5/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1213:/usr/include/c++/5/bits/stl_vector.h **** 
1214:/usr/include/c++/5/bits/stl_vector.h ****     protected:
1215:/usr/include/c++/5/bits/stl_vector.h ****       /**
1216:/usr/include/c++/5/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1217:/usr/include/c++/5/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1218:/usr/include/c++/5/bits/stl_vector.h ****        */
1219:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _ForwardIterator>
1220:/usr/include/c++/5/bits/stl_vector.h ****         pointer
1221:/usr/include/c++/5/bits/stl_vector.h ****         _M_allocate_and_copy(size_type __n,
1222:/usr/include/c++/5/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1223:/usr/include/c++/5/bits/stl_vector.h ****         {
1224:/usr/include/c++/5/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1225:/usr/include/c++/5/bits/stl_vector.h **** 	  __try
1226:/usr/include/c++/5/bits/stl_vector.h **** 	    {
1227:/usr/include/c++/5/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1228:/usr/include/c++/5/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1229:/usr/include/c++/5/bits/stl_vector.h **** 	      return __result;
1230:/usr/include/c++/5/bits/stl_vector.h **** 	    }
1231:/usr/include/c++/5/bits/stl_vector.h **** 	  __catch(...)
1232:/usr/include/c++/5/bits/stl_vector.h **** 	    {
1233:/usr/include/c++/5/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1234:/usr/include/c++/5/bits/stl_vector.h **** 	      __throw_exception_again;
1235:/usr/include/c++/5/bits/stl_vector.h **** 	    }
1236:/usr/include/c++/5/bits/stl_vector.h **** 	}
1237:/usr/include/c++/5/bits/stl_vector.h **** 
1238:/usr/include/c++/5/bits/stl_vector.h **** 
1239:/usr/include/c++/5/bits/stl_vector.h ****       // Internal constructor functions follow.
1240:/usr/include/c++/5/bits/stl_vector.h **** 
1241:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1242:/usr/include/c++/5/bits/stl_vector.h **** 
1243:/usr/include/c++/5/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1244:/usr/include/c++/5/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1245:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _Integer>
1246:/usr/include/c++/5/bits/stl_vector.h ****         void
1247:/usr/include/c++/5/bits/stl_vector.h ****         _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1248:/usr/include/c++/5/bits/stl_vector.h ****         {
1249:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1250:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1251:/usr/include/c++/5/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1252:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1253:/usr/include/c++/5/bits/stl_vector.h **** 	}
1254:/usr/include/c++/5/bits/stl_vector.h **** 
1255:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1256:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1257:/usr/include/c++/5/bits/stl_vector.h ****         void
1258:/usr/include/c++/5/bits/stl_vector.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1259:/usr/include/c++/5/bits/stl_vector.h **** 			       __false_type)
1260:/usr/include/c++/5/bits/stl_vector.h ****         {
1261:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1262:/usr/include/c++/5/bits/stl_vector.h **** 	    iterator_category _IterCategory;
1263:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1264:/usr/include/c++/5/bits/stl_vector.h **** 	}
1265:/usr/include/c++/5/bits/stl_vector.h **** 
1266:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1267:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1268:/usr/include/c++/5/bits/stl_vector.h ****         void
1269:/usr/include/c++/5/bits/stl_vector.h ****         _M_range_initialize(_InputIterator __first,
1270:/usr/include/c++/5/bits/stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1271:/usr/include/c++/5/bits/stl_vector.h ****         {
1272:/usr/include/c++/5/bits/stl_vector.h **** 	  for (; __first != __last; ++__first)
1273:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1274:/usr/include/c++/5/bits/stl_vector.h **** 	    emplace_back(*__first);
1275:/usr/include/c++/5/bits/stl_vector.h **** #else
1276:/usr/include/c++/5/bits/stl_vector.h **** 	    push_back(*__first);
1277:/usr/include/c++/5/bits/stl_vector.h **** #endif
1278:/usr/include/c++/5/bits/stl_vector.h **** 	}
1279:/usr/include/c++/5/bits/stl_vector.h **** 
1280:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1281:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _ForwardIterator>
1282:/usr/include/c++/5/bits/stl_vector.h ****         void
1283:/usr/include/c++/5/bits/stl_vector.h ****         _M_range_initialize(_ForwardIterator __first,
1284:/usr/include/c++/5/bits/stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1285:/usr/include/c++/5/bits/stl_vector.h ****         {
1286:/usr/include/c++/5/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1287:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1288:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1289:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1290:/usr/include/c++/5/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1291:/usr/include/c++/5/bits/stl_vector.h **** 					this->_M_impl._M_start,
1292:/usr/include/c++/5/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1293:/usr/include/c++/5/bits/stl_vector.h **** 	}
1294:/usr/include/c++/5/bits/stl_vector.h **** 
1295:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1296:/usr/include/c++/5/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1297:/usr/include/c++/5/bits/stl_vector.h ****       void
1298:/usr/include/c++/5/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
 6656              		.loc 7 1298 0
 6657              		.cfi_startproc
 6658 0000 55       		pushq	%rbp
 6659              		.cfi_def_cfa_offset 16
 6660              		.cfi_offset 6, -16
 6661 0001 4889E5   		movq	%rsp, %rbp
 6662              		.cfi_def_cfa_register 6
 6663 0004 4883EC20 		subq	$32, %rsp
 6664 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6665 000c 488975F0 		movq	%rsi, -16(%rbp)
 6666 0010 488955E8 		movq	%rdx, -24(%rbp)
1299:/usr/include/c++/5/bits/stl_vector.h ****       {
1300:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1301:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1302:/usr/include/c++/5/bits/stl_vector.h **** 					_M_get_Tp_allocator());
 6667              		.loc 7 1302 0
 6668 0014 488B45F8 		movq	-8(%rbp), %rax
 6669 0018 4889C7   		movq	%rax, %rdi
 6670 001b E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 6670      00
 6671 0020 4889C1   		movq	%rax, %rcx
1301:/usr/include/c++/5/bits/stl_vector.h **** 					_M_get_Tp_allocator());
 6672              		.loc 7 1301 0
 6673 0023 488B45F8 		movq	-8(%rbp), %rax
 6674 0027 488B00   		movq	(%rax), %rax
 6675 002a 488B55E8 		movq	-24(%rbp), %rdx
 6676 002e 488B75F0 		movq	-16(%rbp), %rsi
 6677 0032 4889C7   		movq	%rax, %rdi
 6678 0035 E8000000 		call	_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E
 6678      00
 6679 003a 4889C2   		movq	%rax, %rdx
1300:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
 6680              		.loc 7 1300 0
 6681 003d 488B45F8 		movq	-8(%rbp), %rax
 6682 0041 48895008 		movq	%rdx, 8(%rax)
1303:/usr/include/c++/5/bits/stl_vector.h ****       }
 6683              		.loc 7 1303 0
 6684 0045 90       		nop
 6685 0046 C9       		leave
 6686              		.cfi_def_cfa 7, 8
 6687 0047 C3       		ret
 6688              		.cfi_endproc
 6689              	.LFE1525:
 6691              		.section	.text._ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_b
 6692              		.align 2
 6693              		.weak	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 6695              	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv:
 6696              	.LFB1526:
 113:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 6697              		.loc 7 113 0
 6698              		.cfi_startproc
 6699 0000 55       		pushq	%rbp
 6700              		.cfi_def_cfa_offset 16
 6701              		.cfi_offset 6, -16
 6702 0001 4889E5   		movq	%rsp, %rbp
 6703              		.cfi_def_cfa_register 6
 6704 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/bits/stl_vector.h **** 
 6705              		.loc 7 114 0
 6706 0008 488B45F8 		movq	-8(%rbp), %rax
 6707 000c 5D       		popq	%rbp
 6708              		.cfi_def_cfa 7, 8
 6709 000d C3       		ret
 6710              		.cfi_endproc
 6711              	.LFE1526:
 6713              		.section	.text._ZSt8_DestroyIPffEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPffEvT_S1_RSaIT0_E,c
 6714              		.weak	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E
 6716              	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E:
 6717              	.LFB1527:
 6718              		.file 10 "/usr/include/c++/5/bits/stl_construct.h"
   1:/usr/include/c++/5/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_construct.h **** 
   3:/usr/include/c++/5/bits/stl_construct.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_construct.h **** //
   5:/usr/include/c++/5/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_construct.h **** 
  11:/usr/include/c++/5/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_construct.h **** 
  16:/usr/include/c++/5/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_construct.h **** 
  20:/usr/include/c++/5/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_construct.h **** 
  25:/usr/include/c++/5/bits/stl_construct.h **** /*
  26:/usr/include/c++/5/bits/stl_construct.h ****  *
  27:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_construct.h ****  *
  30:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_construct.h ****  *
  38:/usr/include/c++/5/bits/stl_construct.h ****  *
  39:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_construct.h ****  *
  42:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_construct.h ****  */
  50:/usr/include/c++/5/bits/stl_construct.h **** 
  51:/usr/include/c++/5/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/5/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/5/bits/stl_construct.h ****  */
  55:/usr/include/c++/5/bits/stl_construct.h **** 
  56:/usr/include/c++/5/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/5/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/5/bits/stl_construct.h **** 
  59:/usr/include/c++/5/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/5/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/5/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/5/bits/stl_construct.h **** 
  63:/usr/include/c++/5/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/5/bits/stl_construct.h **** {
  65:/usr/include/c++/5/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/5/bits/stl_construct.h **** 
  67:/usr/include/c++/5/bits/stl_construct.h ****   /**
  68:/usr/include/c++/5/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/5/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/5/bits/stl_construct.h ****    */
  71:/usr/include/c++/5/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/5/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/5/bits/stl_construct.h **** #else
  77:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/5/bits/stl_construct.h ****     {
  81:/usr/include/c++/5/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/5/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/5/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/5/bits/stl_construct.h ****     }
  85:/usr/include/c++/5/bits/stl_construct.h **** #endif
  86:/usr/include/c++/5/bits/stl_construct.h **** 
  87:/usr/include/c++/5/bits/stl_construct.h ****   /**
  88:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/5/bits/stl_construct.h ****    */
  90:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/5/bits/stl_construct.h **** 
  95:/usr/include/c++/5/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/5/bits/stl_construct.h ****     {
  98:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/5/bits/stl_construct.h ****         static void
 100:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/5/bits/stl_construct.h **** 	{
 102:/usr/include/c++/5/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/5/bits/stl_construct.h **** 	}
 105:/usr/include/c++/5/bits/stl_construct.h ****     };
 106:/usr/include/c++/5/bits/stl_construct.h **** 
 107:/usr/include/c++/5/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/5/bits/stl_construct.h ****     {
 110:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/5/bits/stl_construct.h ****         static void
 112:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/5/bits/stl_construct.h ****     };
 114:/usr/include/c++/5/bits/stl_construct.h **** 
 115:/usr/include/c++/5/bits/stl_construct.h ****   /**
 116:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/5/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/5/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/5/bits/stl_construct.h ****    */
 120:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/5/bits/stl_construct.h ****     {
 124:/usr/include/c++/5/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/5/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/5/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/5/bits/stl_construct.h ****     }
 129:/usr/include/c++/5/bits/stl_construct.h **** 
 130:/usr/include/c++/5/bits/stl_construct.h ****   /**
 131:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/5/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/5/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/5/bits/stl_construct.h ****    */
 135:/usr/include/c++/5/bits/stl_construct.h **** 
 136:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/5/bits/stl_construct.h ****     void
 138:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/5/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/5/bits/stl_construct.h ****     {
 141:/usr/include/c++/5/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/5/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/5/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/5/bits/stl_construct.h ****     }
 145:/usr/include/c++/5/bits/stl_construct.h **** 
 146:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 6719              		.loc 10 148 0
 6720              		.cfi_startproc
 6721 0000 55       		pushq	%rbp
 6722              		.cfi_def_cfa_offset 16
 6723              		.cfi_offset 6, -16
 6724 0001 4889E5   		movq	%rsp, %rbp
 6725              		.cfi_def_cfa_register 6
 6726 0004 4883EC20 		subq	$32, %rsp
 6727 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6728 000c 488975F0 		movq	%rsi, -16(%rbp)
 6729 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/5/bits/stl_construct.h ****     {
 151:/usr/include/c++/5/bits/stl_construct.h ****       _Destroy(__first, __last);
 6730              		.loc 10 151 0
 6731 0014 488B55F0 		movq	-16(%rbp), %rdx
 6732 0018 488B45F8 		movq	-8(%rbp), %rax
 6733 001c 4889D6   		movq	%rdx, %rsi
 6734 001f 4889C7   		movq	%rax, %rdi
 6735 0022 E8000000 		call	_ZSt8_DestroyIPfEvT_S1_
 6735      00
 152:/usr/include/c++/5/bits/stl_construct.h ****     }
 6736              		.loc 10 152 0
 6737 0027 90       		nop
 6738 0028 C9       		leave
 6739              		.cfi_def_cfa 7, 8
 6740 0029 C3       		ret
 6741              		.cfi_endproc
 6742              	.LFE1527:
 6744              		.section	.text._ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_,"axG",@progbits
 6745              		.weak	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
 6747              	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_:
 6748              	.LFB1528:
  87:../Checks.h   **** {
 6749              		.loc 5 87 0
 6750              		.cfi_startproc
 6751 0000 55       		pushq	%rbp
 6752              		.cfi_def_cfa_offset 16
 6753              		.cfi_offset 6, -16
 6754 0001 4889E5   		movq	%rsp, %rbp
 6755              		.cfi_def_cfa_register 6
 6756 0004 53       		pushq	%rbx
 6757 0005 4883EC38 		subq	$56, %rsp
 6758              		.cfi_offset 3, -24
 6759 0009 48897DD8 		movq	%rdi, -40(%rbp)
 6760 000d 488975D0 		movq	%rsi, -48(%rbp)
 6761 0011 8955CC   		movl	%edx, -52(%rbp)
 6762 0014 48894DC0 		movq	%rcx, -64(%rbp)
  89:../Checks.h   ****     for (int i = 0; i < count; ++i)
 6763              		.loc 5 89 0
 6764 0018 C645EB01 		movb	$1, -21(%rbp)
 6765              	.LBB111:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6766              		.loc 5 90 0
 6767 001c C745EC00 		movl	$0, -20(%rbp)
 6767      000000
 6768              	.L368:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6769              		.loc 5 90 0 is_stmt 0 discriminator 3
 6770 0023 8B45EC   		movl	-20(%rbp), %eax
 6771 0026 3B45CC   		cmpl	-52(%rbp), %eax
 6772 0029 7D59     		jge	.L367
  91:../Checks.h   ****     return equal;
 6773              		.loc 5 91 0 is_stmt 1 discriminator 2
 6774 002b 8B45EC   		movl	-20(%rbp), %eax
 6775 002e 4863D0   		movslq	%eax, %rdx
 6776 0031 488B45D0 		movq	-48(%rbp), %rax
 6777 0035 4889D6   		movq	%rdx, %rsi
 6778 0038 4889C7   		movq	%rax, %rdi
 6779 003b E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 6779      00
 6780 0040 4889C3   		movq	%rax, %rbx
 6781 0043 8B45EC   		movl	-20(%rbp), %eax
 6782 0046 4863D0   		movslq	%eax, %rdx
 6783 0049 488B45D8 		movq	-40(%rbp), %rax
 6784 004d 4889D6   		movq	%rdx, %rsi
 6785 0050 4889C7   		movq	%rax, %rdi
 6786 0053 E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 6786      00
 6787 0058 4889C1   		movq	%rax, %rcx
 6788 005b 488B45C0 		movq	-64(%rbp), %rax
 6789 005f 4889C2   		movq	%rax, %rdx
 6790 0062 4889DE   		movq	%rbx, %rsi
 6791 0065 4889CF   		movq	%rcx, %rdi
 6792 0068 E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6792      00
 6793 006d 0FB655EB 		movzbl	-21(%rbp), %edx
 6794 0071 0FB6C0   		movzbl	%al, %eax
 6795 0074 21D0     		andl	%edx, %eax
 6796 0076 85C0     		testl	%eax, %eax
 6797 0078 0F95C0   		setne	%al
 6798 007b 8845EB   		movb	%al, -21(%rbp)
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6799              		.loc 5 90 0 discriminator 2
 6800 007e 8345EC01 		addl	$1, -20(%rbp)
 6801 0082 EB9F     		jmp	.L368
 6802              	.L367:
 6803              	.LBE111:
  92:../Checks.h   **** }
 6804              		.loc 5 92 0
 6805 0084 0FB645EB 		movzbl	-21(%rbp), %eax
  93:../Checks.h   **** 
 6806              		.loc 5 93 0
 6807 0088 4883C438 		addq	$56, %rsp
 6808 008c 5B       		popq	%rbx
 6809 008d 5D       		popq	%rbp
 6810              		.cfi_def_cfa 7, 8
 6811 008e C3       		ret
 6812              		.cfi_endproc
 6813              	.LFE1528:
 6815              		.section	.text._ZNKSt6vectorIfSaIfEEixEm,"axG",@progbits,_ZNKSt6vectorIfSaIfEEixEm,comdat
 6816              		.align 2
 6817              		.weak	_ZNKSt6vectorIfSaIfEEixEm
 6819              	_ZNKSt6vectorIfSaIfEEixEm:
 6820              	.LFB1529:
 794:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 6821              		.loc 7 794 0
 6822              		.cfi_startproc
 6823 0000 55       		pushq	%rbp
 6824              		.cfi_def_cfa_offset 16
 6825              		.cfi_offset 6, -16
 6826 0001 4889E5   		movq	%rsp, %rbp
 6827              		.cfi_def_cfa_register 6
 6828 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6829 0008 488975F0 		movq	%rsi, -16(%rbp)
 795:/usr/include/c++/5/bits/stl_vector.h **** 
 6830              		.loc 7 795 0
 6831 000c 488B45F8 		movq	-8(%rbp), %rax
 6832 0010 488B00   		movq	(%rax), %rax
 6833 0013 488B55F0 		movq	-16(%rbp), %rdx
 6834 0017 48C1E202 		salq	$2, %rdx
 6835 001b 4801D0   		addq	%rdx, %rax
 6836 001e 5D       		popq	%rbp
 6837              		.cfi_def_cfa 7, 8
 6838 001f C3       		ret
 6839              		.cfi_endproc
 6840              	.LFE1529:
 6842              		.section	.text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_ba
 6843              		.align 2
 6844              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_
 6846              	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:
 6847              	.LFB1549:
  90:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
 6848              		.loc 7 90 0
 6849              		.cfi_startproc
 6850 0000 55       		pushq	%rbp
 6851              		.cfi_def_cfa_offset 16
 6852              		.cfi_offset 6, -16
 6853 0001 4889E5   		movq	%rsp, %rbp
 6854              		.cfi_def_cfa_register 6
 6855 0004 4883EC10 		subq	$16, %rsp
 6856 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6857 000c 488975F0 		movq	%rsi, -16(%rbp)
 6858              	.LBB112:
  91:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
 6859              		.loc 7 91 0
 6860 0010 488B55F0 		movq	-16(%rbp), %rdx
 6861 0014 488B45F8 		movq	-8(%rbp), %rax
 6862 0018 4889D6   		movq	%rdx, %rsi
 6863 001b 4889C7   		movq	%rax, %rdi
 6864 001e E8000000 		call	_ZNSaIfEC2ERKS_
 6864      00
 6865 0023 488B45F8 		movq	-8(%rbp), %rax
 6866 0027 48C70000 		movq	$0, (%rax)
 6866      000000
 6867 002e 488B45F8 		movq	-8(%rbp), %rax
 6868 0032 48C74008 		movq	$0, 8(%rax)
 6868      00000000 
 6869 003a 488B45F8 		movq	-8(%rbp), %rax
 6870 003e 48C74010 		movq	$0, 16(%rax)
 6870      00000000 
 6871              	.LBE112:
  92:/usr/include/c++/5/bits/stl_vector.h **** 
 6872              		.loc 7 92 0
 6873 0046 90       		nop
 6874 0047 C9       		leave
 6875              		.cfi_def_cfa 7, 8
 6876 0048 C3       		ret
 6877              		.cfi_endproc
 6878              	.LFE1549:
 6880              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
 6881              		.set	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_,_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2
 6882              		.section	.text._ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_bas
 6883              		.align 2
 6884              		.weak	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
 6886              	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm:
 6887              	.LFB1551:
 183:/usr/include/c++/5/bits/stl_vector.h ****       {
 6888              		.loc 7 183 0
 6889              		.cfi_startproc
 6890 0000 55       		pushq	%rbp
 6891              		.cfi_def_cfa_offset 16
 6892              		.cfi_offset 6, -16
 6893 0001 4889E5   		movq	%rsp, %rbp
 6894              		.cfi_def_cfa_register 6
 6895 0004 4883EC10 		subq	$16, %rsp
 6896 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6897 000c 488975F0 		movq	%rsi, -16(%rbp)
 185:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 6898              		.loc 7 185 0
 6899 0010 488B55F0 		movq	-16(%rbp), %rdx
 6900 0014 488B45F8 		movq	-8(%rbp), %rax
 6901 0018 4889D6   		movq	%rdx, %rsi
 6902 001b 4889C7   		movq	%rax, %rdi
 6903 001e E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
 6903      00
 6904 0023 4889C2   		movq	%rax, %rdx
 6905 0026 488B45F8 		movq	-8(%rbp), %rax
 6906 002a 488910   		movq	%rdx, (%rax)
 186:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 6907              		.loc 7 186 0
 6908 002d 488B45F8 		movq	-8(%rbp), %rax
 6909 0031 488B10   		movq	(%rax), %rdx
 6910 0034 488B45F8 		movq	-8(%rbp), %rax
 6911 0038 48895008 		movq	%rdx, 8(%rax)
 187:/usr/include/c++/5/bits/stl_vector.h ****       }
 6912              		.loc 7 187 0
 6913 003c 488B45F8 		movq	-8(%rbp), %rax
 6914 0040 488B00   		movq	(%rax), %rax
 6915 0043 488B55F0 		movq	-16(%rbp), %rdx
 6916 0047 48C1E202 		salq	$2, %rdx
 6917 004b 4801C2   		addq	%rax, %rdx
 6918 004e 488B45F8 		movq	-8(%rbp), %rax
 6919 0052 48895010 		movq	%rdx, 16(%rax)
 188:/usr/include/c++/5/bits/stl_vector.h ****     };
 6920              		.loc 7 188 0
 6921 0056 90       		nop
 6922 0057 C9       		leave
 6923              		.cfi_def_cfa 7, 8
 6924 0058 C3       		ret
 6925              		.cfi_endproc
 6926              	.LFE1551:
 6928              		.section	.text._ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm,"axG",@progbits,_ZNSt12_Vector_baseI
 6929              		.align 2
 6930              		.weak	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
 6932              	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm:
 6933              	.LFB1552:
 174:/usr/include/c++/5/bits/stl_vector.h ****       {
 6934              		.loc 7 174 0
 6935              		.cfi_startproc
 6936 0000 55       		pushq	%rbp
 6937              		.cfi_def_cfa_offset 16
 6938              		.cfi_offset 6, -16
 6939 0001 4889E5   		movq	%rsp, %rbp
 6940              		.cfi_def_cfa_register 6
 6941 0004 4883EC20 		subq	$32, %rsp
 6942 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6943 000c 488975F0 		movq	%rsi, -16(%rbp)
 6944 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 6945              		.loc 7 177 0
 6946 0014 48837DF0 		cmpq	$0, -16(%rbp)
 6946      00
 6947 0019 7417     		je	.L376
 178:/usr/include/c++/5/bits/stl_vector.h ****       }
 6948              		.loc 7 178 0
 6949 001b 488B45F8 		movq	-8(%rbp), %rax
 6950 001f 488B55E8 		movq	-24(%rbp), %rdx
 6951 0023 488B4DF0 		movq	-16(%rbp), %rcx
 6952 0027 4889CE   		movq	%rcx, %rsi
 6953 002a 4889C7   		movq	%rax, %rdi
 6954 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
 6954      00
 6955              	.L376:
 179:/usr/include/c++/5/bits/stl_vector.h **** 
 6956              		.loc 7 179 0
 6957 0032 90       		nop
 6958 0033 C9       		leave
 6959              		.cfi_def_cfa 7, 8
 6960 0034 C3       		ret
 6961              		.cfi_endproc
 6962              	.LFE1552:
 6964              		.section	.text._ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E,"axG",@progbits,_ZSt24__
 6965              		.weak	_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E
 6967              	_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E:
 6968              	.LFB1553:
 6969              		.file 11 "/usr/include/c++/5/bits/stl_uninitialized.h"
   1:/usr/include/c++/5/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_uninitialized.h **** 
   3:/usr/include/c++/5/bits/stl_uninitialized.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_uninitialized.h **** //
   5:/usr/include/c++/5/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_uninitialized.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  11:/usr/include/c++/5/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  16:/usr/include/c++/5/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  20:/usr/include/c++/5/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  25:/usr/include/c++/5/bits/stl_uninitialized.h **** /*
  26:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  27:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  30:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  38:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  39:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  42:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_uninitialized.h ****  */
  50:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  51:/usr/include/c++/5/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/usr/include/c++/5/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/5/bits/stl_uninitialized.h ****  */
  55:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  56:/usr/include/c++/5/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/usr/include/c++/5/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  59:/usr/include/c++/5/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/5/bits/stl_uninitialized.h **** {
  61:/usr/include/c++/5/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  63:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  64:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  65:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
  66:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  67:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
  68:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  69:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  70:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
  71:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  72:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
  73:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, ++__cur)
  75:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  76:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
  77:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
  79:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
  80:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  81:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  82:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
  83:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
  84:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
  85:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  86:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
  87:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  88:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
  89:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  90:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
  91:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  92:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  93:/usr/include/c++/5/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
  94:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
  95:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  96:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
  97:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
  98:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
  99:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 100:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 101:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 102:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 103:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 104:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 105:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 106:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 107:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 108:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 109:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 110:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 111:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType1;
 112:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 113:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType2;
 114:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 115:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 116:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 117:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 118:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 119:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 120:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 121:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 122:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 123:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 124:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 125:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       && __assignable>::
 126:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 127:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 128:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 129:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 130:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 131:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 132:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 133:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 134:/usr/include/c++/5/bits/stl_uninitialized.h ****         static void
 135:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 136:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 137:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
 138:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 139:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 140:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 141:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 142:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 143:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 144:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
 145:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 146:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 147:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 148:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 149:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 150:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 151:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 152:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
 153:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 154:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 155:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 156:/usr/include/c++/5/bits/stl_uninitialized.h ****         static void
 157:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 158:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 159:/usr/include/c++/5/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 160:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 161:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 162:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
 163:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 164:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 165:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 166:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 167:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   Nothing.
 168:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 169:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 170:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 171:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 172:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline void
 173:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 174:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 175:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 176:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 177:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType;
 178:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 179:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 180:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 181:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 182:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 183:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 184:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 185:/usr/include/c++/5/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 186:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 187:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 188:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 189:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 190:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 191:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 192:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 193:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 194:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
 195:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 196:/usr/include/c++/5/bits/stl_uninitialized.h **** 			const _Tp& __x)
 197:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
 198:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 199:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 200:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 201:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 202:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 203:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
 204:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 205:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
 206:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 207:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 208:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 209:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 210:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 211:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 212:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 213:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
 214:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 215:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 216:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 217:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
 218:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 219:/usr/include/c++/5/bits/stl_uninitialized.h **** 			const _Tp& __x)
 220:/usr/include/c++/5/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 221:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 222:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 223:/usr/include/c++/5/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 224:/usr/include/c++/5/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 225:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
 226:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 227:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 228:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 229:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 230:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   Nothing.
 231:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 232:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 233:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 234:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 235:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 236:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 237:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 238:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 239:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType;
 240:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 241:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 242:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 243:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 244:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 245:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 246:/usr/include/c++/5/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 247:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 248:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 249:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 250:/usr/include/c++/5/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 251:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 252:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 253:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 254:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 255:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 256:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 257:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 258:/usr/include/c++/5/bits/stl_uninitialized.h ****     _ForwardIterator
 259:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 260:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 261:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 262:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 263:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 264:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 265:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 266:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, ++__cur)
 267:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 268:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  return __cur;
 269:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 270:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 271:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 272:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 273:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 274:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 275:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 276:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 277:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 278:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 279:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 280:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 281:/usr/include/c++/5/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 282:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 283:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 284:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 285:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 286:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 287:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 288:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 289:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 290:/usr/include/c++/5/bits/stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 291:/usr/include/c++/5/bits/stl_uninitialized.h **** 					 __result, __alloc);
 292:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 293:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 294:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 295:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 296:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 297:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 298:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 299:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _ForwardIterator __result,
 300:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _Allocator& __alloc)
 301:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 302:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a
 303:/usr/include/c++/5/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 304:/usr/include/c++/5/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 305:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 306:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 307:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 308:/usr/include/c++/5/bits/stl_uninitialized.h ****     void
 309:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 310:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 311:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 312:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 313:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 314:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 315:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 316:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 317:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 318:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 319:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 320:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 321:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 322:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 323:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 324:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 325:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 326:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 327:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline void
 328:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 329:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 330:/usr/include/c++/5/bits/stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 331:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 332:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 333:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 334:/usr/include/c++/5/bits/stl_uninitialized.h ****     _ForwardIterator
 335:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 336:/usr/include/c++/5/bits/stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 337:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 338:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 339:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 340:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 341:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 342:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, ++__cur)
 343:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 344:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  return __cur;
 345:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 346:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 347:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 348:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 349:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 350:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 351:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 352:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 353:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 354:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Tp2>
 355:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 356:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 6970              		.loc 11 356 0
 6971              		.cfi_startproc
 6972 0000 55       		pushq	%rbp
 6973              		.cfi_def_cfa_offset 16
 6974              		.cfi_offset 6, -16
 6975 0001 4889E5   		movq	%rsp, %rbp
 6976              		.cfi_def_cfa_register 6
 6977 0004 4883EC20 		subq	$32, %rsp
 6978 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6979 000c 488975F0 		movq	%rsi, -16(%rbp)
 6980 0010 488955E8 		movq	%rdx, -24(%rbp)
 6981 0014 48894DE0 		movq	%rcx, -32(%rbp)
 357:/usr/include/c++/5/bits/stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 358:/usr/include/c++/5/bits/stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 6982              		.loc 11 358 0
 6983 0018 488B55E8 		movq	-24(%rbp), %rdx
 6984 001c 488B4DF0 		movq	-16(%rbp), %rcx
 6985 0020 488B45F8 		movq	-8(%rbp), %rax
 6986 0024 4889CE   		movq	%rcx, %rsi
 6987 0027 4889C7   		movq	%rax, %rdi
 6988 002a E8000000 		call	_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_
 6988      00
 6989 002f C9       		leave
 6990              		.cfi_def_cfa 7, 8
 6991 0030 C3       		ret
 6992              		.cfi_endproc
 6993              	.LFE1553:
 6995              		.section	.text._ZSt8_DestroyIPfEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPfEvT_S1_,comdat
 6996              		.weak	_ZSt8_DestroyIPfEvT_S1_
 6998              	_ZSt8_DestroyIPfEvT_S1_:
 6999              	.LFB1554:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 7000              		.loc 10 122 0
 7001              		.cfi_startproc
 7002 0000 55       		pushq	%rbp
 7003              		.cfi_def_cfa_offset 16
 7004              		.cfi_offset 6, -16
 7005 0001 4889E5   		movq	%rsp, %rbp
 7006              		.cfi_def_cfa_register 6
 7007 0004 4883EC10 		subq	$16, %rsp
 7008 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7009 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 7010              		.loc 10 126 0
 7011 0010 488B55F0 		movq	-16(%rbp), %rdx
 7012 0014 488B45F8 		movq	-8(%rbp), %rax
 7013 0018 4889D6   		movq	%rdx, %rsi
 7014 001b 4889C7   		movq	%rax, %rdi
 7015 001e E8000000 		call	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
 7015      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 7016              		.loc 10 128 0
 7017 0023 90       		nop
 7018 0024 C9       		leave
 7019              		.cfi_def_cfa 7, 8
 7020 0025 C3       		ret
 7021              		.cfi_endproc
 7022              	.LFE1554:
 7024              		.section	.text._ZNSaIfEC2ERKS_,"axG",@progbits,_ZNSaIfEC5ERKS_,comdat
 7025              		.align 2
 7026              		.weak	_ZNSaIfEC2ERKS_
 7028              	_ZNSaIfEC2ERKS_:
 7029              	.LFB1563:
 115:/usr/include/c++/5/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7030              		.loc 6 115 0
 7031              		.cfi_startproc
 7032 0000 55       		pushq	%rbp
 7033              		.cfi_def_cfa_offset 16
 7034              		.cfi_offset 6, -16
 7035 0001 4889E5   		movq	%rsp, %rbp
 7036              		.cfi_def_cfa_register 6
 7037 0004 4883EC10 		subq	$16, %rsp
 7038 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7039 000c 488975F0 		movq	%rsi, -16(%rbp)
 7040              	.LBB113:
 116:/usr/include/c++/5/bits/allocator.h **** 
 7041              		.loc 6 116 0
 7042 0010 488B55F0 		movq	-16(%rbp), %rdx
 7043 0014 488B45F8 		movq	-8(%rbp), %rax
 7044 0018 4889D6   		movq	%rdx, %rsi
 7045 001b 4889C7   		movq	%rax, %rdi
 7046 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 7046      00
 7047              	.LBE113:
 7048 0023 90       		nop
 7049 0024 C9       		leave
 7050              		.cfi_def_cfa 7, 8
 7051 0025 C3       		ret
 7052              		.cfi_endproc
 7053              	.LFE1563:
 7055              		.weak	_ZNSaIfEC1ERKS_
 7056              		.set	_ZNSaIfEC1ERKS_,_ZNSaIfEC2ERKS_
 7057              		.section	.text._ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIfSaI
 7058              		.align 2
 7059              		.weak	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
 7061              	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm:
 7062              	.LFB1565:
 167:/usr/include/c++/5/bits/stl_vector.h ****       {
 7063              		.loc 7 167 0
 7064              		.cfi_startproc
 7065 0000 55       		pushq	%rbp
 7066              		.cfi_def_cfa_offset 16
 7067              		.cfi_offset 6, -16
 7068 0001 4889E5   		movq	%rsp, %rbp
 7069              		.cfi_def_cfa_register 6
 7070 0004 4883EC10 		subq	$16, %rsp
 7071 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7072 000c 488975F0 		movq	%rsi, -16(%rbp)
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 7073              		.loc 7 170 0
 7074 0010 48837DF0 		cmpq	$0, -16(%rbp)
 7074      00
 7075 0015 7415     		je	.L382
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 7076              		.loc 7 170 0 is_stmt 0 discriminator 1
 7077 0017 488B45F8 		movq	-8(%rbp), %rax
 7078 001b 488B55F0 		movq	-16(%rbp), %rdx
 7079 001f 4889D6   		movq	%rdx, %rsi
 7080 0022 4889C7   		movq	%rax, %rdi
 7081 0025 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
 7081      00
 7082 002a EB05     		jmp	.L384
 7083              	.L382:
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 7084              		.loc 7 170 0 discriminator 2
 7085 002c B8000000 		movl	$0, %eax
 7085      00
 7086              	.L384:
 171:/usr/include/c++/5/bits/stl_vector.h **** 
 7087              		.loc 7 171 0 is_stmt 1 discriminator 5
 7088 0031 C9       		leave
 7089              		.cfi_def_cfa 7, 8
 7090 0032 C3       		ret
 7091              		.cfi_endproc
 7092              	.LFE1565:
 7094              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm,"axG",@progbits,_ZN9__gnu_
 7095              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
 7097              	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm:
 7098              	.LFB1566:
 7099              		.file 12 "/usr/include/c++/5/ext/alloc_traits.h"
   1:/usr/include/c++/5/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/5/ext/alloc_traits.h **** 
   3:/usr/include/c++/5/ext/alloc_traits.h **** // Copyright (C) 2011-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/alloc_traits.h **** //
   5:/usr/include/c++/5/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/5/ext/alloc_traits.h **** 
  11:/usr/include/c++/5/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/alloc_traits.h **** 
  16:/usr/include/c++/5/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/alloc_traits.h **** 
  20:/usr/include/c++/5/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/alloc_traits.h **** 
  25:/usr/include/c++/5/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/5/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/alloc_traits.h ****  */
  28:/usr/include/c++/5/ext/alloc_traits.h **** 
  29:/usr/include/c++/5/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/5/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/5/ext/alloc_traits.h **** 
  32:/usr/include/c++/5/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/5/ext/alloc_traits.h **** 
  34:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/5/ext/alloc_traits.h **** #else
  38:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/5/ext/alloc_traits.h **** 
  41:/usr/include/c++/5/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/5/ext/alloc_traits.h **** {
  43:/usr/include/c++/5/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/5/ext/alloc_traits.h **** 
  45:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Alloc>
  47:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal : std::false_type { };
  48:/usr/include/c++/5/ext/alloc_traits.h **** 
  49:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  50:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<std::allocator<_Tp>>
  51:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  52:/usr/include/c++/5/ext/alloc_traits.h **** 
  53:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename, typename> struct array_allocator;
  54:/usr/include/c++/5/ext/alloc_traits.h **** 
  55:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp, typename _Array>
  56:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<array_allocator<_Tp, _Array>>
  57:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  58:/usr/include/c++/5/ext/alloc_traits.h **** 
  59:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct bitmap_allocator;
  60:/usr/include/c++/5/ext/alloc_traits.h **** 
  61:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  62:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<bitmap_allocator<_Tp>>
  63:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  64:/usr/include/c++/5/ext/alloc_traits.h **** 
  65:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct malloc_allocator;
  66:/usr/include/c++/5/ext/alloc_traits.h **** 
  67:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  68:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<malloc_allocator<_Tp>>
  69:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  70:/usr/include/c++/5/ext/alloc_traits.h **** 
  71:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct mt_allocator;
  72:/usr/include/c++/5/ext/alloc_traits.h **** 
  73:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  74:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<mt_allocator<_Tp>>
  75:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  76:/usr/include/c++/5/ext/alloc_traits.h **** 
  77:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct new_allocator;
  78:/usr/include/c++/5/ext/alloc_traits.h **** 
  79:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  80:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<new_allocator<_Tp>>
  81:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  82:/usr/include/c++/5/ext/alloc_traits.h **** 
  83:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct pool_allocator;
  84:/usr/include/c++/5/ext/alloc_traits.h **** 
  85:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  86:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<pool_allocator<_Tp>>
  87:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  88:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  89:/usr/include/c++/5/ext/alloc_traits.h **** 
  90:/usr/include/c++/5/ext/alloc_traits.h **** /**
  91:/usr/include/c++/5/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++0x allocators.
  92:/usr/include/c++/5/ext/alloc_traits.h ****  * @ingroup allocators
  93:/usr/include/c++/5/ext/alloc_traits.h **** */
  94:/usr/include/c++/5/ext/alloc_traits.h **** template<typename _Alloc>
  95:/usr/include/c++/5/ext/alloc_traits.h ****   struct __alloc_traits
  96:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/5/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  98:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  99:/usr/include/c++/5/ext/alloc_traits.h ****   {
 100:/usr/include/c++/5/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
 101:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
 102:/usr/include/c++/5/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
 103:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
 104:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
 105:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
 106:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
 107:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
 108:/usr/include/c++/5/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
 109:/usr/include/c++/5/ext/alloc_traits.h ****     typedef value_type&                             reference;
 110:/usr/include/c++/5/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
 111:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::allocate;
 112:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::deallocate;
 113:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::construct;
 114:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::destroy;
 115:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::max_size;
 116:/usr/include/c++/5/ext/alloc_traits.h **** 
 117:/usr/include/c++/5/ext/alloc_traits.h ****   private:
 118:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr>
 119:/usr/include/c++/5/ext/alloc_traits.h ****       using __is_custom_pointer
 120:/usr/include/c++/5/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
 121:/usr/include/c++/5/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
 122:/usr/include/c++/5/ext/alloc_traits.h **** 
 123:/usr/include/c++/5/ext/alloc_traits.h ****   public:
 124:/usr/include/c++/5/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
 125:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
 126:/usr/include/c++/5/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 127:/usr/include/c++/5/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
 128:/usr/include/c++/5/ext/alloc_traits.h ****       {
 129:/usr/include/c++/5/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
 130:/usr/include/c++/5/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
 131:/usr/include/c++/5/ext/alloc_traits.h ****       }
 132:/usr/include/c++/5/ext/alloc_traits.h **** 
 133:/usr/include/c++/5/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
 134:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr>
 135:/usr/include/c++/5/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 136:/usr/include/c++/5/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
 137:/usr/include/c++/5/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
 138:/usr/include/c++/5/ext/alloc_traits.h **** 
 139:/usr/include/c++/5/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 140:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 141:/usr/include/c++/5/ext/alloc_traits.h **** 
 142:/usr/include/c++/5/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
 143:/usr/include/c++/5/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 144:/usr/include/c++/5/ext/alloc_traits.h **** 
 145:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 146:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 147:/usr/include/c++/5/ext/alloc_traits.h **** 
 148:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 149:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 150:/usr/include/c++/5/ext/alloc_traits.h **** 
 151:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 152:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 153:/usr/include/c++/5/ext/alloc_traits.h **** 
 154:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 155:/usr/include/c++/5/ext/alloc_traits.h ****     { return __allocator_always_compares_equal<_Alloc>::value; }
 156:/usr/include/c++/5/ext/alloc_traits.h **** 
 157:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 158:/usr/include/c++/5/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 159:/usr/include/c++/5/ext/alloc_traits.h **** 
 160:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_swap()
 161:/usr/include/c++/5/ext/alloc_traits.h ****     {
 162:/usr/include/c++/5/ext/alloc_traits.h ****       using std::swap;
 163:/usr/include/c++/5/ext/alloc_traits.h ****       return !_S_propagate_on_swap()
 164:/usr/include/c++/5/ext/alloc_traits.h ****        	|| noexcept(swap(std::declval<_Alloc&>(), std::declval<_Alloc&>()));
 165:/usr/include/c++/5/ext/alloc_traits.h ****     }
 166:/usr/include/c++/5/ext/alloc_traits.h **** 
 167:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Tp>
 168:/usr/include/c++/5/ext/alloc_traits.h ****       struct rebind
 169:/usr/include/c++/5/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 170:/usr/include/c++/5/ext/alloc_traits.h **** #else
 171:/usr/include/c++/5/ext/alloc_traits.h **** 
 172:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 173:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 174:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 175:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 176:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 177:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 178:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 179:/usr/include/c++/5/ext/alloc_traits.h **** 
 180:/usr/include/c++/5/ext/alloc_traits.h ****     static pointer
 181:/usr/include/c++/5/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 182:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 183:/usr/include/c++/5/ext/alloc_traits.h **** 
 184:/usr/include/c++/5/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 7100              		.loc 12 184 0
 7101              		.cfi_startproc
 7102 0000 55       		pushq	%rbp
 7103              		.cfi_def_cfa_offset 16
 7104              		.cfi_offset 6, -16
 7105 0001 4889E5   		movq	%rsp, %rbp
 7106              		.cfi_def_cfa_register 6
 7107 0004 4883EC20 		subq	$32, %rsp
 7108 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7109 000c 488975F0 		movq	%rsi, -16(%rbp)
 7110 0010 488955E8 		movq	%rdx, -24(%rbp)
 185:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 7111              		.loc 12 185 0
 7112 0014 488B55E8 		movq	-24(%rbp), %rdx
 7113 0018 488B4DF0 		movq	-16(%rbp), %rcx
 7114 001c 488B45F8 		movq	-8(%rbp), %rax
 7115 0020 4889CE   		movq	%rcx, %rsi
 7116 0023 4889C7   		movq	%rax, %rdi
 7117 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
 7117      00
 7118 002b 90       		nop
 7119 002c C9       		leave
 7120              		.cfi_def_cfa 7, 8
 7121 002d C3       		ret
 7122              		.cfi_endproc
 7123              	.LFE1566:
 7125              		.section	.text._ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_,"axG",@progbits,_ZSt20uninitialized_f
 7126              		.weak	_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_
 7128              	_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_:
 7129              	.LFB1567:
 236:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 7130              		.loc 11 236 0
 7131              		.cfi_startproc
 7132 0000 55       		pushq	%rbp
 7133              		.cfi_def_cfa_offset 16
 7134              		.cfi_offset 6, -16
 7135 0001 4889E5   		movq	%rsp, %rbp
 7136              		.cfi_def_cfa_register 6
 7137 0004 4883EC30 		subq	$48, %rsp
 7138 0008 48897DE8 		movq	%rdi, -24(%rbp)
 7139 000c 488975E0 		movq	%rsi, -32(%rbp)
 7140 0010 488955D8 		movq	%rdx, -40(%rbp)
 241:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 7141              		.loc 11 241 0
 7142 0014 C645FF01 		movb	$1, -1(%rbp)
 247:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 7143              		.loc 11 247 0
 7144 0018 488B55D8 		movq	-40(%rbp), %rdx
 7145 001c 488B4DE0 		movq	-32(%rbp), %rcx
 7146 0020 488B45E8 		movq	-24(%rbp), %rax
 7147 0024 4889CE   		movq	%rcx, %rsi
 7148 0027 4889C7   		movq	%rax, %rdi
 7149 002a E8000000 		call	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_
 7149      00
 248:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 7150              		.loc 11 248 0
 7151 002f C9       		leave
 7152              		.cfi_def_cfa 7, 8
 7153 0030 C3       		ret
 7154              		.cfi_endproc
 7155              	.LFE1567:
 7157              		.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxI
 7158              		.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
 7160              	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_:
 7161              	.LFB1568:
 112:/usr/include/c++/5/bits/stl_construct.h ****     };
 7162              		.loc 10 112 0
 7163              		.cfi_startproc
 7164 0000 55       		pushq	%rbp
 7165              		.cfi_def_cfa_offset 16
 7166              		.cfi_offset 6, -16
 7167 0001 4889E5   		movq	%rsp, %rbp
 7168              		.cfi_def_cfa_register 6
 7169 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7170 0008 488975F0 		movq	%rsi, -16(%rbp)
 112:/usr/include/c++/5/bits/stl_construct.h ****     };
 7171              		.loc 10 112 0
 7172 000c 90       		nop
 7173 000d 5D       		popq	%rbp
 7174              		.cfi_def_cfa 7, 8
 7175 000e C3       		ret
 7176              		.cfi_endproc
 7177              	.LFE1568:
 7179              		.section	.text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx13new_allocato
 7180              		.align 2
 7181              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 7183              	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:
 7184              	.LFB1571:
  81:/usr/include/c++/5/ext/new_allocator.h **** 
 7185              		.loc 9 81 0
 7186              		.cfi_startproc
 7187 0000 55       		pushq	%rbp
 7188              		.cfi_def_cfa_offset 16
 7189              		.cfi_offset 6, -16
 7190 0001 4889E5   		movq	%rsp, %rbp
 7191              		.cfi_def_cfa_register 6
 7192 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7193 0008 488975F0 		movq	%rsi, -16(%rbp)
  81:/usr/include/c++/5/ext/new_allocator.h **** 
 7194              		.loc 9 81 0
 7195 000c 90       		nop
 7196 000d 5D       		popq	%rbp
 7197              		.cfi_def_cfa 7, 8
 7198 000e C3       		ret
 7199              		.cfi_endproc
 7200              	.LFE1571:
 7202              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_
 7203              		.set	_ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_,_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 7204              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m,"axG",@progbits,_ZN9__gnu_cxx14
 7205              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
 7207              	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m:
 7208              	.LFB1573:
 181:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 7209              		.loc 12 181 0
 7210              		.cfi_startproc
 7211 0000 55       		pushq	%rbp
 7212              		.cfi_def_cfa_offset 16
 7213              		.cfi_offset 6, -16
 7214 0001 4889E5   		movq	%rsp, %rbp
 7215              		.cfi_def_cfa_register 6
 7216 0004 4883EC10 		subq	$16, %rsp
 7217 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7218 000c 488975F0 		movq	%rsi, -16(%rbp)
 182:/usr/include/c++/5/ext/alloc_traits.h **** 
 7219              		.loc 12 182 0
 7220 0010 488B4DF0 		movq	-16(%rbp), %rcx
 7221 0014 488B45F8 		movq	-8(%rbp), %rax
 7222 0018 BA000000 		movl	$0, %edx
 7222      00
 7223 001d 4889CE   		movq	%rcx, %rsi
 7224 0020 4889C7   		movq	%rax, %rdi
 7225 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
 7225      00
 7226 0028 C9       		leave
 7227              		.cfi_def_cfa 7, 8
 7228 0029 C3       		ret
 7229              		.cfi_endproc
 7230              	.LFE1573:
 7232              		.section	.text._ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm,"axG",@progbits,_ZN9__gnu_cxx13new_
 7233              		.align 2
 7234              		.weak	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
 7236              	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm:
 7237              	.LFB1574:
  87:/usr/include/c++/5/ext/new_allocator.h **** 
  88:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/5/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/5/ext/new_allocator.h **** 
  92:/usr/include/c++/5/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/5/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/5/ext/new_allocator.h **** 
  96:/usr/include/c++/5/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/5/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/5/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/5/ext/new_allocator.h ****       { 
 101:/usr/include/c++/5/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/5/ext/new_allocator.h **** 
 104:/usr/include/c++/5/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/5/ext/new_allocator.h ****       }
 106:/usr/include/c++/5/ext/new_allocator.h **** 
 107:/usr/include/c++/5/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/5/ext/new_allocator.h ****       void
 109:/usr/include/c++/5/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 7238              		.loc 9 109 0
 7239              		.cfi_startproc
 7240 0000 55       		pushq	%rbp
 7241              		.cfi_def_cfa_offset 16
 7242              		.cfi_offset 6, -16
 7243 0001 4889E5   		movq	%rsp, %rbp
 7244              		.cfi_def_cfa_register 6
 7245 0004 4883EC20 		subq	$32, %rsp
 7246 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7247 000c 488975F0 		movq	%rsi, -16(%rbp)
 7248 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 7249              		.loc 9 110 0
 7250 0014 488B45F0 		movq	-16(%rbp), %rax
 7251 0018 4889C7   		movq	%rax, %rdi
 7252 001b E8000000 		call	_ZdlPv
 7252      00
 7253 0020 90       		nop
 7254 0021 C9       		leave
 7255              		.cfi_def_cfa 7, 8
 7256 0022 C3       		ret
 7257              		.cfi_endproc
 7258              	.LFE1574:
 7260              		.section	.text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_,"axG",@pro
 7261              		.weak	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_
 7263              	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_:
 7264              	.LFB1575:
 218:/usr/include/c++/5/bits/stl_uninitialized.h **** 			const _Tp& __x)
 7265              		.loc 11 218 0
 7266              		.cfi_startproc
 7267 0000 55       		pushq	%rbp
 7268              		.cfi_def_cfa_offset 16
 7269              		.cfi_offset 6, -16
 7270 0001 4889E5   		movq	%rsp, %rbp
 7271              		.cfi_def_cfa_register 6
 7272 0004 4883EC20 		subq	$32, %rsp
 7273 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7274 000c 488975F0 		movq	%rsi, -16(%rbp)
 7275 0010 488955E8 		movq	%rdx, -24(%rbp)
 220:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 7276              		.loc 11 220 0
 7277 0014 488B55E8 		movq	-24(%rbp), %rdx
 7278 0018 488B4DF0 		movq	-16(%rbp), %rcx
 7279 001c 488B45F8 		movq	-8(%rbp), %rax
 7280 0020 4889CE   		movq	%rcx, %rsi
 7281 0023 4889C7   		movq	%rax, %rdi
 7282 0026 E8000000 		call	_ZSt6fill_nIPfmfET_S1_T0_RKT1_
 7282      00
 7283 002b C9       		leave
 7284              		.cfi_def_cfa 7, 8
 7285 002c C3       		ret
 7286              		.cfi_endproc
 7287              	.LFE1575:
 7289              		.section	.text._ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_al
 7290              		.align 2
 7291              		.weak	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
 7293              	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv:
 7294              	.LFB1576:
  99:/usr/include/c++/5/ext/new_allocator.h ****       { 
 7295              		.loc 9 99 0
 7296              		.cfi_startproc
 7297 0000 55       		pushq	%rbp
 7298              		.cfi_def_cfa_offset 16
 7299              		.cfi_offset 6, -16
 7300 0001 4889E5   		movq	%rsp, %rbp
 7301              		.cfi_def_cfa_register 6
 7302 0004 4883EC20 		subq	$32, %rsp
 7303 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7304 000c 488975F0 		movq	%rsi, -16(%rbp)
 7305 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 7306              		.loc 9 101 0
 7307 0014 488B45F8 		movq	-8(%rbp), %rax
 7308 0018 4889C7   		movq	%rax, %rdi
 7309 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
 7309      00
 7310 0020 483B45F0 		cmpq	-16(%rbp), %rax
 7311 0024 0F92C0   		setb	%al
 7312 0027 84C0     		testb	%al, %al
 7313 0029 7405     		je	.L396
 102:/usr/include/c++/5/ext/new_allocator.h **** 
 7314              		.loc 9 102 0
 7315 002b E8000000 		call	_ZSt17__throw_bad_allocv
 7315      00
 7316              	.L396:
 104:/usr/include/c++/5/ext/new_allocator.h ****       }
 7317              		.loc 9 104 0
 7318 0030 488B45F0 		movq	-16(%rbp), %rax
 7319 0034 48C1E002 		salq	$2, %rax
 7320 0038 4889C7   		movq	%rax, %rdi
 7321 003b E8000000 		call	_Znwm
 7321      00
 105:/usr/include/c++/5/ext/new_allocator.h **** 
 7322              		.loc 9 105 0
 7323 0040 C9       		leave
 7324              		.cfi_def_cfa 7, 8
 7325 0041 C3       		ret
 7326              		.cfi_endproc
 7327              	.LFE1576:
 7329              		.section	.text._ZSt6fill_nIPfmfET_S1_T0_RKT1_,"axG",@progbits,_ZSt6fill_nIPfmfET_S1_T0_RKT1_,comda
 7330              		.weak	_ZSt6fill_nIPfmfET_S1_T0_RKT1_
 7332              	_ZSt6fill_nIPfmfET_S1_T0_RKT1_:
 7333              	.LFB1577:
 7334              		.file 13 "/usr/include/c++/5/bits/stl_algobase.h"
   1:/usr/include/c++/5/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_algobase.h **** 
   3:/usr/include/c++/5/bits/stl_algobase.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_algobase.h **** //
   5:/usr/include/c++/5/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_algobase.h **** 
  11:/usr/include/c++/5/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_algobase.h **** 
  16:/usr/include/c++/5/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_algobase.h **** 
  20:/usr/include/c++/5/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_algobase.h **** 
  25:/usr/include/c++/5/bits/stl_algobase.h **** /*
  26:/usr/include/c++/5/bits/stl_algobase.h ****  *
  27:/usr/include/c++/5/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_algobase.h ****  *
  30:/usr/include/c++/5/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_algobase.h ****  *
  38:/usr/include/c++/5/bits/stl_algobase.h ****  *
  39:/usr/include/c++/5/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_algobase.h ****  *
  42:/usr/include/c++/5/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_algobase.h ****  */
  50:/usr/include/c++/5/bits/stl_algobase.h **** 
  51:/usr/include/c++/5/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/5/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/5/bits/stl_algobase.h ****  */
  55:/usr/include/c++/5/bits/stl_algobase.h **** 
  56:/usr/include/c++/5/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/5/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/5/bits/stl_algobase.h **** 
  59:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/5/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/5/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/5/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/5/bits/stl_algobase.h **** 
  73:/usr/include/c++/5/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/5/bits/stl_algobase.h **** {
  75:/usr/include/c++/5/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/5/bits/stl_algobase.h **** 
  77:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/usr/include/c++/5/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/usr/include/c++/5/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/usr/include/c++/5/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/usr/include/c++/5/bits/stl_algobase.h ****     struct __iter_swap
  83:/usr/include/c++/5/bits/stl_algobase.h ****     {
  84:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/usr/include/c++/5/bits/stl_algobase.h ****         static void
  86:/usr/include/c++/5/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/usr/include/c++/5/bits/stl_algobase.h ****         {
  88:/usr/include/c++/5/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/usr/include/c++/5/bits/stl_algobase.h ****             _ValueType1;
  90:/usr/include/c++/5/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/usr/include/c++/5/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/usr/include/c++/5/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/usr/include/c++/5/bits/stl_algobase.h **** 	}
  94:/usr/include/c++/5/bits/stl_algobase.h ****     };
  95:/usr/include/c++/5/bits/stl_algobase.h **** 
  96:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
  97:/usr/include/c++/5/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/usr/include/c++/5/bits/stl_algobase.h ****     {
  99:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/usr/include/c++/5/bits/stl_algobase.h ****         static void 
 101:/usr/include/c++/5/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/usr/include/c++/5/bits/stl_algobase.h ****         {
 103:/usr/include/c++/5/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/usr/include/c++/5/bits/stl_algobase.h ****         }
 105:/usr/include/c++/5/bits/stl_algobase.h ****     };
 106:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 107:/usr/include/c++/5/bits/stl_algobase.h **** 
 108:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 109:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/usr/include/c++/5/bits/stl_algobase.h ****    *
 115:/usr/include/c++/5/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/usr/include/c++/5/bits/stl_algobase.h ****    *  iterators themselves.
 117:/usr/include/c++/5/bits/stl_algobase.h ****   */
 118:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/include/c++/5/bits/stl_algobase.h ****     inline void
 120:/usr/include/c++/5/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/include/c++/5/bits/stl_algobase.h ****     {
 122:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 123:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/usr/include/c++/5/bits/stl_algobase.h **** 
 128:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/usr/include/c++/5/bits/stl_algobase.h **** 	_ValueType1;
 131:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/usr/include/c++/5/bits/stl_algobase.h **** 	_ValueType2;
 133:/usr/include/c++/5/bits/stl_algobase.h **** 
 134:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/usr/include/c++/5/bits/stl_algobase.h **** 
 139:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/usr/include/c++/5/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/usr/include/c++/5/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/usr/include/c++/5/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/usr/include/c++/5/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/usr/include/c++/5/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/usr/include/c++/5/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/usr/include/c++/5/bits/stl_algobase.h **** #else
 148:/usr/include/c++/5/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 150:/usr/include/c++/5/bits/stl_algobase.h ****     }
 151:/usr/include/c++/5/bits/stl_algobase.h **** 
 152:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 153:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/usr/include/c++/5/bits/stl_algobase.h ****    *
 160:/usr/include/c++/5/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/usr/include/c++/5/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/usr/include/c++/5/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/usr/include/c++/5/bits/stl_algobase.h ****   */
 164:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/usr/include/c++/5/bits/stl_algobase.h ****     _ForwardIterator2
 166:/usr/include/c++/5/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/usr/include/c++/5/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/usr/include/c++/5/bits/stl_algobase.h ****     {
 169:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 170:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/usr/include/c++/5/bits/stl_algobase.h **** 
 176:/usr/include/c++/5/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 177:/usr/include/c++/5/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/usr/include/c++/5/bits/stl_algobase.h ****       return __first2;
 179:/usr/include/c++/5/bits/stl_algobase.h ****     }
 180:/usr/include/c++/5/bits/stl_algobase.h **** 
 181:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 182:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/usr/include/c++/5/bits/stl_algobase.h ****    *
 188:/usr/include/c++/5/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/usr/include/c++/5/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/usr/include/c++/5/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/usr/include/c++/5/bits/stl_algobase.h ****   */
 192:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 193:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 195:/usr/include/c++/5/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/usr/include/c++/5/bits/stl_algobase.h ****     {
 197:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 198:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/usr/include/c++/5/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/usr/include/c++/5/bits/stl_algobase.h ****       if (__b < __a)
 201:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 202:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 203:/usr/include/c++/5/bits/stl_algobase.h ****     }
 204:/usr/include/c++/5/bits/stl_algobase.h **** 
 205:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 206:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/usr/include/c++/5/bits/stl_algobase.h ****    *
 212:/usr/include/c++/5/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/usr/include/c++/5/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/usr/include/c++/5/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/usr/include/c++/5/bits/stl_algobase.h ****   */
 216:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 217:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 219:/usr/include/c++/5/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/usr/include/c++/5/bits/stl_algobase.h ****     {
 221:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 222:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/usr/include/c++/5/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/usr/include/c++/5/bits/stl_algobase.h ****       if (__a < __b)
 225:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 226:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 227:/usr/include/c++/5/bits/stl_algobase.h ****     }
 228:/usr/include/c++/5/bits/stl_algobase.h **** 
 229:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 230:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/usr/include/c++/5/bits/stl_algobase.h ****    *
 237:/usr/include/c++/5/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/usr/include/c++/5/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/usr/include/c++/5/bits/stl_algobase.h ****   */
 240:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 243:/usr/include/c++/5/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/usr/include/c++/5/bits/stl_algobase.h ****     {
 245:/usr/include/c++/5/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/usr/include/c++/5/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 248:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 249:/usr/include/c++/5/bits/stl_algobase.h ****     }
 250:/usr/include/c++/5/bits/stl_algobase.h **** 
 251:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 252:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/usr/include/c++/5/bits/stl_algobase.h ****    *
 259:/usr/include/c++/5/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/usr/include/c++/5/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/usr/include/c++/5/bits/stl_algobase.h ****   */
 262:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 265:/usr/include/c++/5/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/usr/include/c++/5/bits/stl_algobase.h ****     {
 267:/usr/include/c++/5/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/usr/include/c++/5/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 270:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 271:/usr/include/c++/5/bits/stl_algobase.h ****     }
 272:/usr/include/c++/5/bits/stl_algobase.h **** 
 273:/usr/include/c++/5/bits/stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 274:/usr/include/c++/5/bits/stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 275:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/usr/include/c++/5/bits/stl_algobase.h ****     struct _Niter_base
 277:/usr/include/c++/5/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 278:/usr/include/c++/5/bits/stl_algobase.h ****     { };
 279:/usr/include/c++/5/bits/stl_algobase.h **** 
 280:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 281:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 282:/usr/include/c++/5/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 283:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 284:/usr/include/c++/5/bits/stl_algobase.h **** 
 285:/usr/include/c++/5/bits/stl_algobase.h ****   // Likewise, for move_iterator.
 286:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 287:/usr/include/c++/5/bits/stl_algobase.h ****     struct _Miter_base
 288:/usr/include/c++/5/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 289:/usr/include/c++/5/bits/stl_algobase.h ****     { };
 290:/usr/include/c++/5/bits/stl_algobase.h **** 
 291:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 292:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 293:/usr/include/c++/5/bits/stl_algobase.h ****     __miter_base(_Iterator __it)
 294:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 295:/usr/include/c++/5/bits/stl_algobase.h **** 
 296:/usr/include/c++/5/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 297:/usr/include/c++/5/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 298:/usr/include/c++/5/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 299:/usr/include/c++/5/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 300:/usr/include/c++/5/bits/stl_algobase.h ****   // a for loop with an explicit count.
 301:/usr/include/c++/5/bits/stl_algobase.h **** 
 302:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool, bool, typename>
 303:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move
 304:/usr/include/c++/5/bits/stl_algobase.h ****     {
 305:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 306:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 307:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 308:/usr/include/c++/5/bits/stl_algobase.h ****         {
 309:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 310:/usr/include/c++/5/bits/stl_algobase.h **** 	    *__result = *__first;
 311:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 312:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 313:/usr/include/c++/5/bits/stl_algobase.h ****     };
 314:/usr/include/c++/5/bits/stl_algobase.h **** 
 315:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 316:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Category>
 317:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 318:/usr/include/c++/5/bits/stl_algobase.h ****     {
 319:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 320:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 321:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 322:/usr/include/c++/5/bits/stl_algobase.h ****         {
 323:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 324:/usr/include/c++/5/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 325:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 326:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 327:/usr/include/c++/5/bits/stl_algobase.h ****     };
 328:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 329:/usr/include/c++/5/bits/stl_algobase.h **** 
 330:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 331:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 332:/usr/include/c++/5/bits/stl_algobase.h ****     {
 333:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 334:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 335:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 336:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 337:/usr/include/c++/5/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 339:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 340:/usr/include/c++/5/bits/stl_algobase.h **** 	      *__result = *__first;
 341:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 342:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 343:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 344:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 345:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 346:/usr/include/c++/5/bits/stl_algobase.h ****     };
 347:/usr/include/c++/5/bits/stl_algobase.h **** 
 348:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 349:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 350:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 351:/usr/include/c++/5/bits/stl_algobase.h ****     {
 352:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 353:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 354:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 355:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 356:/usr/include/c++/5/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 357:/usr/include/c++/5/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 358:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 359:/usr/include/c++/5/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 360:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 361:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 362:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 363:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 364:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 365:/usr/include/c++/5/bits/stl_algobase.h ****     };
 366:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 367:/usr/include/c++/5/bits/stl_algobase.h **** 
 368:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove>
 369:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 370:/usr/include/c++/5/bits/stl_algobase.h ****     {
 371:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _Tp>
 372:/usr/include/c++/5/bits/stl_algobase.h ****         static _Tp*
 373:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 374:/usr/include/c++/5/bits/stl_algobase.h ****         {
 375:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 376:/usr/include/c++/5/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 377:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 378:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 379:/usr/include/c++/5/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 380:/usr/include/c++/5/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 381:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 382:/usr/include/c++/5/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 383:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 384:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 385:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result + _Num;
 386:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 387:/usr/include/c++/5/bits/stl_algobase.h ****     };
 388:/usr/include/c++/5/bits/stl_algobase.h **** 
 389:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 390:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 391:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 392:/usr/include/c++/5/bits/stl_algobase.h ****     {
 393:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 394:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 395:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 396:/usr/include/c++/5/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 397:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 398:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 399:/usr/include/c++/5/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 400:/usr/include/c++/5/bits/stl_algobase.h **** 
 401:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 402:/usr/include/c++/5/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 403:/usr/include/c++/5/bits/stl_algobase.h ****     }
 404:/usr/include/c++/5/bits/stl_algobase.h **** 
 405:/usr/include/c++/5/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 406:/usr/include/c++/5/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 407:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT>
 408:/usr/include/c++/5/bits/stl_algobase.h ****     struct char_traits;
 409:/usr/include/c++/5/bits/stl_algobase.h **** 
 410:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 411:/usr/include/c++/5/bits/stl_algobase.h ****     class istreambuf_iterator;
 412:/usr/include/c++/5/bits/stl_algobase.h **** 
 413:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 414:/usr/include/c++/5/bits/stl_algobase.h ****     class ostreambuf_iterator;
 415:/usr/include/c++/5/bits/stl_algobase.h **** 
 416:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 417:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 418:/usr/include/c++/5/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 419:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 420:/usr/include/c++/5/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 421:/usr/include/c++/5/bits/stl_algobase.h **** 
 422:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 423:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 424:/usr/include/c++/5/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 425:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 426:/usr/include/c++/5/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 427:/usr/include/c++/5/bits/stl_algobase.h **** 
 428:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 429:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 430:/usr/include/c++/5/bits/stl_algobase.h **** 				    _CharT*>::__type
 431:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 432:/usr/include/c++/5/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 433:/usr/include/c++/5/bits/stl_algobase.h **** 
 434:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 435:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 436:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 437:/usr/include/c++/5/bits/stl_algobase.h ****     {
 438:/usr/include/c++/5/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 439:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 440:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 441:/usr/include/c++/5/bits/stl_algobase.h ****     }
 442:/usr/include/c++/5/bits/stl_algobase.h **** 
 443:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 444:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 445:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 446:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 447:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 448:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 449:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result + (first - last)
 450:/usr/include/c++/5/bits/stl_algobase.h ****    *
 451:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 452:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 453:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 454:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 455:/usr/include/c++/5/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 456:/usr/include/c++/5/bits/stl_algobase.h ****    *
 457:/usr/include/c++/5/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 458:/usr/include/c++/5/bits/stl_algobase.h ****    *  within [first,last).
 459:/usr/include/c++/5/bits/stl_algobase.h ****   */
 460:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 461:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 462:/usr/include/c++/5/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 463:/usr/include/c++/5/bits/stl_algobase.h ****     {
 464:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 465:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 466:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 467:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 468:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 469:/usr/include/c++/5/bits/stl_algobase.h **** 
 470:/usr/include/c++/5/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 471:/usr/include/c++/5/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 472:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 473:/usr/include/c++/5/bits/stl_algobase.h ****     }
 474:/usr/include/c++/5/bits/stl_algobase.h **** 
 475:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 476:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 477:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 478:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 479:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 480:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 481:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 482:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result + (first - last)
 483:/usr/include/c++/5/bits/stl_algobase.h ****    *
 484:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 485:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 486:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 487:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 488:/usr/include/c++/5/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 489:/usr/include/c++/5/bits/stl_algobase.h ****    *
 490:/usr/include/c++/5/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 491:/usr/include/c++/5/bits/stl_algobase.h ****    *  within [first,last).
 492:/usr/include/c++/5/bits/stl_algobase.h ****   */
 493:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 494:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 495:/usr/include/c++/5/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 496:/usr/include/c++/5/bits/stl_algobase.h ****     {
 497:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 498:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 499:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 500:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 501:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 502:/usr/include/c++/5/bits/stl_algobase.h **** 
 503:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 504:/usr/include/c++/5/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 505:/usr/include/c++/5/bits/stl_algobase.h ****     }
 506:/usr/include/c++/5/bits/stl_algobase.h **** 
 507:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 508:/usr/include/c++/5/bits/stl_algobase.h **** #else
 509:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 510:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 511:/usr/include/c++/5/bits/stl_algobase.h **** 
 512:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool, bool, typename>
 513:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward
 514:/usr/include/c++/5/bits/stl_algobase.h ****     {
 515:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 516:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 517:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 518:/usr/include/c++/5/bits/stl_algobase.h ****         {
 519:/usr/include/c++/5/bits/stl_algobase.h **** 	  while (__first != __last)
 520:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 521:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 522:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 523:/usr/include/c++/5/bits/stl_algobase.h ****     };
 524:/usr/include/c++/5/bits/stl_algobase.h **** 
 525:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 526:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Category>
 527:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 528:/usr/include/c++/5/bits/stl_algobase.h ****     {
 529:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 530:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 531:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 532:/usr/include/c++/5/bits/stl_algobase.h ****         {
 533:/usr/include/c++/5/bits/stl_algobase.h **** 	  while (__first != __last)
 534:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 535:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 536:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 537:/usr/include/c++/5/bits/stl_algobase.h ****     };
 538:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 539:/usr/include/c++/5/bits/stl_algobase.h **** 
 540:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 541:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 542:/usr/include/c++/5/bits/stl_algobase.h ****     {
 543:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 544:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 545:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 546:/usr/include/c++/5/bits/stl_algobase.h ****         {
 547:/usr/include/c++/5/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 549:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 550:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 551:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 552:/usr/include/c++/5/bits/stl_algobase.h ****     };
 553:/usr/include/c++/5/bits/stl_algobase.h **** 
 554:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 555:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 556:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 557:/usr/include/c++/5/bits/stl_algobase.h ****     {
 558:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 559:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 560:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 561:/usr/include/c++/5/bits/stl_algobase.h ****         {
 562:/usr/include/c++/5/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 563:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 564:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 565:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 566:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 567:/usr/include/c++/5/bits/stl_algobase.h ****     };
 568:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 569:/usr/include/c++/5/bits/stl_algobase.h **** 
 570:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove>
 571:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 572:/usr/include/c++/5/bits/stl_algobase.h ****     {
 573:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _Tp>
 574:/usr/include/c++/5/bits/stl_algobase.h ****         static _Tp*
 575:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 576:/usr/include/c++/5/bits/stl_algobase.h ****         {
 577:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 578:/usr/include/c++/5/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 579:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 580:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 581:/usr/include/c++/5/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 582:/usr/include/c++/5/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 583:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 584:/usr/include/c++/5/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 585:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 586:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 587:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result - _Num;
 588:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 589:/usr/include/c++/5/bits/stl_algobase.h ****     };
 590:/usr/include/c++/5/bits/stl_algobase.h **** 
 591:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 592:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 593:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 594:/usr/include/c++/5/bits/stl_algobase.h ****     {
 595:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 596:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 597:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 598:/usr/include/c++/5/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 599:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 600:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 601:/usr/include/c++/5/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 602:/usr/include/c++/5/bits/stl_algobase.h **** 
 603:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 604:/usr/include/c++/5/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 605:/usr/include/c++/5/bits/stl_algobase.h **** 								 __last,
 606:/usr/include/c++/5/bits/stl_algobase.h **** 								 __result);
 607:/usr/include/c++/5/bits/stl_algobase.h ****     }
 608:/usr/include/c++/5/bits/stl_algobase.h **** 
 609:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 610:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 611:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 612:/usr/include/c++/5/bits/stl_algobase.h ****     {
 613:/usr/include/c++/5/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 614:/usr/include/c++/5/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 615:/usr/include/c++/5/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 616:/usr/include/c++/5/bits/stl_algobase.h ****     }
 617:/usr/include/c++/5/bits/stl_algobase.h **** 
 618:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 619:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 620:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 621:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 622:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 623:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 624:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result - (first - last)
 625:/usr/include/c++/5/bits/stl_algobase.h ****    *
 626:/usr/include/c++/5/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 627:/usr/include/c++/5/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 628:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 629:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 630:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 631:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 632:/usr/include/c++/5/bits/stl_algobase.h ****    *
 633:/usr/include/c++/5/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 634:/usr/include/c++/5/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 635:/usr/include/c++/5/bits/stl_algobase.h ****   */
 636:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 637:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 638:/usr/include/c++/5/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 639:/usr/include/c++/5/bits/stl_algobase.h ****     {
 640:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 641:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 642:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 643:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 644:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 645:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 646:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 647:/usr/include/c++/5/bits/stl_algobase.h **** 
 648:/usr/include/c++/5/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 649:/usr/include/c++/5/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 650:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 651:/usr/include/c++/5/bits/stl_algobase.h ****     }
 652:/usr/include/c++/5/bits/stl_algobase.h **** 
 653:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 654:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 655:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 656:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 657:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 658:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 659:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 660:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result - (first - last)
 661:/usr/include/c++/5/bits/stl_algobase.h ****    *
 662:/usr/include/c++/5/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 663:/usr/include/c++/5/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 664:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 665:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 666:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 667:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 668:/usr/include/c++/5/bits/stl_algobase.h ****    *
 669:/usr/include/c++/5/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 670:/usr/include/c++/5/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 671:/usr/include/c++/5/bits/stl_algobase.h ****   */
 672:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 673:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 674:/usr/include/c++/5/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 675:/usr/include/c++/5/bits/stl_algobase.h ****     {
 676:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 677:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 678:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 679:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 680:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 681:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 682:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 683:/usr/include/c++/5/bits/stl_algobase.h **** 
 684:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 685:/usr/include/c++/5/bits/stl_algobase.h **** 						std::__miter_base(__last),
 686:/usr/include/c++/5/bits/stl_algobase.h **** 						__result);
 687:/usr/include/c++/5/bits/stl_algobase.h ****     }
 688:/usr/include/c++/5/bits/stl_algobase.h **** 
 689:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 690:/usr/include/c++/5/bits/stl_algobase.h **** #else
 691:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 692:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 693:/usr/include/c++/5/bits/stl_algobase.h **** 
 694:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 695:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 696:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 697:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 698:/usr/include/c++/5/bits/stl_algobase.h ****  	     const _Tp& __value)
 699:/usr/include/c++/5/bits/stl_algobase.h ****     {
 700:/usr/include/c++/5/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 701:/usr/include/c++/5/bits/stl_algobase.h **** 	*__first = __value;
 702:/usr/include/c++/5/bits/stl_algobase.h ****     }
 703:/usr/include/c++/5/bits/stl_algobase.h ****     
 704:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 705:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 706:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 707:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 708:/usr/include/c++/5/bits/stl_algobase.h **** 	     const _Tp& __value)
 709:/usr/include/c++/5/bits/stl_algobase.h ****     {
 710:/usr/include/c++/5/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 711:/usr/include/c++/5/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 712:/usr/include/c++/5/bits/stl_algobase.h **** 	*__first = __tmp;
 713:/usr/include/c++/5/bits/stl_algobase.h ****     }
 714:/usr/include/c++/5/bits/stl_algobase.h **** 
 715:/usr/include/c++/5/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 716:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 717:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 718:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 719:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 720:/usr/include/c++/5/bits/stl_algobase.h ****     {
 721:/usr/include/c++/5/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 722:/usr/include/c++/5/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 723:/usr/include/c++/5/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 724:/usr/include/c++/5/bits/stl_algobase.h ****     }
 725:/usr/include/c++/5/bits/stl_algobase.h **** 
 726:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 727:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 728:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 729:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 730:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 731:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 732:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   Nothing.
 733:/usr/include/c++/5/bits/stl_algobase.h ****    *
 734:/usr/include/c++/5/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 735:/usr/include/c++/5/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 736:/usr/include/c++/5/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 737:/usr/include/c++/5/bits/stl_algobase.h ****   */
 738:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 739:/usr/include/c++/5/bits/stl_algobase.h ****     inline void
 740:/usr/include/c++/5/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 741:/usr/include/c++/5/bits/stl_algobase.h ****     {
 742:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 743:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 744:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator>)
 745:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 746:/usr/include/c++/5/bits/stl_algobase.h **** 
 747:/usr/include/c++/5/bits/stl_algobase.h ****       std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
 748:/usr/include/c++/5/bits/stl_algobase.h **** 		    __value);
 749:/usr/include/c++/5/bits/stl_algobase.h ****     }
 750:/usr/include/c++/5/bits/stl_algobase.h **** 
 751:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 752:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 753:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
 754:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 755:/usr/include/c++/5/bits/stl_algobase.h ****     {
 756:/usr/include/c++/5/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 757:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 758:/usr/include/c++/5/bits/stl_algobase.h **** 	*__first = __value;
 759:/usr/include/c++/5/bits/stl_algobase.h ****       return __first;
 760:/usr/include/c++/5/bits/stl_algobase.h ****     }
 761:/usr/include/c++/5/bits/stl_algobase.h **** 
 762:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 763:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 764:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
 765:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 766:/usr/include/c++/5/bits/stl_algobase.h ****     {
 767:/usr/include/c++/5/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 768:/usr/include/c++/5/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 769:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 770:/usr/include/c++/5/bits/stl_algobase.h **** 	*__first = __tmp;
 771:/usr/include/c++/5/bits/stl_algobase.h ****       return __first;
 772:/usr/include/c++/5/bits/stl_algobase.h ****     }
 773:/usr/include/c++/5/bits/stl_algobase.h **** 
 774:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Size, typename _Tp>
 775:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 776:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
 777:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
 778:/usr/include/c++/5/bits/stl_algobase.h ****     {
 779:/usr/include/c++/5/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __c);
 780:/usr/include/c++/5/bits/stl_algobase.h ****       return __first + __n;
 781:/usr/include/c++/5/bits/stl_algobase.h ****     }
 782:/usr/include/c++/5/bits/stl_algobase.h **** 
 783:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 784:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
 785:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 786:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An output iterator.
 787:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __n      The count of copies to perform.
 788:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 789:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The iterator at first+n.
 790:/usr/include/c++/5/bits/stl_algobase.h ****    *
 791:/usr/include/c++/5/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 792:/usr/include/c++/5/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 793:/usr/include/c++/5/bits/stl_algobase.h ****    *  to @c memset or @ wmemset.
 794:/usr/include/c++/5/bits/stl_algobase.h ****    *
 795:/usr/include/c++/5/bits/stl_algobase.h ****    *  _GLIBCXX_RESOLVE_LIB_DEFECTS
 796:/usr/include/c++/5/bits/stl_algobase.h ****    *  DR 865. More algorithms that throw away information
 797:/usr/include/c++/5/bits/stl_algobase.h ****   */
 798:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
 799:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 800:/usr/include/c++/5/bits/stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
 7335              		.loc 13 800 0
 7336              		.cfi_startproc
 7337 0000 55       		pushq	%rbp
 7338              		.cfi_def_cfa_offset 16
 7339              		.cfi_offset 6, -16
 7340 0001 4889E5   		movq	%rsp, %rbp
 7341              		.cfi_def_cfa_register 6
 7342 0004 4883EC20 		subq	$32, %rsp
 7343 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7344 000c 488975F0 		movq	%rsi, -16(%rbp)
 7345 0010 488955E8 		movq	%rdx, -24(%rbp)
 801:/usr/include/c++/5/bits/stl_algobase.h ****     {
 802:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 803:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
 804:/usr/include/c++/5/bits/stl_algobase.h **** 
 805:/usr/include/c++/5/bits/stl_algobase.h ****       return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
 7346              		.loc 13 805 0
 7347 0014 488B45F8 		movq	-8(%rbp), %rax
 7348 0018 4889C7   		movq	%rax, %rdi
 7349 001b E8000000 		call	_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_
 7349      00
 7350 0020 4889C1   		movq	%rax, %rcx
 7351 0023 488B55E8 		movq	-24(%rbp), %rdx
 7352 0027 488B45F0 		movq	-16(%rbp), %rax
 7353 002b 4889C6   		movq	%rax, %rsi
 7354 002e 4889CF   		movq	%rcx, %rdi
 7355 0031 E8000000 		call	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_
 7355      00
 806:/usr/include/c++/5/bits/stl_algobase.h ****     }
 7356              		.loc 13 806 0
 7357 0036 C9       		leave
 7358              		.cfi_def_cfa 7, 8
 7359 0037 C3       		ret
 7360              		.cfi_endproc
 7361              	.LFE1577:
 7363              		.section	.text._ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_all
 7364              		.align 2
 7365              		.weak	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
 7367              	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv:
 7368              	.LFB1578:
 111:/usr/include/c++/5/ext/new_allocator.h **** 
 112:/usr/include/c++/5/ext/new_allocator.h ****       size_type
 113:/usr/include/c++/5/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 7369              		.loc 9 113 0
 7370              		.cfi_startproc
 7371 0000 55       		pushq	%rbp
 7372              		.cfi_def_cfa_offset 16
 7373              		.cfi_offset 6, -16
 7374 0001 4889E5   		movq	%rsp, %rbp
 7375              		.cfi_def_cfa_register 6
 7376 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 7377              		.loc 9 114 0
 7378 0008 48B8FFFF 		movabsq	$4611686018427387903, %rax
 7378      FFFFFFFF 
 7378      FF3F
 7379 0012 5D       		popq	%rbp
 7380              		.cfi_def_cfa 7, 8
 7381 0013 C3       		ret
 7382              		.cfi_endproc
 7383              	.LFE1578:
 7385              		.section	.text._ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_,"axG",@progbits,_ZSt1
 7386              		.weak	_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_
 7388              	_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_:
 7389              	.LFB1579:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 7390              		.loc 13 282 0
 7391              		.cfi_startproc
 7392 0000 55       		pushq	%rbp
 7393              		.cfi_def_cfa_offset 16
 7394              		.cfi_offset 6, -16
 7395 0001 4889E5   		movq	%rsp, %rbp
 7396              		.cfi_def_cfa_register 6
 7397 0004 4883EC10 		subq	$16, %rsp
 7398 0008 48897DF8 		movq	%rdi, -8(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 7399              		.loc 13 283 0
 7400 000c 488B45F8 		movq	-8(%rbp), %rax
 7401 0010 4889C7   		movq	%rax, %rdi
 7402 0013 E8000000 		call	_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_
 7402      00
 7403 0018 C9       		leave
 7404              		.cfi_def_cfa 7, 8
 7405 0019 C3       		ret
 7406              		.cfi_endproc
 7407              	.LFE1579:
 7409              		.section	.text._ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6
 7410              		.weak	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6
 7412              	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS
 7413              	.LFB1580:
 765:/usr/include/c++/5/bits/stl_algobase.h ****     {
 7414              		.loc 13 765 0
 7415              		.cfi_startproc
 7416 0000 55       		pushq	%rbp
 7417              		.cfi_def_cfa_offset 16
 7418              		.cfi_offset 6, -16
 7419 0001 4889E5   		movq	%rsp, %rbp
 7420              		.cfi_def_cfa_register 6
 7421 0004 48897DE8 		movq	%rdi, -24(%rbp)
 7422 0008 488975E0 		movq	%rsi, -32(%rbp)
 7423 000c 488955D8 		movq	%rdx, -40(%rbp)
 767:/usr/include/c++/5/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 7424              		.loc 13 767 0
 7425 0010 488B45D8 		movq	-40(%rbp), %rax
 7426 0014 F30F1000 		movss	(%rax), %xmm0
 7427 0018 F30F1145 		movss	%xmm0, -12(%rbp)
 7427      F4
 7428              	.LBB114:
 768:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 7429              		.loc 13 768 0
 7430 001d 488B45E0 		movq	-32(%rbp), %rax
 7431 0021 488945F8 		movq	%rax, -8(%rbp)
 7432              	.L406:
 768:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 7433              		.loc 13 768 0 is_stmt 0 discriminator 3
 7434 0025 48837DF8 		cmpq	$0, -8(%rbp)
 7434      00
 7435 002a 7419     		je	.L405
 770:/usr/include/c++/5/bits/stl_algobase.h ****       return __first;
 7436              		.loc 13 770 0 is_stmt 1 discriminator 2
 7437 002c 488B45E8 		movq	-24(%rbp), %rax
 7438 0030 F30F1045 		movss	-12(%rbp), %xmm0
 7438      F4
 7439 0035 F30F1100 		movss	%xmm0, (%rax)
 768:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 7440              		.loc 13 768 0 discriminator 2
 7441 0039 48836DF8 		subq	$1, -8(%rbp)
 7441      01
 7442 003e 488345E8 		addq	$4, -24(%rbp)
 7442      04
 7443 0043 EBE0     		jmp	.L406
 7444              	.L405:
 7445              	.LBE114:
 771:/usr/include/c++/5/bits/stl_algobase.h ****     }
 7446              		.loc 13 771 0
 7447 0045 488B45E8 		movq	-24(%rbp), %rax
 772:/usr/include/c++/5/bits/stl_algobase.h **** 
 7448              		.loc 13 772 0
 7449 0049 5D       		popq	%rbp
 7450              		.cfi_def_cfa 7, 8
 7451 004a C3       		ret
 7452              		.cfi_endproc
 7453              	.LFE1580:
 7455              		.section	.text._ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_,"axG",@progbits,_ZNSt10_Iter_baseIPfLb0EE7_S_
 7456              		.weak	_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_
 7458              	_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_:
 7459              	.LFB1581:
 7460              		.file 14 "/usr/include/c++/5/bits/stl_iterator_base_types.h"
   1:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Types used in iterator implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
   3:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_iterator_base_types.h **** //
   5:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  11:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  16:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  20:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  25:/usr/include/c++/5/bits/stl_iterator_base_types.h **** /*
  26:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  27:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  30:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  38:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  39:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  42:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  */
  50:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  51:/usr/include/c++/5/bits/stl_iterator_base_types.h **** /** @file bits/stl_iterator_base_types.h
  52:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  55:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  This file contains all of the general iterator-related utility types,
  56:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  such as iterator_traits and struct iterator.
  57:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  */
  58:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  59:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #ifndef _STL_ITERATOR_BASE_TYPES_H
  60:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #define _STL_ITERATOR_BASE_TYPES_H 1
  61:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  62:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #pragma GCC system_header
  63:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  64:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #include <bits/c++config.h>
  65:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  66:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
  67:/usr/include/c++/5/bits/stl_iterator_base_types.h **** # include <type_traits>  // For __void_t, is_convertible
  68:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #endif
  69:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  70:/usr/include/c++/5/bits/stl_iterator_base_types.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:/usr/include/c++/5/bits/stl_iterator_base_types.h **** {
  72:/usr/include/c++/5/bits/stl_iterator_base_types.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  74:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
  75:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @defgroup iterators Iterators
  76:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  Abstractions for uniform iterating through various underlying types.
  77:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
  78:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@{ 
  79:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  80:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
  81:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @defgroup iterator_tags Iterator Tags
  82:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  These are empty types, used to distinguish different iterators.  The
  83:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  distinction is not made by what they contain, but simply by what they
  84:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  are.  Different underlying algorithms can then be used based on the
  85:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  different operations supported by different iterator types.
  86:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
  87:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@{ 
  88:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   ///  Marking input iterators.
  89:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct input_iterator_tag { };
  90:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  91:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   ///  Marking output iterators.
  92:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct output_iterator_tag { };
  93:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  94:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Forward iterators support a superset of input iterator operations.
  95:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct forward_iterator_tag : public input_iterator_tag { };
  96:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  97:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Bidirectional iterators support a superset of forward iterator
  98:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// operations.
  99:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct bidirectional_iterator_tag : public forward_iterator_tag { };
 100:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 101:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Random-access iterators support a superset of bidirectional
 102:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// iterator operations.
 103:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct random_access_iterator_tag : public bidirectional_iterator_tag { };
 104:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@}
 105:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 106:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 107:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @brief  Common %iterator class.
 108:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 109:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  %Iterator classes
 110:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  can inherit from this class to save some work.  The typedefs are then
 111:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  used in specializations and overloading.
 112:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 113:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  In particular, there are no default implementations of requirements
 114:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  such as @c operator++ and the like.  (How could there be?)
 115:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 116:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
 117:/usr/include/c++/5/bits/stl_iterator_base_types.h ****            typename _Pointer = _Tp*, typename _Reference = _Tp&>
 118:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator
 119:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 120:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// One of the @link iterator_tags tag types@endlink.
 121:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Category  iterator_category;
 122:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// The type "pointed to" by the iterator.
 123:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp        value_type;
 124:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// Distance between iterators is represented as this type.
 125:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Distance  difference_type;
 126:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// This type represents a pointer-to-value_type.
 127:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Pointer   pointer;
 128:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// This type represents a reference-to-value_type.
 129:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Reference reference;
 130:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 131:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 132:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 133:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @brief  Traits class for iterators.
 134:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 135:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  The general
 136:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  version simply @a forwards the nested typedefs from the Iterator
 137:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  argument.  Specialized versions for pointers and pointers-to-const
 138:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  provide tighter, more correct semantics.
 139:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 140:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // 2408. SFINAE-friendly common_type/iterator_traits is missing in C++14
 143:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator, typename = __void_t<>>
 144:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct __iterator_traits { };
 145:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 146:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 147:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct __iterator_traits<_Iterator,
 148:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 			     __void_t<typename _Iterator::iterator_category,
 149:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::value_type,
 150:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::difference_type,
 151:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::pointer,
 152:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::reference>>
 153:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 154:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 155:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 156:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 157:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 158:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 159:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 160:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 161:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 162:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits
 163:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     : public __iterator_traits<_Iterator> { };
 164:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #else
 165:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 166:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits
 167:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 168:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 169:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 170:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 171:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 172:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 173:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 174:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #endif
 175:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 176:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Partial specialization for pointer types.
 177:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 178:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits<_Tp*>
 179:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 180:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 181:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 182:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 183:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp*                        pointer;
 184:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp&                        reference;
 185:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 186:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 187:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Partial specialization for const pointer types.
 188:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 189:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits<const _Tp*>
 190:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 191:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 192:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 193:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 194:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef const _Tp*                  pointer;
 195:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef const _Tp&                  reference;
 196:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 197:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 198:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 199:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This function is not a part of the C++ standard but is syntactic
 200:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  sugar for internal library use only.
 201:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 202:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iter>
 203:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     inline typename iterator_traits<_Iter>::iterator_category
 204:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     __iterator_category(const _Iter&)
 205:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     { return typename iterator_traits<_Iter>::iterator_category(); }
 206:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 207:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@}
 208:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 209:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // If _Iterator has a base returns it otherwise _Iterator is returned
 210:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // untouched
 211:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator, bool _HasBase>
 212:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct _Iter_base
 213:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 214:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Iterator iterator_type;
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       static iterator_type _S_base(_Iterator __it)
 7461              		.loc 14 215 0
 7462              		.cfi_startproc
 7463 0000 55       		pushq	%rbp
 7464              		.cfi_def_cfa_offset 16
 7465              		.cfi_offset 6, -16
 7466 0001 4889E5   		movq	%rsp, %rbp
 7467              		.cfi_def_cfa_register 6
 7468 0004 48897DF8 		movq	%rdi, -8(%rbp)
 216:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 7469              		.loc 14 216 0
 7470 0008 488B45F8 		movq	-8(%rbp), %rax
 7471 000c 5D       		popq	%rbp
 7472              		.cfi_def_cfa 7, 8
 7473 000d C3       		ret
 7474              		.cfi_endproc
 7475              	.LFE1581:
 7477              		.section	.rodata
 7478 061e 0000     		.align 8
 7481              	_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 7482 0620 00000000 		.quad	0
 7482      00000000 
 7483 0628 00000000 		.quad	_ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
 7483      00000000 
 7484 0630 00000000 		.quad	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev
 7484      00000000 
 7485 0638 00000000 		.quad	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev
 7485      00000000 
 7486 0640 00000000 		.quad	_ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv
 7486      00000000 
 7487              		.text
 7488 21ab 90       		.align 2
 7490              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD2Ev:
 7491              	.LFB1583:
 151:TestUnitTest++.cpp **** {
 7492              		.loc 4 151 0
 7493              		.cfi_startproc
 7494 21ac 55       		pushq	%rbp
 7495              		.cfi_def_cfa_offset 16
 7496              		.cfi_offset 6, -16
 7497 21ad 4889E5   		movq	%rsp, %rbp
 7498              		.cfi_def_cfa_register 6
 7499 21b0 4883EC10 		subq	$16, %rsp
 7500 21b4 48897DF8 		movq	%rdi, -8(%rbp)
 7501              	.LBB115:
 151:TestUnitTest++.cpp **** {
 7502              		.loc 4 151 0
 7503 21b8 BA000000 		movl	$_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE+16, %edx
 7503      00
 7504 21bd 488B45F8 		movq	-8(%rbp), %rax
 7505 21c1 488910   		movq	%rdx, (%rax)
 7506 21c4 488B45F8 		movq	-8(%rbp), %rax
 7507 21c8 4889C7   		movq	%rax, %rdi
 7508 21cb E8000000 		call	_ZN8UnitTest4TestD2Ev
 7508      00
 7509              	.LBE115:
 7510 21d0 B8000000 		movl	$0, %eax
 7510      00
 7511 21d5 85C0     		testl	%eax, %eax
 7512 21d7 740C     		je	.L410
 151:TestUnitTest++.cpp **** {
 7513              		.loc 4 151 0 is_stmt 0 discriminator 4
 7514 21d9 488B45F8 		movq	-8(%rbp), %rax
 7515 21dd 4889C7   		movq	%rax, %rdi
 7516 21e0 E8000000 		call	_ZdlPv
 7516      00
 7517              	.L410:
 151:TestUnitTest++.cpp **** {
 7518              		.loc 4 151 0
 7519 21e5 C9       		leave
 7520              		.cfi_def_cfa 7, 8
 7521 21e6 C3       		ret
 7522              		.cfi_endproc
 7523              	.LFE1583:
 7525              		.set	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev,_ZN12_GLOBAL__N_137TestCanCallCH
 7526 21e7 90       		.align 2
 7528              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev:
 7529              	.LFB1585:
 151:TestUnitTest++.cpp **** {
 7530              		.loc 4 151 0 is_stmt 1
 7531              		.cfi_startproc
 7532 21e8 55       		pushq	%rbp
 7533              		.cfi_def_cfa_offset 16
 7534              		.cfi_offset 6, -16
 7535 21e9 4889E5   		movq	%rsp, %rbp
 7536              		.cfi_def_cfa_register 6
 7537 21ec 4883EC10 		subq	$16, %rsp
 7538 21f0 48897DF8 		movq	%rdi, -8(%rbp)
 151:TestUnitTest++.cpp **** {
 7539              		.loc 4 151 0
 7540 21f4 488B45F8 		movq	-8(%rbp), %rax
 7541 21f8 4889C7   		movq	%rax, %rdi
 7542 21fb E8ACFFFF 		call	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev
 7542      FF
 7543 2200 488B45F8 		movq	-8(%rbp), %rax
 7544 2204 4889C7   		movq	%rax, %rdi
 7545 2207 E8000000 		call	_ZdlPv
 7545      00
 7546 220c C9       		leave
 7547              		.cfi_def_cfa 7, 8
 7548 220d C3       		ret
 7549              		.cfi_endproc
 7550              	.LFE1585:
 7552              		.section	.rodata
 7553              		.align 8
 7556              	_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 7557 0648 00000000 		.quad	0
 7557      00000000 
 7558 0650 00000000 		.quad	_ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
 7558      00000000 
 7559 0658 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev
 7559      00000000 
 7560 0660 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev
 7560      00000000 
 7561 0668 00000000 		.quad	_ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv
 7561      00000000 
 7562              		.text
 7563              		.align 2
 7565              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD2Ev:
 7566              	.LFB1587:
 141:TestUnitTest++.cpp **** {
 7567              		.loc 4 141 0
 7568              		.cfi_startproc
 7569 220e 55       		pushq	%rbp
 7570              		.cfi_def_cfa_offset 16
 7571              		.cfi_offset 6, -16
 7572 220f 4889E5   		movq	%rsp, %rbp
 7573              		.cfi_def_cfa_register 6
 7574 2212 4883EC10 		subq	$16, %rsp
 7575 2216 48897DF8 		movq	%rdi, -8(%rbp)
 7576              	.LBB116:
 141:TestUnitTest++.cpp **** {
 7577              		.loc 4 141 0
 7578 221a BA000000 		movl	$_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE+16, %edx
 7578      00
 7579 221f 488B45F8 		movq	-8(%rbp), %rax
 7580 2223 488910   		movq	%rdx, (%rax)
 7581 2226 488B45F8 		movq	-8(%rbp), %rax
 7582 222a 4889C7   		movq	%rax, %rdi
 7583 222d E8000000 		call	_ZN8UnitTest4TestD2Ev
 7583      00
 7584              	.LBE116:
 7585 2232 B8000000 		movl	$0, %eax
 7585      00
 7586 2237 85C0     		testl	%eax, %eax
 7587 2239 740C     		je	.L413
 141:TestUnitTest++.cpp **** {
 7588              		.loc 4 141 0 is_stmt 0 discriminator 4
 7589 223b 488B45F8 		movq	-8(%rbp), %rax
 7590 223f 4889C7   		movq	%rax, %rdi
 7591 2242 E8000000 		call	_ZdlPv
 7591      00
 7592              	.L413:
 141:TestUnitTest++.cpp **** {
 7593              		.loc 4 141 0
 7594 2247 C9       		leave
 7595              		.cfi_def_cfa 7, 8
 7596 2248 C3       		ret
 7597              		.cfi_endproc
 7598              	.LFE1587:
 7600              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev,_ZN12_GLOBAL__N_143TestSim
 7601 2249 90       		.align 2
 7603              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev:
 7604              	.LFB1589:
 141:TestUnitTest++.cpp **** {
 7605              		.loc 4 141 0 is_stmt 1
 7606              		.cfi_startproc
 7607 224a 55       		pushq	%rbp
 7608              		.cfi_def_cfa_offset 16
 7609              		.cfi_offset 6, -16
 7610 224b 4889E5   		movq	%rsp, %rbp
 7611              		.cfi_def_cfa_register 6
 7612 224e 4883EC10 		subq	$16, %rsp
 7613 2252 48897DF8 		movq	%rdi, -8(%rbp)
 141:TestUnitTest++.cpp **** {
 7614              		.loc 4 141 0
 7615 2256 488B45F8 		movq	-8(%rbp), %rax
 7616 225a 4889C7   		movq	%rax, %rdi
 7617 225d E8ACFFFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev
 7617      FF
 7618 2262 488B45F8 		movq	-8(%rbp), %rax
 7619 2266 4889C7   		movq	%rax, %rdi
 7620 2269 E8000000 		call	_ZdlPv
 7620      00
 7621 226e C9       		leave
 7622              		.cfi_def_cfa 7, 8
 7623 226f C3       		ret
 7624              		.cfi_endproc
 7625              	.LFE1589:
 7627              		.section	.rodata
 7628              		.align 8
 7631              	_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 7632 0670 00000000 		.quad	0
 7632      00000000 
 7633 0678 00000000 		.quad	_ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
 7633      00000000 
 7634 0680 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev
 7634      00000000 
 7635 0688 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev
 7635      00000000 
 7636 0690 00000000 		.quad	_ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv
 7636      00000000 
 7637              		.text
 7638              		.align 2
 7640              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD2Ev:
 7641              	.LFB1591:
 136:TestUnitTest++.cpp **** {
 7642              		.loc 4 136 0
 7643              		.cfi_startproc
 7644 2270 55       		pushq	%rbp
 7645              		.cfi_def_cfa_offset 16
 7646              		.cfi_offset 6, -16
 7647 2271 4889E5   		movq	%rsp, %rbp
 7648              		.cfi_def_cfa_register 6
 7649 2274 4883EC10 		subq	$16, %rsp
 7650 2278 48897DF8 		movq	%rdi, -8(%rbp)
 7651              	.LBB117:
 136:TestUnitTest++.cpp **** {
 7652              		.loc 4 136 0
 7653 227c BA000000 		movl	$_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE+16, %edx
 7653      00
 7654 2281 488B45F8 		movq	-8(%rbp), %rax
 7655 2285 488910   		movq	%rdx, (%rax)
 7656 2288 488B45F8 		movq	-8(%rbp), %rax
 7657 228c 4889C7   		movq	%rax, %rdi
 7658 228f E8000000 		call	_ZN8UnitTest4TestD2Ev
 7658      00
 7659              	.LBE117:
 7660 2294 B8000000 		movl	$0, %eax
 7660      00
 7661 2299 85C0     		testl	%eax, %eax
 7662 229b 740C     		je	.L416
 136:TestUnitTest++.cpp **** {
 7663              		.loc 4 136 0 is_stmt 0 discriminator 4
 7664 229d 488B45F8 		movq	-8(%rbp), %rax
 7665 22a1 4889C7   		movq	%rax, %rdi
 7666 22a4 E8000000 		call	_ZdlPv
 7666      00
 7667              	.L416:
 136:TestUnitTest++.cpp **** {
 7668              		.loc 4 136 0
 7669 22a9 C9       		leave
 7670              		.cfi_def_cfa 7, 8
 7671 22aa C3       		ret
 7672              		.cfi_endproc
 7673              	.LFE1591:
 7675              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev,_ZN12_GLOBAL__N_143TestSim
 7676 22ab 90       		.align 2
 7678              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev:
 7679              	.LFB1593:
 136:TestUnitTest++.cpp **** {
 7680              		.loc 4 136 0 is_stmt 1
 7681              		.cfi_startproc
 7682 22ac 55       		pushq	%rbp
 7683              		.cfi_def_cfa_offset 16
 7684              		.cfi_offset 6, -16
 7685 22ad 4889E5   		movq	%rsp, %rbp
 7686              		.cfi_def_cfa_register 6
 7687 22b0 4883EC10 		subq	$16, %rsp
 7688 22b4 48897DF8 		movq	%rdi, -8(%rbp)
 136:TestUnitTest++.cpp **** {
 7689              		.loc 4 136 0
 7690 22b8 488B45F8 		movq	-8(%rbp), %rax
 7691 22bc 4889C7   		movq	%rax, %rdi
 7692 22bf E8ACFFFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev
 7692      FF
 7693 22c4 488B45F8 		movq	-8(%rbp), %rax
 7694 22c8 4889C7   		movq	%rax, %rdi
 7695 22cb E8000000 		call	_ZdlPv
 7695      00
 7696 22d0 C9       		leave
 7697              		.cfi_def_cfa 7, 8
 7698 22d1 C3       		ret
 7699              		.cfi_endproc
 7700              	.LFE1593:
 7702              		.section	.rodata
 7703              		.align 8
 7706              	_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 7707 0698 00000000 		.quad	0
 7707      00000000 
 7708 06a0 00000000 		.quad	_ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
 7708      00000000 
 7709 06a8 00000000 		.quad	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev
 7709      00000000 
 7710 06b0 00000000 		.quad	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev
 7710      00000000 
 7711 06b8 00000000 		.quad	_ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv
 7711      00000000 
 7712              		.text
 7713              		.align 2
 7715              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD2Ev:
 7716              	.LFB1595:
  97:TestUnitTest++.cpp **** {
 7717              		.loc 4 97 0
 7718              		.cfi_startproc
 7719 22d2 55       		pushq	%rbp
 7720              		.cfi_def_cfa_offset 16
 7721              		.cfi_offset 6, -16
 7722 22d3 4889E5   		movq	%rsp, %rbp
 7723              		.cfi_def_cfa_register 6
 7724 22d6 4883EC10 		subq	$16, %rsp
 7725 22da 48897DF8 		movq	%rdi, -8(%rbp)
 7726              	.LBB118:
  97:TestUnitTest++.cpp **** {
 7727              		.loc 4 97 0
 7728 22de BA000000 		movl	$_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE+16, %edx
 7728      00
 7729 22e3 488B45F8 		movq	-8(%rbp), %rax
 7730 22e7 488910   		movq	%rdx, (%rax)
 7731 22ea 488B45F8 		movq	-8(%rbp), %rax
 7732 22ee 4889C7   		movq	%rax, %rdi
 7733 22f1 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7733      00
 7734              	.LBE118:
 7735 22f6 B8000000 		movl	$0, %eax
 7735      00
 7736 22fb 85C0     		testl	%eax, %eax
 7737 22fd 740C     		je	.L419
  97:TestUnitTest++.cpp **** {
 7738              		.loc 4 97 0 is_stmt 0 discriminator 4
 7739 22ff 488B45F8 		movq	-8(%rbp), %rax
 7740 2303 4889C7   		movq	%rax, %rdi
 7741 2306 E8000000 		call	_ZdlPv
 7741      00
 7742              	.L419:
  97:TestUnitTest++.cpp **** {
 7743              		.loc 4 97 0
 7744 230b C9       		leave
 7745              		.cfi_def_cfa 7, 8
 7746 230c C3       		ret
 7747              		.cfi_endproc
 7748              	.LFE1595:
 7750              		.set	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev,_ZN12_GLOBAL__N_140TestCheckT
 7751 230d 90       		.align 2
 7753              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev:
 7754              	.LFB1597:
  97:TestUnitTest++.cpp **** {
 7755              		.loc 4 97 0 is_stmt 1
 7756              		.cfi_startproc
 7757 230e 55       		pushq	%rbp
 7758              		.cfi_def_cfa_offset 16
 7759              		.cfi_offset 6, -16
 7760 230f 4889E5   		movq	%rsp, %rbp
 7761              		.cfi_def_cfa_register 6
 7762 2312 4883EC10 		subq	$16, %rsp
 7763 2316 48897DF8 		movq	%rdi, -8(%rbp)
  97:TestUnitTest++.cpp **** {
 7764              		.loc 4 97 0
 7765 231a 488B45F8 		movq	-8(%rbp), %rax
 7766 231e 4889C7   		movq	%rax, %rdi
 7767 2321 E8ACFFFF 		call	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev
 7767      FF
 7768 2326 488B45F8 		movq	-8(%rbp), %rax
 7769 232a 4889C7   		movq	%rax, %rdi
 7770 232d E8000000 		call	_ZdlPv
 7770      00
 7771 2332 C9       		leave
 7772              		.cfi_def_cfa 7, 8
 7773 2333 C3       		ret
 7774              		.cfi_endproc
 7775              	.LFE1597:
 7777              		.section	.rodata
 7778              		.align 8
 7781              	_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 7782 06c0 00000000 		.quad	0
 7782      00000000 
 7783 06c8 00000000 		.quad	_ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
 7783      00000000 
 7784 06d0 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1E
 7784      00000000 
 7785 06d8 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0E
 7785      00000000 
 7786 06e0 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7R
 7786      00000000 
 7787              		.text
 7788              		.align 2
 7790              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev:
 7791              	.LFB1599:
  99:TestUnitTest++.cpp ****     {
 7792              		.loc 4 99 0
 7793              		.cfi_startproc
 7794 2334 55       		pushq	%rbp
 7795              		.cfi_def_cfa_offset 16
 7796              		.cfi_offset 6, -16
 7797 2335 4889E5   		movq	%rsp, %rbp
 7798              		.cfi_def_cfa_register 6
 7799 2338 4883EC10 		subq	$16, %rsp
 7800 233c 48897DF8 		movq	%rdi, -8(%rbp)
 7801              	.LBB119:
  99:TestUnitTest++.cpp ****     {
 7802              		.loc 4 99 0
 7803 2340 BA000000 		movl	$_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest+1
 7803      00
 7804 2345 488B45F8 		movq	-8(%rbp), %rax
 7805 2349 488910   		movq	%rdx, (%rax)
 7806 234c 488B45F8 		movq	-8(%rbp), %rax
 7807 2350 4889C7   		movq	%rax, %rdi
 7808 2353 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7808      00
 7809              	.LBE119:
 7810 2358 B8000000 		movl	$0, %eax
 7810      00
 7811 235d 85C0     		testl	%eax, %eax
 7812 235f 740C     		je	.L422
  99:TestUnitTest++.cpp ****     {
 7813              		.loc 4 99 0 is_stmt 0 discriminator 4
 7814 2361 488B45F8 		movq	-8(%rbp), %rax
 7815 2365 4889C7   		movq	%rax, %rdi
 7816 2368 E8000000 		call	_ZdlPv
 7816      00
 7817              	.L422:
  99:TestUnitTest++.cpp ****     {
 7818              		.loc 4 99 0
 7819 236d C9       		leave
 7820              		.cfi_def_cfa 7, 8
 7821 236e C3       		ret
 7822              		.cfi_endproc
 7823              	.LFE1599:
 7825              		.set	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 7826 236f 90       		.align 2
 7828              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0Ev:
 7829              	.LFB1601:
  99:TestUnitTest++.cpp ****     {
 7830              		.loc 4 99 0 is_stmt 1
 7831              		.cfi_startproc
 7832 2370 55       		pushq	%rbp
 7833              		.cfi_def_cfa_offset 16
 7834              		.cfi_offset 6, -16
 7835 2371 4889E5   		movq	%rsp, %rbp
 7836              		.cfi_def_cfa_register 6
 7837 2374 4883EC10 		subq	$16, %rsp
 7838 2378 48897DF8 		movq	%rdi, -8(%rbp)
  99:TestUnitTest++.cpp ****     {
 7839              		.loc 4 99 0
 7840 237c 488B45F8 		movq	-8(%rbp), %rax
 7841 2380 4889C7   		movq	%rax, %rdi
 7842 2383 E8ACFFFF 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 7842      FF
 7843 2388 488B45F8 		movq	-8(%rbp), %rax
 7844 238c 4889C7   		movq	%rax, %rdi
 7845 238f E8000000 		call	_ZdlPv
 7845      00
 7846 2394 C9       		leave
 7847              		.cfi_def_cfa 7, 8
 7848 2395 C3       		ret
 7849              		.cfi_endproc
 7850              	.LFE1601:
 7852              		.section	.rodata
 7853              		.align 8
 7856              	_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 7857 06e8 00000000 		.quad	0
 7857      00000000 
 7858 06f0 00000000 		.quad	_ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
 7858      00000000 
 7859 06f8 00000000 		.quad	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev
 7859      00000000 
 7860 0700 00000000 		.quad	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev
 7860      00000000 
 7861 0708 00000000 		.quad	_ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv
 7861      00000000 
 7862              		.text
 7863              		.align 2
 7865              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD2Ev:
 7866              	.LFB1603:
  70:TestUnitTest++.cpp **** {
 7867              		.loc 4 70 0
 7868              		.cfi_startproc
 7869 2396 55       		pushq	%rbp
 7870              		.cfi_def_cfa_offset 16
 7871              		.cfi_offset 6, -16
 7872 2397 4889E5   		movq	%rsp, %rbp
 7873              		.cfi_def_cfa_register 6
 7874 239a 4883EC10 		subq	$16, %rsp
 7875 239e 48897DF8 		movq	%rdi, -8(%rbp)
 7876              	.LBB120:
  70:TestUnitTest++.cpp **** {
 7877              		.loc 4 70 0
 7878 23a2 BA000000 		movl	$_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE+16, %edx
 7878      00
 7879 23a7 488B45F8 		movq	-8(%rbp), %rax
 7880 23ab 488910   		movq	%rdx, (%rax)
 7881 23ae 488B45F8 		movq	-8(%rbp), %rax
 7882 23b2 4889C7   		movq	%rax, %rdi
 7883 23b5 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7883      00
 7884              	.LBE120:
 7885 23ba B8000000 		movl	$0, %eax
 7885      00
 7886 23bf 85C0     		testl	%eax, %eax
 7887 23c1 740C     		je	.L425
  70:TestUnitTest++.cpp **** {
 7888              		.loc 4 70 0 is_stmt 0 discriminator 4
 7889 23c3 488B45F8 		movq	-8(%rbp), %rax
 7890 23c7 4889C7   		movq	%rax, %rdi
 7891 23ca E8000000 		call	_ZdlPv
 7891      00
 7892              	.L425:
  70:TestUnitTest++.cpp **** {
 7893              		.loc 4 70 0
 7894 23cf C9       		leave
 7895              		.cfi_def_cfa 7, 8
 7896 23d0 C3       		ret
 7897              		.cfi_endproc
 7898              	.LFE1603:
 7900              		.set	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev,_ZN12_GLOBAL__N_142TestChec
 7901 23d1 90       		.align 2
 7903              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev:
 7904              	.LFB1605:
  70:TestUnitTest++.cpp **** {
 7905              		.loc 4 70 0 is_stmt 1
 7906              		.cfi_startproc
 7907 23d2 55       		pushq	%rbp
 7908              		.cfi_def_cfa_offset 16
 7909              		.cfi_offset 6, -16
 7910 23d3 4889E5   		movq	%rsp, %rbp
 7911              		.cfi_def_cfa_register 6
 7912 23d6 4883EC10 		subq	$16, %rsp
 7913 23da 48897DF8 		movq	%rdi, -8(%rbp)
  70:TestUnitTest++.cpp **** {
 7914              		.loc 4 70 0
 7915 23de 488B45F8 		movq	-8(%rbp), %rax
 7916 23e2 4889C7   		movq	%rax, %rdi
 7917 23e5 E8ACFFFF 		call	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev
 7917      FF
 7918 23ea 488B45F8 		movq	-8(%rbp), %rax
 7919 23ee 4889C7   		movq	%rax, %rdi
 7920 23f1 E8000000 		call	_ZdlPv
 7920      00
 7921 23f6 C9       		leave
 7922              		.cfi_def_cfa 7, 8
 7923 23f7 C3       		ret
 7924              		.cfi_endproc
 7925              	.LFE1605:
 7927              		.section	.rodata
 7928              		.align 8
 7931              	_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 7932 0710 00000000 		.quad	0
 7932      00000000 
 7933 0718 00000000 		.quad	_ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
 7933      00000000 
 7934 0720 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 7934      00000000 
 7935 0728 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev
 7935      00000000 
 7936 0730 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7Ru
 7936      00000000 
 7937              		.text
 7938              		.align 2
 7940              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev:
 7941              	.LFB1607:
  72:TestUnitTest++.cpp ****     {
 7942              		.loc 4 72 0
 7943              		.cfi_startproc
 7944 23f8 55       		pushq	%rbp
 7945              		.cfi_def_cfa_offset 16
 7946              		.cfi_offset 6, -16
 7947 23f9 4889E5   		movq	%rsp, %rbp
 7948              		.cfi_def_cfa_register 6
 7949 23fc 4883EC10 		subq	$16, %rsp
 7950 2400 48897DF8 		movq	%rdi, -8(%rbp)
 7951              	.LBB121:
  72:TestUnitTest++.cpp ****     {
 7952              		.loc 4 72 0
 7953 2404 BA000000 		movl	$_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest+16
 7953      00
 7954 2409 488B45F8 		movq	-8(%rbp), %rax
 7955 240d 488910   		movq	%rdx, (%rax)
 7956 2410 488B45F8 		movq	-8(%rbp), %rax
 7957 2414 4889C7   		movq	%rax, %rdi
 7958 2417 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7958      00
 7959              	.LBE121:
 7960 241c B8000000 		movl	$0, %eax
 7960      00
 7961 2421 85C0     		testl	%eax, %eax
 7962 2423 740C     		je	.L428
  72:TestUnitTest++.cpp ****     {
 7963              		.loc 4 72 0 is_stmt 0 discriminator 4
 7964 2425 488B45F8 		movq	-8(%rbp), %rax
 7965 2429 4889C7   		movq	%rax, %rdi
 7966 242c E8000000 		call	_ZdlPv
 7966      00
 7967              	.L428:
  72:TestUnitTest++.cpp ****     {
 7968              		.loc 4 72 0
 7969 2431 C9       		leave
 7970              		.cfi_def_cfa 7, 8
 7971 2432 C3       		ret
 7972              		.cfi_endproc
 7973              	.LFE1607:
 7975              		.set	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev,
 7976 2433 90       		.align 2
 7978              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev:
 7979              	.LFB1609:
  72:TestUnitTest++.cpp ****     {
 7980              		.loc 4 72 0 is_stmt 1
 7981              		.cfi_startproc
 7982 2434 55       		pushq	%rbp
 7983              		.cfi_def_cfa_offset 16
 7984              		.cfi_offset 6, -16
 7985 2435 4889E5   		movq	%rsp, %rbp
 7986              		.cfi_def_cfa_register 6
 7987 2438 4883EC10 		subq	$16, %rsp
 7988 243c 48897DF8 		movq	%rdi, -8(%rbp)
  72:TestUnitTest++.cpp ****     {
 7989              		.loc 4 72 0
 7990 2440 488B45F8 		movq	-8(%rbp), %rax
 7991 2444 4889C7   		movq	%rax, %rdi
 7992 2447 E8ACFFFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 7992      FF
 7993 244c 488B45F8 		movq	-8(%rbp), %rax
 7994 2450 4889C7   		movq	%rax, %rdi
 7995 2453 E8000000 		call	_ZdlPv
 7995      00
 7996 2458 C9       		leave
 7997              		.cfi_def_cfa 7, 8
 7998 2459 C3       		ret
 7999              		.cfi_endproc
 8000              	.LFE1609:
 8002              		.section	.rodata
 8003              		.align 8
 8006              	_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 8007 0738 00000000 		.quad	0
 8007      00000000 
 8008 0740 00000000 		.quad	_ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE
 8008      00000000 
 8009 0748 00000000 		.quad	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev
 8009      00000000 
 8010 0750 00000000 		.quad	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev
 8010      00000000 
 8011 0758 00000000 		.quad	_ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv
 8011      00000000 
 8012              		.text
 8013              		.align 2
 8015              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev:
 8016              	.LFB1611:
  65:TestUnitTest++.cpp **** {
 8017              		.loc 4 65 0
 8018              		.cfi_startproc
 8019 245a 55       		pushq	%rbp
 8020              		.cfi_def_cfa_offset 16
 8021              		.cfi_offset 6, -16
 8022 245b 4889E5   		movq	%rsp, %rbp
 8023              		.cfi_def_cfa_register 6
 8024 245e 4883EC10 		subq	$16, %rsp
 8025 2462 48897DF8 		movq	%rdi, -8(%rbp)
 8026              	.LBB122:
  65:TestUnitTest++.cpp **** {
 8027              		.loc 4 65 0
 8028 2466 BA000000 		movl	$_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE+16, %edx
 8028      00
 8029 246b 488B45F8 		movq	-8(%rbp), %rax
 8030 246f 488910   		movq	%rdx, (%rax)
 8031 2472 488B45F8 		movq	-8(%rbp), %rax
 8032 2476 4889C7   		movq	%rax, %rdi
 8033 2479 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8033      00
 8034              	.LBE122:
 8035 247e B8000000 		movl	$0, %eax
 8035      00
 8036 2483 85C0     		testl	%eax, %eax
 8037 2485 740C     		je	.L431
  65:TestUnitTest++.cpp **** {
 8038              		.loc 4 65 0 is_stmt 0 discriminator 4
 8039 2487 488B45F8 		movq	-8(%rbp), %rax
 8040 248b 4889C7   		movq	%rax, %rdi
 8041 248e E8000000 		call	_ZdlPv
 8041      00
 8042              	.L431:
  65:TestUnitTest++.cpp **** {
 8043              		.loc 4 65 0
 8044 2493 C9       		leave
 8045              		.cfi_def_cfa 7, 8
 8046 2494 C3       		ret
 8047              		.cfi_endproc
 8048              	.LFE1611:
 8050              		.set	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev,_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev
 8051 2495 90       		.align 2
 8053              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev:
 8054              	.LFB1613:
  65:TestUnitTest++.cpp **** {
 8055              		.loc 4 65 0 is_stmt 1
 8056              		.cfi_startproc
 8057 2496 55       		pushq	%rbp
 8058              		.cfi_def_cfa_offset 16
 8059              		.cfi_offset 6, -16
 8060 2497 4889E5   		movq	%rsp, %rbp
 8061              		.cfi_def_cfa_register 6
 8062 249a 4883EC10 		subq	$16, %rsp
 8063 249e 48897DF8 		movq	%rdi, -8(%rbp)
  65:TestUnitTest++.cpp **** {
 8064              		.loc 4 65 0
 8065 24a2 488B45F8 		movq	-8(%rbp), %rax
 8066 24a6 4889C7   		movq	%rax, %rdi
 8067 24a9 E8ACFFFF 		call	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev
 8067      FF
 8068 24ae 488B45F8 		movq	-8(%rbp), %rax
 8069 24b2 4889C7   		movq	%rax, %rdi
 8070 24b5 E8000000 		call	_ZdlPv
 8070      00
 8071 24ba C9       		leave
 8072              		.cfi_def_cfa 7, 8
 8073 24bb C3       		ret
 8074              		.cfi_endproc
 8075              	.LFE1613:
 8077              		.section	.rodata
 8078              		.align 8
 8081              	_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 8082 0760 00000000 		.quad	0
 8082      00000000 
 8083 0768 00000000 		.quad	_ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
 8083      00000000 
 8084 0770 00000000 		.quad	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev
 8084      00000000 
 8085 0778 00000000 		.quad	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev
 8085      00000000 
 8086 0780 00000000 		.quad	_ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv
 8086      00000000 
 8087              		.text
 8088              		.align 2
 8090              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD2Ev:
 8091              	.LFB1615:
  59:TestUnitTest++.cpp **** {
 8092              		.loc 4 59 0
 8093              		.cfi_startproc
 8094 24bc 55       		pushq	%rbp
 8095              		.cfi_def_cfa_offset 16
 8096              		.cfi_offset 6, -16
 8097 24bd 4889E5   		movq	%rsp, %rbp
 8098              		.cfi_def_cfa_register 6
 8099 24c0 4883EC10 		subq	$16, %rsp
 8100 24c4 48897DF8 		movq	%rdi, -8(%rbp)
 8101              	.LBB123:
  59:TestUnitTest++.cpp **** {
 8102              		.loc 4 59 0
 8103 24c8 BA000000 		movl	$_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE+16, %edx
 8103      00
 8104 24cd 488B45F8 		movq	-8(%rbp), %rax
 8105 24d1 488910   		movq	%rdx, (%rax)
 8106 24d4 488B45F8 		movq	-8(%rbp), %rax
 8107 24d8 4889C7   		movq	%rax, %rdi
 8108 24db E8000000 		call	_ZN8UnitTest4TestD2Ev
 8108      00
 8109              	.LBE123:
 8110 24e0 B8000000 		movl	$0, %eax
 8110      00
 8111 24e5 85C0     		testl	%eax, %eax
 8112 24e7 740C     		je	.L434
  59:TestUnitTest++.cpp **** {
 8113              		.loc 4 59 0 is_stmt 0 discriminator 4
 8114 24e9 488B45F8 		movq	-8(%rbp), %rax
 8115 24ed 4889C7   		movq	%rax, %rdi
 8116 24f0 E8000000 		call	_ZdlPv
 8116      00
 8117              	.L434:
  59:TestUnitTest++.cpp **** {
 8118              		.loc 4 59 0
 8119 24f5 C9       		leave
 8120              		.cfi_def_cfa 7, 8
 8121 24f6 C3       		ret
 8122              		.cfi_endproc
 8123              	.LFE1615:
 8125              		.set	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev,_ZN12_GLOBAL__N_145TestC
 8126 24f7 90       		.align 2
 8128              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev:
 8129              	.LFB1617:
  59:TestUnitTest++.cpp **** {
 8130              		.loc 4 59 0 is_stmt 1
 8131              		.cfi_startproc
 8132 24f8 55       		pushq	%rbp
 8133              		.cfi_def_cfa_offset 16
 8134              		.cfi_offset 6, -16
 8135 24f9 4889E5   		movq	%rsp, %rbp
 8136              		.cfi_def_cfa_register 6
 8137 24fc 4883EC10 		subq	$16, %rsp
 8138 2500 48897DF8 		movq	%rdi, -8(%rbp)
  59:TestUnitTest++.cpp **** {
 8139              		.loc 4 59 0
 8140 2504 488B45F8 		movq	-8(%rbp), %rax
 8141 2508 4889C7   		movq	%rax, %rdi
 8142 250b E8ACFFFF 		call	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev
 8142      FF
 8143 2510 488B45F8 		movq	-8(%rbp), %rax
 8144 2514 4889C7   		movq	%rax, %rdi
 8145 2517 E8000000 		call	_ZdlPv
 8145      00
 8146 251c C9       		leave
 8147              		.cfi_def_cfa 7, 8
 8148 251d C3       		ret
 8149              		.cfi_endproc
 8150              	.LFE1617:
 8152              		.section	.rodata
 8153              		.align 8
 8156              	_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 8157 0788 00000000 		.quad	0
 8157      00000000 
 8158 0790 00000000 		.quad	_ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
 8158      00000000 
 8159 0798 00000000 		.quad	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev
 8159      00000000 
 8160 07a0 00000000 		.quad	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev
 8160      00000000 
 8161 07a8 00000000 		.quad	_ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv
 8161      00000000 
 8162              		.text
 8163              		.align 2
 8165              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD2Ev:
 8166              	.LFB1619:
  50:TestUnitTest++.cpp **** {
 8167              		.loc 4 50 0
 8168              		.cfi_startproc
 8169 251e 55       		pushq	%rbp
 8170              		.cfi_def_cfa_offset 16
 8171              		.cfi_offset 6, -16
 8172 251f 4889E5   		movq	%rsp, %rbp
 8173              		.cfi_def_cfa_register 6
 8174 2522 4883EC10 		subq	$16, %rsp
 8175 2526 48897DF8 		movq	%rdi, -8(%rbp)
 8176              	.LBB124:
  50:TestUnitTest++.cpp **** {
 8177              		.loc 4 50 0
 8178 252a BA000000 		movl	$_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE+16, %edx
 8178      00
 8179 252f 488B45F8 		movq	-8(%rbp), %rax
 8180 2533 488910   		movq	%rdx, (%rax)
 8181 2536 488B45F8 		movq	-8(%rbp), %rax
 8182 253a 4889C7   		movq	%rax, %rdi
 8183 253d E8000000 		call	_ZN8UnitTest4TestD2Ev
 8183      00
 8184              	.LBE124:
 8185 2542 B8000000 		movl	$0, %eax
 8185      00
 8186 2547 85C0     		testl	%eax, %eax
 8187 2549 740C     		je	.L437
  50:TestUnitTest++.cpp **** {
 8188              		.loc 4 50 0 is_stmt 0 discriminator 4
 8189 254b 488B45F8 		movq	-8(%rbp), %rax
 8190 254f 4889C7   		movq	%rax, %rdi
 8191 2552 E8000000 		call	_ZdlPv
 8191      00
 8192              	.L437:
  50:TestUnitTest++.cpp **** {
 8193              		.loc 4 50 0
 8194 2557 C9       		leave
 8195              		.cfi_def_cfa 7, 8
 8196 2558 C3       		ret
 8197              		.cfi_endproc
 8198              	.LFE1619:
 8200              		.set	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev,_ZN12_GLOBAL__N_135TestCheckArrayC
 8201 2559 90       		.align 2
 8203              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev:
 8204              	.LFB1621:
  50:TestUnitTest++.cpp **** {
 8205              		.loc 4 50 0 is_stmt 1
 8206              		.cfi_startproc
 8207 255a 55       		pushq	%rbp
 8208              		.cfi_def_cfa_offset 16
 8209              		.cfi_offset 6, -16
 8210 255b 4889E5   		movq	%rsp, %rbp
 8211              		.cfi_def_cfa_register 6
 8212 255e 4883EC10 		subq	$16, %rsp
 8213 2562 48897DF8 		movq	%rdi, -8(%rbp)
  50:TestUnitTest++.cpp **** {
 8214              		.loc 4 50 0
 8215 2566 488B45F8 		movq	-8(%rbp), %rax
 8216 256a 4889C7   		movq	%rax, %rdi
 8217 256d E8ACFFFF 		call	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev
 8217      FF
 8218 2572 488B45F8 		movq	-8(%rbp), %rax
 8219 2576 4889C7   		movq	%rax, %rdi
 8220 2579 E8000000 		call	_ZdlPv
 8220      00
 8221 257e C9       		leave
 8222              		.cfi_def_cfa 7, 8
 8223 257f C3       		ret
 8224              		.cfi_endproc
 8225              	.LFE1621:
 8227              		.section	.rodata
 8228              		.align 8
 8231              	_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 8232 07b0 00000000 		.quad	0
 8232      00000000 
 8233 07b8 00000000 		.quad	_ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE
 8233      00000000 
 8234 07c0 00000000 		.quad	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev
 8234      00000000 
 8235 07c8 00000000 		.quad	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev
 8235      00000000 
 8236 07d0 00000000 		.quad	_ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv
 8236      00000000 
 8237              		.text
 8238              		.align 2
 8240              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev:
 8241              	.LFB1623:
  43:TestUnitTest++.cpp **** {
 8242              		.loc 4 43 0
 8243              		.cfi_startproc
 8244 2580 55       		pushq	%rbp
 8245              		.cfi_def_cfa_offset 16
 8246              		.cfi_offset 6, -16
 8247 2581 4889E5   		movq	%rsp, %rbp
 8248              		.cfi_def_cfa_register 6
 8249 2584 4883EC10 		subq	$16, %rsp
 8250 2588 48897DF8 		movq	%rdi, -8(%rbp)
 8251              	.LBB125:
  43:TestUnitTest++.cpp **** {
 8252              		.loc 4 43 0
 8253 258c BA000000 		movl	$_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE+16, %edx
 8253      00
 8254 2591 488B45F8 		movq	-8(%rbp), %rax
 8255 2595 488910   		movq	%rdx, (%rax)
 8256 2598 488B45F8 		movq	-8(%rbp), %rax
 8257 259c 4889C7   		movq	%rax, %rdi
 8258 259f E8000000 		call	_ZN8UnitTest4TestD2Ev
 8258      00
 8259              	.LBE125:
 8260 25a4 B8000000 		movl	$0, %eax
 8260      00
 8261 25a9 85C0     		testl	%eax, %eax
 8262 25ab 740C     		je	.L440
  43:TestUnitTest++.cpp **** {
 8263              		.loc 4 43 0 is_stmt 0 discriminator 4
 8264 25ad 488B45F8 		movq	-8(%rbp), %rax
 8265 25b1 4889C7   		movq	%rax, %rdi
 8266 25b4 E8000000 		call	_ZdlPv
 8266      00
 8267              	.L440:
  43:TestUnitTest++.cpp **** {
 8268              		.loc 4 43 0
 8269 25b9 C9       		leave
 8270              		.cfi_def_cfa 7, 8
 8271 25ba C3       		ret
 8272              		.cfi_endproc
 8273              	.LFE1623:
 8275              		.set	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev,_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev
 8276 25bb 90       		.align 2
 8278              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev:
 8279              	.LFB1625:
  43:TestUnitTest++.cpp **** {
 8280              		.loc 4 43 0 is_stmt 1
 8281              		.cfi_startproc
 8282 25bc 55       		pushq	%rbp
 8283              		.cfi_def_cfa_offset 16
 8284              		.cfi_offset 6, -16
 8285 25bd 4889E5   		movq	%rsp, %rbp
 8286              		.cfi_def_cfa_register 6
 8287 25c0 4883EC10 		subq	$16, %rsp
 8288 25c4 48897DF8 		movq	%rdi, -8(%rbp)
  43:TestUnitTest++.cpp **** {
 8289              		.loc 4 43 0
 8290 25c8 488B45F8 		movq	-8(%rbp), %rax
 8291 25cc 4889C7   		movq	%rax, %rdi
 8292 25cf E8ACFFFF 		call	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev
 8292      FF
 8293 25d4 488B45F8 		movq	-8(%rbp), %rax
 8294 25d8 4889C7   		movq	%rax, %rdi
 8295 25db E8000000 		call	_ZdlPv
 8295      00
 8296 25e0 C9       		leave
 8297              		.cfi_def_cfa 7, 8
 8298 25e1 C3       		ret
 8299              		.cfi_endproc
 8300              	.LFE1625:
 8302              		.section	.rodata
 8303              		.align 8
 8306              	_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 8307 07d8 00000000 		.quad	0
 8307      00000000 
 8308 07e0 00000000 		.quad	_ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
 8308      00000000 
 8309 07e8 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev
 8309      00000000 
 8310 07f0 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev
 8310      00000000 
 8311 07f8 00000000 		.quad	_ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv
 8311      00000000 
 8312              		.text
 8313              		.align 2
 8315              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD2Ev:
 8316              	.LFB1627:
  37:TestUnitTest++.cpp **** {
 8317              		.loc 4 37 0
 8318              		.cfi_startproc
 8319 25e2 55       		pushq	%rbp
 8320              		.cfi_def_cfa_offset 16
 8321              		.cfi_offset 6, -16
 8322 25e3 4889E5   		movq	%rsp, %rbp
 8323              		.cfi_def_cfa_register 6
 8324 25e6 4883EC10 		subq	$16, %rsp
 8325 25ea 48897DF8 		movq	%rdi, -8(%rbp)
 8326              	.LBB126:
  37:TestUnitTest++.cpp **** {
 8327              		.loc 4 37 0
 8328 25ee BA000000 		movl	$_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE+16, %edx
 8328      00
 8329 25f3 488B45F8 		movq	-8(%rbp), %rax
 8330 25f7 488910   		movq	%rdx, (%rax)
 8331 25fa 488B45F8 		movq	-8(%rbp), %rax
 8332 25fe 4889C7   		movq	%rax, %rdi
 8333 2601 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8333      00
 8334              	.LBE126:
 8335 2606 B8000000 		movl	$0, %eax
 8335      00
 8336 260b 85C0     		testl	%eax, %eax
 8337 260d 740C     		je	.L443
  37:TestUnitTest++.cpp **** {
 8338              		.loc 4 37 0 is_stmt 0 discriminator 4
 8339 260f 488B45F8 		movq	-8(%rbp), %rax
 8340 2613 4889C7   		movq	%rax, %rdi
 8341 2616 E8000000 		call	_ZdlPv
 8341      00
 8342              	.L443:
  37:TestUnitTest++.cpp **** {
 8343              		.loc 4 37 0
 8344 261b C9       		leave
 8345              		.cfi_def_cfa 7, 8
 8346 261c C3       		ret
 8347              		.cfi_endproc
 8348              	.LFE1627:
 8350              		.set	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev,_ZN12_GLOBAL__N_127TestValidCheckCloseSucc
 8351 261d 90       		.align 2
 8353              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev:
 8354              	.LFB1629:
  37:TestUnitTest++.cpp **** {
 8355              		.loc 4 37 0 is_stmt 1
 8356              		.cfi_startproc
 8357 261e 55       		pushq	%rbp
 8358              		.cfi_def_cfa_offset 16
 8359              		.cfi_offset 6, -16
 8360 261f 4889E5   		movq	%rsp, %rbp
 8361              		.cfi_def_cfa_register 6
 8362 2622 4883EC10 		subq	$16, %rsp
 8363 2626 48897DF8 		movq	%rdi, -8(%rbp)
  37:TestUnitTest++.cpp **** {
 8364              		.loc 4 37 0
 8365 262a 488B45F8 		movq	-8(%rbp), %rax
 8366 262e 4889C7   		movq	%rax, %rdi
 8367 2631 E8ACFFFF 		call	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev
 8367      FF
 8368 2636 488B45F8 		movq	-8(%rbp), %rax
 8369 263a 4889C7   		movq	%rax, %rdi
 8370 263d E8000000 		call	_ZdlPv
 8370      00
 8371 2642 C9       		leave
 8372              		.cfi_def_cfa 7, 8
 8373 2643 C3       		ret
 8374              		.cfi_endproc
 8375              	.LFE1629:
 8377              		.section	.rodata
 8378              		.align 8
 8381              	_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 8382 0800 00000000 		.quad	0
 8382      00000000 
 8383 0808 00000000 		.quad	_ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
 8383      00000000 
 8384 0810 00000000 		.quad	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev
 8384      00000000 
 8385 0818 00000000 		.quad	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev
 8385      00000000 
 8386 0820 00000000 		.quad	_ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv
 8386      00000000 
 8387              		.text
 8388              		.align 2
 8390              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD2Ev:
 8391              	.LFB1631:
  31:TestUnitTest++.cpp **** {
 8392              		.loc 4 31 0
 8393              		.cfi_startproc
 8394 2644 55       		pushq	%rbp
 8395              		.cfi_def_cfa_offset 16
 8396              		.cfi_offset 6, -16
 8397 2645 4889E5   		movq	%rsp, %rbp
 8398              		.cfi_def_cfa_register 6
 8399 2648 4883EC10 		subq	$16, %rsp
 8400 264c 48897DF8 		movq	%rdi, -8(%rbp)
 8401              	.LBB127:
  31:TestUnitTest++.cpp **** {
 8402              		.loc 4 31 0
 8403 2650 BA000000 		movl	$_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE+16, %edx
 8403      00
 8404 2655 488B45F8 		movq	-8(%rbp), %rax
 8405 2659 488910   		movq	%rdx, (%rax)
 8406 265c 488B45F8 		movq	-8(%rbp), %rax
 8407 2660 4889C7   		movq	%rax, %rdi
 8408 2663 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8408      00
 8409              	.LBE127:
 8410 2668 B8000000 		movl	$0, %eax
 8410      00
 8411 266d 85C0     		testl	%eax, %eax
 8412 266f 740C     		je	.L446
  31:TestUnitTest++.cpp **** {
 8413              		.loc 4 31 0 is_stmt 0 discriminator 4
 8414 2671 488B45F8 		movq	-8(%rbp), %rax
 8415 2675 4889C7   		movq	%rax, %rdi
 8416 2678 E8000000 		call	_ZdlPv
 8416      00
 8417              	.L446:
  31:TestUnitTest++.cpp **** {
 8418              		.loc 4 31 0
 8419 267d C9       		leave
 8420              		.cfi_def_cfa 7, 8
 8421 267e C3       		ret
 8422              		.cfi_endproc
 8423              	.LFE1631:
 8425              		.set	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev,_ZN12_GLOBAL__N_131TestCheckEqualWorks
 8426 267f 90       		.align 2
 8428              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev:
 8429              	.LFB1633:
  31:TestUnitTest++.cpp **** {
 8430              		.loc 4 31 0 is_stmt 1
 8431              		.cfi_startproc
 8432 2680 55       		pushq	%rbp
 8433              		.cfi_def_cfa_offset 16
 8434              		.cfi_offset 6, -16
 8435 2681 4889E5   		movq	%rsp, %rbp
 8436              		.cfi_def_cfa_register 6
 8437 2684 4883EC10 		subq	$16, %rsp
 8438 2688 48897DF8 		movq	%rdi, -8(%rbp)
  31:TestUnitTest++.cpp **** {
 8439              		.loc 4 31 0
 8440 268c 488B45F8 		movq	-8(%rbp), %rax
 8441 2690 4889C7   		movq	%rax, %rdi
 8442 2693 E8ACFFFF 		call	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev
 8442      FF
 8443 2698 488B45F8 		movq	-8(%rbp), %rax
 8444 269c 4889C7   		movq	%rax, %rdi
 8445 269f E8000000 		call	_ZdlPv
 8445      00
 8446 26a4 C9       		leave
 8447              		.cfi_def_cfa 7, 8
 8448 26a5 C3       		ret
 8449              		.cfi_endproc
 8450              	.LFE1633:
 8452              		.section	.rodata
 8453              		.align 8
 8456              	_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 8457 0828 00000000 		.quad	0
 8457      00000000 
 8458 0830 00000000 		.quad	_ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
 8458      00000000 
 8459 0838 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev
 8459      00000000 
 8460 0840 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev
 8460      00000000 
 8461 0848 00000000 		.quad	_ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv
 8461      00000000 
 8462              		.text
 8463              		.align 2
 8465              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD2Ev:
 8466              	.LFB1635:
  24:TestUnitTest++.cpp **** {
 8467              		.loc 4 24 0
 8468              		.cfi_startproc
 8469 26a6 55       		pushq	%rbp
 8470              		.cfi_def_cfa_offset 16
 8471              		.cfi_offset 6, -16
 8472 26a7 4889E5   		movq	%rsp, %rbp
 8473              		.cfi_def_cfa_register 6
 8474 26aa 4883EC10 		subq	$16, %rsp
 8475 26ae 48897DF8 		movq	%rdi, -8(%rbp)
 8476              	.LBB128:
  24:TestUnitTest++.cpp **** {
 8477              		.loc 4 24 0
 8478 26b2 BA000000 		movl	$_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE+16, %edx
 8478      00
 8479 26b7 488B45F8 		movq	-8(%rbp), %rax
 8480 26bb 488910   		movq	%rdx, (%rax)
 8481 26be 488B45F8 		movq	-8(%rbp), %rax
 8482 26c2 4889C7   		movq	%rax, %rdi
 8483 26c5 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8483      00
 8484              	.LBE128:
 8485 26ca B8000000 		movl	$0, %eax
 8485      00
 8486 26cf 85C0     		testl	%eax, %eax
 8487 26d1 740C     		je	.L449
  24:TestUnitTest++.cpp **** {
 8488              		.loc 4 24 0 is_stmt 0 discriminator 4
 8489 26d3 488B45F8 		movq	-8(%rbp), %rax
 8490 26d7 4889C7   		movq	%rax, %rdi
 8491 26da E8000000 		call	_ZdlPv
 8491      00
 8492              	.L449:
  24:TestUnitTest++.cpp **** {
 8493              		.loc 4 24 0
 8494 26df C9       		leave
 8495              		.cfi_def_cfa 7, 8
 8496 26e0 C3       		ret
 8497              		.cfi_endproc
 8498              	.LFE1635:
 8500              		.set	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev,_ZN12_GLOBAL__N_127TestValidCheckEqualSucc
 8501 26e1 90       		.align 2
 8503              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev:
 8504              	.LFB1637:
  24:TestUnitTest++.cpp **** {
 8505              		.loc 4 24 0 is_stmt 1
 8506              		.cfi_startproc
 8507 26e2 55       		pushq	%rbp
 8508              		.cfi_def_cfa_offset 16
 8509              		.cfi_offset 6, -16
 8510 26e3 4889E5   		movq	%rsp, %rbp
 8511              		.cfi_def_cfa_register 6
 8512 26e6 4883EC10 		subq	$16, %rsp
 8513 26ea 48897DF8 		movq	%rdi, -8(%rbp)
  24:TestUnitTest++.cpp **** {
 8514              		.loc 4 24 0
 8515 26ee 488B45F8 		movq	-8(%rbp), %rax
 8516 26f2 4889C7   		movq	%rax, %rdi
 8517 26f5 E8ACFFFF 		call	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev
 8517      FF
 8518 26fa 488B45F8 		movq	-8(%rbp), %rax
 8519 26fe 4889C7   		movq	%rax, %rdi
 8520 2701 E8000000 		call	_ZdlPv
 8520      00
 8521 2706 C9       		leave
 8522              		.cfi_def_cfa 7, 8
 8523 2707 C3       		ret
 8524              		.cfi_endproc
 8525              	.LFE1637:
 8527              		.section	.rodata
 8528              		.align 8
 8531              	_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 8532 0850 00000000 		.quad	0
 8532      00000000 
 8533 0858 00000000 		.quad	_ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE
 8533      00000000 
 8534 0860 00000000 		.quad	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev
 8534      00000000 
 8535 0868 00000000 		.quad	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev
 8535      00000000 
 8536 0870 00000000 		.quad	_ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv
 8536      00000000 
 8537              		.text
 8538              		.align 2
 8540              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD2Ev:
 8541              	.LFB1639:
  17:TestUnitTest++.cpp **** {
 8542              		.loc 4 17 0
 8543              		.cfi_startproc
 8544 2708 55       		pushq	%rbp
 8545              		.cfi_def_cfa_offset 16
 8546              		.cfi_offset 6, -16
 8547 2709 4889E5   		movq	%rsp, %rbp
 8548              		.cfi_def_cfa_register 6
 8549 270c 4883EC10 		subq	$16, %rsp
 8550 2710 48897DF8 		movq	%rdi, -8(%rbp)
 8551              	.LBB129:
  17:TestUnitTest++.cpp **** {
 8552              		.loc 4 17 0
 8553 2714 BA000000 		movl	$_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE+16, %edx
 8553      00
 8554 2719 488B45F8 		movq	-8(%rbp), %rax
 8555 271d 488910   		movq	%rdx, (%rax)
 8556 2720 488B45F8 		movq	-8(%rbp), %rax
 8557 2724 4889C7   		movq	%rax, %rdi
 8558 2727 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8558      00
 8559              	.LBE129:
 8560 272c B8000000 		movl	$0, %eax
 8560      00
 8561 2731 85C0     		testl	%eax, %eax
 8562 2733 740C     		je	.L452
  17:TestUnitTest++.cpp **** {
 8563              		.loc 4 17 0 is_stmt 0 discriminator 4
 8564 2735 488B45F8 		movq	-8(%rbp), %rax
 8565 2739 4889C7   		movq	%rax, %rdi
 8566 273c E8000000 		call	_ZdlPv
 8566      00
 8567              	.L452:
  17:TestUnitTest++.cpp **** {
 8568              		.loc 4 17 0
 8569 2741 C9       		leave
 8570              		.cfi_def_cfa 7, 8
 8571 2742 C3       		ret
 8572              		.cfi_endproc
 8573              	.LFE1639:
 8575              		.set	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev,_ZN12_GLOBAL__N_126TestCheckWorksWithPointe
 8576 2743 90       		.align 2
 8578              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev:
 8579              	.LFB1641:
  17:TestUnitTest++.cpp **** {
 8580              		.loc 4 17 0 is_stmt 1
 8581              		.cfi_startproc
 8582 2744 55       		pushq	%rbp
 8583              		.cfi_def_cfa_offset 16
 8584              		.cfi_offset 6, -16
 8585 2745 4889E5   		movq	%rsp, %rbp
 8586              		.cfi_def_cfa_register 6
 8587 2748 4883EC10 		subq	$16, %rsp
 8588 274c 48897DF8 		movq	%rdi, -8(%rbp)
  17:TestUnitTest++.cpp **** {
 8589              		.loc 4 17 0
 8590 2750 488B45F8 		movq	-8(%rbp), %rax
 8591 2754 4889C7   		movq	%rax, %rdi
 8592 2757 E8ACFFFF 		call	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev
 8592      FF
 8593 275c 488B45F8 		movq	-8(%rbp), %rax
 8594 2760 4889C7   		movq	%rax, %rdi
 8595 2763 E8000000 		call	_ZdlPv
 8595      00
 8596 2768 C9       		leave
 8597              		.cfi_def_cfa 7, 8
 8598 2769 C3       		ret
 8599              		.cfi_endproc
 8600              	.LFE1641:
 8602              		.section	.rodata
 8603              		.align 8
 8606              	_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE:
 8607 0878 00000000 		.quad	0
 8607      00000000 
 8608 0880 00000000 		.quad	_ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE
 8608      00000000 
 8609 0888 00000000 		.quad	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev
 8609      00000000 
 8610 0890 00000000 		.quad	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev
 8610      00000000 
 8611 0898 00000000 		.quad	_ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv
 8611      00000000 
 8612              		.text
 8613              		.align 2
 8615              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev:
 8616              	.LFB1643:
  11:TestUnitTest++.cpp **** {
 8617              		.loc 4 11 0
 8618              		.cfi_startproc
 8619 276a 55       		pushq	%rbp
 8620              		.cfi_def_cfa_offset 16
 8621              		.cfi_offset 6, -16
 8622 276b 4889E5   		movq	%rsp, %rbp
 8623              		.cfi_def_cfa_register 6
 8624 276e 4883EC10 		subq	$16, %rsp
 8625 2772 48897DF8 		movq	%rdi, -8(%rbp)
 8626              	.LBB130:
  11:TestUnitTest++.cpp **** {
 8627              		.loc 4 11 0
 8628 2776 BA000000 		movl	$_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE+16, %edx
 8628      00
 8629 277b 488B45F8 		movq	-8(%rbp), %rax
 8630 277f 488910   		movq	%rdx, (%rax)
 8631 2782 488B45F8 		movq	-8(%rbp), %rax
 8632 2786 4889C7   		movq	%rax, %rdi
 8633 2789 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8633      00
 8634              	.LBE130:
 8635 278e B8000000 		movl	$0, %eax
 8635      00
 8636 2793 85C0     		testl	%eax, %eax
 8637 2795 740C     		je	.L455
  11:TestUnitTest++.cpp **** {
 8638              		.loc 4 11 0 is_stmt 0 discriminator 4
 8639 2797 488B45F8 		movq	-8(%rbp), %rax
 8640 279b 4889C7   		movq	%rax, %rdi
 8641 279e E8000000 		call	_ZdlPv
 8641      00
 8642              	.L455:
  11:TestUnitTest++.cpp **** {
 8643              		.loc 4 11 0
 8644 27a3 C9       		leave
 8645              		.cfi_def_cfa 7, 8
 8646 27a4 C3       		ret
 8647              		.cfi_endproc
 8648              	.LFE1643:
 8650              		.set	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev,_ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev
 8651 27a5 90       		.align 2
 8653              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev:
 8654              	.LFB1645:
  11:TestUnitTest++.cpp **** {
 8655              		.loc 4 11 0 is_stmt 1
 8656              		.cfi_startproc
 8657 27a6 55       		pushq	%rbp
 8658              		.cfi_def_cfa_offset 16
 8659              		.cfi_offset 6, -16
 8660 27a7 4889E5   		movq	%rsp, %rbp
 8661              		.cfi_def_cfa_register 6
 8662 27aa 4883EC10 		subq	$16, %rsp
 8663 27ae 48897DF8 		movq	%rdi, -8(%rbp)
  11:TestUnitTest++.cpp **** {
 8664              		.loc 4 11 0
 8665 27b2 488B45F8 		movq	-8(%rbp), %rax
 8666 27b6 4889C7   		movq	%rax, %rdi
 8667 27b9 E8ACFFFF 		call	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev
 8667      FF
 8668 27be 488B45F8 		movq	-8(%rbp), %rax
 8669 27c2 4889C7   		movq	%rax, %rdi
 8670 27c5 E8000000 		call	_ZdlPv
 8670      00
 8671 27ca C9       		leave
 8672              		.cfi_def_cfa 7, 8
 8673 27cb C3       		ret
 8674              		.cfi_endproc
 8675              	.LFE1645:
 8677              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 8678              		.section	.rodata._ZTVN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 8679              		.align 8
 8682              	_ZTVN8UnitTest15MemoryOutStreamE:
 8683 0000 90000000 		.quad	144
 8683      00000000 
 8684 0008 00000000 		.quad	0
 8684      00000000 
 8685 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 8685      00000000 
 8686 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 8686      00000000 
 8687 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 8687      00000000 
 8688 0028 70FFFFFF 		.quad	-144
 8688      FFFFFFFF 
 8689 0030 70FFFFFF 		.quad	-144
 8689      FFFFFFFF 
 8690 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 8690      00000000 
 8691 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 8691      00000000 
 8692 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 8692      00000000 
 8693              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 8694              		.section	.rodata._ZTTN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 8695              		.align 8
 8698              	_ZTTN8UnitTest15MemoryOutStreamE:
 8699 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 8699      00000000 
 8700 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 8700      00000000 
 8701 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 8701      00000000 
 8702 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 8702      00000000 
 8703 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 8703      00000000 
 8704 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 8704      00000000 
 8705              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIc
 8706              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 8707              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_trai
 8708              		.align 8
 8711              	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:
 8712 0000 90000000 		.quad	144
 8712      00000000 
 8713 0008 00000000 		.quad	0
 8713      00000000 
 8714 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 8714      00000000 
 8715 0018 00000000 		.quad	0
 8715      00000000 
 8716 0020 00000000 		.quad	0
 8716      00000000 
 8717 0028 70FFFFFF 		.quad	-144
 8717      FFFFFFFF 
 8718 0030 70FFFFFF 		.quad	-144
 8718      FFFFFFFF 
 8719 0038 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 8719      00000000 
 8720 0040 00000000 		.quad	0
 8720      00000000 
 8721 0048 00000000 		.quad	0
 8721      00000000 
 8722              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 8723              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 8724              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_So,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStre
 8725              		.align 8
 8728              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 8729 0000 90000000 		.quad	144
 8729      00000000 
 8730 0008 00000000 		.quad	0
 8730      00000000 
 8731 0010 00000000 		.quad	_ZTISo
 8731      00000000 
 8732 0018 00000000 		.quad	0
 8732      00000000 
 8733 0020 00000000 		.quad	0
 8733      00000000 
 8734 0028 70FFFFFF 		.quad	-144
 8734      FFFFFFFF 
 8735 0030 70FFFFFF 		.quad	-144
 8735      FFFFFFFF 
 8736 0038 00000000 		.quad	_ZTISo
 8736      00000000 
 8737 0040 00000000 		.quad	0
 8737      00000000 
 8738 0048 00000000 		.quad	0
 8738      00000000 
 8739              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 8740              		.align 2
 8741              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 8743              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 8744              	.LFB1648:
  13:../MemoryOutStream.h **** {
 8745              		.loc 2 13 0
 8746              		.cfi_startproc
 8747              		.cfi_personality 0x3,__gxx_personality_v0
 8748              		.cfi_lsda 0x3,.LLSDA1648
 8749 0000 55       		pushq	%rbp
 8750              		.cfi_def_cfa_offset 16
 8751              		.cfi_offset 6, -16
 8752 0001 4889E5   		movq	%rsp, %rbp
 8753              		.cfi_def_cfa_register 6
 8754 0004 53       		pushq	%rbx
 8755 0005 4883EC18 		subq	$24, %rsp
 8756              		.cfi_offset 3, -24
 8757 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8758              	.LBB131:
  13:../MemoryOutStream.h **** {
 8759              		.loc 2 13 0
 8760 000d BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
 8760      00
 8761 0012 488B45E8 		movq	-24(%rbp), %rax
 8762 0016 488910   		movq	%rdx, (%rax)
 8763 0019 BA900000 		movl	$144, %edx
 8763      00
 8764 001e 488B45E8 		movq	-24(%rbp), %rax
 8765 0022 4801D0   		addq	%rdx, %rax
 8766 0025 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
 8766      00
 8767 002a 488910   		movq	%rdx, (%rax)
 8768 002d 488B45E8 		movq	-24(%rbp), %rax
 8769 0031 4883C070 		addq	$112, %rax
 8770 0035 4889C7   		movq	%rax, %rdi
 8771              	.LEHB160:
 8772 0038 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 8772      00
 8773              	.LEHE160:
  13:../MemoryOutStream.h **** {
 8774              		.loc 2 13 0 is_stmt 0 discriminator 14
 8775 003d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 8775      00
 8776 0042 488B45E8 		movq	-24(%rbp), %rax
 8777 0046 4889D6   		movq	%rdx, %rsi
 8778 0049 4889C7   		movq	%rax, %rdi
 8779              	.LEHB161:
 8780 004c E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 8780      00
 8781              	.LEHE161:
  13:../MemoryOutStream.h **** {
 8782              		.loc 2 13 0 discriminator 20
 8783 0051 B8020000 		movl	$2, %eax
 8783      00
 8784 0056 85C0     		testl	%eax, %eax
 8785 0058 7412     		je	.L459
  13:../MemoryOutStream.h **** {
 8786              		.loc 2 13 0 discriminator 21
 8787 005a 488B45E8 		movq	-24(%rbp), %rax
 8788 005e 48059000 		addq	$144, %rax
 8788      0000
 8789 0064 4889C7   		movq	%rax, %rdi
 8790              	.LEHB162:
 8791 0067 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 8791      00
 8792              	.LEHE162:
 8793              	.L459:
 8794              	.LBE131:
  13:../MemoryOutStream.h **** {
 8795              		.loc 2 13 0 discriminator 22
 8796 006c B8000000 		movl	$0, %eax
 8796      00
 8797 0071 85C0     		testl	%eax, %eax
 8798 0073 7450     		je	.L458
  13:../MemoryOutStream.h **** {
 8799              		.loc 2 13 0 discriminator 25
 8800 0075 488B45E8 		movq	-24(%rbp), %rax
 8801 0079 4889C7   		movq	%rax, %rdi
 8802 007c E8000000 		call	_ZdlPv
 8802      00
 8803 0081 EB42     		jmp	.L458
 8804              	.L464:
 8805 0083 4889C3   		movq	%rax, %rbx
 8806              	.LBB132:
  13:../MemoryOutStream.h **** {
 8807              		.loc 2 13 0
 8808 0086 BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 8808      00
 8809 008b 488B45E8 		movq	-24(%rbp), %rax
 8810 008f 4889D6   		movq	%rdx, %rsi
 8811 0092 4889C7   		movq	%rax, %rdi
 8812 0095 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 8812      00
 8813 009a EB03     		jmp	.L462
 8814              	.L465:
 8815 009c 4889C3   		movq	%rax, %rbx
 8816              	.L462:
  13:../MemoryOutStream.h **** {
 8817              		.loc 2 13 0 discriminator 19
 8818 009f B8020000 		movl	$2, %eax
 8818      00
 8819 00a4 85C0     		testl	%eax, %eax
 8820 00a6 7412     		je	.L463
  13:../MemoryOutStream.h **** {
 8821              		.loc 2 13 0 discriminator 32
 8822 00a8 488B45E8 		movq	-24(%rbp), %rax
 8823 00ac 48059000 		addq	$144, %rax
 8823      0000
 8824 00b2 4889C7   		movq	%rax, %rdi
 8825 00b5 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 8825      00
 8826              	.L463:
 8827 00ba 4889D8   		movq	%rbx, %rax
 8828 00bd 4889C7   		movq	%rax, %rdi
 8829              	.LEHB163:
 8830 00c0 E8000000 		call	_Unwind_Resume
 8830      00
 8831              	.LEHE163:
 8832              	.L458:
 8833              	.LBE132:
  13:../MemoryOutStream.h **** {
 8834              		.loc 2 13 0
 8835 00c5 4883C418 		addq	$24, %rsp
 8836 00c9 5B       		popq	%rbx
 8837 00ca 5D       		popq	%rbp
 8838              		.cfi_def_cfa 7, 8
 8839 00cb C3       		ret
 8840              		.cfi_endproc
 8841              	.LFE1648:
 8842              		.section	.gcc_except_table
 8843              	.LLSDA1648:
 8844 0480 FF       		.byte	0xff
 8845 0481 FF       		.byte	0xff
 8846 0482 01       		.byte	0x1
 8847 0483 13       		.uleb128 .LLSDACSE1648-.LLSDACSB1648
 8848              	.LLSDACSB1648:
 8849 0484 38       		.uleb128 .LEHB160-.LFB1648
 8850 0485 05       		.uleb128 .LEHE160-.LEHB160
 8851 0486 8301     		.uleb128 .L464-.LFB1648
 8852 0488 00       		.uleb128 0
 8853 0489 4C       		.uleb128 .LEHB161-.LFB1648
 8854 048a 05       		.uleb128 .LEHE161-.LEHB161
 8855 048b 9C01     		.uleb128 .L465-.LFB1648
 8856 048d 00       		.uleb128 0
 8857 048e 67       		.uleb128 .LEHB162-.LFB1648
 8858 048f 05       		.uleb128 .LEHE162-.LEHB162
 8859 0490 00       		.uleb128 0
 8860 0491 00       		.uleb128 0
 8861 0492 C001     		.uleb128 .LEHB163-.LFB1648
 8862 0494 05       		.uleb128 .LEHE163-.LEHB163
 8863 0495 00       		.uleb128 0
 8864 0496 00       		.uleb128 0
 8865              	.LLSDACSE1648:
 8866              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 8868              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 8869              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 8871              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 8872              	.LFB1652:
  13:../MemoryOutStream.h **** {
 8873              		.loc 2 13 0 is_stmt 1
 8874              		.cfi_startproc
 8875 00cc 4C8B17   		movq	(%rdi), %r10
 8876 00cf 49037AE8 		addq	-24(%r10), %rdi
 8877 00d3 E928FFFF 		jmp	.LTHUNK0
 8877      FF
 8878              		.cfi_endproc
 8879              	.LFE1652:
 8881              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 8882              		.align 2
 8883              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 8885              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 8886              	.LFB1649:
  13:../MemoryOutStream.h **** {
 8887              		.loc 2 13 0
 8888              		.cfi_startproc
 8889 0000 55       		pushq	%rbp
 8890              		.cfi_def_cfa_offset 16
 8891              		.cfi_offset 6, -16
 8892 0001 4889E5   		movq	%rsp, %rbp
 8893              		.cfi_def_cfa_register 6
 8894 0004 4883EC10 		subq	$16, %rsp
 8895 0008 48897DF8 		movq	%rdi, -8(%rbp)
  13:../MemoryOutStream.h **** {
 8896              		.loc 2 13 0
 8897 000c 488B45F8 		movq	-8(%rbp), %rax
 8898 0010 4889C7   		movq	%rax, %rdi
 8899 0013 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8899      00
 8900 0018 488B45F8 		movq	-8(%rbp), %rax
 8901 001c 4889C7   		movq	%rax, %rdi
 8902 001f E8000000 		call	_ZdlPv
 8902      00
 8903 0024 C9       		leave
 8904              		.cfi_def_cfa 7, 8
 8905 0025 C3       		ret
 8906              		.cfi_endproc
 8907              	.LFE1649:
 8909              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 8910              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 8912              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 8913              	.LFB1653:
  13:../MemoryOutStream.h **** {
 8914              		.loc 2 13 0
 8915              		.cfi_startproc
 8916 0026 4C8B17   		movq	(%rdi), %r10
 8917 0029 49037AE8 		addq	-24(%r10), %rdi
 8918 002d EBD1     		jmp	.LTHUNK1
 8919              		.cfi_endproc
 8920              	.LFE1653:
 8922              		.section	.rodata
 8923              		.align 32
 8926              	_ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 8927 08a0 2A4E3132 		.string	"*N12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE"
 8927      5F474C4F 
 8927      42414C5F 
 8927      5F4E5F31 
 8927      33375465 
 8928 08d9 00000000 		.align 8
 8928      000000
 8931              	_ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 8932 08e0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 8932      00000000 
 8933 08e8 00000000 		.quad	_ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
 8933      00000000 
 8934 08f0 00000000 		.quad	_ZTIN8UnitTest4TestE
 8934      00000000 
 8935 08f8 00000000 		.align 32
 8935      00000000 
 8938              	_ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 8939 0900 2A4E3132 		.string	"*N12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE"
 8939      5F474C4F 
 8939      42414C5F 
 8939      5F4E5F31 
 8939      34335465 
 8940 093f 00       		.align 8
 8943              	_ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 8944 0940 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 8944      00000000 
 8945 0948 00000000 		.quad	_ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
 8945      00000000 
 8946 0950 00000000 		.quad	_ZTIN8UnitTest4TestE
 8946      00000000 
 8947 0958 00000000 		.align 32
 8947      00000000 
 8950              	_ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 8951 0960 2A4E3132 		.string	"*N12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE"
 8951      5F474C4F 
 8951      42414C5F 
 8951      5F4E5F31 
 8951      34335465 
 8952 099f 00       		.align 8
 8955              	_ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 8956 09a0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 8956      00000000 
 8957 09a8 00000000 		.quad	_ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
 8957      00000000 
 8958 09b0 00000000 		.quad	_ZTIN8UnitTest4TestE
 8958      00000000 
 8959 09b8 00000000 		.align 32
 8959      00000000 
 8962              	_ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 8963 09c0 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest"
 8963      31325F47 
 8963      4C4F4241 
 8963      4C5F5F4E 
 8963      5F313430 
 8964              		.align 8
 8967              	_ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 8968 0a18 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 8968      00000000 
 8969 0a20 00000000 		.quad	_ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
 8969      00000000 
 8970 0a28 00000000 		.quad	_ZTIN8UnitTest4TestE
 8970      00000000 
 8971 0a30 00000000 		.align 32
 8971      00000000 
 8971      00000000 
 8971      00000000 
 8974              	_ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 8975 0a40 2A4E3132 		.string	"*N12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE"
 8975      5F474C4F 
 8975      42414C5F 
 8975      5F4E5F31 
 8975      34305465 
 8976 0a7c 00000000 		.align 8
 8979              	_ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 8980 0a80 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 8980      00000000 
 8981 0a88 00000000 		.quad	_ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
 8981      00000000 
 8982 0a90 00000000 		.quad	_ZTIN8UnitTest4TestE
 8982      00000000 
 8983 0a98 00000000 		.align 32
 8983      00000000 
 8986              	_ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 8987 0aa0 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest"
 8987      31325F47 
 8987      4C4F4241 
 8987      4C5F5F4E 
 8987      5F313432 
 8988 0af7 00       		.align 8
 8991              	_ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 8992 0af8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 8992      00000000 
 8993 0b00 00000000 		.quad	_ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
 8993      00000000 
 8994 0b08 00000000 		.quad	_ZTIN8UnitTest4TestE
 8994      00000000 
 8995 0b10 00000000 		.align 32
 8995      00000000 
 8995      00000000 
 8995      00000000 
 8998              	_ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 8999 0b20 2A4E3132 		.string	"*N12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE"
 8999      5F474C4F 
 8999      42414C5F 
 8999      5F4E5F31 
 8999      34325465 
 9000 0b5e 0000     		.align 8
 9003              	_ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 9004 0b60 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9004      00000000 
 9005 0b68 00000000 		.quad	_ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
 9005      00000000 
 9006 0b70 00000000 		.quad	_ZTIN8UnitTest4TestE
 9006      00000000 
 9007 0b78 00000000 		.align 32
 9007      00000000 
 9010              	_ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 9011 0b80 2A4E3132 		.string	"*N12_GLOBAL__N_123TestCheckAssertSucceedsE"
 9011      5F474C4F 
 9011      42414C5F 
 9011      5F4E5F31 
 9011      32335465 
 9012 0bab 00000000 		.align 8
 9012      00
 9015              	_ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 9016 0bb0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9016      00000000 
 9017 0bb8 00000000 		.quad	_ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE
 9017      00000000 
 9018 0bc0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9018      00000000 
 9019 0bc8 00000000 		.align 32
 9019      00000000 
 9019      00000000 
 9019      00000000 
 9019      00000000 
 9022              	_ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException:
 9023 0be0 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 9023      31325F47 
 9023      4C4F4241 
 9023      4C5F5F4E 
 9023      5F313435 
 9024 0c3c 00000000 		.align 8
 9027              	_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException:
 9028 0c40 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 9028      00000000 
 9029 0c48 00000000 		.quad	_ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 9029      00000000 
 9030 0c50 00000000 		.align 32
 9030      00000000 
 9030      00000000 
 9030      00000000 
 9033              	_ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 9034 0c60 2A4E3132 		.string	"*N12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE"
 9034      5F474C4F 
 9034      42414C5F 
 9034      5F4E5F31 
 9034      34355465 
 9035 0ca1 00000000 		.align 8
 9035      000000
 9038              	_ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 9039 0ca8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9039      00000000 
 9040 0cb0 00000000 		.quad	_ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
 9040      00000000 
 9041 0cb8 00000000 		.quad	_ZTIN8UnitTest4TestE
 9041      00000000 
 9042              		.align 32
 9045              	_ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 9046 0cc0 2A4E3132 		.string	"*N12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE"
 9046      5F474C4F 
 9046      42414C5F 
 9046      5F4E5F31 
 9046      33355465 
 9047 0cf7 00       		.align 8
 9050              	_ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 9051 0cf8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9051      00000000 
 9052 0d00 00000000 		.quad	_ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
 9052      00000000 
 9053 0d08 00000000 		.quad	_ZTIN8UnitTest4TestE
 9053      00000000 
 9054 0d10 00000000 		.align 32
 9054      00000000 
 9054      00000000 
 9054      00000000 
 9057              	_ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 9058 0d20 2A4E3132 		.string	"*N12_GLOBAL__N_122TestArrayCloseSucceedsE"
 9058      5F474C4F 
 9058      42414C5F 
 9058      5F4E5F31 
 9058      32325465 
 9059 0d4a 00000000 		.align 8
 9059      0000
 9062              	_ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 9063 0d50 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9063      00000000 
 9064 0d58 00000000 		.quad	_ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE
 9064      00000000 
 9065 0d60 00000000 		.quad	_ZTIN8UnitTest4TestE
 9065      00000000 
 9066 0d68 00000000 		.align 32
 9066      00000000 
 9066      00000000 
 9066      00000000 
 9066      00000000 
 9069              	_ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 9070 0d80 2A4E3132 		.string	"*N12_GLOBAL__N_127TestValidCheckCloseSucceedsE"
 9070      5F474C4F 
 9070      42414C5F 
 9070      5F4E5F31 
 9070      32375465 
 9071 0daf 00       		.align 8
 9074              	_ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 9075 0db0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9075      00000000 
 9076 0db8 00000000 		.quad	_ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
 9076      00000000 
 9077 0dc0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9077      00000000 
 9078 0dc8 00000000 		.align 32
 9078      00000000 
 9078      00000000 
 9078      00000000 
 9078      00000000 
 9081              	_ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 9082 0de0 2A4E3132 		.string	"*N12_GLOBAL__N_131TestCheckEqualWorksWithPointersE"
 9082      5F474C4F 
 9082      42414C5F 
 9082      5F4E5F31 
 9082      33315465 
 9083 0e13 00000000 		.align 8
 9083      00
 9086              	_ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 9087 0e18 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9087      00000000 
 9088 0e20 00000000 		.quad	_ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
 9088      00000000 
 9089 0e28 00000000 		.quad	_ZTIN8UnitTest4TestE
 9089      00000000 
 9090 0e30 00000000 		.align 32
 9090      00000000 
 9090      00000000 
 9090      00000000 
 9093              	_ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 9094 0e40 2A4E3132 		.string	"*N12_GLOBAL__N_127TestValidCheckEqualSucceedsE"
 9094      5F474C4F 
 9094      42414C5F 
 9094      5F4E5F31 
 9094      32375465 
 9095 0e6f 00       		.align 8
 9098              	_ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 9099 0e70 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9099      00000000 
 9100 0e78 00000000 		.quad	_ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
 9100      00000000 
 9101 0e80 00000000 		.quad	_ZTIN8UnitTest4TestE
 9101      00000000 
 9102 0e88 00000000 		.align 32
 9102      00000000 
 9102      00000000 
 9102      00000000 
 9102      00000000 
 9105              	_ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 9106 0ea0 2A4E3132 		.string	"*N12_GLOBAL__N_126TestCheckWorksWithPointersE"
 9106      5F474C4F 
 9106      42414C5F 
 9106      5F4E5F31 
 9106      32365465 
 9107 0ece 0000     		.align 8
 9110              	_ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 9111 0ed0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9111      00000000 
 9112 0ed8 00000000 		.quad	_ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE
 9112      00000000 
 9113 0ee0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9113      00000000 
 9114 0ee8 00000000 		.align 32
 9114      00000000 
 9114      00000000 
 9114      00000000 
 9114      00000000 
 9117              	_ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE:
 9118 0f00 2A4E3132 		.string	"*N12_GLOBAL__N_122TestValidCheckSucceedsE"
 9118      5F474C4F 
 9118      42414C5F 
 9118      5F4E5F31 
 9118      32325465 
 9119 0f2a 00000000 		.align 8
 9119      0000
 9122              	_ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE:
 9123 0f30 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9123      00000000 
 9124 0f38 00000000 		.quad	_ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE
 9124      00000000 
 9125 0f40 00000000 		.quad	_ZTIN8UnitTest4TestE
 9125      00000000 
 9126              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 9127              		.section	.rodata._ZTIN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTIN8UnitTest15MemoryOutStreamE,
 9128              		.align 8
 9131              	_ZTIN8UnitTest15MemoryOutStreamE:
 9132 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9132      00000000 
 9133 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 9133      00000000 
 9134 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9134      00000000 
 9135              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 9136              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 9137              		.align 16
 9140              	_ZTSN8UnitTest15MemoryOutStreamE:
 9141 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 9141      69745465 
 9141      73743135 
 9141      4D656D6F 
 9141      72794F75 
 9142              		.text
 9144              	_Z41__static_initialization_and_destruction_0ii:
 9145              	.LFB1650:
 155:TestUnitTest++.cpp **** 
 156:TestUnitTest++.cpp **** }
 9146              		.loc 4 156 0
 9147              		.cfi_startproc
 9148 27cc 55       		pushq	%rbp
 9149              		.cfi_def_cfa_offset 16
 9150              		.cfi_offset 6, -16
 9151 27cd 4889E5   		movq	%rsp, %rbp
 9152              		.cfi_def_cfa_register 6
 9153 27d0 4883EC10 		subq	$16, %rsp
 9154 27d4 897DFC   		movl	%edi, -4(%rbp)
 9155 27d7 8975F8   		movl	%esi, -8(%rbp)
 9156              		.loc 4 156 0
 9157 27da 837DFC01 		cmpl	$1, -4(%rbp)
 9158 27de 0F85F302 		jne	.L469
 9158      0000
 9159              		.loc 4 156 0 is_stmt 0 discriminator 1
 9160 27e4 817DF8FF 		cmpl	$65535, -8(%rbp)
 9160      FF0000
 9161 27eb 0F85E602 		jne	.L469
 9161      0000
  11:TestUnitTest++.cpp **** {
 9162              		.loc 4 11 0 is_stmt 1
 9163 27f1 BF000000 		movl	$_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE, %edi
 9163      00
 9164 27f6 E805D8FF 		call	_ZN12_GLOBAL__N_122TestValidCheckSucceedsC1Ev
 9164      FF
 9165 27fb BA000000 		movl	$__dso_handle, %edx
 9165      00
 9166 2800 BE000000 		movl	$_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE, %esi
 9166      00
 9167 2805 BF000000 		movl	$_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev, %edi
 9167      00
 9168 280a E8000000 		call	__cxa_atexit
 9168      00
 9169 280f E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9169      00
 9170 2814 BA000000 		movl	$_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE, %edx
 9170      00
 9171 2819 4889C6   		movq	%rax, %rsi
 9172 281c BF000000 		movl	$_ZN12_GLOBAL__N_123adderValidCheckSucceedsE, %edi
 9172      00
 9173 2821 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9173      00
  17:TestUnitTest++.cpp **** {
 9174              		.loc 4 17 0
 9175 2826 BF000000 		movl	$_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE, %edi
 9175      00
 9176 282b E8F6D8FF 		call	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersC1Ev
 9176      FF
 9177 2830 BA000000 		movl	$__dso_handle, %edx
 9177      00
 9178 2835 BE000000 		movl	$_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE, %esi
 9178      00
 9179 283a BF000000 		movl	$_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev, %edi
 9179      00
 9180 283f E8000000 		call	__cxa_atexit
 9180      00
 9181 2844 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9181      00
 9182 2849 BA000000 		movl	$_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE, %edx
 9182      00
 9183 284e 4889C6   		movq	%rax, %rsi
 9184 2851 BF000000 		movl	$_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE, %edi
 9184      00
 9185 2856 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9185      00
  24:TestUnitTest++.cpp **** {
 9186              		.loc 4 24 0
 9187 285b BF000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE, %edi
 9187      00
 9188 2860 E89DDAFF 		call	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC1Ev
 9188      FF
 9189 2865 BA000000 		movl	$__dso_handle, %edx
 9189      00
 9190 286a BE000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE, %esi
 9190      00
 9191 286f BF000000 		movl	$_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev, %edi
 9191      00
 9192 2874 E8000000 		call	__cxa_atexit
 9192      00
 9193 2879 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9193      00
 9194 287e BA000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE, %edx
 9194      00
 9195 2883 4889C6   		movq	%rax, %rsi
 9196 2886 BF000000 		movl	$_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE, %edi
 9196      00
 9197 288b E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9197      00
  31:TestUnitTest++.cpp **** {
 9198              		.loc 4 31 0
 9199 2890 BF000000 		movl	$_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE, %edi
 9199      00
 9200 2895 E882DBFF 		call	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC1Ev
 9200      FF
 9201 289a BA000000 		movl	$__dso_handle, %edx
 9201      00
 9202 289f BE000000 		movl	$_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE, %esi
 9202      00
 9203 28a4 BF000000 		movl	$_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev, %edi
 9203      00
 9204 28a9 E8000000 		call	__cxa_atexit
 9204      00
 9205 28ae E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9205      00
 9206 28b3 BA000000 		movl	$_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE, %edx
 9206      00
 9207 28b8 4889C6   		movq	%rax, %rsi
 9208 28bb BF000000 		movl	$_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE, %edi
 9208      00
 9209 28c0 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9209      00
  37:TestUnitTest++.cpp **** {
 9210              		.loc 4 37 0
 9211 28c5 BF000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE, %edi
 9211      00
 9212 28ca E86BDCFF 		call	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC1Ev
 9212      FF
 9213 28cf BA000000 		movl	$__dso_handle, %edx
 9213      00
 9214 28d4 BE000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE, %esi
 9214      00
 9215 28d9 BF000000 		movl	$_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev, %edi
 9215      00
 9216 28de E8000000 		call	__cxa_atexit
 9216      00
 9217 28e3 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9217      00
 9218 28e8 BA000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE, %edx
 9218      00
 9219 28ed 4889C6   		movq	%rax, %rsi
 9220 28f0 BF000000 		movl	$_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE, %edi
 9220      00
 9221 28f5 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9221      00
  43:TestUnitTest++.cpp **** {
 9222              		.loc 4 43 0
 9223 28fa BF000000 		movl	$_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE, %edi
 9223      00
 9224 28ff E83ADEFF 		call	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC1Ev
 9224      FF
 9225 2904 BA000000 		movl	$__dso_handle, %edx
 9225      00
 9226 2909 BE000000 		movl	$_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE, %esi
 9226      00
 9227 290e BF000000 		movl	$_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev, %edi
 9227      00
 9228 2913 E8000000 		call	__cxa_atexit
 9228      00
 9229 2918 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9229      00
 9230 291d BA000000 		movl	$_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE, %edx
 9230      00
 9231 2922 4889C6   		movq	%rax, %rsi
 9232 2925 BF000000 		movl	$_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE, %edi
 9232      00
 9233 292a E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9233      00
  50:TestUnitTest++.cpp **** {
 9234              		.loc 4 50 0
 9235 292f BF000000 		movl	$_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE, %edi
 9235      00
 9236 2934 E87DDFFF 		call	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC1Ev
 9236      FF
 9237 2939 BA000000 		movl	$__dso_handle, %edx
 9237      00
 9238 293e BE000000 		movl	$_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE, %esi
 9238      00
 9239 2943 BF000000 		movl	$_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev, %edi
 9239      00
 9240 2948 E8000000 		call	__cxa_atexit
 9240      00
 9241 294d E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9241      00
 9242 2952 BA000000 		movl	$_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE, %edx
 9242      00
 9243 2957 4889C6   		movq	%rax, %rsi
 9244 295a BF000000 		movl	$_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE, %edi
 9244      00
 9245 295f E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9245      00
  59:TestUnitTest++.cpp **** {
 9246              		.loc 4 59 0
 9247 2964 BF000000 		movl	$_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE, %edi
 9247      00
 9248 2969 E82EE1FF 		call	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC1Ev
 9248      FF
 9249 296e BA000000 		movl	$__dso_handle, %edx
 9249      00
 9250 2973 BE000000 		movl	$_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE, %esi
 9250      00
 9251 2978 BF000000 		movl	$_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev, %edi
 9251      00
 9252 297d E8000000 		call	__cxa_atexit
 9252      00
 9253 2982 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9253      00
 9254 2987 BA000000 		movl	$_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE, %edx
 9254      00
 9255 298c 4889C6   		movq	%rax, %rsi
 9256 298f BF000000 		movl	$_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE, %edi
 9256      00
 9257 2994 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9257      00
  65:TestUnitTest++.cpp **** {
 9258              		.loc 4 65 0
 9259 2999 BF000000 		movl	$_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE, %edi
 9259      00
 9260 299e E8FDE1FF 		call	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC1Ev
 9260      FF
 9261 29a3 BA000000 		movl	$__dso_handle, %edx
 9261      00
 9262 29a8 BE000000 		movl	$_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE, %esi
 9262      00
 9263 29ad BF000000 		movl	$_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev, %edi
 9263      00
 9264 29b2 E8000000 		call	__cxa_atexit
 9264      00
 9265 29b7 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9265      00
 9266 29bc BA000000 		movl	$_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE, %edx
 9266      00
 9267 29c1 4889C6   		movq	%rax, %rsi
 9268 29c4 BF000000 		movl	$_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE, %edi
 9268      00
 9269 29c9 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9269      00
  70:TestUnitTest++.cpp **** {
 9270              		.loc 4 70 0
 9271 29ce BF000000 		movl	$_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE, %edi
 9271      00
 9272 29d3 E8C4E2FF 		call	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC1Ev
 9272      FF
 9273 29d8 BA000000 		movl	$__dso_handle, %edx
 9273      00
 9274 29dd BE000000 		movl	$_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE, %esi
 9274      00
 9275 29e2 BF000000 		movl	$_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev, %edi
 9275      00
 9276 29e7 E8000000 		call	__cxa_atexit
 9276      00
 9277 29ec E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9277      00
 9278 29f1 BA000000 		movl	$_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE, %edx
 9278      00
 9279 29f6 4889C6   		movq	%rax, %rsi
 9280 29f9 BF000000 		movl	$_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE, %edi
 9280      00
 9281 29fe E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9281      00
  97:TestUnitTest++.cpp **** {
 9282              		.loc 4 97 0
 9283 2a03 BF000000 		movl	$_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE, %edi
 9283      00
 9284 2a08 E817E5FF 		call	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC1Ev
 9284      FF
 9285 2a0d BA000000 		movl	$__dso_handle, %edx
 9285      00
 9286 2a12 BE000000 		movl	$_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE, %esi
 9286      00
 9287 2a17 BF000000 		movl	$_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev, %edi
 9287      00
 9288 2a1c E8000000 		call	__cxa_atexit
 9288      00
 9289 2a21 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9289      00
 9290 2a26 BA000000 		movl	$_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE, %edx
 9290      00
 9291 2a2b 4889C6   		movq	%rax, %rsi
 9292 2a2e BF000000 		movl	$_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE, %edi
 9292      00
 9293 2a33 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9293      00
 136:TestUnitTest++.cpp **** {
 9294              		.loc 4 136 0
 9295 2a38 BF000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE, %edi
 9295      00
 9296 2a3d E800E8FF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC1Ev
 9296      FF
 9297 2a42 BA000000 		movl	$__dso_handle, %edx
 9297      00
 9298 2a47 BE000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE, %esi
 9298      00
 9299 2a4c BF000000 		movl	$_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev, %edi
 9299      00
 9300 2a51 E8000000 		call	__cxa_atexit
 9300      00
 9301 2a56 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9301      00
 9302 2a5b BA000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE, %edx
 9302      00
 9303 2a60 4889C6   		movq	%rax, %rsi
 9304 2a63 BF000000 		movl	$_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE, %edi
 9304      00
 9305 2a68 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9305      00
 141:TestUnitTest++.cpp **** {
 9306              		.loc 4 141 0
 9307 2a6d BF000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE, %edi
 9307      00
 9308 2a72 E841ECFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC1Ev
 9308      FF
 9309 2a77 BA000000 		movl	$__dso_handle, %edx
 9309      00
 9310 2a7c BE000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE, %esi
 9310      00
 9311 2a81 BF000000 		movl	$_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev, %edi
 9311      00
 9312 2a86 E8000000 		call	__cxa_atexit
 9312      00
 9313 2a8b E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9313      00
 9314 2a90 BA000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE, %edx
 9314      00
 9315 2a95 4889C6   		movq	%rax, %rsi
 9316 2a98 BF000000 		movl	$_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE, %edi
 9316      00
 9317 2a9d E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9317      00
 151:TestUnitTest++.cpp **** {
 9318              		.loc 4 151 0
 9319 2aa2 BF000000 		movl	$_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE, %edi
 9319      00
 9320 2aa7 E828F1FF 		call	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC1Ev
 9320      FF
 9321 2aac BA000000 		movl	$__dso_handle, %edx
 9321      00
 9322 2ab1 BE000000 		movl	$_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE, %esi
 9322      00
 9323 2ab6 BF000000 		movl	$_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev, %edi
 9323      00
 9324 2abb E8000000 		call	__cxa_atexit
 9324      00
 9325 2ac0 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9325      00
 9326 2ac5 BA000000 		movl	$_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE, %edx
 9326      00
 9327 2aca 4889C6   		movq	%rax, %rsi
 9328 2acd BF000000 		movl	$_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE, %edi
 9328      00
 9329 2ad2 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9329      00
 9330              	.L469:
 9331              		.loc 4 156 0
 9332 2ad7 90       		nop
 9333 2ad8 C9       		leave
 9334              		.cfi_def_cfa 7, 8
 9335 2ad9 C3       		ret
 9336              		.cfi_endproc
 9337              	.LFE1650:
 9340              	_GLOBAL__sub_I_TestUnitTest__.cpp:
 9341              	.LFB1651:
 9342              		.loc 4 156 0
 9343              		.cfi_startproc
 9344 2ada 55       		pushq	%rbp
 9345              		.cfi_def_cfa_offset 16
 9346              		.cfi_offset 6, -16
 9347 2adb 4889E5   		movq	%rsp, %rbp
 9348              		.cfi_def_cfa_register 6
 9349              		.loc 4 156 0
 9350 2ade BEFFFF00 		movl	$65535, %esi
 9350      00
 9351 2ae3 BF010000 		movl	$1, %edi
 9351      00
 9352 2ae8 E8DFFCFF 		call	_Z41__static_initialization_and_destruction_0ii
 9352      FF
 9353 2aed 5D       		popq	%rbp
 9354              		.cfi_def_cfa 7, 8
 9355 2aee C3       		ret
 9356              		.cfi_endproc
 9357              	.LFE1651:
 9359              		.section	.init_array,"aw"
 9360              		.align 8
 9361 0000 00000000 		.quad	_GLOBAL__sub_I_TestUnitTest__.cpp
 9361      00000000 
 9362              		.section	.rodata
 9363              		.align 4
 9364              	.LC15:
 9365 0f48 0AD7233C 		.long	1008981770
 9366              		.align 4
 9367              	.LC16:
 9368 0f4c 62100040 		.long	1073746018
 9369              		.align 4
 9370              	.LC17:
 9371 0f50 00000040 		.long	1073741824
 9372              		.align 4
 9373              	.LC21:
 9374 0f54 0000803F 		.long	1065353216
 9375              		.align 4
 9376              	.LC22:
 9377 0f58 00004040 		.long	1077936128
 9378              		.align 4
 9379              	.LC23:
 9380 0f5c D7A30040 		.long	1073783767
 9381              		.align 4
 9382              	.LC24:
 9383 0f60 CDCCCC3D 		.long	1036831949
 9384              		.align 4
 9385              	.LC28:
 9386 0f64 17B7D138 		.long	953267991
 9387              		.text
 9388              	.Letext0:
 9389              		.file 15 "../TestDetails.h"
 9390              		.file 16 "../TestList.h"
 9391              		.file 17 "../TestResults.h"
 9392              		.file 18 "../PosixUtils/SignalTranslator.h"
 9393              		.file 19 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h"
 9394              		.file 20 "/usr/include/c++/5/bits/basic_string.h"
 9395              		.file 21 "/usr/include/c++/5/bits/basic_string.tcc"
 9396              		.file 22 "/usr/include/c++/5/bits/stringfwd.h"
 9397              		.file 23 "/usr/include/c++/5/cwchar"
 9398              		.file 24 "/usr/include/c++/5/bits/cpp_type_traits.h"
 9399              		.file 25 "/usr/include/c++/5/bits/char_traits.h"
 9400              		.file 26 "/usr/include/c++/5/clocale"
 9401              		.file 27 "/usr/include/c++/5/cwctype"
 9402              		.file 28 "/usr/include/c++/5/bits/vector.tcc"
 9403              		.file 29 "/usr/include/c++/5/debug/debug.h"
 9404              		.file 30 "/usr/include/c++/5/bits/predefined_ops.h"
 9405              		.file 31 "/usr/include/c++/5/ext/numeric_traits.h"
 9406              		.file 32 "/usr/include/c++/5/ext/type_traits.h"
 9407              		.file 33 "/usr/include/stdio.h"
 9408              		.file 34 "<built-in>"
 9409              		.file 35 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 9410              		.file 36 "/usr/include/wchar.h"
 9411              		.file 37 "/usr/include/time.h"
 9412              		.file 38 "/usr/include/locale.h"
 9413              		.file 39 "/usr/include/x86_64-linux-gnu/bits/types.h"
 9414              		.file 40 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 9415              		.file 41 "/usr/include/wctype.h"
 9416              		.file 42 "/usr/include/x86_64-linux-gnu/bits/sigset.h"
 9417              		.file 43 "/usr/include/setjmp.h"
 9418              		.file 44 "/usr/include/x86_64-linux-gnu/bits/siginfo.h"
 9419              		.file 45 "/usr/include/signal.h"
 9420              		.file 46 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 9421              		.file 47 "/usr/include/x86_64-linux-gnu/sys/time.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestUnitTest++.cpp
     /tmp/ccN6yNFo.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/ccN6yNFo.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/ccN6yNFo.s:8698   .rodata._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/ccN6yNFo.s:8682   .rodata._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/ccN6yNFo.s:146    .text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:0000000000000000 _ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
     /tmp/ccN6yNFo.s:146    .text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:0000000000000000 _ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
     /tmp/ccN6yNFo.s:200    .text._ZN17ScopedCurrentTestD2Ev:0000000000000000 _ZN17ScopedCurrentTestD2Ev
     /tmp/ccN6yNFo.s:200    .text._ZN17ScopedCurrentTestD2Ev:0000000000000000 _ZN17ScopedCurrentTestD1Ev
     /tmp/ccN6yNFo.s:243    .text:0000000000000000 _ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev
     /tmp/ccN6yNFo.s:8606   .rodata:0000000000000878 _ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/ccN6yNFo.s:243    .text:0000000000000000 _ZN12_GLOBAL__N_122TestValidCheckSucceedsC1Ev
     /tmp/ccN6yNFo.s:278    .bss:0000000000000000 _ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE
     /tmp/ccN6yNFo.s:278    .bss:0000000000000038 _ZN12_GLOBAL__N_123adderValidCheckSucceedsE
     /tmp/ccN6yNFo.s:290    .text:0000000000000040 _ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv
     /tmp/ccN6yNFo.s:4386   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/ccN6yNFo.s:429    .text:0000000000000126 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersC2Ev
     /tmp/ccN6yNFo.s:8531   .rodata:0000000000000850 _ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/ccN6yNFo.s:429    .text:0000000000000126 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersC1Ev
     /tmp/ccN6yNFo.s:463    .bss:0000000000000040 _ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE
     /tmp/ccN6yNFo.s:463    .bss:0000000000000078 _ZN12_GLOBAL__N_127adderCheckWorksWithPointersE
     /tmp/ccN6yNFo.s:480    .text:0000000000000166 _ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv
     /tmp/ccN6yNFo.s:4410   .text._ZN8UnitTest5CheckIPvEEbT_:0000000000000000 _ZN8UnitTest5CheckIPvEEbT_
     /tmp/ccN6yNFo.s:699    .text:0000000000000302 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC2Ev
     /tmp/ccN6yNFo.s:8456   .rodata:0000000000000828 _ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/ccN6yNFo.s:699    .text:0000000000000302 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC1Ev
     /tmp/ccN6yNFo.s:733    .bss:0000000000000080 _ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE
     /tmp/ccN6yNFo.s:733    .bss:00000000000000b8 _ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE
     /tmp/ccN6yNFo.s:743    .text:0000000000000342 _ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv
     /tmp/ccN6yNFo.s:4438   .text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccN6yNFo.s:877    .text:000000000000041c _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC2Ev
     /tmp/ccN6yNFo.s:8381   .rodata:0000000000000800 _ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/ccN6yNFo.s:877    .text:000000000000041c _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC1Ev
     /tmp/ccN6yNFo.s:911    .bss:00000000000000c0 _ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE
     /tmp/ccN6yNFo.s:911    .bss:00000000000000f8 _ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE
     /tmp/ccN6yNFo.s:921    .text:000000000000045c _ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv
     /tmp/ccN6yNFo.s:4579   .text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccN6yNFo.s:1065   .text:000000000000053a _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC2Ev
     /tmp/ccN6yNFo.s:8306   .rodata:00000000000007d8 _ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/ccN6yNFo.s:1065   .text:000000000000053a _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC1Ev
     /tmp/ccN6yNFo.s:1099   .bss:0000000000000100 _ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE
     /tmp/ccN6yNFo.s:1099   .bss:0000000000000138 _ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE
     /tmp/ccN6yNFo.s:1112   .text:000000000000057a _ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv
     /tmp/ccN6yNFo.s:4723   .text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
     /tmp/ccN6yNFo.s:1348   .text:000000000000073e _ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev
     /tmp/ccN6yNFo.s:8231   .rodata:00000000000007b0 _ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/ccN6yNFo.s:1348   .text:000000000000073e _ZN12_GLOBAL__N_122TestArrayCloseSucceedsC1Ev
     /tmp/ccN6yNFo.s:1382   .bss:0000000000000140 _ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE
     /tmp/ccN6yNFo.s:1382   .bss:0000000000000178 _ZN12_GLOBAL__N_123adderArrayCloseSucceedsE
     /tmp/ccN6yNFo.s:1392   .text:000000000000077e _ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv
     /tmp/ccN6yNFo.s:4895   .text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
     /tmp/ccN6yNFo.s:1554   .text:00000000000008b6 _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC2Ev
     /tmp/ccN6yNFo.s:8156   .rodata:0000000000000788 _ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/ccN6yNFo.s:1554   .text:00000000000008b6 _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC1Ev
     /tmp/ccN6yNFo.s:1588   .bss:0000000000000180 _ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE
     /tmp/ccN6yNFo.s:1588   .bss:00000000000001b8 _ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE
     /tmp/ccN6yNFo.s:1598   .text:00000000000008f6 _ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv
     /tmp/ccN6yNFo.s:5099   .text._ZNSaIfEC2Ev:0000000000000000 _ZNSaIfEC1Ev
     /tmp/ccN6yNFo.s:5160   .text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:0000000000000000 _ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
     /tmp/ccN6yNFo.s:5130   .text._ZNSaIfED2Ev:0000000000000000 _ZNSaIfED1Ev
     /tmp/ccN6yNFo.s:5337   .text._ZNSt6vectorIfSaIfEEixEm:0000000000000000 _ZNSt6vectorIfSaIfEEixEm
     /tmp/ccN6yNFo.s:5364   .text._ZNKSt6vectorIfSaIfEE4sizeEv:0000000000000000 _ZNKSt6vectorIfSaIfEE4sizeEv
     /tmp/ccN6yNFo.s:5392   .text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
     /tmp/ccN6yNFo.s:5250   .text._ZNSt6vectorIfSaIfEED2Ev:0000000000000000 _ZNSt6vectorIfSaIfEED1Ev
     /tmp/ccN6yNFo.s:1819   .text:0000000000000a9c _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC2Ev
     /tmp/ccN6yNFo.s:8081   .rodata:0000000000000760 _ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/ccN6yNFo.s:1819   .text:0000000000000a9c _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC1Ev
     /tmp/ccN6yNFo.s:1853   .bss:00000000000001c0 _ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE
     /tmp/ccN6yNFo.s:1853   .bss:00000000000001f8 _ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/ccN6yNFo.s:1863   .text:0000000000000adc _ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv
     /tmp/ccN6yNFo.s:9027   .rodata:0000000000000c40 _ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException
     /tmp/ccN6yNFo.s:1986   .text:0000000000000ba0 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev
     /tmp/ccN6yNFo.s:8006   .rodata:0000000000000738 _ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/ccN6yNFo.s:1986   .text:0000000000000ba0 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsC1Ev
     /tmp/ccN6yNFo.s:2020   .bss:0000000000000200 _ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE
     /tmp/ccN6yNFo.s:2020   .bss:0000000000000238 _ZN12_GLOBAL__N_124adderCheckAssertSucceedsE
     /tmp/ccN6yNFo.s:2034   .text:0000000000000be0 _ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv
     /tmp/ccN6yNFo.s:2156   .text:0000000000000c9c _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC2Ev
     /tmp/ccN6yNFo.s:7856   .rodata:00000000000006e8 _ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/ccN6yNFo.s:2156   .text:0000000000000c9c _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC1Ev
     /tmp/ccN6yNFo.s:2190   .bss:0000000000000240 _ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE
     /tmp/ccN6yNFo.s:2190   .bss:0000000000000278 _ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE
     /tmp/ccN6yNFo.s:2201   .text:0000000000000cdc _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC2Ev
     /tmp/ccN6yNFo.s:7931   .rodata:0000000000000710 _ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/ccN6yNFo.s:2201   .text:0000000000000cdc _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC1Ev
     /tmp/ccN6yNFo.s:2235   .text:0000000000000d18 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9DontThrowEv
     /tmp/ccN6yNFo.s:2260   .text:0000000000000d24 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7RunImplEv
     /tmp/ccN6yNFo.s:2322   .text:0000000000000daa _ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv
     /tmp/ccN6yNFo.s:7940   .text:00000000000023f8 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
     /tmp/ccN6yNFo.s:2555   .text:0000000000000f24 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC2Ev
     /tmp/ccN6yNFo.s:7706   .rodata:0000000000000698 _ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/ccN6yNFo.s:2555   .text:0000000000000f24 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC1Ev
     /tmp/ccN6yNFo.s:2589   .bss:0000000000000280 _ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE
     /tmp/ccN6yNFo.s:2589   .bss:00000000000002b8 _ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE
     /tmp/ccN6yNFo.s:2598   .text:0000000000000f64 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC2Ev
     /tmp/ccN6yNFo.s:7781   .rodata:00000000000006c0 _ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/ccN6yNFo.s:2598   .text:0000000000000f64 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC1Ev
     /tmp/ccN6yNFo.s:2636   .text:0000000000000fa0 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7RunImplEv
     /tmp/ccN6yNFo.s:2756   .text:000000000000106a _ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv
     /tmp/ccN6yNFo.s:7790   .text:0000000000002334 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
     /tmp/ccN6yNFo.s:2984   .text:00000000000011e4 _ZN12_GLOBAL__N_113SimpleFixtureC2Ev
     /tmp/ccN6yNFo.s:3035   .bss:00000000000002bc _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE
     /tmp/ccN6yNFo.s:3010   .text:00000000000011fe _ZN12_GLOBAL__N_113SimpleFixtureD2Ev
     /tmp/ccN6yNFo.s:3038   .text:0000000000001218 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccN6yNFo.s:3038   .text:0000000000001218 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccN6yNFo.s:3073   .text:0000000000001242 _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC2Ev
     /tmp/ccN6yNFo.s:7631   .rodata:0000000000000670 _ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/ccN6yNFo.s:3073   .text:0000000000001242 _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC1Ev
     /tmp/ccN6yNFo.s:3107   .bss:00000000000002c0 _ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE
     /tmp/ccN6yNFo.s:3107   .bss:00000000000002f8 _ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/ccN6yNFo.s:3112   .text:0000000000001282 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD2Ev
     /tmp/ccN6yNFo.s:3112   .text:0000000000001282 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD1Ev
     /tmp/ccN6yNFo.s:3149   .text:000000000000129e _ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv
     /tmp/ccN6yNFo.s:5605   .text:0000000000001c2d _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccN6yNFo.s:8743   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccN6yNFo.s:3479   .text:00000000000015a2 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv
     /tmp/ccN6yNFo.s:3616   .text:000000000000168e _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccN6yNFo.s:3616   .text:000000000000168e _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccN6yNFo.s:3651   .text:00000000000016b8 _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC2Ev
     /tmp/ccN6yNFo.s:7556   .rodata:0000000000000648 _ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/ccN6yNFo.s:3651   .text:00000000000016b8 _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC1Ev
     /tmp/ccN6yNFo.s:3685   .bss:0000000000000300 _ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE
     /tmp/ccN6yNFo.s:3685   .bss:0000000000000338 _ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/ccN6yNFo.s:3690   .text:00000000000016f8 _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD2Ev
     /tmp/ccN6yNFo.s:3690   .text:00000000000016f8 _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD1Ev
     /tmp/ccN6yNFo.s:3717   .text:0000000000001714 _ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv
     /tmp/ccN6yNFo.s:5950   .text:0000000000001eec _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccN6yNFo.s:4044   .text:0000000000001a18 _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv
     /tmp/ccN6yNFo.s:4182   .text:0000000000001af0 _ZN12_GLOBAL__N_19CheckBoolEb
     /tmp/ccN6yNFo.s:4322   .text:0000000000001bd4 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC2Ev
     /tmp/ccN6yNFo.s:7481   .rodata:0000000000000620 _ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/ccN6yNFo.s:4322   .text:0000000000001bd4 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC1Ev
     /tmp/ccN6yNFo.s:4356   .bss:0000000000000340 _ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE
     /tmp/ccN6yNFo.s:4356   .bss:0000000000000378 _ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE
     /tmp/ccN6yNFo.s:4361   .text:0000000000001c14 _ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv
     /tmp/ccN6yNFo.s:6296   .text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:0000000000000000 _ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
     /tmp/ccN6yNFo.s:6345   .text._ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_:0000000000000000 _ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
     /tmp/ccN6yNFo.s:5099   .text._ZNSaIfEC2Ev:0000000000000000 _ZNSaIfEC2Ev
     /tmp/ccN6yNFo.s:6408   .text._ZN9__gnu_cxx13new_allocatorIfEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC2Ev
     /tmp/ccN6yNFo.s:5130   .text._ZNSaIfED2Ev:0000000000000000 _ZNSaIfED2Ev
     /tmp/ccN6yNFo.s:6433   .text._ZN9__gnu_cxx13new_allocatorIfED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED2Ev
     /tmp/ccN6yNFo.s:5160   .text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:0000000000000000 _ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
     /tmp/ccN6yNFo.s:6487   .text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
     /tmp/ccN6yNFo.s:6654   .text._ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf:0000000000000000 _ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
     /tmp/ccN6yNFo.s:6567   .text._ZNSt12_Vector_baseIfSaIfEED2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED2Ev
     /tmp/ccN6yNFo.s:5250   .text._ZNSt6vectorIfSaIfEED2Ev:0000000000000000 _ZNSt6vectorIfSaIfEED2Ev
     /tmp/ccN6yNFo.s:6695   .text._ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
     /tmp/ccN6yNFo.s:6716   .text._ZSt8_DestroyIPffEvT_S1_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPffEvT_S1_RSaIT0_E
     /tmp/ccN6yNFo.s:6747   .text._ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_:0000000000000000 _ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
     /tmp/ccN6yNFo.s:6819   .text._ZNKSt6vectorIfSaIfEEixEm:0000000000000000 _ZNKSt6vectorIfSaIfEEixEm
     /tmp/ccN6yNFo.s:6408   .text._ZN9__gnu_cxx13new_allocatorIfEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC1Ev
     /tmp/ccN6yNFo.s:6433   .text._ZN9__gnu_cxx13new_allocatorIfED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED1Ev
     /tmp/ccN6yNFo.s:6457   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
     /tmp/ccN6yNFo.s:6457   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
     /tmp/ccN6yNFo.s:6846   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
     /tmp/ccN6yNFo.s:6886   .text._ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
     /tmp/ccN6yNFo.s:6487   .text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_
     /tmp/ccN6yNFo.s:6932   .text._ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
     /tmp/ccN6yNFo.s:6567   .text._ZNSt12_Vector_baseIfSaIfEED2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED1Ev
     /tmp/ccN6yNFo.s:6967   .text._ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E:0000000000000000 _ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E
     /tmp/ccN6yNFo.s:6998   .text._ZSt8_DestroyIPfEvT_S1_:0000000000000000 _ZSt8_DestroyIPfEvT_S1_
     /tmp/ccN6yNFo.s:6846   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_
     /tmp/ccN6yNFo.s:7028   .text._ZNSaIfEC2ERKS_:0000000000000000 _ZNSaIfEC2ERKS_
     /tmp/ccN6yNFo.s:7061   .text._ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
     /tmp/ccN6yNFo.s:7097   .text._ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
     /tmp/ccN6yNFo.s:7128   .text._ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_:0000000000000000 _ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_
     /tmp/ccN6yNFo.s:7160   .text._ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_:0000000000000000 _ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
     /tmp/ccN6yNFo.s:7183   .text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
     /tmp/ccN6yNFo.s:7028   .text._ZNSaIfEC2ERKS_:0000000000000000 _ZNSaIfEC1ERKS_
     /tmp/ccN6yNFo.s:7207   .text._ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
     /tmp/ccN6yNFo.s:7236   .text._ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
     /tmp/ccN6yNFo.s:7263   .text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_:0000000000000000 _ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_
     /tmp/ccN6yNFo.s:7183   .text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_
     /tmp/ccN6yNFo.s:7293   .text._ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
     /tmp/ccN6yNFo.s:7332   .text._ZSt6fill_nIPfmfET_S1_T0_RKT1_:0000000000000000 _ZSt6fill_nIPfmfET_S1_T0_RKT1_
     /tmp/ccN6yNFo.s:7367   .text._ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
     /tmp/ccN6yNFo.s:7388   .text._ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_:0000000000000000 _ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_
     /tmp/ccN6yNFo.s:7412   .text._ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_:0000000000000000 _ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_
     /tmp/ccN6yNFo.s:7458   .text._ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_:0000000000000000 _ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_
     /tmp/ccN6yNFo.s:8931   .rodata:00000000000008e0 _ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/ccN6yNFo.s:7490   .text:00000000000021ac _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev
     /tmp/ccN6yNFo.s:7528   .text:00000000000021e8 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev
     /tmp/ccN6yNFo.s:7490   .text:00000000000021ac _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD2Ev
     /tmp/ccN6yNFo.s:8943   .rodata:0000000000000940 _ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/ccN6yNFo.s:7565   .text:000000000000220e _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev
     /tmp/ccN6yNFo.s:7603   .text:000000000000224a _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev
     /tmp/ccN6yNFo.s:7565   .text:000000000000220e _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD2Ev
     /tmp/ccN6yNFo.s:8955   .rodata:00000000000009a0 _ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/ccN6yNFo.s:7640   .text:0000000000002270 _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev
     /tmp/ccN6yNFo.s:7678   .text:00000000000022ac _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev
     /tmp/ccN6yNFo.s:7640   .text:0000000000002270 _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD2Ev
     /tmp/ccN6yNFo.s:8979   .rodata:0000000000000a80 _ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/ccN6yNFo.s:7715   .text:00000000000022d2 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev
     /tmp/ccN6yNFo.s:7753   .text:000000000000230e _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev
     /tmp/ccN6yNFo.s:7715   .text:00000000000022d2 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD2Ev
     /tmp/ccN6yNFo.s:8967   .rodata:0000000000000a18 _ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/ccN6yNFo.s:7828   .text:0000000000002370 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0Ev
     /tmp/ccN6yNFo.s:7790   .text:0000000000002334 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev
     /tmp/ccN6yNFo.s:9003   .rodata:0000000000000b60 _ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/ccN6yNFo.s:7865   .text:0000000000002396 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev
     /tmp/ccN6yNFo.s:7903   .text:00000000000023d2 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev
     /tmp/ccN6yNFo.s:7865   .text:0000000000002396 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD2Ev
     /tmp/ccN6yNFo.s:8991   .rodata:0000000000000af8 _ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/ccN6yNFo.s:7978   .text:0000000000002434 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev
     /tmp/ccN6yNFo.s:7940   .text:00000000000023f8 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev
     /tmp/ccN6yNFo.s:9015   .rodata:0000000000000bb0 _ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/ccN6yNFo.s:8015   .text:000000000000245a _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev
     /tmp/ccN6yNFo.s:8053   .text:0000000000002496 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev
     /tmp/ccN6yNFo.s:8015   .text:000000000000245a _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev
     /tmp/ccN6yNFo.s:9038   .rodata:0000000000000ca8 _ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/ccN6yNFo.s:8090   .text:00000000000024bc _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev
     /tmp/ccN6yNFo.s:8128   .text:00000000000024f8 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev
     /tmp/ccN6yNFo.s:8090   .text:00000000000024bc _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD2Ev
     /tmp/ccN6yNFo.s:9050   .rodata:0000000000000cf8 _ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/ccN6yNFo.s:8165   .text:000000000000251e _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev
     /tmp/ccN6yNFo.s:8203   .text:000000000000255a _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev
     /tmp/ccN6yNFo.s:8165   .text:000000000000251e _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD2Ev
     /tmp/ccN6yNFo.s:9062   .rodata:0000000000000d50 _ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/ccN6yNFo.s:8240   .text:0000000000002580 _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev
     /tmp/ccN6yNFo.s:8278   .text:00000000000025bc _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev
     /tmp/ccN6yNFo.s:8240   .text:0000000000002580 _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev
     /tmp/ccN6yNFo.s:9074   .rodata:0000000000000db0 _ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/ccN6yNFo.s:8315   .text:00000000000025e2 _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev
     /tmp/ccN6yNFo.s:8353   .text:000000000000261e _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev
     /tmp/ccN6yNFo.s:8315   .text:00000000000025e2 _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD2Ev
     /tmp/ccN6yNFo.s:9086   .rodata:0000000000000e18 _ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/ccN6yNFo.s:8390   .text:0000000000002644 _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev
     /tmp/ccN6yNFo.s:8428   .text:0000000000002680 _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev
     /tmp/ccN6yNFo.s:8390   .text:0000000000002644 _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD2Ev
     /tmp/ccN6yNFo.s:9098   .rodata:0000000000000e70 _ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/ccN6yNFo.s:8465   .text:00000000000026a6 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev
     /tmp/ccN6yNFo.s:8503   .text:00000000000026e2 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev
     /tmp/ccN6yNFo.s:8465   .text:00000000000026a6 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD2Ev
     /tmp/ccN6yNFo.s:9110   .rodata:0000000000000ed0 _ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/ccN6yNFo.s:8540   .text:0000000000002708 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev
     /tmp/ccN6yNFo.s:8578   .text:0000000000002744 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev
     /tmp/ccN6yNFo.s:8540   .text:0000000000002708 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD2Ev
     /tmp/ccN6yNFo.s:9122   .rodata:0000000000000f30 _ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/ccN6yNFo.s:8615   .text:000000000000276a _ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev
     /tmp/ccN6yNFo.s:8653   .text:00000000000027a6 _ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev
     /tmp/ccN6yNFo.s:8615   .text:000000000000276a _ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev
     /tmp/ccN6yNFo.s:9131   .rodata._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/ccN6yNFo.s:8885   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccN6yNFo.s:8871   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000cc _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccN6yNFo.s:8912   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000026 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccN6yNFo.s:8711   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
     /tmp/ccN6yNFo.s:8728   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/ccN6yNFo.s:8926   .rodata:00000000000008a0 _ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/ccN6yNFo.s:8938   .rodata:0000000000000900 _ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/ccN6yNFo.s:8950   .rodata:0000000000000960 _ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/ccN6yNFo.s:8962   .rodata:00000000000009c0 _ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/ccN6yNFo.s:8974   .rodata:0000000000000a40 _ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/ccN6yNFo.s:8986   .rodata:0000000000000aa0 _ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/ccN6yNFo.s:8998   .rodata:0000000000000b20 _ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/ccN6yNFo.s:9010   .rodata:0000000000000b80 _ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/ccN6yNFo.s:9022   .rodata:0000000000000be0 _ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException
     /tmp/ccN6yNFo.s:9033   .rodata:0000000000000c60 _ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/ccN6yNFo.s:9045   .rodata:0000000000000cc0 _ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/ccN6yNFo.s:9057   .rodata:0000000000000d20 _ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/ccN6yNFo.s:9069   .rodata:0000000000000d80 _ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/ccN6yNFo.s:9081   .rodata:0000000000000de0 _ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/ccN6yNFo.s:9093   .rodata:0000000000000e40 _ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/ccN6yNFo.s:9105   .rodata:0000000000000ea0 _ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/ccN6yNFo.s:9117   .rodata:0000000000000f00 _ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/ccN6yNFo.s:9140   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/ccN6yNFo.s:9144   .text:00000000000027cc _Z41__static_initialization_and_destruction_0ii
     /tmp/ccN6yNFo.s:9340   .text:0000000000002ada _GLOBAL__sub_I_TestUnitTest__.cpp
                           .group:0000000000000000 _ZN17ScopedCurrentTestC5ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
                           .group:0000000000000000 _ZN17ScopedCurrentTestD5Ev
                           .group:0000000000000000 _ZNSaIfEC5Ev
                           .group:0000000000000000 _ZNSaIfED5Ev
                           .group:0000000000000000 _ZNSt6vectorIfSaIfEEC5EmRKfRKS0_
                           .group:0000000000000000 _ZNSt6vectorIfSaIfEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC5EmRKS0_
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC5ERKS0_
                           .group:0000000000000000 _ZNSaIfEC5ERKS_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC5ERKS1_

UNDEFINED SYMBOLS
__gxx_personality_v0
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
_ZN8UnitTest11CurrentTest7ResultsEv
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest4TestC2EPKcS2_S2_i
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_begin_catch
__cxa_end_catch
__stack_chk_fail
__cxa_allocate_exception
__cxa_throw
_ZN8UnitTest12ReportAssertEPKcS1_i
_ZTIN8UnitTest15AssertExceptionE
_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE
_ZN8UnitTest4Test3RunEv
_ZNK8UnitTest11TestResults15GetFailureCountEv
_ZTIPKc
_ZTIi
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZTISt9exception
_ZNSolsEi
_ZNSolsEPKv
_ZNSolsEf
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
_ZN8UnitTest16SignalTranslatorD1Ev
_ZdlPv
_ZSt17__throw_bad_allocv
_Znwm
_ZN8UnitTest4TestD2Ev
_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISo
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
_ZTVN10__cxxabiv117__class_type_infoE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
