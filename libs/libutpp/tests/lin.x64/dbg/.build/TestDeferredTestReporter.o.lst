   1              		.file	"TestDeferredTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 B8000000 		movl	$.LC0, %eax
  21      00
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 0009 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000a C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1057:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x3,__gxx_personality_v0
  39              		.cfi_lsda 0x3,.LLSDA1057
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 48059000 		addq	$144, %rax
  52      0000
  53 0017 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 001a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
  55      00
  56              	.LEHE0:
  57 001f B9000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %ecx
  57      00
  58 0024 488B45E8 		movq	-24(%rbp), %rax
  59 0028 BA100000 		movl	$16, %edx
  59      00
  60 002d 4889CE   		movq	%rcx, %rsi
  61 0030 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0033 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 9
  66 0038 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
  66      00
  67 003d 488B45E8 		movq	-24(%rbp), %rax
  68 0041 488910   		movq	%rdx, (%rax)
  69 0044 BA900000 		movl	$144, %edx
  69      00
  70 0049 488B45E8 		movq	-24(%rbp), %rax
  71 004d 4801D0   		addq	%rdx, %rax
  72 0050 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
  72      00
  73 0055 488910   		movq	%rdx, (%rax)
  74 0058 488B45E8 		movq	-24(%rbp), %rax
  75 005c 4883C070 		addq	$112, %rax
  76 0060 4889C7   		movq	%rax, %rdi
  77              	.LEHB2:
  78 0063 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
  78      00
  79              	.LEHE2:
  80              	.LBE2:
  81              		.loc 2 16 0
  82 0068 EB39     		jmp	.L9
  83              	.L7:
  84 006a 4889C3   		movq	%rax, %rbx
  85              	.LBB3:
  86 006d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
  86      00
  87 0072 488B45E8 		movq	-24(%rbp), %rax
  88 0076 4889D6   		movq	%rdx, %rsi
  89 0079 4889C7   		movq	%rax, %rdi
  90 007c E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
  90      00
  91 0081 EB03     		jmp	.L8
  92              	.L6:
  93 0083 4889C3   		movq	%rax, %rbx
  94              	.L8:
  95              		.loc 2 16 0 discriminator 28
  96 0086 488B45E8 		movq	-24(%rbp), %rax
  97 008a 48059000 		addq	$144, %rax
  97      0000
  98 0090 4889C7   		movq	%rax, %rdi
  99 0093 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
  99      00
 100 0098 4889D8   		movq	%rbx, %rax
 101 009b 4889C7   		movq	%rax, %rdi
 102              	.LEHB3:
 103 009e E8000000 		call	_Unwind_Resume
 103      00
 104              	.LEHE3:
 105              	.L9:
 106              	.LBE3:
 107              		.loc 2 16 0
 108 00a3 4883C418 		addq	$24, %rsp
 109 00a7 5B       		popq	%rbx
 110 00a8 5D       		popq	%rbp
 111              		.cfi_def_cfa 7, 8
 112 00a9 C3       		ret
 113              		.cfi_endproc
 114              	.LFE1057:
 115              		.globl	__gxx_personality_v0
 116              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 117              	.LLSDA1057:
 118 0000 FF       		.byte	0xff
 119 0001 FF       		.byte	0xff
 120 0002 01       		.byte	0x1
 121 0003 12       		.uleb128 .LLSDACSE1057-.LLSDACSB1057
 122              	.LLSDACSB1057:
 123 0004 1A       		.uleb128 .LEHB0-.LFB1057
 124 0005 05       		.uleb128 .LEHE0-.LEHB0
 125 0006 00       		.uleb128 0
 126 0007 00       		.uleb128 0
 127 0008 33       		.uleb128 .LEHB1-.LFB1057
 128 0009 05       		.uleb128 .LEHE1-.LEHB1
 129 000a 8301     		.uleb128 .L6-.LFB1057
 130 000c 00       		.uleb128 0
 131 000d 63       		.uleb128 .LEHB2-.LFB1057
 132 000e 05       		.uleb128 .LEHE2-.LEHB2
 133 000f 6A       		.uleb128 .L7-.LFB1057
 134 0010 00       		.uleb128 0
 135 0011 9E01     		.uleb128 .LEHB3-.LFB1057
 136 0013 05       		.uleb128 .LEHE3-.LEHB3
 137 0014 00       		.uleb128 0
 138 0015 00       		.uleb128 0
 139              	.LLSDACSE1057:
 140              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 142              		.text
 143              		.align 2
 145              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif:
 146              	.LFB1331:
 147              		.file 3 "TestDeferredTestReporter.cpp"
   1:TestDeferredTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestDeferredTestReporter.cpp **** #include "../DeferredTestReporter.h"
   3:TestDeferredTestReporter.cpp **** #include "../Config.h"
   4:TestDeferredTestReporter.cpp **** #include <cstring>
   5:TestDeferredTestReporter.cpp **** 
   6:TestDeferredTestReporter.cpp **** namespace UnitTest
   7:TestDeferredTestReporter.cpp **** {
   8:TestDeferredTestReporter.cpp **** 
   9:TestDeferredTestReporter.cpp **** namespace 
  10:TestDeferredTestReporter.cpp **** {
  11:TestDeferredTestReporter.cpp **** 
  12:TestDeferredTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestDeferredTestReporter.cpp **** 	MemoryOutStream& operator <<(MemoryOutStream& lhs, const std::string& rhs)
  14:TestDeferredTestReporter.cpp **** 	{
  15:TestDeferredTestReporter.cpp **** 		lhs << rhs.c_str();
  16:TestDeferredTestReporter.cpp **** 		return lhs;
  17:TestDeferredTestReporter.cpp **** 	}
  18:TestDeferredTestReporter.cpp **** #endif
  19:TestDeferredTestReporter.cpp **** 
  20:TestDeferredTestReporter.cpp **** struct MockDeferredTestReporter : public DeferredTestReporter
  21:TestDeferredTestReporter.cpp **** {
  22:TestDeferredTestReporter.cpp ****     virtual void ReportSummary(int, int, int, float) 
 148              		.loc 3 22 0 is_stmt 1
 149              		.cfi_startproc
 150 0000 55       		pushq	%rbp
 151              		.cfi_def_cfa_offset 16
 152              		.cfi_offset 6, -16
 153 0001 4889E5   		movq	%rsp, %rbp
 154              		.cfi_def_cfa_register 6
 155 0004 48897DF8 		movq	%rdi, -8(%rbp)
 156 0008 8975F4   		movl	%esi, -12(%rbp)
 157 000b 8955F0   		movl	%edx, -16(%rbp)
 158 000e 894DEC   		movl	%ecx, -20(%rbp)
 159 0011 F30F1145 		movss	%xmm0, -24(%rbp)
 159      E8
  23:TestDeferredTestReporter.cpp ****     {
  24:TestDeferredTestReporter.cpp ****     }
 160              		.loc 3 24 0
 161 0016 90       		nop
 162 0017 5D       		popq	%rbp
 163              		.cfi_def_cfa 7, 8
 164 0018 C3       		ret
 165              		.cfi_endproc
 166              	.LFE1331:
 168              		.section	.text._ZN8UnitTest12TestReporterC2Ev,"axG",@progbits,_ZN8UnitTest12TestReporterC5Ev,comda
 169              		.align 2
 170              		.weak	_ZN8UnitTest12TestReporterC2Ev
 172              	_ZN8UnitTest12TestReporterC2Ev:
 173              	.LFB1336:
 174              		.file 4 "../TestReporter.h"
   1:../TestReporter.h **** #ifndef UNITTEST_TESTREPORTER_H
   2:../TestReporter.h **** #define UNITTEST_TESTREPORTER_H
   3:../TestReporter.h **** 
   4:../TestReporter.h **** namespace UnitTest {
   5:../TestReporter.h **** 
   6:../TestReporter.h **** class TestDetails;
   7:../TestReporter.h **** 
   8:../TestReporter.h **** class TestReporter
 175              		.loc 4 8 0
 176              		.cfi_startproc
 177 0000 55       		pushq	%rbp
 178              		.cfi_def_cfa_offset 16
 179              		.cfi_offset 6, -16
 180 0001 4889E5   		movq	%rsp, %rbp
 181              		.cfi_def_cfa_register 6
 182 0004 48897DF8 		movq	%rdi, -8(%rbp)
 183              	.LBB4:
 184              		.loc 4 8 0
 185 0008 BA000000 		movl	$_ZTVN8UnitTest12TestReporterE+16, %edx
 185      00
 186 000d 488B45F8 		movq	-8(%rbp), %rax
 187 0011 488910   		movq	%rdx, (%rax)
 188              	.LBE4:
 189 0014 90       		nop
 190 0015 5D       		popq	%rbp
 191              		.cfi_def_cfa 7, 8
 192 0016 C3       		ret
 193              		.cfi_endproc
 194              	.LFE1336:
 196              		.weak	_ZN8UnitTest12TestReporterC1Ev
 197              		.set	_ZN8UnitTest12TestReporterC1Ev,_ZN8UnitTest12TestReporterC2Ev
 198              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 199              		.align 2
 200              		.weak	_ZN8UnitTest20DeferredTestReporterC2Ev
 202              	_ZN8UnitTest20DeferredTestReporterC2Ev:
 203              	.LFB1338:
 204              		.file 5 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 205              		.loc 5 12 0
 206              		.cfi_startproc
 207              		.cfi_personality 0x3,__gxx_personality_v0
 208              		.cfi_lsda 0x3,.LLSDA1338
 209 0000 55       		pushq	%rbp
 210              		.cfi_def_cfa_offset 16
 211              		.cfi_offset 6, -16
 212 0001 4889E5   		movq	%rsp, %rbp
 213              		.cfi_def_cfa_register 6
 214 0004 53       		pushq	%rbx
 215 0005 4883EC18 		subq	$24, %rsp
 216              		.cfi_offset 3, -24
 217 0009 48897DE8 		movq	%rdi, -24(%rbp)
 218              	.LBB5:
 219              		.loc 5 12 0
 220 000d 488B45E8 		movq	-24(%rbp), %rax
 221 0011 4889C7   		movq	%rax, %rdi
 222 0014 E8000000 		call	_ZN8UnitTest12TestReporterC2Ev
 222      00
 223 0019 BA000000 		movl	$_ZTVN8UnitTest20DeferredTestReporterE+16, %edx
 223      00
 224 001e 488B45E8 		movq	-24(%rbp), %rax
 225 0022 488910   		movq	%rdx, (%rax)
 226 0025 488B45E8 		movq	-24(%rbp), %rax
 227 0029 4883C008 		addq	$8, %rax
 228 002d 4889C7   		movq	%rax, %rdi
 229              	.LEHB4:
 230 0030 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 230      00
 231              	.LEHE4:
 232              	.LBE5:
 233 0035 EB1A     		jmp	.L15
 234              	.L14:
 235 0037 4889C3   		movq	%rax, %rbx
 236              	.LBB6:
 237 003a 488B45E8 		movq	-24(%rbp), %rax
 238 003e 4889C7   		movq	%rax, %rdi
 239 0041 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 239      00
 240 0046 4889D8   		movq	%rbx, %rax
 241 0049 4889C7   		movq	%rax, %rdi
 242              	.LEHB5:
 243 004c E8000000 		call	_Unwind_Resume
 243      00
 244              	.LEHE5:
 245              	.L15:
 246              	.LBE6:
 247 0051 4883C418 		addq	$24, %rsp
 248 0055 5B       		popq	%rbx
 249 0056 5D       		popq	%rbp
 250              		.cfi_def_cfa 7, 8
 251 0057 C3       		ret
 252              		.cfi_endproc
 253              	.LFE1338:
 254              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterC2Ev,"aG",@progbits,_ZN8UnitTest20Def
 255              	.LLSDA1338:
 256 0000 FF       		.byte	0xff
 257 0001 FF       		.byte	0xff
 258 0002 01       		.byte	0x1
 259 0003 08       		.uleb128 .LLSDACSE1338-.LLSDACSB1338
 260              	.LLSDACSB1338:
 261 0004 30       		.uleb128 .LEHB4-.LFB1338
 262 0005 05       		.uleb128 .LEHE4-.LEHB4
 263 0006 37       		.uleb128 .L14-.LFB1338
 264 0007 00       		.uleb128 0
 265 0008 4C       		.uleb128 .LEHB5-.LFB1338
 266 0009 05       		.uleb128 .LEHE5-.LEHB5
 267 000a 00       		.uleb128 0
 268 000b 00       		.uleb128 0
 269              	.LLSDACSE1338:
 270              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 272              		.weak	_ZN8UnitTest20DeferredTestReporterC1Ev
 273              		.set	_ZN8UnitTest20DeferredTestReporterC1Ev,_ZN8UnitTest20DeferredTestReporterC2Ev
 274              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 275              		.align 2
 276              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 278              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 279              	.LFB1341:
 280              		.loc 5 12 0
 281              		.cfi_startproc
 282              		.cfi_personality 0x3,__gxx_personality_v0
 283              		.cfi_lsda 0x3,.LLSDA1341
 284 0000 55       		pushq	%rbp
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 6, -16
 287 0001 4889E5   		movq	%rsp, %rbp
 288              		.cfi_def_cfa_register 6
 289 0004 53       		pushq	%rbx
 290 0005 4883EC18 		subq	$24, %rsp
 291              		.cfi_offset 3, -24
 292 0009 48897DE8 		movq	%rdi, -24(%rbp)
 293              	.LBB7:
 294              		.loc 5 12 0
 295 000d BA000000 		movl	$_ZTVN8UnitTest20DeferredTestReporterE+16, %edx
 295      00
 296 0012 488B45E8 		movq	-24(%rbp), %rax
 297 0016 488910   		movq	%rdx, (%rax)
 298 0019 488B45E8 		movq	-24(%rbp), %rax
 299 001d 4883C008 		addq	$8, %rax
 300 0021 4889C7   		movq	%rax, %rdi
 301              	.LEHB6:
 302 0024 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 302      00
 303              	.LEHE6:
 304              		.loc 5 12 0 is_stmt 0 discriminator 2
 305 0029 488B45E8 		movq	-24(%rbp), %rax
 306 002d 4889C7   		movq	%rax, %rdi
 307              	.LEHB7:
 308 0030 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 308      00
 309              	.LEHE7:
 310              	.LBE7:
 311 0035 B8000000 		movl	$0, %eax
 311      00
 312 003a 85C0     		testl	%eax, %eax
 313 003c 7428     		je	.L16
 314              		.loc 5 12 0 discriminator 6
 315 003e 488B45E8 		movq	-24(%rbp), %rax
 316 0042 4889C7   		movq	%rax, %rdi
 317 0045 E8000000 		call	_ZdlPv
 317      00
 318 004a EB1A     		jmp	.L16
 319              	.L19:
 320 004c 4889C3   		movq	%rax, %rbx
 321              	.LBB8:
 322              		.loc 5 12 0
 323 004f 488B45E8 		movq	-24(%rbp), %rax
 324 0053 4889C7   		movq	%rax, %rdi
 325 0056 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 325      00
 326 005b 4889D8   		movq	%rbx, %rax
 327 005e 4889C7   		movq	%rax, %rdi
 328              	.LEHB8:
 329 0061 E8000000 		call	_Unwind_Resume
 329      00
 330              	.LEHE8:
 331              	.L16:
 332              	.LBE8:
 333 0066 4883C418 		addq	$24, %rsp
 334 006a 5B       		popq	%rbx
 335 006b 5D       		popq	%rbp
 336              		.cfi_def_cfa 7, 8
 337 006c C3       		ret
 338              		.cfi_endproc
 339              	.LFE1341:
 340              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterD2Ev,"aG",@progbits,_ZN8UnitTest20Def
 341              	.LLSDA1341:
 342 0000 FF       		.byte	0xff
 343 0001 FF       		.byte	0xff
 344 0002 01       		.byte	0x1
 345 0003 0C       		.uleb128 .LLSDACSE1341-.LLSDACSB1341
 346              	.LLSDACSB1341:
 347 0004 24       		.uleb128 .LEHB6-.LFB1341
 348 0005 05       		.uleb128 .LEHE6-.LEHB6
 349 0006 4C       		.uleb128 .L19-.LFB1341
 350 0007 00       		.uleb128 0
 351 0008 30       		.uleb128 .LEHB7-.LFB1341
 352 0009 05       		.uleb128 .LEHE7-.LEHB7
 353 000a 00       		.uleb128 0
 354 000b 00       		.uleb128 0
 355 000c 61       		.uleb128 .LEHB8-.LFB1341
 356 000d 05       		.uleb128 .LEHE8-.LEHB8
 357 000e 00       		.uleb128 0
 358 000f 00       		.uleb128 0
 359              	.LLSDACSE1341:
 360              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 362              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 363              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 364              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 365              		.align 2
 366              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 368              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 369              	.LFB1343:
 370              		.loc 5 12 0 is_stmt 1
 371              		.cfi_startproc
 372 0000 55       		pushq	%rbp
 373              		.cfi_def_cfa_offset 16
 374              		.cfi_offset 6, -16
 375 0001 4889E5   		movq	%rsp, %rbp
 376              		.cfi_def_cfa_register 6
 377 0004 4883EC10 		subq	$16, %rsp
 378 0008 48897DF8 		movq	%rdi, -8(%rbp)
 379              		.loc 5 12 0
 380 000c 488B45F8 		movq	-8(%rbp), %rax
 381 0010 4889C7   		movq	%rax, %rdi
 382 0013 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 382      00
 383 0018 488B45F8 		movq	-8(%rbp), %rax
 384 001c 4889C7   		movq	%rax, %rdi
 385 001f E8000000 		call	_ZdlPv
 385      00
 386 0024 C9       		leave
 387              		.cfi_def_cfa 7, 8
 388 0025 C3       		ret
 389              		.cfi_endproc
 390              	.LFE1343:
 392              		.text
 393 0019 90       		.align 2
 395              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev:
 396              	.LFB1344:
  20:TestDeferredTestReporter.cpp **** {
 397              		.loc 3 20 0
 398              		.cfi_startproc
 399 001a 55       		pushq	%rbp
 400              		.cfi_def_cfa_offset 16
 401              		.cfi_offset 6, -16
 402 001b 4889E5   		movq	%rsp, %rbp
 403              		.cfi_def_cfa_register 6
 404 001e 4883EC10 		subq	$16, %rsp
 405 0022 48897DF8 		movq	%rdi, -8(%rbp)
 406              	.LBB9:
  20:TestDeferredTestReporter.cpp **** {
 407              		.loc 3 20 0
 408 0026 488B45F8 		movq	-8(%rbp), %rax
 409 002a 4889C7   		movq	%rax, %rdi
 410 002d E8000000 		call	_ZN8UnitTest20DeferredTestReporterC2Ev
 410      00
 411 0032 BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE+16, %edx
 411      00
 412 0037 488B45F8 		movq	-8(%rbp), %rax
 413 003b 488910   		movq	%rdx, (%rax)
 414              	.LBE9:
 415 003e 90       		nop
 416 003f C9       		leave
 417              		.cfi_def_cfa 7, 8
 418 0040 C3       		ret
 419              		.cfi_endproc
 420              	.LFE1344:
 422              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 423              		.section	.rodata
 424              	.LC1:
 425 000d 556E6971 		.string	"UniqueTestName"
 425      75655465 
 425      73744E61 
 425      6D6500
 426              	.LC2:
 427 001c 556E6971 		.string	"UniqueTestSuite"
 427      75655465 
 427      73745375 
 427      69746500 
 428              	.LC3:
 429 002c 66696C65 		.string	"filename.h"
 429      6E616D65 
 429      2E6800
 430              		.text
 431 0041 90       		.align 2
 433              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev:
 434              	.LFB1346:
  25:TestDeferredTestReporter.cpp **** };
  26:TestDeferredTestReporter.cpp **** 
  27:TestDeferredTestReporter.cpp **** struct DeferredTestReporterFixture
  28:TestDeferredTestReporter.cpp **** {
  29:TestDeferredTestReporter.cpp ****     DeferredTestReporterFixture()
 435              		.loc 3 29 0
 436              		.cfi_startproc
 437              		.cfi_personality 0x3,__gxx_personality_v0
 438              		.cfi_lsda 0x3,.LLSDA1346
 439 0042 55       		pushq	%rbp
 440              		.cfi_def_cfa_offset 16
 441              		.cfi_offset 6, -16
 442 0043 4889E5   		movq	%rsp, %rbp
 443              		.cfi_def_cfa_register 6
 444 0046 4155     		pushq	%r13
 445 0048 4154     		pushq	%r12
 446 004a 53       		pushq	%rbx
 447 004b 4883EC28 		subq	$40, %rsp
 448              		.cfi_offset 13, -24
 449              		.cfi_offset 12, -32
 450              		.cfi_offset 3, -40
 451 004f 48897DC8 		movq	%rdi, -56(%rbp)
 452              		.loc 3 29 0
 453 0053 64488B04 		movq	%fs:40, %rax
 453      25280000 
 453      00
 454 005c 488945D8 		movq	%rax, -40(%rbp)
 455 0060 31C0     		xorl	%eax, %eax
 456              	.LBB10:
  30:TestDeferredTestReporter.cpp ****         : testName("UniqueTestName")
  31:TestDeferredTestReporter.cpp ****         , testSuite("UniqueTestSuite")
  32:TestDeferredTestReporter.cpp ****         , fileName("filename.h")
  33:TestDeferredTestReporter.cpp ****         , lineNumber(12)
  34:TestDeferredTestReporter.cpp ****         , details(testName.c_str(), testSuite.c_str(), fileName.c_str(), lineNumber)
 457              		.loc 3 34 0
 458 0062 488B45C8 		movq	-56(%rbp), %rax
 459 0066 4889C7   		movq	%rax, %rdi
 460              	.LEHB9:
 461 0069 E8ACFFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev
 461      FF
 462              	.LEHE9:
 463 006e 488D45D7 		leaq	-41(%rbp), %rax
 464 0072 4889C7   		movq	%rax, %rdi
 465 0075 E8000000 		call	_ZNSaIcEC1Ev
 465      00
 466 007a 488B45C8 		movq	-56(%rbp), %rax
 467 007e 488D4820 		leaq	32(%rax), %rcx
 468 0082 488D45D7 		leaq	-41(%rbp), %rax
 469 0086 4889C2   		movq	%rax, %rdx
 470 0089 BE000000 		movl	$.LC1, %esi
 470      00
 471 008e 4889CF   		movq	%rcx, %rdi
 472              	.LEHB10:
 473 0091 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
 473      00
 474              	.LEHE10:
 475              		.loc 3 34 0 is_stmt 0 discriminator 2
 476 0096 488D45D7 		leaq	-41(%rbp), %rax
 477 009a 4889C7   		movq	%rax, %rdi
 478 009d E8000000 		call	_ZNSaIcED1Ev
 478      00
 479 00a2 488D45D7 		leaq	-41(%rbp), %rax
 480 00a6 4889C7   		movq	%rax, %rdi
 481 00a9 E8000000 		call	_ZNSaIcEC1Ev
 481      00
 482 00ae 488B45C8 		movq	-56(%rbp), %rax
 483 00b2 488D4840 		leaq	64(%rax), %rcx
 484 00b6 488D45D7 		leaq	-41(%rbp), %rax
 485 00ba 4889C2   		movq	%rax, %rdx
 486 00bd BE000000 		movl	$.LC2, %esi
 486      00
 487 00c2 4889CF   		movq	%rcx, %rdi
 488              	.LEHB11:
 489 00c5 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
 489      00
 490              	.LEHE11:
 491              		.loc 3 34 0 discriminator 4
 492 00ca 488D45D7 		leaq	-41(%rbp), %rax
 493 00ce 4889C7   		movq	%rax, %rdi
 494 00d1 E8000000 		call	_ZNSaIcED1Ev
 494      00
 495 00d6 488D45D7 		leaq	-41(%rbp), %rax
 496 00da 4889C7   		movq	%rax, %rdi
 497 00dd E8000000 		call	_ZNSaIcEC1Ev
 497      00
 498 00e2 488B45C8 		movq	-56(%rbp), %rax
 499 00e6 488D4860 		leaq	96(%rax), %rcx
 500 00ea 488D45D7 		leaq	-41(%rbp), %rax
 501 00ee 4889C2   		movq	%rax, %rdx
 502 00f1 BE000000 		movl	$.LC3, %esi
 502      00
 503 00f6 4889CF   		movq	%rcx, %rdi
 504              	.LEHB12:
 505 00f9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
 505      00
 506              	.LEHE12:
 507              		.loc 3 34 0 discriminator 6
 508 00fe 488D45D7 		leaq	-41(%rbp), %rax
 509 0102 4889C7   		movq	%rax, %rdi
 510 0105 E8000000 		call	_ZNSaIcED1Ev
 510      00
 511 010a 488B45C8 		movq	-56(%rbp), %rax
 512 010e C7808000 		movl	$12, 128(%rax)
 512      00000C00 
 512      0000
 513 0118 488B45C8 		movq	-56(%rbp), %rax
 514 011c 8B988000 		movl	128(%rax), %ebx
 514      0000
 515 0122 488B45C8 		movq	-56(%rbp), %rax
 516 0126 4883C060 		addq	$96, %rax
 517 012a 4889C7   		movq	%rax, %rdi
 518              	.LEHB13:
 519 012d E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 519      00
 520 0132 4989C5   		movq	%rax, %r13
 521 0135 488B45C8 		movq	-56(%rbp), %rax
 522 0139 4883C040 		addq	$64, %rax
 523 013d 4889C7   		movq	%rax, %rdi
 524 0140 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 524      00
 525              		.loc 3 34 0 discriminator 8
 526 0145 4989C4   		movq	%rax, %r12
 527 0148 488B45C8 		movq	-56(%rbp), %rax
 528 014c 4883C020 		addq	$32, %rax
 529 0150 4889C7   		movq	%rax, %rdi
 530 0153 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 530      00
 531              		.loc 3 34 0 discriminator 10
 532 0158 4889C6   		movq	%rax, %rsi
 533 015b 488B45C8 		movq	-56(%rbp), %rax
 534 015f 48058800 		addq	$136, %rax
 534      0000
 535 0165 4189D8   		movl	%ebx, %r8d
 536 0168 4C89E9   		movq	%r13, %rcx
 537 016b 4C89E2   		movq	%r12, %rdx
 538 016e 4889C7   		movq	%rax, %rdi
 539 0171 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 539      00
 540              	.LEHE13:
 541              	.LBE10:
  35:TestDeferredTestReporter.cpp ****     {
  36:TestDeferredTestReporter.cpp ****     }
 542              		.loc 3 36 0 is_stmt 1
 543 0176 EB7D     		jmp	.L35
 544              	.L31:
 545 0178 4889C3   		movq	%rax, %rbx
 546              	.LBB11:
  34:TestDeferredTestReporter.cpp ****     {
 547              		.loc 3 34 0
 548 017b 488D45D7 		leaq	-41(%rbp), %rax
 549 017f 4889C7   		movq	%rax, %rdi
 550 0182 E8000000 		call	_ZNSaIcED1Ev
 550      00
 551 0187 EB55     		jmp	.L24
 552              	.L32:
 553 0189 4889C3   		movq	%rax, %rbx
 554 018c 488D45D7 		leaq	-41(%rbp), %rax
 555 0190 4889C7   		movq	%rax, %rdi
 556 0193 E8000000 		call	_ZNSaIcED1Ev
 556      00
 557 0198 EB34     		jmp	.L26
 558              	.L33:
 559 019a 4889C3   		movq	%rax, %rbx
 560 019d 488D45D7 		leaq	-41(%rbp), %rax
 561 01a1 4889C7   		movq	%rax, %rdi
 562 01a4 E8000000 		call	_ZNSaIcED1Ev
 562      00
 563 01a9 EB13     		jmp	.L28
 564              	.L34:
 565 01ab 4889C3   		movq	%rax, %rbx
 566 01ae 488B45C8 		movq	-56(%rbp), %rax
 567 01b2 4883C060 		addq	$96, %rax
 568 01b6 4889C7   		movq	%rax, %rdi
 569 01b9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 569      00
 570              	.L28:
 571 01be 488B45C8 		movq	-56(%rbp), %rax
 572 01c2 4883C040 		addq	$64, %rax
 573 01c6 4889C7   		movq	%rax, %rdi
 574 01c9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 574      00
 575              	.L26:
 576 01ce 488B45C8 		movq	-56(%rbp), %rax
 577 01d2 4883C020 		addq	$32, %rax
 578 01d6 4889C7   		movq	%rax, %rdi
 579 01d9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 579      00
 580              	.L24:
 581 01de 488B45C8 		movq	-56(%rbp), %rax
 582 01e2 4889C7   		movq	%rax, %rdi
 583 01e5 E89A3300 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 583      00
 584 01ea 4889D8   		movq	%rbx, %rax
 585 01ed 4889C7   		movq	%rax, %rdi
 586              	.LEHB14:
 587 01f0 E8000000 		call	_Unwind_Resume
 587      00
 588              	.LEHE14:
 589              	.L35:
 590              	.LBE11:
 591              		.loc 3 36 0
 592 01f5 488B45D8 		movq	-40(%rbp), %rax
 593 01f9 64483304 		xorq	%fs:40, %rax
 593      25280000 
 593      00
 594 0202 7405     		je	.L30
 595 0204 E8000000 		call	__stack_chk_fail
 595      00
 596              	.L30:
 597 0209 4883C428 		addq	$40, %rsp
 598 020d 5B       		popq	%rbx
 599 020e 415C     		popq	%r12
 600 0210 415D     		popq	%r13
 601 0212 5D       		popq	%rbp
 602              		.cfi_def_cfa 7, 8
 603 0213 C3       		ret
 604              		.cfi_endproc
 605              	.LFE1346:
 606              		.section	.gcc_except_table,"a",@progbits
 607              	.LLSDA1346:
 608 0000 FF       		.byte	0xff
 609 0001 FF       		.byte	0xff
 610 0002 01       		.byte	0x1
 611 0003 20       		.uleb128 .LLSDACSE1346-.LLSDACSB1346
 612              	.LLSDACSB1346:
 613 0004 27       		.uleb128 .LEHB9-.LFB1346
 614 0005 05       		.uleb128 .LEHE9-.LEHB9
 615 0006 00       		.uleb128 0
 616 0007 00       		.uleb128 0
 617 0008 4F       		.uleb128 .LEHB10-.LFB1346
 618 0009 05       		.uleb128 .LEHE10-.LEHB10
 619 000a B602     		.uleb128 .L31-.LFB1346
 620 000c 00       		.uleb128 0
 621 000d 8301     		.uleb128 .LEHB11-.LFB1346
 622 000f 05       		.uleb128 .LEHE11-.LEHB11
 623 0010 C702     		.uleb128 .L32-.LFB1346
 624 0012 00       		.uleb128 0
 625 0013 B701     		.uleb128 .LEHB12-.LFB1346
 626 0015 05       		.uleb128 .LEHE12-.LEHB12
 627 0016 D802     		.uleb128 .L33-.LFB1346
 628 0018 00       		.uleb128 0
 629 0019 EB01     		.uleb128 .LEHB13-.LFB1346
 630 001b 49       		.uleb128 .LEHE13-.LEHB13
 631 001c E902     		.uleb128 .L34-.LFB1346
 632 001e 00       		.uleb128 0
 633 001f AE03     		.uleb128 .LEHB14-.LFB1346
 634 0021 05       		.uleb128 .LEHE14-.LEHB14
 635 0022 00       		.uleb128 0
 636 0023 00       		.uleb128 0
 637              	.LLSDACSE1346:
 638              		.text
 640              		.align 2
 642              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev:
 643              	.LFB1350:
  27:TestDeferredTestReporter.cpp **** {
 644              		.loc 3 27 0
 645              		.cfi_startproc
 646              		.cfi_personality 0x3,__gxx_personality_v0
 647              		.cfi_lsda 0x3,.LLSDA1350
 648 0214 55       		pushq	%rbp
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 6, -16
 651 0215 4889E5   		movq	%rsp, %rbp
 652              		.cfi_def_cfa_register 6
 653 0218 53       		pushq	%rbx
 654 0219 4883EC18 		subq	$24, %rsp
 655              		.cfi_offset 3, -24
 656 021d 48897DE8 		movq	%rdi, -24(%rbp)
 657              	.LBB12:
  27:TestDeferredTestReporter.cpp **** {
 658              		.loc 3 27 0
 659 0221 488B45E8 		movq	-24(%rbp), %rax
 660 0225 4883C060 		addq	$96, %rax
 661 0229 4889C7   		movq	%rax, %rdi
 662              	.LEHB15:
 663 022c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 663      00
 664              	.LEHE15:
  27:TestDeferredTestReporter.cpp **** {
 665              		.loc 3 27 0 is_stmt 0 discriminator 2
 666 0231 488B45E8 		movq	-24(%rbp), %rax
 667 0235 4883C040 		addq	$64, %rax
 668 0239 4889C7   		movq	%rax, %rdi
 669              	.LEHB16:
 670 023c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 670      00
 671              	.LEHE16:
  27:TestDeferredTestReporter.cpp **** {
 672              		.loc 3 27 0 discriminator 4
 673 0241 488B45E8 		movq	-24(%rbp), %rax
 674 0245 4883C020 		addq	$32, %rax
 675 0249 4889C7   		movq	%rax, %rdi
 676              	.LEHB17:
 677 024c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 677      00
 678              	.LEHE17:
  27:TestDeferredTestReporter.cpp **** {
 679              		.loc 3 27 0 discriminator 6
 680 0251 488B45E8 		movq	-24(%rbp), %rax
 681 0255 4889C7   		movq	%rax, %rdi
 682              	.LEHB18:
 683 0258 E8273300 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 683      00
 684              	.LEHE18:
 685              	.LBE12:
 686 025d EB44     		jmp	.L43
 687              	.L40:
 688 025f 4889C3   		movq	%rax, %rbx
 689              	.LBB13:
  27:TestDeferredTestReporter.cpp **** {
 690              		.loc 3 27 0
 691 0262 488B45E8 		movq	-24(%rbp), %rax
 692 0266 4883C040 		addq	$64, %rax
 693 026a 4889C7   		movq	%rax, %rdi
 694 026d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 694      00
 695 0272 EB03     		jmp	.L38
 696              	.L41:
 697 0274 4889C3   		movq	%rax, %rbx
 698              	.L38:
  27:TestDeferredTestReporter.cpp **** {
 699              		.loc 3 27 0 discriminator 3
 700 0277 488B45E8 		movq	-24(%rbp), %rax
 701 027b 4883C020 		addq	$32, %rax
 702 027f 4889C7   		movq	%rax, %rdi
 703 0282 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 703      00
 704 0287 EB03     		jmp	.L39
 705              	.L42:
 706 0289 4889C3   		movq	%rax, %rbx
 707              	.L39:
  27:TestDeferredTestReporter.cpp **** {
 708              		.loc 3 27 0 discriminator 5
 709 028c 488B45E8 		movq	-24(%rbp), %rax
 710 0290 4889C7   		movq	%rax, %rdi
 711 0293 E8EC3200 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 711      00
 712 0298 4889D8   		movq	%rbx, %rax
 713 029b 4889C7   		movq	%rax, %rdi
 714              	.LEHB19:
 715 029e E8000000 		call	_Unwind_Resume
 715      00
 716              	.LEHE19:
 717              	.L43:
 718              	.LBE13:
  27:TestDeferredTestReporter.cpp **** {
 719              		.loc 3 27 0
 720 02a3 4883C418 		addq	$24, %rsp
 721 02a7 5B       		popq	%rbx
 722 02a8 5D       		popq	%rbp
 723              		.cfi_def_cfa 7, 8
 724 02a9 C3       		ret
 725              		.cfi_endproc
 726              	.LFE1350:
 727              		.section	.gcc_except_table
 728              	.LLSDA1350:
 729 0024 FF       		.byte	0xff
 730 0025 FF       		.byte	0xff
 731 0026 01       		.byte	0x1
 732 0027 15       		.uleb128 .LLSDACSE1350-.LLSDACSB1350
 733              	.LLSDACSB1350:
 734 0028 18       		.uleb128 .LEHB15-.LFB1350
 735 0029 05       		.uleb128 .LEHE15-.LEHB15
 736 002a 4B       		.uleb128 .L40-.LFB1350
 737 002b 00       		.uleb128 0
 738 002c 28       		.uleb128 .LEHB16-.LFB1350
 739 002d 05       		.uleb128 .LEHE16-.LEHB16
 740 002e 60       		.uleb128 .L41-.LFB1350
 741 002f 00       		.uleb128 0
 742 0030 38       		.uleb128 .LEHB17-.LFB1350
 743 0031 05       		.uleb128 .LEHE17-.LEHB17
 744 0032 75       		.uleb128 .L42-.LFB1350
 745 0033 00       		.uleb128 0
 746 0034 44       		.uleb128 .LEHB18-.LFB1350
 747 0035 05       		.uleb128 .LEHE18-.LEHB18
 748 0036 00       		.uleb128 0
 749 0037 00       		.uleb128 0
 750 0038 8A01     		.uleb128 .LEHB19-.LFB1350
 751 003a 05       		.uleb128 .LEHE19-.LEHB19
 752 003b 00       		.uleb128 0
 753 003c 00       		.uleb128 0
 754              	.LLSDACSE1350:
 755              		.text
 757              		.align 2
 759              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 760              	.LFB1352:
  37:TestDeferredTestReporter.cpp **** 
  38:TestDeferredTestReporter.cpp ****     MockDeferredTestReporter reporter;
  39:TestDeferredTestReporter.cpp ****     std::string const testName;
  40:TestDeferredTestReporter.cpp ****     std::string const testSuite;
  41:TestDeferredTestReporter.cpp ****     std::string const fileName;
  42:TestDeferredTestReporter.cpp ****     int const lineNumber;
  43:TestDeferredTestReporter.cpp ****     TestDetails const details;
  44:TestDeferredTestReporter.cpp **** };
  45:TestDeferredTestReporter.cpp **** 
  46:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCreatesANewDeferredTest)
 761              		.loc 3 46 0 is_stmt 1
 762              		.cfi_startproc
 763 02aa 55       		pushq	%rbp
 764              		.cfi_def_cfa_offset 16
 765              		.cfi_offset 6, -16
 766 02ab 4889E5   		movq	%rsp, %rbp
 767              		.cfi_def_cfa_register 6
 768 02ae 4883EC10 		subq	$16, %rsp
 769 02b2 48897DF8 		movq	%rdi, -8(%rbp)
 770 02b6 488975F0 		movq	%rsi, -16(%rbp)
 771              	.LBB14:
 772              		.loc 3 46 0
 773 02ba 488B45F8 		movq	-8(%rbp), %rax
 774 02be 4889C7   		movq	%rax, %rdi
 775 02c1 E87CFDFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 775      FF
 776 02c6 488B45F8 		movq	-8(%rbp), %rax
 777 02ca 488B55F0 		movq	-16(%rbp), %rdx
 778 02ce 488990A8 		movq	%rdx, 168(%rax)
 778      000000
 779              	.LBE14:
 780 02d5 90       		nop
 781 02d6 C9       		leave
 782              		.cfi_def_cfa 7, 8
 783 02d7 C3       		ret
 784              		.cfi_endproc
 785              	.LFE1352:
 787              		.set	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 788              		.section	.rodata
 789              	.LC4:
 790 0037 54657374 		.string	"TestDeferredTestReporter.cpp"
 790      44656665 
 790      72726564 
 790      54657374 
 790      5265706F 
 791 0054 00000000 		.align 8
 792              	.LC5:
 793 0058 5265706F 		.string	"ReportTestStartCreatesANewDeferredTest"
 793      72745465 
 793      73745374 
 793      61727443 
 793      72656174 
 794              		.text
 795              		.align 2
 797              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2
 798              	.LFB1355:
 799              		.loc 3 46 0
 800              		.cfi_startproc
 801 02d8 55       		pushq	%rbp
 802              		.cfi_def_cfa_offset 16
 803              		.cfi_offset 6, -16
 804 02d9 4889E5   		movq	%rsp, %rbp
 805              		.cfi_def_cfa_register 6
 806 02dc 4883EC10 		subq	$16, %rsp
 807 02e0 48897DF8 		movq	%rdi, -8(%rbp)
 808              	.LBB15:
 809              		.loc 3 46 0
 810 02e4 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 810      00
 811 02e9 4889C2   		movq	%rax, %rdx
 812 02ec 488B45F8 		movq	-8(%rbp), %rax
 813 02f0 41B82E00 		movl	$46, %r8d
 813      0000
 814 02f6 B9000000 		movl	$.LC4, %ecx
 814      00
 815 02fb BE000000 		movl	$.LC5, %esi
 815      00
 816 0300 4889C7   		movq	%rax, %rdi
 817 0303 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 817      00
 818 0308 BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 818      00
 819 030d 488B45F8 		movq	-8(%rbp), %rax
 820 0311 488910   		movq	%rdx, (%rax)
 821              	.LBE15:
 822 0314 90       		nop
 823 0315 C9       		leave
 824              		.cfi_def_cfa 7, 8
 825 0316 C3       		ret
 826              		.cfi_endproc
 827              	.LFE1355:
 829              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 830              		.local	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 831              		.comm	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 832              		.local	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 833              		.comm	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 834 0317 90       		.align 2
 836              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 837              	.LFB1359:
 838              		.loc 3 46 0
 839              		.cfi_startproc
 840 0318 55       		pushq	%rbp
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 6, -16
 843 0319 4889E5   		movq	%rsp, %rbp
 844              		.cfi_def_cfa_register 6
 845 031c 4883EC10 		subq	$16, %rsp
 846 0320 48897DF8 		movq	%rdi, -8(%rbp)
 847              	.LBB16:
 848              		.loc 3 46 0
 849 0324 488B45F8 		movq	-8(%rbp), %rax
 850 0328 4889C7   		movq	%rax, %rdi
 851 032b E8E4FEFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 851      FF
 852              	.LBE16:
 853 0330 90       		nop
 854 0331 C9       		leave
 855              		.cfi_def_cfa 7, 8
 856 0332 C3       		ret
 857              		.cfi_endproc
 858              	.LFE1359:
 860              		.set	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 861              		.section	.rodata
 862              	.LC6:
 863 007f 556E6861 		.string	"Unhandled exception: "
 863      6E646C65 
 863      64206578 
 863      63657074 
 863      696F6E3A 
 864 0095 000000   		.align 8
 865              	.LC7:
 866 0098 556E6861 		.string	"Unhandled exception while destroying fixture DeferredTestReporterFixture"
 866      6E646C65 
 866      64206578 
 866      63657074 
 866      696F6E20 
 867 00e1 00000000 		.align 8
 867      000000
 868              	.LC8:
 869 00e8 556E6861 		.string	"Unhandled exception while constructing fixture DeferredTestReporterFixture"
 869      6E646C65 
 869      64206578 
 869      63657074 
 869      696F6E20 
 870              		.text
 871 0333 90       		.align 2
 873              	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7
 874              	.LFB1357:
 875              		.loc 3 46 0
 876              		.cfi_startproc
 877              		.cfi_personality 0x3,__gxx_personality_v0
 878              		.cfi_lsda 0x3,.LLSDA1357
 879 0334 55       		pushq	%rbp
 880              		.cfi_def_cfa_offset 16
 881              		.cfi_offset 6, -16
 882 0335 4889E5   		movq	%rsp, %rbp
 883              		.cfi_def_cfa_register 6
 884 0338 4154     		pushq	%r12
 885 033a 53       		pushq	%rbx
 886 033b 4881ECF0 		subq	$496, %rsp
 886      010000
 887              		.cfi_offset 12, -24
 888              		.cfi_offset 3, -32
 889 0342 4889BD08 		movq	%rdi, -504(%rbp)
 889      FEFFFF
 890              		.loc 3 46 0
 891 0349 64488B04 		movq	%fs:40, %rax
 891      25280000 
 891      00
 892 0352 488945E8 		movq	%rax, -24(%rbp)
 893 0356 31C0     		xorl	%eax, %eax
 894 0358 C6851FFE 		movb	$0, -481(%rbp)
 894      FFFF00
 895              	.LBB17:
 896 035f 488B8508 		movq	-504(%rbp), %rax
 896      FEFFFF
 897 0366 488D5008 		leaq	8(%rax), %rdx
 898 036a 488D8550 		leaq	-432(%rbp), %rax
 898      FEFFFF
 899 0371 4889D6   		movq	%rdx, %rsi
 900 0374 4889C7   		movq	%rax, %rdi
 901              	.LEHB20:
 902 0377 E82EFFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 902      FF
 903              	.LEHE20:
 904              		.loc 3 46 0 is_stmt 0 discriminator 1
 905 037c C6851FFE 		movb	$1, -481(%rbp)
 905      FFFF01
 906 0383 488B8508 		movq	-504(%rbp), %rax
 906      FEFFFF
 907 038a 488D5008 		leaq	8(%rax), %rdx
 908 038e 488D8550 		leaq	-432(%rbp), %rax
 908      FEFFFF
 909 0395 4889D6   		movq	%rdx, %rsi
 910 0398 4889C7   		movq	%rax, %rdi
 911              	.LEHB21:
 912 039b E81D1F00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreate
 912      00
 913              	.LEHE21:
 914              		.loc 3 46 0 discriminator 3
 915 03a0 488D8550 		leaq	-432(%rbp), %rax
 915      FEFFFF
 916 03a7 4889C7   		movq	%rax, %rdi
 917              	.LEHB22:
 918 03aa E869FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 918      FF
 919              	.LEHE22:
 920              	.LBE17:
 921              		.loc 3 46 0
 922 03af E9660200 		jmp	.L47
 922      00
 923              	.L62:
 924 03b4 4989C4   		movq	%rax, %r12
 925 03b7 4889D3   		movq	%rdx, %rbx
 926              	.LBB18:
 927 03ba 488D8550 		leaq	-432(%rbp), %rax
 927      FEFFFF
 928 03c1 4889C7   		movq	%rax, %rdi
 929 03c4 E84FFFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 929      FF
 930 03c9 4C89E0   		movq	%r12, %rax
 931 03cc 4889DA   		movq	%rbx, %rdx
 932 03cf EB00     		jmp	.L49
 933              	.L61:
 934              	.L49:
 935 03d1 4883FA01 		cmpq	$1, %rdx
 936 03d5 740F     		je	.L51
 937 03d7 4883FA02 		cmpq	$2, %rdx
 938 03db 0F84A700 		je	.L52
 938      0000
 939 03e1 E94B0100 		jmp	.L67
 939      00
 940              	.L51:
 941              	.LBE18:
 942              	.LBB19:
 943 03e6 4889C7   		movq	%rax, %rdi
 944 03e9 E8000000 		call	__cxa_begin_catch
 944      00
 945 03ee 48898520 		movq	%rax, -480(%rbp)
 945      FEFFFF
 946 03f5 488B8520 		movq	-480(%rbp), %rax
 946      FEFFFF
 947 03fc 488B00   		movq	(%rax), %rax
 948 03ff 4883C010 		addq	$16, %rax
 949 0403 488B00   		movq	(%rax), %rax
 950 0406 488B9520 		movq	-480(%rbp), %rdx
 950      FEFFFF
 951 040d 4889D7   		movq	%rdx, %rdi
 952 0410 FFD0     		call	*%rax
 953 0412 4889C3   		movq	%rax, %rbx
 954 0415 488B8520 		movq	-480(%rbp), %rax
 954      FEFFFF
 955 041c 4889C7   		movq	%rax, %rdi
 956              	.LEHB23:
 957 041f E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 957      00
 958 0424 4189C4   		movl	%eax, %r12d
 959 0427 488B8520 		movq	-480(%rbp), %rax
 959      FEFFFF
 960 042e 4889C7   		movq	%rax, %rdi
 961 0431 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 961      00
 962              		.loc 3 46 0 discriminator 5
 963 0436 4889C1   		movq	%rax, %rcx
 964 0439 488B8508 		movq	-504(%rbp), %rax
 964      FEFFFF
 965 0440 488B5008 		movq	8(%rax), %rdx
 966 0444 488B8508 		movq	-504(%rbp), %rax
 966      FEFFFF
 967 044b 488B7010 		movq	16(%rax), %rsi
 968 044f 488D8530 		leaq	-464(%rbp), %rax
 968      FEFFFF
 969 0456 4589E0   		movl	%r12d, %r8d
 970 0459 4889C7   		movq	%rax, %rdi
 971 045c E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 971      00
 972              		.loc 3 46 0 discriminator 9
 973 0461 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 973      00
 974 0466 488B00   		movq	(%rax), %rax
 975 0469 488D8D30 		leaq	-464(%rbp), %rcx
 975      FEFFFF
 976 0470 4889DA   		movq	%rbx, %rdx
 977 0473 4889CE   		movq	%rcx, %rsi
 978 0476 4889C7   		movq	%rax, %rdi
 979 0479 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 979      00
 980              	.LEHE23:
 981              		.loc 3 46 0 discriminator 13
 982 047e E8000000 		call	__cxa_end_catch
 982      00
 983              	.LBE19:
 984 0483 E9920100 		jmp	.L47
 984      00
 985              	.L52:
 986              	.LBB20:
 987              		.loc 3 46 0
 988 0488 4889C7   		movq	%rax, %rdi
 989 048b E8000000 		call	__cxa_begin_catch
 989      00
 990 0490 48898528 		movq	%rax, -472(%rbp)
 990      FEFFFF
 991              	.LBB21:
 992 0497 488D8550 		leaq	-432(%rbp), %rax
 992      FEFFFF
 993 049e 4889C7   		movq	%rax, %rdi
 994              	.LEHB24:
 995 04a1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 995      00
 996              	.LEHE24:
 997              		.loc 3 46 0 discriminator 15
 998 04a6 488B8528 		movq	-472(%rbp), %rax
 998      FEFFFF
 999 04ad 488B00   		movq	(%rax), %rax
 1000 04b0 4883C010 		addq	$16, %rax
 1001 04b4 488B00   		movq	(%rax), %rax
 1002 04b7 488B9528 		movq	-472(%rbp), %rdx
 1002      FEFFFF
 1003 04be 4889D7   		movq	%rdx, %rdi
 1004 04c1 FFD0     		call	*%rax
 1005 04c3 4889C3   		movq	%rax, %rbx
 1006 04c6 488D8550 		leaq	-432(%rbp), %rax
 1006      FEFFFF
 1007 04cd BE000000 		movl	$.LC6, %esi
 1007      00
 1008 04d2 4889C7   		movq	%rax, %rdi
 1009              	.LEHB25:
 1010 04d5 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1010      00
 1011 04da 4889DE   		movq	%rbx, %rsi
 1012 04dd 4889C7   		movq	%rax, %rdi
 1013 04e0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1013      00
 1014              		.loc 3 46 0 discriminator 19
 1015 04e5 488D8550 		leaq	-432(%rbp), %rax
 1015      FEFFFF
 1016 04ec 4889C7   		movq	%rax, %rdi
 1017 04ef E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 1017      00
 1018 04f4 4989C4   		movq	%rax, %r12
 1019 04f7 488B8508 		movq	-504(%rbp), %rax
 1019      FEFFFF
 1020 04fe 488D5808 		leaq	8(%rax), %rbx
 1021 0502 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1021      00
 1022              		.loc 3 46 0 discriminator 21
 1023 0507 488B00   		movq	(%rax), %rax
 1024 050a 4C89E2   		movq	%r12, %rdx
 1025 050d 4889DE   		movq	%rbx, %rsi
 1026 0510 4889C7   		movq	%rax, %rdi
 1027 0513 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1027      00
 1028              	.LEHE25:
 1029              		.loc 3 46 0 discriminator 25
 1030 0518 488D8550 		leaq	-432(%rbp), %rax
 1030      FEFFFF
 1031 051f 4889C7   		movq	%rax, %rdi
 1032              	.LEHB26:
 1033 0522 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1033      00
 1034              	.LEHE26:
 1035              	.LBE21:
 1036              		.loc 3 46 0 discriminator 26
 1037 0527 E8000000 		call	__cxa_end_catch
 1037      00
 1038              	.LBE20:
 1039 052c E9E90000 		jmp	.L47
 1039      00
 1040              	.L67:
 1041              		.loc 3 46 0
 1042 0531 4889C7   		movq	%rax, %rdi
 1043 0534 E8000000 		call	__cxa_begin_catch
 1043      00
 1044 0539 80BD1FFE 		cmpb	$0, -481(%rbp)
 1044      FFFF00
 1045 0540 7443     		je	.L54
 1046              		.loc 3 46 0 discriminator 28
 1047 0542 488B8508 		movq	-504(%rbp), %rax
 1047      FEFFFF
 1048 0549 488D4808 		leaq	8(%rax), %rcx
 1049 054d 488D8530 		leaq	-464(%rbp), %rax
 1049      FEFFFF
 1050 0554 BA2E0000 		movl	$46, %edx
 1050      00
 1051 0559 4889CE   		movq	%rcx, %rsi
 1052 055c 4889C7   		movq	%rax, %rdi
 1053              	.LEHB27:
 1054 055f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1054      00
 1055              		.loc 3 46 0 discriminator 31
 1056 0564 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1056      00
 1057 0569 488B00   		movq	(%rax), %rax
 1058 056c 488D8D30 		leaq	-464(%rbp), %rcx
 1058      FEFFFF
 1059 0573 BA000000 		movl	$.LC7, %edx
 1059      00
 1060 0578 4889CE   		movq	%rcx, %rsi
 1061 057b 4889C7   		movq	%rax, %rdi
 1062 057e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1062      00
 1063 0583 EB41     		jmp	.L55
 1064              	.L54:
 1065              		.loc 3 46 0 discriminator 29
 1066 0585 488B8508 		movq	-504(%rbp), %rax
 1066      FEFFFF
 1067 058c 488D4808 		leaq	8(%rax), %rcx
 1068 0590 488D8530 		leaq	-464(%rbp), %rax
 1068      FEFFFF
 1069 0597 BA2E0000 		movl	$46, %edx
 1069      00
 1070 059c 4889CE   		movq	%rcx, %rsi
 1071 059f 4889C7   		movq	%rax, %rdi
 1072 05a2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1072      00
 1073              		.loc 3 46 0 discriminator 38
 1074 05a7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1074      00
 1075 05ac 488B00   		movq	(%rax), %rax
 1076 05af 488D8D30 		leaq	-464(%rbp), %rcx
 1076      FEFFFF
 1077 05b6 BA000000 		movl	$.LC8, %edx
 1077      00
 1078 05bb 4889CE   		movq	%rcx, %rsi
 1079 05be 4889C7   		movq	%rax, %rdi
 1080 05c1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1080      00
 1081              	.LEHE27:
 1082              	.L55:
 1083              	.LEHB28:
 1084              		.loc 3 46 0 discriminator 43
 1085 05c6 E8000000 		call	__cxa_end_catch
 1085      00
 1086 05cb EB4D     		jmp	.L47
 1087              	.L63:
 1088 05cd 4889C3   		movq	%rax, %rbx
 1089              	.LBB23:
 1090              		.loc 3 46 0
 1091 05d0 E8000000 		call	__cxa_end_catch
 1091      00
 1092 05d5 4889D8   		movq	%rbx, %rax
 1093 05d8 4889C7   		movq	%rax, %rdi
 1094 05db E8000000 		call	_Unwind_Resume
 1094      00
 1095              	.LEHE28:
 1096              	.L65:
 1097 05e0 4889C3   		movq	%rax, %rbx
 1098              	.LBE23:
 1099              	.LBB24:
 1100              	.LBB22:
 1101 05e3 488D8550 		leaq	-432(%rbp), %rax
 1101      FEFFFF
 1102 05ea 4889C7   		movq	%rax, %rdi
 1103 05ed E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1103      00
 1104 05f2 EB03     		jmp	.L58
 1105              	.L64:
 1106 05f4 4889C3   		movq	%rax, %rbx
 1107              	.L58:
 1108              	.LBE22:
 1109 05f7 E8000000 		call	__cxa_end_catch
 1109      00
 1110 05fc 4889D8   		movq	%rbx, %rax
 1111 05ff 4889C7   		movq	%rax, %rdi
 1112              	.LEHB29:
 1113 0602 E8000000 		call	_Unwind_Resume
 1113      00
 1114              	.LEHE29:
 1115              	.L66:
 1116 0607 4889C3   		movq	%rax, %rbx
 1117              	.LBE24:
 1118 060a E8000000 		call	__cxa_end_catch
 1118      00
 1119 060f 4889D8   		movq	%rbx, %rax
 1120 0612 4889C7   		movq	%rax, %rdi
 1121              	.LEHB30:
 1122 0615 E8000000 		call	_Unwind_Resume
 1122      00
 1123              	.LEHE30:
 1124              	.L47:
 1125 061a 488B45E8 		movq	-24(%rbp), %rax
 1126 061e 64483304 		xorq	%fs:40, %rax
 1126      25280000 
 1126      00
 1127 0627 7405     		je	.L60
 1128 0629 E8000000 		call	__stack_chk_fail
 1128      00
 1129              	.L60:
 1130 062e 4881C4F0 		addq	$496, %rsp
 1130      010000
 1131 0635 5B       		popq	%rbx
 1132 0636 415C     		popq	%r12
 1133 0638 5D       		popq	%rbp
 1134              		.cfi_def_cfa 7, 8
 1135 0639 C3       		ret
 1136              		.cfi_endproc
 1137              	.LFE1357:
 1138              		.section	.gcc_except_table
 1139 003d 000000   		.align 4
 1140              	.LLSDA1357:
 1141 0040 FF       		.byte	0xff
 1142 0041 03       		.byte	0x3
 1143 0042 55       		.uleb128 .LLSDATT1357-.LLSDATTD1357
 1144              	.LLSDATTD1357:
 1145 0043 01       		.byte	0x1
 1146 0044 3C       		.uleb128 .LLSDACSE1357-.LLSDACSB1357
 1147              	.LLSDACSB1357:
 1148 0045 43       		.uleb128 .LEHB20-.LFB1357
 1149 0046 05       		.uleb128 .LEHE20-.LEHB20
 1150 0047 9D01     		.uleb128 .L61-.LFB1357
 1151 0049 05       		.uleb128 0x5
 1152 004a 67       		.uleb128 .LEHB21-.LFB1357
 1153 004b 05       		.uleb128 .LEHE21-.LEHB21
 1154 004c 8001     		.uleb128 .L62-.LFB1357
 1155 004e 07       		.uleb128 0x7
 1156 004f 76       		.uleb128 .LEHB22-.LFB1357
 1157 0050 05       		.uleb128 .LEHE22-.LEHB22
 1158 0051 9D01     		.uleb128 .L61-.LFB1357
 1159 0053 05       		.uleb128 0x5
 1160 0054 EB01     		.uleb128 .LEHB23-.LFB1357
 1161 0056 5F       		.uleb128 .LEHE23-.LEHB23
 1162 0057 9905     		.uleb128 .L63-.LFB1357
 1163 0059 00       		.uleb128 0
 1164 005a ED02     		.uleb128 .LEHB24-.LFB1357
 1165 005c 05       		.uleb128 .LEHE24-.LEHB24
 1166 005d C005     		.uleb128 .L64-.LFB1357
 1167 005f 00       		.uleb128 0
 1168 0060 A103     		.uleb128 .LEHB25-.LFB1357
 1169 0062 43       		.uleb128 .LEHE25-.LEHB25
 1170 0063 AC05     		.uleb128 .L65-.LFB1357
 1171 0065 00       		.uleb128 0
 1172 0066 EE03     		.uleb128 .LEHB26-.LFB1357
 1173 0068 05       		.uleb128 .LEHE26-.LEHB26
 1174 0069 C005     		.uleb128 .L64-.LFB1357
 1175 006b 00       		.uleb128 0
 1176 006c AB04     		.uleb128 .LEHB27-.LFB1357
 1177 006e 67       		.uleb128 .LEHE27-.LEHB27
 1178 006f D305     		.uleb128 .L66-.LFB1357
 1179 0071 00       		.uleb128 0
 1180 0072 9205     		.uleb128 .LEHB28-.LFB1357
 1181 0074 1A       		.uleb128 .LEHE28-.LEHB28
 1182 0075 00       		.uleb128 0
 1183 0076 00       		.uleb128 0
 1184 0077 CE05     		.uleb128 .LEHB29-.LFB1357
 1185 0079 05       		.uleb128 .LEHE29-.LEHB29
 1186 007a 00       		.uleb128 0
 1187 007b 00       		.uleb128 0
 1188 007c E105     		.uleb128 .LEHB30-.LFB1357
 1189 007e 05       		.uleb128 .LEHE30-.LEHB30
 1190 007f 00       		.uleb128 0
 1191 0080 00       		.uleb128 0
 1192              	.LLSDACSE1357:
 1193 0081 03       		.byte	0x3
 1194 0082 00       		.byte	0
 1195 0083 02       		.byte	0x2
 1196 0084 7D       		.byte	0x7d
 1197 0085 01       		.byte	0x1
 1198 0086 7D       		.byte	0x7d
 1199 0087 00       		.byte	0
 1200 0088 7D       		.byte	0x7d
 1201 0089 000000   		.align 4
 1202 008c 00000000 		.long	0
 1203              	
 1204 0090 00000000 		.long	_ZTISt9exception
 1205 0094 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 1206              	.LLSDATT1357:
 1207              		.text
 1209              		.section	.rodata
 1210 0133 00000000 		.align 8
 1210      00
 1211              	.LC9:
 1212 0138 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, (int)reporter.GetResults().size())"
 1212      6E646C65 
 1212      64206578 
 1212      63657074 
 1212      696F6E20 
 1213              		.text
 1214              		.align 2
 1216              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 1217              	.LFB1361:
  47:TestDeferredTestReporter.cpp **** {
 1218              		.loc 3 47 0 is_stmt 1
 1219              		.cfi_startproc
 1220              		.cfi_personality 0x3,__gxx_personality_v0
 1221              		.cfi_lsda 0x3,.LLSDA1361
 1222 063a 55       		pushq	%rbp
 1223              		.cfi_def_cfa_offset 16
 1224              		.cfi_offset 6, -16
 1225 063b 4889E5   		movq	%rsp, %rbp
 1226              		.cfi_def_cfa_register 6
 1227 063e 53       		pushq	%rbx
 1228 063f 4883EC58 		subq	$88, %rsp
 1229              		.cfi_offset 3, -24
 1230 0643 48897DA8 		movq	%rdi, -88(%rbp)
 1231              		.loc 3 47 0
 1232 0647 64488B04 		movq	%fs:40, %rax
 1232      25280000 
 1232      00
 1233 0650 488945E8 		movq	%rax, -24(%rbp)
 1234 0654 31C0     		xorl	%eax, %eax
  48:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1235              		.loc 3 48 0
 1236 0656 488B45A8 		movq	-88(%rbp), %rax
 1237 065a 488D9088 		leaq	136(%rax), %rdx
 1237      000000
 1238 0661 488B45A8 		movq	-88(%rbp), %rax
 1239 0665 4889D6   		movq	%rdx, %rsi
 1240 0668 4889C7   		movq	%rax, %rdi
 1241              	.LEHB31:
 1242 066b E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 1242      00
 1243              	.LEHE31:
 1244              	.LEHB32:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1245              		.loc 3 49 0
 1246 0670 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1246      00
 1247 0675 488B08   		movq	(%rax), %rcx
 1248 0678 488D45C0 		leaq	-64(%rbp), %rax
 1249 067c BA310000 		movl	$49, %edx
 1249      00
 1250 0681 4889CE   		movq	%rcx, %rsi
 1251 0684 4889C7   		movq	%rax, %rdi
 1252 0687 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1252      00
 1253              		.loc 3 49 0 is_stmt 0 discriminator 2
 1254 068c 488B45A8 		movq	-88(%rbp), %rax
 1255 0690 4889C7   		movq	%rax, %rdi
 1256 0693 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 1256      00
 1257              	.LEHE32:
 1258 0698 4889C7   		movq	%rax, %rdi
 1259 069b E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 1259      00
 1260 06a0 8945BC   		movl	%eax, -68(%rbp)
 1261 06a3 C745B801 		movl	$1, -72(%rbp)
 1261      000000
 1262              	.LEHB33:
 1263 06aa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1263      00
 1264              		.loc 3 49 0 discriminator 4
 1265 06af 488B00   		movq	(%rax), %rax
 1266 06b2 488D4DC0 		leaq	-64(%rbp), %rcx
 1267 06b6 488D55BC 		leaq	-68(%rbp), %rdx
 1268 06ba 488D75B8 		leaq	-72(%rbp), %rsi
 1269 06be 4889C7   		movq	%rax, %rdi
 1270 06c1 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1270      00
 1271              	.LEHE33:
  50:TestDeferredTestReporter.cpp **** }
 1272              		.loc 3 50 0 is_stmt 1
 1273 06c6 EB5C     		jmp	.L68
 1274              	.L75:
 1275 06c8 EB00     		jmp	.L70
 1276              	.L74:
 1277              	.L70:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1278              		.loc 3 49 0
 1279 06ca 4889C7   		movq	%rax, %rdi
 1280 06cd E8000000 		call	__cxa_begin_catch
 1280      00
 1281              	.LEHB34:
 1282 06d2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1282      00
 1283 06d7 488B08   		movq	(%rax), %rcx
 1284 06da 488D45C0 		leaq	-64(%rbp), %rax
 1285 06de BA310000 		movl	$49, %edx
 1285      00
 1286 06e3 4889CE   		movq	%rcx, %rsi
 1287 06e6 4889C7   		movq	%rax, %rdi
 1288 06e9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1288      00
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1289              		.loc 3 49 0 is_stmt 0 discriminator 12
 1290 06ee E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1290      00
 1291 06f3 488B00   		movq	(%rax), %rax
 1292 06f6 488D4DC0 		leaq	-64(%rbp), %rcx
 1293 06fa BA000000 		movl	$.LC9, %edx
 1293      00
 1294 06ff 4889CE   		movq	%rcx, %rsi
 1295 0702 4889C7   		movq	%rax, %rdi
 1296 0705 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1296      00
 1297              	.LEHE34:
 1298              	.LEHB35:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1299              		.loc 3 49 0 discriminator 16
 1300 070a E8000000 		call	__cxa_end_catch
 1300      00
 1301              	.LEHE35:
 1302              		.loc 3 50 0 is_stmt 1 discriminator 16
 1303 070f EB13     		jmp	.L68
 1304              	.L76:
 1305 0711 4889C3   		movq	%rax, %rbx
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1306              		.loc 3 49 0
 1307 0714 E8000000 		call	__cxa_end_catch
 1307      00
 1308 0719 4889D8   		movq	%rbx, %rax
 1309 071c 4889C7   		movq	%rax, %rdi
 1310              	.LEHB36:
 1311 071f E8000000 		call	_Unwind_Resume
 1311      00
 1312              	.LEHE36:
 1313              	.L68:
 1314              		.loc 3 50 0
 1315 0724 488B45E8 		movq	-24(%rbp), %rax
 1316 0728 64483304 		xorq	%fs:40, %rax
 1316      25280000 
 1316      00
 1317 0731 7405     		je	.L73
 1318 0733 E8000000 		call	__stack_chk_fail
 1318      00
 1319              	.L73:
 1320 0738 4883C458 		addq	$88, %rsp
 1321 073c 5B       		popq	%rbx
 1322 073d 5D       		popq	%rbp
 1323              		.cfi_def_cfa 7, 8
 1324 073e C3       		ret
 1325              		.cfi_endproc
 1326              	.LFE1361:
 1327              		.section	.gcc_except_table
 1328              		.align 4
 1329              	.LLSDA1361:
 1330 0098 FF       		.byte	0xff
 1331 0099 03       		.byte	0x3
 1332 009a 29       		.uleb128 .LLSDATT1361-.LLSDATTD1361
 1333              	.LLSDATTD1361:
 1334 009b 01       		.byte	0x1
 1335 009c 1E       		.uleb128 .LLSDACSE1361-.LLSDACSB1361
 1336              	.LLSDACSB1361:
 1337 009d 31       		.uleb128 .LEHB31-.LFB1361
 1338 009e 05       		.uleb128 .LEHE31-.LEHB31
 1339 009f 00       		.uleb128 0
 1340 00a0 00       		.uleb128 0
 1341 00a1 36       		.uleb128 .LEHB32-.LFB1361
 1342 00a2 28       		.uleb128 .LEHE32-.LEHB32
 1343 00a3 9001     		.uleb128 .L74-.LFB1361
 1344 00a5 01       		.uleb128 0x1
 1345 00a6 70       		.uleb128 .LEHB33-.LFB1361
 1346 00a7 1C       		.uleb128 .LEHE33-.LEHB33
 1347 00a8 8E01     		.uleb128 .L75-.LFB1361
 1348 00aa 03       		.uleb128 0x3
 1349 00ab 9801     		.uleb128 .LEHB34-.LFB1361
 1350 00ad 38       		.uleb128 .LEHE34-.LEHB34
 1351 00ae D701     		.uleb128 .L76-.LFB1361
 1352 00b0 00       		.uleb128 0
 1353 00b1 D001     		.uleb128 .LEHB35-.LFB1361
 1354 00b3 05       		.uleb128 .LEHE35-.LEHB35
 1355 00b4 00       		.uleb128 0
 1356 00b5 00       		.uleb128 0
 1357 00b6 E501     		.uleb128 .LEHB36-.LFB1361
 1358 00b8 05       		.uleb128 .LEHE36-.LEHB36
 1359 00b9 00       		.uleb128 0
 1360 00ba 00       		.uleb128 0
 1361              	.LLSDACSE1361:
 1362 00bb 01       		.byte	0x1
 1363 00bc 00       		.byte	0
 1364 00bd 00       		.byte	0
 1365 00be 7D       		.byte	0x7d
 1366 00bf 00       		.align 4
 1367 00c0 00000000 		.long	0
 1368              	
 1369              	.LLSDATT1361:
 1370              		.text
 1372 073f 90       		.align 2
 1374              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1375              	.LFB1363:
  51:TestDeferredTestReporter.cpp **** 
  52:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCapturesTestNameAndSuite)
 1376              		.loc 3 52 0
 1377              		.cfi_startproc
 1378 0740 55       		pushq	%rbp
 1379              		.cfi_def_cfa_offset 16
 1380              		.cfi_offset 6, -16
 1381 0741 4889E5   		movq	%rsp, %rbp
 1382              		.cfi_def_cfa_register 6
 1383 0744 4883EC10 		subq	$16, %rsp
 1384 0748 48897DF8 		movq	%rdi, -8(%rbp)
 1385 074c 488975F0 		movq	%rsi, -16(%rbp)
 1386              	.LBB25:
 1387              		.loc 3 52 0
 1388 0750 488B45F8 		movq	-8(%rbp), %rax
 1389 0754 4889C7   		movq	%rax, %rdi
 1390 0757 E8E6F8FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 1390      FF
 1391 075c 488B45F8 		movq	-8(%rbp), %rax
 1392 0760 488B55F0 		movq	-16(%rbp), %rdx
 1393 0764 488990A8 		movq	%rdx, 168(%rax)
 1393      000000
 1394              	.LBE25:
 1395 076b 90       		nop
 1396 076c C9       		leave
 1397              		.cfi_def_cfa 7, 8
 1398 076d C3       		ret
 1399              		.cfi_endproc
 1400              	.LFE1363:
 1402              		.set	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1403              		.section	.rodata
 1404 0181 00000000 		.align 8
 1404      000000
 1405              	.LC10:
 1406 0188 5265706F 		.string	"ReportTestStartCapturesTestNameAndSuite"
 1406      72745465 
 1406      73745374 
 1406      61727443 
 1406      61707475 
 1407              		.text
 1408              		.align 2
 1410              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC
 1411              	.LFB1366:
 1412              		.loc 3 52 0
 1413              		.cfi_startproc
 1414 076e 55       		pushq	%rbp
 1415              		.cfi_def_cfa_offset 16
 1416              		.cfi_offset 6, -16
 1417 076f 4889E5   		movq	%rsp, %rbp
 1418              		.cfi_def_cfa_register 6
 1419 0772 4883EC10 		subq	$16, %rsp
 1420 0776 48897DF8 		movq	%rdi, -8(%rbp)
 1421              	.LBB26:
 1422              		.loc 3 52 0
 1423 077a E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1423      00
 1424 077f 4889C2   		movq	%rax, %rdx
 1425 0782 488B45F8 		movq	-8(%rbp), %rax
 1426 0786 41B83400 		movl	$52, %r8d
 1426      0000
 1427 078c B9000000 		movl	$.LC4, %ecx
 1427      00
 1428 0791 BE000000 		movl	$.LC10, %esi
 1428      00
 1429 0796 4889C7   		movq	%rax, %rdi
 1430 0799 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1430      00
 1431 079e BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 1431      00
 1432 07a3 488B45F8 		movq	-8(%rbp), %rax
 1433 07a7 488910   		movq	%rdx, (%rax)
 1434              	.LBE26:
 1435 07aa 90       		nop
 1436 07ab C9       		leave
 1437              		.cfi_def_cfa 7, 8
 1438 07ac C3       		ret
 1439              		.cfi_endproc
 1440              	.LFE1366:
 1442              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 1443              		.local	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1444              		.comm	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 1445              		.local	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestName
 1446              		.comm	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1447 07ad 90       		.align 2
 1449              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1450              	.LFB1370:
 1451              		.loc 3 52 0
 1452              		.cfi_startproc
 1453 07ae 55       		pushq	%rbp
 1454              		.cfi_def_cfa_offset 16
 1455              		.cfi_offset 6, -16
 1456 07af 4889E5   		movq	%rsp, %rbp
 1457              		.cfi_def_cfa_register 6
 1458 07b2 4883EC10 		subq	$16, %rsp
 1459 07b6 48897DF8 		movq	%rdi, -8(%rbp)
 1460              	.LBB27:
 1461              		.loc 3 52 0
 1462 07ba 488B45F8 		movq	-8(%rbp), %rax
 1463 07be 4889C7   		movq	%rax, %rdi
 1464 07c1 E84EFAFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 1464      FF
 1465              	.LBE27:
 1466 07c6 90       		nop
 1467 07c7 C9       		leave
 1468              		.cfi_def_cfa 7, 8
 1469 07c8 C3       		ret
 1470              		.cfi_endproc
 1471              	.LFE1370:
 1473              		.set	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1474 07c9 90       		.align 2
 1476              	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite
 1477              	.LFB1368:
 1478              		.loc 3 52 0
 1479              		.cfi_startproc
 1480              		.cfi_personality 0x3,__gxx_personality_v0
 1481              		.cfi_lsda 0x3,.LLSDA1368
 1482 07ca 55       		pushq	%rbp
 1483              		.cfi_def_cfa_offset 16
 1484              		.cfi_offset 6, -16
 1485 07cb 4889E5   		movq	%rsp, %rbp
 1486              		.cfi_def_cfa_register 6
 1487 07ce 4154     		pushq	%r12
 1488 07d0 53       		pushq	%rbx
 1489 07d1 4881ECF0 		subq	$496, %rsp
 1489      010000
 1490              		.cfi_offset 12, -24
 1491              		.cfi_offset 3, -32
 1492 07d8 4889BD08 		movq	%rdi, -504(%rbp)
 1492      FEFFFF
 1493              		.loc 3 52 0
 1494 07df 64488B04 		movq	%fs:40, %rax
 1494      25280000 
 1494      00
 1495 07e8 488945E8 		movq	%rax, -24(%rbp)
 1496 07ec 31C0     		xorl	%eax, %eax
 1497 07ee C6851FFE 		movb	$0, -481(%rbp)
 1497      FFFF00
 1498              	.LBB28:
 1499 07f5 488B8508 		movq	-504(%rbp), %rax
 1499      FEFFFF
 1500 07fc 488D5008 		leaq	8(%rax), %rdx
 1501 0800 488D8550 		leaq	-432(%rbp), %rax
 1501      FEFFFF
 1502 0807 4889D6   		movq	%rdx, %rsi
 1503 080a 4889C7   		movq	%rax, %rdi
 1504              	.LEHB37:
 1505 080d E82EFFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1505      FF
 1506              	.LEHE37:
 1507              		.loc 3 52 0 is_stmt 0 discriminator 1
 1508 0812 C6851FFE 		movb	$1, -481(%rbp)
 1508      FFFF01
 1509 0819 488B8508 		movq	-504(%rbp), %rax
 1509      FEFFFF
 1510 0820 488D5008 		leaq	8(%rax), %rdx
 1511 0824 488D8550 		leaq	-432(%rbp), %rax
 1511      FEFFFF
 1512 082b 4889D6   		movq	%rdx, %rsi
 1513 082e 4889C7   		movq	%rax, %rdi
 1514              	.LEHB38:
 1515 0831 E8461D00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCaptur
 1515      00
 1516              	.LEHE38:
 1517              		.loc 3 52 0 discriminator 3
 1518 0836 488D8550 		leaq	-432(%rbp), %rax
 1518      FEFFFF
 1519 083d 4889C7   		movq	%rax, %rdi
 1520              	.LEHB39:
 1521 0840 E869FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1521      FF
 1522              	.LEHE39:
 1523              	.LBE28:
 1524              		.loc 3 52 0
 1525 0845 E9660200 		jmp	.L80
 1525      00
 1526              	.L95:
 1527 084a 4989C4   		movq	%rax, %r12
 1528 084d 4889D3   		movq	%rdx, %rbx
 1529              	.LBB29:
 1530 0850 488D8550 		leaq	-432(%rbp), %rax
 1530      FEFFFF
 1531 0857 4889C7   		movq	%rax, %rdi
 1532 085a E84FFFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1532      FF
 1533 085f 4C89E0   		movq	%r12, %rax
 1534 0862 4889DA   		movq	%rbx, %rdx
 1535 0865 EB00     		jmp	.L82
 1536              	.L94:
 1537              	.L82:
 1538 0867 4883FA01 		cmpq	$1, %rdx
 1539 086b 740F     		je	.L84
 1540 086d 4883FA02 		cmpq	$2, %rdx
 1541 0871 0F84A700 		je	.L85
 1541      0000
 1542 0877 E94B0100 		jmp	.L100
 1542      00
 1543              	.L84:
 1544              	.LBE29:
 1545              	.LBB30:
 1546 087c 4889C7   		movq	%rax, %rdi
 1547 087f E8000000 		call	__cxa_begin_catch
 1547      00
 1548 0884 48898520 		movq	%rax, -480(%rbp)
 1548      FEFFFF
 1549 088b 488B8520 		movq	-480(%rbp), %rax
 1549      FEFFFF
 1550 0892 488B00   		movq	(%rax), %rax
 1551 0895 4883C010 		addq	$16, %rax
 1552 0899 488B00   		movq	(%rax), %rax
 1553 089c 488B9520 		movq	-480(%rbp), %rdx
 1553      FEFFFF
 1554 08a3 4889D7   		movq	%rdx, %rdi
 1555 08a6 FFD0     		call	*%rax
 1556 08a8 4889C3   		movq	%rax, %rbx
 1557 08ab 488B8520 		movq	-480(%rbp), %rax
 1557      FEFFFF
 1558 08b2 4889C7   		movq	%rax, %rdi
 1559              	.LEHB40:
 1560 08b5 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 1560      00
 1561 08ba 4189C4   		movl	%eax, %r12d
 1562 08bd 488B8520 		movq	-480(%rbp), %rax
 1562      FEFFFF
 1563 08c4 4889C7   		movq	%rax, %rdi
 1564 08c7 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 1564      00
 1565              		.loc 3 52 0 discriminator 5
 1566 08cc 4889C1   		movq	%rax, %rcx
 1567 08cf 488B8508 		movq	-504(%rbp), %rax
 1567      FEFFFF
 1568 08d6 488B5008 		movq	8(%rax), %rdx
 1569 08da 488B8508 		movq	-504(%rbp), %rax
 1569      FEFFFF
 1570 08e1 488B7010 		movq	16(%rax), %rsi
 1571 08e5 488D8530 		leaq	-464(%rbp), %rax
 1571      FEFFFF
 1572 08ec 4589E0   		movl	%r12d, %r8d
 1573 08ef 4889C7   		movq	%rax, %rdi
 1574 08f2 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1574      00
 1575              		.loc 3 52 0 discriminator 9
 1576 08f7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1576      00
 1577 08fc 488B00   		movq	(%rax), %rax
 1578 08ff 488D8D30 		leaq	-464(%rbp), %rcx
 1578      FEFFFF
 1579 0906 4889DA   		movq	%rbx, %rdx
 1580 0909 4889CE   		movq	%rcx, %rsi
 1581 090c 4889C7   		movq	%rax, %rdi
 1582 090f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1582      00
 1583              	.LEHE40:
 1584              		.loc 3 52 0 discriminator 13
 1585 0914 E8000000 		call	__cxa_end_catch
 1585      00
 1586              	.LBE30:
 1587 0919 E9920100 		jmp	.L80
 1587      00
 1588              	.L85:
 1589              	.LBB31:
 1590              		.loc 3 52 0
 1591 091e 4889C7   		movq	%rax, %rdi
 1592 0921 E8000000 		call	__cxa_begin_catch
 1592      00
 1593 0926 48898528 		movq	%rax, -472(%rbp)
 1593      FEFFFF
 1594              	.LBB32:
 1595 092d 488D8550 		leaq	-432(%rbp), %rax
 1595      FEFFFF
 1596 0934 4889C7   		movq	%rax, %rdi
 1597              	.LEHB41:
 1598 0937 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1598      00
 1599              	.LEHE41:
 1600              		.loc 3 52 0 discriminator 15
 1601 093c 488B8528 		movq	-472(%rbp), %rax
 1601      FEFFFF
 1602 0943 488B00   		movq	(%rax), %rax
 1603 0946 4883C010 		addq	$16, %rax
 1604 094a 488B00   		movq	(%rax), %rax
 1605 094d 488B9528 		movq	-472(%rbp), %rdx
 1605      FEFFFF
 1606 0954 4889D7   		movq	%rdx, %rdi
 1607 0957 FFD0     		call	*%rax
 1608 0959 4889C3   		movq	%rax, %rbx
 1609 095c 488D8550 		leaq	-432(%rbp), %rax
 1609      FEFFFF
 1610 0963 BE000000 		movl	$.LC6, %esi
 1610      00
 1611 0968 4889C7   		movq	%rax, %rdi
 1612              	.LEHB42:
 1613 096b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1613      00
 1614 0970 4889DE   		movq	%rbx, %rsi
 1615 0973 4889C7   		movq	%rax, %rdi
 1616 0976 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1616      00
 1617              		.loc 3 52 0 discriminator 19
 1618 097b 488D8550 		leaq	-432(%rbp), %rax
 1618      FEFFFF
 1619 0982 4889C7   		movq	%rax, %rdi
 1620 0985 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 1620      00
 1621 098a 4989C4   		movq	%rax, %r12
 1622 098d 488B8508 		movq	-504(%rbp), %rax
 1622      FEFFFF
 1623 0994 488D5808 		leaq	8(%rax), %rbx
 1624 0998 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1624      00
 1625              		.loc 3 52 0 discriminator 21
 1626 099d 488B00   		movq	(%rax), %rax
 1627 09a0 4C89E2   		movq	%r12, %rdx
 1628 09a3 4889DE   		movq	%rbx, %rsi
 1629 09a6 4889C7   		movq	%rax, %rdi
 1630 09a9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1630      00
 1631              	.LEHE42:
 1632              		.loc 3 52 0 discriminator 25
 1633 09ae 488D8550 		leaq	-432(%rbp), %rax
 1633      FEFFFF
 1634 09b5 4889C7   		movq	%rax, %rdi
 1635              	.LEHB43:
 1636 09b8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1636      00
 1637              	.LEHE43:
 1638              	.LBE32:
 1639              		.loc 3 52 0 discriminator 26
 1640 09bd E8000000 		call	__cxa_end_catch
 1640      00
 1641              	.LBE31:
 1642 09c2 E9E90000 		jmp	.L80
 1642      00
 1643              	.L100:
 1644              		.loc 3 52 0
 1645 09c7 4889C7   		movq	%rax, %rdi
 1646 09ca E8000000 		call	__cxa_begin_catch
 1646      00
 1647 09cf 80BD1FFE 		cmpb	$0, -481(%rbp)
 1647      FFFF00
 1648 09d6 7443     		je	.L87
 1649              		.loc 3 52 0 discriminator 28
 1650 09d8 488B8508 		movq	-504(%rbp), %rax
 1650      FEFFFF
 1651 09df 488D4808 		leaq	8(%rax), %rcx
 1652 09e3 488D8530 		leaq	-464(%rbp), %rax
 1652      FEFFFF
 1653 09ea BA340000 		movl	$52, %edx
 1653      00
 1654 09ef 4889CE   		movq	%rcx, %rsi
 1655 09f2 4889C7   		movq	%rax, %rdi
 1656              	.LEHB44:
 1657 09f5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1657      00
 1658              		.loc 3 52 0 discriminator 31
 1659 09fa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1659      00
 1660 09ff 488B00   		movq	(%rax), %rax
 1661 0a02 488D8D30 		leaq	-464(%rbp), %rcx
 1661      FEFFFF
 1662 0a09 BA000000 		movl	$.LC7, %edx
 1662      00
 1663 0a0e 4889CE   		movq	%rcx, %rsi
 1664 0a11 4889C7   		movq	%rax, %rdi
 1665 0a14 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1665      00
 1666 0a19 EB41     		jmp	.L88
 1667              	.L87:
 1668              		.loc 3 52 0 discriminator 29
 1669 0a1b 488B8508 		movq	-504(%rbp), %rax
 1669      FEFFFF
 1670 0a22 488D4808 		leaq	8(%rax), %rcx
 1671 0a26 488D8530 		leaq	-464(%rbp), %rax
 1671      FEFFFF
 1672 0a2d BA340000 		movl	$52, %edx
 1672      00
 1673 0a32 4889CE   		movq	%rcx, %rsi
 1674 0a35 4889C7   		movq	%rax, %rdi
 1675 0a38 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1675      00
 1676              		.loc 3 52 0 discriminator 38
 1677 0a3d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1677      00
 1678 0a42 488B00   		movq	(%rax), %rax
 1679 0a45 488D8D30 		leaq	-464(%rbp), %rcx
 1679      FEFFFF
 1680 0a4c BA000000 		movl	$.LC8, %edx
 1680      00
 1681 0a51 4889CE   		movq	%rcx, %rsi
 1682 0a54 4889C7   		movq	%rax, %rdi
 1683 0a57 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1683      00
 1684              	.LEHE44:
 1685              	.L88:
 1686              	.LEHB45:
 1687              		.loc 3 52 0 discriminator 43
 1688 0a5c E8000000 		call	__cxa_end_catch
 1688      00
 1689 0a61 EB4D     		jmp	.L80
 1690              	.L96:
 1691 0a63 4889C3   		movq	%rax, %rbx
 1692              	.LBB34:
 1693              		.loc 3 52 0
 1694 0a66 E8000000 		call	__cxa_end_catch
 1694      00
 1695 0a6b 4889D8   		movq	%rbx, %rax
 1696 0a6e 4889C7   		movq	%rax, %rdi
 1697 0a71 E8000000 		call	_Unwind_Resume
 1697      00
 1698              	.LEHE45:
 1699              	.L98:
 1700 0a76 4889C3   		movq	%rax, %rbx
 1701              	.LBE34:
 1702              	.LBB35:
 1703              	.LBB33:
 1704 0a79 488D8550 		leaq	-432(%rbp), %rax
 1704      FEFFFF
 1705 0a80 4889C7   		movq	%rax, %rdi
 1706 0a83 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1706      00
 1707 0a88 EB03     		jmp	.L91
 1708              	.L97:
 1709 0a8a 4889C3   		movq	%rax, %rbx
 1710              	.L91:
 1711              	.LBE33:
 1712 0a8d E8000000 		call	__cxa_end_catch
 1712      00
 1713 0a92 4889D8   		movq	%rbx, %rax
 1714 0a95 4889C7   		movq	%rax, %rdi
 1715              	.LEHB46:
 1716 0a98 E8000000 		call	_Unwind_Resume
 1716      00
 1717              	.LEHE46:
 1718              	.L99:
 1719 0a9d 4889C3   		movq	%rax, %rbx
 1720              	.LBE35:
 1721 0aa0 E8000000 		call	__cxa_end_catch
 1721      00
 1722 0aa5 4889D8   		movq	%rbx, %rax
 1723 0aa8 4889C7   		movq	%rax, %rdi
 1724              	.LEHB47:
 1725 0aab E8000000 		call	_Unwind_Resume
 1725      00
 1726              	.LEHE47:
 1727              	.L80:
 1728 0ab0 488B45E8 		movq	-24(%rbp), %rax
 1729 0ab4 64483304 		xorq	%fs:40, %rax
 1729      25280000 
 1729      00
 1730 0abd 7405     		je	.L93
 1731 0abf E8000000 		call	__stack_chk_fail
 1731      00
 1732              	.L93:
 1733 0ac4 4881C4F0 		addq	$496, %rsp
 1733      010000
 1734 0acb 5B       		popq	%rbx
 1735 0acc 415C     		popq	%r12
 1736 0ace 5D       		popq	%rbp
 1737              		.cfi_def_cfa 7, 8
 1738 0acf C3       		ret
 1739              		.cfi_endproc
 1740              	.LFE1368:
 1741              		.section	.gcc_except_table
 1742              		.align 4
 1743              	.LLSDA1368:
 1744 00c4 FF       		.byte	0xff
 1745 00c5 03       		.byte	0x3
 1746 00c6 55       		.uleb128 .LLSDATT1368-.LLSDATTD1368
 1747              	.LLSDATTD1368:
 1748 00c7 01       		.byte	0x1
 1749 00c8 3C       		.uleb128 .LLSDACSE1368-.LLSDACSB1368
 1750              	.LLSDACSB1368:
 1751 00c9 43       		.uleb128 .LEHB37-.LFB1368
 1752 00ca 05       		.uleb128 .LEHE37-.LEHB37
 1753 00cb 9D01     		.uleb128 .L94-.LFB1368
 1754 00cd 05       		.uleb128 0x5
 1755 00ce 67       		.uleb128 .LEHB38-.LFB1368
 1756 00cf 05       		.uleb128 .LEHE38-.LEHB38
 1757 00d0 8001     		.uleb128 .L95-.LFB1368
 1758 00d2 07       		.uleb128 0x7
 1759 00d3 76       		.uleb128 .LEHB39-.LFB1368
 1760 00d4 05       		.uleb128 .LEHE39-.LEHB39
 1761 00d5 9D01     		.uleb128 .L94-.LFB1368
 1762 00d7 05       		.uleb128 0x5
 1763 00d8 EB01     		.uleb128 .LEHB40-.LFB1368
 1764 00da 5F       		.uleb128 .LEHE40-.LEHB40
 1765 00db 9905     		.uleb128 .L96-.LFB1368
 1766 00dd 00       		.uleb128 0
 1767 00de ED02     		.uleb128 .LEHB41-.LFB1368
 1768 00e0 05       		.uleb128 .LEHE41-.LEHB41
 1769 00e1 C005     		.uleb128 .L97-.LFB1368
 1770 00e3 00       		.uleb128 0
 1771 00e4 A103     		.uleb128 .LEHB42-.LFB1368
 1772 00e6 43       		.uleb128 .LEHE42-.LEHB42
 1773 00e7 AC05     		.uleb128 .L98-.LFB1368
 1774 00e9 00       		.uleb128 0
 1775 00ea EE03     		.uleb128 .LEHB43-.LFB1368
 1776 00ec 05       		.uleb128 .LEHE43-.LEHB43
 1777 00ed C005     		.uleb128 .L97-.LFB1368
 1778 00ef 00       		.uleb128 0
 1779 00f0 AB04     		.uleb128 .LEHB44-.LFB1368
 1780 00f2 67       		.uleb128 .LEHE44-.LEHB44
 1781 00f3 D305     		.uleb128 .L99-.LFB1368
 1782 00f5 00       		.uleb128 0
 1783 00f6 9205     		.uleb128 .LEHB45-.LFB1368
 1784 00f8 1A       		.uleb128 .LEHE45-.LEHB45
 1785 00f9 00       		.uleb128 0
 1786 00fa 00       		.uleb128 0
 1787 00fb CE05     		.uleb128 .LEHB46-.LFB1368
 1788 00fd 05       		.uleb128 .LEHE46-.LEHB46
 1789 00fe 00       		.uleb128 0
 1790 00ff 00       		.uleb128 0
 1791 0100 E105     		.uleb128 .LEHB47-.LFB1368
 1792 0102 05       		.uleb128 .LEHE47-.LEHB47
 1793 0103 00       		.uleb128 0
 1794 0104 00       		.uleb128 0
 1795              	.LLSDACSE1368:
 1796 0105 03       		.byte	0x3
 1797 0106 00       		.byte	0
 1798 0107 02       		.byte	0x2
 1799 0108 7D       		.byte	0x7d
 1800 0109 01       		.byte	0x1
 1801 010a 7D       		.byte	0x7d
 1802 010b 00       		.byte	0
 1803 010c 7D       		.byte	0x7d
 1804 010d 000000   		.align 4
 1805 0110 00000000 		.long	0
 1806              	
 1807 0114 00000000 		.long	_ZTISt9exception
 1808 0118 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 1809              	.LLSDATT1368:
 1810              		.text
 1812              		.section	.rodata
 1813              		.align 8
 1814              	.LC11:
 1815 01b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testName.c_str(), result.testName)"
 1815      6E646C65 
 1815      64206578 
 1815      63657074 
 1815      696F6E20 
 1816 01f6 0000     		.align 8
 1817              	.LC12:
 1818 01f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testSuite.c_str(), result.suiteName)"
 1818      6E646C65 
 1818      64206578 
 1818      63657074 
 1818      696F6E20 
 1819              		.text
 1820              		.align 2
 1822              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1823              	.LFB1372:
  53:TestDeferredTestReporter.cpp **** {
 1824              		.loc 3 53 0 is_stmt 1
 1825              		.cfi_startproc
 1826              		.cfi_personality 0x3,__gxx_personality_v0
 1827              		.cfi_lsda 0x3,.LLSDA1372
 1828 0ad0 55       		pushq	%rbp
 1829              		.cfi_def_cfa_offset 16
 1830              		.cfi_offset 6, -16
 1831 0ad1 4889E5   		movq	%rsp, %rbp
 1832              		.cfi_def_cfa_register 6
 1833 0ad4 53       		pushq	%rbx
 1834 0ad5 4883EC58 		subq	$88, %rsp
 1835              		.cfi_offset 3, -24
 1836 0ad9 48897DA8 		movq	%rdi, -88(%rbp)
 1837              		.loc 3 53 0
 1838 0add 64488B04 		movq	%fs:40, %rax
 1838      25280000 
 1838      00
 1839 0ae6 488945E8 		movq	%rax, -24(%rbp)
 1840 0aea 31C0     		xorl	%eax, %eax
  54:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1841              		.loc 3 54 0
 1842 0aec 488B45A8 		movq	-88(%rbp), %rax
 1843 0af0 488D9088 		leaq	136(%rax), %rdx
 1843      000000
 1844 0af7 488B45A8 		movq	-88(%rbp), %rax
 1845 0afb 4889D6   		movq	%rdx, %rsi
 1846 0afe 4889C7   		movq	%rax, %rdi
 1847              	.LEHB48:
 1848 0b01 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 1848      00
  55:TestDeferredTestReporter.cpp **** 
  56:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 1849              		.loc 3 56 0
 1850 0b06 488B45A8 		movq	-88(%rbp), %rax
 1851 0b0a 4889C7   		movq	%rax, %rdi
 1852 0b0d E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 1852      00
 1853 0b12 BE000000 		movl	$0, %esi
 1853      00
 1854 0b17 4889C7   		movq	%rax, %rdi
 1855 0b1a E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 1855      00
 1856              	.LEHE48:
 1857 0b1f 488945B8 		movq	%rax, -72(%rbp)
 1858              	.LEHB49:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1859              		.loc 3 57 0
 1860 0b23 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1860      00
 1861 0b28 488B08   		movq	(%rax), %rcx
 1862 0b2b 488D45C0 		leaq	-64(%rbp), %rax
 1863 0b2f BA390000 		movl	$57, %edx
 1863      00
 1864 0b34 4889CE   		movq	%rcx, %rsi
 1865 0b37 4889C7   		movq	%rax, %rdi
 1866 0b3a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1866      00
 1867              		.loc 3 57 0 is_stmt 0 discriminator 2
 1868 0b3f 488B45B8 		movq	-72(%rbp), %rax
 1869 0b43 488D5820 		leaq	32(%rax), %rbx
 1870 0b47 488B45A8 		movq	-88(%rbp), %rax
 1871 0b4b 4883C020 		addq	$32, %rax
 1872 0b4f 4889C7   		movq	%rax, %rdi
 1873 0b52 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 1873      00
 1874 0b57 488945B0 		movq	%rax, -80(%rbp)
 1875 0b5b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1875      00
 1876              		.loc 3 57 0 discriminator 4
 1877 0b60 488B00   		movq	(%rax), %rax
 1878 0b63 488D55C0 		leaq	-64(%rbp), %rdx
 1879 0b67 488D75B0 		leaq	-80(%rbp), %rsi
 1880 0b6b 4889D1   		movq	%rdx, %rcx
 1881 0b6e 4889DA   		movq	%rbx, %rdx
 1882 0b71 4889C7   		movq	%rax, %rdi
 1883 0b74 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 1883      00
 1884              	.LEHE49:
 1885              	.L103:
 1886              	.LEHB50:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1887              		.loc 3 58 0 is_stmt 1
 1888 0b79 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1888      00
 1889 0b7e 488B08   		movq	(%rax), %rcx
 1890 0b81 488D45C0 		leaq	-64(%rbp), %rax
 1891 0b85 BA3A0000 		movl	$58, %edx
 1891      00
 1892 0b8a 4889CE   		movq	%rcx, %rsi
 1893 0b8d 4889C7   		movq	%rax, %rdi
 1894 0b90 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1894      00
 1895              		.loc 3 58 0 is_stmt 0 discriminator 2
 1896 0b95 488B5DB8 		movq	-72(%rbp), %rbx
 1897 0b99 488B45A8 		movq	-88(%rbp), %rax
 1898 0b9d 4883C040 		addq	$64, %rax
 1899 0ba1 4889C7   		movq	%rax, %rdi
 1900 0ba4 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 1900      00
 1901 0ba9 488945B0 		movq	%rax, -80(%rbp)
 1902 0bad E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1902      00
 1903              		.loc 3 58 0 discriminator 4
 1904 0bb2 488B00   		movq	(%rax), %rax
 1905 0bb5 488D55C0 		leaq	-64(%rbp), %rdx
 1906 0bb9 488D75B0 		leaq	-80(%rbp), %rsi
 1907 0bbd 4889D1   		movq	%rdx, %rcx
 1908 0bc0 4889DA   		movq	%rbx, %rdx
 1909 0bc3 4889C7   		movq	%rax, %rdi
 1910 0bc6 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 1910      00
 1911              	.LEHE50:
  59:TestDeferredTestReporter.cpp **** }
 1912              		.loc 3 59 0 is_stmt 1
 1913 0bcb E9B70000 		jmp	.L101
 1913      00
 1914              	.L109:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1915              		.loc 3 57 0
 1916 0bd0 4889C7   		movq	%rax, %rdi
 1917 0bd3 E8000000 		call	__cxa_begin_catch
 1917      00
 1918              	.LEHB51:
 1919 0bd8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1919      00
 1920 0bdd 488B08   		movq	(%rax), %rcx
 1921 0be0 488D45C0 		leaq	-64(%rbp), %rax
 1922 0be4 BA390000 		movl	$57, %edx
 1922      00
 1923 0be9 4889CE   		movq	%rcx, %rsi
 1924 0bec 4889C7   		movq	%rax, %rdi
 1925 0bef E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1925      00
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1926              		.loc 3 57 0 is_stmt 0 discriminator 12
 1927 0bf4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1927      00
 1928 0bf9 488B00   		movq	(%rax), %rax
 1929 0bfc 488D4DC0 		leaq	-64(%rbp), %rcx
 1930 0c00 BA000000 		movl	$.LC11, %edx
 1930      00
 1931 0c05 4889CE   		movq	%rcx, %rsi
 1932 0c08 4889C7   		movq	%rax, %rdi
 1933 0c0b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1933      00
 1934              	.LEHE51:
 1935              	.LEHB52:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1936              		.loc 3 57 0 discriminator 16
 1937 0c10 E8000000 		call	__cxa_end_catch
 1937      00
 1938              	.LEHE52:
 1939 0c15 E95FFFFF 		jmp	.L103
 1939      FF
 1940              	.L110:
 1941 0c1a 4889C3   		movq	%rax, %rbx
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1942              		.loc 3 57 0
 1943 0c1d E8000000 		call	__cxa_end_catch
 1943      00
 1944 0c22 4889D8   		movq	%rbx, %rax
 1945 0c25 4889C7   		movq	%rax, %rdi
 1946              	.LEHB53:
 1947 0c28 E8000000 		call	_Unwind_Resume
 1947      00
 1948              	.LEHE53:
 1949              	.L111:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1950              		.loc 3 58 0 is_stmt 1
 1951 0c2d 4889C7   		movq	%rax, %rdi
 1952 0c30 E8000000 		call	__cxa_begin_catch
 1952      00
 1953              	.LEHB54:
 1954 0c35 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1954      00
 1955 0c3a 488B08   		movq	(%rax), %rcx
 1956 0c3d 488D45C0 		leaq	-64(%rbp), %rax
 1957 0c41 BA3A0000 		movl	$58, %edx
 1957      00
 1958 0c46 4889CE   		movq	%rcx, %rsi
 1959 0c49 4889C7   		movq	%rax, %rdi
 1960 0c4c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1960      00
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1961              		.loc 3 58 0 is_stmt 0 discriminator 12
 1962 0c51 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1962      00
 1963 0c56 488B00   		movq	(%rax), %rax
 1964 0c59 488D4DC0 		leaq	-64(%rbp), %rcx
 1965 0c5d BA000000 		movl	$.LC12, %edx
 1965      00
 1966 0c62 4889CE   		movq	%rcx, %rsi
 1967 0c65 4889C7   		movq	%rax, %rdi
 1968 0c68 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1968      00
 1969              	.LEHE54:
 1970              	.LEHB55:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1971              		.loc 3 58 0 discriminator 16
 1972 0c6d E8000000 		call	__cxa_end_catch
 1972      00
 1973              	.LEHE55:
 1974              		.loc 3 59 0 is_stmt 1 discriminator 16
 1975 0c72 EB13     		jmp	.L101
 1976              	.L112:
 1977 0c74 4889C3   		movq	%rax, %rbx
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1978              		.loc 3 58 0
 1979 0c77 E8000000 		call	__cxa_end_catch
 1979      00
 1980 0c7c 4889D8   		movq	%rbx, %rax
 1981 0c7f 4889C7   		movq	%rax, %rdi
 1982              	.LEHB56:
 1983 0c82 E8000000 		call	_Unwind_Resume
 1983      00
 1984              	.LEHE56:
 1985              	.L101:
 1986              		.loc 3 59 0
 1987 0c87 488B45E8 		movq	-24(%rbp), %rax
 1988 0c8b 64483304 		xorq	%fs:40, %rax
 1988      25280000 
 1988      00
 1989 0c94 7405     		je	.L108
 1990 0c96 E8000000 		call	__stack_chk_fail
 1990      00
 1991              	.L108:
 1992 0c9b 4883C458 		addq	$88, %rsp
 1993 0c9f 5B       		popq	%rbx
 1994 0ca0 5D       		popq	%rbp
 1995              		.cfi_def_cfa 7, 8
 1996 0ca1 C3       		ret
 1997              		.cfi_endproc
 1998              	.LFE1372:
 1999              		.section	.gcc_except_table
 2000              		.align 4
 2001              	.LLSDA1372:
 2002 011c FF       		.byte	0xff
 2003 011d 03       		.byte	0x3
 2004 011e 39       		.uleb128 .LLSDATT1372-.LLSDATTD1372
 2005              	.LLSDATTD1372:
 2006 011f 01       		.byte	0x1
 2007 0120 2F       		.uleb128 .LLSDACSE1372-.LLSDACSB1372
 2008              	.LLSDACSB1372:
 2009 0121 31       		.uleb128 .LEHB48-.LFB1372
 2010 0122 1E       		.uleb128 .LEHE48-.LEHB48
 2011 0123 00       		.uleb128 0
 2012 0124 00       		.uleb128 0
 2013 0125 53       		.uleb128 .LEHB49-.LFB1372
 2014 0126 56       		.uleb128 .LEHE49-.LEHB49
 2015 0127 8002     		.uleb128 .L109-.LFB1372
 2016 0129 01       		.uleb128 0x1
 2017 012a A901     		.uleb128 .LEHB50-.LFB1372
 2018 012c 52       		.uleb128 .LEHE50-.LEHB50
 2019 012d DD02     		.uleb128 .L111-.LFB1372
 2020 012f 01       		.uleb128 0x1
 2021 0130 8802     		.uleb128 .LEHB51-.LFB1372
 2022 0132 38       		.uleb128 .LEHE51-.LEHB51
 2023 0133 CA02     		.uleb128 .L110-.LFB1372
 2024 0135 00       		.uleb128 0
 2025 0136 C002     		.uleb128 .LEHB52-.LFB1372
 2026 0138 05       		.uleb128 .LEHE52-.LEHB52
 2027 0139 00       		.uleb128 0
 2028 013a 00       		.uleb128 0
 2029 013b D802     		.uleb128 .LEHB53-.LFB1372
 2030 013d 05       		.uleb128 .LEHE53-.LEHB53
 2031 013e 00       		.uleb128 0
 2032 013f 00       		.uleb128 0
 2033 0140 E502     		.uleb128 .LEHB54-.LFB1372
 2034 0142 38       		.uleb128 .LEHE54-.LEHB54
 2035 0143 A403     		.uleb128 .L112-.LFB1372
 2036 0145 00       		.uleb128 0
 2037 0146 9D03     		.uleb128 .LEHB55-.LFB1372
 2038 0148 05       		.uleb128 .LEHE55-.LEHB55
 2039 0149 00       		.uleb128 0
 2040 014a 00       		.uleb128 0
 2041 014b B203     		.uleb128 .LEHB56-.LFB1372
 2042 014d 05       		.uleb128 .LEHE56-.LEHB56
 2043 014e 00       		.uleb128 0
 2044 014f 00       		.uleb128 0
 2045              	.LLSDACSE1372:
 2046 0150 01       		.byte	0x1
 2047 0151 00       		.byte	0
 2048 0152 0000     		.align 4
 2049 0154 00000000 		.long	0
 2050              	
 2051              	.LLSDATT1372:
 2052              		.text
 2054              		.align 2
 2056              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_1
 2057              	.LFB1374:
  60:TestDeferredTestReporter.cpp **** 
  61:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestEndCapturesTestTime)
 2058              		.loc 3 61 0
 2059              		.cfi_startproc
 2060 0ca2 55       		pushq	%rbp
 2061              		.cfi_def_cfa_offset 16
 2062              		.cfi_offset 6, -16
 2063 0ca3 4889E5   		movq	%rsp, %rbp
 2064              		.cfi_def_cfa_register 6
 2065 0ca6 4883EC10 		subq	$16, %rsp
 2066 0caa 48897DF8 		movq	%rdi, -8(%rbp)
 2067 0cae 488975F0 		movq	%rsi, -16(%rbp)
 2068              	.LBB36:
 2069              		.loc 3 61 0
 2070 0cb2 488B45F8 		movq	-8(%rbp), %rax
 2071 0cb6 4889C7   		movq	%rax, %rdi
 2072 0cb9 E884F3FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2072      FF
 2073 0cbe 488B45F8 		movq	-8(%rbp), %rax
 2074 0cc2 488B55F0 		movq	-16(%rbp), %rdx
 2075 0cc6 488990A8 		movq	%rdx, 168(%rax)
 2075      000000
 2076              	.LBE36:
 2077 0ccd 90       		nop
 2078 0cce C9       		leave
 2079              		.cfi_def_cfa 7, 8
 2080 0ccf C3       		ret
 2081              		.cfi_endproc
 2082              	.LFE1374:
 2084              		.set	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1E
 2085              		.section	.rodata
 2086              	.LC13:
 2087 0240 5265706F 		.string	"ReportTestEndCapturesTestTime"
 2087      72745465 
 2087      7374456E 
 2087      64436170 
 2087      74757265 
 2088              		.text
 2089              		.align 2
 2091              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev:
 2092              	.LFB1377:
 2093              		.loc 3 61 0
 2094              		.cfi_startproc
 2095 0cd0 55       		pushq	%rbp
 2096              		.cfi_def_cfa_offset 16
 2097              		.cfi_offset 6, -16
 2098 0cd1 4889E5   		movq	%rsp, %rbp
 2099              		.cfi_def_cfa_register 6
 2100 0cd4 4883EC10 		subq	$16, %rsp
 2101 0cd8 48897DF8 		movq	%rdi, -8(%rbp)
 2102              	.LBB37:
 2103              		.loc 3 61 0
 2104 0cdc E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2104      00
 2105 0ce1 4889C2   		movq	%rax, %rdx
 2106 0ce4 488B45F8 		movq	-8(%rbp), %rax
 2107 0ce8 41B83D00 		movl	$61, %r8d
 2107      0000
 2108 0cee B9000000 		movl	$.LC4, %ecx
 2108      00
 2109 0cf3 BE000000 		movl	$.LC13, %esi
 2109      00
 2110 0cf8 4889C7   		movq	%rax, %rdi
 2111 0cfb E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2111      00
 2112 0d00 BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE+
 2112      00
 2113 0d05 488B45F8 		movq	-8(%rbp), %rax
 2114 0d09 488910   		movq	%rdx, (%rax)
 2115              	.LBE37:
 2116 0d0c 90       		nop
 2117 0d0d C9       		leave
 2118              		.cfi_def_cfa 7, 8
 2119 0d0e C3       		ret
 2120              		.cfi_endproc
 2121              	.LFE1377:
 2123              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev,
 2124              		.local	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeIns
 2125              		.comm	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 2126              		.local	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 2127              		.comm	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE,1
 2128 0d0f 90       		.align 2
 2130              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev:
 2131              	.LFB1381:
 2132              		.loc 3 61 0
 2133              		.cfi_startproc
 2134 0d10 55       		pushq	%rbp
 2135              		.cfi_def_cfa_offset 16
 2136              		.cfi_offset 6, -16
 2137 0d11 4889E5   		movq	%rsp, %rbp
 2138              		.cfi_def_cfa_register 6
 2139 0d14 4883EC10 		subq	$16, %rsp
 2140 0d18 48897DF8 		movq	%rdi, -8(%rbp)
 2141              	.LBB38:
 2142              		.loc 3 61 0
 2143 0d1c 488B45F8 		movq	-8(%rbp), %rax
 2144 0d20 4889C7   		movq	%rax, %rdi
 2145 0d23 E8ECF4FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2145      FF
 2146              	.LBE38:
 2147 0d28 90       		nop
 2148 0d29 C9       		leave
 2149              		.cfi_def_cfa 7, 8
 2150 0d2a C3       		ret
 2151              		.cfi_endproc
 2152              	.LFE1381:
 2154              		.set	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2155 0d2b 90       		.align 2
 2157              	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
 2158              	.LFB1379:
 2159              		.loc 3 61 0
 2160              		.cfi_startproc
 2161              		.cfi_personality 0x3,__gxx_personality_v0
 2162              		.cfi_lsda 0x3,.LLSDA1379
 2163 0d2c 55       		pushq	%rbp
 2164              		.cfi_def_cfa_offset 16
 2165              		.cfi_offset 6, -16
 2166 0d2d 4889E5   		movq	%rsp, %rbp
 2167              		.cfi_def_cfa_register 6
 2168 0d30 4154     		pushq	%r12
 2169 0d32 53       		pushq	%rbx
 2170 0d33 4881ECF0 		subq	$496, %rsp
 2170      010000
 2171              		.cfi_offset 12, -24
 2172              		.cfi_offset 3, -32
 2173 0d3a 4889BD08 		movq	%rdi, -504(%rbp)
 2173      FEFFFF
 2174              		.loc 3 61 0
 2175 0d41 64488B04 		movq	%fs:40, %rax
 2175      25280000 
 2175      00
 2176 0d4a 488945E8 		movq	%rax, -24(%rbp)
 2177 0d4e 31C0     		xorl	%eax, %eax
 2178 0d50 C6851FFE 		movb	$0, -481(%rbp)
 2178      FFFF00
 2179              	.LBB39:
 2180 0d57 488B8508 		movq	-504(%rbp), %rax
 2180      FEFFFF
 2181 0d5e 488D5008 		leaq	8(%rax), %rdx
 2182 0d62 488D8550 		leaq	-432(%rbp), %rax
 2182      FEFFFF
 2183 0d69 4889D6   		movq	%rdx, %rsi
 2184 0d6c 4889C7   		movq	%rax, %rdi
 2185              	.LEHB57:
 2186 0d6f E82EFFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1E
 2186      FF
 2187              	.LEHE57:
 2188              		.loc 3 61 0 is_stmt 0 discriminator 1
 2189 0d74 C6851FFE 		movb	$1, -481(%rbp)
 2189      FFFF01
 2190 0d7b 488B8508 		movq	-504(%rbp), %rax
 2190      FEFFFF
 2191 0d82 488D5008 		leaq	8(%rax), %rdx
 2192 0d86 488D8550 		leaq	-432(%rbp), %rax
 2192      FEFFFF
 2193 0d8d 4889D6   		movq	%rdx, %rsi
 2194 0d90 4889C7   		movq	%rax, %rdi
 2195              	.LEHB58:
 2196 0d93 E8A31A00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCaptures
 2196      00
 2197              	.LEHE58:
 2198              		.loc 3 61 0 discriminator 3
 2199 0d98 488D8550 		leaq	-432(%rbp), %rax
 2199      FEFFFF
 2200 0d9f 4889C7   		movq	%rax, %rdi
 2201              	.LEHB59:
 2202 0da2 E869FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2202      FF
 2203              	.LEHE59:
 2204              	.LBE39:
 2205              		.loc 3 61 0
 2206 0da7 E9660200 		jmp	.L116
 2206      00
 2207              	.L131:
 2208 0dac 4989C4   		movq	%rax, %r12
 2209 0daf 4889D3   		movq	%rdx, %rbx
 2210              	.LBB40:
 2211 0db2 488D8550 		leaq	-432(%rbp), %rax
 2211      FEFFFF
 2212 0db9 4889C7   		movq	%rax, %rdi
 2213 0dbc E84FFFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2213      FF
 2214 0dc1 4C89E0   		movq	%r12, %rax
 2215 0dc4 4889DA   		movq	%rbx, %rdx
 2216 0dc7 EB00     		jmp	.L118
 2217              	.L130:
 2218              	.L118:
 2219 0dc9 4883FA01 		cmpq	$1, %rdx
 2220 0dcd 740F     		je	.L120
 2221 0dcf 4883FA02 		cmpq	$2, %rdx
 2222 0dd3 0F84A700 		je	.L121
 2222      0000
 2223 0dd9 E94B0100 		jmp	.L136
 2223      00
 2224              	.L120:
 2225              	.LBE40:
 2226              	.LBB41:
 2227 0dde 4889C7   		movq	%rax, %rdi
 2228 0de1 E8000000 		call	__cxa_begin_catch
 2228      00
 2229 0de6 48898520 		movq	%rax, -480(%rbp)
 2229      FEFFFF
 2230 0ded 488B8520 		movq	-480(%rbp), %rax
 2230      FEFFFF
 2231 0df4 488B00   		movq	(%rax), %rax
 2232 0df7 4883C010 		addq	$16, %rax
 2233 0dfb 488B00   		movq	(%rax), %rax
 2234 0dfe 488B9520 		movq	-480(%rbp), %rdx
 2234      FEFFFF
 2235 0e05 4889D7   		movq	%rdx, %rdi
 2236 0e08 FFD0     		call	*%rax
 2237 0e0a 4889C3   		movq	%rax, %rbx
 2238 0e0d 488B8520 		movq	-480(%rbp), %rax
 2238      FEFFFF
 2239 0e14 4889C7   		movq	%rax, %rdi
 2240              	.LEHB60:
 2241 0e17 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 2241      00
 2242 0e1c 4189C4   		movl	%eax, %r12d
 2243 0e1f 488B8520 		movq	-480(%rbp), %rax
 2243      FEFFFF
 2244 0e26 4889C7   		movq	%rax, %rdi
 2245 0e29 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 2245      00
 2246              		.loc 3 61 0 discriminator 5
 2247 0e2e 4889C1   		movq	%rax, %rcx
 2248 0e31 488B8508 		movq	-504(%rbp), %rax
 2248      FEFFFF
 2249 0e38 488B5008 		movq	8(%rax), %rdx
 2250 0e3c 488B8508 		movq	-504(%rbp), %rax
 2250      FEFFFF
 2251 0e43 488B7010 		movq	16(%rax), %rsi
 2252 0e47 488D8530 		leaq	-464(%rbp), %rax
 2252      FEFFFF
 2253 0e4e 4589E0   		movl	%r12d, %r8d
 2254 0e51 4889C7   		movq	%rax, %rdi
 2255 0e54 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2255      00
 2256              		.loc 3 61 0 discriminator 9
 2257 0e59 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2257      00
 2258 0e5e 488B00   		movq	(%rax), %rax
 2259 0e61 488D8D30 		leaq	-464(%rbp), %rcx
 2259      FEFFFF
 2260 0e68 4889DA   		movq	%rbx, %rdx
 2261 0e6b 4889CE   		movq	%rcx, %rsi
 2262 0e6e 4889C7   		movq	%rax, %rdi
 2263 0e71 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2263      00
 2264              	.LEHE60:
 2265              		.loc 3 61 0 discriminator 13
 2266 0e76 E8000000 		call	__cxa_end_catch
 2266      00
 2267              	.LBE41:
 2268 0e7b E9920100 		jmp	.L116
 2268      00
 2269              	.L121:
 2270              	.LBB42:
 2271              		.loc 3 61 0
 2272 0e80 4889C7   		movq	%rax, %rdi
 2273 0e83 E8000000 		call	__cxa_begin_catch
 2273      00
 2274 0e88 48898528 		movq	%rax, -472(%rbp)
 2274      FEFFFF
 2275              	.LBB43:
 2276 0e8f 488D8550 		leaq	-432(%rbp), %rax
 2276      FEFFFF
 2277 0e96 4889C7   		movq	%rax, %rdi
 2278              	.LEHB61:
 2279 0e99 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2279      00
 2280              	.LEHE61:
 2281              		.loc 3 61 0 discriminator 15
 2282 0e9e 488B8528 		movq	-472(%rbp), %rax
 2282      FEFFFF
 2283 0ea5 488B00   		movq	(%rax), %rax
 2284 0ea8 4883C010 		addq	$16, %rax
 2285 0eac 488B00   		movq	(%rax), %rax
 2286 0eaf 488B9528 		movq	-472(%rbp), %rdx
 2286      FEFFFF
 2287 0eb6 4889D7   		movq	%rdx, %rdi
 2288 0eb9 FFD0     		call	*%rax
 2289 0ebb 4889C3   		movq	%rax, %rbx
 2290 0ebe 488D8550 		leaq	-432(%rbp), %rax
 2290      FEFFFF
 2291 0ec5 BE000000 		movl	$.LC6, %esi
 2291      00
 2292 0eca 4889C7   		movq	%rax, %rdi
 2293              	.LEHB62:
 2294 0ecd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2294      00
 2295 0ed2 4889DE   		movq	%rbx, %rsi
 2296 0ed5 4889C7   		movq	%rax, %rdi
 2297 0ed8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2297      00
 2298              		.loc 3 61 0 discriminator 19
 2299 0edd 488D8550 		leaq	-432(%rbp), %rax
 2299      FEFFFF
 2300 0ee4 4889C7   		movq	%rax, %rdi
 2301 0ee7 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2301      00
 2302 0eec 4989C4   		movq	%rax, %r12
 2303 0eef 488B8508 		movq	-504(%rbp), %rax
 2303      FEFFFF
 2304 0ef6 488D5808 		leaq	8(%rax), %rbx
 2305 0efa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2305      00
 2306              		.loc 3 61 0 discriminator 21
 2307 0eff 488B00   		movq	(%rax), %rax
 2308 0f02 4C89E2   		movq	%r12, %rdx
 2309 0f05 4889DE   		movq	%rbx, %rsi
 2310 0f08 4889C7   		movq	%rax, %rdi
 2311 0f0b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2311      00
 2312              	.LEHE62:
 2313              		.loc 3 61 0 discriminator 25
 2314 0f10 488D8550 		leaq	-432(%rbp), %rax
 2314      FEFFFF
 2315 0f17 4889C7   		movq	%rax, %rdi
 2316              	.LEHB63:
 2317 0f1a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2317      00
 2318              	.LEHE63:
 2319              	.LBE43:
 2320              		.loc 3 61 0 discriminator 26
 2321 0f1f E8000000 		call	__cxa_end_catch
 2321      00
 2322              	.LBE42:
 2323 0f24 E9E90000 		jmp	.L116
 2323      00
 2324              	.L136:
 2325              		.loc 3 61 0
 2326 0f29 4889C7   		movq	%rax, %rdi
 2327 0f2c E8000000 		call	__cxa_begin_catch
 2327      00
 2328 0f31 80BD1FFE 		cmpb	$0, -481(%rbp)
 2328      FFFF00
 2329 0f38 7443     		je	.L123
 2330              		.loc 3 61 0 discriminator 28
 2331 0f3a 488B8508 		movq	-504(%rbp), %rax
 2331      FEFFFF
 2332 0f41 488D4808 		leaq	8(%rax), %rcx
 2333 0f45 488D8530 		leaq	-464(%rbp), %rax
 2333      FEFFFF
 2334 0f4c BA3D0000 		movl	$61, %edx
 2334      00
 2335 0f51 4889CE   		movq	%rcx, %rsi
 2336 0f54 4889C7   		movq	%rax, %rdi
 2337              	.LEHB64:
 2338 0f57 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2338      00
 2339              		.loc 3 61 0 discriminator 31
 2340 0f5c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2340      00
 2341 0f61 488B00   		movq	(%rax), %rax
 2342 0f64 488D8D30 		leaq	-464(%rbp), %rcx
 2342      FEFFFF
 2343 0f6b BA000000 		movl	$.LC7, %edx
 2343      00
 2344 0f70 4889CE   		movq	%rcx, %rsi
 2345 0f73 4889C7   		movq	%rax, %rdi
 2346 0f76 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2346      00
 2347 0f7b EB41     		jmp	.L124
 2348              	.L123:
 2349              		.loc 3 61 0 discriminator 29
 2350 0f7d 488B8508 		movq	-504(%rbp), %rax
 2350      FEFFFF
 2351 0f84 488D4808 		leaq	8(%rax), %rcx
 2352 0f88 488D8530 		leaq	-464(%rbp), %rax
 2352      FEFFFF
 2353 0f8f BA3D0000 		movl	$61, %edx
 2353      00
 2354 0f94 4889CE   		movq	%rcx, %rsi
 2355 0f97 4889C7   		movq	%rax, %rdi
 2356 0f9a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2356      00
 2357              		.loc 3 61 0 discriminator 38
 2358 0f9f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2358      00
 2359 0fa4 488B00   		movq	(%rax), %rax
 2360 0fa7 488D8D30 		leaq	-464(%rbp), %rcx
 2360      FEFFFF
 2361 0fae BA000000 		movl	$.LC8, %edx
 2361      00
 2362 0fb3 4889CE   		movq	%rcx, %rsi
 2363 0fb6 4889C7   		movq	%rax, %rdi
 2364 0fb9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2364      00
 2365              	.LEHE64:
 2366              	.L124:
 2367              	.LEHB65:
 2368              		.loc 3 61 0 discriminator 43
 2369 0fbe E8000000 		call	__cxa_end_catch
 2369      00
 2370 0fc3 EB4D     		jmp	.L116
 2371              	.L132:
 2372 0fc5 4889C3   		movq	%rax, %rbx
 2373              	.LBB45:
 2374              		.loc 3 61 0
 2375 0fc8 E8000000 		call	__cxa_end_catch
 2375      00
 2376 0fcd 4889D8   		movq	%rbx, %rax
 2377 0fd0 4889C7   		movq	%rax, %rdi
 2378 0fd3 E8000000 		call	_Unwind_Resume
 2378      00
 2379              	.LEHE65:
 2380              	.L134:
 2381 0fd8 4889C3   		movq	%rax, %rbx
 2382              	.LBE45:
 2383              	.LBB46:
 2384              	.LBB44:
 2385 0fdb 488D8550 		leaq	-432(%rbp), %rax
 2385      FEFFFF
 2386 0fe2 4889C7   		movq	%rax, %rdi
 2387 0fe5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2387      00
 2388 0fea EB03     		jmp	.L127
 2389              	.L133:
 2390 0fec 4889C3   		movq	%rax, %rbx
 2391              	.L127:
 2392              	.LBE44:
 2393 0fef E8000000 		call	__cxa_end_catch
 2393      00
 2394 0ff4 4889D8   		movq	%rbx, %rax
 2395 0ff7 4889C7   		movq	%rax, %rdi
 2396              	.LEHB66:
 2397 0ffa E8000000 		call	_Unwind_Resume
 2397      00
 2398              	.LEHE66:
 2399              	.L135:
 2400 0fff 4889C3   		movq	%rax, %rbx
 2401              	.LBE46:
 2402 1002 E8000000 		call	__cxa_end_catch
 2402      00
 2403 1007 4889D8   		movq	%rbx, %rax
 2404 100a 4889C7   		movq	%rax, %rdi
 2405              	.LEHB67:
 2406 100d E8000000 		call	_Unwind_Resume
 2406      00
 2407              	.LEHE67:
 2408              	.L116:
 2409 1012 488B45E8 		movq	-24(%rbp), %rax
 2410 1016 64483304 		xorq	%fs:40, %rax
 2410      25280000 
 2410      00
 2411 101f 7405     		je	.L129
 2412 1021 E8000000 		call	__stack_chk_fail
 2412      00
 2413              	.L129:
 2414 1026 4881C4F0 		addq	$496, %rsp
 2414      010000
 2415 102d 5B       		popq	%rbx
 2416 102e 415C     		popq	%r12
 2417 1030 5D       		popq	%rbp
 2418              		.cfi_def_cfa 7, 8
 2419 1031 C3       		ret
 2420              		.cfi_endproc
 2421              	.LFE1379:
 2422              		.section	.gcc_except_table
 2423              		.align 4
 2424              	.LLSDA1379:
 2425 0158 FF       		.byte	0xff
 2426 0159 03       		.byte	0x3
 2427 015a 55       		.uleb128 .LLSDATT1379-.LLSDATTD1379
 2428              	.LLSDATTD1379:
 2429 015b 01       		.byte	0x1
 2430 015c 3C       		.uleb128 .LLSDACSE1379-.LLSDACSB1379
 2431              	.LLSDACSB1379:
 2432 015d 43       		.uleb128 .LEHB57-.LFB1379
 2433 015e 05       		.uleb128 .LEHE57-.LEHB57
 2434 015f 9D01     		.uleb128 .L130-.LFB1379
 2435 0161 05       		.uleb128 0x5
 2436 0162 67       		.uleb128 .LEHB58-.LFB1379
 2437 0163 05       		.uleb128 .LEHE58-.LEHB58
 2438 0164 8001     		.uleb128 .L131-.LFB1379
 2439 0166 07       		.uleb128 0x7
 2440 0167 76       		.uleb128 .LEHB59-.LFB1379
 2441 0168 05       		.uleb128 .LEHE59-.LEHB59
 2442 0169 9D01     		.uleb128 .L130-.LFB1379
 2443 016b 05       		.uleb128 0x5
 2444 016c EB01     		.uleb128 .LEHB60-.LFB1379
 2445 016e 5F       		.uleb128 .LEHE60-.LEHB60
 2446 016f 9905     		.uleb128 .L132-.LFB1379
 2447 0171 00       		.uleb128 0
 2448 0172 ED02     		.uleb128 .LEHB61-.LFB1379
 2449 0174 05       		.uleb128 .LEHE61-.LEHB61
 2450 0175 C005     		.uleb128 .L133-.LFB1379
 2451 0177 00       		.uleb128 0
 2452 0178 A103     		.uleb128 .LEHB62-.LFB1379
 2453 017a 43       		.uleb128 .LEHE62-.LEHB62
 2454 017b AC05     		.uleb128 .L134-.LFB1379
 2455 017d 00       		.uleb128 0
 2456 017e EE03     		.uleb128 .LEHB63-.LFB1379
 2457 0180 05       		.uleb128 .LEHE63-.LEHB63
 2458 0181 C005     		.uleb128 .L133-.LFB1379
 2459 0183 00       		.uleb128 0
 2460 0184 AB04     		.uleb128 .LEHB64-.LFB1379
 2461 0186 67       		.uleb128 .LEHE64-.LEHB64
 2462 0187 D305     		.uleb128 .L135-.LFB1379
 2463 0189 00       		.uleb128 0
 2464 018a 9205     		.uleb128 .LEHB65-.LFB1379
 2465 018c 1A       		.uleb128 .LEHE65-.LEHB65
 2466 018d 00       		.uleb128 0
 2467 018e 00       		.uleb128 0
 2468 018f CE05     		.uleb128 .LEHB66-.LFB1379
 2469 0191 05       		.uleb128 .LEHE66-.LEHB66
 2470 0192 00       		.uleb128 0
 2471 0193 00       		.uleb128 0
 2472 0194 E105     		.uleb128 .LEHB67-.LFB1379
 2473 0196 05       		.uleb128 .LEHE67-.LEHB67
 2474 0197 00       		.uleb128 0
 2475 0198 00       		.uleb128 0
 2476              	.LLSDACSE1379:
 2477 0199 03       		.byte	0x3
 2478 019a 00       		.byte	0
 2479 019b 02       		.byte	0x2
 2480 019c 7D       		.byte	0x7d
 2481 019d 01       		.byte	0x1
 2482 019e 7D       		.byte	0x7d
 2483 019f 00       		.byte	0
 2484 01a0 7D       		.byte	0x7d
 2485 01a1 000000   		.align 4
 2486 01a4 00000000 		.long	0
 2487              	
 2488 01a8 00000000 		.long	_ZTISt9exception
 2489 01ac 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2490              	.LLSDATT1379:
 2491              		.text
 2493              		.section	.rodata
 2494 025e 0000     		.align 8
 2495              	.LC16:
 2496 0260 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(elapsed, result.timeElapsed)"
 2496      6E646C65 
 2496      64206578 
 2496      63657074 
 2496      696F6E20 
 2497              		.text
 2498              		.align 2
 2500              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplE
 2501              	.LFB1383:
  62:TestDeferredTestReporter.cpp **** {
 2502              		.loc 3 62 0 is_stmt 1
 2503              		.cfi_startproc
 2504              		.cfi_personality 0x3,__gxx_personality_v0
 2505              		.cfi_lsda 0x3,.LLSDA1383
 2506 1032 55       		pushq	%rbp
 2507              		.cfi_def_cfa_offset 16
 2508              		.cfi_offset 6, -16
 2509 1033 4889E5   		movq	%rsp, %rbp
 2510              		.cfi_def_cfa_register 6
 2511 1036 53       		pushq	%rbx
 2512 1037 4883EC58 		subq	$88, %rsp
 2513              		.cfi_offset 3, -24
 2514 103b 48897DA8 		movq	%rdi, -88(%rbp)
 2515              		.loc 3 62 0
 2516 103f 64488B04 		movq	%fs:40, %rax
 2516      25280000 
 2516      00
 2517 1048 488945E8 		movq	%rax, -24(%rbp)
 2518 104c 31C0     		xorl	%eax, %eax
  63:TestDeferredTestReporter.cpp ****     float const elapsed = 123.45f;
 2519              		.loc 3 63 0
 2520 104e F30F1005 		movss	.LC14(%rip), %xmm0
 2520      00000000 
 2521 1056 F30F1145 		movss	%xmm0, -80(%rbp)
 2521      B0
  64:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 2522              		.loc 3 64 0
 2523 105b 488B45A8 		movq	-88(%rbp), %rax
 2524 105f 488D9088 		leaq	136(%rax), %rdx
 2524      000000
 2525 1066 488B45A8 		movq	-88(%rbp), %rax
 2526 106a 4889D6   		movq	%rdx, %rsi
 2527 106d 4889C7   		movq	%rax, %rdi
 2528              	.LEHB68:
 2529 1070 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 2529      00
  65:TestDeferredTestReporter.cpp ****     reporter.ReportTestFinish(details, elapsed);
 2530              		.loc 3 65 0
 2531 1075 8B55B0   		movl	-80(%rbp), %edx
 2532 1078 488B45A8 		movq	-88(%rbp), %rax
 2533 107c 488D8888 		leaq	136(%rax), %rcx
 2533      000000
 2534 1083 488B45A8 		movq	-88(%rbp), %rax
 2535 1087 8955A4   		movl	%edx, -92(%rbp)
 2536 108a F30F1045 		movss	-92(%rbp), %xmm0
 2536      A4
 2537 108f 4889CE   		movq	%rcx, %rsi
 2538 1092 4889C7   		movq	%rax, %rdi
 2539 1095 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 2539      00
  66:TestDeferredTestReporter.cpp **** 
  67:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 2540              		.loc 3 67 0
 2541 109a 488B45A8 		movq	-88(%rbp), %rax
 2542 109e 4889C7   		movq	%rax, %rdi
 2543 10a1 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 2543      00
 2544 10a6 BE000000 		movl	$0, %esi
 2544      00
 2545 10ab 4889C7   		movq	%rax, %rdi
 2546 10ae E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 2546      00
 2547              	.LEHE68:
 2548 10b3 488945B8 		movq	%rax, -72(%rbp)
 2549              	.LEHB69:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2550              		.loc 3 68 0
 2551 10b7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2551      00
 2552 10bc 488B08   		movq	(%rax), %rcx
 2553 10bf 488D45C0 		leaq	-64(%rbp), %rax
 2554 10c3 BA440000 		movl	$68, %edx
 2554      00
 2555 10c8 4889CE   		movq	%rcx, %rsi
 2556 10cb 4889C7   		movq	%rax, %rdi
 2557 10ce E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2557      00
 2558              	.LEHE69:
 2559              		.loc 3 68 0 is_stmt 0 discriminator 2
 2560 10d3 F30F1005 		movss	.LC15(%rip), %xmm0
 2560      00000000 
 2561 10db F30F1145 		movss	%xmm0, -76(%rbp)
 2561      B4
 2562 10e0 488B45B8 		movq	-72(%rbp), %rax
 2563 10e4 488D5878 		leaq	120(%rax), %rbx
 2564              	.LEHB70:
 2565 10e8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2565      00
 2566 10ed 488B00   		movq	(%rax), %rax
 2567 10f0 488D4DC0 		leaq	-64(%rbp), %rcx
 2568 10f4 488D55B4 		leaq	-76(%rbp), %rdx
 2569 10f8 488D75B0 		leaq	-80(%rbp), %rsi
 2570 10fc 4989C8   		movq	%rcx, %r8
 2571 10ff 4889D1   		movq	%rdx, %rcx
 2572 1102 4889DA   		movq	%rbx, %rdx
 2573 1105 4889C7   		movq	%rax, %rdi
 2574 1108 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 2574      00
 2575              	.LEHE70:
  69:TestDeferredTestReporter.cpp **** }
 2576              		.loc 3 69 0 is_stmt 1
 2577 110d EB5C     		jmp	.L137
 2578              	.L144:
 2579 110f EB00     		jmp	.L139
 2580              	.L143:
 2581              	.L139:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2582              		.loc 3 68 0
 2583 1111 4889C7   		movq	%rax, %rdi
 2584 1114 E8000000 		call	__cxa_begin_catch
 2584      00
 2585              	.LEHB71:
 2586 1119 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2586      00
 2587 111e 488B08   		movq	(%rax), %rcx
 2588 1121 488D45C0 		leaq	-64(%rbp), %rax
 2589 1125 BA440000 		movl	$68, %edx
 2589      00
 2590 112a 4889CE   		movq	%rcx, %rsi
 2591 112d 4889C7   		movq	%rax, %rdi
 2592 1130 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2592      00
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2593              		.loc 3 68 0 is_stmt 0 discriminator 10
 2594 1135 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2594      00
 2595 113a 488B00   		movq	(%rax), %rax
 2596 113d 488D4DC0 		leaq	-64(%rbp), %rcx
 2597 1141 BA000000 		movl	$.LC16, %edx
 2597      00
 2598 1146 4889CE   		movq	%rcx, %rsi
 2599 1149 4889C7   		movq	%rax, %rdi
 2600 114c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2600      00
 2601              	.LEHE71:
 2602              	.LEHB72:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2603              		.loc 3 68 0 discriminator 14
 2604 1151 E8000000 		call	__cxa_end_catch
 2604      00
 2605              	.LEHE72:
 2606              		.loc 3 69 0 is_stmt 1 discriminator 14
 2607 1156 EB13     		jmp	.L137
 2608              	.L145:
 2609 1158 4889C3   		movq	%rax, %rbx
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2610              		.loc 3 68 0
 2611 115b E8000000 		call	__cxa_end_catch
 2611      00
 2612 1160 4889D8   		movq	%rbx, %rax
 2613 1163 4889C7   		movq	%rax, %rdi
 2614              	.LEHB73:
 2615 1166 E8000000 		call	_Unwind_Resume
 2615      00
 2616              	.LEHE73:
 2617              	.L137:
 2618              		.loc 3 69 0
 2619 116b 488B45E8 		movq	-24(%rbp), %rax
 2620 116f 64483304 		xorq	%fs:40, %rax
 2620      25280000 
 2620      00
 2621 1178 7405     		je	.L142
 2622 117a E8000000 		call	__stack_chk_fail
 2622      00
 2623              	.L142:
 2624 117f 4883C458 		addq	$88, %rsp
 2625 1183 5B       		popq	%rbx
 2626 1184 5D       		popq	%rbp
 2627              		.cfi_def_cfa 7, 8
 2628 1185 C3       		ret
 2629              		.cfi_endproc
 2630              	.LFE1383:
 2631              		.section	.gcc_except_table
 2632              		.align 4
 2633              	.LLSDA1383:
 2634 01b0 FF       		.byte	0xff
 2635 01b1 03       		.byte	0x3
 2636 01b2 2D       		.uleb128 .LLSDATT1383-.LLSDATTD1383
 2637              	.LLSDATTD1383:
 2638 01b3 01       		.byte	0x1
 2639 01b4 20       		.uleb128 .LLSDACSE1383-.LLSDACSB1383
 2640              	.LLSDACSB1383:
 2641 01b5 3E       		.uleb128 .LEHB68-.LFB1383
 2642 01b6 43       		.uleb128 .LEHE68-.LEHB68
 2643 01b7 00       		.uleb128 0
 2644 01b8 00       		.uleb128 0
 2645 01b9 8501     		.uleb128 .LEHB69-.LFB1383
 2646 01bb 1C       		.uleb128 .LEHE69-.LEHB69
 2647 01bc DF01     		.uleb128 .L143-.LFB1383
 2648 01be 01       		.uleb128 0x1
 2649 01bf B601     		.uleb128 .LEHB70-.LFB1383
 2650 01c1 25       		.uleb128 .LEHE70-.LEHB70
 2651 01c2 DD01     		.uleb128 .L144-.LFB1383
 2652 01c4 03       		.uleb128 0x3
 2653 01c5 E701     		.uleb128 .LEHB71-.LFB1383
 2654 01c7 38       		.uleb128 .LEHE71-.LEHB71
 2655 01c8 A602     		.uleb128 .L145-.LFB1383
 2656 01ca 00       		.uleb128 0
 2657 01cb 9F02     		.uleb128 .LEHB72-.LFB1383
 2658 01cd 05       		.uleb128 .LEHE72-.LEHB72
 2659 01ce 00       		.uleb128 0
 2660 01cf 00       		.uleb128 0
 2661 01d0 B402     		.uleb128 .LEHB73-.LFB1383
 2662 01d2 05       		.uleb128 .LEHE73-.LEHB73
 2663 01d3 00       		.uleb128 0
 2664 01d4 00       		.uleb128 0
 2665              	.LLSDACSE1383:
 2666 01d5 01       		.byte	0x1
 2667 01d6 00       		.byte	0
 2668 01d7 00       		.byte	0
 2669 01d8 7D       		.byte	0x7d
 2670 01d9 000000   		.align 4
 2671 01dc 00000000 		.long	0
 2672              	
 2673              	.LLSDATT1383:
 2674              		.text
 2676              		.align 2
 2678              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKN
 2679              	.LFB1385:
  70:TestDeferredTestReporter.cpp **** 
  71:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetails)
 2680              		.loc 3 71 0
 2681              		.cfi_startproc
 2682 1186 55       		pushq	%rbp
 2683              		.cfi_def_cfa_offset 16
 2684              		.cfi_offset 6, -16
 2685 1187 4889E5   		movq	%rsp, %rbp
 2686              		.cfi_def_cfa_register 6
 2687 118a 4883EC10 		subq	$16, %rsp
 2688 118e 48897DF8 		movq	%rdi, -8(%rbp)
 2689 1192 488975F0 		movq	%rsi, -16(%rbp)
 2690              	.LBB47:
 2691              		.loc 3 71 0
 2692 1196 488B45F8 		movq	-8(%rbp), %rax
 2693 119a 4889C7   		movq	%rax, %rdi
 2694 119d E8A0EEFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2694      FF
 2695 11a2 488B45F8 		movq	-8(%rbp), %rax
 2696 11a6 488B55F0 		movq	-16(%rbp), %rdx
 2697 11aa 488990A8 		movq	%rdx, 168(%rax)
 2697      000000
 2698              	.LBE47:
 2699 11b1 90       		nop
 2700 11b2 C9       		leave
 2701              		.cfi_def_cfa 7, 8
 2702 11b3 C3       		ret
 2703              		.cfi_endproc
 2704              	.LFE1385:
 2706              		.set	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2707              		.section	.rodata
 2708              		.align 8
 2709              	.LC17:
 2710 02a0 5265706F 		.string	"ReportFailureSavesFailureDetails"
 2710      72744661 
 2710      696C7572 
 2710      65536176 
 2710      65734661 
 2711              		.text
 2712              		.align 2
 2714              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev:
 2715              	.LFB1388:
 2716              		.loc 3 71 0
 2717              		.cfi_startproc
 2718 11b4 55       		pushq	%rbp
 2719              		.cfi_def_cfa_offset 16
 2720              		.cfi_offset 6, -16
 2721 11b5 4889E5   		movq	%rsp, %rbp
 2722              		.cfi_def_cfa_register 6
 2723 11b8 4883EC10 		subq	$16, %rsp
 2724 11bc 48897DF8 		movq	%rdi, -8(%rbp)
 2725              	.LBB48:
 2726              		.loc 3 71 0
 2727 11c0 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2727      00
 2728 11c5 4889C2   		movq	%rax, %rdx
 2729 11c8 488B45F8 		movq	-8(%rbp), %rax
 2730 11cc 41B84700 		movl	$71, %r8d
 2730      0000
 2731 11d2 B9000000 		movl	$.LC4, %ecx
 2731      00
 2732 11d7 BE000000 		movl	$.LC17, %esi
 2732      00
 2733 11dc 4889C7   		movq	%rax, %rdi
 2734 11df E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2734      00
 2735 11e4 BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 2735      00
 2736 11e9 488B45F8 		movq	-8(%rbp), %rax
 2737 11ed 488910   		movq	%rdx, (%rax)
 2738              	.LBE48:
 2739 11f0 90       		nop
 2740 11f1 C9       		leave
 2741              		.cfi_def_cfa 7, 8
 2742 11f2 C3       		ret
 2743              		.cfi_endproc
 2744              	.LFE1388:
 2746              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1
 2747              		.local	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2748              		.comm	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 2749              		.local	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 2750              		.comm	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2751 11f3 90       		.align 2
 2753              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev:
 2754              	.LFB1392:
 2755              		.loc 3 71 0
 2756              		.cfi_startproc
 2757 11f4 55       		pushq	%rbp
 2758              		.cfi_def_cfa_offset 16
 2759              		.cfi_offset 6, -16
 2760 11f5 4889E5   		movq	%rsp, %rbp
 2761              		.cfi_def_cfa_register 6
 2762 11f8 4883EC10 		subq	$16, %rsp
 2763 11fc 48897DF8 		movq	%rdi, -8(%rbp)
 2764              	.LBB49:
 2765              		.loc 3 71 0
 2766 1200 488B45F8 		movq	-8(%rbp), %rax
 2767 1204 4889C7   		movq	%rax, %rdi
 2768 1207 E808F0FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2768      FF
 2769              	.LBE49:
 2770 120c 90       		nop
 2771 120d C9       		leave
 2772              		.cfi_def_cfa 7, 8
 2773 120e C3       		ret
 2774              		.cfi_endproc
 2775              	.LFE1392:
 2777              		.set	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2778 120f 90       		.align 2
 2780              	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImp
 2781              	.LFB1390:
 2782              		.loc 3 71 0
 2783              		.cfi_startproc
 2784              		.cfi_personality 0x3,__gxx_personality_v0
 2785              		.cfi_lsda 0x3,.LLSDA1390
 2786 1210 55       		pushq	%rbp
 2787              		.cfi_def_cfa_offset 16
 2788              		.cfi_offset 6, -16
 2789 1211 4889E5   		movq	%rsp, %rbp
 2790              		.cfi_def_cfa_register 6
 2791 1214 4154     		pushq	%r12
 2792 1216 53       		pushq	%rbx
 2793 1217 4881ECF0 		subq	$496, %rsp
 2793      010000
 2794              		.cfi_offset 12, -24
 2795              		.cfi_offset 3, -32
 2796 121e 4889BD08 		movq	%rdi, -504(%rbp)
 2796      FEFFFF
 2797              		.loc 3 71 0
 2798 1225 64488B04 		movq	%fs:40, %rax
 2798      25280000 
 2798      00
 2799 122e 488945E8 		movq	%rax, -24(%rbp)
 2800 1232 31C0     		xorl	%eax, %eax
 2801 1234 C6851FFE 		movb	$0, -481(%rbp)
 2801      FFFF00
 2802              	.LBB50:
 2803 123b 488B8508 		movq	-504(%rbp), %rax
 2803      FEFFFF
 2804 1242 488D5008 		leaq	8(%rax), %rdx
 2805 1246 488D8550 		leaq	-432(%rbp), %rax
 2805      FEFFFF
 2806 124d 4889D6   		movq	%rdx, %rsi
 2807 1250 4889C7   		movq	%rax, %rdi
 2808              	.LEHB74:
 2809 1253 E82EFFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2809      FF
 2810              	.LEHE74:
 2811              		.loc 3 71 0 is_stmt 0 discriminator 1
 2812 1258 C6851FFE 		movb	$1, -481(%rbp)
 2812      FFFF01
 2813 125f 488B8508 		movq	-504(%rbp), %rax
 2813      FEFFFF
 2814 1266 488D5008 		leaq	8(%rax), %rdx
 2815 126a 488D8550 		leaq	-432(%rbp), %rax
 2815      FEFFFF
 2816 1271 4889D6   		movq	%rdx, %rsi
 2817 1274 4889C7   		movq	%rax, %rdi
 2818              	.LEHB75:
 2819 1277 E87E1800 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFai
 2819      00
 2820              	.LEHE75:
 2821              		.loc 3 71 0 discriminator 3
 2822 127c 488D8550 		leaq	-432(%rbp), %rax
 2822      FEFFFF
 2823 1283 4889C7   		movq	%rax, %rdi
 2824              	.LEHB76:
 2825 1286 E869FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2825      FF
 2826              	.LEHE76:
 2827              	.LBE50:
 2828              		.loc 3 71 0
 2829 128b E9660200 		jmp	.L149
 2829      00
 2830              	.L164:
 2831 1290 4989C4   		movq	%rax, %r12
 2832 1293 4889D3   		movq	%rdx, %rbx
 2833              	.LBB51:
 2834 1296 488D8550 		leaq	-432(%rbp), %rax
 2834      FEFFFF
 2835 129d 4889C7   		movq	%rax, %rdi
 2836 12a0 E84FFFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2836      FF
 2837 12a5 4C89E0   		movq	%r12, %rax
 2838 12a8 4889DA   		movq	%rbx, %rdx
 2839 12ab EB00     		jmp	.L151
 2840              	.L163:
 2841              	.L151:
 2842 12ad 4883FA01 		cmpq	$1, %rdx
 2843 12b1 740F     		je	.L153
 2844 12b3 4883FA02 		cmpq	$2, %rdx
 2845 12b7 0F84A700 		je	.L154
 2845      0000
 2846 12bd E94B0100 		jmp	.L169
 2846      00
 2847              	.L153:
 2848              	.LBE51:
 2849              	.LBB52:
 2850 12c2 4889C7   		movq	%rax, %rdi
 2851 12c5 E8000000 		call	__cxa_begin_catch
 2851      00
 2852 12ca 48898520 		movq	%rax, -480(%rbp)
 2852      FEFFFF
 2853 12d1 488B8520 		movq	-480(%rbp), %rax
 2853      FEFFFF
 2854 12d8 488B00   		movq	(%rax), %rax
 2855 12db 4883C010 		addq	$16, %rax
 2856 12df 488B00   		movq	(%rax), %rax
 2857 12e2 488B9520 		movq	-480(%rbp), %rdx
 2857      FEFFFF
 2858 12e9 4889D7   		movq	%rdx, %rdi
 2859 12ec FFD0     		call	*%rax
 2860 12ee 4889C3   		movq	%rax, %rbx
 2861 12f1 488B8520 		movq	-480(%rbp), %rax
 2861      FEFFFF
 2862 12f8 4889C7   		movq	%rax, %rdi
 2863              	.LEHB77:
 2864 12fb E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 2864      00
 2865 1300 4189C4   		movl	%eax, %r12d
 2866 1303 488B8520 		movq	-480(%rbp), %rax
 2866      FEFFFF
 2867 130a 4889C7   		movq	%rax, %rdi
 2868 130d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 2868      00
 2869              		.loc 3 71 0 discriminator 5
 2870 1312 4889C1   		movq	%rax, %rcx
 2871 1315 488B8508 		movq	-504(%rbp), %rax
 2871      FEFFFF
 2872 131c 488B5008 		movq	8(%rax), %rdx
 2873 1320 488B8508 		movq	-504(%rbp), %rax
 2873      FEFFFF
 2874 1327 488B7010 		movq	16(%rax), %rsi
 2875 132b 488D8530 		leaq	-464(%rbp), %rax
 2875      FEFFFF
 2876 1332 4589E0   		movl	%r12d, %r8d
 2877 1335 4889C7   		movq	%rax, %rdi
 2878 1338 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2878      00
 2879              		.loc 3 71 0 discriminator 9
 2880 133d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2880      00
 2881 1342 488B00   		movq	(%rax), %rax
 2882 1345 488D8D30 		leaq	-464(%rbp), %rcx
 2882      FEFFFF
 2883 134c 4889DA   		movq	%rbx, %rdx
 2884 134f 4889CE   		movq	%rcx, %rsi
 2885 1352 4889C7   		movq	%rax, %rdi
 2886 1355 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2886      00
 2887              	.LEHE77:
 2888              		.loc 3 71 0 discriminator 13
 2889 135a E8000000 		call	__cxa_end_catch
 2889      00
 2890              	.LBE52:
 2891 135f E9920100 		jmp	.L149
 2891      00
 2892              	.L154:
 2893              	.LBB53:
 2894              		.loc 3 71 0
 2895 1364 4889C7   		movq	%rax, %rdi
 2896 1367 E8000000 		call	__cxa_begin_catch
 2896      00
 2897 136c 48898528 		movq	%rax, -472(%rbp)
 2897      FEFFFF
 2898              	.LBB54:
 2899 1373 488D8550 		leaq	-432(%rbp), %rax
 2899      FEFFFF
 2900 137a 4889C7   		movq	%rax, %rdi
 2901              	.LEHB78:
 2902 137d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2902      00
 2903              	.LEHE78:
 2904              		.loc 3 71 0 discriminator 15
 2905 1382 488B8528 		movq	-472(%rbp), %rax
 2905      FEFFFF
 2906 1389 488B00   		movq	(%rax), %rax
 2907 138c 4883C010 		addq	$16, %rax
 2908 1390 488B00   		movq	(%rax), %rax
 2909 1393 488B9528 		movq	-472(%rbp), %rdx
 2909      FEFFFF
 2910 139a 4889D7   		movq	%rdx, %rdi
 2911 139d FFD0     		call	*%rax
 2912 139f 4889C3   		movq	%rax, %rbx
 2913 13a2 488D8550 		leaq	-432(%rbp), %rax
 2913      FEFFFF
 2914 13a9 BE000000 		movl	$.LC6, %esi
 2914      00
 2915 13ae 4889C7   		movq	%rax, %rdi
 2916              	.LEHB79:
 2917 13b1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2917      00
 2918 13b6 4889DE   		movq	%rbx, %rsi
 2919 13b9 4889C7   		movq	%rax, %rdi
 2920 13bc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2920      00
 2921              		.loc 3 71 0 discriminator 19
 2922 13c1 488D8550 		leaq	-432(%rbp), %rax
 2922      FEFFFF
 2923 13c8 4889C7   		movq	%rax, %rdi
 2924 13cb E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2924      00
 2925 13d0 4989C4   		movq	%rax, %r12
 2926 13d3 488B8508 		movq	-504(%rbp), %rax
 2926      FEFFFF
 2927 13da 488D5808 		leaq	8(%rax), %rbx
 2928 13de E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2928      00
 2929              		.loc 3 71 0 discriminator 21
 2930 13e3 488B00   		movq	(%rax), %rax
 2931 13e6 4C89E2   		movq	%r12, %rdx
 2932 13e9 4889DE   		movq	%rbx, %rsi
 2933 13ec 4889C7   		movq	%rax, %rdi
 2934 13ef E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2934      00
 2935              	.LEHE79:
 2936              		.loc 3 71 0 discriminator 25
 2937 13f4 488D8550 		leaq	-432(%rbp), %rax
 2937      FEFFFF
 2938 13fb 4889C7   		movq	%rax, %rdi
 2939              	.LEHB80:
 2940 13fe E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2940      00
 2941              	.LEHE80:
 2942              	.LBE54:
 2943              		.loc 3 71 0 discriminator 26
 2944 1403 E8000000 		call	__cxa_end_catch
 2944      00
 2945              	.LBE53:
 2946 1408 E9E90000 		jmp	.L149
 2946      00
 2947              	.L169:
 2948              		.loc 3 71 0
 2949 140d 4889C7   		movq	%rax, %rdi
 2950 1410 E8000000 		call	__cxa_begin_catch
 2950      00
 2951 1415 80BD1FFE 		cmpb	$0, -481(%rbp)
 2951      FFFF00
 2952 141c 7443     		je	.L156
 2953              		.loc 3 71 0 discriminator 28
 2954 141e 488B8508 		movq	-504(%rbp), %rax
 2954      FEFFFF
 2955 1425 488D4808 		leaq	8(%rax), %rcx
 2956 1429 488D8530 		leaq	-464(%rbp), %rax
 2956      FEFFFF
 2957 1430 BA470000 		movl	$71, %edx
 2957      00
 2958 1435 4889CE   		movq	%rcx, %rsi
 2959 1438 4889C7   		movq	%rax, %rdi
 2960              	.LEHB81:
 2961 143b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2961      00
 2962              		.loc 3 71 0 discriminator 31
 2963 1440 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2963      00
 2964 1445 488B00   		movq	(%rax), %rax
 2965 1448 488D8D30 		leaq	-464(%rbp), %rcx
 2965      FEFFFF
 2966 144f BA000000 		movl	$.LC7, %edx
 2966      00
 2967 1454 4889CE   		movq	%rcx, %rsi
 2968 1457 4889C7   		movq	%rax, %rdi
 2969 145a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2969      00
 2970 145f EB41     		jmp	.L157
 2971              	.L156:
 2972              		.loc 3 71 0 discriminator 29
 2973 1461 488B8508 		movq	-504(%rbp), %rax
 2973      FEFFFF
 2974 1468 488D4808 		leaq	8(%rax), %rcx
 2975 146c 488D8530 		leaq	-464(%rbp), %rax
 2975      FEFFFF
 2976 1473 BA470000 		movl	$71, %edx
 2976      00
 2977 1478 4889CE   		movq	%rcx, %rsi
 2978 147b 4889C7   		movq	%rax, %rdi
 2979 147e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2979      00
 2980              		.loc 3 71 0 discriminator 38
 2981 1483 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2981      00
 2982 1488 488B00   		movq	(%rax), %rax
 2983 148b 488D8D30 		leaq	-464(%rbp), %rcx
 2983      FEFFFF
 2984 1492 BA000000 		movl	$.LC8, %edx
 2984      00
 2985 1497 4889CE   		movq	%rcx, %rsi
 2986 149a 4889C7   		movq	%rax, %rdi
 2987 149d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2987      00
 2988              	.LEHE81:
 2989              	.L157:
 2990              	.LEHB82:
 2991              		.loc 3 71 0 discriminator 43
 2992 14a2 E8000000 		call	__cxa_end_catch
 2992      00
 2993 14a7 EB4D     		jmp	.L149
 2994              	.L165:
 2995 14a9 4889C3   		movq	%rax, %rbx
 2996              	.LBB56:
 2997              		.loc 3 71 0
 2998 14ac E8000000 		call	__cxa_end_catch
 2998      00
 2999 14b1 4889D8   		movq	%rbx, %rax
 3000 14b4 4889C7   		movq	%rax, %rdi
 3001 14b7 E8000000 		call	_Unwind_Resume
 3001      00
 3002              	.LEHE82:
 3003              	.L167:
 3004 14bc 4889C3   		movq	%rax, %rbx
 3005              	.LBE56:
 3006              	.LBB57:
 3007              	.LBB55:
 3008 14bf 488D8550 		leaq	-432(%rbp), %rax
 3008      FEFFFF
 3009 14c6 4889C7   		movq	%rax, %rdi
 3010 14c9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3010      00
 3011 14ce EB03     		jmp	.L160
 3012              	.L166:
 3013 14d0 4889C3   		movq	%rax, %rbx
 3014              	.L160:
 3015              	.LBE55:
 3016 14d3 E8000000 		call	__cxa_end_catch
 3016      00
 3017 14d8 4889D8   		movq	%rbx, %rax
 3018 14db 4889C7   		movq	%rax, %rdi
 3019              	.LEHB83:
 3020 14de E8000000 		call	_Unwind_Resume
 3020      00
 3021              	.LEHE83:
 3022              	.L168:
 3023 14e3 4889C3   		movq	%rax, %rbx
 3024              	.LBE57:
 3025 14e6 E8000000 		call	__cxa_end_catch
 3025      00
 3026 14eb 4889D8   		movq	%rbx, %rax
 3027 14ee 4889C7   		movq	%rax, %rdi
 3028              	.LEHB84:
 3029 14f1 E8000000 		call	_Unwind_Resume
 3029      00
 3030              	.LEHE84:
 3031              	.L149:
 3032 14f6 488B45E8 		movq	-24(%rbp), %rax
 3033 14fa 64483304 		xorq	%fs:40, %rax
 3033      25280000 
 3033      00
 3034 1503 7405     		je	.L162
 3035 1505 E8000000 		call	__stack_chk_fail
 3035      00
 3036              	.L162:
 3037 150a 4881C4F0 		addq	$496, %rsp
 3037      010000
 3038 1511 5B       		popq	%rbx
 3039 1512 415C     		popq	%r12
 3040 1514 5D       		popq	%rbp
 3041              		.cfi_def_cfa 7, 8
 3042 1515 C3       		ret
 3043              		.cfi_endproc
 3044              	.LFE1390:
 3045              		.section	.gcc_except_table
 3046              		.align 4
 3047              	.LLSDA1390:
 3048 01e0 FF       		.byte	0xff
 3049 01e1 03       		.byte	0x3
 3050 01e2 55       		.uleb128 .LLSDATT1390-.LLSDATTD1390
 3051              	.LLSDATTD1390:
 3052 01e3 01       		.byte	0x1
 3053 01e4 3C       		.uleb128 .LLSDACSE1390-.LLSDACSB1390
 3054              	.LLSDACSB1390:
 3055 01e5 43       		.uleb128 .LEHB74-.LFB1390
 3056 01e6 05       		.uleb128 .LEHE74-.LEHB74
 3057 01e7 9D01     		.uleb128 .L163-.LFB1390
 3058 01e9 05       		.uleb128 0x5
 3059 01ea 67       		.uleb128 .LEHB75-.LFB1390
 3060 01eb 05       		.uleb128 .LEHE75-.LEHB75
 3061 01ec 8001     		.uleb128 .L164-.LFB1390
 3062 01ee 07       		.uleb128 0x7
 3063 01ef 76       		.uleb128 .LEHB76-.LFB1390
 3064 01f0 05       		.uleb128 .LEHE76-.LEHB76
 3065 01f1 9D01     		.uleb128 .L163-.LFB1390
 3066 01f3 05       		.uleb128 0x5
 3067 01f4 EB01     		.uleb128 .LEHB77-.LFB1390
 3068 01f6 5F       		.uleb128 .LEHE77-.LEHB77
 3069 01f7 9905     		.uleb128 .L165-.LFB1390
 3070 01f9 00       		.uleb128 0
 3071 01fa ED02     		.uleb128 .LEHB78-.LFB1390
 3072 01fc 05       		.uleb128 .LEHE78-.LEHB78
 3073 01fd C005     		.uleb128 .L166-.LFB1390
 3074 01ff 00       		.uleb128 0
 3075 0200 A103     		.uleb128 .LEHB79-.LFB1390
 3076 0202 43       		.uleb128 .LEHE79-.LEHB79
 3077 0203 AC05     		.uleb128 .L167-.LFB1390
 3078 0205 00       		.uleb128 0
 3079 0206 EE03     		.uleb128 .LEHB80-.LFB1390
 3080 0208 05       		.uleb128 .LEHE80-.LEHB80
 3081 0209 C005     		.uleb128 .L166-.LFB1390
 3082 020b 00       		.uleb128 0
 3083 020c AB04     		.uleb128 .LEHB81-.LFB1390
 3084 020e 67       		.uleb128 .LEHE81-.LEHB81
 3085 020f D305     		.uleb128 .L168-.LFB1390
 3086 0211 00       		.uleb128 0
 3087 0212 9205     		.uleb128 .LEHB82-.LFB1390
 3088 0214 1A       		.uleb128 .LEHE82-.LEHB82
 3089 0215 00       		.uleb128 0
 3090 0216 00       		.uleb128 0
 3091 0217 CE05     		.uleb128 .LEHB83-.LFB1390
 3092 0219 05       		.uleb128 .LEHE83-.LEHB83
 3093 021a 00       		.uleb128 0
 3094 021b 00       		.uleb128 0
 3095 021c E105     		.uleb128 .LEHB84-.LFB1390
 3096 021e 05       		.uleb128 .LEHE84-.LEHB84
 3097 021f 00       		.uleb128 0
 3098 0220 00       		.uleb128 0
 3099              	.LLSDACSE1390:
 3100 0221 03       		.byte	0x3
 3101 0222 00       		.byte	0
 3102 0223 02       		.byte	0x2
 3103 0224 7D       		.byte	0x7d
 3104 0225 01       		.byte	0x1
 3105 0226 7D       		.byte	0x7d
 3106 0227 00       		.byte	0
 3107 0228 7D       		.byte	0x7d
 3108 0229 000000   		.align 4
 3109 022c 00000000 		.long	0
 3110              	
 3111 0230 00000000 		.long	_ZTISt9exception
 3112 0234 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3113              	.LLSDATT1390:
 3114              		.text
 3116              		.section	.rodata
 3117              	.LC18:
 3118 02c1 6661696C 		.string	"failure"
 3118      75726500 
 3119              	.LC19:
 3120 02c9 72657375 		.string	"result.failed == true"
 3120      6C742E66 
 3120      61696C65 
 3120      64203D3D 
 3120      20747275 
 3121 02df 00       		.align 8
 3122              	.LC20:
 3123 02e0 556E6861 		.string	"Unhandled exception in CHECK(result.failed == true)"
 3123      6E646C65 
 3123      64206578 
 3123      63657074 
 3123      696F6E20 
 3124 0314 00000000 		.align 8
 3125              	.LC21:
 3126 0318 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(fileName.c_str(), result.failureFile)"
 3126      6E646C65 
 3126      64206578 
 3126      63657074 
 3126      696F6E20 
 3127              		.text
 3128              		.align 2
 3130              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunIm
 3131              	.LFB1394:
  72:TestDeferredTestReporter.cpp **** {
 3132              		.loc 3 72 0 is_stmt 1
 3133              		.cfi_startproc
 3134              		.cfi_personality 0x3,__gxx_personality_v0
 3135              		.cfi_lsda 0x3,.LLSDA1394
 3136 1516 55       		pushq	%rbp
 3137              		.cfi_def_cfa_offset 16
 3138              		.cfi_offset 6, -16
 3139 1517 4889E5   		movq	%rsp, %rbp
 3140              		.cfi_def_cfa_register 6
 3141 151a 53       		pushq	%rbx
 3142 151b 4883EC68 		subq	$104, %rsp
 3143              		.cfi_offset 3, -24
 3144 151f 48897D98 		movq	%rdi, -104(%rbp)
 3145              		.loc 3 72 0
 3146 1523 64488B04 		movq	%fs:40, %rax
 3146      25280000 
 3146      00
 3147 152c 488945E8 		movq	%rax, -24(%rbp)
 3148 1530 31C0     		xorl	%eax, %eax
  73:TestDeferredTestReporter.cpp ****     char const* failure = "failure";
 3149              		.loc 3 73 0
 3150 1532 48C745B0 		movq	$.LC18, -80(%rbp)
 3150      00000000 
  74:TestDeferredTestReporter.cpp **** 
  75:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3151              		.loc 3 75 0
 3152 153a 488B4598 		movq	-104(%rbp), %rax
 3153 153e 488D9088 		leaq	136(%rax), %rdx
 3153      000000
 3154 1545 488B4598 		movq	-104(%rbp), %rax
 3155 1549 4889D6   		movq	%rdx, %rsi
 3156 154c 4889C7   		movq	%rax, %rdi
 3157              	.LEHB85:
 3158 154f E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 3158      00
  76:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure);
 3159              		.loc 3 76 0
 3160 1554 488B4598 		movq	-104(%rbp), %rax
 3161 1558 488D8888 		leaq	136(%rax), %rcx
 3161      000000
 3162 155f 488B4598 		movq	-104(%rbp), %rax
 3163 1563 488B55B0 		movq	-80(%rbp), %rdx
 3164 1567 4889CE   		movq	%rcx, %rsi
 3165 156a 4889C7   		movq	%rax, %rdi
 3166 156d E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3166      00
  77:TestDeferredTestReporter.cpp **** 
  78:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3167              		.loc 3 78 0
 3168 1572 488B4598 		movq	-104(%rbp), %rax
 3169 1576 4889C7   		movq	%rax, %rdi
 3170 1579 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 3170      00
 3171 157e BE000000 		movl	$0, %esi
 3171      00
 3172 1583 4889C7   		movq	%rax, %rdi
 3173 1586 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3173      00
 3174              	.LEHE85:
 3175 158b 488945B8 		movq	%rax, -72(%rbp)
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3176              		.loc 3 79 0
 3177 158f 488B45B8 		movq	-72(%rbp), %rax
 3178 1593 0FB6407C 		movzbl	124(%rax), %eax
 3179 1597 0FB6C0   		movzbl	%al, %eax
 3180 159a 89C7     		movl	%eax, %edi
 3181 159c E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 3181      00
 3182 15a1 83F001   		xorl	$1, %eax
 3183 15a4 84C0     		testb	%al, %al
 3184 15a6 7438     		je	.L171
 3185              	.LEHB86:
 3186              		.loc 3 79 0 is_stmt 0 discriminator 1
 3187 15a8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3187      00
 3188 15ad 488B08   		movq	(%rax), %rcx
 3189 15b0 488D45C0 		leaq	-64(%rbp), %rax
 3190 15b4 BA4F0000 		movl	$79, %edx
 3190      00
 3191 15b9 4889CE   		movq	%rcx, %rsi
 3192 15bc 4889C7   		movq	%rax, %rdi
 3193 15bf E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3193      00
 3194              		.loc 3 79 0 discriminator 3
 3195 15c4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3195      00
 3196 15c9 488B00   		movq	(%rax), %rax
 3197 15cc 488D4DC0 		leaq	-64(%rbp), %rcx
 3198 15d0 BA000000 		movl	$.LC19, %edx
 3198      00
 3199 15d5 4889CE   		movq	%rcx, %rsi
 3200 15d8 4889C7   		movq	%rax, %rdi
 3201 15db E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3201      00
 3202              	.LEHE86:
 3203              	.L171:
 3204              	.LEHB87:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3205              		.loc 3 80 0 is_stmt 1
 3206 15e0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3206      00
 3207 15e5 488B08   		movq	(%rax), %rcx
 3208 15e8 488D45C0 		leaq	-64(%rbp), %rax
 3209 15ec BA500000 		movl	$80, %edx
 3209      00
 3210 15f1 4889CE   		movq	%rcx, %rsi
 3211 15f4 4889C7   		movq	%rax, %rdi
 3212 15f7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3212      00
 3213              		.loc 3 80 0 is_stmt 0 discriminator 2
 3214 15fc 488B45B8 		movq	-72(%rbp), %rax
 3215 1600 488D5840 		leaq	64(%rax), %rbx
 3216 1604 488B4598 		movq	-104(%rbp), %rax
 3217 1608 4883C060 		addq	$96, %rax
 3218 160c 4889C7   		movq	%rax, %rdi
 3219 160f E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 3219      00
 3220 1614 488945A8 		movq	%rax, -88(%rbp)
 3221 1618 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3221      00
 3222              		.loc 3 80 0 discriminator 4
 3223 161d 488B00   		movq	(%rax), %rax
 3224 1620 488D55C0 		leaq	-64(%rbp), %rdx
 3225 1624 488D75A8 		leaq	-88(%rbp), %rsi
 3226 1628 4889D1   		movq	%rdx, %rcx
 3227 162b 4889DA   		movq	%rbx, %rdx
 3228 162e 4889C7   		movq	%rax, %rdi
 3229 1631 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3229      00
 3230              	.LEHE87:
  81:TestDeferredTestReporter.cpp **** }
 3231              		.loc 3 81 0 is_stmt 1
 3232 1636 E9B70000 		jmp	.L170
 3232      00
 3233              	.L178:
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3234              		.loc 3 79 0
 3235 163b 4889C7   		movq	%rax, %rdi
 3236 163e E8000000 		call	__cxa_begin_catch
 3236      00
 3237              	.LEHB88:
 3238 1643 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3238      00
 3239 1648 488B08   		movq	(%rax), %rcx
 3240 164b 488D45C0 		leaq	-64(%rbp), %rax
 3241 164f BA4F0000 		movl	$79, %edx
 3241      00
 3242 1654 4889CE   		movq	%rcx, %rsi
 3243 1657 4889C7   		movq	%rax, %rdi
 3244 165a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3244      00
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3245              		.loc 3 79 0 is_stmt 0 discriminator 11
 3246 165f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3246      00
 3247 1664 488B00   		movq	(%rax), %rax
 3248 1667 488D4DC0 		leaq	-64(%rbp), %rcx
 3249 166b BA000000 		movl	$.LC20, %edx
 3249      00
 3250 1670 4889CE   		movq	%rcx, %rsi
 3251 1673 4889C7   		movq	%rax, %rdi
 3252 1676 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3252      00
 3253              	.LEHE88:
 3254              	.LEHB89:
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3255              		.loc 3 79 0 discriminator 15
 3256 167b E8000000 		call	__cxa_end_catch
 3256      00
 3257              	.LEHE89:
 3258 1680 E95BFFFF 		jmp	.L171
 3258      FF
 3259              	.L179:
 3260 1685 4889C3   		movq	%rax, %rbx
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3261              		.loc 3 79 0
 3262 1688 E8000000 		call	__cxa_end_catch
 3262      00
 3263 168d 4889D8   		movq	%rbx, %rax
 3264 1690 4889C7   		movq	%rax, %rdi
 3265              	.LEHB90:
 3266 1693 E8000000 		call	_Unwind_Resume
 3266      00
 3267              	.LEHE90:
 3268              	.L180:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3269              		.loc 3 80 0 is_stmt 1
 3270 1698 4889C7   		movq	%rax, %rdi
 3271 169b E8000000 		call	__cxa_begin_catch
 3271      00
 3272              	.LEHB91:
 3273 16a0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3273      00
 3274 16a5 488B08   		movq	(%rax), %rcx
 3275 16a8 488D45C0 		leaq	-64(%rbp), %rax
 3276 16ac BA500000 		movl	$80, %edx
 3276      00
 3277 16b1 4889CE   		movq	%rcx, %rsi
 3278 16b4 4889C7   		movq	%rax, %rdi
 3279 16b7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3279      00
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3280              		.loc 3 80 0 is_stmt 0 discriminator 12
 3281 16bc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3281      00
 3282 16c1 488B00   		movq	(%rax), %rax
 3283 16c4 488D4DC0 		leaq	-64(%rbp), %rcx
 3284 16c8 BA000000 		movl	$.LC21, %edx
 3284      00
 3285 16cd 4889CE   		movq	%rcx, %rsi
 3286 16d0 4889C7   		movq	%rax, %rdi
 3287 16d3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3287      00
 3288              	.LEHE91:
 3289              	.LEHB92:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3290              		.loc 3 80 0 discriminator 16
 3291 16d8 E8000000 		call	__cxa_end_catch
 3291      00
 3292              	.LEHE92:
 3293              		.loc 3 81 0 is_stmt 1 discriminator 16
 3294 16dd EB13     		jmp	.L170
 3295              	.L181:
 3296 16df 4889C3   		movq	%rax, %rbx
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3297              		.loc 3 80 0
 3298 16e2 E8000000 		call	__cxa_end_catch
 3298      00
 3299 16e7 4889D8   		movq	%rbx, %rax
 3300 16ea 4889C7   		movq	%rax, %rdi
 3301              	.LEHB93:
 3302 16ed E8000000 		call	_Unwind_Resume
 3302      00
 3303              	.LEHE93:
 3304              	.L170:
 3305              		.loc 3 81 0
 3306 16f2 488B45E8 		movq	-24(%rbp), %rax
 3307 16f6 64483304 		xorq	%fs:40, %rax
 3307      25280000 
 3307      00
 3308 16ff 7405     		je	.L177
 3309 1701 E8000000 		call	__stack_chk_fail
 3309      00
 3310              	.L177:
 3311 1706 4883C468 		addq	$104, %rsp
 3312 170a 5B       		popq	%rbx
 3313 170b 5D       		popq	%rbp
 3314              		.cfi_def_cfa 7, 8
 3315 170c C3       		ret
 3316              		.cfi_endproc
 3317              	.LFE1394:
 3318              		.section	.gcc_except_table
 3319              		.align 4
 3320              	.LLSDA1394:
 3321 0238 FF       		.byte	0xff
 3322 0239 03       		.byte	0x3
 3323 023a 39       		.uleb128 .LLSDATT1394-.LLSDATTD1394
 3324              	.LLSDATTD1394:
 3325 023b 01       		.byte	0x1
 3326 023c 30       		.uleb128 .LLSDACSE1394-.LLSDACSB1394
 3327              	.LLSDACSB1394:
 3328 023d 39       		.uleb128 .LEHB85-.LFB1394
 3329 023e 3C       		.uleb128 .LEHE85-.LEHB85
 3330 023f 00       		.uleb128 0
 3331 0240 00       		.uleb128 0
 3332 0241 9201     		.uleb128 .LEHB86-.LFB1394
 3333 0243 38       		.uleb128 .LEHE86-.LEHB86
 3334 0244 A502     		.uleb128 .L178-.LFB1394
 3335 0246 01       		.uleb128 0x1
 3336 0247 CA01     		.uleb128 .LEHB87-.LFB1394
 3337 0249 56       		.uleb128 .LEHE87-.LEHB87
 3338 024a 8203     		.uleb128 .L180-.LFB1394
 3339 024c 01       		.uleb128 0x1
 3340 024d AD02     		.uleb128 .LEHB88-.LFB1394
 3341 024f 38       		.uleb128 .LEHE88-.LEHB88
 3342 0250 EF02     		.uleb128 .L179-.LFB1394
 3343 0252 00       		.uleb128 0
 3344 0253 E502     		.uleb128 .LEHB89-.LFB1394
 3345 0255 05       		.uleb128 .LEHE89-.LEHB89
 3346 0256 00       		.uleb128 0
 3347 0257 00       		.uleb128 0
 3348 0258 FD02     		.uleb128 .LEHB90-.LFB1394
 3349 025a 05       		.uleb128 .LEHE90-.LEHB90
 3350 025b 00       		.uleb128 0
 3351 025c 00       		.uleb128 0
 3352 025d 8A03     		.uleb128 .LEHB91-.LFB1394
 3353 025f 38       		.uleb128 .LEHE91-.LEHB91
 3354 0260 C903     		.uleb128 .L181-.LFB1394
 3355 0262 00       		.uleb128 0
 3356 0263 C203     		.uleb128 .LEHB92-.LFB1394
 3357 0265 05       		.uleb128 .LEHE92-.LEHB92
 3358 0266 00       		.uleb128 0
 3359 0267 00       		.uleb128 0
 3360 0268 D703     		.uleb128 .LEHB93-.LFB1394
 3361 026a 05       		.uleb128 .LEHE93-.LEHB93
 3362 026b 00       		.uleb128 0
 3363 026c 00       		.uleb128 0
 3364              	.LLSDACSE1394:
 3365 026d 01       		.byte	0x1
 3366 026e 00       		.byte	0
 3367 026f 00       		.align 4
 3368 0270 00000000 		.long	0
 3369              	
 3370              	.LLSDATT1394:
 3371              		.text
 3373 170d 90       		.align 2
 3375              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3376              	.LFB1396:
  82:TestDeferredTestReporter.cpp **** 
  83:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetailsForMultipleFailures)
 3377              		.loc 3 83 0
 3378              		.cfi_startproc
 3379 170e 55       		pushq	%rbp
 3380              		.cfi_def_cfa_offset 16
 3381              		.cfi_offset 6, -16
 3382 170f 4889E5   		movq	%rsp, %rbp
 3383              		.cfi_def_cfa_register 6
 3384 1712 4883EC10 		subq	$16, %rsp
 3385 1716 48897DF8 		movq	%rdi, -8(%rbp)
 3386 171a 488975F0 		movq	%rsi, -16(%rbp)
 3387              	.LBB58:
 3388              		.loc 3 83 0
 3389 171e 488B45F8 		movq	-8(%rbp), %rax
 3390 1722 4889C7   		movq	%rax, %rdi
 3391 1725 E818E9FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 3391      FF
 3392 172a 488B45F8 		movq	-8(%rbp), %rax
 3393 172e 488B55F0 		movq	-16(%rbp), %rdx
 3394 1732 488990A8 		movq	%rdx, 168(%rax)
 3394      000000
 3395              	.LBE58:
 3396 1739 90       		nop
 3397 173a C9       		leave
 3398              		.cfi_def_cfa 7, 8
 3399 173b C3       		ret
 3400              		.cfi_endproc
 3401              	.LFE1396:
 3403              		.set	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3404              		.section	.rodata
 3405 0361 00000000 		.align 8
 3405      000000
 3406              	.LC22:
 3407 0368 5265706F 		.string	"ReportFailureSavesFailureDetailsForMultipleFailures"
 3407      72744661 
 3407      696C7572 
 3407      65536176 
 3407      65734661 
 3408              		.text
 3409              		.align 2
 3411              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 3412              	.LFB1399:
 3413              		.loc 3 83 0
 3414              		.cfi_startproc
 3415 173c 55       		pushq	%rbp
 3416              		.cfi_def_cfa_offset 16
 3417              		.cfi_offset 6, -16
 3418 173d 4889E5   		movq	%rsp, %rbp
 3419              		.cfi_def_cfa_register 6
 3420 1740 4883EC10 		subq	$16, %rsp
 3421 1744 48897DF8 		movq	%rdi, -8(%rbp)
 3422              	.LBB59:
 3423              		.loc 3 83 0
 3424 1748 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3424      00
 3425 174d 4889C2   		movq	%rax, %rdx
 3426 1750 488B45F8 		movq	-8(%rbp), %rax
 3427 1754 41B85300 		movl	$83, %r8d
 3427      0000
 3428 175a B9000000 		movl	$.LC4, %ecx
 3428      00
 3429 175f BE000000 		movl	$.LC22, %esi
 3429      00
 3430 1764 4889C7   		movq	%rax, %rdi
 3431 1767 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3431      00
 3432 176c BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 3432      00
 3433 1771 488B45F8 		movq	-8(%rbp), %rax
 3434 1775 488910   		movq	%rdx, (%rax)
 3435              	.LBE59:
 3436 1778 90       		nop
 3437 1779 C9       		leave
 3438              		.cfi_def_cfa 7, 8
 3439 177a C3       		ret
 3440              		.cfi_endproc
 3441              	.LFE1399:
 3443              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 3444              		.local	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3445              		.comm	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 3446              		.local	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 3447              		.comm	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3448 177b 90       		.align 2
 3450              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3451              	.LFB1403:
 3452              		.loc 3 83 0
 3453              		.cfi_startproc
 3454 177c 55       		pushq	%rbp
 3455              		.cfi_def_cfa_offset 16
 3456              		.cfi_offset 6, -16
 3457 177d 4889E5   		movq	%rsp, %rbp
 3458              		.cfi_def_cfa_register 6
 3459 1780 4883EC10 		subq	$16, %rsp
 3460 1784 48897DF8 		movq	%rdi, -8(%rbp)
 3461              	.LBB60:
 3462              		.loc 3 83 0
 3463 1788 488B45F8 		movq	-8(%rbp), %rax
 3464 178c 4889C7   		movq	%rax, %rdi
 3465 178f E880EAFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 3465      FF
 3466              	.LBE60:
 3467 1794 90       		nop
 3468 1795 C9       		leave
 3469              		.cfi_def_cfa 7, 8
 3470 1796 C3       		ret
 3471              		.cfi_endproc
 3472              	.LFE1403:
 3474              		.set	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3475 1797 90       		.align 2
 3477              	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMult
 3478              	.LFB1401:
 3479              		.loc 3 83 0
 3480              		.cfi_startproc
 3481              		.cfi_personality 0x3,__gxx_personality_v0
 3482              		.cfi_lsda 0x3,.LLSDA1401
 3483 1798 55       		pushq	%rbp
 3484              		.cfi_def_cfa_offset 16
 3485              		.cfi_offset 6, -16
 3486 1799 4889E5   		movq	%rsp, %rbp
 3487              		.cfi_def_cfa_register 6
 3488 179c 4154     		pushq	%r12
 3489 179e 53       		pushq	%rbx
 3490 179f 4881ECF0 		subq	$496, %rsp
 3490      010000
 3491              		.cfi_offset 12, -24
 3492              		.cfi_offset 3, -32
 3493 17a6 4889BD08 		movq	%rdi, -504(%rbp)
 3493      FEFFFF
 3494              		.loc 3 83 0
 3495 17ad 64488B04 		movq	%fs:40, %rax
 3495      25280000 
 3495      00
 3496 17b6 488945E8 		movq	%rax, -24(%rbp)
 3497 17ba 31C0     		xorl	%eax, %eax
 3498 17bc C6851FFE 		movb	$0, -481(%rbp)
 3498      FFFF00
 3499              	.LBB61:
 3500 17c3 488B8508 		movq	-504(%rbp), %rax
 3500      FEFFFF
 3501 17ca 488D5008 		leaq	8(%rax), %rdx
 3502 17ce 488D8550 		leaq	-432(%rbp), %rax
 3502      FEFFFF
 3503 17d5 4889D6   		movq	%rdx, %rsi
 3504 17d8 4889C7   		movq	%rax, %rdi
 3505              	.LEHB94:
 3506 17db E82EFFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3506      FF
 3507              	.LEHE94:
 3508              		.loc 3 83 0 is_stmt 0 discriminator 1
 3509 17e0 C6851FFE 		movb	$1, -481(%rbp)
 3509      FFFF01
 3510 17e7 488B8508 		movq	-504(%rbp), %rax
 3510      FEFFFF
 3511 17ee 488D5008 		leaq	8(%rax), %rdx
 3512 17f2 488D8550 		leaq	-432(%rbp), %rax
 3512      FEFFFF
 3513 17f9 4889D6   		movq	%rdx, %rsi
 3514 17fc 4889C7   		movq	%rax, %rdi
 3515              	.LEHB95:
 3516 17ff E8B51500 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFai
 3516      00
 3517              	.LEHE95:
 3518              		.loc 3 83 0 discriminator 3
 3519 1804 488D8550 		leaq	-432(%rbp), %rax
 3519      FEFFFF
 3520 180b 4889C7   		movq	%rax, %rdi
 3521              	.LEHB96:
 3522 180e E869FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3522      FF
 3523              	.LEHE96:
 3524              	.LBE61:
 3525              		.loc 3 83 0
 3526 1813 E9660200 		jmp	.L185
 3526      00
 3527              	.L200:
 3528 1818 4989C4   		movq	%rax, %r12
 3529 181b 4889D3   		movq	%rdx, %rbx
 3530              	.LBB62:
 3531 181e 488D8550 		leaq	-432(%rbp), %rax
 3531      FEFFFF
 3532 1825 4889C7   		movq	%rax, %rdi
 3533 1828 E84FFFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3533      FF
 3534 182d 4C89E0   		movq	%r12, %rax
 3535 1830 4889DA   		movq	%rbx, %rdx
 3536 1833 EB00     		jmp	.L187
 3537              	.L199:
 3538              	.L187:
 3539 1835 4883FA01 		cmpq	$1, %rdx
 3540 1839 740F     		je	.L189
 3541 183b 4883FA02 		cmpq	$2, %rdx
 3542 183f 0F84A700 		je	.L190
 3542      0000
 3543 1845 E94B0100 		jmp	.L205
 3543      00
 3544              	.L189:
 3545              	.LBE62:
 3546              	.LBB63:
 3547 184a 4889C7   		movq	%rax, %rdi
 3548 184d E8000000 		call	__cxa_begin_catch
 3548      00
 3549 1852 48898520 		movq	%rax, -480(%rbp)
 3549      FEFFFF
 3550 1859 488B8520 		movq	-480(%rbp), %rax
 3550      FEFFFF
 3551 1860 488B00   		movq	(%rax), %rax
 3552 1863 4883C010 		addq	$16, %rax
 3553 1867 488B00   		movq	(%rax), %rax
 3554 186a 488B9520 		movq	-480(%rbp), %rdx
 3554      FEFFFF
 3555 1871 4889D7   		movq	%rdx, %rdi
 3556 1874 FFD0     		call	*%rax
 3557 1876 4889C3   		movq	%rax, %rbx
 3558 1879 488B8520 		movq	-480(%rbp), %rax
 3558      FEFFFF
 3559 1880 4889C7   		movq	%rax, %rdi
 3560              	.LEHB97:
 3561 1883 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3561      00
 3562 1888 4189C4   		movl	%eax, %r12d
 3563 188b 488B8520 		movq	-480(%rbp), %rax
 3563      FEFFFF
 3564 1892 4889C7   		movq	%rax, %rdi
 3565 1895 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3565      00
 3566              		.loc 3 83 0 discriminator 5
 3567 189a 4889C1   		movq	%rax, %rcx
 3568 189d 488B8508 		movq	-504(%rbp), %rax
 3568      FEFFFF
 3569 18a4 488B5008 		movq	8(%rax), %rdx
 3570 18a8 488B8508 		movq	-504(%rbp), %rax
 3570      FEFFFF
 3571 18af 488B7010 		movq	16(%rax), %rsi
 3572 18b3 488D8530 		leaq	-464(%rbp), %rax
 3572      FEFFFF
 3573 18ba 4589E0   		movl	%r12d, %r8d
 3574 18bd 4889C7   		movq	%rax, %rdi
 3575 18c0 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3575      00
 3576              		.loc 3 83 0 discriminator 9
 3577 18c5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3577      00
 3578 18ca 488B00   		movq	(%rax), %rax
 3579 18cd 488D8D30 		leaq	-464(%rbp), %rcx
 3579      FEFFFF
 3580 18d4 4889DA   		movq	%rbx, %rdx
 3581 18d7 4889CE   		movq	%rcx, %rsi
 3582 18da 4889C7   		movq	%rax, %rdi
 3583 18dd E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3583      00
 3584              	.LEHE97:
 3585              		.loc 3 83 0 discriminator 13
 3586 18e2 E8000000 		call	__cxa_end_catch
 3586      00
 3587              	.LBE63:
 3588 18e7 E9920100 		jmp	.L185
 3588      00
 3589              	.L190:
 3590              	.LBB64:
 3591              		.loc 3 83 0
 3592 18ec 4889C7   		movq	%rax, %rdi
 3593 18ef E8000000 		call	__cxa_begin_catch
 3593      00
 3594 18f4 48898528 		movq	%rax, -472(%rbp)
 3594      FEFFFF
 3595              	.LBB65:
 3596 18fb 488D8550 		leaq	-432(%rbp), %rax
 3596      FEFFFF
 3597 1902 4889C7   		movq	%rax, %rdi
 3598              	.LEHB98:
 3599 1905 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3599      00
 3600              	.LEHE98:
 3601              		.loc 3 83 0 discriminator 15
 3602 190a 488B8528 		movq	-472(%rbp), %rax
 3602      FEFFFF
 3603 1911 488B00   		movq	(%rax), %rax
 3604 1914 4883C010 		addq	$16, %rax
 3605 1918 488B00   		movq	(%rax), %rax
 3606 191b 488B9528 		movq	-472(%rbp), %rdx
 3606      FEFFFF
 3607 1922 4889D7   		movq	%rdx, %rdi
 3608 1925 FFD0     		call	*%rax
 3609 1927 4889C3   		movq	%rax, %rbx
 3610 192a 488D8550 		leaq	-432(%rbp), %rax
 3610      FEFFFF
 3611 1931 BE000000 		movl	$.LC6, %esi
 3611      00
 3612 1936 4889C7   		movq	%rax, %rdi
 3613              	.LEHB99:
 3614 1939 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3614      00
 3615 193e 4889DE   		movq	%rbx, %rsi
 3616 1941 4889C7   		movq	%rax, %rdi
 3617 1944 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3617      00
 3618              		.loc 3 83 0 discriminator 19
 3619 1949 488D8550 		leaq	-432(%rbp), %rax
 3619      FEFFFF
 3620 1950 4889C7   		movq	%rax, %rdi
 3621 1953 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3621      00
 3622 1958 4989C4   		movq	%rax, %r12
 3623 195b 488B8508 		movq	-504(%rbp), %rax
 3623      FEFFFF
 3624 1962 488D5808 		leaq	8(%rax), %rbx
 3625 1966 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3625      00
 3626              		.loc 3 83 0 discriminator 21
 3627 196b 488B00   		movq	(%rax), %rax
 3628 196e 4C89E2   		movq	%r12, %rdx
 3629 1971 4889DE   		movq	%rbx, %rsi
 3630 1974 4889C7   		movq	%rax, %rdi
 3631 1977 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3631      00
 3632              	.LEHE99:
 3633              		.loc 3 83 0 discriminator 25
 3634 197c 488D8550 		leaq	-432(%rbp), %rax
 3634      FEFFFF
 3635 1983 4889C7   		movq	%rax, %rdi
 3636              	.LEHB100:
 3637 1986 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3637      00
 3638              	.LEHE100:
 3639              	.LBE65:
 3640              		.loc 3 83 0 discriminator 26
 3641 198b E8000000 		call	__cxa_end_catch
 3641      00
 3642              	.LBE64:
 3643 1990 E9E90000 		jmp	.L185
 3643      00
 3644              	.L205:
 3645              		.loc 3 83 0
 3646 1995 4889C7   		movq	%rax, %rdi
 3647 1998 E8000000 		call	__cxa_begin_catch
 3647      00
 3648 199d 80BD1FFE 		cmpb	$0, -481(%rbp)
 3648      FFFF00
 3649 19a4 7443     		je	.L192
 3650              		.loc 3 83 0 discriminator 28
 3651 19a6 488B8508 		movq	-504(%rbp), %rax
 3651      FEFFFF
 3652 19ad 488D4808 		leaq	8(%rax), %rcx
 3653 19b1 488D8530 		leaq	-464(%rbp), %rax
 3653      FEFFFF
 3654 19b8 BA530000 		movl	$83, %edx
 3654      00
 3655 19bd 4889CE   		movq	%rcx, %rsi
 3656 19c0 4889C7   		movq	%rax, %rdi
 3657              	.LEHB101:
 3658 19c3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3658      00
 3659              		.loc 3 83 0 discriminator 31
 3660 19c8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3660      00
 3661 19cd 488B00   		movq	(%rax), %rax
 3662 19d0 488D8D30 		leaq	-464(%rbp), %rcx
 3662      FEFFFF
 3663 19d7 BA000000 		movl	$.LC7, %edx
 3663      00
 3664 19dc 4889CE   		movq	%rcx, %rsi
 3665 19df 4889C7   		movq	%rax, %rdi
 3666 19e2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3666      00
 3667 19e7 EB41     		jmp	.L193
 3668              	.L192:
 3669              		.loc 3 83 0 discriminator 29
 3670 19e9 488B8508 		movq	-504(%rbp), %rax
 3670      FEFFFF
 3671 19f0 488D4808 		leaq	8(%rax), %rcx
 3672 19f4 488D8530 		leaq	-464(%rbp), %rax
 3672      FEFFFF
 3673 19fb BA530000 		movl	$83, %edx
 3673      00
 3674 1a00 4889CE   		movq	%rcx, %rsi
 3675 1a03 4889C7   		movq	%rax, %rdi
 3676 1a06 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3676      00
 3677              		.loc 3 83 0 discriminator 38
 3678 1a0b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3678      00
 3679 1a10 488B00   		movq	(%rax), %rax
 3680 1a13 488D8D30 		leaq	-464(%rbp), %rcx
 3680      FEFFFF
 3681 1a1a BA000000 		movl	$.LC8, %edx
 3681      00
 3682 1a1f 4889CE   		movq	%rcx, %rsi
 3683 1a22 4889C7   		movq	%rax, %rdi
 3684 1a25 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3684      00
 3685              	.LEHE101:
 3686              	.L193:
 3687              	.LEHB102:
 3688              		.loc 3 83 0 discriminator 43
 3689 1a2a E8000000 		call	__cxa_end_catch
 3689      00
 3690 1a2f EB4D     		jmp	.L185
 3691              	.L201:
 3692 1a31 4889C3   		movq	%rax, %rbx
 3693              	.LBB67:
 3694              		.loc 3 83 0
 3695 1a34 E8000000 		call	__cxa_end_catch
 3695      00
 3696 1a39 4889D8   		movq	%rbx, %rax
 3697 1a3c 4889C7   		movq	%rax, %rdi
 3698 1a3f E8000000 		call	_Unwind_Resume
 3698      00
 3699              	.LEHE102:
 3700              	.L203:
 3701 1a44 4889C3   		movq	%rax, %rbx
 3702              	.LBE67:
 3703              	.LBB68:
 3704              	.LBB66:
 3705 1a47 488D8550 		leaq	-432(%rbp), %rax
 3705      FEFFFF
 3706 1a4e 4889C7   		movq	%rax, %rdi
 3707 1a51 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3707      00
 3708 1a56 EB03     		jmp	.L196
 3709              	.L202:
 3710 1a58 4889C3   		movq	%rax, %rbx
 3711              	.L196:
 3712              	.LBE66:
 3713 1a5b E8000000 		call	__cxa_end_catch
 3713      00
 3714 1a60 4889D8   		movq	%rbx, %rax
 3715 1a63 4889C7   		movq	%rax, %rdi
 3716              	.LEHB103:
 3717 1a66 E8000000 		call	_Unwind_Resume
 3717      00
 3718              	.LEHE103:
 3719              	.L204:
 3720 1a6b 4889C3   		movq	%rax, %rbx
 3721              	.LBE68:
 3722 1a6e E8000000 		call	__cxa_end_catch
 3722      00
 3723 1a73 4889D8   		movq	%rbx, %rax
 3724 1a76 4889C7   		movq	%rax, %rdi
 3725              	.LEHB104:
 3726 1a79 E8000000 		call	_Unwind_Resume
 3726      00
 3727              	.LEHE104:
 3728              	.L185:
 3729 1a7e 488B45E8 		movq	-24(%rbp), %rax
 3730 1a82 64483304 		xorq	%fs:40, %rax
 3730      25280000 
 3730      00
 3731 1a8b 7405     		je	.L198
 3732 1a8d E8000000 		call	__stack_chk_fail
 3732      00
 3733              	.L198:
 3734 1a92 4881C4F0 		addq	$496, %rsp
 3734      010000
 3735 1a99 5B       		popq	%rbx
 3736 1a9a 415C     		popq	%r12
 3737 1a9c 5D       		popq	%rbp
 3738              		.cfi_def_cfa 7, 8
 3739 1a9d C3       		ret
 3740              		.cfi_endproc
 3741              	.LFE1401:
 3742              		.section	.gcc_except_table
 3743              		.align 4
 3744              	.LLSDA1401:
 3745 0274 FF       		.byte	0xff
 3746 0275 03       		.byte	0x3
 3747 0276 55       		.uleb128 .LLSDATT1401-.LLSDATTD1401
 3748              	.LLSDATTD1401:
 3749 0277 01       		.byte	0x1
 3750 0278 3C       		.uleb128 .LLSDACSE1401-.LLSDACSB1401
 3751              	.LLSDACSB1401:
 3752 0279 43       		.uleb128 .LEHB94-.LFB1401
 3753 027a 05       		.uleb128 .LEHE94-.LEHB94
 3754 027b 9D01     		.uleb128 .L199-.LFB1401
 3755 027d 05       		.uleb128 0x5
 3756 027e 67       		.uleb128 .LEHB95-.LFB1401
 3757 027f 05       		.uleb128 .LEHE95-.LEHB95
 3758 0280 8001     		.uleb128 .L200-.LFB1401
 3759 0282 07       		.uleb128 0x7
 3760 0283 76       		.uleb128 .LEHB96-.LFB1401
 3761 0284 05       		.uleb128 .LEHE96-.LEHB96
 3762 0285 9D01     		.uleb128 .L199-.LFB1401
 3763 0287 05       		.uleb128 0x5
 3764 0288 EB01     		.uleb128 .LEHB97-.LFB1401
 3765 028a 5F       		.uleb128 .LEHE97-.LEHB97
 3766 028b 9905     		.uleb128 .L201-.LFB1401
 3767 028d 00       		.uleb128 0
 3768 028e ED02     		.uleb128 .LEHB98-.LFB1401
 3769 0290 05       		.uleb128 .LEHE98-.LEHB98
 3770 0291 C005     		.uleb128 .L202-.LFB1401
 3771 0293 00       		.uleb128 0
 3772 0294 A103     		.uleb128 .LEHB99-.LFB1401
 3773 0296 43       		.uleb128 .LEHE99-.LEHB99
 3774 0297 AC05     		.uleb128 .L203-.LFB1401
 3775 0299 00       		.uleb128 0
 3776 029a EE03     		.uleb128 .LEHB100-.LFB1401
 3777 029c 05       		.uleb128 .LEHE100-.LEHB100
 3778 029d C005     		.uleb128 .L202-.LFB1401
 3779 029f 00       		.uleb128 0
 3780 02a0 AB04     		.uleb128 .LEHB101-.LFB1401
 3781 02a2 67       		.uleb128 .LEHE101-.LEHB101
 3782 02a3 D305     		.uleb128 .L204-.LFB1401
 3783 02a5 00       		.uleb128 0
 3784 02a6 9205     		.uleb128 .LEHB102-.LFB1401
 3785 02a8 1A       		.uleb128 .LEHE102-.LEHB102
 3786 02a9 00       		.uleb128 0
 3787 02aa 00       		.uleb128 0
 3788 02ab CE05     		.uleb128 .LEHB103-.LFB1401
 3789 02ad 05       		.uleb128 .LEHE103-.LEHB103
 3790 02ae 00       		.uleb128 0
 3791 02af 00       		.uleb128 0
 3792 02b0 E105     		.uleb128 .LEHB104-.LFB1401
 3793 02b2 05       		.uleb128 .LEHE104-.LEHB104
 3794 02b3 00       		.uleb128 0
 3795 02b4 00       		.uleb128 0
 3796              	.LLSDACSE1401:
 3797 02b5 03       		.byte	0x3
 3798 02b6 00       		.byte	0
 3799 02b7 02       		.byte	0x2
 3800 02b8 7D       		.byte	0x7d
 3801 02b9 01       		.byte	0x1
 3802 02ba 7D       		.byte	0x7d
 3803 02bb 00       		.byte	0
 3804 02bc 7D       		.byte	0x7d
 3805 02bd 000000   		.align 4
 3806 02c0 00000000 		.long	0
 3807              	
 3808 02c4 00000000 		.long	_ZTISt9exception
 3809 02c8 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3810              	.LLSDATT1401:
 3811              		.text
 3813              		.section	.rodata
 3814              	.LC23:
 3815 039c 6661696C 		.string	"failure 1"
 3815      75726520 
 3815      3100
 3816              	.LC24:
 3817 03a6 6661696C 		.string	"failure 2"
 3817      75726520 
 3817      3200
 3818              		.align 8
 3819              	.LC25:
 3820 03b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(2, (int)result.failures.size())"
 3820      6E646C65 
 3820      64206578 
 3820      63657074 
 3820      696F6E20 
 3821 03f3 00000000 		.align 8
 3821      00
 3822              	.LC26:
 3823 03f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure1, result.failures[0].second)"
 3823      6E646C65 
 3823      64206578 
 3823      63657074 
 3823      696F6E20 
 3824              		.align 8
 3825              	.LC27:
 3826 0440 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure2, result.failures[1].second)"
 3826      6E646C65 
 3826      64206578 
 3826      63657074 
 3826      696F6E20 
 3827              		.text
 3828              		.align 2
 3830              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3831              	.LFB1405:
  84:TestDeferredTestReporter.cpp **** {
 3832              		.loc 3 84 0 is_stmt 1
 3833              		.cfi_startproc
 3834              		.cfi_personality 0x3,__gxx_personality_v0
 3835              		.cfi_lsda 0x3,.LLSDA1405
 3836 1a9e 55       		pushq	%rbp
 3837              		.cfi_def_cfa_offset 16
 3838              		.cfi_offset 6, -16
 3839 1a9f 4889E5   		movq	%rsp, %rbp
 3840              		.cfi_def_cfa_register 6
 3841 1aa2 53       		pushq	%rbx
 3842 1aa3 4883EC68 		subq	$104, %rsp
 3843              		.cfi_offset 3, -24
 3844 1aa7 48897D98 		movq	%rdi, -104(%rbp)
 3845              		.loc 3 84 0
 3846 1aab 64488B04 		movq	%fs:40, %rax
 3846      25280000 
 3846      00
 3847 1ab4 488945E8 		movq	%rax, -24(%rbp)
 3848 1ab8 31C0     		xorl	%eax, %eax
  85:TestDeferredTestReporter.cpp ****     char const* failure1 = "failure 1";
 3849              		.loc 3 85 0
 3850 1aba 48C745A8 		movq	$.LC23, -88(%rbp)
 3850      00000000 
  86:TestDeferredTestReporter.cpp ****     char const* failure2 = "failure 2";
 3851              		.loc 3 86 0
 3852 1ac2 48C745B0 		movq	$.LC24, -80(%rbp)
 3852      00000000 
  87:TestDeferredTestReporter.cpp **** 
  88:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3853              		.loc 3 88 0
 3854 1aca 488B4598 		movq	-104(%rbp), %rax
 3855 1ace 488D9088 		leaq	136(%rax), %rdx
 3855      000000
 3856 1ad5 488B4598 		movq	-104(%rbp), %rax
 3857 1ad9 4889D6   		movq	%rdx, %rsi
 3858 1adc 4889C7   		movq	%rax, %rdi
 3859              	.LEHB105:
 3860 1adf E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 3860      00
  89:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure1);
 3861              		.loc 3 89 0
 3862 1ae4 488B55A8 		movq	-88(%rbp), %rdx
 3863 1ae8 488B4598 		movq	-104(%rbp), %rax
 3864 1aec 488D8888 		leaq	136(%rax), %rcx
 3864      000000
 3865 1af3 488B4598 		movq	-104(%rbp), %rax
 3866 1af7 4889CE   		movq	%rcx, %rsi
 3867 1afa 4889C7   		movq	%rax, %rdi
 3868 1afd E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3868      00
  90:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure2);
 3869              		.loc 3 90 0
 3870 1b02 488B55B0 		movq	-80(%rbp), %rdx
 3871 1b06 488B4598 		movq	-104(%rbp), %rax
 3872 1b0a 488D8888 		leaq	136(%rax), %rcx
 3872      000000
 3873 1b11 488B4598 		movq	-104(%rbp), %rax
 3874 1b15 4889CE   		movq	%rcx, %rsi
 3875 1b18 4889C7   		movq	%rax, %rdi
 3876 1b1b E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3876      00
  91:TestDeferredTestReporter.cpp **** 
  92:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3877              		.loc 3 92 0
 3878 1b20 488B4598 		movq	-104(%rbp), %rax
 3879 1b24 4889C7   		movq	%rax, %rdi
 3880 1b27 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 3880      00
 3881 1b2c BE000000 		movl	$0, %esi
 3881      00
 3882 1b31 4889C7   		movq	%rax, %rdi
 3883 1b34 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3883      00
 3884              	.LEHE105:
 3885 1b39 488945B8 		movq	%rax, -72(%rbp)
 3886              	.LEHB106:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(2, (int)result.failures.size());
 3887              		.loc 3 93 0
 3888 1b3d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3888      00
 3889 1b42 488B08   		movq	(%rax), %rcx
 3890 1b45 488D45C0 		leaq	-64(%rbp), %rax
 3891 1b49 BA5D0000 		movl	$93, %edx
 3891      00
 3892 1b4e 4889CE   		movq	%rcx, %rsi
 3893 1b51 4889C7   		movq	%rax, %rdi
 3894 1b54 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3894      00
 3895              	.LEHE106:
 3896              		.loc 3 93 0 is_stmt 0 discriminator 2
 3897 1b59 488B45B8 		movq	-72(%rbp), %rax
 3898 1b5d 4883C060 		addq	$96, %rax
 3899 1b61 4889C7   		movq	%rax, %rdi
 3900 1b64 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 3900      00
 3901 1b69 8945A4   		movl	%eax, -92(%rbp)
 3902 1b6c C745A002 		movl	$2, -96(%rbp)
 3902      000000
 3903              	.LEHB107:
 3904 1b73 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3904      00
 3905 1b78 488B00   		movq	(%rax), %rax
 3906 1b7b 488D4DC0 		leaq	-64(%rbp), %rcx
 3907 1b7f 488D55A4 		leaq	-92(%rbp), %rdx
 3908 1b83 488D75A0 		leaq	-96(%rbp), %rsi
 3909 1b87 4889C7   		movq	%rax, %rdi
 3910 1b8a E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3910      00
 3911              	.LEHE107:
 3912              	.L209:
 3913              	.LEHB108:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3914              		.loc 3 94 0 is_stmt 1
 3915 1b8f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3915      00
 3916 1b94 488B08   		movq	(%rax), %rcx
 3917 1b97 488D45C0 		leaq	-64(%rbp), %rax
 3918 1b9b BA5E0000 		movl	$94, %edx
 3918      00
 3919 1ba0 4889CE   		movq	%rcx, %rsi
 3920 1ba3 4889C7   		movq	%rax, %rdi
 3921 1ba6 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3921      00
 3922              		.loc 3 94 0 is_stmt 0 discriminator 2
 3923 1bab 488B45B8 		movq	-72(%rbp), %rax
 3924 1baf 4883C060 		addq	$96, %rax
 3925 1bb3 BE000000 		movl	$0, %esi
 3925      00
 3926 1bb8 4889C7   		movq	%rax, %rdi
 3927 1bbb E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 3927      00
 3928 1bc0 488D5808 		leaq	8(%rax), %rbx
 3929 1bc4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3929      00
 3930 1bc9 488B00   		movq	(%rax), %rax
 3931 1bcc 488D55C0 		leaq	-64(%rbp), %rdx
 3932 1bd0 488D75A8 		leaq	-88(%rbp), %rsi
 3933 1bd4 4889D1   		movq	%rdx, %rcx
 3934 1bd7 4889DA   		movq	%rbx, %rdx
 3935 1bda 4889C7   		movq	%rax, %rdi
 3936 1bdd E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3936      00
 3937              	.LEHE108:
 3938              	.L212:
 3939              	.LEHB109:
  95:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 3940              		.loc 3 95 0 is_stmt 1
 3941 1be2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3941      00
 3942 1be7 488B08   		movq	(%rax), %rcx
 3943 1bea 488D45C0 		leaq	-64(%rbp), %rax
 3944 1bee BA5F0000 		movl	$95, %edx
 3944      00
 3945 1bf3 4889CE   		movq	%rcx, %rsi
 3946 1bf6 4889C7   		movq	%rax, %rdi
 3947 1bf9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3947      00
 3948              		.loc 3 95 0 is_stmt 0 discriminator 2
 3949 1bfe 488B45B8 		movq	-72(%rbp), %rax
 3950 1c02 4883C060 		addq	$96, %rax
 3951 1c06 BE010000 		movl	$1, %esi
 3951      00
 3952 1c0b 4889C7   		movq	%rax, %rdi
 3953 1c0e E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 3953      00
 3954 1c13 488D5808 		leaq	8(%rax), %rbx
 3955 1c17 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3955      00
 3956 1c1c 488B00   		movq	(%rax), %rax
 3957 1c1f 488D55C0 		leaq	-64(%rbp), %rdx
 3958 1c23 488D75B0 		leaq	-80(%rbp), %rsi
 3959 1c27 4889D1   		movq	%rdx, %rcx
 3960 1c2a 4889DA   		movq	%rbx, %rdx
 3961 1c2d 4889C7   		movq	%rax, %rdi
 3962 1c30 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3962      00
 3963              	.LEHE109:
  96:TestDeferredTestReporter.cpp **** }
 3964              		.loc 3 96 0 is_stmt 1
 3965 1c35 E9160100 		jmp	.L206
 3965      00
 3966              	.L219:
 3967 1c3a EB00     		jmp	.L208
 3968              	.L218:
 3969              	.L208:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3970              		.loc 3 93 0
 3971 1c3c 4889C7   		movq	%rax, %rdi
 3972 1c3f E8000000 		call	__cxa_begin_catch
 3972      00
 3973              	.LEHB110:
 3974 1c44 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3974      00
 3975 1c49 488B08   		movq	(%rax), %rcx
 3976 1c4c 488D45C0 		leaq	-64(%rbp), %rax
 3977 1c50 BA5D0000 		movl	$93, %edx
 3977      00
 3978 1c55 4889CE   		movq	%rcx, %rsi
 3979 1c58 4889C7   		movq	%rax, %rdi
 3980 1c5b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3980      00
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3981              		.loc 3 93 0 is_stmt 0 discriminator 10
 3982 1c60 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3982      00
 3983 1c65 488B00   		movq	(%rax), %rax
 3984 1c68 488D4DC0 		leaq	-64(%rbp), %rcx
 3985 1c6c BA000000 		movl	$.LC25, %edx
 3985      00
 3986 1c71 4889CE   		movq	%rcx, %rsi
 3987 1c74 4889C7   		movq	%rax, %rdi
 3988 1c77 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3988      00
 3989              	.LEHE110:
 3990              	.LEHB111:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3991              		.loc 3 93 0 discriminator 14
 3992 1c7c E8000000 		call	__cxa_end_catch
 3992      00
 3993              	.LEHE111:
 3994 1c81 E909FFFF 		jmp	.L209
 3994      FF
 3995              	.L220:
 3996 1c86 4889C3   		movq	%rax, %rbx
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3997              		.loc 3 93 0
 3998 1c89 E8000000 		call	__cxa_end_catch
 3998      00
 3999 1c8e 4889D8   		movq	%rbx, %rax
 4000 1c91 4889C7   		movq	%rax, %rdi
 4001              	.LEHB112:
 4002 1c94 E8000000 		call	_Unwind_Resume
 4002      00
 4003              	.LEHE112:
 4004              	.L221:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4005              		.loc 3 94 0 is_stmt 1
 4006 1c99 4889C7   		movq	%rax, %rdi
 4007 1c9c E8000000 		call	__cxa_begin_catch
 4007      00
 4008              	.LEHB113:
 4009 1ca1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4009      00
 4010 1ca6 488B08   		movq	(%rax), %rcx
 4011 1ca9 488D45C0 		leaq	-64(%rbp), %rax
 4012 1cad BA5E0000 		movl	$94, %edx
 4012      00
 4013 1cb2 4889CE   		movq	%rcx, %rsi
 4014 1cb5 4889C7   		movq	%rax, %rdi
 4015 1cb8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4015      00
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4016              		.loc 3 94 0 is_stmt 0 discriminator 10
 4017 1cbd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4017      00
 4018 1cc2 488B00   		movq	(%rax), %rax
 4019 1cc5 488D4DC0 		leaq	-64(%rbp), %rcx
 4020 1cc9 BA000000 		movl	$.LC26, %edx
 4020      00
 4021 1cce 4889CE   		movq	%rcx, %rsi
 4022 1cd1 4889C7   		movq	%rax, %rdi
 4023 1cd4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4023      00
 4024              	.LEHE113:
 4025              	.LEHB114:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4026              		.loc 3 94 0 discriminator 14
 4027 1cd9 E8000000 		call	__cxa_end_catch
 4027      00
 4028              	.LEHE114:
 4029 1cde E9FFFEFF 		jmp	.L212
 4029      FF
 4030              	.L222:
 4031 1ce3 4889C3   		movq	%rax, %rbx
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4032              		.loc 3 94 0
 4033 1ce6 E8000000 		call	__cxa_end_catch
 4033      00
 4034 1ceb 4889D8   		movq	%rbx, %rax
 4035 1cee 4889C7   		movq	%rax, %rdi
 4036              	.LEHB115:
 4037 1cf1 E8000000 		call	_Unwind_Resume
 4037      00
 4038              	.LEHE115:
 4039              	.L223:
  95:TestDeferredTestReporter.cpp **** }
 4040              		.loc 3 95 0 is_stmt 1
 4041 1cf6 4889C7   		movq	%rax, %rdi
 4042 1cf9 E8000000 		call	__cxa_begin_catch
 4042      00
 4043              	.LEHB116:
 4044 1cfe E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4044      00
 4045 1d03 488B08   		movq	(%rax), %rcx
 4046 1d06 488D45C0 		leaq	-64(%rbp), %rax
 4047 1d0a BA5F0000 		movl	$95, %edx
 4047      00
 4048 1d0f 4889CE   		movq	%rcx, %rsi
 4049 1d12 4889C7   		movq	%rax, %rdi
 4050 1d15 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4050      00
  95:TestDeferredTestReporter.cpp **** }
 4051              		.loc 3 95 0 is_stmt 0 discriminator 10
 4052 1d1a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4052      00
 4053 1d1f 488B00   		movq	(%rax), %rax
 4054 1d22 488D4DC0 		leaq	-64(%rbp), %rcx
 4055 1d26 BA000000 		movl	$.LC27, %edx
 4055      00
 4056 1d2b 4889CE   		movq	%rcx, %rsi
 4057 1d2e 4889C7   		movq	%rax, %rdi
 4058 1d31 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4058      00
 4059              	.LEHE116:
 4060              	.LEHB117:
  95:TestDeferredTestReporter.cpp **** }
 4061              		.loc 3 95 0 discriminator 14
 4062 1d36 E8000000 		call	__cxa_end_catch
 4062      00
 4063              	.LEHE117:
 4064              		.loc 3 96 0 is_stmt 1 discriminator 14
 4065 1d3b EB13     		jmp	.L206
 4066              	.L224:
 4067 1d3d 4889C3   		movq	%rax, %rbx
  95:TestDeferredTestReporter.cpp **** }
 4068              		.loc 3 95 0
 4069 1d40 E8000000 		call	__cxa_end_catch
 4069      00
 4070 1d45 4889D8   		movq	%rbx, %rax
 4071 1d48 4889C7   		movq	%rax, %rdi
 4072              	.LEHB118:
 4073 1d4b E8000000 		call	_Unwind_Resume
 4073      00
 4074              	.LEHE118:
 4075              	.L206:
 4076              		.loc 3 96 0
 4077 1d50 488B45E8 		movq	-24(%rbp), %rax
 4078 1d54 64483304 		xorq	%fs:40, %rax
 4078      25280000 
 4078      00
 4079 1d5d 7405     		je	.L217
 4080 1d5f E8000000 		call	__stack_chk_fail
 4080      00
 4081              	.L217:
 4082 1d64 4883C468 		addq	$104, %rsp
 4083 1d68 5B       		popq	%rbx
 4084 1d69 5D       		popq	%rbp
 4085              		.cfi_def_cfa 7, 8
 4086 1d6a C3       		ret
 4087              		.cfi_endproc
 4088              	.LFE1405:
 4089              		.section	.gcc_except_table
 4090              		.align 4
 4091              	.LLSDA1405:
 4092 02cc FF       		.byte	0xff
 4093 02cd 03       		.byte	0x3
 4094 02ce 59       		.uleb128 .LLSDATT1405-.LLSDATTD1405
 4095              	.LLSDATTD1405:
 4096 02cf 01       		.byte	0x1
 4097 02d0 4C       		.uleb128 .LLSDACSE1405-.LLSDACSB1405
 4098              	.LLSDACSB1405:
 4099 02d1 41       		.uleb128 .LEHB105-.LFB1405
 4100 02d2 5A       		.uleb128 .LEHE105-.LEHB105
 4101 02d3 00       		.uleb128 0
 4102 02d4 00       		.uleb128 0
 4103 02d5 9F01     		.uleb128 .LEHB106-.LFB1405
 4104 02d7 1C       		.uleb128 .LEHE106-.LEHB106
 4105 02d8 9E03     		.uleb128 .L218-.LFB1405
 4106 02da 01       		.uleb128 0x1
 4107 02db D501     		.uleb128 .LEHB107-.LFB1405
 4108 02dd 1C       		.uleb128 .LEHE107-.LEHB107
 4109 02de 9C03     		.uleb128 .L219-.LFB1405
 4110 02e0 03       		.uleb128 0x3
 4111 02e1 F101     		.uleb128 .LEHB108-.LFB1405
 4112 02e3 53       		.uleb128 .LEHE108-.LEHB108
 4113 02e4 FB03     		.uleb128 .L221-.LFB1405
 4114 02e6 01       		.uleb128 0x1
 4115 02e7 C402     		.uleb128 .LEHB109-.LFB1405
 4116 02e9 53       		.uleb128 .LEHE109-.LEHB109
 4117 02ea D804     		.uleb128 .L223-.LFB1405
 4118 02ec 01       		.uleb128 0x1
 4119 02ed A603     		.uleb128 .LEHB110-.LFB1405
 4120 02ef 38       		.uleb128 .LEHE110-.LEHB110
 4121 02f0 E803     		.uleb128 .L220-.LFB1405
 4122 02f2 00       		.uleb128 0
 4123 02f3 DE03     		.uleb128 .LEHB111-.LFB1405
 4124 02f5 05       		.uleb128 .LEHE111-.LEHB111
 4125 02f6 00       		.uleb128 0
 4126 02f7 00       		.uleb128 0
 4127 02f8 F603     		.uleb128 .LEHB112-.LFB1405
 4128 02fa 05       		.uleb128 .LEHE112-.LEHB112
 4129 02fb 00       		.uleb128 0
 4130 02fc 00       		.uleb128 0
 4131 02fd 8304     		.uleb128 .LEHB113-.LFB1405
 4132 02ff 38       		.uleb128 .LEHE113-.LEHB113
 4133 0300 C504     		.uleb128 .L222-.LFB1405
 4134 0302 00       		.uleb128 0
 4135 0303 BB04     		.uleb128 .LEHB114-.LFB1405
 4136 0305 05       		.uleb128 .LEHE114-.LEHB114
 4137 0306 00       		.uleb128 0
 4138 0307 00       		.uleb128 0
 4139 0308 D304     		.uleb128 .LEHB115-.LFB1405
 4140 030a 05       		.uleb128 .LEHE115-.LEHB115
 4141 030b 00       		.uleb128 0
 4142 030c 00       		.uleb128 0
 4143 030d E004     		.uleb128 .LEHB116-.LFB1405
 4144 030f 38       		.uleb128 .LEHE116-.LEHB116
 4145 0310 9F05     		.uleb128 .L224-.LFB1405
 4146 0312 00       		.uleb128 0
 4147 0313 9805     		.uleb128 .LEHB117-.LFB1405
 4148 0315 05       		.uleb128 .LEHE117-.LEHB117
 4149 0316 00       		.uleb128 0
 4150 0317 00       		.uleb128 0
 4151 0318 AD05     		.uleb128 .LEHB118-.LFB1405
 4152 031a 05       		.uleb128 .LEHE118-.LEHB118
 4153 031b 00       		.uleb128 0
 4154 031c 00       		.uleb128 0
 4155              	.LLSDACSE1405:
 4156 031d 01       		.byte	0x1
 4157 031e 00       		.byte	0
 4158 031f 00       		.byte	0
 4159 0320 7D       		.byte	0x7d
 4160 0321 000000   		.align 4
 4161 0324 00000000 		.long	0
 4162              	
 4163              	.LLSDATT1405:
 4164              		.text
 4166 1d6b 90       		.align 2
 4168              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4169              	.LFB1407:
  97:TestDeferredTestReporter.cpp **** 
  98:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, DeferredTestReporterTakesCopyOfFailureMessage)
 4170              		.loc 3 98 0
 4171              		.cfi_startproc
 4172 1d6c 55       		pushq	%rbp
 4173              		.cfi_def_cfa_offset 16
 4174              		.cfi_offset 6, -16
 4175 1d6d 4889E5   		movq	%rsp, %rbp
 4176              		.cfi_def_cfa_register 6
 4177 1d70 4883EC10 		subq	$16, %rsp
 4178 1d74 48897DF8 		movq	%rdi, -8(%rbp)
 4179 1d78 488975F0 		movq	%rsi, -16(%rbp)
 4180              	.LBB69:
 4181              		.loc 3 98 0
 4182 1d7c 488B45F8 		movq	-8(%rbp), %rax
 4183 1d80 4889C7   		movq	%rax, %rdi
 4184 1d83 E8BAE2FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 4184      FF
 4185 1d88 488B45F8 		movq	-8(%rbp), %rax
 4186 1d8c 488B55F0 		movq	-16(%rbp), %rdx
 4187 1d90 488990A8 		movq	%rdx, 168(%rax)
 4187      000000
 4188              	.LBE69:
 4189 1d97 90       		nop
 4190 1d98 C9       		leave
 4191              		.cfi_def_cfa 7, 8
 4192 1d99 C3       		ret
 4193              		.cfi_endproc
 4194              	.LFE1407:
 4196              		.set	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4197              		.section	.rodata
 4198              		.align 8
 4199              	.LC28:
 4200 0488 44656665 		.string	"DeferredTestReporterTakesCopyOfFailureMessage"
 4200      72726564 
 4200      54657374 
 4200      5265706F 
 4200      72746572 
 4201              		.text
 4202              		.align 2
 4204              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 4205              	.LFB1410:
 4206              		.loc 3 98 0
 4207              		.cfi_startproc
 4208 1d9a 55       		pushq	%rbp
 4209              		.cfi_def_cfa_offset 16
 4210              		.cfi_offset 6, -16
 4211 1d9b 4889E5   		movq	%rsp, %rbp
 4212              		.cfi_def_cfa_register 6
 4213 1d9e 4883EC10 		subq	$16, %rsp
 4214 1da2 48897DF8 		movq	%rdi, -8(%rbp)
 4215              	.LBB70:
 4216              		.loc 3 98 0
 4217 1da6 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4217      00
 4218 1dab 4889C2   		movq	%rax, %rdx
 4219 1dae 488B45F8 		movq	-8(%rbp), %rax
 4220 1db2 41B86200 		movl	$98, %r8d
 4220      0000
 4221 1db8 B9000000 		movl	$.LC4, %ecx
 4221      00
 4222 1dbd BE000000 		movl	$.LC28, %esi
 4222      00
 4223 1dc2 4889C7   		movq	%rax, %rdi
 4224 1dc5 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 4224      00
 4225 1dca BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 4225      00
 4226 1dcf 488B45F8 		movq	-8(%rbp), %rax
 4227 1dd3 488910   		movq	%rdx, (%rax)
 4228              	.LBE70:
 4229 1dd6 90       		nop
 4230 1dd7 C9       		leave
 4231              		.cfi_def_cfa 7, 8
 4232 1dd8 C3       		ret
 4233              		.cfi_endproc
 4234              	.LFE1410:
 4236              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 4237              		.local	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4238              		.comm	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 4239              		.local	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 4240              		.comm	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4241 1dd9 90       		.align 2
 4243              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4244              	.LFB1414:
 4245              		.loc 3 98 0
 4246              		.cfi_startproc
 4247 1dda 55       		pushq	%rbp
 4248              		.cfi_def_cfa_offset 16
 4249              		.cfi_offset 6, -16
 4250 1ddb 4889E5   		movq	%rsp, %rbp
 4251              		.cfi_def_cfa_register 6
 4252 1dde 4883EC10 		subq	$16, %rsp
 4253 1de2 48897DF8 		movq	%rdi, -8(%rbp)
 4254              	.LBB71:
 4255              		.loc 3 98 0
 4256 1de6 488B45F8 		movq	-8(%rbp), %rax
 4257 1dea 4889C7   		movq	%rax, %rdi
 4258 1ded E822E4FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 4258      FF
 4259              	.LBE71:
 4260 1df2 90       		nop
 4261 1df3 C9       		leave
 4262              		.cfi_def_cfa 7, 8
 4263 1df4 C3       		ret
 4264              		.cfi_endproc
 4265              	.LFE1414:
 4267              		.set	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4268 1df5 90       		.align 2
 4270              	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureM
 4271              	.LFB1412:
 4272              		.loc 3 98 0
 4273              		.cfi_startproc
 4274              		.cfi_personality 0x3,__gxx_personality_v0
 4275              		.cfi_lsda 0x3,.LLSDA1412
 4276 1df6 55       		pushq	%rbp
 4277              		.cfi_def_cfa_offset 16
 4278              		.cfi_offset 6, -16
 4279 1df7 4889E5   		movq	%rsp, %rbp
 4280              		.cfi_def_cfa_register 6
 4281 1dfa 4154     		pushq	%r12
 4282 1dfc 53       		pushq	%rbx
 4283 1dfd 4881ECF0 		subq	$496, %rsp
 4283      010000
 4284              		.cfi_offset 12, -24
 4285              		.cfi_offset 3, -32
 4286 1e04 4889BD08 		movq	%rdi, -504(%rbp)
 4286      FEFFFF
 4287              		.loc 3 98 0
 4288 1e0b 64488B04 		movq	%fs:40, %rax
 4288      25280000 
 4288      00
 4289 1e14 488945E8 		movq	%rax, -24(%rbp)
 4290 1e18 31C0     		xorl	%eax, %eax
 4291 1e1a C6851FFE 		movb	$0, -481(%rbp)
 4291      FFFF00
 4292              	.LBB72:
 4293 1e21 488B8508 		movq	-504(%rbp), %rax
 4293      FEFFFF
 4294 1e28 488D5008 		leaq	8(%rax), %rdx
 4295 1e2c 488D8550 		leaq	-432(%rbp), %rax
 4295      FEFFFF
 4296 1e33 4889D6   		movq	%rdx, %rsi
 4297 1e36 4889C7   		movq	%rax, %rdi
 4298              	.LEHB119:
 4299 1e39 E82EFFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4299      FF
 4300              	.LEHE119:
 4301              		.loc 3 98 0 is_stmt 0 discriminator 1
 4302 1e3e C6851FFE 		movb	$1, -481(%rbp)
 4302      FFFF01
 4303 1e45 488B8508 		movq	-504(%rbp), %rax
 4303      FEFFFF
 4304 1e4c 488D5008 		leaq	8(%rax), %rdx
 4305 1e50 488D8550 		leaq	-432(%rbp), %rax
 4305      FEFFFF
 4306 1e57 4889D6   		movq	%rdx, %rsi
 4307 1e5a 4889C7   		movq	%rax, %rdi
 4308              	.LEHB120:
 4309 1e5d E8161200 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterT
 4309      00
 4310              	.LEHE120:
 4311              		.loc 3 98 0 discriminator 3
 4312 1e62 488D8550 		leaq	-432(%rbp), %rax
 4312      FEFFFF
 4313 1e69 4889C7   		movq	%rax, %rdi
 4314              	.LEHB121:
 4315 1e6c E869FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4315      FF
 4316              	.LEHE121:
 4317              	.LBE72:
 4318              		.loc 3 98 0
 4319 1e71 E9660200 		jmp	.L228
 4319      00
 4320              	.L243:
 4321 1e76 4989C4   		movq	%rax, %r12
 4322 1e79 4889D3   		movq	%rdx, %rbx
 4323              	.LBB73:
 4324 1e7c 488D8550 		leaq	-432(%rbp), %rax
 4324      FEFFFF
 4325 1e83 4889C7   		movq	%rax, %rdi
 4326 1e86 E84FFFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4326      FF
 4327 1e8b 4C89E0   		movq	%r12, %rax
 4328 1e8e 4889DA   		movq	%rbx, %rdx
 4329 1e91 EB00     		jmp	.L230
 4330              	.L242:
 4331              	.L230:
 4332 1e93 4883FA01 		cmpq	$1, %rdx
 4333 1e97 740F     		je	.L232
 4334 1e99 4883FA02 		cmpq	$2, %rdx
 4335 1e9d 0F84A700 		je	.L233
 4335      0000
 4336 1ea3 E94B0100 		jmp	.L248
 4336      00
 4337              	.L232:
 4338              	.LBE73:
 4339              	.LBB74:
 4340 1ea8 4889C7   		movq	%rax, %rdi
 4341 1eab E8000000 		call	__cxa_begin_catch
 4341      00
 4342 1eb0 48898520 		movq	%rax, -480(%rbp)
 4342      FEFFFF
 4343 1eb7 488B8520 		movq	-480(%rbp), %rax
 4343      FEFFFF
 4344 1ebe 488B00   		movq	(%rax), %rax
 4345 1ec1 4883C010 		addq	$16, %rax
 4346 1ec5 488B00   		movq	(%rax), %rax
 4347 1ec8 488B9520 		movq	-480(%rbp), %rdx
 4347      FEFFFF
 4348 1ecf 4889D7   		movq	%rdx, %rdi
 4349 1ed2 FFD0     		call	*%rax
 4350 1ed4 4889C3   		movq	%rax, %rbx
 4351 1ed7 488B8520 		movq	-480(%rbp), %rax
 4351      FEFFFF
 4352 1ede 4889C7   		movq	%rax, %rdi
 4353              	.LEHB122:
 4354 1ee1 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 4354      00
 4355 1ee6 4189C4   		movl	%eax, %r12d
 4356 1ee9 488B8520 		movq	-480(%rbp), %rax
 4356      FEFFFF
 4357 1ef0 4889C7   		movq	%rax, %rdi
 4358 1ef3 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 4358      00
 4359              		.loc 3 98 0 discriminator 5
 4360 1ef8 4889C1   		movq	%rax, %rcx
 4361 1efb 488B8508 		movq	-504(%rbp), %rax
 4361      FEFFFF
 4362 1f02 488B5008 		movq	8(%rax), %rdx
 4363 1f06 488B8508 		movq	-504(%rbp), %rax
 4363      FEFFFF
 4364 1f0d 488B7010 		movq	16(%rax), %rsi
 4365 1f11 488D8530 		leaq	-464(%rbp), %rax
 4365      FEFFFF
 4366 1f18 4589E0   		movl	%r12d, %r8d
 4367 1f1b 4889C7   		movq	%rax, %rdi
 4368 1f1e E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4368      00
 4369              		.loc 3 98 0 discriminator 9
 4370 1f23 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4370      00
 4371 1f28 488B00   		movq	(%rax), %rax
 4372 1f2b 488D8D30 		leaq	-464(%rbp), %rcx
 4372      FEFFFF
 4373 1f32 4889DA   		movq	%rbx, %rdx
 4374 1f35 4889CE   		movq	%rcx, %rsi
 4375 1f38 4889C7   		movq	%rax, %rdi
 4376 1f3b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4376      00
 4377              	.LEHE122:
 4378              		.loc 3 98 0 discriminator 13
 4379 1f40 E8000000 		call	__cxa_end_catch
 4379      00
 4380              	.LBE74:
 4381 1f45 E9920100 		jmp	.L228
 4381      00
 4382              	.L233:
 4383              	.LBB75:
 4384              		.loc 3 98 0
 4385 1f4a 4889C7   		movq	%rax, %rdi
 4386 1f4d E8000000 		call	__cxa_begin_catch
 4386      00
 4387 1f52 48898528 		movq	%rax, -472(%rbp)
 4387      FEFFFF
 4388              	.LBB76:
 4389 1f59 488D8550 		leaq	-432(%rbp), %rax
 4389      FEFFFF
 4390 1f60 4889C7   		movq	%rax, %rdi
 4391              	.LEHB123:
 4392 1f63 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4392      00
 4393              	.LEHE123:
 4394              		.loc 3 98 0 discriminator 15
 4395 1f68 488B8528 		movq	-472(%rbp), %rax
 4395      FEFFFF
 4396 1f6f 488B00   		movq	(%rax), %rax
 4397 1f72 4883C010 		addq	$16, %rax
 4398 1f76 488B00   		movq	(%rax), %rax
 4399 1f79 488B9528 		movq	-472(%rbp), %rdx
 4399      FEFFFF
 4400 1f80 4889D7   		movq	%rdx, %rdi
 4401 1f83 FFD0     		call	*%rax
 4402 1f85 4889C3   		movq	%rax, %rbx
 4403 1f88 488D8550 		leaq	-432(%rbp), %rax
 4403      FEFFFF
 4404 1f8f BE000000 		movl	$.LC6, %esi
 4404      00
 4405 1f94 4889C7   		movq	%rax, %rdi
 4406              	.LEHB124:
 4407 1f97 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4407      00
 4408 1f9c 4889DE   		movq	%rbx, %rsi
 4409 1f9f 4889C7   		movq	%rax, %rdi
 4410 1fa2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4410      00
 4411              		.loc 3 98 0 discriminator 19
 4412 1fa7 488D8550 		leaq	-432(%rbp), %rax
 4412      FEFFFF
 4413 1fae 4889C7   		movq	%rax, %rdi
 4414 1fb1 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4414      00
 4415 1fb6 4989C4   		movq	%rax, %r12
 4416 1fb9 488B8508 		movq	-504(%rbp), %rax
 4416      FEFFFF
 4417 1fc0 488D5808 		leaq	8(%rax), %rbx
 4418 1fc4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4418      00
 4419              		.loc 3 98 0 discriminator 21
 4420 1fc9 488B00   		movq	(%rax), %rax
 4421 1fcc 4C89E2   		movq	%r12, %rdx
 4422 1fcf 4889DE   		movq	%rbx, %rsi
 4423 1fd2 4889C7   		movq	%rax, %rdi
 4424 1fd5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4424      00
 4425              	.LEHE124:
 4426              		.loc 3 98 0 discriminator 25
 4427 1fda 488D8550 		leaq	-432(%rbp), %rax
 4427      FEFFFF
 4428 1fe1 4889C7   		movq	%rax, %rdi
 4429              	.LEHB125:
 4430 1fe4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4430      00
 4431              	.LEHE125:
 4432              	.LBE76:
 4433              		.loc 3 98 0 discriminator 26
 4434 1fe9 E8000000 		call	__cxa_end_catch
 4434      00
 4435              	.LBE75:
 4436 1fee E9E90000 		jmp	.L228
 4436      00
 4437              	.L248:
 4438              		.loc 3 98 0
 4439 1ff3 4889C7   		movq	%rax, %rdi
 4440 1ff6 E8000000 		call	__cxa_begin_catch
 4440      00
 4441 1ffb 80BD1FFE 		cmpb	$0, -481(%rbp)
 4441      FFFF00
 4442 2002 7443     		je	.L235
 4443              		.loc 3 98 0 discriminator 28
 4444 2004 488B8508 		movq	-504(%rbp), %rax
 4444      FEFFFF
 4445 200b 488D4808 		leaq	8(%rax), %rcx
 4446 200f 488D8530 		leaq	-464(%rbp), %rax
 4446      FEFFFF
 4447 2016 BA620000 		movl	$98, %edx
 4447      00
 4448 201b 4889CE   		movq	%rcx, %rsi
 4449 201e 4889C7   		movq	%rax, %rdi
 4450              	.LEHB126:
 4451 2021 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4451      00
 4452              		.loc 3 98 0 discriminator 31
 4453 2026 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4453      00
 4454 202b 488B00   		movq	(%rax), %rax
 4455 202e 488D8D30 		leaq	-464(%rbp), %rcx
 4455      FEFFFF
 4456 2035 BA000000 		movl	$.LC7, %edx
 4456      00
 4457 203a 4889CE   		movq	%rcx, %rsi
 4458 203d 4889C7   		movq	%rax, %rdi
 4459 2040 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4459      00
 4460 2045 EB41     		jmp	.L236
 4461              	.L235:
 4462              		.loc 3 98 0 discriminator 29
 4463 2047 488B8508 		movq	-504(%rbp), %rax
 4463      FEFFFF
 4464 204e 488D4808 		leaq	8(%rax), %rcx
 4465 2052 488D8530 		leaq	-464(%rbp), %rax
 4465      FEFFFF
 4466 2059 BA620000 		movl	$98, %edx
 4466      00
 4467 205e 4889CE   		movq	%rcx, %rsi
 4468 2061 4889C7   		movq	%rax, %rdi
 4469 2064 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4469      00
 4470              		.loc 3 98 0 discriminator 38
 4471 2069 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4471      00
 4472 206e 488B00   		movq	(%rax), %rax
 4473 2071 488D8D30 		leaq	-464(%rbp), %rcx
 4473      FEFFFF
 4474 2078 BA000000 		movl	$.LC8, %edx
 4474      00
 4475 207d 4889CE   		movq	%rcx, %rsi
 4476 2080 4889C7   		movq	%rax, %rdi
 4477 2083 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4477      00
 4478              	.LEHE126:
 4479              	.L236:
 4480              	.LEHB127:
 4481              		.loc 3 98 0 discriminator 43
 4482 2088 E8000000 		call	__cxa_end_catch
 4482      00
 4483 208d EB4D     		jmp	.L228
 4484              	.L244:
 4485 208f 4889C3   		movq	%rax, %rbx
 4486              	.LBB78:
 4487              		.loc 3 98 0
 4488 2092 E8000000 		call	__cxa_end_catch
 4488      00
 4489 2097 4889D8   		movq	%rbx, %rax
 4490 209a 4889C7   		movq	%rax, %rdi
 4491 209d E8000000 		call	_Unwind_Resume
 4491      00
 4492              	.LEHE127:
 4493              	.L246:
 4494 20a2 4889C3   		movq	%rax, %rbx
 4495              	.LBE78:
 4496              	.LBB79:
 4497              	.LBB77:
 4498 20a5 488D8550 		leaq	-432(%rbp), %rax
 4498      FEFFFF
 4499 20ac 4889C7   		movq	%rax, %rdi
 4500 20af E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4500      00
 4501 20b4 EB03     		jmp	.L239
 4502              	.L245:
 4503 20b6 4889C3   		movq	%rax, %rbx
 4504              	.L239:
 4505              	.LBE77:
 4506 20b9 E8000000 		call	__cxa_end_catch
 4506      00
 4507 20be 4889D8   		movq	%rbx, %rax
 4508 20c1 4889C7   		movq	%rax, %rdi
 4509              	.LEHB128:
 4510 20c4 E8000000 		call	_Unwind_Resume
 4510      00
 4511              	.LEHE128:
 4512              	.L247:
 4513 20c9 4889C3   		movq	%rax, %rbx
 4514              	.LBE79:
 4515 20cc E8000000 		call	__cxa_end_catch
 4515      00
 4516 20d1 4889D8   		movq	%rbx, %rax
 4517 20d4 4889C7   		movq	%rax, %rdi
 4518              	.LEHB129:
 4519 20d7 E8000000 		call	_Unwind_Resume
 4519      00
 4520              	.LEHE129:
 4521              	.L228:
 4522 20dc 488B45E8 		movq	-24(%rbp), %rax
 4523 20e0 64483304 		xorq	%fs:40, %rax
 4523      25280000 
 4523      00
 4524 20e9 7405     		je	.L241
 4525 20eb E8000000 		call	__stack_chk_fail
 4525      00
 4526              	.L241:
 4527 20f0 4881C4F0 		addq	$496, %rsp
 4527      010000
 4528 20f7 5B       		popq	%rbx
 4529 20f8 415C     		popq	%r12
 4530 20fa 5D       		popq	%rbp
 4531              		.cfi_def_cfa 7, 8
 4532 20fb C3       		ret
 4533              		.cfi_endproc
 4534              	.LFE1412:
 4535              		.section	.gcc_except_table
 4536              		.align 4
 4537              	.LLSDA1412:
 4538 0328 FF       		.byte	0xff
 4539 0329 03       		.byte	0x3
 4540 032a 55       		.uleb128 .LLSDATT1412-.LLSDATTD1412
 4541              	.LLSDATTD1412:
 4542 032b 01       		.byte	0x1
 4543 032c 3C       		.uleb128 .LLSDACSE1412-.LLSDACSB1412
 4544              	.LLSDACSB1412:
 4545 032d 43       		.uleb128 .LEHB119-.LFB1412
 4546 032e 05       		.uleb128 .LEHE119-.LEHB119
 4547 032f 9D01     		.uleb128 .L242-.LFB1412
 4548 0331 05       		.uleb128 0x5
 4549 0332 67       		.uleb128 .LEHB120-.LFB1412
 4550 0333 05       		.uleb128 .LEHE120-.LEHB120
 4551 0334 8001     		.uleb128 .L243-.LFB1412
 4552 0336 07       		.uleb128 0x7
 4553 0337 76       		.uleb128 .LEHB121-.LFB1412
 4554 0338 05       		.uleb128 .LEHE121-.LEHB121
 4555 0339 9D01     		.uleb128 .L242-.LFB1412
 4556 033b 05       		.uleb128 0x5
 4557 033c EB01     		.uleb128 .LEHB122-.LFB1412
 4558 033e 5F       		.uleb128 .LEHE122-.LEHB122
 4559 033f 9905     		.uleb128 .L244-.LFB1412
 4560 0341 00       		.uleb128 0
 4561 0342 ED02     		.uleb128 .LEHB123-.LFB1412
 4562 0344 05       		.uleb128 .LEHE123-.LEHB123
 4563 0345 C005     		.uleb128 .L245-.LFB1412
 4564 0347 00       		.uleb128 0
 4565 0348 A103     		.uleb128 .LEHB124-.LFB1412
 4566 034a 43       		.uleb128 .LEHE124-.LEHB124
 4567 034b AC05     		.uleb128 .L246-.LFB1412
 4568 034d 00       		.uleb128 0
 4569 034e EE03     		.uleb128 .LEHB125-.LFB1412
 4570 0350 05       		.uleb128 .LEHE125-.LEHB125
 4571 0351 C005     		.uleb128 .L245-.LFB1412
 4572 0353 00       		.uleb128 0
 4573 0354 AB04     		.uleb128 .LEHB126-.LFB1412
 4574 0356 67       		.uleb128 .LEHE126-.LEHB126
 4575 0357 D305     		.uleb128 .L247-.LFB1412
 4576 0359 00       		.uleb128 0
 4577 035a 9205     		.uleb128 .LEHB127-.LFB1412
 4578 035c 1A       		.uleb128 .LEHE127-.LEHB127
 4579 035d 00       		.uleb128 0
 4580 035e 00       		.uleb128 0
 4581 035f CE05     		.uleb128 .LEHB128-.LFB1412
 4582 0361 05       		.uleb128 .LEHE128-.LEHB128
 4583 0362 00       		.uleb128 0
 4584 0363 00       		.uleb128 0
 4585 0364 E105     		.uleb128 .LEHB129-.LFB1412
 4586 0366 05       		.uleb128 .LEHE129-.LEHB129
 4587 0367 00       		.uleb128 0
 4588 0368 00       		.uleb128 0
 4589              	.LLSDACSE1412:
 4590 0369 03       		.byte	0x3
 4591 036a 00       		.byte	0
 4592 036b 02       		.byte	0x2
 4593 036c 7D       		.byte	0x7d
 4594 036d 01       		.byte	0x1
 4595 036e 7D       		.byte	0x7d
 4596 036f 00       		.byte	0
 4597 0370 7D       		.byte	0x7d
 4598 0371 000000   		.align 4
 4599 0374 00000000 		.long	0
 4600              	
 4601 0378 00000000 		.long	_ZTISt9exception
 4602 037c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 4603              	.LLSDATT1412:
 4604              		.text
 4606              		.section	.rodata
 4607              	.LC29:
 4608 04b6 5265616C 		.string	"Real failure message"
 4608      20666169 
 4608      6C757265 
 4608      206D6573 
 4608      73616765 
 4609              	.LC30:
 4610 04cb 426F6775 		.string	"Bogus failure message"
 4610      73206661 
 4610      696C7572 
 4610      65206D65 
 4610      73736167 
 4611 04e1 00000000 		.align 8
 4611      000000
 4612              	.LC31:
 4613 04e8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(goodStr, failure.second)"
 4613      6E646C65 
 4613      64206578 
 4613      63657074 
 4613      696F6E20 
 4614              		.text
 4615              		.align 2
 4617              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4618              	.LFB1416:
  99:TestDeferredTestReporter.cpp **** {
 4619              		.loc 3 99 0 is_stmt 1
 4620              		.cfi_startproc
 4621              		.cfi_personality 0x3,__gxx_personality_v0
 4622              		.cfi_lsda 0x3,.LLSDA1416
 4623 20fc 55       		pushq	%rbp
 4624              		.cfi_def_cfa_offset 16
 4625              		.cfi_offset 6, -16
 4626 20fd 4889E5   		movq	%rsp, %rbp
 4627              		.cfi_def_cfa_register 6
 4628 2100 53       		pushq	%rbx
 4629 2101 4881ECE8 		subq	$232, %rsp
 4629      000000
 4630              		.cfi_offset 3, -24
 4631 2108 4889BD18 		movq	%rdi, -232(%rbp)
 4631      FFFFFF
 4632              		.loc 3 99 0
 4633 210f 64488B04 		movq	%fs:40, %rax
 4633      25280000 
 4633      00
 4634 2118 488945E8 		movq	%rax, -24(%rbp)
 4635 211c 31C0     		xorl	%eax, %eax
 100:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 4636              		.loc 3 100 0
 4637 211e 488B8518 		movq	-232(%rbp), %rax
 4637      FFFFFF
 4638 2125 488D9088 		leaq	136(%rax), %rdx
 4638      000000
 4639 212c 488B8518 		movq	-232(%rbp), %rax
 4639      FFFFFF
 4640 2133 4889D6   		movq	%rdx, %rsi
 4641 2136 4889C7   		movq	%rax, %rdi
 4642              	.LEHB130:
 4643 2139 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4643      00
 101:TestDeferredTestReporter.cpp **** 
 102:TestDeferredTestReporter.cpp ****     char failureMessage[128];
 103:TestDeferredTestReporter.cpp ****     char const* goodStr = "Real failure message";
 4644              		.loc 3 103 0
 4645 213e 48C78520 		movq	$.LC29, -224(%rbp)
 4645      FFFFFF00 
 4645      000000
 104:TestDeferredTestReporter.cpp ****     char const* badStr = "Bogus failure message";
 4646              		.loc 3 104 0
 4647 2149 48C78528 		movq	$.LC30, -216(%rbp)
 4647      FFFFFF00 
 4647      000000
 105:TestDeferredTestReporter.cpp ****     
 106:TestDeferredTestReporter.cpp **** 	using namespace std;
 107:TestDeferredTestReporter.cpp **** 
 108:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, goodStr);
 4648              		.loc 3 108 0
 4649 2154 488B9520 		movq	-224(%rbp), %rdx
 4649      FFFFFF
 4650 215b 488D8560 		leaq	-160(%rbp), %rax
 4650      FFFFFF
 4651 2162 4889D6   		movq	%rdx, %rsi
 4652 2165 4889C7   		movq	%rax, %rdi
 4653 2168 E8000000 		call	strcpy
 4653      00
 109:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failureMessage);
 4654              		.loc 3 109 0
 4655 216d 488B8518 		movq	-232(%rbp), %rax
 4655      FFFFFF
 4656 2174 488D8888 		leaq	136(%rax), %rcx
 4656      000000
 4657 217b 488B8518 		movq	-232(%rbp), %rax
 4657      FFFFFF
 4658 2182 488D9560 		leaq	-160(%rbp), %rdx
 4658      FFFFFF
 4659 2189 4889CE   		movq	%rcx, %rsi
 4660 218c 4889C7   		movq	%rax, %rdi
 4661 218f E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 4661      00
 110:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, badStr);
 4662              		.loc 3 110 0
 4663 2194 488B9528 		movq	-216(%rbp), %rdx
 4663      FFFFFF
 4664 219b 488D8560 		leaq	-160(%rbp), %rax
 4664      FFFFFF
 4665 21a2 4889D6   		movq	%rdx, %rsi
 4666 21a5 4889C7   		movq	%rax, %rdi
 4667 21a8 E8000000 		call	strcpy
 4667      00
 111:TestDeferredTestReporter.cpp **** 
 112:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 4668              		.loc 3 112 0
 4669 21ad 488B8518 		movq	-232(%rbp), %rax
 4669      FFFFFF
 4670 21b4 4889C7   		movq	%rax, %rdi
 4671 21b7 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 4671      00
 4672 21bc BE000000 		movl	$0, %esi
 4672      00
 4673 21c1 4889C7   		movq	%rax, %rdi
 4674 21c4 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 4674      00
 4675 21c9 48898530 		movq	%rax, -208(%rbp)
 4675      FFFFFF
 113:TestDeferredTestReporter.cpp ****     DeferredTestResult::Failure const& failure = result.failures.at(0);
 4676              		.loc 3 113 0
 4677 21d0 488B8530 		movq	-208(%rbp), %rax
 4677      FFFFFF
 4678 21d7 4883C060 		addq	$96, %rax
 4679 21db BE000000 		movl	$0, %esi
 4679      00
 4680 21e0 4889C7   		movq	%rax, %rdi
 4681 21e3 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
 4681      00
 4682              	.LEHE130:
 4683 21e8 48898538 		movq	%rax, -200(%rbp)
 4683      FFFFFF
 4684              	.LEHB131:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4685              		.loc 3 114 0
 4686 21ef E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4686      00
 4687 21f4 488B08   		movq	(%rax), %rcx
 4688 21f7 488D8540 		leaq	-192(%rbp), %rax
 4688      FFFFFF
 4689 21fe BA720000 		movl	$114, %edx
 4689      00
 4690 2203 4889CE   		movq	%rcx, %rsi
 4691 2206 4889C7   		movq	%rax, %rdi
 4692 2209 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4692      00
 4693              		.loc 3 114 0 is_stmt 0 discriminator 2
 4694 220e 488B8538 		movq	-200(%rbp), %rax
 4694      FFFFFF
 4695 2215 488D5808 		leaq	8(%rax), %rbx
 4696 2219 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4696      00
 4697 221e 488B00   		movq	(%rax), %rax
 4698 2221 488D9540 		leaq	-192(%rbp), %rdx
 4698      FFFFFF
 4699 2228 488DB520 		leaq	-224(%rbp), %rsi
 4699      FFFFFF
 4700 222f 4889D1   		movq	%rdx, %rcx
 4701 2232 4889DA   		movq	%rbx, %rdx
 4702 2235 4889C7   		movq	%rax, %rdi
 4703 2238 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4703      00
 4704              	.LEHE131:
 115:TestDeferredTestReporter.cpp **** }
 4705              		.loc 3 115 0 is_stmt 1
 4706 223d EB60     		jmp	.L249
 4707              	.L254:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4708              		.loc 3 114 0
 4709 223f 4889C7   		movq	%rax, %rdi
 4710 2242 E8000000 		call	__cxa_begin_catch
 4710      00
 4711              	.LEHB132:
 4712 2247 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4712      00
 4713 224c 488B08   		movq	(%rax), %rcx
 4714 224f 488D8540 		leaq	-192(%rbp), %rax
 4714      FFFFFF
 4715 2256 BA720000 		movl	$114, %edx
 4715      00
 4716 225b 4889CE   		movq	%rcx, %rsi
 4717 225e 4889C7   		movq	%rax, %rdi
 4718 2261 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4718      00
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4719              		.loc 3 114 0 is_stmt 0 discriminator 10
 4720 2266 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4720      00
 4721 226b 488B00   		movq	(%rax), %rax
 4722 226e 488D8D40 		leaq	-192(%rbp), %rcx
 4722      FFFFFF
 4723 2275 BA000000 		movl	$.LC31, %edx
 4723      00
 4724 227a 4889CE   		movq	%rcx, %rsi
 4725 227d 4889C7   		movq	%rax, %rdi
 4726 2280 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4726      00
 4727              	.LEHE132:
 4728              	.LEHB133:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4729              		.loc 3 114 0 discriminator 14
 4730 2285 E8000000 		call	__cxa_end_catch
 4730      00
 4731              	.LEHE133:
 4732              		.loc 3 115 0 is_stmt 1 discriminator 14
 4733 228a EB13     		jmp	.L249
 4734              	.L255:
 4735 228c 4889C3   		movq	%rax, %rbx
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4736              		.loc 3 114 0
 4737 228f E8000000 		call	__cxa_end_catch
 4737      00
 4738 2294 4889D8   		movq	%rbx, %rax
 4739 2297 4889C7   		movq	%rax, %rdi
 4740              	.LEHB134:
 4741 229a E8000000 		call	_Unwind_Resume
 4741      00
 4742              	.LEHE134:
 4743              	.L249:
 4744              		.loc 3 115 0
 4745 229f 488B45E8 		movq	-24(%rbp), %rax
 4746 22a3 64483304 		xorq	%fs:40, %rax
 4746      25280000 
 4746      00
 4747 22ac 7405     		je	.L253
 4748 22ae E8000000 		call	__stack_chk_fail
 4748      00
 4749              	.L253:
 4750 22b3 4881C4E8 		addq	$232, %rsp
 4750      000000
 4751 22ba 5B       		popq	%rbx
 4752 22bb 5D       		popq	%rbp
 4753              		.cfi_def_cfa 7, 8
 4754 22bc C3       		ret
 4755              		.cfi_endproc
 4756              	.LFE1416:
 4757              		.section	.gcc_except_table
 4758              		.align 4
 4759              	.LLSDA1416:
 4760 0380 FF       		.byte	0xff
 4761 0381 03       		.byte	0x3
 4762 0382 25       		.uleb128 .LLSDATT1416-.LLSDATTD1416
 4763              	.LLSDATTD1416:
 4764 0383 01       		.byte	0x1
 4765 0384 1B       		.uleb128 .LLSDACSE1416-.LLSDACSB1416
 4766              	.LLSDACSB1416:
 4767 0385 3D       		.uleb128 .LEHB130-.LFB1416
 4768 0386 AF01     		.uleb128 .LEHE130-.LEHB130
 4769 0388 00       		.uleb128 0
 4770 0389 00       		.uleb128 0
 4771 038a F301     		.uleb128 .LEHB131-.LFB1416
 4772 038c 4E       		.uleb128 .LEHE131-.LEHB131
 4773 038d C302     		.uleb128 .L254-.LFB1416
 4774 038f 01       		.uleb128 0x1
 4775 0390 CB02     		.uleb128 .LEHB132-.LFB1416
 4776 0392 3E       		.uleb128 .LEHE132-.LEHB132
 4777 0393 9003     		.uleb128 .L255-.LFB1416
 4778 0395 00       		.uleb128 0
 4779 0396 8903     		.uleb128 .LEHB133-.LFB1416
 4780 0398 05       		.uleb128 .LEHE133-.LEHB133
 4781 0399 00       		.uleb128 0
 4782 039a 00       		.uleb128 0
 4783 039b 9E03     		.uleb128 .LEHB134-.LFB1416
 4784 039d 05       		.uleb128 .LEHE134-.LEHB134
 4785 039e 00       		.uleb128 0
 4786 039f 00       		.uleb128 0
 4787              	.LLSDACSE1416:
 4788 03a0 01       		.byte	0x1
 4789 03a1 00       		.byte	0
 4790 03a2 0000     		.align 4
 4791 03a4 00000000 		.long	0
 4792              	
 4793              	.LLSDATT1416:
 4794              		.text
 4796              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vect
 4797              		.align 2
 4798              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 4800              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 4801              	.LFB1447:
 4802              		.file 6 "/usr/include/c++/5/bits/stl_vector.h"
   1:/usr/include/c++/5/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_vector.h **** 
   3:/usr/include/c++/5/bits/stl_vector.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_vector.h **** //
   5:/usr/include/c++/5/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_vector.h **** 
  11:/usr/include/c++/5/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_vector.h **** 
  16:/usr/include/c++/5/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_vector.h **** 
  20:/usr/include/c++/5/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_vector.h **** 
  25:/usr/include/c++/5/bits/stl_vector.h **** /*
  26:/usr/include/c++/5/bits/stl_vector.h ****  *
  27:/usr/include/c++/5/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_vector.h ****  *
  30:/usr/include/c++/5/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_vector.h ****  *
  38:/usr/include/c++/5/bits/stl_vector.h ****  *
  39:/usr/include/c++/5/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/5/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_vector.h ****  *
  42:/usr/include/c++/5/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/5/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_vector.h ****  */
  50:/usr/include/c++/5/bits/stl_vector.h **** 
  51:/usr/include/c++/5/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/5/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/5/bits/stl_vector.h ****  */
  55:/usr/include/c++/5/bits/stl_vector.h **** 
  56:/usr/include/c++/5/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/5/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/5/bits/stl_vector.h **** 
  59:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/5/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/5/bits/stl_vector.h **** #endif
  65:/usr/include/c++/5/bits/stl_vector.h **** 
  66:/usr/include/c++/5/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/5/bits/stl_vector.h **** {
  68:/usr/include/c++/5/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/5/bits/stl_vector.h **** 
  70:/usr/include/c++/5/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/5/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/5/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/5/bits/stl_vector.h ****     {
  74:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/5/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/5/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/5/bits/stl_vector.h **** 
  79:/usr/include/c++/5/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/5/bits/stl_vector.h ****       {
  82:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/5/bits/stl_vector.h **** 
  86:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  88:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/5/bits/stl_vector.h **** 
  90:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  92:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/5/bits/stl_vector.h **** 
  94:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
  98:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/5/bits/stl_vector.h **** #endif
 100:/usr/include/c++/5/bits/stl_vector.h **** 
 101:/usr/include/c++/5/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:/usr/include/c++/5/bits/stl_vector.h **** 	{
 103:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/5/bits/stl_vector.h **** 	}
 107:/usr/include/c++/5/bits/stl_vector.h ****       };
 108:/usr/include/c++/5/bits/stl_vector.h ****       
 109:/usr/include/c++/5/bits/stl_vector.h ****     public:
 110:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/5/bits/stl_vector.h **** 
 112:/usr/include/c++/5/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/5/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/5/bits/stl_vector.h **** 
 116:/usr/include/c++/5/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/5/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/5/bits/stl_vector.h **** 
 120:/usr/include/c++/5/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/5/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/5/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/5/bits/stl_vector.h **** 
 124:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/5/bits/stl_vector.h **** 
 127:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/5/bits/stl_vector.h **** 
 130:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/5/bits/stl_vector.h **** 
 134:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/5/bits/stl_vector.h **** 
 138:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/5/bits/stl_vector.h **** 
 142:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/5/bits/stl_vector.h **** 
 146:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/5/bits/stl_vector.h ****       {
 149:/usr/include/c++/5/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/5/bits/stl_vector.h **** 	else
 152:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/5/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/5/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/5/bits/stl_vector.h ****       }
 157:/usr/include/c++/5/bits/stl_vector.h **** #endif
 158:/usr/include/c++/5/bits/stl_vector.h **** 
 159:/usr/include/c++/5/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/5/bits/stl_vector.h **** 
 163:/usr/include/c++/5/bits/stl_vector.h ****     public:
 164:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/5/bits/stl_vector.h **** 
 166:/usr/include/c++/5/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/5/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/5/bits/stl_vector.h ****       {
 169:/usr/include/c++/5/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:/usr/include/c++/5/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 171:/usr/include/c++/5/bits/stl_vector.h ****       }
 172:/usr/include/c++/5/bits/stl_vector.h **** 
 173:/usr/include/c++/5/bits/stl_vector.h ****       void
 174:/usr/include/c++/5/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:/usr/include/c++/5/bits/stl_vector.h ****       {
 176:/usr/include/c++/5/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:/usr/include/c++/5/bits/stl_vector.h **** 	if (__p)
 178:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:/usr/include/c++/5/bits/stl_vector.h ****       }
 180:/usr/include/c++/5/bits/stl_vector.h **** 
 181:/usr/include/c++/5/bits/stl_vector.h ****     private:
 182:/usr/include/c++/5/bits/stl_vector.h ****       void
 183:/usr/include/c++/5/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 184:/usr/include/c++/5/bits/stl_vector.h ****       {
 185:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:/usr/include/c++/5/bits/stl_vector.h ****       }
 189:/usr/include/c++/5/bits/stl_vector.h ****     };
 190:/usr/include/c++/5/bits/stl_vector.h **** 
 191:/usr/include/c++/5/bits/stl_vector.h **** 
 192:/usr/include/c++/5/bits/stl_vector.h ****   /**
 193:/usr/include/c++/5/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:/usr/include/c++/5/bits/stl_vector.h ****    *  individual elements in any order.
 195:/usr/include/c++/5/bits/stl_vector.h ****    *
 196:/usr/include/c++/5/bits/stl_vector.h ****    *  @ingroup sequences
 197:/usr/include/c++/5/bits/stl_vector.h ****    *
 198:/usr/include/c++/5/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:/usr/include/c++/5/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:/usr/include/c++/5/bits/stl_vector.h ****    *
 201:/usr/include/c++/5/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:/usr/include/c++/5/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:/usr/include/c++/5/bits/stl_vector.h ****    *
 207:/usr/include/c++/5/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:/usr/include/c++/5/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:/usr/include/c++/5/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:/usr/include/c++/5/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:/usr/include/c++/5/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 212:/usr/include/c++/5/bits/stl_vector.h ****   */
 213:/usr/include/c++/5/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:/usr/include/c++/5/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:/usr/include/c++/5/bits/stl_vector.h ****     {
 216:/usr/include/c++/5/bits/stl_vector.h ****       // Concept requirements.
 217:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:/usr/include/c++/5/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 219:/usr/include/c++/5/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 220:/usr/include/c++/5/bits/stl_vector.h ****       
 221:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 222:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 223:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 224:/usr/include/c++/5/bits/stl_vector.h **** 
 225:/usr/include/c++/5/bits/stl_vector.h ****     public:
 226:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Tp					 value_type;
 227:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 228:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 229:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 230:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 231:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 232:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 233:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator;
 234:/usr/include/c++/5/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 235:/usr/include/c++/5/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 236:/usr/include/c++/5/bits/stl_vector.h ****       typedef size_t					 size_type;
 237:/usr/include/c++/5/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 238:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 239:/usr/include/c++/5/bits/stl_vector.h **** 
 240:/usr/include/c++/5/bits/stl_vector.h ****     protected:
 241:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_allocate;
 242:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_deallocate;
 243:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_impl;
 244:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 245:/usr/include/c++/5/bits/stl_vector.h **** 
 246:/usr/include/c++/5/bits/stl_vector.h ****     public:
 247:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 248:/usr/include/c++/5/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 249:/usr/include/c++/5/bits/stl_vector.h **** 
 250:/usr/include/c++/5/bits/stl_vector.h ****       /**
 251:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 252:/usr/include/c++/5/bits/stl_vector.h ****        */
 253:/usr/include/c++/5/bits/stl_vector.h ****       vector()
 4803              		.loc 6 253 0
 4804              		.cfi_startproc
 4805 0000 55       		pushq	%rbp
 4806              		.cfi_def_cfa_offset 16
 4807              		.cfi_offset 6, -16
 4808 0001 4889E5   		movq	%rsp, %rbp
 4809              		.cfi_def_cfa_register 6
 4810 0004 4883EC10 		subq	$16, %rsp
 4811 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4812              	.LBB80:
 254:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 255:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 256:/usr/include/c++/5/bits/stl_vector.h **** #endif
 257:/usr/include/c++/5/bits/stl_vector.h ****       : _Base() { }
 4813              		.loc 6 257 0
 4814 000c 488B45F8 		movq	-8(%rbp), %rax
 4815 0010 4889C7   		movq	%rax, %rdi
 4816 0013 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 4816      00
 4817              	.LBE80:
 4818 0018 90       		nop
 4819 0019 C9       		leave
 4820              		.cfi_def_cfa 7, 8
 4821 001a C3       		ret
 4822              		.cfi_endproc
 4823              	.LFE1447:
 4825              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 4826              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 4827              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 4828              		.align 2
 4829              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4831              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 4832              	.LFB1450:
 258:/usr/include/c++/5/bits/stl_vector.h **** 
 259:/usr/include/c++/5/bits/stl_vector.h ****       /**
 260:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 261:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 262:/usr/include/c++/5/bits/stl_vector.h ****        */
 263:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 264:/usr/include/c++/5/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 265:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__a) { }
 266:/usr/include/c++/5/bits/stl_vector.h **** 
 267:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 268:/usr/include/c++/5/bits/stl_vector.h ****       /**
 269:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 270:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 271:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 272:/usr/include/c++/5/bits/stl_vector.h ****        *
 273:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 274:/usr/include/c++/5/bits/stl_vector.h ****        *  constructed elements.
 275:/usr/include/c++/5/bits/stl_vector.h ****        */
 276:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 277:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 278:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 279:/usr/include/c++/5/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 280:/usr/include/c++/5/bits/stl_vector.h **** 
 281:/usr/include/c++/5/bits/stl_vector.h ****       /**
 282:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 283:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 284:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 285:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 286:/usr/include/c++/5/bits/stl_vector.h ****        *
 287:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 288:/usr/include/c++/5/bits/stl_vector.h ****        */
 289:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 290:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 291:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 292:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 293:/usr/include/c++/5/bits/stl_vector.h **** #else
 294:/usr/include/c++/5/bits/stl_vector.h ****       /**
 295:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 296:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 297:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 298:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 299:/usr/include/c++/5/bits/stl_vector.h ****        *
 300:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 301:/usr/include/c++/5/bits/stl_vector.h ****        */
 302:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 303:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 304:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 305:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 306:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 307:/usr/include/c++/5/bits/stl_vector.h **** #endif
 308:/usr/include/c++/5/bits/stl_vector.h **** 
 309:/usr/include/c++/5/bits/stl_vector.h ****       /**
 310:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 311:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 312:/usr/include/c++/5/bits/stl_vector.h ****        *
 313:/usr/include/c++/5/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 314:/usr/include/c++/5/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 315:/usr/include/c++/5/bits/stl_vector.h ****        *  but any extra memory in
 316:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 317:/usr/include/c++/5/bits/stl_vector.h ****        */
 318:/usr/include/c++/5/bits/stl_vector.h ****       vector(const vector& __x)
 319:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(),
 320:/usr/include/c++/5/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 321:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 322:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 323:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 324:/usr/include/c++/5/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 325:/usr/include/c++/5/bits/stl_vector.h ****       }
 326:/usr/include/c++/5/bits/stl_vector.h **** 
 327:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 328:/usr/include/c++/5/bits/stl_vector.h ****       /**
 329:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 330:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 331:/usr/include/c++/5/bits/stl_vector.h ****        *
 332:/usr/include/c++/5/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 333:/usr/include/c++/5/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 334:/usr/include/c++/5/bits/stl_vector.h ****        */
 335:/usr/include/c++/5/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 336:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 337:/usr/include/c++/5/bits/stl_vector.h **** 
 338:/usr/include/c++/5/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 339:/usr/include/c++/5/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 340:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 341:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 342:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 343:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 344:/usr/include/c++/5/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 345:/usr/include/c++/5/bits/stl_vector.h ****       }
 346:/usr/include/c++/5/bits/stl_vector.h **** 
 347:/usr/include/c++/5/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 348:/usr/include/c++/5/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 349:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 350:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 351:/usr/include/c++/5/bits/stl_vector.h ****       {
 352:/usr/include/c++/5/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 353:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 354:/usr/include/c++/5/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 355:/usr/include/c++/5/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 356:/usr/include/c++/5/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 357:/usr/include/c++/5/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 358:/usr/include/c++/5/bits/stl_vector.h **** 	    __rv.clear();
 359:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 360:/usr/include/c++/5/bits/stl_vector.h ****       }
 361:/usr/include/c++/5/bits/stl_vector.h **** 
 362:/usr/include/c++/5/bits/stl_vector.h ****       /**
 363:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 364:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 365:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 366:/usr/include/c++/5/bits/stl_vector.h ****        *
 367:/usr/include/c++/5/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 368:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer_list @a __l.
 369:/usr/include/c++/5/bits/stl_vector.h ****        *
 370:/usr/include/c++/5/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 371:/usr/include/c++/5/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 372:/usr/include/c++/5/bits/stl_vector.h ****        */
 373:/usr/include/c++/5/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 374:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 375:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__a)
 376:/usr/include/c++/5/bits/stl_vector.h ****       {
 377:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 378:/usr/include/c++/5/bits/stl_vector.h **** 			    random_access_iterator_tag());
 379:/usr/include/c++/5/bits/stl_vector.h ****       }
 380:/usr/include/c++/5/bits/stl_vector.h **** #endif
 381:/usr/include/c++/5/bits/stl_vector.h **** 
 382:/usr/include/c++/5/bits/stl_vector.h ****       /**
 383:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 384:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 385:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 386:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 387:/usr/include/c++/5/bits/stl_vector.h ****        *
 388:/usr/include/c++/5/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 389:/usr/include/c++/5/bits/stl_vector.h ****        *  [first,last).
 390:/usr/include/c++/5/bits/stl_vector.h ****        *
 391:/usr/include/c++/5/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 392:/usr/include/c++/5/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 393:/usr/include/c++/5/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 394:/usr/include/c++/5/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 395:/usr/include/c++/5/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 396:/usr/include/c++/5/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 397:/usr/include/c++/5/bits/stl_vector.h ****        */
 398:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 399:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
 400:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 401:/usr/include/c++/5/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 402:/usr/include/c++/5/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 403:/usr/include/c++/5/bits/stl_vector.h **** 	: _Base(__a)
 404:/usr/include/c++/5/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 405:/usr/include/c++/5/bits/stl_vector.h **** #else
 406:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
 407:/usr/include/c++/5/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 408:/usr/include/c++/5/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 409:/usr/include/c++/5/bits/stl_vector.h **** 	: _Base(__a)
 410:/usr/include/c++/5/bits/stl_vector.h ****         {
 411:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 412:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 413:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 414:/usr/include/c++/5/bits/stl_vector.h **** 	}
 415:/usr/include/c++/5/bits/stl_vector.h **** #endif
 416:/usr/include/c++/5/bits/stl_vector.h **** 
 417:/usr/include/c++/5/bits/stl_vector.h ****       /**
 418:/usr/include/c++/5/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 419:/usr/include/c++/5/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 420:/usr/include/c++/5/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 421:/usr/include/c++/5/bits/stl_vector.h ****        *  responsibility.
 422:/usr/include/c++/5/bits/stl_vector.h ****        */
 423:/usr/include/c++/5/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 4833              		.loc 6 423 0
 4834              		.cfi_startproc
 4835              		.cfi_personality 0x3,__gxx_personality_v0
 4836              		.cfi_lsda 0x3,.LLSDA1450
 4837 0000 55       		pushq	%rbp
 4838              		.cfi_def_cfa_offset 16
 4839              		.cfi_offset 6, -16
 4840 0001 4889E5   		movq	%rsp, %rbp
 4841              		.cfi_def_cfa_register 6
 4842 0004 53       		pushq	%rbx
 4843 0005 4883EC18 		subq	$24, %rsp
 4844              		.cfi_offset 3, -24
 4845 0009 48897DE8 		movq	%rdi, -24(%rbp)
 4846              	.LBB81:
 424:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 425:/usr/include/c++/5/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 4847              		.loc 6 425 0
 4848 000d 488B45E8 		movq	-24(%rbp), %rax
 4849 0011 4889C7   		movq	%rax, %rdi
 4850 0014 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 4850      00
 4851 0019 4889C2   		movq	%rax, %rdx
 424:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 4852              		.loc 6 424 0
 4853 001c 488B45E8 		movq	-24(%rbp), %rax
 4854 0020 488B4808 		movq	8(%rax), %rcx
 4855 0024 488B45E8 		movq	-24(%rbp), %rax
 4856 0028 488B00   		movq	(%rax), %rax
 4857 002b 4889CE   		movq	%rcx, %rsi
 4858 002e 4889C7   		movq	%rax, %rdi
 4859              	.LEHB135:
 4860 0031 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 4860      00
 4861              	.LEHE135:
 4862              		.loc 6 425 0
 4863 0036 488B45E8 		movq	-24(%rbp), %rax
 4864 003a 4889C7   		movq	%rax, %rdi
 4865              	.LEHB136:
 4866 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4866      00
 4867              	.LEHE136:
 4868              	.LBE81:
 4869 0042 EB1A     		jmp	.L260
 4870              	.L259:
 4871 0044 4889C3   		movq	%rax, %rbx
 4872              	.LBB82:
 4873 0047 488B45E8 		movq	-24(%rbp), %rax
 4874 004b 4889C7   		movq	%rax, %rdi
 4875 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4875      00
 4876 0053 4889D8   		movq	%rbx, %rax
 4877 0056 4889C7   		movq	%rax, %rdi
 4878              	.LEHB137:
 4879 0059 E8000000 		call	_Unwind_Resume
 4879      00
 4880              	.LEHE137:
 4881              	.L260:
 4882              	.LBE82:
 4883 005e 4883C418 		addq	$24, %rsp
 4884 0062 5B       		popq	%rbx
 4885 0063 5D       		popq	%rbp
 4886              		.cfi_def_cfa 7, 8
 4887 0064 C3       		ret
 4888              		.cfi_endproc
 4889              	.LFE1450:
 4890              		.section	.gcc_except_table
 4891              	.LLSDA1450:
 4892 03a8 FF       		.byte	0xff
 4893 03a9 FF       		.byte	0xff
 4894 03aa 01       		.byte	0x1
 4895 03ab 0C       		.uleb128 .LLSDACSE1450-.LLSDACSB1450
 4896              	.LLSDACSB1450:
 4897 03ac 31       		.uleb128 .LEHB135-.LFB1450
 4898 03ad 05       		.uleb128 .LEHE135-.LEHB135
 4899 03ae 44       		.uleb128 .L259-.LFB1450
 4900 03af 00       		.uleb128 0
 4901 03b0 3D       		.uleb128 .LEHB136-.LFB1450
 4902 03b1 05       		.uleb128 .LEHE136-.LEHB136
 4903 03b2 00       		.uleb128 0
 4904 03b3 00       		.uleb128 0
 4905 03b4 59       		.uleb128 .LEHB137-.LFB1450
 4906 03b5 05       		.uleb128 .LEHE137-.LEHB137
 4907 03b6 00       		.uleb128 0
 4908 03b7 00       		.uleb128 0
 4909              	.LLSDACSE1450:
 4910              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 4912              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 4913              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 4914              		.section	.rodata
 4915              	.LC32:
 4916 0524 556E6861 		.string	"Unhandled system exception"
 4916      6E646C65 
 4916      64207379 
 4916      7374656D 
 4916      20657863 
 4917              	.LC33:
 4918 053f 556E6861 		.string	"Unhandled exception: Crash!"
 4918      6E646C65 
 4918      64206578 
 4918      63657074 
 4918      696F6E3A 
 4919              		.text
 4921              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewD
 4922              	.LFB1461:
 4923              		.file 7 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 4924              		.loc 7 16 0
 4925              		.cfi_startproc
 4926              		.cfi_personality 0x3,__gxx_personality_v0
 4927              		.cfi_lsda 0x3,.LLSDA1461
 4928 22bd 55       		pushq	%rbp
 4929              		.cfi_def_cfa_offset 16
 4930              		.cfi_offset 6, -16
 4931 22be 4889E5   		movq	%rsp, %rbp
 4932              		.cfi_def_cfa_register 6
 4933 22c1 4154     		pushq	%r12
 4934 22c3 53       		pushq	%rbx
 4935 22c4 4881EC50 		subq	$1616, %rsp
 4935      060000
 4936              		.cfi_offset 12, -24
 4937              		.cfi_offset 3, -32
 4938 22cb 4889BDA8 		movq	%rdi, -1624(%rbp)
 4938      F9FFFF
 4939 22d2 4889B5A0 		movq	%rsi, -1632(%rbp)
 4939      F9FFFF
 4940              		.loc 7 16 0
 4941 22d9 64488B04 		movq	%fs:40, %rax
 4941      25280000 
 4941      00
 4942 22e2 488945E8 		movq	%rax, -24(%rbp)
 4943 22e6 31C0     		xorl	%eax, %eax
 4944              	.LEHB138:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 4945              		.loc 7 18 0
 4946 22e8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4946      00
 4947              	.LEHE138:
 4948 22ed 4889C2   		movq	%rax, %rdx
 4949 22f0 488B85A0 		movq	-1632(%rbp), %rax
 4949      F9FFFF
 4950 22f7 488902   		movq	%rax, (%rdx)
 4951              	.LBB83:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 4952              		.loc 7 23 0
 4953 22fa 488D8580 		leaq	-1152(%rbp), %rax
 4953      FBFFFF
 4954 2301 4889C7   		movq	%rax, %rdi
 4955              	.LEHB139:
 4956 2304 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 4956      00
 4957              	.LEHE139:
 4958              		.loc 7 23 0 is_stmt 0 discriminator 1
 4959 2309 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 4959      000000
 4960 2310 BE010000 		movl	$1, %esi
 4960      00
 4961 2315 4889C7   		movq	%rax, %rdi
 4962 2318 E8000000 		call	__sigsetjmp
 4962      00
 4963 231d 85C0     		testl	%eax, %eax
 4964 231f 0F95C0   		setne	%al
 4965 2322 84C0     		testb	%al, %al
 4966 2324 7423     		je	.L281
 4967              		.loc 7 23 0 discriminator 3
 4968 2326 BF080000 		movl	$8, %edi
 4968      00
 4969 232b E8000000 		call	__cxa_allocate_exception
 4969      00
 4970 2330 48C70000 		movq	$.LC32, (%rax)
 4970      000000
 4971 2337 BA000000 		movl	$0, %edx
 4971      00
 4972 233c BE000000 		movl	$_ZTIPKc, %esi
 4972      00
 4973 2341 4889C7   		movq	%rax, %rdi
 4974              	.LEHB140:
 4975 2344 E8000000 		call	__cxa_throw
 4975      00
 4976              	.L281:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 4977              		.loc 7 25 0 is_stmt 1
 4978 2349 488B85A8 		movq	-1624(%rbp), %rax
 4978      F9FFFF
 4979 2350 4889C7   		movq	%rax, %rdi
 4980 2353 E8E2E2FF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 4980      FF
 4981              	.LEHE140:
  23:../ExecuteTest.h **** #endif
 4982              		.loc 7 23 0
 4983 2358 488D8580 		leaq	-1152(%rbp), %rax
 4983      FBFFFF
 4984 235f 4889C7   		movq	%rax, %rdi
 4985              	.LEHB141:
 4986 2362 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 4986      00
 4987              	.LEHE141:
 4988              	.LBE83:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 4989              		.loc 7 42 0
 4990 2367 E9F00100 		jmp	.L261
 4990      00
 4991              	.L276:
 4992 236c 4989C4   		movq	%rax, %r12
 4993 236f 4889D3   		movq	%rdx, %rbx
 4994              	.LBB84:
  23:../ExecuteTest.h **** #endif
 4995              		.loc 7 23 0
 4996 2372 488D8580 		leaq	-1152(%rbp), %rax
 4996      FBFFFF
 4997 2379 4889C7   		movq	%rax, %rdi
 4998 237c E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 4998      00
 4999 2381 4C89E0   		movq	%r12, %rax
 5000 2384 4889DA   		movq	%rbx, %rdx
 5001 2387 EB00     		jmp	.L265
 5002              	.L275:
 5003              	.L265:
 5004 2389 4883FA01 		cmpq	$1, %rdx
 5005 238d 740F     		je	.L267
 5006 238f 4883FA02 		cmpq	$2, %rdx
 5007 2393 0F84A600 		je	.L268
 5007      0000
 5008 2399 E9430100 		jmp	.L282
 5008      00
 5009              	.L267:
 5010              	.LBE84:
 5011              	.LBB85:
  27:../ExecuteTest.h **** 	{
 5012              		.loc 7 27 0
 5013 239e 4889C7   		movq	%rax, %rdi
 5014 23a1 E8000000 		call	__cxa_begin_catch
 5014      00
 5015 23a6 488985B0 		movq	%rax, -1616(%rbp)
 5015      F9FFFF
  30:../ExecuteTest.h **** 	}
 5016              		.loc 7 30 0
 5017 23ad 488B85B0 		movq	-1616(%rbp), %rax
 5017      F9FFFF
 5018 23b4 488B00   		movq	(%rax), %rax
 5019 23b7 4883C010 		addq	$16, %rax
 5020 23bb 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5021              		.loc 7 29 0
 5022 23be 488B95B0 		movq	-1616(%rbp), %rdx
 5022      F9FFFF
 5023 23c5 4889D7   		movq	%rdx, %rdi
 5024 23c8 FFD0     		call	*%rax
 5025 23ca 4889C3   		movq	%rax, %rbx
 5026 23cd 488B85B0 		movq	-1616(%rbp), %rax
 5026      F9FFFF
 5027 23d4 4889C7   		movq	%rax, %rdi
 5028              	.LEHB142:
 5029 23d7 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5029      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5030              		.loc 7 29 0 is_stmt 0 discriminator 1
 5031 23dc 4189C4   		movl	%eax, %r12d
 5032 23df 488B85B0 		movq	-1616(%rbp), %rax
 5032      F9FFFF
 5033 23e6 4889C7   		movq	%rax, %rdi
 5034 23e9 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5034      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5035              		.loc 7 29 0 discriminator 2
 5036 23ee 4889C1   		movq	%rax, %rcx
 5037 23f1 488B85A0 		movq	-1632(%rbp), %rax
 5037      F9FFFF
 5038 23f8 488B10   		movq	(%rax), %rdx
 5039 23fb 488B85A0 		movq	-1632(%rbp), %rax
 5039      F9FFFF
 5040 2402 488B7008 		movq	8(%rax), %rsi
 5041 2406 488D85C0 		leaq	-1600(%rbp), %rax
 5041      F9FFFF
 5042 240d 4589E0   		movl	%r12d, %r8d
 5043 2410 4889C7   		movq	%rax, %rdi
 5044 2413 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5044      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5045              		.loc 7 29 0 discriminator 4
 5046 2418 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5046      00
 5047 241d 488B00   		movq	(%rax), %rax
 5048 2420 488D8DC0 		leaq	-1600(%rbp), %rcx
 5048      F9FFFF
 5049 2427 4889DA   		movq	%rbx, %rdx
 5050 242a 4889CE   		movq	%rcx, %rsi
 5051 242d 4889C7   		movq	%rax, %rdi
 5052 2430 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5052      00
 5053              	.LEHE142:
  27:../ExecuteTest.h **** 	{
 5054              		.loc 7 27 0 is_stmt 1 discriminator 8
 5055 2435 E8000000 		call	__cxa_end_catch
 5055      00
 5056              	.LBE85:
 5057              		.loc 7 42 0 discriminator 8
 5058 243a E91D0100 		jmp	.L261
 5058      00
 5059              	.L268:
 5060              	.LBB86:
  32:../ExecuteTest.h **** 	{
 5061              		.loc 7 32 0
 5062 243f 4889C7   		movq	%rax, %rdi
 5063 2442 E8000000 		call	__cxa_begin_catch
 5063      00
 5064 2447 488985B8 		movq	%rax, -1608(%rbp)
 5064      F9FFFF
 5065              	.LBB87:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5066              		.loc 7 34 0
 5067 244e 488D85E0 		leaq	-1568(%rbp), %rax
 5067      F9FFFF
 5068 2455 4889C7   		movq	%rax, %rdi
 5069              	.LEHB143:
 5070 2458 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5070      00
 5071              	.LEHE143:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5072              		.loc 7 35 0
 5073 245d 488B85B8 		movq	-1608(%rbp), %rax
 5073      F9FFFF
 5074 2464 488B00   		movq	(%rax), %rax
 5075 2467 4883C010 		addq	$16, %rax
 5076 246b 488B00   		movq	(%rax), %rax
 5077 246e 488B95B8 		movq	-1608(%rbp), %rdx
 5077      F9FFFF
 5078 2475 4889D7   		movq	%rdx, %rdi
 5079 2478 FFD0     		call	*%rax
 5080 247a 4889C3   		movq	%rax, %rbx
 5081 247d 488D85E0 		leaq	-1568(%rbp), %rax
 5081      F9FFFF
 5082 2484 BE000000 		movl	$.LC6, %esi
 5082      00
 5083 2489 4889C7   		movq	%rax, %rdi
 5084              	.LEHB144:
 5085 248c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5085      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5086              		.loc 7 35 0 is_stmt 0 discriminator 1
 5087 2491 4889DE   		movq	%rbx, %rsi
 5088 2494 4889C7   		movq	%rax, %rdi
 5089 2497 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5089      00
  36:../ExecuteTest.h **** 	}
 5090              		.loc 7 36 0 is_stmt 1
 5091 249c 488D85E0 		leaq	-1568(%rbp), %rax
 5091      F9FFFF
 5092 24a3 4889C7   		movq	%rax, %rdi
 5093 24a6 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5093      00
 5094 24ab 4889C3   		movq	%rax, %rbx
 5095 24ae E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5095      00
  36:../ExecuteTest.h **** 	}
 5096              		.loc 7 36 0 is_stmt 0 discriminator 1
 5097 24b3 488B00   		movq	(%rax), %rax
 5098 24b6 488B8DA0 		movq	-1632(%rbp), %rcx
 5098      F9FFFF
 5099 24bd 4889DA   		movq	%rbx, %rdx
 5100 24c0 4889CE   		movq	%rcx, %rsi
 5101 24c3 4889C7   		movq	%rax, %rdi
 5102 24c6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5102      00
 5103              	.LEHE144:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5104              		.loc 7 34 0 is_stmt 1
 5105 24cb 488D85E0 		leaq	-1568(%rbp), %rax
 5105      F9FFFF
 5106 24d2 4889C7   		movq	%rax, %rdi
 5107              	.LEHB145:
 5108 24d5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5108      00
 5109              	.LEHE145:
 5110              	.LBE87:
  32:../ExecuteTest.h **** 	{
 5111              		.loc 7 32 0
 5112 24da E8000000 		call	__cxa_end_catch
 5112      00
 5113              	.LBE86:
 5114              		.loc 7 42 0
 5115 24df EB7B     		jmp	.L261
 5116              	.L282:
  38:../ExecuteTest.h **** 	{
 5117              		.loc 7 38 0
 5118 24e1 4889C7   		movq	%rax, %rdi
 5119 24e4 E8000000 		call	__cxa_begin_catch
 5119      00
 5120              	.LEHB146:
  40:../ExecuteTest.h **** 	}
 5121              		.loc 7 40 0
 5122 24e9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5122      00
 5123 24ee 488B00   		movq	(%rax), %rax
 5124 24f1 488B8DA0 		movq	-1632(%rbp), %rcx
 5124      F9FFFF
 5125 24f8 BA000000 		movl	$.LC33, %edx
 5125      00
 5126 24fd 4889CE   		movq	%rcx, %rsi
 5127 2500 4889C7   		movq	%rax, %rdi
 5128 2503 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5128      00
 5129              	.LEHE146:
 5130              	.LEHB147:
  38:../ExecuteTest.h **** 	{
 5131              		.loc 7 38 0
 5132 2508 E8000000 		call	__cxa_end_catch
 5132      00
 5133              		.loc 7 42 0
 5134 250d EB4D     		jmp	.L261
 5135              	.L277:
 5136 250f 4889C3   		movq	%rax, %rbx
 5137              	.LBB89:
  27:../ExecuteTest.h **** 	{
 5138              		.loc 7 27 0
 5139 2512 E8000000 		call	__cxa_end_catch
 5139      00
 5140 2517 4889D8   		movq	%rbx, %rax
 5141 251a 4889C7   		movq	%rax, %rdi
 5142 251d E8000000 		call	_Unwind_Resume
 5142      00
 5143              	.LEHE147:
 5144              	.L279:
 5145 2522 4889C3   		movq	%rax, %rbx
 5146              	.LBE89:
 5147              	.LBB90:
 5148              	.LBB88:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5149              		.loc 7 34 0
 5150 2525 488D85E0 		leaq	-1568(%rbp), %rax
 5150      F9FFFF
 5151 252c 4889C7   		movq	%rax, %rdi
 5152 252f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5152      00
 5153 2534 EB03     		jmp	.L272
 5154              	.L278:
 5155 2536 4889C3   		movq	%rax, %rbx
 5156              	.L272:
 5157              	.LBE88:
  32:../ExecuteTest.h **** 	{
 5158              		.loc 7 32 0
 5159 2539 E8000000 		call	__cxa_end_catch
 5159      00
 5160 253e 4889D8   		movq	%rbx, %rax
 5161 2541 4889C7   		movq	%rax, %rdi
 5162              	.LEHB148:
 5163 2544 E8000000 		call	_Unwind_Resume
 5163      00
 5164              	.LEHE148:
 5165              	.L280:
 5166 2549 4889C3   		movq	%rax, %rbx
 5167              	.LBE90:
  38:../ExecuteTest.h **** 	{
 5168              		.loc 7 38 0
 5169 254c E8000000 		call	__cxa_end_catch
 5169      00
 5170 2551 4889D8   		movq	%rbx, %rax
 5171 2554 4889C7   		movq	%rax, %rdi
 5172              	.LEHB149:
 5173 2557 E8000000 		call	_Unwind_Resume
 5173      00
 5174              	.LEHE149:
 5175              	.L261:
 5176              		.loc 7 42 0
 5177 255c 488B45E8 		movq	-24(%rbp), %rax
 5178 2560 64483304 		xorq	%fs:40, %rax
 5178      25280000 
 5178      00
 5179 2569 7405     		je	.L274
 5180 256b E8000000 		call	__stack_chk_fail
 5180      00
 5181              	.L274:
 5182 2570 4881C450 		addq	$1616, %rsp
 5182      060000
 5183 2577 5B       		popq	%rbx
 5184 2578 415C     		popq	%r12
 5185 257a 5D       		popq	%rbp
 5186              		.cfi_def_cfa 7, 8
 5187 257b C3       		ret
 5188              		.cfi_endproc
 5189              	.LFE1461:
 5190              		.section	.gcc_except_table
 5191              		.align 4
 5192              	.LLSDA1461:
 5193 03b8 FF       		.byte	0xff
 5194 03b9 03       		.byte	0x3
 5195 03ba 59       		.uleb128 .LLSDATT1461-.LLSDATTD1461
 5196              	.LLSDATTD1461:
 5197 03bb 01       		.byte	0x1
 5198 03bc 42       		.uleb128 .LLSDACSE1461-.LLSDACSB1461
 5199              	.LLSDACSB1461:
 5200 03bd 2B       		.uleb128 .LEHB138-.LFB1461
 5201 03be 05       		.uleb128 .LEHE138-.LEHB138
 5202 03bf 00       		.uleb128 0
 5203 03c0 00       		.uleb128 0
 5204 03c1 47       		.uleb128 .LEHB139-.LFB1461
 5205 03c2 05       		.uleb128 .LEHE139-.LEHB139
 5206 03c3 CC01     		.uleb128 .L275-.LFB1461
 5207 03c5 05       		.uleb128 0x5
 5208 03c6 8701     		.uleb128 .LEHB140-.LFB1461
 5209 03c8 14       		.uleb128 .LEHE140-.LEHB140
 5210 03c9 AF01     		.uleb128 .L276-.LFB1461
 5211 03cb 07       		.uleb128 0x7
 5212 03cc A501     		.uleb128 .LEHB141-.LFB1461
 5213 03ce 05       		.uleb128 .LEHE141-.LEHB141
 5214 03cf CC01     		.uleb128 .L275-.LFB1461
 5215 03d1 05       		.uleb128 0x5
 5216 03d2 9A02     		.uleb128 .LEHB142-.LFB1461
 5217 03d4 5E       		.uleb128 .LEHE142-.LEHB142
 5218 03d5 D204     		.uleb128 .L277-.LFB1461
 5219 03d7 00       		.uleb128 0
 5220 03d8 9B03     		.uleb128 .LEHB143-.LFB1461
 5221 03da 05       		.uleb128 .LEHE143-.LEHB143
 5222 03db F904     		.uleb128 .L278-.LFB1461
 5223 03dd 00       		.uleb128 0
 5224 03de CF03     		.uleb128 .LEHB144-.LFB1461
 5225 03e0 3F       		.uleb128 .LEHE144-.LEHB144
 5226 03e1 E504     		.uleb128 .L279-.LFB1461
 5227 03e3 00       		.uleb128 0
 5228 03e4 9804     		.uleb128 .LEHB145-.LFB1461
 5229 03e6 05       		.uleb128 .LEHE145-.LEHB145
 5230 03e7 F904     		.uleb128 .L278-.LFB1461
 5231 03e9 00       		.uleb128 0
 5232 03ea AC04     		.uleb128 .LEHB146-.LFB1461
 5233 03ec 1F       		.uleb128 .LEHE146-.LEHB146
 5234 03ed 8C05     		.uleb128 .L280-.LFB1461
 5235 03ef 00       		.uleb128 0
 5236 03f0 CB04     		.uleb128 .LEHB147-.LFB1461
 5237 03f2 1A       		.uleb128 .LEHE147-.LEHB147
 5238 03f3 00       		.uleb128 0
 5239 03f4 00       		.uleb128 0
 5240 03f5 8705     		.uleb128 .LEHB148-.LFB1461
 5241 03f7 05       		.uleb128 .LEHE148-.LEHB148
 5242 03f8 00       		.uleb128 0
 5243 03f9 00       		.uleb128 0
 5244 03fa 9A05     		.uleb128 .LEHB149-.LFB1461
 5245 03fc 05       		.uleb128 .LEHE149-.LEHB149
 5246 03fd 00       		.uleb128 0
 5247 03fe 00       		.uleb128 0
 5248              	.LLSDACSE1461:
 5249 03ff 03       		.byte	0x3
 5250 0400 00       		.byte	0
 5251 0401 02       		.byte	0x2
 5252 0402 7D       		.byte	0x7d
 5253 0403 01       		.byte	0x1
 5254 0404 7D       		.byte	0x7d
 5255 0405 00       		.byte	0
 5256 0406 7D       		.byte	0x7d
 5257 0407 00       		.align 4
 5258 0408 00000000 		.long	0
 5259              	
 5260 040c 00000000 		.long	_ZTISt9exception
 5261 0410 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5262              	.LLSDATT1461:
 5263              		.text
 5265              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt
 5266              		.align 2
 5267              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 5269              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:
 5270              	.LFB1463:
 426:/usr/include/c++/5/bits/stl_vector.h **** 
 427:/usr/include/c++/5/bits/stl_vector.h ****       /**
 428:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 429:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 430:/usr/include/c++/5/bits/stl_vector.h ****        *
 431:/usr/include/c++/5/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 432:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 433:/usr/include/c++/5/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 434:/usr/include/c++/5/bits/stl_vector.h ****        */
 435:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 436:/usr/include/c++/5/bits/stl_vector.h ****       operator=(const vector& __x);
 437:/usr/include/c++/5/bits/stl_vector.h **** 
 438:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 439:/usr/include/c++/5/bits/stl_vector.h ****       /**
 440:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 441:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 442:/usr/include/c++/5/bits/stl_vector.h ****        *
 443:/usr/include/c++/5/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 444:/usr/include/c++/5/bits/stl_vector.h ****        *  if the allocators permit it).
 445:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 446:/usr/include/c++/5/bits/stl_vector.h ****        */
 447:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 448:/usr/include/c++/5/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 449:/usr/include/c++/5/bits/stl_vector.h ****       {
 450:/usr/include/c++/5/bits/stl_vector.h ****         constexpr bool __move_storage =
 451:/usr/include/c++/5/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 452:/usr/include/c++/5/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 453:/usr/include/c++/5/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
 454:/usr/include/c++/5/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 455:/usr/include/c++/5/bits/stl_vector.h **** 	return *this;
 456:/usr/include/c++/5/bits/stl_vector.h ****       }
 457:/usr/include/c++/5/bits/stl_vector.h **** 
 458:/usr/include/c++/5/bits/stl_vector.h ****       /**
 459:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 460:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 461:/usr/include/c++/5/bits/stl_vector.h ****        *
 462:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 463:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer list @a __l.
 464:/usr/include/c++/5/bits/stl_vector.h ****        *
 465:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 466:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 467:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 468:/usr/include/c++/5/bits/stl_vector.h ****        */
 469:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 470:/usr/include/c++/5/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 471:/usr/include/c++/5/bits/stl_vector.h ****       {
 472:/usr/include/c++/5/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 473:/usr/include/c++/5/bits/stl_vector.h **** 	return *this;
 474:/usr/include/c++/5/bits/stl_vector.h ****       }
 475:/usr/include/c++/5/bits/stl_vector.h **** #endif
 476:/usr/include/c++/5/bits/stl_vector.h **** 
 477:/usr/include/c++/5/bits/stl_vector.h ****       /**
 478:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 479:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 480:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 481:/usr/include/c++/5/bits/stl_vector.h ****        *
 482:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 483:/usr/include/c++/5/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 484:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 485:/usr/include/c++/5/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 486:/usr/include/c++/5/bits/stl_vector.h ****        */
 487:/usr/include/c++/5/bits/stl_vector.h ****       void
 488:/usr/include/c++/5/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 489:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 490:/usr/include/c++/5/bits/stl_vector.h **** 
 491:/usr/include/c++/5/bits/stl_vector.h ****       /**
 492:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 493:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 494:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 495:/usr/include/c++/5/bits/stl_vector.h ****        *
 496:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 497:/usr/include/c++/5/bits/stl_vector.h ****        *  range [__first,__last).
 498:/usr/include/c++/5/bits/stl_vector.h ****        *
 499:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 500:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 501:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 502:/usr/include/c++/5/bits/stl_vector.h ****        */
 503:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 504:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
 505:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 506:/usr/include/c++/5/bits/stl_vector.h ****         void
 507:/usr/include/c++/5/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 508:/usr/include/c++/5/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 509:/usr/include/c++/5/bits/stl_vector.h **** #else
 510:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
 511:/usr/include/c++/5/bits/stl_vector.h ****         void
 512:/usr/include/c++/5/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 513:/usr/include/c++/5/bits/stl_vector.h ****         {
 514:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 515:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 516:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 517:/usr/include/c++/5/bits/stl_vector.h **** 	}
 518:/usr/include/c++/5/bits/stl_vector.h **** #endif
 519:/usr/include/c++/5/bits/stl_vector.h **** 
 520:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 521:/usr/include/c++/5/bits/stl_vector.h ****       /**
 522:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 523:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 524:/usr/include/c++/5/bits/stl_vector.h ****        *
 525:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 526:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer list @a __l.
 527:/usr/include/c++/5/bits/stl_vector.h ****        *
 528:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 529:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 530:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 531:/usr/include/c++/5/bits/stl_vector.h ****        */
 532:/usr/include/c++/5/bits/stl_vector.h ****       void
 533:/usr/include/c++/5/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 534:/usr/include/c++/5/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 535:/usr/include/c++/5/bits/stl_vector.h **** #endif
 536:/usr/include/c++/5/bits/stl_vector.h **** 
 537:/usr/include/c++/5/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 538:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::get_allocator;
 539:/usr/include/c++/5/bits/stl_vector.h **** 
 540:/usr/include/c++/5/bits/stl_vector.h ****       // iterators
 541:/usr/include/c++/5/bits/stl_vector.h ****       /**
 542:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 543:/usr/include/c++/5/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 544:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 545:/usr/include/c++/5/bits/stl_vector.h ****        */
 546:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 547:/usr/include/c++/5/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 548:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 549:/usr/include/c++/5/bits/stl_vector.h **** 
 550:/usr/include/c++/5/bits/stl_vector.h ****       /**
 551:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 552:/usr/include/c++/5/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 553:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 554:/usr/include/c++/5/bits/stl_vector.h ****        */
 555:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 556:/usr/include/c++/5/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 557:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 558:/usr/include/c++/5/bits/stl_vector.h **** 
 559:/usr/include/c++/5/bits/stl_vector.h ****       /**
 560:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 561:/usr/include/c++/5/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 562:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 563:/usr/include/c++/5/bits/stl_vector.h ****        */
 564:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 565:/usr/include/c++/5/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 566:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 567:/usr/include/c++/5/bits/stl_vector.h **** 
 568:/usr/include/c++/5/bits/stl_vector.h ****       /**
 569:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 570:/usr/include/c++/5/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 571:/usr/include/c++/5/bits/stl_vector.h ****        *  ordinary element order.
 572:/usr/include/c++/5/bits/stl_vector.h ****        */
 573:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 574:/usr/include/c++/5/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 575:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 576:/usr/include/c++/5/bits/stl_vector.h **** 
 577:/usr/include/c++/5/bits/stl_vector.h ****       /**
 578:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 579:/usr/include/c++/5/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 580:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 581:/usr/include/c++/5/bits/stl_vector.h ****        */
 582:/usr/include/c++/5/bits/stl_vector.h ****       reverse_iterator
 583:/usr/include/c++/5/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 584:/usr/include/c++/5/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 585:/usr/include/c++/5/bits/stl_vector.h **** 
 586:/usr/include/c++/5/bits/stl_vector.h ****       /**
 587:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 588:/usr/include/c++/5/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 589:/usr/include/c++/5/bits/stl_vector.h ****        *  reverse element order.
 590:/usr/include/c++/5/bits/stl_vector.h ****        */
 591:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 592:/usr/include/c++/5/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 593:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 594:/usr/include/c++/5/bits/stl_vector.h **** 
 595:/usr/include/c++/5/bits/stl_vector.h ****       /**
 596:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 597:/usr/include/c++/5/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 598:/usr/include/c++/5/bits/stl_vector.h ****        *  in reverse element order.
 599:/usr/include/c++/5/bits/stl_vector.h ****        */
 600:/usr/include/c++/5/bits/stl_vector.h ****       reverse_iterator
 601:/usr/include/c++/5/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 602:/usr/include/c++/5/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 603:/usr/include/c++/5/bits/stl_vector.h **** 
 604:/usr/include/c++/5/bits/stl_vector.h ****       /**
 605:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 606:/usr/include/c++/5/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 607:/usr/include/c++/5/bits/stl_vector.h ****        *  is done in reverse element order.
 608:/usr/include/c++/5/bits/stl_vector.h ****        */
 609:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 610:/usr/include/c++/5/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 611:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 612:/usr/include/c++/5/bits/stl_vector.h **** 
 613:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 614:/usr/include/c++/5/bits/stl_vector.h ****       /**
 615:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 616:/usr/include/c++/5/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 617:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 618:/usr/include/c++/5/bits/stl_vector.h ****        */
 619:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 620:/usr/include/c++/5/bits/stl_vector.h ****       cbegin() const noexcept
 621:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 622:/usr/include/c++/5/bits/stl_vector.h **** 
 623:/usr/include/c++/5/bits/stl_vector.h ****       /**
 624:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 625:/usr/include/c++/5/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 626:/usr/include/c++/5/bits/stl_vector.h ****        *  ordinary element order.
 627:/usr/include/c++/5/bits/stl_vector.h ****        */
 628:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 629:/usr/include/c++/5/bits/stl_vector.h ****       cend() const noexcept
 630:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 631:/usr/include/c++/5/bits/stl_vector.h **** 
 632:/usr/include/c++/5/bits/stl_vector.h ****       /**
 633:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 634:/usr/include/c++/5/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 635:/usr/include/c++/5/bits/stl_vector.h ****        *  reverse element order.
 636:/usr/include/c++/5/bits/stl_vector.h ****        */
 637:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 638:/usr/include/c++/5/bits/stl_vector.h ****       crbegin() const noexcept
 639:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 640:/usr/include/c++/5/bits/stl_vector.h **** 
 641:/usr/include/c++/5/bits/stl_vector.h ****       /**
 642:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 643:/usr/include/c++/5/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 644:/usr/include/c++/5/bits/stl_vector.h ****        *  is done in reverse element order.
 645:/usr/include/c++/5/bits/stl_vector.h ****        */
 646:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 647:/usr/include/c++/5/bits/stl_vector.h ****       crend() const noexcept
 648:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 649:/usr/include/c++/5/bits/stl_vector.h **** #endif
 650:/usr/include/c++/5/bits/stl_vector.h **** 
 651:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.2] capacity
 652:/usr/include/c++/5/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 653:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 654:/usr/include/c++/5/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 5271              		.loc 6 654 0
 5272              		.cfi_startproc
 5273 0000 55       		pushq	%rbp
 5274              		.cfi_def_cfa_offset 16
 5275              		.cfi_offset 6, -16
 5276 0001 4889E5   		movq	%rsp, %rbp
 5277              		.cfi_def_cfa_register 6
 5278 0004 48897DF8 		movq	%rdi, -8(%rbp)
 655:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5279              		.loc 6 655 0
 5280 0008 488B45F8 		movq	-8(%rbp), %rax
 5281 000c 488B4008 		movq	8(%rax), %rax
 5282 0010 4889C2   		movq	%rax, %rdx
 5283 0013 488B45F8 		movq	-8(%rbp), %rax
 5284 0017 488B00   		movq	(%rax), %rax
 5285 001a 4829C2   		subq	%rax, %rdx
 5286 001d 4889D0   		movq	%rdx, %rax
 5287 0020 48C1F807 		sarq	$7, %rax
 5288 0024 5D       		popq	%rbp
 5289              		.cfi_def_cfa 7, 8
 5290 0025 C3       		ret
 5291              		.cfi_endproc
 5292              	.LFE1463:
 5294              		.section	.rodata
 5295              	.LC34:
 5296 055b 45787065 		.string	"Expected "
 5296      63746564 
 5296      2000
 5297              	.LC35:
 5298 0565 20627574 		.string	" but was "
 5298      20776173 
 5298      2000
 5299              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5300              		.weak	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5302              	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 5303              	.LFB1464:
 5304              		.file 8 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 5305              		.loc 8 19 0
 5306              		.cfi_startproc
 5307              		.cfi_personality 0x3,__gxx_personality_v0
 5308              		.cfi_lsda 0x3,.LLSDA1464
 5309 0000 55       		pushq	%rbp
 5310              		.cfi_def_cfa_offset 16
 5311              		.cfi_offset 6, -16
 5312 0001 4889E5   		movq	%rsp, %rbp
 5313              		.cfi_def_cfa_register 6
 5314 0004 4154     		pushq	%r12
 5315 0006 53       		pushq	%rbx
 5316 0007 4881ECC0 		subq	$448, %rsp
 5316      010000
 5317              		.cfi_offset 12, -24
 5318              		.cfi_offset 3, -32
 5319 000e 4889BD48 		movq	%rdi, -440(%rbp)
 5319      FEFFFF
 5320 0015 4889B540 		movq	%rsi, -448(%rbp)
 5320      FEFFFF
 5321 001c 48899538 		movq	%rdx, -456(%rbp)
 5321      FEFFFF
 5322 0023 48898D30 		movq	%rcx, -464(%rbp)
 5322      FEFFFF
 5323              		.loc 8 19 0
 5324 002a 64488B04 		movq	%fs:40, %rax
 5324      25280000 
 5324      00
 5325 0033 488945E8 		movq	%rax, -24(%rbp)
 5326 0037 31C0     		xorl	%eax, %eax
 5327              	.LBB91:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 5328              		.loc 8 21 0
 5329 0039 488B8540 		movq	-448(%rbp), %rax
 5329      FEFFFF
 5330 0040 8B10     		movl	(%rax), %edx
 5331 0042 488B8538 		movq	-456(%rbp), %rax
 5331      FEFFFF
 5332 0049 8B00     		movl	(%rax), %eax
 5333 004b 39C2     		cmpl	%eax, %edx
 5334 004d 0F84B100 		je	.L290
 5334      0000
 5335              	.LBB92:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 5336              		.loc 8 23 0
 5337 0053 488D8550 		leaq	-432(%rbp), %rax
 5337      FEFFFF
 5338 005a 4889C7   		movq	%rax, %rdi
 5339              	.LEHB150:
 5340 005d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5340      00
 5341              	.LEHE150:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5342              		.loc 8 24 0
 5343 0062 488B8538 		movq	-456(%rbp), %rax
 5343      FEFFFF
 5344 0069 8B18     		movl	(%rax), %ebx
 5345 006b 488B8540 		movq	-448(%rbp), %rax
 5345      FEFFFF
 5346 0072 448B20   		movl	(%rax), %r12d
 5347 0075 488D8550 		leaq	-432(%rbp), %rax
 5347      FEFFFF
 5348 007c BE000000 		movl	$.LC34, %esi
 5348      00
 5349 0081 4889C7   		movq	%rax, %rdi
 5350              	.LEHB151:
 5351 0084 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5351      00
 5352 0089 4489E6   		movl	%r12d, %esi
 5353 008c 4889C7   		movq	%rax, %rdi
 5354 008f E8000000 		call	_ZNSolsEi
 5354      00
 5355              		.loc 8 24 0 is_stmt 0 discriminator 1
 5356 0094 BE000000 		movl	$.LC35, %esi
 5356      00
 5357 0099 4889C7   		movq	%rax, %rdi
 5358 009c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5358      00
 5359              		.loc 8 24 0 discriminator 2
 5360 00a1 89DE     		movl	%ebx, %esi
 5361 00a3 4889C7   		movq	%rax, %rdi
 5362 00a6 E8000000 		call	_ZNSolsEi
 5362      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 5363              		.loc 8 26 0 is_stmt 1
 5364 00ab 488D8550 		leaq	-432(%rbp), %rax
 5364      FEFFFF
 5365 00b2 4889C7   		movq	%rax, %rdi
 5366 00b5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5366      00
 5367 00ba 4889C2   		movq	%rax, %rdx
 5368 00bd 488B8D30 		movq	-464(%rbp), %rcx
 5368      FEFFFF
 5369 00c4 488B8548 		movq	-440(%rbp), %rax
 5369      FEFFFF
 5370 00cb 4889CE   		movq	%rcx, %rsi
 5371 00ce 4889C7   		movq	%rax, %rdi
 5372 00d1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5372      00
 5373              	.LEHE151:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5374              		.loc 8 23 0
 5375 00d6 488D8550 		leaq	-432(%rbp), %rax
 5375      FEFFFF
 5376 00dd 4889C7   		movq	%rax, %rdi
 5377              	.LEHB152:
 5378 00e0 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5378      00
 5379              	.LEHE152:
 5380              	.LBE92:
 5381              	.LBE91:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 5382              		.loc 8 28 0
 5383 00e5 EB1D     		jmp	.L290
 5384              	.L289:
 5385 00e7 4889C3   		movq	%rax, %rbx
 5386              	.LBB94:
 5387              	.LBB93:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5388              		.loc 8 23 0
 5389 00ea 488D8550 		leaq	-432(%rbp), %rax
 5389      FEFFFF
 5390 00f1 4889C7   		movq	%rax, %rdi
 5391 00f4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5391      00
 5392 00f9 4889D8   		movq	%rbx, %rax
 5393 00fc 4889C7   		movq	%rax, %rdi
 5394              	.LEHB153:
 5395 00ff E8000000 		call	_Unwind_Resume
 5395      00
 5396              	.LEHE153:
 5397              	.L290:
 5398              	.LBE93:
 5399              	.LBE94:
 5400              		.loc 8 28 0
 5401 0104 90       		nop
 5402 0105 488B45E8 		movq	-24(%rbp), %rax
 5403 0109 64483304 		xorq	%fs:40, %rax
 5403      25280000 
 5403      00
 5404 0112 7405     		je	.L288
 5405 0114 E8000000 		call	__stack_chk_fail
 5405      00
 5406              	.L288:
 5407 0119 4881C4C0 		addq	$448, %rsp
 5407      010000
 5408 0120 5B       		popq	%rbx
 5409 0121 415C     		popq	%r12
 5410 0123 5D       		popq	%rbp
 5411              		.cfi_def_cfa 7, 8
 5412 0124 C3       		ret
 5413              		.cfi_endproc
 5414              	.LFE1464:
 5415              		.section	.gcc_except_table
 5416              	.LLSDA1464:
 5417 0414 FF       		.byte	0xff
 5418 0415 FF       		.byte	0xff
 5419 0416 01       		.byte	0x1
 5420 0417 14       		.uleb128 .LLSDACSE1464-.LLSDACSB1464
 5421              	.LLSDACSB1464:
 5422 0418 5D       		.uleb128 .LEHB150-.LFB1464
 5423 0419 05       		.uleb128 .LEHE150-.LEHB150
 5424 041a 00       		.uleb128 0
 5425 041b 00       		.uleb128 0
 5426 041c 8401     		.uleb128 .LEHB151-.LFB1464
 5427 041e 52       		.uleb128 .LEHE151-.LEHB151
 5428 041f E701     		.uleb128 .L289-.LFB1464
 5429 0421 00       		.uleb128 0
 5430 0422 E001     		.uleb128 .LEHB152-.LFB1464
 5431 0424 05       		.uleb128 .LEHE152-.LEHB152
 5432 0425 00       		.uleb128 0
 5433 0426 00       		.uleb128 0
 5434 0427 FF01     		.uleb128 .LEHB153-.LFB1464
 5435 0429 05       		.uleb128 .LEHE153-.LEHB153
 5436 042a 00       		.uleb128 0
 5437 042b 00       		.uleb128 0
 5438              	.LLSDACSE1464:
 5439              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5441              		.text
 5443              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTest
 5444              	.LFB1465:
  16:../ExecuteTest.h **** {
 5445              		.loc 7 16 0
 5446              		.cfi_startproc
 5447              		.cfi_personality 0x3,__gxx_personality_v0
 5448              		.cfi_lsda 0x3,.LLSDA1465
 5449 257c 55       		pushq	%rbp
 5450              		.cfi_def_cfa_offset 16
 5451              		.cfi_offset 6, -16
 5452 257d 4889E5   		movq	%rsp, %rbp
 5453              		.cfi_def_cfa_register 6
 5454 2580 4154     		pushq	%r12
 5455 2582 53       		pushq	%rbx
 5456 2583 4881EC50 		subq	$1616, %rsp
 5456      060000
 5457              		.cfi_offset 12, -24
 5458              		.cfi_offset 3, -32
 5459 258a 4889BDA8 		movq	%rdi, -1624(%rbp)
 5459      F9FFFF
 5460 2591 4889B5A0 		movq	%rsi, -1632(%rbp)
 5460      F9FFFF
  16:../ExecuteTest.h **** {
 5461              		.loc 7 16 0
 5462 2598 64488B04 		movq	%fs:40, %rax
 5462      25280000 
 5462      00
 5463 25a1 488945E8 		movq	%rax, -24(%rbp)
 5464 25a5 31C0     		xorl	%eax, %eax
 5465              	.LEHB154:
  18:../ExecuteTest.h **** 
 5466              		.loc 7 18 0
 5467 25a7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5467      00
 5468              	.LEHE154:
 5469 25ac 4889C2   		movq	%rax, %rdx
 5470 25af 488B85A0 		movq	-1632(%rbp), %rax
 5470      F9FFFF
 5471 25b6 488902   		movq	%rax, (%rdx)
 5472              	.LBB95:
  23:../ExecuteTest.h **** #endif
 5473              		.loc 7 23 0
 5474 25b9 488D8580 		leaq	-1152(%rbp), %rax
 5474      FBFFFF
 5475 25c0 4889C7   		movq	%rax, %rdi
 5476              	.LEHB155:
 5477 25c3 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5477      00
 5478              	.LEHE155:
  23:../ExecuteTest.h **** #endif
 5479              		.loc 7 23 0 is_stmt 0 discriminator 1
 5480 25c8 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5480      000000
 5481 25cf BE010000 		movl	$1, %esi
 5481      00
 5482 25d4 4889C7   		movq	%rax, %rdi
 5483 25d7 E8000000 		call	__sigsetjmp
 5483      00
 5484 25dc 85C0     		testl	%eax, %eax
 5485 25de 0F95C0   		setne	%al
 5486 25e1 84C0     		testb	%al, %al
 5487 25e3 7423     		je	.L311
  23:../ExecuteTest.h **** #endif
 5488              		.loc 7 23 0 discriminator 3
 5489 25e5 BF080000 		movl	$8, %edi
 5489      00
 5490 25ea E8000000 		call	__cxa_allocate_exception
 5490      00
 5491 25ef 48C70000 		movq	$.LC32, (%rax)
 5491      000000
 5492 25f6 BA000000 		movl	$0, %edx
 5492      00
 5493 25fb BE000000 		movl	$_ZTIPKc, %esi
 5493      00
 5494 2600 4889C7   		movq	%rax, %rdi
 5495              	.LEHB156:
 5496 2603 E8000000 		call	__cxa_throw
 5496      00
 5497              	.L311:
  25:../ExecuteTest.h **** 	}
 5498              		.loc 7 25 0 is_stmt 1
 5499 2608 488B85A8 		movq	-1624(%rbp), %rax
 5499      F9FFFF
 5500 260f 4889C7   		movq	%rax, %rdi
 5501 2612 E8B9E4FF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 5501      FF
 5502              	.LEHE156:
  23:../ExecuteTest.h **** #endif
 5503              		.loc 7 23 0
 5504 2617 488D8580 		leaq	-1152(%rbp), %rax
 5504      FBFFFF
 5505 261e 4889C7   		movq	%rax, %rdi
 5506              	.LEHB157:
 5507 2621 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5507      00
 5508              	.LEHE157:
 5509              	.LBE95:
 5510              		.loc 7 42 0
 5511 2626 E9F00100 		jmp	.L291
 5511      00
 5512              	.L306:
 5513 262b 4989C4   		movq	%rax, %r12
 5514 262e 4889D3   		movq	%rdx, %rbx
 5515              	.LBB96:
  23:../ExecuteTest.h **** #endif
 5516              		.loc 7 23 0
 5517 2631 488D8580 		leaq	-1152(%rbp), %rax
 5517      FBFFFF
 5518 2638 4889C7   		movq	%rax, %rdi
 5519 263b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5519      00
 5520 2640 4C89E0   		movq	%r12, %rax
 5521 2643 4889DA   		movq	%rbx, %rdx
 5522 2646 EB00     		jmp	.L295
 5523              	.L305:
 5524              	.L295:
 5525 2648 4883FA01 		cmpq	$1, %rdx
 5526 264c 740F     		je	.L297
 5527 264e 4883FA02 		cmpq	$2, %rdx
 5528 2652 0F84A600 		je	.L298
 5528      0000
 5529 2658 E9430100 		jmp	.L312
 5529      00
 5530              	.L297:
 5531              	.LBE96:
 5532              	.LBB97:
  27:../ExecuteTest.h **** 	{
 5533              		.loc 7 27 0
 5534 265d 4889C7   		movq	%rax, %rdi
 5535 2660 E8000000 		call	__cxa_begin_catch
 5535      00
 5536 2665 488985B0 		movq	%rax, -1616(%rbp)
 5536      F9FFFF
  30:../ExecuteTest.h **** 	}
 5537              		.loc 7 30 0
 5538 266c 488B85B0 		movq	-1616(%rbp), %rax
 5538      F9FFFF
 5539 2673 488B00   		movq	(%rax), %rax
 5540 2676 4883C010 		addq	$16, %rax
 5541 267a 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5542              		.loc 7 29 0
 5543 267d 488B95B0 		movq	-1616(%rbp), %rdx
 5543      F9FFFF
 5544 2684 4889D7   		movq	%rdx, %rdi
 5545 2687 FFD0     		call	*%rax
 5546 2689 4889C3   		movq	%rax, %rbx
 5547 268c 488B85B0 		movq	-1616(%rbp), %rax
 5547      F9FFFF
 5548 2693 4889C7   		movq	%rax, %rdi
 5549              	.LEHB158:
 5550 2696 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5550      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5551              		.loc 7 29 0 is_stmt 0 discriminator 1
 5552 269b 4189C4   		movl	%eax, %r12d
 5553 269e 488B85B0 		movq	-1616(%rbp), %rax
 5553      F9FFFF
 5554 26a5 4889C7   		movq	%rax, %rdi
 5555 26a8 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5555      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5556              		.loc 7 29 0 discriminator 2
 5557 26ad 4889C1   		movq	%rax, %rcx
 5558 26b0 488B85A0 		movq	-1632(%rbp), %rax
 5558      F9FFFF
 5559 26b7 488B10   		movq	(%rax), %rdx
 5560 26ba 488B85A0 		movq	-1632(%rbp), %rax
 5560      F9FFFF
 5561 26c1 488B7008 		movq	8(%rax), %rsi
 5562 26c5 488D85C0 		leaq	-1600(%rbp), %rax
 5562      F9FFFF
 5563 26cc 4589E0   		movl	%r12d, %r8d
 5564 26cf 4889C7   		movq	%rax, %rdi
 5565 26d2 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5565      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5566              		.loc 7 29 0 discriminator 4
 5567 26d7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5567      00
 5568 26dc 488B00   		movq	(%rax), %rax
 5569 26df 488D8DC0 		leaq	-1600(%rbp), %rcx
 5569      F9FFFF
 5570 26e6 4889DA   		movq	%rbx, %rdx
 5571 26e9 4889CE   		movq	%rcx, %rsi
 5572 26ec 4889C7   		movq	%rax, %rdi
 5573 26ef E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5573      00
 5574              	.LEHE158:
  27:../ExecuteTest.h **** 	{
 5575              		.loc 7 27 0 is_stmt 1 discriminator 8
 5576 26f4 E8000000 		call	__cxa_end_catch
 5576      00
 5577              	.LBE97:
 5578              		.loc 7 42 0 discriminator 8
 5579 26f9 E91D0100 		jmp	.L291
 5579      00
 5580              	.L298:
 5581              	.LBB98:
  32:../ExecuteTest.h **** 	{
 5582              		.loc 7 32 0
 5583 26fe 4889C7   		movq	%rax, %rdi
 5584 2701 E8000000 		call	__cxa_begin_catch
 5584      00
 5585 2706 488985B8 		movq	%rax, -1608(%rbp)
 5585      F9FFFF
 5586              	.LBB99:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5587              		.loc 7 34 0
 5588 270d 488D85E0 		leaq	-1568(%rbp), %rax
 5588      F9FFFF
 5589 2714 4889C7   		movq	%rax, %rdi
 5590              	.LEHB159:
 5591 2717 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5591      00
 5592              	.LEHE159:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5593              		.loc 7 35 0
 5594 271c 488B85B8 		movq	-1608(%rbp), %rax
 5594      F9FFFF
 5595 2723 488B00   		movq	(%rax), %rax
 5596 2726 4883C010 		addq	$16, %rax
 5597 272a 488B00   		movq	(%rax), %rax
 5598 272d 488B95B8 		movq	-1608(%rbp), %rdx
 5598      F9FFFF
 5599 2734 4889D7   		movq	%rdx, %rdi
 5600 2737 FFD0     		call	*%rax
 5601 2739 4889C3   		movq	%rax, %rbx
 5602 273c 488D85E0 		leaq	-1568(%rbp), %rax
 5602      F9FFFF
 5603 2743 BE000000 		movl	$.LC6, %esi
 5603      00
 5604 2748 4889C7   		movq	%rax, %rdi
 5605              	.LEHB160:
 5606 274b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5606      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5607              		.loc 7 35 0 is_stmt 0 discriminator 1
 5608 2750 4889DE   		movq	%rbx, %rsi
 5609 2753 4889C7   		movq	%rax, %rdi
 5610 2756 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5610      00
  36:../ExecuteTest.h **** 	}
 5611              		.loc 7 36 0 is_stmt 1
 5612 275b 488D85E0 		leaq	-1568(%rbp), %rax
 5612      F9FFFF
 5613 2762 4889C7   		movq	%rax, %rdi
 5614 2765 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5614      00
 5615 276a 4889C3   		movq	%rax, %rbx
 5616 276d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5616      00
  36:../ExecuteTest.h **** 	}
 5617              		.loc 7 36 0 is_stmt 0 discriminator 1
 5618 2772 488B00   		movq	(%rax), %rax
 5619 2775 488B8DA0 		movq	-1632(%rbp), %rcx
 5619      F9FFFF
 5620 277c 4889DA   		movq	%rbx, %rdx
 5621 277f 4889CE   		movq	%rcx, %rsi
 5622 2782 4889C7   		movq	%rax, %rdi
 5623 2785 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5623      00
 5624              	.LEHE160:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5625              		.loc 7 34 0 is_stmt 1
 5626 278a 488D85E0 		leaq	-1568(%rbp), %rax
 5626      F9FFFF
 5627 2791 4889C7   		movq	%rax, %rdi
 5628              	.LEHB161:
 5629 2794 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5629      00
 5630              	.LEHE161:
 5631              	.LBE99:
  32:../ExecuteTest.h **** 	{
 5632              		.loc 7 32 0
 5633 2799 E8000000 		call	__cxa_end_catch
 5633      00
 5634              	.LBE98:
 5635              		.loc 7 42 0
 5636 279e EB7B     		jmp	.L291
 5637              	.L312:
  38:../ExecuteTest.h **** 	{
 5638              		.loc 7 38 0
 5639 27a0 4889C7   		movq	%rax, %rdi
 5640 27a3 E8000000 		call	__cxa_begin_catch
 5640      00
 5641              	.LEHB162:
  40:../ExecuteTest.h **** 	}
 5642              		.loc 7 40 0
 5643 27a8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5643      00
 5644 27ad 488B00   		movq	(%rax), %rax
 5645 27b0 488B8DA0 		movq	-1632(%rbp), %rcx
 5645      F9FFFF
 5646 27b7 BA000000 		movl	$.LC33, %edx
 5646      00
 5647 27bc 4889CE   		movq	%rcx, %rsi
 5648 27bf 4889C7   		movq	%rax, %rdi
 5649 27c2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5649      00
 5650              	.LEHE162:
 5651              	.LEHB163:
  38:../ExecuteTest.h **** 	{
 5652              		.loc 7 38 0
 5653 27c7 E8000000 		call	__cxa_end_catch
 5653      00
 5654              		.loc 7 42 0
 5655 27cc EB4D     		jmp	.L291
 5656              	.L307:
 5657 27ce 4889C3   		movq	%rax, %rbx
 5658              	.LBB101:
  27:../ExecuteTest.h **** 	{
 5659              		.loc 7 27 0
 5660 27d1 E8000000 		call	__cxa_end_catch
 5660      00
 5661 27d6 4889D8   		movq	%rbx, %rax
 5662 27d9 4889C7   		movq	%rax, %rdi
 5663 27dc E8000000 		call	_Unwind_Resume
 5663      00
 5664              	.LEHE163:
 5665              	.L309:
 5666 27e1 4889C3   		movq	%rax, %rbx
 5667              	.LBE101:
 5668              	.LBB102:
 5669              	.LBB100:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5670              		.loc 7 34 0
 5671 27e4 488D85E0 		leaq	-1568(%rbp), %rax
 5671      F9FFFF
 5672 27eb 4889C7   		movq	%rax, %rdi
 5673 27ee E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5673      00
 5674 27f3 EB03     		jmp	.L302
 5675              	.L308:
 5676 27f5 4889C3   		movq	%rax, %rbx
 5677              	.L302:
 5678              	.LBE100:
  32:../ExecuteTest.h **** 	{
 5679              		.loc 7 32 0
 5680 27f8 E8000000 		call	__cxa_end_catch
 5680      00
 5681 27fd 4889D8   		movq	%rbx, %rax
 5682 2800 4889C7   		movq	%rax, %rdi
 5683              	.LEHB164:
 5684 2803 E8000000 		call	_Unwind_Resume
 5684      00
 5685              	.LEHE164:
 5686              	.L310:
 5687 2808 4889C3   		movq	%rax, %rbx
 5688              	.LBE102:
  38:../ExecuteTest.h **** 	{
 5689              		.loc 7 38 0
 5690 280b E8000000 		call	__cxa_end_catch
 5690      00
 5691 2810 4889D8   		movq	%rbx, %rax
 5692 2813 4889C7   		movq	%rax, %rdi
 5693              	.LEHB165:
 5694 2816 E8000000 		call	_Unwind_Resume
 5694      00
 5695              	.LEHE165:
 5696              	.L291:
 5697              		.loc 7 42 0
 5698 281b 488B45E8 		movq	-24(%rbp), %rax
 5699 281f 64483304 		xorq	%fs:40, %rax
 5699      25280000 
 5699      00
 5700 2828 7405     		je	.L304
 5701 282a E8000000 		call	__stack_chk_fail
 5701      00
 5702              	.L304:
 5703 282f 4881C450 		addq	$1616, %rsp
 5703      060000
 5704 2836 5B       		popq	%rbx
 5705 2837 415C     		popq	%r12
 5706 2839 5D       		popq	%rbp
 5707              		.cfi_def_cfa 7, 8
 5708 283a C3       		ret
 5709              		.cfi_endproc
 5710              	.LFE1465:
 5711              		.section	.gcc_except_table
 5712              		.align 4
 5713              	.LLSDA1465:
 5714 042c FF       		.byte	0xff
 5715 042d 03       		.byte	0x3
 5716 042e 59       		.uleb128 .LLSDATT1465-.LLSDATTD1465
 5717              	.LLSDATTD1465:
 5718 042f 01       		.byte	0x1
 5719 0430 42       		.uleb128 .LLSDACSE1465-.LLSDACSB1465
 5720              	.LLSDACSB1465:
 5721 0431 2B       		.uleb128 .LEHB154-.LFB1465
 5722 0432 05       		.uleb128 .LEHE154-.LEHB154
 5723 0433 00       		.uleb128 0
 5724 0434 00       		.uleb128 0
 5725 0435 47       		.uleb128 .LEHB155-.LFB1465
 5726 0436 05       		.uleb128 .LEHE155-.LEHB155
 5727 0437 CC01     		.uleb128 .L305-.LFB1465
 5728 0439 05       		.uleb128 0x5
 5729 043a 8701     		.uleb128 .LEHB156-.LFB1465
 5730 043c 14       		.uleb128 .LEHE156-.LEHB156
 5731 043d AF01     		.uleb128 .L306-.LFB1465
 5732 043f 07       		.uleb128 0x7
 5733 0440 A501     		.uleb128 .LEHB157-.LFB1465
 5734 0442 05       		.uleb128 .LEHE157-.LEHB157
 5735 0443 CC01     		.uleb128 .L305-.LFB1465
 5736 0445 05       		.uleb128 0x5
 5737 0446 9A02     		.uleb128 .LEHB158-.LFB1465
 5738 0448 5E       		.uleb128 .LEHE158-.LEHB158
 5739 0449 D204     		.uleb128 .L307-.LFB1465
 5740 044b 00       		.uleb128 0
 5741 044c 9B03     		.uleb128 .LEHB159-.LFB1465
 5742 044e 05       		.uleb128 .LEHE159-.LEHB159
 5743 044f F904     		.uleb128 .L308-.LFB1465
 5744 0451 00       		.uleb128 0
 5745 0452 CF03     		.uleb128 .LEHB160-.LFB1465
 5746 0454 3F       		.uleb128 .LEHE160-.LEHB160
 5747 0455 E504     		.uleb128 .L309-.LFB1465
 5748 0457 00       		.uleb128 0
 5749 0458 9804     		.uleb128 .LEHB161-.LFB1465
 5750 045a 05       		.uleb128 .LEHE161-.LEHB161
 5751 045b F904     		.uleb128 .L308-.LFB1465
 5752 045d 00       		.uleb128 0
 5753 045e AC04     		.uleb128 .LEHB162-.LFB1465
 5754 0460 1F       		.uleb128 .LEHE162-.LEHB162
 5755 0461 8C05     		.uleb128 .L310-.LFB1465
 5756 0463 00       		.uleb128 0
 5757 0464 CB04     		.uleb128 .LEHB163-.LFB1465
 5758 0466 1A       		.uleb128 .LEHE163-.LEHB163
 5759 0467 00       		.uleb128 0
 5760 0468 00       		.uleb128 0
 5761 0469 8705     		.uleb128 .LEHB164-.LFB1465
 5762 046b 05       		.uleb128 .LEHE164-.LEHB164
 5763 046c 00       		.uleb128 0
 5764 046d 00       		.uleb128 0
 5765 046e 9A05     		.uleb128 .LEHB165-.LFB1465
 5766 0470 05       		.uleb128 .LEHE165-.LEHB165
 5767 0471 00       		.uleb128 0
 5768 0472 00       		.uleb128 0
 5769              	.LLSDACSE1465:
 5770 0473 03       		.byte	0x3
 5771 0474 00       		.byte	0
 5772 0475 02       		.byte	0x2
 5773 0476 7D       		.byte	0x7d
 5774 0477 01       		.byte	0x1
 5775 0478 7D       		.byte	0x7d
 5776 0479 00       		.byte	0
 5777 047a 7D       		.byte	0x7d
 5778 047b 00       		.align 4
 5779 047c 00000000 		.long	0
 5780              	
 5781 0480 00000000 		.long	_ZTISt9exception
 5782 0484 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5783              	.LLSDATT1465:
 5784              		.text
 5786              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm,"axG",@progbits,_ZNSt6vec
 5787              		.align 2
 5788              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 5790              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:
 5791              	.LFB1466:
 656:/usr/include/c++/5/bits/stl_vector.h **** 
 657:/usr/include/c++/5/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 658:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 659:/usr/include/c++/5/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 660:/usr/include/c++/5/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 661:/usr/include/c++/5/bits/stl_vector.h **** 
 662:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 663:/usr/include/c++/5/bits/stl_vector.h ****       /**
 664:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 665:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 666:/usr/include/c++/5/bits/stl_vector.h ****        *
 667:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 668:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 669:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 670:/usr/include/c++/5/bits/stl_vector.h ****        *  default constructed elements are appended.
 671:/usr/include/c++/5/bits/stl_vector.h ****        */
 672:/usr/include/c++/5/bits/stl_vector.h ****       void
 673:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size)
 674:/usr/include/c++/5/bits/stl_vector.h ****       {
 675:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 676:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 677:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 678:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 679:/usr/include/c++/5/bits/stl_vector.h ****       }
 680:/usr/include/c++/5/bits/stl_vector.h **** 
 681:/usr/include/c++/5/bits/stl_vector.h ****       /**
 682:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 683:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 684:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 685:/usr/include/c++/5/bits/stl_vector.h ****        *
 686:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 687:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 688:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 689:/usr/include/c++/5/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 690:/usr/include/c++/5/bits/stl_vector.h ****        *  given data.
 691:/usr/include/c++/5/bits/stl_vector.h ****        */
 692:/usr/include/c++/5/bits/stl_vector.h ****       void
 693:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 694:/usr/include/c++/5/bits/stl_vector.h ****       {
 695:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 696:/usr/include/c++/5/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 697:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 698:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 699:/usr/include/c++/5/bits/stl_vector.h ****       }
 700:/usr/include/c++/5/bits/stl_vector.h **** #else
 701:/usr/include/c++/5/bits/stl_vector.h ****       /**
 702:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 703:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 704:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 705:/usr/include/c++/5/bits/stl_vector.h ****        *
 706:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 707:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 708:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 709:/usr/include/c++/5/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 710:/usr/include/c++/5/bits/stl_vector.h ****        *  given data.
 711:/usr/include/c++/5/bits/stl_vector.h ****        */
 712:/usr/include/c++/5/bits/stl_vector.h ****       void
 713:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 714:/usr/include/c++/5/bits/stl_vector.h ****       {
 715:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 716:/usr/include/c++/5/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 717:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 718:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 719:/usr/include/c++/5/bits/stl_vector.h ****       }
 720:/usr/include/c++/5/bits/stl_vector.h **** #endif
 721:/usr/include/c++/5/bits/stl_vector.h **** 
 722:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 723:/usr/include/c++/5/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 724:/usr/include/c++/5/bits/stl_vector.h ****       void
 725:/usr/include/c++/5/bits/stl_vector.h ****       shrink_to_fit()
 726:/usr/include/c++/5/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 727:/usr/include/c++/5/bits/stl_vector.h **** #endif
 728:/usr/include/c++/5/bits/stl_vector.h **** 
 729:/usr/include/c++/5/bits/stl_vector.h ****       /**
 730:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 731:/usr/include/c++/5/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 732:/usr/include/c++/5/bits/stl_vector.h ****        */
 733:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 734:/usr/include/c++/5/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 735:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 736:/usr/include/c++/5/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 737:/usr/include/c++/5/bits/stl_vector.h **** 
 738:/usr/include/c++/5/bits/stl_vector.h ****       /**
 739:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 740:/usr/include/c++/5/bits/stl_vector.h ****        *  equal end().)
 741:/usr/include/c++/5/bits/stl_vector.h ****        */
 742:/usr/include/c++/5/bits/stl_vector.h ****       bool
 743:/usr/include/c++/5/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 744:/usr/include/c++/5/bits/stl_vector.h ****       { return begin() == end(); }
 745:/usr/include/c++/5/bits/stl_vector.h **** 
 746:/usr/include/c++/5/bits/stl_vector.h ****       /**
 747:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 748:/usr/include/c++/5/bits/stl_vector.h ****        *          elements.
 749:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 750:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 751:/usr/include/c++/5/bits/stl_vector.h ****        *
 752:/usr/include/c++/5/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 753:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 754:/usr/include/c++/5/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 755:/usr/include/c++/5/bits/stl_vector.h ****        *  thrown.
 756:/usr/include/c++/5/bits/stl_vector.h ****        *
 757:/usr/include/c++/5/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 758:/usr/include/c++/5/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 759:/usr/include/c++/5/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 760:/usr/include/c++/5/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 761:/usr/include/c++/5/bits/stl_vector.h ****        *  and copying of %vector data.
 762:/usr/include/c++/5/bits/stl_vector.h ****        */
 763:/usr/include/c++/5/bits/stl_vector.h ****       void
 764:/usr/include/c++/5/bits/stl_vector.h ****       reserve(size_type __n);
 765:/usr/include/c++/5/bits/stl_vector.h **** 
 766:/usr/include/c++/5/bits/stl_vector.h ****       // element access
 767:/usr/include/c++/5/bits/stl_vector.h ****       /**
 768:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 769:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 770:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 771:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 772:/usr/include/c++/5/bits/stl_vector.h ****        *
 773:/usr/include/c++/5/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 774:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 775:/usr/include/c++/5/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 776:/usr/include/c++/5/bits/stl_vector.h ****        *  see at().)
 777:/usr/include/c++/5/bits/stl_vector.h ****        */
 778:/usr/include/c++/5/bits/stl_vector.h ****       reference
 779:/usr/include/c++/5/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 780:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 781:/usr/include/c++/5/bits/stl_vector.h **** 
 782:/usr/include/c++/5/bits/stl_vector.h ****       /**
 783:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 784:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 785:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 786:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 787:/usr/include/c++/5/bits/stl_vector.h ****        *
 788:/usr/include/c++/5/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 789:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 790:/usr/include/c++/5/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 791:/usr/include/c++/5/bits/stl_vector.h ****        *  see at().)
 792:/usr/include/c++/5/bits/stl_vector.h ****        */
 793:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 794:/usr/include/c++/5/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 795:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 796:/usr/include/c++/5/bits/stl_vector.h **** 
 797:/usr/include/c++/5/bits/stl_vector.h ****     protected:
 798:/usr/include/c++/5/bits/stl_vector.h ****       /// Safety check used only from at().
 799:/usr/include/c++/5/bits/stl_vector.h ****       void
 800:/usr/include/c++/5/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 801:/usr/include/c++/5/bits/stl_vector.h ****       {
 802:/usr/include/c++/5/bits/stl_vector.h **** 	if (__n >= this->size())
 803:/usr/include/c++/5/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 804:/usr/include/c++/5/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 805:/usr/include/c++/5/bits/stl_vector.h **** 				       "(which is %zu)"),
 806:/usr/include/c++/5/bits/stl_vector.h **** 				   __n, this->size());
 807:/usr/include/c++/5/bits/stl_vector.h ****       }
 808:/usr/include/c++/5/bits/stl_vector.h **** 
 809:/usr/include/c++/5/bits/stl_vector.h ****     public:
 810:/usr/include/c++/5/bits/stl_vector.h ****       /**
 811:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 812:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 813:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 814:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 815:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 816:/usr/include/c++/5/bits/stl_vector.h ****        *
 817:/usr/include/c++/5/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 818:/usr/include/c++/5/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 819:/usr/include/c++/5/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 820:/usr/include/c++/5/bits/stl_vector.h ****        */
 821:/usr/include/c++/5/bits/stl_vector.h ****       reference
 822:/usr/include/c++/5/bits/stl_vector.h ****       at(size_type __n)
 5792              		.loc 6 822 0
 5793              		.cfi_startproc
 5794 0000 55       		pushq	%rbp
 5795              		.cfi_def_cfa_offset 16
 5796              		.cfi_offset 6, -16
 5797 0001 4889E5   		movq	%rsp, %rbp
 5798              		.cfi_def_cfa_register 6
 5799 0004 4883EC10 		subq	$16, %rsp
 5800 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5801 000c 488975F0 		movq	%rsi, -16(%rbp)
 823:/usr/include/c++/5/bits/stl_vector.h ****       {
 824:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_check(__n);
 5802              		.loc 6 824 0
 5803 0010 488B55F0 		movq	-16(%rbp), %rdx
 5804 0014 488B45F8 		movq	-8(%rbp), %rax
 5805 0018 4889D6   		movq	%rdx, %rsi
 5806 001b 4889C7   		movq	%rax, %rdi
 5807 001e E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 5807      00
 825:/usr/include/c++/5/bits/stl_vector.h **** 	return (*this)[__n]; 
 5808              		.loc 6 825 0
 5809 0023 488B55F0 		movq	-16(%rbp), %rdx
 5810 0027 488B45F8 		movq	-8(%rbp), %rax
 5811 002b 4889D6   		movq	%rdx, %rsi
 5812 002e 4889C7   		movq	%rax, %rdi
 5813 0031 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 5813      00
 826:/usr/include/c++/5/bits/stl_vector.h ****       }
 5814              		.loc 6 826 0
 5815 0036 C9       		leave
 5816              		.cfi_def_cfa 7, 8
 5817 0037 C3       		ret
 5818              		.cfi_endproc
 5819              	.LFE1466:
 5821              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 5822              		.weak	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Tes
 5824              	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResult
 5825              	.LFB1467:
  19:../Checks.h   **** {
 5826              		.loc 8 19 0
 5827              		.cfi_startproc
 5828              		.cfi_personality 0x3,__gxx_personality_v0
 5829              		.cfi_lsda 0x3,.LLSDA1467
 5830 0000 55       		pushq	%rbp
 5831              		.cfi_def_cfa_offset 16
 5832              		.cfi_offset 6, -16
 5833 0001 4889E5   		movq	%rsp, %rbp
 5834              		.cfi_def_cfa_register 6
 5835 0004 53       		pushq	%rbx
 5836 0005 4881ECC8 		subq	$456, %rsp
 5836      010000
 5837              		.cfi_offset 3, -24
 5838 000c 4889BD48 		movq	%rdi, -440(%rbp)
 5838      FEFFFF
 5839 0013 4889B540 		movq	%rsi, -448(%rbp)
 5839      FEFFFF
 5840 001a 48899538 		movq	%rdx, -456(%rbp)
 5840      FEFFFF
 5841 0021 48898D30 		movq	%rcx, -464(%rbp)
 5841      FEFFFF
  19:../Checks.h   **** {
 5842              		.loc 8 19 0
 5843 0028 64488B04 		movq	%fs:40, %rax
 5843      25280000 
 5843      00
 5844 0031 488945E8 		movq	%rax, -24(%rbp)
 5845 0035 31C0     		xorl	%eax, %eax
 5846              	.LBB103:
  21:../Checks.h   ****     {
 5847              		.loc 8 21 0
 5848 0037 488B8540 		movq	-448(%rbp), %rax
 5848      FEFFFF
 5849 003e 488B00   		movq	(%rax), %rax
 5850 0041 488B9538 		movq	-456(%rbp), %rdx
 5850      FEFFFF
 5851 0048 4889D6   		movq	%rdx, %rsi
 5852 004b 4889C7   		movq	%rax, %rdi
 5853              	.LEHB166:
 5854 004e E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 5854      00
 5855 0053 83F001   		xorl	$1, %eax
 5856 0056 84C0     		testb	%al, %al
 5857 0058 0F84B300 		je	.L320
 5857      0000
 5858              	.LBB104:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5859              		.loc 8 23 0
 5860 005e 488D8550 		leaq	-432(%rbp), %rax
 5860      FEFFFF
 5861 0065 4889C7   		movq	%rax, %rdi
 5862 0068 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5862      00
 5863              	.LEHE166:
  24:../Checks.h   **** 
 5864              		.loc 8 24 0
 5865 006d 488B8540 		movq	-448(%rbp), %rax
 5865      FEFFFF
 5866 0074 488B18   		movq	(%rax), %rbx
 5867 0077 488D8550 		leaq	-432(%rbp), %rax
 5867      FEFFFF
 5868 007e BE000000 		movl	$.LC34, %esi
 5868      00
 5869 0083 4889C7   		movq	%rax, %rdi
 5870              	.LEHB167:
 5871 0086 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5871      00
 5872 008b 4889DE   		movq	%rbx, %rsi
 5873 008e 4889C7   		movq	%rax, %rdi
 5874 0091 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5874      00
  24:../Checks.h   **** 
 5875              		.loc 8 24 0 is_stmt 0 discriminator 1
 5876 0096 BE000000 		movl	$.LC35, %esi
 5876      00
 5877 009b 4889C7   		movq	%rax, %rdi
 5878 009e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5878      00
  24:../Checks.h   **** 
 5879              		.loc 8 24 0 discriminator 2
 5880 00a3 4889C2   		movq	%rax, %rdx
 5881 00a6 488B8538 		movq	-456(%rbp), %rax
 5881      FEFFFF
 5882 00ad 4889C6   		movq	%rax, %rsi
 5883 00b0 4889D7   		movq	%rdx, %rdi
 5884 00b3 E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5
 5884      00
  26:../Checks.h   ****     }
 5885              		.loc 8 26 0 is_stmt 1
 5886 00b8 488D8550 		leaq	-432(%rbp), %rax
 5886      FEFFFF
 5887 00bf 4889C7   		movq	%rax, %rdi
 5888 00c2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5888      00
 5889 00c7 4889C2   		movq	%rax, %rdx
 5890 00ca 488B8D30 		movq	-464(%rbp), %rcx
 5890      FEFFFF
 5891 00d1 488B8548 		movq	-440(%rbp), %rax
 5891      FEFFFF
 5892 00d8 4889CE   		movq	%rcx, %rsi
 5893 00db 4889C7   		movq	%rax, %rdi
 5894 00de E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5894      00
 5895              	.LEHE167:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5896              		.loc 8 23 0
 5897 00e3 488D8550 		leaq	-432(%rbp), %rax
 5897      FEFFFF
 5898 00ea 4889C7   		movq	%rax, %rdi
 5899              	.LEHB168:
 5900 00ed E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5900      00
 5901              	.LEHE168:
 5902              	.LBE104:
 5903              	.LBE103:
 5904              		.loc 8 28 0
 5905 00f2 EB1D     		jmp	.L320
 5906              	.L319:
 5907 00f4 4889C3   		movq	%rax, %rbx
 5908              	.LBB106:
 5909              	.LBB105:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5910              		.loc 8 23 0
 5911 00f7 488D8550 		leaq	-432(%rbp), %rax
 5911      FEFFFF
 5912 00fe 4889C7   		movq	%rax, %rdi
 5913 0101 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5913      00
 5914 0106 4889D8   		movq	%rbx, %rax
 5915 0109 4889C7   		movq	%rax, %rdi
 5916              	.LEHB169:
 5917 010c E8000000 		call	_Unwind_Resume
 5917      00
 5918              	.LEHE169:
 5919              	.L320:
 5920              	.LBE105:
 5921              	.LBE106:
 5922              		.loc 8 28 0
 5923 0111 90       		nop
 5924 0112 488B45E8 		movq	-24(%rbp), %rax
 5925 0116 64483304 		xorq	%fs:40, %rax
 5925      25280000 
 5925      00
 5926 011f 7405     		je	.L318
 5927 0121 E8000000 		call	__stack_chk_fail
 5927      00
 5928              	.L318:
 5929 0126 4881C4C8 		addq	$456, %rsp
 5929      010000
 5930 012d 5B       		popq	%rbx
 5931 012e 5D       		popq	%rbp
 5932              		.cfi_def_cfa 7, 8
 5933 012f C3       		ret
 5934              		.cfi_endproc
 5935              	.LFE1467:
 5936              		.section	.gcc_except_table
 5937              	.LLSDA1467:
 5938 0488 FF       		.byte	0xff
 5939 0489 FF       		.byte	0xff
 5940 048a 01       		.byte	0x1
 5941 048b 14       		.uleb128 .LLSDACSE1467-.LLSDACSB1467
 5942              	.LLSDACSB1467:
 5943 048c 4E       		.uleb128 .LEHB166-.LFB1467
 5944 048d 1F       		.uleb128 .LEHE166-.LEHB166
 5945 048e 00       		.uleb128 0
 5946 048f 00       		.uleb128 0
 5947 0490 8601     		.uleb128 .LEHB167-.LFB1467
 5948 0492 5D       		.uleb128 .LEHE167-.LEHB167
 5949 0493 F401     		.uleb128 .L319-.LFB1467
 5950 0495 00       		.uleb128 0
 5951 0496 ED01     		.uleb128 .LEHB168-.LFB1467
 5952 0498 05       		.uleb128 .LEHE168-.LEHB168
 5953 0499 00       		.uleb128 0
 5954 049a 00       		.uleb128 0
 5955 049b 8C02     		.uleb128 .LEHB169-.LFB1467
 5956 049d 05       		.uleb128 .LEHE169-.LEHB169
 5957 049e 00       		.uleb128 0
 5958 049f 00       		.uleb128 0
 5959              	.LLSDACSE1467:
 5960              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 5962              		.text
 5964              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTi
 5965              	.LFB1468:
  16:../ExecuteTest.h **** {
 5966              		.loc 7 16 0
 5967              		.cfi_startproc
 5968              		.cfi_personality 0x3,__gxx_personality_v0
 5969              		.cfi_lsda 0x3,.LLSDA1468
 5970 283b 55       		pushq	%rbp
 5971              		.cfi_def_cfa_offset 16
 5972              		.cfi_offset 6, -16
 5973 283c 4889E5   		movq	%rsp, %rbp
 5974              		.cfi_def_cfa_register 6
 5975 283f 4154     		pushq	%r12
 5976 2841 53       		pushq	%rbx
 5977 2842 4881EC50 		subq	$1616, %rsp
 5977      060000
 5978              		.cfi_offset 12, -24
 5979              		.cfi_offset 3, -32
 5980 2849 4889BDA8 		movq	%rdi, -1624(%rbp)
 5980      F9FFFF
 5981 2850 4889B5A0 		movq	%rsi, -1632(%rbp)
 5981      F9FFFF
  16:../ExecuteTest.h **** {
 5982              		.loc 7 16 0
 5983 2857 64488B04 		movq	%fs:40, %rax
 5983      25280000 
 5983      00
 5984 2860 488945E8 		movq	%rax, -24(%rbp)
 5985 2864 31C0     		xorl	%eax, %eax
 5986              	.LEHB170:
  18:../ExecuteTest.h **** 
 5987              		.loc 7 18 0
 5988 2866 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5988      00
 5989              	.LEHE170:
 5990 286b 4889C2   		movq	%rax, %rdx
 5991 286e 488B85A0 		movq	-1632(%rbp), %rax
 5991      F9FFFF
 5992 2875 488902   		movq	%rax, (%rdx)
 5993              	.LBB107:
  23:../ExecuteTest.h **** #endif
 5994              		.loc 7 23 0
 5995 2878 488D8580 		leaq	-1152(%rbp), %rax
 5995      FBFFFF
 5996 287f 4889C7   		movq	%rax, %rdi
 5997              	.LEHB171:
 5998 2882 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5998      00
 5999              	.LEHE171:
  23:../ExecuteTest.h **** #endif
 6000              		.loc 7 23 0 is_stmt 0 discriminator 1
 6001 2887 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6001      000000
 6002 288e BE010000 		movl	$1, %esi
 6002      00
 6003 2893 4889C7   		movq	%rax, %rdi
 6004 2896 E8000000 		call	__sigsetjmp
 6004      00
 6005 289b 85C0     		testl	%eax, %eax
 6006 289d 0F95C0   		setne	%al
 6007 28a0 84C0     		testb	%al, %al
 6008 28a2 7423     		je	.L341
  23:../ExecuteTest.h **** #endif
 6009              		.loc 7 23 0 discriminator 3
 6010 28a4 BF080000 		movl	$8, %edi
 6010      00
 6011 28a9 E8000000 		call	__cxa_allocate_exception
 6011      00
 6012 28ae 48C70000 		movq	$.LC32, (%rax)
 6012      000000
 6013 28b5 BA000000 		movl	$0, %edx
 6013      00
 6014 28ba BE000000 		movl	$_ZTIPKc, %esi
 6014      00
 6015 28bf 4889C7   		movq	%rax, %rdi
 6016              	.LEHB172:
 6017 28c2 E8000000 		call	__cxa_throw
 6017      00
 6018              	.L341:
  25:../ExecuteTest.h **** 	}
 6019              		.loc 7 25 0 is_stmt 1
 6020 28c7 488B85A8 		movq	-1624(%rbp), %rax
 6020      F9FFFF
 6021 28ce 4889C7   		movq	%rax, %rdi
 6022 28d1 E85CE7FF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7Ru
 6022      FF
 6023              	.LEHE172:
  23:../ExecuteTest.h **** #endif
 6024              		.loc 7 23 0
 6025 28d6 488D8580 		leaq	-1152(%rbp), %rax
 6025      FBFFFF
 6026 28dd 4889C7   		movq	%rax, %rdi
 6027              	.LEHB173:
 6028 28e0 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6028      00
 6029              	.LEHE173:
 6030              	.LBE107:
 6031              		.loc 7 42 0
 6032 28e5 E9F00100 		jmp	.L321
 6032      00
 6033              	.L336:
 6034 28ea 4989C4   		movq	%rax, %r12
 6035 28ed 4889D3   		movq	%rdx, %rbx
 6036              	.LBB108:
  23:../ExecuteTest.h **** #endif
 6037              		.loc 7 23 0
 6038 28f0 488D8580 		leaq	-1152(%rbp), %rax
 6038      FBFFFF
 6039 28f7 4889C7   		movq	%rax, %rdi
 6040 28fa E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6040      00
 6041 28ff 4C89E0   		movq	%r12, %rax
 6042 2902 4889DA   		movq	%rbx, %rdx
 6043 2905 EB00     		jmp	.L325
 6044              	.L335:
 6045              	.L325:
 6046 2907 4883FA01 		cmpq	$1, %rdx
 6047 290b 740F     		je	.L327
 6048 290d 4883FA02 		cmpq	$2, %rdx
 6049 2911 0F84A600 		je	.L328
 6049      0000
 6050 2917 E9430100 		jmp	.L342
 6050      00
 6051              	.L327:
 6052              	.LBE108:
 6053              	.LBB109:
  27:../ExecuteTest.h **** 	{
 6054              		.loc 7 27 0
 6055 291c 4889C7   		movq	%rax, %rdi
 6056 291f E8000000 		call	__cxa_begin_catch
 6056      00
 6057 2924 488985B0 		movq	%rax, -1616(%rbp)
 6057      F9FFFF
  30:../ExecuteTest.h **** 	}
 6058              		.loc 7 30 0
 6059 292b 488B85B0 		movq	-1616(%rbp), %rax
 6059      F9FFFF
 6060 2932 488B00   		movq	(%rax), %rax
 6061 2935 4883C010 		addq	$16, %rax
 6062 2939 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6063              		.loc 7 29 0
 6064 293c 488B95B0 		movq	-1616(%rbp), %rdx
 6064      F9FFFF
 6065 2943 4889D7   		movq	%rdx, %rdi
 6066 2946 FFD0     		call	*%rax
 6067 2948 4889C3   		movq	%rax, %rbx
 6068 294b 488B85B0 		movq	-1616(%rbp), %rax
 6068      F9FFFF
 6069 2952 4889C7   		movq	%rax, %rdi
 6070              	.LEHB174:
 6071 2955 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6071      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6072              		.loc 7 29 0 is_stmt 0 discriminator 1
 6073 295a 4189C4   		movl	%eax, %r12d
 6074 295d 488B85B0 		movq	-1616(%rbp), %rax
 6074      F9FFFF
 6075 2964 4889C7   		movq	%rax, %rdi
 6076 2967 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6076      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6077              		.loc 7 29 0 discriminator 2
 6078 296c 4889C1   		movq	%rax, %rcx
 6079 296f 488B85A0 		movq	-1632(%rbp), %rax
 6079      F9FFFF
 6080 2976 488B10   		movq	(%rax), %rdx
 6081 2979 488B85A0 		movq	-1632(%rbp), %rax
 6081      F9FFFF
 6082 2980 488B7008 		movq	8(%rax), %rsi
 6083 2984 488D85C0 		leaq	-1600(%rbp), %rax
 6083      F9FFFF
 6084 298b 4589E0   		movl	%r12d, %r8d
 6085 298e 4889C7   		movq	%rax, %rdi
 6086 2991 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6086      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6087              		.loc 7 29 0 discriminator 4
 6088 2996 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6088      00
 6089 299b 488B00   		movq	(%rax), %rax
 6090 299e 488D8DC0 		leaq	-1600(%rbp), %rcx
 6090      F9FFFF
 6091 29a5 4889DA   		movq	%rbx, %rdx
 6092 29a8 4889CE   		movq	%rcx, %rsi
 6093 29ab 4889C7   		movq	%rax, %rdi
 6094 29ae E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6094      00
 6095              	.LEHE174:
  27:../ExecuteTest.h **** 	{
 6096              		.loc 7 27 0 is_stmt 1 discriminator 8
 6097 29b3 E8000000 		call	__cxa_end_catch
 6097      00
 6098              	.LBE109:
 6099              		.loc 7 42 0 discriminator 8
 6100 29b8 E91D0100 		jmp	.L321
 6100      00
 6101              	.L328:
 6102              	.LBB110:
  32:../ExecuteTest.h **** 	{
 6103              		.loc 7 32 0
 6104 29bd 4889C7   		movq	%rax, %rdi
 6105 29c0 E8000000 		call	__cxa_begin_catch
 6105      00
 6106 29c5 488985B8 		movq	%rax, -1608(%rbp)
 6106      F9FFFF
 6107              	.LBB111:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6108              		.loc 7 34 0
 6109 29cc 488D85E0 		leaq	-1568(%rbp), %rax
 6109      F9FFFF
 6110 29d3 4889C7   		movq	%rax, %rdi
 6111              	.LEHB175:
 6112 29d6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6112      00
 6113              	.LEHE175:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6114              		.loc 7 35 0
 6115 29db 488B85B8 		movq	-1608(%rbp), %rax
 6115      F9FFFF
 6116 29e2 488B00   		movq	(%rax), %rax
 6117 29e5 4883C010 		addq	$16, %rax
 6118 29e9 488B00   		movq	(%rax), %rax
 6119 29ec 488B95B8 		movq	-1608(%rbp), %rdx
 6119      F9FFFF
 6120 29f3 4889D7   		movq	%rdx, %rdi
 6121 29f6 FFD0     		call	*%rax
 6122 29f8 4889C3   		movq	%rax, %rbx
 6123 29fb 488D85E0 		leaq	-1568(%rbp), %rax
 6123      F9FFFF
 6124 2a02 BE000000 		movl	$.LC6, %esi
 6124      00
 6125 2a07 4889C7   		movq	%rax, %rdi
 6126              	.LEHB176:
 6127 2a0a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6127      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6128              		.loc 7 35 0 is_stmt 0 discriminator 1
 6129 2a0f 4889DE   		movq	%rbx, %rsi
 6130 2a12 4889C7   		movq	%rax, %rdi
 6131 2a15 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6131      00
  36:../ExecuteTest.h **** 	}
 6132              		.loc 7 36 0 is_stmt 1
 6133 2a1a 488D85E0 		leaq	-1568(%rbp), %rax
 6133      F9FFFF
 6134 2a21 4889C7   		movq	%rax, %rdi
 6135 2a24 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6135      00
 6136 2a29 4889C3   		movq	%rax, %rbx
 6137 2a2c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6137      00
  36:../ExecuteTest.h **** 	}
 6138              		.loc 7 36 0 is_stmt 0 discriminator 1
 6139 2a31 488B00   		movq	(%rax), %rax
 6140 2a34 488B8DA0 		movq	-1632(%rbp), %rcx
 6140      F9FFFF
 6141 2a3b 4889DA   		movq	%rbx, %rdx
 6142 2a3e 4889CE   		movq	%rcx, %rsi
 6143 2a41 4889C7   		movq	%rax, %rdi
 6144 2a44 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6144      00
 6145              	.LEHE176:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6146              		.loc 7 34 0 is_stmt 1
 6147 2a49 488D85E0 		leaq	-1568(%rbp), %rax
 6147      F9FFFF
 6148 2a50 4889C7   		movq	%rax, %rdi
 6149              	.LEHB177:
 6150 2a53 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6150      00
 6151              	.LEHE177:
 6152              	.LBE111:
  32:../ExecuteTest.h **** 	{
 6153              		.loc 7 32 0
 6154 2a58 E8000000 		call	__cxa_end_catch
 6154      00
 6155              	.LBE110:
 6156              		.loc 7 42 0
 6157 2a5d EB7B     		jmp	.L321
 6158              	.L342:
  38:../ExecuteTest.h **** 	{
 6159              		.loc 7 38 0
 6160 2a5f 4889C7   		movq	%rax, %rdi
 6161 2a62 E8000000 		call	__cxa_begin_catch
 6161      00
 6162              	.LEHB178:
  40:../ExecuteTest.h **** 	}
 6163              		.loc 7 40 0
 6164 2a67 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6164      00
 6165 2a6c 488B00   		movq	(%rax), %rax
 6166 2a6f 488B8DA0 		movq	-1632(%rbp), %rcx
 6166      F9FFFF
 6167 2a76 BA000000 		movl	$.LC33, %edx
 6167      00
 6168 2a7b 4889CE   		movq	%rcx, %rsi
 6169 2a7e 4889C7   		movq	%rax, %rdi
 6170 2a81 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6170      00
 6171              	.LEHE178:
 6172              	.LEHB179:
  38:../ExecuteTest.h **** 	{
 6173              		.loc 7 38 0
 6174 2a86 E8000000 		call	__cxa_end_catch
 6174      00
 6175              		.loc 7 42 0
 6176 2a8b EB4D     		jmp	.L321
 6177              	.L337:
 6178 2a8d 4889C3   		movq	%rax, %rbx
 6179              	.LBB113:
  27:../ExecuteTest.h **** 	{
 6180              		.loc 7 27 0
 6181 2a90 E8000000 		call	__cxa_end_catch
 6181      00
 6182 2a95 4889D8   		movq	%rbx, %rax
 6183 2a98 4889C7   		movq	%rax, %rdi
 6184 2a9b E8000000 		call	_Unwind_Resume
 6184      00
 6185              	.LEHE179:
 6186              	.L339:
 6187 2aa0 4889C3   		movq	%rax, %rbx
 6188              	.LBE113:
 6189              	.LBB114:
 6190              	.LBB112:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6191              		.loc 7 34 0
 6192 2aa3 488D85E0 		leaq	-1568(%rbp), %rax
 6192      F9FFFF
 6193 2aaa 4889C7   		movq	%rax, %rdi
 6194 2aad E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6194      00
 6195 2ab2 EB03     		jmp	.L332
 6196              	.L338:
 6197 2ab4 4889C3   		movq	%rax, %rbx
 6198              	.L332:
 6199              	.LBE112:
  32:../ExecuteTest.h **** 	{
 6200              		.loc 7 32 0
 6201 2ab7 E8000000 		call	__cxa_end_catch
 6201      00
 6202 2abc 4889D8   		movq	%rbx, %rax
 6203 2abf 4889C7   		movq	%rax, %rdi
 6204              	.LEHB180:
 6205 2ac2 E8000000 		call	_Unwind_Resume
 6205      00
 6206              	.LEHE180:
 6207              	.L340:
 6208 2ac7 4889C3   		movq	%rax, %rbx
 6209              	.LBE114:
  38:../ExecuteTest.h **** 	{
 6210              		.loc 7 38 0
 6211 2aca E8000000 		call	__cxa_end_catch
 6211      00
 6212 2acf 4889D8   		movq	%rbx, %rax
 6213 2ad2 4889C7   		movq	%rax, %rdi
 6214              	.LEHB181:
 6215 2ad5 E8000000 		call	_Unwind_Resume
 6215      00
 6216              	.LEHE181:
 6217              	.L321:
 6218              		.loc 7 42 0
 6219 2ada 488B45E8 		movq	-24(%rbp), %rax
 6220 2ade 64483304 		xorq	%fs:40, %rax
 6220      25280000 
 6220      00
 6221 2ae7 7405     		je	.L334
 6222 2ae9 E8000000 		call	__stack_chk_fail
 6222      00
 6223              	.L334:
 6224 2aee 4881C450 		addq	$1616, %rsp
 6224      060000
 6225 2af5 5B       		popq	%rbx
 6226 2af6 415C     		popq	%r12
 6227 2af8 5D       		popq	%rbp
 6228              		.cfi_def_cfa 7, 8
 6229 2af9 C3       		ret
 6230              		.cfi_endproc
 6231              	.LFE1468:
 6232              		.section	.gcc_except_table
 6233              		.align 4
 6234              	.LLSDA1468:
 6235 04a0 FF       		.byte	0xff
 6236 04a1 03       		.byte	0x3
 6237 04a2 59       		.uleb128 .LLSDATT1468-.LLSDATTD1468
 6238              	.LLSDATTD1468:
 6239 04a3 01       		.byte	0x1
 6240 04a4 42       		.uleb128 .LLSDACSE1468-.LLSDACSB1468
 6241              	.LLSDACSB1468:
 6242 04a5 2B       		.uleb128 .LEHB170-.LFB1468
 6243 04a6 05       		.uleb128 .LEHE170-.LEHB170
 6244 04a7 00       		.uleb128 0
 6245 04a8 00       		.uleb128 0
 6246 04a9 47       		.uleb128 .LEHB171-.LFB1468
 6247 04aa 05       		.uleb128 .LEHE171-.LEHB171
 6248 04ab CC01     		.uleb128 .L335-.LFB1468
 6249 04ad 05       		.uleb128 0x5
 6250 04ae 8701     		.uleb128 .LEHB172-.LFB1468
 6251 04b0 14       		.uleb128 .LEHE172-.LEHB172
 6252 04b1 AF01     		.uleb128 .L336-.LFB1468
 6253 04b3 07       		.uleb128 0x7
 6254 04b4 A501     		.uleb128 .LEHB173-.LFB1468
 6255 04b6 05       		.uleb128 .LEHE173-.LEHB173
 6256 04b7 CC01     		.uleb128 .L335-.LFB1468
 6257 04b9 05       		.uleb128 0x5
 6258 04ba 9A02     		.uleb128 .LEHB174-.LFB1468
 6259 04bc 5E       		.uleb128 .LEHE174-.LEHB174
 6260 04bd D204     		.uleb128 .L337-.LFB1468
 6261 04bf 00       		.uleb128 0
 6262 04c0 9B03     		.uleb128 .LEHB175-.LFB1468
 6263 04c2 05       		.uleb128 .LEHE175-.LEHB175
 6264 04c3 F904     		.uleb128 .L338-.LFB1468
 6265 04c5 00       		.uleb128 0
 6266 04c6 CF03     		.uleb128 .LEHB176-.LFB1468
 6267 04c8 3F       		.uleb128 .LEHE176-.LEHB176
 6268 04c9 E504     		.uleb128 .L339-.LFB1468
 6269 04cb 00       		.uleb128 0
 6270 04cc 9804     		.uleb128 .LEHB177-.LFB1468
 6271 04ce 05       		.uleb128 .LEHE177-.LEHB177
 6272 04cf F904     		.uleb128 .L338-.LFB1468
 6273 04d1 00       		.uleb128 0
 6274 04d2 AC04     		.uleb128 .LEHB178-.LFB1468
 6275 04d4 1F       		.uleb128 .LEHE178-.LEHB178
 6276 04d5 8C05     		.uleb128 .L340-.LFB1468
 6277 04d7 00       		.uleb128 0
 6278 04d8 CB04     		.uleb128 .LEHB179-.LFB1468
 6279 04da 1A       		.uleb128 .LEHE179-.LEHB179
 6280 04db 00       		.uleb128 0
 6281 04dc 00       		.uleb128 0
 6282 04dd 8705     		.uleb128 .LEHB180-.LFB1468
 6283 04df 05       		.uleb128 .LEHE180-.LEHB180
 6284 04e0 00       		.uleb128 0
 6285 04e1 00       		.uleb128 0
 6286 04e2 9A05     		.uleb128 .LEHB181-.LFB1468
 6287 04e4 05       		.uleb128 .LEHE181-.LEHB181
 6288 04e5 00       		.uleb128 0
 6289 04e6 00       		.uleb128 0
 6290              	.LLSDACSE1468:
 6291 04e7 03       		.byte	0x3
 6292 04e8 00       		.byte	0
 6293 04e9 02       		.byte	0x2
 6294 04ea 7D       		.byte	0x7d
 6295 04eb 01       		.byte	0x1
 6296 04ec 7D       		.byte	0x7d
 6297 04ed 00       		.byte	0
 6298 04ee 7D       		.byte	0x7d
 6299 04ef 00       		.align 4
 6300 04f0 00000000 		.long	0
 6301              	
 6302 04f4 00000000 		.long	_ZTISt9exception
 6303 04f8 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6304              	.LLSDATT1468:
 6305              		.text
 6307              		.section	.rodata
 6308              	.LC36:
 6309 056f 202B2F2D 		.string	" +/- "
 6309      2000
 6310              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6311              		.weak	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 6313              	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:
 6314              	.LFB1469:
  29:../Checks.h   **** 
  30:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:../Checks.h   **** 
  32:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:../Checks.h   **** 
  34:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:../Checks.h   **** 
  36:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:../Checks.h   **** 
  38:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  39:../Checks.h   **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:../Checks.h   **** {
  41:../Checks.h   ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:../Checks.h   **** }
  43:../Checks.h   **** 
  44:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  45:../Checks.h   **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
 6315              		.loc 8 45 0
 6316              		.cfi_startproc
 6317              		.cfi_personality 0x3,__gxx_personality_v0
 6318              		.cfi_lsda 0x3,.LLSDA1469
 6319 0000 55       		pushq	%rbp
 6320              		.cfi_def_cfa_offset 16
 6321              		.cfi_offset 6, -16
 6322 0001 4889E5   		movq	%rsp, %rbp
 6323              		.cfi_def_cfa_register 6
 6324 0004 4155     		pushq	%r13
 6325 0006 4154     		pushq	%r12
 6326 0008 53       		pushq	%rbx
 6327 0009 4881ECD8 		subq	$472, %rsp
 6327      010000
 6328              		.cfi_offset 13, -24
 6329              		.cfi_offset 12, -32
 6330              		.cfi_offset 3, -40
 6331 0010 4889BD38 		movq	%rdi, -456(%rbp)
 6331      FEFFFF
 6332 0017 4889B530 		movq	%rsi, -464(%rbp)
 6332      FEFFFF
 6333 001e 48899528 		movq	%rdx, -472(%rbp)
 6333      FEFFFF
 6334 0025 48898D20 		movq	%rcx, -480(%rbp)
 6334      FEFFFF
 6335 002c 4C898518 		movq	%r8, -488(%rbp)
 6335      FEFFFF
 6336              		.loc 8 45 0
 6337 0033 64488B04 		movq	%fs:40, %rax
 6337      25280000 
 6337      00
 6338 003c 488945D8 		movq	%rax, -40(%rbp)
 6339 0040 31C0     		xorl	%eax, %eax
 6340              	.LBB115:
  46:../Checks.h   ****                 TestDetails const& details)
  47:../Checks.h   **** {
  48:../Checks.h   ****     if (!AreClose(expected, actual, tolerance))
 6341              		.loc 8 48 0
 6342 0042 488B9520 		movq	-480(%rbp), %rdx
 6342      FEFFFF
 6343 0049 488B8D28 		movq	-472(%rbp), %rcx
 6343      FEFFFF
 6344 0050 488B8530 		movq	-464(%rbp), %rax
 6344      FEFFFF
 6345 0057 4889CE   		movq	%rcx, %rsi
 6346 005a 4889C7   		movq	%rax, %rdi
 6347 005d E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6347      00
 6348 0062 83F001   		xorl	$1, %eax
 6349 0065 84C0     		testb	%al, %al
 6350 0067 0F84F700 		je	.L348
 6350      0000
 6351              	.LBB116:
  49:../Checks.h   ****     { 
  50:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 6352              		.loc 8 50 0
 6353 006d 488D8540 		leaq	-448(%rbp), %rax
 6353      FEFFFF
 6354 0074 4889C7   		movq	%rax, %rdi
 6355              	.LEHB182:
 6356 0077 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6356      00
 6357              	.LEHE182:
  51:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6358              		.loc 8 51 0
 6359 007c 488B8528 		movq	-472(%rbp), %rax
 6359      FEFFFF
 6360 0083 8B18     		movl	(%rax), %ebx
 6361 0085 488B8520 		movq	-480(%rbp), %rax
 6361      FEFFFF
 6362 008c 448B20   		movl	(%rax), %r12d
 6363 008f 488B8530 		movq	-464(%rbp), %rax
 6363      FEFFFF
 6364 0096 448B28   		movl	(%rax), %r13d
 6365 0099 488D8540 		leaq	-448(%rbp), %rax
 6365      FEFFFF
 6366 00a0 BE000000 		movl	$.LC34, %esi
 6366      00
 6367 00a5 4889C7   		movq	%rax, %rdi
 6368              	.LEHB183:
 6369 00a8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6369      00
 6370 00ad 4489AD14 		movl	%r13d, -492(%rbp)
 6370      FEFFFF
 6371 00b4 F30F1085 		movss	-492(%rbp), %xmm0
 6371      14FEFFFF 
 6372 00bc 4889C7   		movq	%rax, %rdi
 6373 00bf E8000000 		call	_ZNSolsEf
 6373      00
 6374              		.loc 8 51 0 is_stmt 0 discriminator 1
 6375 00c4 BE000000 		movl	$.LC36, %esi
 6375      00
 6376 00c9 4889C7   		movq	%rax, %rdi
 6377 00cc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6377      00
 6378              		.loc 8 51 0 discriminator 2
 6379 00d1 4489A514 		movl	%r12d, -492(%rbp)
 6379      FEFFFF
 6380 00d8 F30F1085 		movss	-492(%rbp), %xmm0
 6380      14FEFFFF 
 6381 00e0 4889C7   		movq	%rax, %rdi
 6382 00e3 E8000000 		call	_ZNSolsEf
 6382      00
 6383              		.loc 8 51 0 discriminator 3
 6384 00e8 BE000000 		movl	$.LC35, %esi
 6384      00
 6385 00ed 4889C7   		movq	%rax, %rdi
 6386 00f0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6386      00
 6387              		.loc 8 51 0 discriminator 4
 6388 00f5 899D14FE 		movl	%ebx, -492(%rbp)
 6388      FFFF
 6389 00fb F30F1085 		movss	-492(%rbp), %xmm0
 6389      14FEFFFF 
 6390 0103 4889C7   		movq	%rax, %rdi
 6391 0106 E8000000 		call	_ZNSolsEf
 6391      00
  52:../Checks.h   **** 
  53:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 6392              		.loc 8 53 0 is_stmt 1
 6393 010b 488D8540 		leaq	-448(%rbp), %rax
 6393      FEFFFF
 6394 0112 4889C7   		movq	%rax, %rdi
 6395 0115 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6395      00
 6396 011a 4889C2   		movq	%rax, %rdx
 6397 011d 488B8D18 		movq	-488(%rbp), %rcx
 6397      FEFFFF
 6398 0124 488B8538 		movq	-456(%rbp), %rax
 6398      FEFFFF
 6399 012b 4889CE   		movq	%rcx, %rsi
 6400 012e 4889C7   		movq	%rax, %rdi
 6401 0131 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6401      00
 6402              	.LEHE183:
  50:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6403              		.loc 8 50 0
 6404 0136 488D8540 		leaq	-448(%rbp), %rax
 6404      FEFFFF
 6405 013d 4889C7   		movq	%rax, %rdi
 6406              	.LEHB184:
 6407 0140 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6407      00
 6408              	.LEHE184:
 6409              	.LBE116:
 6410              	.LBE115:
  54:../Checks.h   ****     }
  55:../Checks.h   **** }
 6411              		.loc 8 55 0
 6412 0145 EB1D     		jmp	.L348
 6413              	.L347:
 6414 0147 4889C3   		movq	%rax, %rbx
 6415              	.LBB118:
 6416              	.LBB117:
  50:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6417              		.loc 8 50 0
 6418 014a 488D8540 		leaq	-448(%rbp), %rax
 6418      FEFFFF
 6419 0151 4889C7   		movq	%rax, %rdi
 6420 0154 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6420      00
 6421 0159 4889D8   		movq	%rbx, %rax
 6422 015c 4889C7   		movq	%rax, %rdi
 6423              	.LEHB185:
 6424 015f E8000000 		call	_Unwind_Resume
 6424      00
 6425              	.LEHE185:
 6426              	.L348:
 6427              	.LBE117:
 6428              	.LBE118:
 6429              		.loc 8 55 0
 6430 0164 90       		nop
 6431 0165 488B45D8 		movq	-40(%rbp), %rax
 6432 0169 64483304 		xorq	%fs:40, %rax
 6432      25280000 
 6432      00
 6433 0172 7405     		je	.L346
 6434 0174 E8000000 		call	__stack_chk_fail
 6434      00
 6435              	.L346:
 6436 0179 4881C4D8 		addq	$472, %rsp
 6436      010000
 6437 0180 5B       		popq	%rbx
 6438 0181 415C     		popq	%r12
 6439 0183 415D     		popq	%r13
 6440 0185 5D       		popq	%rbp
 6441              		.cfi_def_cfa 7, 8
 6442 0186 C3       		ret
 6443              		.cfi_endproc
 6444              	.LFE1469:
 6445              		.section	.gcc_except_table
 6446              	.LLSDA1469:
 6447 04fc FF       		.byte	0xff
 6448 04fd FF       		.byte	0xff
 6449 04fe 01       		.byte	0x1
 6450 04ff 15       		.uleb128 .LLSDACSE1469-.LLSDACSB1469
 6451              	.LLSDACSB1469:
 6452 0500 77       		.uleb128 .LEHB182-.LFB1469
 6453 0501 05       		.uleb128 .LEHE182-.LEHB182
 6454 0502 00       		.uleb128 0
 6455 0503 00       		.uleb128 0
 6456 0504 A801     		.uleb128 .LEHB183-.LFB1469
 6457 0506 8E01     		.uleb128 .LEHE183-.LEHB183
 6458 0508 C702     		.uleb128 .L347-.LFB1469
 6459 050a 00       		.uleb128 0
 6460 050b C002     		.uleb128 .LEHB184-.LFB1469
 6461 050d 05       		.uleb128 .LEHE184-.LEHB184
 6462 050e 00       		.uleb128 0
 6463 050f 00       		.uleb128 0
 6464 0510 DF02     		.uleb128 .LEHB185-.LFB1469
 6465 0512 05       		.uleb128 .LEHE185-.LEHB185
 6466 0513 00       		.uleb128 0
 6467 0514 00       		.uleb128 0
 6468              	.LLSDACSE1469:
 6469              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6471              		.text
 6473              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDe
 6474              	.LFB1470:
  16:../ExecuteTest.h **** {
 6475              		.loc 7 16 0
 6476              		.cfi_startproc
 6477              		.cfi_personality 0x3,__gxx_personality_v0
 6478              		.cfi_lsda 0x3,.LLSDA1470
 6479 2afa 55       		pushq	%rbp
 6480              		.cfi_def_cfa_offset 16
 6481              		.cfi_offset 6, -16
 6482 2afb 4889E5   		movq	%rsp, %rbp
 6483              		.cfi_def_cfa_register 6
 6484 2afe 4154     		pushq	%r12
 6485 2b00 53       		pushq	%rbx
 6486 2b01 4881EC50 		subq	$1616, %rsp
 6486      060000
 6487              		.cfi_offset 12, -24
 6488              		.cfi_offset 3, -32
 6489 2b08 4889BDA8 		movq	%rdi, -1624(%rbp)
 6489      F9FFFF
 6490 2b0f 4889B5A0 		movq	%rsi, -1632(%rbp)
 6490      F9FFFF
  16:../ExecuteTest.h **** {
 6491              		.loc 7 16 0
 6492 2b16 64488B04 		movq	%fs:40, %rax
 6492      25280000 
 6492      00
 6493 2b1f 488945E8 		movq	%rax, -24(%rbp)
 6494 2b23 31C0     		xorl	%eax, %eax
 6495              	.LEHB186:
  18:../ExecuteTest.h **** 
 6496              		.loc 7 18 0
 6497 2b25 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6497      00
 6498              	.LEHE186:
 6499 2b2a 4889C2   		movq	%rax, %rdx
 6500 2b2d 488B85A0 		movq	-1632(%rbp), %rax
 6500      F9FFFF
 6501 2b34 488902   		movq	%rax, (%rdx)
 6502              	.LBB119:
  23:../ExecuteTest.h **** #endif
 6503              		.loc 7 23 0
 6504 2b37 488D8580 		leaq	-1152(%rbp), %rax
 6504      FBFFFF
 6505 2b3e 4889C7   		movq	%rax, %rdi
 6506              	.LEHB187:
 6507 2b41 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6507      00
 6508              	.LEHE187:
  23:../ExecuteTest.h **** #endif
 6509              		.loc 7 23 0 is_stmt 0 discriminator 1
 6510 2b46 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6510      000000
 6511 2b4d BE010000 		movl	$1, %esi
 6511      00
 6512 2b52 4889C7   		movq	%rax, %rdi
 6513 2b55 E8000000 		call	__sigsetjmp
 6513      00
 6514 2b5a 85C0     		testl	%eax, %eax
 6515 2b5c 0F95C0   		setne	%al
 6516 2b5f 84C0     		testb	%al, %al
 6517 2b61 7423     		je	.L369
  23:../ExecuteTest.h **** #endif
 6518              		.loc 7 23 0 discriminator 3
 6519 2b63 BF080000 		movl	$8, %edi
 6519      00
 6520 2b68 E8000000 		call	__cxa_allocate_exception
 6520      00
 6521 2b6d 48C70000 		movq	$.LC32, (%rax)
 6521      000000
 6522 2b74 BA000000 		movl	$0, %edx
 6522      00
 6523 2b79 BE000000 		movl	$_ZTIPKc, %esi
 6523      00
 6524 2b7e 4889C7   		movq	%rax, %rdi
 6525              	.LEHB188:
 6526 2b81 E8000000 		call	__cxa_throw
 6526      00
 6527              	.L369:
  25:../ExecuteTest.h **** 	}
 6528              		.loc 7 25 0 is_stmt 1
 6529 2b86 488B85A8 		movq	-1624(%rbp), %rax
 6529      F9FFFF
 6530 2b8d 4889C7   		movq	%rax, %rdi
 6531 2b90 E881E9FF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 6531      FF
 6532              	.LEHE188:
  23:../ExecuteTest.h **** #endif
 6533              		.loc 7 23 0
 6534 2b95 488D8580 		leaq	-1152(%rbp), %rax
 6534      FBFFFF
 6535 2b9c 4889C7   		movq	%rax, %rdi
 6536              	.LEHB189:
 6537 2b9f E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6537      00
 6538              	.LEHE189:
 6539              	.LBE119:
 6540              		.loc 7 42 0
 6541 2ba4 E9F00100 		jmp	.L349
 6541      00
 6542              	.L364:
 6543 2ba9 4989C4   		movq	%rax, %r12
 6544 2bac 4889D3   		movq	%rdx, %rbx
 6545              	.LBB120:
  23:../ExecuteTest.h **** #endif
 6546              		.loc 7 23 0
 6547 2baf 488D8580 		leaq	-1152(%rbp), %rax
 6547      FBFFFF
 6548 2bb6 4889C7   		movq	%rax, %rdi
 6549 2bb9 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6549      00
 6550 2bbe 4C89E0   		movq	%r12, %rax
 6551 2bc1 4889DA   		movq	%rbx, %rdx
 6552 2bc4 EB00     		jmp	.L353
 6553              	.L363:
 6554              	.L353:
 6555 2bc6 4883FA01 		cmpq	$1, %rdx
 6556 2bca 740F     		je	.L355
 6557 2bcc 4883FA02 		cmpq	$2, %rdx
 6558 2bd0 0F84A600 		je	.L356
 6558      0000
 6559 2bd6 E9430100 		jmp	.L370
 6559      00
 6560              	.L355:
 6561              	.LBE120:
 6562              	.LBB121:
  27:../ExecuteTest.h **** 	{
 6563              		.loc 7 27 0
 6564 2bdb 4889C7   		movq	%rax, %rdi
 6565 2bde E8000000 		call	__cxa_begin_catch
 6565      00
 6566 2be3 488985B0 		movq	%rax, -1616(%rbp)
 6566      F9FFFF
  30:../ExecuteTest.h **** 	}
 6567              		.loc 7 30 0
 6568 2bea 488B85B0 		movq	-1616(%rbp), %rax
 6568      F9FFFF
 6569 2bf1 488B00   		movq	(%rax), %rax
 6570 2bf4 4883C010 		addq	$16, %rax
 6571 2bf8 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6572              		.loc 7 29 0
 6573 2bfb 488B95B0 		movq	-1616(%rbp), %rdx
 6573      F9FFFF
 6574 2c02 4889D7   		movq	%rdx, %rdi
 6575 2c05 FFD0     		call	*%rax
 6576 2c07 4889C3   		movq	%rax, %rbx
 6577 2c0a 488B85B0 		movq	-1616(%rbp), %rax
 6577      F9FFFF
 6578 2c11 4889C7   		movq	%rax, %rdi
 6579              	.LEHB190:
 6580 2c14 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6580      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6581              		.loc 7 29 0 is_stmt 0 discriminator 1
 6582 2c19 4189C4   		movl	%eax, %r12d
 6583 2c1c 488B85B0 		movq	-1616(%rbp), %rax
 6583      F9FFFF
 6584 2c23 4889C7   		movq	%rax, %rdi
 6585 2c26 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6585      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6586              		.loc 7 29 0 discriminator 2
 6587 2c2b 4889C1   		movq	%rax, %rcx
 6588 2c2e 488B85A0 		movq	-1632(%rbp), %rax
 6588      F9FFFF
 6589 2c35 488B10   		movq	(%rax), %rdx
 6590 2c38 488B85A0 		movq	-1632(%rbp), %rax
 6590      F9FFFF
 6591 2c3f 488B7008 		movq	8(%rax), %rsi
 6592 2c43 488D85C0 		leaq	-1600(%rbp), %rax
 6592      F9FFFF
 6593 2c4a 4589E0   		movl	%r12d, %r8d
 6594 2c4d 4889C7   		movq	%rax, %rdi
 6595 2c50 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6595      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6596              		.loc 7 29 0 discriminator 4
 6597 2c55 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6597      00
 6598 2c5a 488B00   		movq	(%rax), %rax
 6599 2c5d 488D8DC0 		leaq	-1600(%rbp), %rcx
 6599      F9FFFF
 6600 2c64 4889DA   		movq	%rbx, %rdx
 6601 2c67 4889CE   		movq	%rcx, %rsi
 6602 2c6a 4889C7   		movq	%rax, %rdi
 6603 2c6d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6603      00
 6604              	.LEHE190:
  27:../ExecuteTest.h **** 	{
 6605              		.loc 7 27 0 is_stmt 1 discriminator 8
 6606 2c72 E8000000 		call	__cxa_end_catch
 6606      00
 6607              	.LBE121:
 6608              		.loc 7 42 0 discriminator 8
 6609 2c77 E91D0100 		jmp	.L349
 6609      00
 6610              	.L356:
 6611              	.LBB122:
  32:../ExecuteTest.h **** 	{
 6612              		.loc 7 32 0
 6613 2c7c 4889C7   		movq	%rax, %rdi
 6614 2c7f E8000000 		call	__cxa_begin_catch
 6614      00
 6615 2c84 488985B8 		movq	%rax, -1608(%rbp)
 6615      F9FFFF
 6616              	.LBB123:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6617              		.loc 7 34 0
 6618 2c8b 488D85E0 		leaq	-1568(%rbp), %rax
 6618      F9FFFF
 6619 2c92 4889C7   		movq	%rax, %rdi
 6620              	.LEHB191:
 6621 2c95 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6621      00
 6622              	.LEHE191:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6623              		.loc 7 35 0
 6624 2c9a 488B85B8 		movq	-1608(%rbp), %rax
 6624      F9FFFF
 6625 2ca1 488B00   		movq	(%rax), %rax
 6626 2ca4 4883C010 		addq	$16, %rax
 6627 2ca8 488B00   		movq	(%rax), %rax
 6628 2cab 488B95B8 		movq	-1608(%rbp), %rdx
 6628      F9FFFF
 6629 2cb2 4889D7   		movq	%rdx, %rdi
 6630 2cb5 FFD0     		call	*%rax
 6631 2cb7 4889C3   		movq	%rax, %rbx
 6632 2cba 488D85E0 		leaq	-1568(%rbp), %rax
 6632      F9FFFF
 6633 2cc1 BE000000 		movl	$.LC6, %esi
 6633      00
 6634 2cc6 4889C7   		movq	%rax, %rdi
 6635              	.LEHB192:
 6636 2cc9 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6636      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6637              		.loc 7 35 0 is_stmt 0 discriminator 1
 6638 2cce 4889DE   		movq	%rbx, %rsi
 6639 2cd1 4889C7   		movq	%rax, %rdi
 6640 2cd4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6640      00
  36:../ExecuteTest.h **** 	}
 6641              		.loc 7 36 0 is_stmt 1
 6642 2cd9 488D85E0 		leaq	-1568(%rbp), %rax
 6642      F9FFFF
 6643 2ce0 4889C7   		movq	%rax, %rdi
 6644 2ce3 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6644      00
 6645 2ce8 4889C3   		movq	%rax, %rbx
 6646 2ceb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6646      00
  36:../ExecuteTest.h **** 	}
 6647              		.loc 7 36 0 is_stmt 0 discriminator 1
 6648 2cf0 488B00   		movq	(%rax), %rax
 6649 2cf3 488B8DA0 		movq	-1632(%rbp), %rcx
 6649      F9FFFF
 6650 2cfa 4889DA   		movq	%rbx, %rdx
 6651 2cfd 4889CE   		movq	%rcx, %rsi
 6652 2d00 4889C7   		movq	%rax, %rdi
 6653 2d03 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6653      00
 6654              	.LEHE192:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6655              		.loc 7 34 0 is_stmt 1
 6656 2d08 488D85E0 		leaq	-1568(%rbp), %rax
 6656      F9FFFF
 6657 2d0f 4889C7   		movq	%rax, %rdi
 6658              	.LEHB193:
 6659 2d12 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6659      00
 6660              	.LEHE193:
 6661              	.LBE123:
  32:../ExecuteTest.h **** 	{
 6662              		.loc 7 32 0
 6663 2d17 E8000000 		call	__cxa_end_catch
 6663      00
 6664              	.LBE122:
 6665              		.loc 7 42 0
 6666 2d1c EB7B     		jmp	.L349
 6667              	.L370:
  38:../ExecuteTest.h **** 	{
 6668              		.loc 7 38 0
 6669 2d1e 4889C7   		movq	%rax, %rdi
 6670 2d21 E8000000 		call	__cxa_begin_catch
 6670      00
 6671              	.LEHB194:
  40:../ExecuteTest.h **** 	}
 6672              		.loc 7 40 0
 6673 2d26 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6673      00
 6674 2d2b 488B00   		movq	(%rax), %rax
 6675 2d2e 488B8DA0 		movq	-1632(%rbp), %rcx
 6675      F9FFFF
 6676 2d35 BA000000 		movl	$.LC33, %edx
 6676      00
 6677 2d3a 4889CE   		movq	%rcx, %rsi
 6678 2d3d 4889C7   		movq	%rax, %rdi
 6679 2d40 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6679      00
 6680              	.LEHE194:
 6681              	.LEHB195:
  38:../ExecuteTest.h **** 	{
 6682              		.loc 7 38 0
 6683 2d45 E8000000 		call	__cxa_end_catch
 6683      00
 6684              		.loc 7 42 0
 6685 2d4a EB4D     		jmp	.L349
 6686              	.L365:
 6687 2d4c 4889C3   		movq	%rax, %rbx
 6688              	.LBB125:
  27:../ExecuteTest.h **** 	{
 6689              		.loc 7 27 0
 6690 2d4f E8000000 		call	__cxa_end_catch
 6690      00
 6691 2d54 4889D8   		movq	%rbx, %rax
 6692 2d57 4889C7   		movq	%rax, %rdi
 6693 2d5a E8000000 		call	_Unwind_Resume
 6693      00
 6694              	.LEHE195:
 6695              	.L367:
 6696 2d5f 4889C3   		movq	%rax, %rbx
 6697              	.LBE125:
 6698              	.LBB126:
 6699              	.LBB124:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6700              		.loc 7 34 0
 6701 2d62 488D85E0 		leaq	-1568(%rbp), %rax
 6701      F9FFFF
 6702 2d69 4889C7   		movq	%rax, %rdi
 6703 2d6c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6703      00
 6704 2d71 EB03     		jmp	.L360
 6705              	.L366:
 6706 2d73 4889C3   		movq	%rax, %rbx
 6707              	.L360:
 6708              	.LBE124:
  32:../ExecuteTest.h **** 	{
 6709              		.loc 7 32 0
 6710 2d76 E8000000 		call	__cxa_end_catch
 6710      00
 6711 2d7b 4889D8   		movq	%rbx, %rax
 6712 2d7e 4889C7   		movq	%rax, %rdi
 6713              	.LEHB196:
 6714 2d81 E8000000 		call	_Unwind_Resume
 6714      00
 6715              	.LEHE196:
 6716              	.L368:
 6717 2d86 4889C3   		movq	%rax, %rbx
 6718              	.LBE126:
  38:../ExecuteTest.h **** 	{
 6719              		.loc 7 38 0
 6720 2d89 E8000000 		call	__cxa_end_catch
 6720      00
 6721 2d8e 4889D8   		movq	%rbx, %rax
 6722 2d91 4889C7   		movq	%rax, %rdi
 6723              	.LEHB197:
 6724 2d94 E8000000 		call	_Unwind_Resume
 6724      00
 6725              	.LEHE197:
 6726              	.L349:
 6727              		.loc 7 42 0
 6728 2d99 488B45E8 		movq	-24(%rbp), %rax
 6729 2d9d 64483304 		xorq	%fs:40, %rax
 6729      25280000 
 6729      00
 6730 2da6 7405     		je	.L362
 6731 2da8 E8000000 		call	__stack_chk_fail
 6731      00
 6732              	.L362:
 6733 2dad 4881C450 		addq	$1616, %rsp
 6733      060000
 6734 2db4 5B       		popq	%rbx
 6735 2db5 415C     		popq	%r12
 6736 2db7 5D       		popq	%rbp
 6737              		.cfi_def_cfa 7, 8
 6738 2db8 C3       		ret
 6739              		.cfi_endproc
 6740              	.LFE1470:
 6741              		.section	.gcc_except_table
 6742 0515 000000   		.align 4
 6743              	.LLSDA1470:
 6744 0518 FF       		.byte	0xff
 6745 0519 03       		.byte	0x3
 6746 051a 59       		.uleb128 .LLSDATT1470-.LLSDATTD1470
 6747              	.LLSDATTD1470:
 6748 051b 01       		.byte	0x1
 6749 051c 42       		.uleb128 .LLSDACSE1470-.LLSDACSB1470
 6750              	.LLSDACSB1470:
 6751 051d 2B       		.uleb128 .LEHB186-.LFB1470
 6752 051e 05       		.uleb128 .LEHE186-.LEHB186
 6753 051f 00       		.uleb128 0
 6754 0520 00       		.uleb128 0
 6755 0521 47       		.uleb128 .LEHB187-.LFB1470
 6756 0522 05       		.uleb128 .LEHE187-.LEHB187
 6757 0523 CC01     		.uleb128 .L363-.LFB1470
 6758 0525 05       		.uleb128 0x5
 6759 0526 8701     		.uleb128 .LEHB188-.LFB1470
 6760 0528 14       		.uleb128 .LEHE188-.LEHB188
 6761 0529 AF01     		.uleb128 .L364-.LFB1470
 6762 052b 07       		.uleb128 0x7
 6763 052c A501     		.uleb128 .LEHB189-.LFB1470
 6764 052e 05       		.uleb128 .LEHE189-.LEHB189
 6765 052f CC01     		.uleb128 .L363-.LFB1470
 6766 0531 05       		.uleb128 0x5
 6767 0532 9A02     		.uleb128 .LEHB190-.LFB1470
 6768 0534 5E       		.uleb128 .LEHE190-.LEHB190
 6769 0535 D204     		.uleb128 .L365-.LFB1470
 6770 0537 00       		.uleb128 0
 6771 0538 9B03     		.uleb128 .LEHB191-.LFB1470
 6772 053a 05       		.uleb128 .LEHE191-.LEHB191
 6773 053b F904     		.uleb128 .L366-.LFB1470
 6774 053d 00       		.uleb128 0
 6775 053e CF03     		.uleb128 .LEHB192-.LFB1470
 6776 0540 3F       		.uleb128 .LEHE192-.LEHB192
 6777 0541 E504     		.uleb128 .L367-.LFB1470
 6778 0543 00       		.uleb128 0
 6779 0544 9804     		.uleb128 .LEHB193-.LFB1470
 6780 0546 05       		.uleb128 .LEHE193-.LEHB193
 6781 0547 F904     		.uleb128 .L366-.LFB1470
 6782 0549 00       		.uleb128 0
 6783 054a AC04     		.uleb128 .LEHB194-.LFB1470
 6784 054c 1F       		.uleb128 .LEHE194-.LEHB194
 6785 054d 8C05     		.uleb128 .L368-.LFB1470
 6786 054f 00       		.uleb128 0
 6787 0550 CB04     		.uleb128 .LEHB195-.LFB1470
 6788 0552 1A       		.uleb128 .LEHE195-.LEHB195
 6789 0553 00       		.uleb128 0
 6790 0554 00       		.uleb128 0
 6791 0555 8705     		.uleb128 .LEHB196-.LFB1470
 6792 0557 05       		.uleb128 .LEHE196-.LEHB196
 6793 0558 00       		.uleb128 0
 6794 0559 00       		.uleb128 0
 6795 055a 9A05     		.uleb128 .LEHB197-.LFB1470
 6796 055c 05       		.uleb128 .LEHE197-.LEHB197
 6797 055d 00       		.uleb128 0
 6798 055e 00       		.uleb128 0
 6799              	.LLSDACSE1470:
 6800 055f 03       		.byte	0x3
 6801 0560 00       		.byte	0
 6802 0561 02       		.byte	0x2
 6803 0562 7D       		.byte	0x7d
 6804 0563 01       		.byte	0x1
 6805 0564 7D       		.byte	0x7d
 6806 0565 00       		.byte	0
 6807 0566 7D       		.byte	0x7d
 6808 0567 00       		.align 4
 6809 0568 00000000 		.long	0
 6810              	
 6811 056c 00000000 		.long	_ZTISt9exception
 6812 0570 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6813              	.LLSDATT1470:
 6814              		.text
 6816              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 6817              		.weak	_ZN8UnitTest5CheckIbEEbT_
 6819              	_ZN8UnitTest5CheckIbEEbT_:
 6820              	.LFB1471:
  12:../Checks.h   **** {
 6821              		.loc 8 12 0
 6822              		.cfi_startproc
 6823 0000 55       		pushq	%rbp
 6824              		.cfi_def_cfa_offset 16
 6825              		.cfi_offset 6, -16
 6826 0001 4889E5   		movq	%rsp, %rbp
 6827              		.cfi_def_cfa_register 6
 6828 0004 89F8     		movl	%edi, %eax
 6829 0006 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 6830              		.loc 8 14 0
 6831 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 6832              		.loc 8 15 0
 6833 000d 5D       		popq	%rbp
 6834              		.cfi_def_cfa 7, 8
 6835 000e C3       		ret
 6836              		.cfi_endproc
 6837              	.LFE1471:
 6839              		.text
 6841              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDe
 6842              	.LFB1472:
  16:../ExecuteTest.h **** {
 6843              		.loc 7 16 0
 6844              		.cfi_startproc
 6845              		.cfi_personality 0x3,__gxx_personality_v0
 6846              		.cfi_lsda 0x3,.LLSDA1472
 6847 2db9 55       		pushq	%rbp
 6848              		.cfi_def_cfa_offset 16
 6849              		.cfi_offset 6, -16
 6850 2dba 4889E5   		movq	%rsp, %rbp
 6851              		.cfi_def_cfa_register 6
 6852 2dbd 4154     		pushq	%r12
 6853 2dbf 53       		pushq	%rbx
 6854 2dc0 4881EC50 		subq	$1616, %rsp
 6854      060000
 6855              		.cfi_offset 12, -24
 6856              		.cfi_offset 3, -32
 6857 2dc7 4889BDA8 		movq	%rdi, -1624(%rbp)
 6857      F9FFFF
 6858 2dce 4889B5A0 		movq	%rsi, -1632(%rbp)
 6858      F9FFFF
  16:../ExecuteTest.h **** {
 6859              		.loc 7 16 0
 6860 2dd5 64488B04 		movq	%fs:40, %rax
 6860      25280000 
 6860      00
 6861 2dde 488945E8 		movq	%rax, -24(%rbp)
 6862 2de2 31C0     		xorl	%eax, %eax
 6863              	.LEHB198:
  18:../ExecuteTest.h **** 
 6864              		.loc 7 18 0
 6865 2de4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6865      00
 6866              	.LEHE198:
 6867 2de9 4889C2   		movq	%rax, %rdx
 6868 2dec 488B85A0 		movq	-1632(%rbp), %rax
 6868      F9FFFF
 6869 2df3 488902   		movq	%rax, (%rdx)
 6870              	.LBB127:
  23:../ExecuteTest.h **** #endif
 6871              		.loc 7 23 0
 6872 2df6 488D8580 		leaq	-1152(%rbp), %rax
 6872      FBFFFF
 6873 2dfd 4889C7   		movq	%rax, %rdi
 6874              	.LEHB199:
 6875 2e00 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6875      00
 6876              	.LEHE199:
  23:../ExecuteTest.h **** #endif
 6877              		.loc 7 23 0 is_stmt 0 discriminator 1
 6878 2e05 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6878      000000
 6879 2e0c BE010000 		movl	$1, %esi
 6879      00
 6880 2e11 4889C7   		movq	%rax, %rdi
 6881 2e14 E8000000 		call	__sigsetjmp
 6881      00
 6882 2e19 85C0     		testl	%eax, %eax
 6883 2e1b 0F95C0   		setne	%al
 6884 2e1e 84C0     		testb	%al, %al
 6885 2e20 7423     		je	.L393
  23:../ExecuteTest.h **** #endif
 6886              		.loc 7 23 0 discriminator 3
 6887 2e22 BF080000 		movl	$8, %edi
 6887      00
 6888 2e27 E8000000 		call	__cxa_allocate_exception
 6888      00
 6889 2e2c 48C70000 		movq	$.LC32, (%rax)
 6889      000000
 6890 2e33 BA000000 		movl	$0, %edx
 6890      00
 6891 2e38 BE000000 		movl	$_ZTIPKc, %esi
 6891      00
 6892 2e3d 4889C7   		movq	%rax, %rdi
 6893              	.LEHB200:
 6894 2e40 E8000000 		call	__cxa_throw
 6894      00
 6895              	.L393:
  25:../ExecuteTest.h **** 	}
 6896              		.loc 7 25 0 is_stmt 1
 6897 2e45 488B85A8 		movq	-1624(%rbp), %rax
 6897      F9FFFF
 6898 2e4c 4889C7   		movq	%rax, %rdi
 6899 2e4f E84AECFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 6899      FF
 6900              	.LEHE200:
  23:../ExecuteTest.h **** #endif
 6901              		.loc 7 23 0
 6902 2e54 488D8580 		leaq	-1152(%rbp), %rax
 6902      FBFFFF
 6903 2e5b 4889C7   		movq	%rax, %rdi
 6904              	.LEHB201:
 6905 2e5e E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6905      00
 6906              	.LEHE201:
 6907              	.LBE127:
 6908              		.loc 7 42 0
 6909 2e63 E9F00100 		jmp	.L373
 6909      00
 6910              	.L388:
 6911 2e68 4989C4   		movq	%rax, %r12
 6912 2e6b 4889D3   		movq	%rdx, %rbx
 6913              	.LBB128:
  23:../ExecuteTest.h **** #endif
 6914              		.loc 7 23 0
 6915 2e6e 488D8580 		leaq	-1152(%rbp), %rax
 6915      FBFFFF
 6916 2e75 4889C7   		movq	%rax, %rdi
 6917 2e78 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6917      00
 6918 2e7d 4C89E0   		movq	%r12, %rax
 6919 2e80 4889DA   		movq	%rbx, %rdx
 6920 2e83 EB00     		jmp	.L377
 6921              	.L387:
 6922              	.L377:
 6923 2e85 4883FA01 		cmpq	$1, %rdx
 6924 2e89 740F     		je	.L379
 6925 2e8b 4883FA02 		cmpq	$2, %rdx
 6926 2e8f 0F84A600 		je	.L380
 6926      0000
 6927 2e95 E9430100 		jmp	.L394
 6927      00
 6928              	.L379:
 6929              	.LBE128:
 6930              	.LBB129:
  27:../ExecuteTest.h **** 	{
 6931              		.loc 7 27 0
 6932 2e9a 4889C7   		movq	%rax, %rdi
 6933 2e9d E8000000 		call	__cxa_begin_catch
 6933      00
 6934 2ea2 488985B0 		movq	%rax, -1616(%rbp)
 6934      F9FFFF
  30:../ExecuteTest.h **** 	}
 6935              		.loc 7 30 0
 6936 2ea9 488B85B0 		movq	-1616(%rbp), %rax
 6936      F9FFFF
 6937 2eb0 488B00   		movq	(%rax), %rax
 6938 2eb3 4883C010 		addq	$16, %rax
 6939 2eb7 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6940              		.loc 7 29 0
 6941 2eba 488B95B0 		movq	-1616(%rbp), %rdx
 6941      F9FFFF
 6942 2ec1 4889D7   		movq	%rdx, %rdi
 6943 2ec4 FFD0     		call	*%rax
 6944 2ec6 4889C3   		movq	%rax, %rbx
 6945 2ec9 488B85B0 		movq	-1616(%rbp), %rax
 6945      F9FFFF
 6946 2ed0 4889C7   		movq	%rax, %rdi
 6947              	.LEHB202:
 6948 2ed3 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6948      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6949              		.loc 7 29 0 is_stmt 0 discriminator 1
 6950 2ed8 4189C4   		movl	%eax, %r12d
 6951 2edb 488B85B0 		movq	-1616(%rbp), %rax
 6951      F9FFFF
 6952 2ee2 4889C7   		movq	%rax, %rdi
 6953 2ee5 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6953      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6954              		.loc 7 29 0 discriminator 2
 6955 2eea 4889C1   		movq	%rax, %rcx
 6956 2eed 488B85A0 		movq	-1632(%rbp), %rax
 6956      F9FFFF
 6957 2ef4 488B10   		movq	(%rax), %rdx
 6958 2ef7 488B85A0 		movq	-1632(%rbp), %rax
 6958      F9FFFF
 6959 2efe 488B7008 		movq	8(%rax), %rsi
 6960 2f02 488D85C0 		leaq	-1600(%rbp), %rax
 6960      F9FFFF
 6961 2f09 4589E0   		movl	%r12d, %r8d
 6962 2f0c 4889C7   		movq	%rax, %rdi
 6963 2f0f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6963      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6964              		.loc 7 29 0 discriminator 4
 6965 2f14 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6965      00
 6966 2f19 488B00   		movq	(%rax), %rax
 6967 2f1c 488D8DC0 		leaq	-1600(%rbp), %rcx
 6967      F9FFFF
 6968 2f23 4889DA   		movq	%rbx, %rdx
 6969 2f26 4889CE   		movq	%rcx, %rsi
 6970 2f29 4889C7   		movq	%rax, %rdi
 6971 2f2c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6971      00
 6972              	.LEHE202:
  27:../ExecuteTest.h **** 	{
 6973              		.loc 7 27 0 is_stmt 1 discriminator 8
 6974 2f31 E8000000 		call	__cxa_end_catch
 6974      00
 6975              	.LBE129:
 6976              		.loc 7 42 0 discriminator 8
 6977 2f36 E91D0100 		jmp	.L373
 6977      00
 6978              	.L380:
 6979              	.LBB130:
  32:../ExecuteTest.h **** 	{
 6980              		.loc 7 32 0
 6981 2f3b 4889C7   		movq	%rax, %rdi
 6982 2f3e E8000000 		call	__cxa_begin_catch
 6982      00
 6983 2f43 488985B8 		movq	%rax, -1608(%rbp)
 6983      F9FFFF
 6984              	.LBB131:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6985              		.loc 7 34 0
 6986 2f4a 488D85E0 		leaq	-1568(%rbp), %rax
 6986      F9FFFF
 6987 2f51 4889C7   		movq	%rax, %rdi
 6988              	.LEHB203:
 6989 2f54 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6989      00
 6990              	.LEHE203:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6991              		.loc 7 35 0
 6992 2f59 488B85B8 		movq	-1608(%rbp), %rax
 6992      F9FFFF
 6993 2f60 488B00   		movq	(%rax), %rax
 6994 2f63 4883C010 		addq	$16, %rax
 6995 2f67 488B00   		movq	(%rax), %rax
 6996 2f6a 488B95B8 		movq	-1608(%rbp), %rdx
 6996      F9FFFF
 6997 2f71 4889D7   		movq	%rdx, %rdi
 6998 2f74 FFD0     		call	*%rax
 6999 2f76 4889C3   		movq	%rax, %rbx
 7000 2f79 488D85E0 		leaq	-1568(%rbp), %rax
 7000      F9FFFF
 7001 2f80 BE000000 		movl	$.LC6, %esi
 7001      00
 7002 2f85 4889C7   		movq	%rax, %rdi
 7003              	.LEHB204:
 7004 2f88 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7004      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7005              		.loc 7 35 0 is_stmt 0 discriminator 1
 7006 2f8d 4889DE   		movq	%rbx, %rsi
 7007 2f90 4889C7   		movq	%rax, %rdi
 7008 2f93 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7008      00
  36:../ExecuteTest.h **** 	}
 7009              		.loc 7 36 0 is_stmt 1
 7010 2f98 488D85E0 		leaq	-1568(%rbp), %rax
 7010      F9FFFF
 7011 2f9f 4889C7   		movq	%rax, %rdi
 7012 2fa2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7012      00
 7013 2fa7 4889C3   		movq	%rax, %rbx
 7014 2faa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7014      00
  36:../ExecuteTest.h **** 	}
 7015              		.loc 7 36 0 is_stmt 0 discriminator 1
 7016 2faf 488B00   		movq	(%rax), %rax
 7017 2fb2 488B8DA0 		movq	-1632(%rbp), %rcx
 7017      F9FFFF
 7018 2fb9 4889DA   		movq	%rbx, %rdx
 7019 2fbc 4889CE   		movq	%rcx, %rsi
 7020 2fbf 4889C7   		movq	%rax, %rdi
 7021 2fc2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7021      00
 7022              	.LEHE204:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7023              		.loc 7 34 0 is_stmt 1
 7024 2fc7 488D85E0 		leaq	-1568(%rbp), %rax
 7024      F9FFFF
 7025 2fce 4889C7   		movq	%rax, %rdi
 7026              	.LEHB205:
 7027 2fd1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7027      00
 7028              	.LEHE205:
 7029              	.LBE131:
  32:../ExecuteTest.h **** 	{
 7030              		.loc 7 32 0
 7031 2fd6 E8000000 		call	__cxa_end_catch
 7031      00
 7032              	.LBE130:
 7033              		.loc 7 42 0
 7034 2fdb EB7B     		jmp	.L373
 7035              	.L394:
  38:../ExecuteTest.h **** 	{
 7036              		.loc 7 38 0
 7037 2fdd 4889C7   		movq	%rax, %rdi
 7038 2fe0 E8000000 		call	__cxa_begin_catch
 7038      00
 7039              	.LEHB206:
  40:../ExecuteTest.h **** 	}
 7040              		.loc 7 40 0
 7041 2fe5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7041      00
 7042 2fea 488B00   		movq	(%rax), %rax
 7043 2fed 488B8DA0 		movq	-1632(%rbp), %rcx
 7043      F9FFFF
 7044 2ff4 BA000000 		movl	$.LC33, %edx
 7044      00
 7045 2ff9 4889CE   		movq	%rcx, %rsi
 7046 2ffc 4889C7   		movq	%rax, %rdi
 7047 2fff E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7047      00
 7048              	.LEHE206:
 7049              	.LEHB207:
  38:../ExecuteTest.h **** 	{
 7050              		.loc 7 38 0
 7051 3004 E8000000 		call	__cxa_end_catch
 7051      00
 7052              		.loc 7 42 0
 7053 3009 EB4D     		jmp	.L373
 7054              	.L389:
 7055 300b 4889C3   		movq	%rax, %rbx
 7056              	.LBB133:
  27:../ExecuteTest.h **** 	{
 7057              		.loc 7 27 0
 7058 300e E8000000 		call	__cxa_end_catch
 7058      00
 7059 3013 4889D8   		movq	%rbx, %rax
 7060 3016 4889C7   		movq	%rax, %rdi
 7061 3019 E8000000 		call	_Unwind_Resume
 7061      00
 7062              	.LEHE207:
 7063              	.L391:
 7064 301e 4889C3   		movq	%rax, %rbx
 7065              	.LBE133:
 7066              	.LBB134:
 7067              	.LBB132:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7068              		.loc 7 34 0
 7069 3021 488D85E0 		leaq	-1568(%rbp), %rax
 7069      F9FFFF
 7070 3028 4889C7   		movq	%rax, %rdi
 7071 302b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7071      00
 7072 3030 EB03     		jmp	.L384
 7073              	.L390:
 7074 3032 4889C3   		movq	%rax, %rbx
 7075              	.L384:
 7076              	.LBE132:
  32:../ExecuteTest.h **** 	{
 7077              		.loc 7 32 0
 7078 3035 E8000000 		call	__cxa_end_catch
 7078      00
 7079 303a 4889D8   		movq	%rbx, %rax
 7080 303d 4889C7   		movq	%rax, %rdi
 7081              	.LEHB208:
 7082 3040 E8000000 		call	_Unwind_Resume
 7082      00
 7083              	.LEHE208:
 7084              	.L392:
 7085 3045 4889C3   		movq	%rax, %rbx
 7086              	.LBE134:
  38:../ExecuteTest.h **** 	{
 7087              		.loc 7 38 0
 7088 3048 E8000000 		call	__cxa_end_catch
 7088      00
 7089 304d 4889D8   		movq	%rbx, %rax
 7090 3050 4889C7   		movq	%rax, %rdi
 7091              	.LEHB209:
 7092 3053 E8000000 		call	_Unwind_Resume
 7092      00
 7093              	.LEHE209:
 7094              	.L373:
 7095              		.loc 7 42 0
 7096 3058 488B45E8 		movq	-24(%rbp), %rax
 7097 305c 64483304 		xorq	%fs:40, %rax
 7097      25280000 
 7097      00
 7098 3065 7405     		je	.L386
 7099 3067 E8000000 		call	__stack_chk_fail
 7099      00
 7100              	.L386:
 7101 306c 4881C450 		addq	$1616, %rsp
 7101      060000
 7102 3073 5B       		popq	%rbx
 7103 3074 415C     		popq	%r12
 7104 3076 5D       		popq	%rbp
 7105              		.cfi_def_cfa 7, 8
 7106 3077 C3       		ret
 7107              		.cfi_endproc
 7108              	.LFE1472:
 7109              		.section	.gcc_except_table
 7110              		.align 4
 7111              	.LLSDA1472:
 7112 0574 FF       		.byte	0xff
 7113 0575 03       		.byte	0x3
 7114 0576 59       		.uleb128 .LLSDATT1472-.LLSDATTD1472
 7115              	.LLSDATTD1472:
 7116 0577 01       		.byte	0x1
 7117 0578 42       		.uleb128 .LLSDACSE1472-.LLSDACSB1472
 7118              	.LLSDACSB1472:
 7119 0579 2B       		.uleb128 .LEHB198-.LFB1472
 7120 057a 05       		.uleb128 .LEHE198-.LEHB198
 7121 057b 00       		.uleb128 0
 7122 057c 00       		.uleb128 0
 7123 057d 47       		.uleb128 .LEHB199-.LFB1472
 7124 057e 05       		.uleb128 .LEHE199-.LEHB199
 7125 057f CC01     		.uleb128 .L387-.LFB1472
 7126 0581 05       		.uleb128 0x5
 7127 0582 8701     		.uleb128 .LEHB200-.LFB1472
 7128 0584 14       		.uleb128 .LEHE200-.LEHB200
 7129 0585 AF01     		.uleb128 .L388-.LFB1472
 7130 0587 07       		.uleb128 0x7
 7131 0588 A501     		.uleb128 .LEHB201-.LFB1472
 7132 058a 05       		.uleb128 .LEHE201-.LEHB201
 7133 058b CC01     		.uleb128 .L387-.LFB1472
 7134 058d 05       		.uleb128 0x5
 7135 058e 9A02     		.uleb128 .LEHB202-.LFB1472
 7136 0590 5E       		.uleb128 .LEHE202-.LEHB202
 7137 0591 D204     		.uleb128 .L389-.LFB1472
 7138 0593 00       		.uleb128 0
 7139 0594 9B03     		.uleb128 .LEHB203-.LFB1472
 7140 0596 05       		.uleb128 .LEHE203-.LEHB203
 7141 0597 F904     		.uleb128 .L390-.LFB1472
 7142 0599 00       		.uleb128 0
 7143 059a CF03     		.uleb128 .LEHB204-.LFB1472
 7144 059c 3F       		.uleb128 .LEHE204-.LEHB204
 7145 059d E504     		.uleb128 .L391-.LFB1472
 7146 059f 00       		.uleb128 0
 7147 05a0 9804     		.uleb128 .LEHB205-.LFB1472
 7148 05a2 05       		.uleb128 .LEHE205-.LEHB205
 7149 05a3 F904     		.uleb128 .L390-.LFB1472
 7150 05a5 00       		.uleb128 0
 7151 05a6 AC04     		.uleb128 .LEHB206-.LFB1472
 7152 05a8 1F       		.uleb128 .LEHE206-.LEHB206
 7153 05a9 8C05     		.uleb128 .L392-.LFB1472
 7154 05ab 00       		.uleb128 0
 7155 05ac CB04     		.uleb128 .LEHB207-.LFB1472
 7156 05ae 1A       		.uleb128 .LEHE207-.LEHB207
 7157 05af 00       		.uleb128 0
 7158 05b0 00       		.uleb128 0
 7159 05b1 8705     		.uleb128 .LEHB208-.LFB1472
 7160 05b3 05       		.uleb128 .LEHE208-.LEHB208
 7161 05b4 00       		.uleb128 0
 7162 05b5 00       		.uleb128 0
 7163 05b6 9A05     		.uleb128 .LEHB209-.LFB1472
 7164 05b8 05       		.uleb128 .LEHE209-.LEHB209
 7165 05b9 00       		.uleb128 0
 7166 05ba 00       		.uleb128 0
 7167              	.LLSDACSE1472:
 7168 05bb 03       		.byte	0x3
 7169 05bc 00       		.byte	0
 7170 05bd 02       		.byte	0x2
 7171 05be 7D       		.byte	0x7d
 7172 05bf 01       		.byte	0x1
 7173 05c0 7D       		.byte	0x7d
 7174 05c1 00       		.byte	0
 7175 05c2 7D       		.byte	0x7d
 7176 05c3 00       		.align 4
 7177 05c4 00000000 		.long	0
 7178              	
 7179 05c8 00000000 		.long	_ZTISt9exception
 7180 05cc 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7181              	.LLSDATT1472:
 7182              		.text
 7184              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7185              		.align 2
 7186              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 7188              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv:
 7189              	.LFB1473:
 654:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7190              		.loc 6 654 0
 7191              		.cfi_startproc
 7192 0000 55       		pushq	%rbp
 7193              		.cfi_def_cfa_offset 16
 7194              		.cfi_offset 6, -16
 7195 0001 4889E5   		movq	%rsp, %rbp
 7196              		.cfi_def_cfa_register 6
 7197 0004 48897DF8 		movq	%rdi, -8(%rbp)
 655:/usr/include/c++/5/bits/stl_vector.h **** 
 7198              		.loc 6 655 0
 7199 0008 488B45F8 		movq	-8(%rbp), %rax
 7200 000c 488B4008 		movq	8(%rax), %rax
 7201 0010 4889C2   		movq	%rax, %rdx
 7202 0013 488B45F8 		movq	-8(%rbp), %rax
 7203 0017 488B00   		movq	(%rax), %rax
 7204 001a 4829C2   		subq	%rax, %rdx
 7205 001d 4889D0   		movq	%rdx, %rax
 7206 0020 48C1F803 		sarq	$3, %rax
 7207 0024 4889C2   		movq	%rax, %rdx
 7208 0027 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 7208      CCCCCCCC 
 7208      CCCC
 7209 0031 480FAFC2 		imulq	%rdx, %rax
 7210 0035 5D       		popq	%rbp
 7211              		.cfi_def_cfa 7, 8
 7212 0036 C3       		ret
 7213              		.cfi_endproc
 7214              	.LFE1473:
 7216              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7217              		.align 2
 7218              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 7220              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm:
 7221              	.LFB1474:
 794:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7222              		.loc 6 794 0
 7223              		.cfi_startproc
 7224 0000 55       		pushq	%rbp
 7225              		.cfi_def_cfa_offset 16
 7226              		.cfi_offset 6, -16
 7227 0001 4889E5   		movq	%rsp, %rbp
 7228              		.cfi_def_cfa_register 6
 7229 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7230 0008 488975F0 		movq	%rsi, -16(%rbp)
 795:/usr/include/c++/5/bits/stl_vector.h **** 
 7231              		.loc 6 795 0
 7232 000c 488B45F8 		movq	-8(%rbp), %rax
 7233 0010 488B08   		movq	(%rax), %rcx
 7234 0013 488B55F0 		movq	-16(%rbp), %rdx
 7235 0017 4889D0   		movq	%rdx, %rax
 7236 001a 48C1E002 		salq	$2, %rax
 7237 001e 4801D0   		addq	%rdx, %rax
 7238 0021 48C1E003 		salq	$3, %rax
 7239 0025 4801C8   		addq	%rcx, %rax
 7240 0028 5D       		popq	%rbp
 7241              		.cfi_def_cfa 7, 8
 7242 0029 C3       		ret
 7243              		.cfi_endproc
 7244              	.LFE1474:
 7246              		.text
 7248              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCo
 7249              	.LFB1475:
  16:../ExecuteTest.h **** {
 7250              		.loc 7 16 0
 7251              		.cfi_startproc
 7252              		.cfi_personality 0x3,__gxx_personality_v0
 7253              		.cfi_lsda 0x3,.LLSDA1475
 7254 3078 55       		pushq	%rbp
 7255              		.cfi_def_cfa_offset 16
 7256              		.cfi_offset 6, -16
 7257 3079 4889E5   		movq	%rsp, %rbp
 7258              		.cfi_def_cfa_register 6
 7259 307c 4154     		pushq	%r12
 7260 307e 53       		pushq	%rbx
 7261 307f 4881EC50 		subq	$1616, %rsp
 7261      060000
 7262              		.cfi_offset 12, -24
 7263              		.cfi_offset 3, -32
 7264 3086 4889BDA8 		movq	%rdi, -1624(%rbp)
 7264      F9FFFF
 7265 308d 4889B5A0 		movq	%rsi, -1632(%rbp)
 7265      F9FFFF
  16:../ExecuteTest.h **** {
 7266              		.loc 7 16 0
 7267 3094 64488B04 		movq	%fs:40, %rax
 7267      25280000 
 7267      00
 7268 309d 488945E8 		movq	%rax, -24(%rbp)
 7269 30a1 31C0     		xorl	%eax, %eax
 7270              	.LEHB210:
  18:../ExecuteTest.h **** 
 7271              		.loc 7 18 0
 7272 30a3 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7272      00
 7273              	.LEHE210:
 7274 30a8 4889C2   		movq	%rax, %rdx
 7275 30ab 488B85A0 		movq	-1632(%rbp), %rax
 7275      F9FFFF
 7276 30b2 488902   		movq	%rax, (%rdx)
 7277              	.LBB135:
  23:../ExecuteTest.h **** #endif
 7278              		.loc 7 23 0
 7279 30b5 488D8580 		leaq	-1152(%rbp), %rax
 7279      FBFFFF
 7280 30bc 4889C7   		movq	%rax, %rdi
 7281              	.LEHB211:
 7282 30bf E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7282      00
 7283              	.LEHE211:
  23:../ExecuteTest.h **** #endif
 7284              		.loc 7 23 0 is_stmt 0 discriminator 1
 7285 30c4 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7285      000000
 7286 30cb BE010000 		movl	$1, %esi
 7286      00
 7287 30d0 4889C7   		movq	%rax, %rdi
 7288 30d3 E8000000 		call	__sigsetjmp
 7288      00
 7289 30d8 85C0     		testl	%eax, %eax
 7290 30da 0F95C0   		setne	%al
 7291 30dd 84C0     		testb	%al, %al
 7292 30df 7423     		je	.L419
  23:../ExecuteTest.h **** #endif
 7293              		.loc 7 23 0 discriminator 3
 7294 30e1 BF080000 		movl	$8, %edi
 7294      00
 7295 30e6 E8000000 		call	__cxa_allocate_exception
 7295      00
 7296 30eb 48C70000 		movq	$.LC32, (%rax)
 7296      000000
 7297 30f2 BA000000 		movl	$0, %edx
 7297      00
 7298 30f7 BE000000 		movl	$_ZTIPKc, %esi
 7298      00
 7299 30fc 4889C7   		movq	%rax, %rdi
 7300              	.LEHB212:
 7301 30ff E8000000 		call	__cxa_throw
 7301      00
 7302              	.L419:
  25:../ExecuteTest.h **** 	}
 7303              		.loc 7 25 0 is_stmt 1
 7304 3104 488B85A8 		movq	-1624(%rbp), %rax
 7304      F9FFFF
 7305 310b 4889C7   		movq	%rax, %rdi
 7306 310e E8E9EFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 7306      FF
 7307              	.LEHE212:
  23:../ExecuteTest.h **** #endif
 7308              		.loc 7 23 0
 7309 3113 488D8580 		leaq	-1152(%rbp), %rax
 7309      FBFFFF
 7310 311a 4889C7   		movq	%rax, %rdi
 7311              	.LEHB213:
 7312 311d E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7312      00
 7313              	.LEHE213:
 7314              	.LBE135:
 7315              		.loc 7 42 0
 7316 3122 E9F00100 		jmp	.L399
 7316      00
 7317              	.L414:
 7318 3127 4989C4   		movq	%rax, %r12
 7319 312a 4889D3   		movq	%rdx, %rbx
 7320              	.LBB136:
  23:../ExecuteTest.h **** #endif
 7321              		.loc 7 23 0
 7322 312d 488D8580 		leaq	-1152(%rbp), %rax
 7322      FBFFFF
 7323 3134 4889C7   		movq	%rax, %rdi
 7324 3137 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7324      00
 7325 313c 4C89E0   		movq	%r12, %rax
 7326 313f 4889DA   		movq	%rbx, %rdx
 7327 3142 EB00     		jmp	.L403
 7328              	.L413:
 7329              	.L403:
 7330 3144 4883FA01 		cmpq	$1, %rdx
 7331 3148 740F     		je	.L405
 7332 314a 4883FA02 		cmpq	$2, %rdx
 7333 314e 0F84A600 		je	.L406
 7333      0000
 7334 3154 E9430100 		jmp	.L420
 7334      00
 7335              	.L405:
 7336              	.LBE136:
 7337              	.LBB137:
  27:../ExecuteTest.h **** 	{
 7338              		.loc 7 27 0
 7339 3159 4889C7   		movq	%rax, %rdi
 7340 315c E8000000 		call	__cxa_begin_catch
 7340      00
 7341 3161 488985B0 		movq	%rax, -1616(%rbp)
 7341      F9FFFF
  30:../ExecuteTest.h **** 	}
 7342              		.loc 7 30 0
 7343 3168 488B85B0 		movq	-1616(%rbp), %rax
 7343      F9FFFF
 7344 316f 488B00   		movq	(%rax), %rax
 7345 3172 4883C010 		addq	$16, %rax
 7346 3176 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7347              		.loc 7 29 0
 7348 3179 488B95B0 		movq	-1616(%rbp), %rdx
 7348      F9FFFF
 7349 3180 4889D7   		movq	%rdx, %rdi
 7350 3183 FFD0     		call	*%rax
 7351 3185 4889C3   		movq	%rax, %rbx
 7352 3188 488B85B0 		movq	-1616(%rbp), %rax
 7352      F9FFFF
 7353 318f 4889C7   		movq	%rax, %rdi
 7354              	.LEHB214:
 7355 3192 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7355      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7356              		.loc 7 29 0 is_stmt 0 discriminator 1
 7357 3197 4189C4   		movl	%eax, %r12d
 7358 319a 488B85B0 		movq	-1616(%rbp), %rax
 7358      F9FFFF
 7359 31a1 4889C7   		movq	%rax, %rdi
 7360 31a4 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7360      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7361              		.loc 7 29 0 discriminator 2
 7362 31a9 4889C1   		movq	%rax, %rcx
 7363 31ac 488B85A0 		movq	-1632(%rbp), %rax
 7363      F9FFFF
 7364 31b3 488B10   		movq	(%rax), %rdx
 7365 31b6 488B85A0 		movq	-1632(%rbp), %rax
 7365      F9FFFF
 7366 31bd 488B7008 		movq	8(%rax), %rsi
 7367 31c1 488D85C0 		leaq	-1600(%rbp), %rax
 7367      F9FFFF
 7368 31c8 4589E0   		movl	%r12d, %r8d
 7369 31cb 4889C7   		movq	%rax, %rdi
 7370 31ce E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7370      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7371              		.loc 7 29 0 discriminator 4
 7372 31d3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7372      00
 7373 31d8 488B00   		movq	(%rax), %rax
 7374 31db 488D8DC0 		leaq	-1600(%rbp), %rcx
 7374      F9FFFF
 7375 31e2 4889DA   		movq	%rbx, %rdx
 7376 31e5 4889CE   		movq	%rcx, %rsi
 7377 31e8 4889C7   		movq	%rax, %rdi
 7378 31eb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7378      00
 7379              	.LEHE214:
  27:../ExecuteTest.h **** 	{
 7380              		.loc 7 27 0 is_stmt 1 discriminator 8
 7381 31f0 E8000000 		call	__cxa_end_catch
 7381      00
 7382              	.LBE137:
 7383              		.loc 7 42 0 discriminator 8
 7384 31f5 E91D0100 		jmp	.L399
 7384      00
 7385              	.L406:
 7386              	.LBB138:
  32:../ExecuteTest.h **** 	{
 7387              		.loc 7 32 0
 7388 31fa 4889C7   		movq	%rax, %rdi
 7389 31fd E8000000 		call	__cxa_begin_catch
 7389      00
 7390 3202 488985B8 		movq	%rax, -1608(%rbp)
 7390      F9FFFF
 7391              	.LBB139:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7392              		.loc 7 34 0
 7393 3209 488D85E0 		leaq	-1568(%rbp), %rax
 7393      F9FFFF
 7394 3210 4889C7   		movq	%rax, %rdi
 7395              	.LEHB215:
 7396 3213 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7396      00
 7397              	.LEHE215:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7398              		.loc 7 35 0
 7399 3218 488B85B8 		movq	-1608(%rbp), %rax
 7399      F9FFFF
 7400 321f 488B00   		movq	(%rax), %rax
 7401 3222 4883C010 		addq	$16, %rax
 7402 3226 488B00   		movq	(%rax), %rax
 7403 3229 488B95B8 		movq	-1608(%rbp), %rdx
 7403      F9FFFF
 7404 3230 4889D7   		movq	%rdx, %rdi
 7405 3233 FFD0     		call	*%rax
 7406 3235 4889C3   		movq	%rax, %rbx
 7407 3238 488D85E0 		leaq	-1568(%rbp), %rax
 7407      F9FFFF
 7408 323f BE000000 		movl	$.LC6, %esi
 7408      00
 7409 3244 4889C7   		movq	%rax, %rdi
 7410              	.LEHB216:
 7411 3247 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7411      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7412              		.loc 7 35 0 is_stmt 0 discriminator 1
 7413 324c 4889DE   		movq	%rbx, %rsi
 7414 324f 4889C7   		movq	%rax, %rdi
 7415 3252 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7415      00
  36:../ExecuteTest.h **** 	}
 7416              		.loc 7 36 0 is_stmt 1
 7417 3257 488D85E0 		leaq	-1568(%rbp), %rax
 7417      F9FFFF
 7418 325e 4889C7   		movq	%rax, %rdi
 7419 3261 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7419      00
 7420 3266 4889C3   		movq	%rax, %rbx
 7421 3269 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7421      00
  36:../ExecuteTest.h **** 	}
 7422              		.loc 7 36 0 is_stmt 0 discriminator 1
 7423 326e 488B00   		movq	(%rax), %rax
 7424 3271 488B8DA0 		movq	-1632(%rbp), %rcx
 7424      F9FFFF
 7425 3278 4889DA   		movq	%rbx, %rdx
 7426 327b 4889CE   		movq	%rcx, %rsi
 7427 327e 4889C7   		movq	%rax, %rdi
 7428 3281 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7428      00
 7429              	.LEHE216:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7430              		.loc 7 34 0 is_stmt 1
 7431 3286 488D85E0 		leaq	-1568(%rbp), %rax
 7431      F9FFFF
 7432 328d 4889C7   		movq	%rax, %rdi
 7433              	.LEHB217:
 7434 3290 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7434      00
 7435              	.LEHE217:
 7436              	.LBE139:
  32:../ExecuteTest.h **** 	{
 7437              		.loc 7 32 0
 7438 3295 E8000000 		call	__cxa_end_catch
 7438      00
 7439              	.LBE138:
 7440              		.loc 7 42 0
 7441 329a EB7B     		jmp	.L399
 7442              	.L420:
  38:../ExecuteTest.h **** 	{
 7443              		.loc 7 38 0
 7444 329c 4889C7   		movq	%rax, %rdi
 7445 329f E8000000 		call	__cxa_begin_catch
 7445      00
 7446              	.LEHB218:
  40:../ExecuteTest.h **** 	}
 7447              		.loc 7 40 0
 7448 32a4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7448      00
 7449 32a9 488B00   		movq	(%rax), %rax
 7450 32ac 488B8DA0 		movq	-1632(%rbp), %rcx
 7450      F9FFFF
 7451 32b3 BA000000 		movl	$.LC33, %edx
 7451      00
 7452 32b8 4889CE   		movq	%rcx, %rsi
 7453 32bb 4889C7   		movq	%rax, %rdi
 7454 32be E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7454      00
 7455              	.LEHE218:
 7456              	.LEHB219:
  38:../ExecuteTest.h **** 	{
 7457              		.loc 7 38 0
 7458 32c3 E8000000 		call	__cxa_end_catch
 7458      00
 7459              		.loc 7 42 0
 7460 32c8 EB4D     		jmp	.L399
 7461              	.L415:
 7462 32ca 4889C3   		movq	%rax, %rbx
 7463              	.LBB141:
  27:../ExecuteTest.h **** 	{
 7464              		.loc 7 27 0
 7465 32cd E8000000 		call	__cxa_end_catch
 7465      00
 7466 32d2 4889D8   		movq	%rbx, %rax
 7467 32d5 4889C7   		movq	%rax, %rdi
 7468 32d8 E8000000 		call	_Unwind_Resume
 7468      00
 7469              	.LEHE219:
 7470              	.L417:
 7471 32dd 4889C3   		movq	%rax, %rbx
 7472              	.LBE141:
 7473              	.LBB142:
 7474              	.LBB140:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7475              		.loc 7 34 0
 7476 32e0 488D85E0 		leaq	-1568(%rbp), %rax
 7476      F9FFFF
 7477 32e7 4889C7   		movq	%rax, %rdi
 7478 32ea E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7478      00
 7479 32ef EB03     		jmp	.L410
 7480              	.L416:
 7481 32f1 4889C3   		movq	%rax, %rbx
 7482              	.L410:
 7483              	.LBE140:
  32:../ExecuteTest.h **** 	{
 7484              		.loc 7 32 0
 7485 32f4 E8000000 		call	__cxa_end_catch
 7485      00
 7486 32f9 4889D8   		movq	%rbx, %rax
 7487 32fc 4889C7   		movq	%rax, %rdi
 7488              	.LEHB220:
 7489 32ff E8000000 		call	_Unwind_Resume
 7489      00
 7490              	.LEHE220:
 7491              	.L418:
 7492 3304 4889C3   		movq	%rax, %rbx
 7493              	.LBE142:
  38:../ExecuteTest.h **** 	{
 7494              		.loc 7 38 0
 7495 3307 E8000000 		call	__cxa_end_catch
 7495      00
 7496 330c 4889D8   		movq	%rbx, %rax
 7497 330f 4889C7   		movq	%rax, %rdi
 7498              	.LEHB221:
 7499 3312 E8000000 		call	_Unwind_Resume
 7499      00
 7500              	.LEHE221:
 7501              	.L399:
 7502              		.loc 7 42 0
 7503 3317 488B45E8 		movq	-24(%rbp), %rax
 7504 331b 64483304 		xorq	%fs:40, %rax
 7504      25280000 
 7504      00
 7505 3324 7405     		je	.L412
 7506 3326 E8000000 		call	__stack_chk_fail
 7506      00
 7507              	.L412:
 7508 332b 4881C450 		addq	$1616, %rsp
 7508      060000
 7509 3332 5B       		popq	%rbx
 7510 3333 415C     		popq	%r12
 7511 3335 5D       		popq	%rbp
 7512              		.cfi_def_cfa 7, 8
 7513 3336 C3       		ret
 7514              		.cfi_endproc
 7515              	.LFE1475:
 7516              		.section	.gcc_except_table
 7517              		.align 4
 7518              	.LLSDA1475:
 7519 05d0 FF       		.byte	0xff
 7520 05d1 03       		.byte	0x3
 7521 05d2 59       		.uleb128 .LLSDATT1475-.LLSDATTD1475
 7522              	.LLSDATTD1475:
 7523 05d3 01       		.byte	0x1
 7524 05d4 42       		.uleb128 .LLSDACSE1475-.LLSDACSB1475
 7525              	.LLSDACSB1475:
 7526 05d5 2B       		.uleb128 .LEHB210-.LFB1475
 7527 05d6 05       		.uleb128 .LEHE210-.LEHB210
 7528 05d7 00       		.uleb128 0
 7529 05d8 00       		.uleb128 0
 7530 05d9 47       		.uleb128 .LEHB211-.LFB1475
 7531 05da 05       		.uleb128 .LEHE211-.LEHB211
 7532 05db CC01     		.uleb128 .L413-.LFB1475
 7533 05dd 05       		.uleb128 0x5
 7534 05de 8701     		.uleb128 .LEHB212-.LFB1475
 7535 05e0 14       		.uleb128 .LEHE212-.LEHB212
 7536 05e1 AF01     		.uleb128 .L414-.LFB1475
 7537 05e3 07       		.uleb128 0x7
 7538 05e4 A501     		.uleb128 .LEHB213-.LFB1475
 7539 05e6 05       		.uleb128 .LEHE213-.LEHB213
 7540 05e7 CC01     		.uleb128 .L413-.LFB1475
 7541 05e9 05       		.uleb128 0x5
 7542 05ea 9A02     		.uleb128 .LEHB214-.LFB1475
 7543 05ec 5E       		.uleb128 .LEHE214-.LEHB214
 7544 05ed D204     		.uleb128 .L415-.LFB1475
 7545 05ef 00       		.uleb128 0
 7546 05f0 9B03     		.uleb128 .LEHB215-.LFB1475
 7547 05f2 05       		.uleb128 .LEHE215-.LEHB215
 7548 05f3 F904     		.uleb128 .L416-.LFB1475
 7549 05f5 00       		.uleb128 0
 7550 05f6 CF03     		.uleb128 .LEHB216-.LFB1475
 7551 05f8 3F       		.uleb128 .LEHE216-.LEHB216
 7552 05f9 E504     		.uleb128 .L417-.LFB1475
 7553 05fb 00       		.uleb128 0
 7554 05fc 9804     		.uleb128 .LEHB217-.LFB1475
 7555 05fe 05       		.uleb128 .LEHE217-.LEHB217
 7556 05ff F904     		.uleb128 .L416-.LFB1475
 7557 0601 00       		.uleb128 0
 7558 0602 AC04     		.uleb128 .LEHB218-.LFB1475
 7559 0604 1F       		.uleb128 .LEHE218-.LEHB218
 7560 0605 8C05     		.uleb128 .L418-.LFB1475
 7561 0607 00       		.uleb128 0
 7562 0608 CB04     		.uleb128 .LEHB219-.LFB1475
 7563 060a 1A       		.uleb128 .LEHE219-.LEHB219
 7564 060b 00       		.uleb128 0
 7565 060c 00       		.uleb128 0
 7566 060d 8705     		.uleb128 .LEHB220-.LFB1475
 7567 060f 05       		.uleb128 .LEHE220-.LEHB220
 7568 0610 00       		.uleb128 0
 7569 0611 00       		.uleb128 0
 7570 0612 9A05     		.uleb128 .LEHB221-.LFB1475
 7571 0614 05       		.uleb128 .LEHE221-.LEHB221
 7572 0615 00       		.uleb128 0
 7573 0616 00       		.uleb128 0
 7574              	.LLSDACSE1475:
 7575 0617 03       		.byte	0x3
 7576 0618 00       		.byte	0
 7577 0619 02       		.byte	0x2
 7578 061a 7D       		.byte	0x7d
 7579 061b 01       		.byte	0x1
 7580 061c 7D       		.byte	0x7d
 7581 061d 00       		.byte	0
 7582 061e 7D       		.byte	0x7d
 7583 061f 00       		.align 4
 7584 0620 00000000 		.long	0
 7585              	
 7586 0624 00000000 		.long	_ZTISt9exception
 7587 0628 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7588              	.LLSDATT1475:
 7589              		.text
 7591              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7592              		.align 2
 7593              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
 7595              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm:
 7596              	.LFB1476:
 827:/usr/include/c++/5/bits/stl_vector.h **** 
 828:/usr/include/c++/5/bits/stl_vector.h ****       /**
 829:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 830:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 831:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 832:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 833:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 834:/usr/include/c++/5/bits/stl_vector.h ****        *
 835:/usr/include/c++/5/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 836:/usr/include/c++/5/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 837:/usr/include/c++/5/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 838:/usr/include/c++/5/bits/stl_vector.h ****        */
 839:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 840:/usr/include/c++/5/bits/stl_vector.h ****       at(size_type __n) const
 7597              		.loc 6 840 0
 7598              		.cfi_startproc
 7599 0000 55       		pushq	%rbp
 7600              		.cfi_def_cfa_offset 16
 7601              		.cfi_offset 6, -16
 7602 0001 4889E5   		movq	%rsp, %rbp
 7603              		.cfi_def_cfa_register 6
 7604 0004 4883EC10 		subq	$16, %rsp
 7605 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7606 000c 488975F0 		movq	%rsi, -16(%rbp)
 841:/usr/include/c++/5/bits/stl_vector.h ****       {
 842:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_check(__n);
 7607              		.loc 6 842 0
 7608 0010 488B55F0 		movq	-16(%rbp), %rdx
 7609 0014 488B45F8 		movq	-8(%rbp), %rax
 7610 0018 4889D6   		movq	%rdx, %rsi
 7611 001b 4889C7   		movq	%rax, %rdi
 7612 001e E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_rang
 7612      00
 843:/usr/include/c++/5/bits/stl_vector.h **** 	return (*this)[__n];
 7613              		.loc 6 843 0
 7614 0023 488B55F0 		movq	-16(%rbp), %rdx
 7615 0027 488B45F8 		movq	-8(%rbp), %rax
 7616 002b 4889D6   		movq	%rdx, %rsi
 7617 002e 4889C7   		movq	%rax, %rdi
 7618 0031 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 7618      00
 844:/usr/include/c++/5/bits/stl_vector.h ****       }
 7619              		.loc 6 844 0
 7620 0036 C9       		leave
 7621              		.cfi_def_cfa 7, 8
 7622 0037 C3       		ret
 7623              		.cfi_endproc
 7624              	.LFE1476:
 7626              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 7627              		.align 2
 7628              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 7630              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 7631              	.LFB1502:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 7632              		.loc 6 79 0
 7633              		.cfi_startproc
 7634 0000 55       		pushq	%rbp
 7635              		.cfi_def_cfa_offset 16
 7636              		.cfi_offset 6, -16
 7637 0001 4889E5   		movq	%rsp, %rbp
 7638              		.cfi_def_cfa_register 6
 7639 0004 4883EC10 		subq	$16, %rsp
 7640 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7641              	.LBB143:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 7642              		.loc 6 79 0
 7643 000c 488B45F8 		movq	-8(%rbp), %rax
 7644 0010 4889C7   		movq	%rax, %rdi
 7645 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 7645      00
 7646              	.LBE143:
 7647 0018 90       		nop
 7648 0019 C9       		leave
 7649              		.cfi_def_cfa 7, 8
 7650 001a C3       		ret
 7651              		.cfi_endproc
 7652              	.LFE1502:
 7654              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7655              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 7656              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZN
 7657              		.align 2
 7658              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 7660              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 7661              	.LFB1504:
 124:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl() { }
 7662              		.loc 6 124 0
 7663              		.cfi_startproc
 7664 0000 55       		pushq	%rbp
 7665              		.cfi_def_cfa_offset 16
 7666              		.cfi_offset 6, -16
 7667 0001 4889E5   		movq	%rsp, %rbp
 7668              		.cfi_def_cfa_register 6
 7669 0004 4883EC10 		subq	$16, %rsp
 7670 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7671              	.LBB144:
 125:/usr/include/c++/5/bits/stl_vector.h **** 
 7672              		.loc 6 125 0
 7673 000c 488B45F8 		movq	-8(%rbp), %rax
 7674 0010 4889C7   		movq	%rax, %rdi
 7675 0013 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 7675      00
 7676              	.LBE144:
 7677 0018 90       		nop
 7678 0019 C9       		leave
 7679              		.cfi_def_cfa 7, 8
 7680 001a C3       		ret
 7681              		.cfi_endproc
 7682              	.LFE1504:
 7684              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 7685              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt12_Vector_baseIN8UnitTes
 7686              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 7687              		.align 2
 7688              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 7690              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 7691              	.LFB1507:
 159:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 7692              		.loc 6 159 0
 7693              		.cfi_startproc
 7694              		.cfi_personality 0x3,__gxx_personality_v0
 7695              		.cfi_lsda 0x3,.LLSDA1507
 7696 0000 55       		pushq	%rbp
 7697              		.cfi_def_cfa_offset 16
 7698              		.cfi_offset 6, -16
 7699 0001 4889E5   		movq	%rsp, %rbp
 7700              		.cfi_def_cfa_register 6
 7701 0004 53       		pushq	%rbx
 7702 0005 4883EC18 		subq	$24, %rsp
 7703              		.cfi_offset 3, -24
 7704 0009 48897DE8 		movq	%rdi, -24(%rbp)
 7705              	.LBB145:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 7706              		.loc 6 161 0
 7707 000d 488B45E8 		movq	-24(%rbp), %rax
 7708 0011 488B4010 		movq	16(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 7709              		.loc 6 160 0
 7710 0015 4889C2   		movq	%rax, %rdx
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 7711              		.loc 6 161 0
 7712 0018 488B45E8 		movq	-24(%rbp), %rax
 7713 001c 488B00   		movq	(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 7714              		.loc 6 160 0
 7715 001f 4829C2   		subq	%rax, %rdx
 7716 0022 4889D0   		movq	%rdx, %rax
 7717 0025 48C1F807 		sarq	$7, %rax
 7718 0029 4889C2   		movq	%rax, %rdx
 7719 002c 488B45E8 		movq	-24(%rbp), %rax
 7720 0030 488B08   		movq	(%rax), %rcx
 7721 0033 488B45E8 		movq	-24(%rbp), %rax
 7722 0037 4889CE   		movq	%rcx, %rsi
 7723 003a 4889C7   		movq	%rax, %rdi
 7724              	.LEHB222:
 7725 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 7725      00
 7726              	.LEHE222:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 7727              		.loc 6 161 0
 7728 0042 488B45E8 		movq	-24(%rbp), %rax
 7729 0046 4889C7   		movq	%rax, %rdi
 7730 0049 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7730      00
 7731              	.LBE145:
 7732 004e EB1A     		jmp	.L428
 7733              	.L427:
 7734 0050 4889C3   		movq	%rax, %rbx
 7735              	.LBB146:
 7736 0053 488B45E8 		movq	-24(%rbp), %rax
 7737 0057 4889C7   		movq	%rax, %rdi
 7738 005a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7738      00
 7739 005f 4889D8   		movq	%rbx, %rax
 7740 0062 4889C7   		movq	%rax, %rdi
 7741              	.LEHB223:
 7742 0065 E8000000 		call	_Unwind_Resume
 7742      00
 7743              	.LEHE223:
 7744              	.L428:
 7745              	.LBE146:
 7746 006a 4883C418 		addq	$24, %rsp
 7747 006e 5B       		popq	%rbx
 7748 006f 5D       		popq	%rbp
 7749              		.cfi_def_cfa 7, 8
 7750 0070 C3       		ret
 7751              		.cfi_endproc
 7752              	.LFE1507:
 7753              		.section	.gcc_except_table
 7754              	.LLSDA1507:
 7755 062c FF       		.byte	0xff
 7756 062d FF       		.byte	0xff
 7757 062e 01       		.byte	0x1
 7758 062f 08       		.uleb128 .LLSDACSE1507-.LLSDACSB1507
 7759              	.LLSDACSB1507:
 7760 0630 3D       		.uleb128 .LEHB222-.LFB1507
 7761 0631 05       		.uleb128 .LEHE222-.LEHB222
 7762 0632 50       		.uleb128 .L427-.LFB1507
 7763 0633 00       		.uleb128 0
 7764 0634 65       		.uleb128 .LEHB223-.LFB1507
 7765 0635 05       		.uleb128 .LEHE223-.LEHB223
 7766 0636 00       		.uleb128 0
 7767 0637 00       		.uleb128 0
 7768              	.LLSDACSE1507:
 7769              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 7771              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 7772              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 7773              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 7774              		.align 2
 7775              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 7777              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 7778              	.LFB1509:
 113:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 7779              		.loc 6 113 0
 7780              		.cfi_startproc
 7781 0000 55       		pushq	%rbp
 7782              		.cfi_def_cfa_offset 16
 7783              		.cfi_offset 6, -16
 7784 0001 4889E5   		movq	%rsp, %rbp
 7785              		.cfi_def_cfa_register 6
 7786 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/bits/stl_vector.h **** 
 7787              		.loc 6 114 0
 7788 0008 488B45F8 		movq	-8(%rbp), %rax
 7789 000c 5D       		popq	%rbp
 7790              		.cfi_def_cfa 7, 8
 7791 000d C3       		ret
 7792              		.cfi_endproc
 7793              	.LFE1509:
 7795              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 7796              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 7798              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 7799              	.LFB1510:
 7800              		.file 9 "/usr/include/c++/5/bits/stl_construct.h"
   1:/usr/include/c++/5/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_construct.h **** 
   3:/usr/include/c++/5/bits/stl_construct.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_construct.h **** //
   5:/usr/include/c++/5/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_construct.h **** 
  11:/usr/include/c++/5/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_construct.h **** 
  16:/usr/include/c++/5/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_construct.h **** 
  20:/usr/include/c++/5/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_construct.h **** 
  25:/usr/include/c++/5/bits/stl_construct.h **** /*
  26:/usr/include/c++/5/bits/stl_construct.h ****  *
  27:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_construct.h ****  *
  30:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_construct.h ****  *
  38:/usr/include/c++/5/bits/stl_construct.h ****  *
  39:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_construct.h ****  *
  42:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_construct.h ****  */
  50:/usr/include/c++/5/bits/stl_construct.h **** 
  51:/usr/include/c++/5/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/5/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/5/bits/stl_construct.h ****  */
  55:/usr/include/c++/5/bits/stl_construct.h **** 
  56:/usr/include/c++/5/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/5/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/5/bits/stl_construct.h **** 
  59:/usr/include/c++/5/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/5/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/5/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/5/bits/stl_construct.h **** 
  63:/usr/include/c++/5/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/5/bits/stl_construct.h **** {
  65:/usr/include/c++/5/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/5/bits/stl_construct.h **** 
  67:/usr/include/c++/5/bits/stl_construct.h ****   /**
  68:/usr/include/c++/5/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/5/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/5/bits/stl_construct.h ****    */
  71:/usr/include/c++/5/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/5/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/5/bits/stl_construct.h **** #else
  77:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/5/bits/stl_construct.h ****     {
  81:/usr/include/c++/5/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/5/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/5/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/5/bits/stl_construct.h ****     }
  85:/usr/include/c++/5/bits/stl_construct.h **** #endif
  86:/usr/include/c++/5/bits/stl_construct.h **** 
  87:/usr/include/c++/5/bits/stl_construct.h ****   /**
  88:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/5/bits/stl_construct.h ****    */
  90:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/5/bits/stl_construct.h **** 
  95:/usr/include/c++/5/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/5/bits/stl_construct.h ****     {
  98:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/5/bits/stl_construct.h ****         static void
 100:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/5/bits/stl_construct.h **** 	{
 102:/usr/include/c++/5/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/5/bits/stl_construct.h **** 	}
 105:/usr/include/c++/5/bits/stl_construct.h ****     };
 106:/usr/include/c++/5/bits/stl_construct.h **** 
 107:/usr/include/c++/5/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/5/bits/stl_construct.h ****     {
 110:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/5/bits/stl_construct.h ****         static void
 112:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/5/bits/stl_construct.h ****     };
 114:/usr/include/c++/5/bits/stl_construct.h **** 
 115:/usr/include/c++/5/bits/stl_construct.h ****   /**
 116:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/5/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/5/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/5/bits/stl_construct.h ****    */
 120:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/5/bits/stl_construct.h ****     {
 124:/usr/include/c++/5/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/5/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/5/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/5/bits/stl_construct.h ****     }
 129:/usr/include/c++/5/bits/stl_construct.h **** 
 130:/usr/include/c++/5/bits/stl_construct.h ****   /**
 131:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/5/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/5/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/5/bits/stl_construct.h ****    */
 135:/usr/include/c++/5/bits/stl_construct.h **** 
 136:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/5/bits/stl_construct.h ****     void
 138:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/5/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/5/bits/stl_construct.h ****     {
 141:/usr/include/c++/5/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/5/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/5/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/5/bits/stl_construct.h ****     }
 145:/usr/include/c++/5/bits/stl_construct.h **** 
 146:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 7801              		.loc 9 148 0
 7802              		.cfi_startproc
 7803 0000 55       		pushq	%rbp
 7804              		.cfi_def_cfa_offset 16
 7805              		.cfi_offset 6, -16
 7806 0001 4889E5   		movq	%rsp, %rbp
 7807              		.cfi_def_cfa_register 6
 7808 0004 4883EC20 		subq	$32, %rsp
 7809 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7810 000c 488975F0 		movq	%rsi, -16(%rbp)
 7811 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/5/bits/stl_construct.h ****     {
 151:/usr/include/c++/5/bits/stl_construct.h ****       _Destroy(__first, __last);
 7812              		.loc 9 151 0
 7813 0014 488B55F0 		movq	-16(%rbp), %rdx
 7814 0018 488B45F8 		movq	-8(%rbp), %rax
 7815 001c 4889D6   		movq	%rdx, %rsi
 7816 001f 4889C7   		movq	%rax, %rdi
 7817 0022 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 7817      00
 152:/usr/include/c++/5/bits/stl_construct.h ****     }
 7818              		.loc 9 152 0
 7819 0027 90       		nop
 7820 0028 C9       		leave
 7821              		.cfi_def_cfa 7, 8
 7822 0029 C3       		ret
 7823              		.cfi_endproc
 7824              	.LFE1510:
 7826              		.section	.rodata
 7827 0575 000000   		.align 8
 7828              	.LC37:
 7829 0578 76656374 		.string	"vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)"
 7829      6F723A3A 
 7829      5F4D5F72 
 7829      616E6765 
 7829      5F636865 
 7830              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm,"axG",@prog
 7831              		.align 2
 7832              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 7834              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:
 7835              	.LFB1519:
 800:/usr/include/c++/5/bits/stl_vector.h ****       {
 7836              		.loc 6 800 0
 7837              		.cfi_startproc
 7838 0000 55       		pushq	%rbp
 7839              		.cfi_def_cfa_offset 16
 7840              		.cfi_offset 6, -16
 7841 0001 4889E5   		movq	%rsp, %rbp
 7842              		.cfi_def_cfa_register 6
 7843 0004 4883EC10 		subq	$16, %rsp
 7844 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7845 000c 488975F0 		movq	%rsi, -16(%rbp)
 802:/usr/include/c++/5/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 7846              		.loc 6 802 0
 7847 0010 488B45F8 		movq	-8(%rbp), %rax
 7848 0014 4889C7   		movq	%rax, %rdi
 7849 0017 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 7849      00
 7850 001c 483B45F0 		cmpq	-16(%rbp), %rax
 7851 0020 0F96C0   		setbe	%al
 7852 0023 84C0     		testb	%al, %al
 7853 0025 7425     		je	.L434
 803:/usr/include/c++/5/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 7854              		.loc 6 803 0
 7855 0027 488B45F8 		movq	-8(%rbp), %rax
 7856 002b 4889C7   		movq	%rax, %rdi
 7857 002e E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 7857      00
 7858 0033 4889C2   		movq	%rax, %rdx
 7859 0036 488B45F0 		movq	-16(%rbp), %rax
 7860 003a 4889C6   		movq	%rax, %rsi
 7861 003d BF000000 		movl	$.LC37, %edi
 7861      00
 7862 0042 B8000000 		movl	$0, %eax
 7862      00
 7863 0047 E8000000 		call	_ZSt24__throw_out_of_range_fmtPKcz
 7863      00
 7864              	.L434:
 807:/usr/include/c++/5/bits/stl_vector.h **** 
 7865              		.loc 6 807 0
 7866 004c 90       		nop
 7867 004d C9       		leave
 7868              		.cfi_def_cfa 7, 8
 7869 004e C3       		ret
 7870              		.cfi_endproc
 7871              	.LFE1519:
 7873              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm,"axG",@progbits,_ZNSt6vect
 7874              		.align 2
 7875              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 7877              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:
 7878              	.LFB1520:
 779:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7879              		.loc 6 779 0
 7880              		.cfi_startproc
 7881 0000 55       		pushq	%rbp
 7882              		.cfi_def_cfa_offset 16
 7883              		.cfi_offset 6, -16
 7884 0001 4889E5   		movq	%rsp, %rbp
 7885              		.cfi_def_cfa_register 6
 7886 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7887 0008 488975F0 		movq	%rsi, -16(%rbp)
 780:/usr/include/c++/5/bits/stl_vector.h **** 
 7888              		.loc 6 780 0
 7889 000c 488B45F8 		movq	-8(%rbp), %rax
 7890 0010 488B00   		movq	(%rax), %rax
 7891 0013 488B55F0 		movq	-16(%rbp), %rdx
 7892 0017 48C1E207 		salq	$7, %rdx
 7893 001b 4801D0   		addq	%rdx, %rax
 7894 001e 5D       		popq	%rbp
 7895              		.cfi_def_cfa 7, 8
 7896 001f C3       		ret
 7897              		.cfi_endproc
 7898              	.LFE1520:
 7900              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE,"axG",
 7901              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 7903              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:
 7904              	.LFB1521:
 7905              		.file 10 "/usr/include/c++/5/bits/basic_string.h"
   1:/usr/include/c++/5/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/5/bits/basic_string.h **** 
   3:/usr/include/c++/5/bits/basic_string.h **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/basic_string.h **** //
   5:/usr/include/c++/5/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/5/bits/basic_string.h **** 
  11:/usr/include/c++/5/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/basic_string.h **** 
  16:/usr/include/c++/5/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/basic_string.h **** 
  20:/usr/include/c++/5/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/basic_string.h **** 
  25:/usr/include/c++/5/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/5/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/5/bits/basic_string.h ****  */
  29:/usr/include/c++/5/bits/basic_string.h **** 
  30:/usr/include/c++/5/bits/basic_string.h **** //
  31:/usr/include/c++/5/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/5/bits/basic_string.h **** //
  33:/usr/include/c++/5/bits/basic_string.h **** 
  34:/usr/include/c++/5/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/5/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/5/bits/basic_string.h **** 
  37:/usr/include/c++/5/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/5/bits/basic_string.h **** 
  39:/usr/include/c++/5/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/5/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/5/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
  43:/usr/include/c++/5/bits/basic_string.h **** #include <initializer_list>
  44:/usr/include/c++/5/bits/basic_string.h **** #endif
  45:/usr/include/c++/5/bits/basic_string.h **** 
  46:/usr/include/c++/5/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/5/bits/basic_string.h **** {
  48:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/5/bits/basic_string.h **** 
  50:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  52:/usr/include/c++/5/bits/basic_string.h ****   /**
  53:/usr/include/c++/5/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  54:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  55:/usr/include/c++/5/bits/basic_string.h ****    *
  56:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup strings
  57:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup sequences
  58:/usr/include/c++/5/bits/basic_string.h ****    *
  59:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  60:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/5/bits/basic_string.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  63:/usr/include/c++/5/bits/basic_string.h ****    *
  64:/usr/include/c++/5/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  65:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  66:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  67:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  68:/usr/include/c++/5/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  69:/usr/include/c++/5/bits/basic_string.h ****    */
  70:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  71:/usr/include/c++/5/bits/basic_string.h ****     class basic_string
  72:/usr/include/c++/5/bits/basic_string.h ****     {
  73:/usr/include/c++/5/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  74:/usr/include/c++/5/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  75:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  76:/usr/include/c++/5/bits/basic_string.h **** 
  77:/usr/include/c++/5/bits/basic_string.h ****       // Types:
  78:/usr/include/c++/5/bits/basic_string.h ****     public:
  79:/usr/include/c++/5/bits/basic_string.h ****       typedef _Traits					traits_type;
  80:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  81:/usr/include/c++/5/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  82:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  83:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  84:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  85:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  86:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  87:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  88:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  89:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  90:/usr/include/c++/5/bits/basic_string.h **** 							const_iterator;
  91:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  92:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  93:/usr/include/c++/5/bits/basic_string.h **** 
  94:/usr/include/c++/5/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
  95:/usr/include/c++/5/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
  96:/usr/include/c++/5/bits/basic_string.h **** 
  97:/usr/include/c++/5/bits/basic_string.h ****     private:
  98:/usr/include/c++/5/bits/basic_string.h ****       // type used for positions in insert, erase etc.
  99:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus < 201103L
 100:/usr/include/c++/5/bits/basic_string.h ****       typedef iterator __const_iterator;
 101:/usr/include/c++/5/bits/basic_string.h **** #else
 102:/usr/include/c++/5/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 103:/usr/include/c++/5/bits/basic_string.h **** #endif
 104:/usr/include/c++/5/bits/basic_string.h **** 
 105:/usr/include/c++/5/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 106:/usr/include/c++/5/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 107:/usr/include/c++/5/bits/basic_string.h ****       {
 108:/usr/include/c++/5/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 109:/usr/include/c++/5/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 110:/usr/include/c++/5/bits/basic_string.h **** 
 111:/usr/include/c++/5/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 112:/usr/include/c++/5/bits/basic_string.h ****       };
 113:/usr/include/c++/5/bits/basic_string.h **** 
 114:/usr/include/c++/5/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 115:/usr/include/c++/5/bits/basic_string.h ****       size_type		_M_string_length;
 116:/usr/include/c++/5/bits/basic_string.h **** 
 117:/usr/include/c++/5/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 118:/usr/include/c++/5/bits/basic_string.h **** 
 119:/usr/include/c++/5/bits/basic_string.h ****       union
 120:/usr/include/c++/5/bits/basic_string.h ****       {
 121:/usr/include/c++/5/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 122:/usr/include/c++/5/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 123:/usr/include/c++/5/bits/basic_string.h ****       };
 124:/usr/include/c++/5/bits/basic_string.h **** 
 125:/usr/include/c++/5/bits/basic_string.h ****       void
 126:/usr/include/c++/5/bits/basic_string.h ****       _M_data(pointer __p)
 127:/usr/include/c++/5/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 128:/usr/include/c++/5/bits/basic_string.h **** 
 129:/usr/include/c++/5/bits/basic_string.h ****       void
 130:/usr/include/c++/5/bits/basic_string.h ****       _M_length(size_type __length)
 131:/usr/include/c++/5/bits/basic_string.h ****       { _M_string_length = __length; }
 132:/usr/include/c++/5/bits/basic_string.h **** 
 133:/usr/include/c++/5/bits/basic_string.h ****       pointer
 134:/usr/include/c++/5/bits/basic_string.h ****       _M_data() const
 135:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 136:/usr/include/c++/5/bits/basic_string.h **** 
 137:/usr/include/c++/5/bits/basic_string.h ****       pointer
 138:/usr/include/c++/5/bits/basic_string.h ****       _M_local_data()
 139:/usr/include/c++/5/bits/basic_string.h ****       {
 140:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/5/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 142:/usr/include/c++/5/bits/basic_string.h **** #else
 143:/usr/include/c++/5/bits/basic_string.h **** 	return pointer(_M_local_buf);
 144:/usr/include/c++/5/bits/basic_string.h **** #endif
 145:/usr/include/c++/5/bits/basic_string.h ****       }
 146:/usr/include/c++/5/bits/basic_string.h **** 
 147:/usr/include/c++/5/bits/basic_string.h ****       const_pointer
 148:/usr/include/c++/5/bits/basic_string.h ****       _M_local_data() const
 149:/usr/include/c++/5/bits/basic_string.h ****       {
 150:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 151:/usr/include/c++/5/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 152:/usr/include/c++/5/bits/basic_string.h **** #else
 153:/usr/include/c++/5/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 154:/usr/include/c++/5/bits/basic_string.h **** #endif
 155:/usr/include/c++/5/bits/basic_string.h ****       }
 156:/usr/include/c++/5/bits/basic_string.h **** 
 157:/usr/include/c++/5/bits/basic_string.h ****       void
 158:/usr/include/c++/5/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 159:/usr/include/c++/5/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 160:/usr/include/c++/5/bits/basic_string.h **** 
 161:/usr/include/c++/5/bits/basic_string.h ****       void
 162:/usr/include/c++/5/bits/basic_string.h ****       _M_set_length(size_type __n)
 163:/usr/include/c++/5/bits/basic_string.h ****       {
 164:/usr/include/c++/5/bits/basic_string.h **** 	_M_length(__n);
 165:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 166:/usr/include/c++/5/bits/basic_string.h ****       }
 167:/usr/include/c++/5/bits/basic_string.h **** 
 168:/usr/include/c++/5/bits/basic_string.h ****       bool
 169:/usr/include/c++/5/bits/basic_string.h ****       _M_is_local() const
 170:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 171:/usr/include/c++/5/bits/basic_string.h **** 
 172:/usr/include/c++/5/bits/basic_string.h ****       // Create & Destroy
 173:/usr/include/c++/5/bits/basic_string.h ****       pointer
 174:/usr/include/c++/5/bits/basic_string.h ****       _M_create(size_type&, size_type);
 175:/usr/include/c++/5/bits/basic_string.h **** 
 176:/usr/include/c++/5/bits/basic_string.h ****       void
 177:/usr/include/c++/5/bits/basic_string.h ****       _M_dispose()
 178:/usr/include/c++/5/bits/basic_string.h ****       {
 179:/usr/include/c++/5/bits/basic_string.h **** 	if (!_M_is_local())
 180:/usr/include/c++/5/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 181:/usr/include/c++/5/bits/basic_string.h ****       }
 182:/usr/include/c++/5/bits/basic_string.h **** 
 183:/usr/include/c++/5/bits/basic_string.h ****       void
 184:/usr/include/c++/5/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 185:/usr/include/c++/5/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 186:/usr/include/c++/5/bits/basic_string.h **** 
 187:/usr/include/c++/5/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 188:/usr/include/c++/5/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 189:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 190:/usr/include/c++/5/bits/basic_string.h ****         void
 191:/usr/include/c++/5/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 192:/usr/include/c++/5/bits/basic_string.h **** 			 std::__false_type)
 193:/usr/include/c++/5/bits/basic_string.h **** 	{
 194:/usr/include/c++/5/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 195:/usr/include/c++/5/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 196:/usr/include/c++/5/bits/basic_string.h **** 	}
 197:/usr/include/c++/5/bits/basic_string.h **** 
 198:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 199:/usr/include/c++/5/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 200:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Integer>
 201:/usr/include/c++/5/bits/basic_string.h ****         void
 202:/usr/include/c++/5/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 203:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 204:/usr/include/c++/5/bits/basic_string.h **** 
 205:/usr/include/c++/5/bits/basic_string.h ****       void
 206:/usr/include/c++/5/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 207:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__req, __c); }
 208:/usr/include/c++/5/bits/basic_string.h **** 
 209:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 210:/usr/include/c++/5/bits/basic_string.h ****         void
 211:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 212:/usr/include/c++/5/bits/basic_string.h **** 	{
 213:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 214:/usr/include/c++/5/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 215:/usr/include/c++/5/bits/basic_string.h ****         }
 216:/usr/include/c++/5/bits/basic_string.h **** 
 217:/usr/include/c++/5/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 218:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 219:/usr/include/c++/5/bits/basic_string.h ****         void
 220:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 221:/usr/include/c++/5/bits/basic_string.h **** 		     std::input_iterator_tag);
 222:/usr/include/c++/5/bits/basic_string.h **** 
 223:/usr/include/c++/5/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 224:/usr/include/c++/5/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 225:/usr/include/c++/5/bits/basic_string.h ****       template<typename _FwdIterator>
 226:/usr/include/c++/5/bits/basic_string.h ****         void
 227:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 228:/usr/include/c++/5/bits/basic_string.h **** 		     std::forward_iterator_tag);
 229:/usr/include/c++/5/bits/basic_string.h **** 
 230:/usr/include/c++/5/bits/basic_string.h ****       void
 231:/usr/include/c++/5/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 232:/usr/include/c++/5/bits/basic_string.h **** 
 233:/usr/include/c++/5/bits/basic_string.h ****       allocator_type&
 234:/usr/include/c++/5/bits/basic_string.h ****       _M_get_allocator()
 235:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
 236:/usr/include/c++/5/bits/basic_string.h **** 
 237:/usr/include/c++/5/bits/basic_string.h ****       const allocator_type&
 238:/usr/include/c++/5/bits/basic_string.h ****       _M_get_allocator() const
 239:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
 240:/usr/include/c++/5/bits/basic_string.h **** 
 241:/usr/include/c++/5/bits/basic_string.h ****     private:
 242:/usr/include/c++/5/bits/basic_string.h **** 
 243:/usr/include/c++/5/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 244:/usr/include/c++/5/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 245:/usr/include/c++/5/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 246:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 247:/usr/include/c++/5/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 248:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 249:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 250:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 251:/usr/include/c++/5/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 252:/usr/include/c++/5/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 253:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Tp>
 254:/usr/include/c++/5/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 255:/usr/include/c++/5/bits/basic_string.h **** #endif
 256:/usr/include/c++/5/bits/basic_string.h **** 
 257:/usr/include/c++/5/bits/basic_string.h ****       size_type
 258:/usr/include/c++/5/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 259:/usr/include/c++/5/bits/basic_string.h ****       {
 260:/usr/include/c++/5/bits/basic_string.h **** 	if (__pos > this->size())
 261:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 262:/usr/include/c++/5/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 263:/usr/include/c++/5/bits/basic_string.h **** 				   __s, __pos, this->size());
 264:/usr/include/c++/5/bits/basic_string.h **** 	return __pos;
 265:/usr/include/c++/5/bits/basic_string.h ****       }
 266:/usr/include/c++/5/bits/basic_string.h **** 
 267:/usr/include/c++/5/bits/basic_string.h ****       void
 268:/usr/include/c++/5/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 269:/usr/include/c++/5/bits/basic_string.h ****       {
 270:/usr/include/c++/5/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 271:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 272:/usr/include/c++/5/bits/basic_string.h ****       }
 273:/usr/include/c++/5/bits/basic_string.h **** 
 274:/usr/include/c++/5/bits/basic_string.h **** 
 275:/usr/include/c++/5/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 276:/usr/include/c++/5/bits/basic_string.h ****       size_type
 277:/usr/include/c++/5/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 278:/usr/include/c++/5/bits/basic_string.h ****       {
 279:/usr/include/c++/5/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 280:/usr/include/c++/5/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 281:/usr/include/c++/5/bits/basic_string.h ****       }
 282:/usr/include/c++/5/bits/basic_string.h **** 
 283:/usr/include/c++/5/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 284:/usr/include/c++/5/bits/basic_string.h ****       bool
 285:/usr/include/c++/5/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 286:/usr/include/c++/5/bits/basic_string.h ****       {
 287:/usr/include/c++/5/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 288:/usr/include/c++/5/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 289:/usr/include/c++/5/bits/basic_string.h ****       }
 290:/usr/include/c++/5/bits/basic_string.h **** 
 291:/usr/include/c++/5/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 292:/usr/include/c++/5/bits/basic_string.h ****       // traits_type::copy/move/assign.
 293:/usr/include/c++/5/bits/basic_string.h ****       static void
 294:/usr/include/c++/5/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 295:/usr/include/c++/5/bits/basic_string.h ****       {
 296:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 297:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 298:/usr/include/c++/5/bits/basic_string.h **** 	else
 299:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 300:/usr/include/c++/5/bits/basic_string.h ****       }
 301:/usr/include/c++/5/bits/basic_string.h **** 
 302:/usr/include/c++/5/bits/basic_string.h ****       static void
 303:/usr/include/c++/5/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 304:/usr/include/c++/5/bits/basic_string.h ****       {
 305:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 306:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 307:/usr/include/c++/5/bits/basic_string.h **** 	else
 308:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 309:/usr/include/c++/5/bits/basic_string.h ****       }
 310:/usr/include/c++/5/bits/basic_string.h **** 
 311:/usr/include/c++/5/bits/basic_string.h ****       static void
 312:/usr/include/c++/5/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 313:/usr/include/c++/5/bits/basic_string.h ****       {
 314:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 315:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 316:/usr/include/c++/5/bits/basic_string.h **** 	else
 317:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 318:/usr/include/c++/5/bits/basic_string.h ****       }
 319:/usr/include/c++/5/bits/basic_string.h **** 
 320:/usr/include/c++/5/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 321:/usr/include/c++/5/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 322:/usr/include/c++/5/bits/basic_string.h ****       template<class _Iterator>
 323:/usr/include/c++/5/bits/basic_string.h ****         static void
 324:/usr/include/c++/5/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 325:/usr/include/c++/5/bits/basic_string.h ****         {
 326:/usr/include/c++/5/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 327:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 328:/usr/include/c++/5/bits/basic_string.h **** 	}
 329:/usr/include/c++/5/bits/basic_string.h **** 
 330:/usr/include/c++/5/bits/basic_string.h ****       static void
 331:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 332:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 333:/usr/include/c++/5/bits/basic_string.h **** 
 334:/usr/include/c++/5/bits/basic_string.h ****       static void
 335:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 336:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 337:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 338:/usr/include/c++/5/bits/basic_string.h **** 
 339:/usr/include/c++/5/bits/basic_string.h ****       static void
 340:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 341:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 342:/usr/include/c++/5/bits/basic_string.h **** 
 343:/usr/include/c++/5/bits/basic_string.h ****       static void
 344:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 345:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 346:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 347:/usr/include/c++/5/bits/basic_string.h **** 
 348:/usr/include/c++/5/bits/basic_string.h ****       static int
 349:/usr/include/c++/5/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 350:/usr/include/c++/5/bits/basic_string.h ****       {
 351:/usr/include/c++/5/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 352:/usr/include/c++/5/bits/basic_string.h **** 
 353:/usr/include/c++/5/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 354:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 355:/usr/include/c++/5/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 356:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 357:/usr/include/c++/5/bits/basic_string.h **** 	else
 358:/usr/include/c++/5/bits/basic_string.h **** 	  return int(__d);
 359:/usr/include/c++/5/bits/basic_string.h ****       }
 360:/usr/include/c++/5/bits/basic_string.h **** 
 361:/usr/include/c++/5/bits/basic_string.h ****       void
 362:/usr/include/c++/5/bits/basic_string.h ****       _M_assign(const basic_string& __rcs);
 363:/usr/include/c++/5/bits/basic_string.h **** 
 364:/usr/include/c++/5/bits/basic_string.h ****       void
 365:/usr/include/c++/5/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 366:/usr/include/c++/5/bits/basic_string.h **** 		size_type __len2);
 367:/usr/include/c++/5/bits/basic_string.h **** 
 368:/usr/include/c++/5/bits/basic_string.h ****       void
 369:/usr/include/c++/5/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 370:/usr/include/c++/5/bits/basic_string.h **** 
 371:/usr/include/c++/5/bits/basic_string.h ****     public:
 372:/usr/include/c++/5/bits/basic_string.h ****       // Construct/copy/destroy:
 373:/usr/include/c++/5/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 374:/usr/include/c++/5/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 375:/usr/include/c++/5/bits/basic_string.h **** 
 376:/usr/include/c++/5/bits/basic_string.h ****       /**
 377:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 378:/usr/include/c++/5/bits/basic_string.h ****        */
 379:/usr/include/c++/5/bits/basic_string.h ****       basic_string()
 380:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 381:/usr/include/c++/5/bits/basic_string.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 382:/usr/include/c++/5/bits/basic_string.h **** #endif
 383:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 384:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 385:/usr/include/c++/5/bits/basic_string.h **** 
 386:/usr/include/c++/5/bits/basic_string.h ****       /**
 387:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 388:/usr/include/c++/5/bits/basic_string.h ****        */
 389:/usr/include/c++/5/bits/basic_string.h ****       explicit
 390:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _Alloc& __a)
 391:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 392:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 393:/usr/include/c++/5/bits/basic_string.h **** 
 394:/usr/include/c++/5/bits/basic_string.h ****       /**
 395:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 396:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 397:/usr/include/c++/5/bits/basic_string.h ****        */
 398:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str)
 399:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __str._M_get_allocator()) // TODO A traits
 400:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 401:/usr/include/c++/5/bits/basic_string.h **** 
 402:/usr/include/c++/5/bits/basic_string.h ****       /**
 403:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 404:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 405:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 406:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 407:/usr/include/c++/5/bits/basic_string.h ****        */
 408:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 409:/usr/include/c++/5/bits/basic_string.h ****       // 2402. [this constructor] shouldn't use Allocator()
 410:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 411:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n = npos)
 412:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 413:/usr/include/c++/5/bits/basic_string.h ****       {
 414:/usr/include/c++/5/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 415:/usr/include/c++/5/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 416:/usr/include/c++/5/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 417:/usr/include/c++/5/bits/basic_string.h ****       }
 418:/usr/include/c++/5/bits/basic_string.h **** 
 419:/usr/include/c++/5/bits/basic_string.h ****       /**
 420:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 421:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 422:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 423:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 424:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 425:/usr/include/c++/5/bits/basic_string.h ****        */
 426:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 427:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 428:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 429:/usr/include/c++/5/bits/basic_string.h ****       {
 430:/usr/include/c++/5/bits/basic_string.h **** 	const _CharT* __start
 431:/usr/include/c++/5/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 432:/usr/include/c++/5/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 433:/usr/include/c++/5/bits/basic_string.h ****       }
 434:/usr/include/c++/5/bits/basic_string.h **** 
 435:/usr/include/c++/5/bits/basic_string.h ****       /**
 436:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 437:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source character %array.
 438:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 439:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 440:/usr/include/c++/5/bits/basic_string.h ****        *
 441:/usr/include/c++/5/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 442:/usr/include/c++/5/bits/basic_string.h ****        *  has no special meaning.
 443:/usr/include/c++/5/bits/basic_string.h ****        */
 444:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 445:/usr/include/c++/5/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 446:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 447:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 448:/usr/include/c++/5/bits/basic_string.h **** 
 449:/usr/include/c++/5/bits/basic_string.h ****       /**
 450:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 451:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source C string.
 452:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 453:/usr/include/c++/5/bits/basic_string.h ****        */
 454:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 455:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 456:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 457:/usr/include/c++/5/bits/basic_string.h **** 
 458:/usr/include/c++/5/bits/basic_string.h ****       /**
 459:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 460:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters.
 461:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to use.
 462:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 463:/usr/include/c++/5/bits/basic_string.h ****        */
 464:/usr/include/c++/5/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 465:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 466:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__n, __c); }
 467:/usr/include/c++/5/bits/basic_string.h **** 
 468:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 469:/usr/include/c++/5/bits/basic_string.h ****       /**
 470:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move construct string.
 471:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 472:/usr/include/c++/5/bits/basic_string.h ****        *
 473:/usr/include/c++/5/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 474:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 475:/usr/include/c++/5/bits/basic_string.h ****        **/
 476:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 477:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 478:/usr/include/c++/5/bits/basic_string.h ****       {
 479:/usr/include/c++/5/bits/basic_string.h **** 	if (__str._M_is_local())
 480:/usr/include/c++/5/bits/basic_string.h **** 	  {
 481:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 482:/usr/include/c++/5/bits/basic_string.h **** 			      _S_local_capacity + 1);
 483:/usr/include/c++/5/bits/basic_string.h **** 	  }
 484:/usr/include/c++/5/bits/basic_string.h **** 	else
 485:/usr/include/c++/5/bits/basic_string.h **** 	  {
 486:/usr/include/c++/5/bits/basic_string.h **** 	    _M_data(__str._M_data());
 487:/usr/include/c++/5/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 488:/usr/include/c++/5/bits/basic_string.h **** 	  }
 489:/usr/include/c++/5/bits/basic_string.h **** 
 490:/usr/include/c++/5/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 491:/usr/include/c++/5/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 492:/usr/include/c++/5/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 493:/usr/include/c++/5/bits/basic_string.h **** 	_M_length(__str.length());
 494:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 495:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_set_length(0);
 496:/usr/include/c++/5/bits/basic_string.h ****       }
 497:/usr/include/c++/5/bits/basic_string.h **** 
 498:/usr/include/c++/5/bits/basic_string.h ****       /**
 499:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 500:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 501:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 502:/usr/include/c++/5/bits/basic_string.h ****        */
 503:/usr/include/c++/5/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 504:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 505:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 506:/usr/include/c++/5/bits/basic_string.h **** 
 507:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 508:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 509:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 510:/usr/include/c++/5/bits/basic_string.h **** 
 511:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 512:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/5/bits/basic_string.h ****       {
 514:/usr/include/c++/5/bits/basic_string.h **** 	if (__str.get_allocator() == __a)
 515:/usr/include/c++/5/bits/basic_string.h **** 	  *this = std::move(__str);
 516:/usr/include/c++/5/bits/basic_string.h **** 	else
 517:/usr/include/c++/5/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 518:/usr/include/c++/5/bits/basic_string.h ****       }
 519:/usr/include/c++/5/bits/basic_string.h **** 
 520:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 521:/usr/include/c++/5/bits/basic_string.h **** 
 522:/usr/include/c++/5/bits/basic_string.h ****       /**
 523:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 524:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __beg  Start of range.
 525:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __end  End of range.
 526:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 527:/usr/include/c++/5/bits/basic_string.h ****        */
 528:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 529:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InputIterator,
 530:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 531:/usr/include/c++/5/bits/basic_string.h **** #else
 532:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InputIterator>
 533:/usr/include/c++/5/bits/basic_string.h **** #endif
 534:/usr/include/c++/5/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 535:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 536:/usr/include/c++/5/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 537:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 538:/usr/include/c++/5/bits/basic_string.h **** 
 539:/usr/include/c++/5/bits/basic_string.h ****       /**
 540:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 541:/usr/include/c++/5/bits/basic_string.h ****        */
 542:/usr/include/c++/5/bits/basic_string.h ****       ~basic_string()
 543:/usr/include/c++/5/bits/basic_string.h ****       { _M_dispose(); }
 544:/usr/include/c++/5/bits/basic_string.h **** 
 545:/usr/include/c++/5/bits/basic_string.h ****       /**
 546:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 547:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/5/bits/basic_string.h ****        */
 549:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 550:/usr/include/c++/5/bits/basic_string.h ****       operator=(const basic_string& __str)
 551:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str); }
 552:/usr/include/c++/5/bits/basic_string.h **** 
 553:/usr/include/c++/5/bits/basic_string.h ****       /**
 554:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 555:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 556:/usr/include/c++/5/bits/basic_string.h ****        */
 557:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 558:/usr/include/c++/5/bits/basic_string.h ****       operator=(const _CharT* __s)
 559:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__s); }
 560:/usr/include/c++/5/bits/basic_string.h **** 
 561:/usr/include/c++/5/bits/basic_string.h ****       /**
 562:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 563:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Source character.
 564:/usr/include/c++/5/bits/basic_string.h ****        *
 565:/usr/include/c++/5/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 566:/usr/include/c++/5/bits/basic_string.h ****        *  (*this)[0] == @a c.
 567:/usr/include/c++/5/bits/basic_string.h ****        */
 568:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 569:/usr/include/c++/5/bits/basic_string.h ****       operator=(_CharT __c)
 570:/usr/include/c++/5/bits/basic_string.h ****       {
 571:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(1, __c);
 572:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 573:/usr/include/c++/5/bits/basic_string.h ****       }
 574:/usr/include/c++/5/bits/basic_string.h **** 
 575:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 576:/usr/include/c++/5/bits/basic_string.h ****       /**
 577:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 578:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 579:/usr/include/c++/5/bits/basic_string.h ****        *
 580:/usr/include/c++/5/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 581:/usr/include/c++/5/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 582:/usr/include/c++/5/bits/basic_string.h ****        **/
 583:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
 584:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 585:/usr/include/c++/5/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 586:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 587:/usr/include/c++/5/bits/basic_string.h ****       operator=(basic_string&& __str)
 588:/usr/include/c++/5/bits/basic_string.h ****       {
 589:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
 590:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 591:/usr/include/c++/5/bits/basic_string.h ****       }
 592:/usr/include/c++/5/bits/basic_string.h **** 
 593:/usr/include/c++/5/bits/basic_string.h ****       /**
 594:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 595:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 596:/usr/include/c++/5/bits/basic_string.h ****        */
 597:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 598:/usr/include/c++/5/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 599:/usr/include/c++/5/bits/basic_string.h ****       {
 600:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 601:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 602:/usr/include/c++/5/bits/basic_string.h ****       }
 603:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 604:/usr/include/c++/5/bits/basic_string.h **** 
 605:/usr/include/c++/5/bits/basic_string.h ****       // Iterators:
 606:/usr/include/c++/5/bits/basic_string.h ****       /**
 607:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 608:/usr/include/c++/5/bits/basic_string.h ****        *  the %string.
 609:/usr/include/c++/5/bits/basic_string.h ****        */
 610:/usr/include/c++/5/bits/basic_string.h ****       iterator
 611:/usr/include/c++/5/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 612:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data()); }
 613:/usr/include/c++/5/bits/basic_string.h **** 
 614:/usr/include/c++/5/bits/basic_string.h ****       /**
 615:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 616:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 617:/usr/include/c++/5/bits/basic_string.h ****        */
 618:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 619:/usr/include/c++/5/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 620:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 621:/usr/include/c++/5/bits/basic_string.h **** 
 622:/usr/include/c++/5/bits/basic_string.h ****       /**
 623:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 624:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 625:/usr/include/c++/5/bits/basic_string.h ****        */
 626:/usr/include/c++/5/bits/basic_string.h ****       iterator
 627:/usr/include/c++/5/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 628:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 629:/usr/include/c++/5/bits/basic_string.h **** 
 630:/usr/include/c++/5/bits/basic_string.h ****       /**
 631:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 632:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
 633:/usr/include/c++/5/bits/basic_string.h ****        */
 634:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 635:/usr/include/c++/5/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 636:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 637:/usr/include/c++/5/bits/basic_string.h **** 
 638:/usr/include/c++/5/bits/basic_string.h ****       /**
 639:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 640:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 641:/usr/include/c++/5/bits/basic_string.h ****        *  order.
 642:/usr/include/c++/5/bits/basic_string.h ****        */
 643:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
 644:/usr/include/c++/5/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 645:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 646:/usr/include/c++/5/bits/basic_string.h **** 
 647:/usr/include/c++/5/bits/basic_string.h ****       /**
 648:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 649:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 650:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
 651:/usr/include/c++/5/bits/basic_string.h ****        */
 652:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 653:/usr/include/c++/5/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 655:/usr/include/c++/5/bits/basic_string.h **** 
 656:/usr/include/c++/5/bits/basic_string.h ****       /**
 657:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 658:/usr/include/c++/5/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 659:/usr/include/c++/5/bits/basic_string.h ****        *  element order.
 660:/usr/include/c++/5/bits/basic_string.h ****        */
 661:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
 662:/usr/include/c++/5/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 663:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 664:/usr/include/c++/5/bits/basic_string.h **** 
 665:/usr/include/c++/5/bits/basic_string.h ****       /**
 666:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 667:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 668:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
 669:/usr/include/c++/5/bits/basic_string.h ****        */
 670:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 671:/usr/include/c++/5/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 672:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 673:/usr/include/c++/5/bits/basic_string.h **** 
 674:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 675:/usr/include/c++/5/bits/basic_string.h ****       /**
 676:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 677:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 678:/usr/include/c++/5/bits/basic_string.h ****        */
 679:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 680:/usr/include/c++/5/bits/basic_string.h ****       cbegin() const noexcept
 681:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 682:/usr/include/c++/5/bits/basic_string.h **** 
 683:/usr/include/c++/5/bits/basic_string.h ****       /**
 684:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 685:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
 686:/usr/include/c++/5/bits/basic_string.h ****        */
 687:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 688:/usr/include/c++/5/bits/basic_string.h ****       cend() const noexcept
 689:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 690:/usr/include/c++/5/bits/basic_string.h **** 
 691:/usr/include/c++/5/bits/basic_string.h ****       /**
 692:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 693:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 694:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
 695:/usr/include/c++/5/bits/basic_string.h ****        */
 696:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 697:/usr/include/c++/5/bits/basic_string.h ****       crbegin() const noexcept
 698:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 699:/usr/include/c++/5/bits/basic_string.h **** 
 700:/usr/include/c++/5/bits/basic_string.h ****       /**
 701:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 702:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 703:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
 704:/usr/include/c++/5/bits/basic_string.h ****        */
 705:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 706:/usr/include/c++/5/bits/basic_string.h ****       crend() const noexcept
 707:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 708:/usr/include/c++/5/bits/basic_string.h **** #endif
 709:/usr/include/c++/5/bits/basic_string.h **** 
 710:/usr/include/c++/5/bits/basic_string.h ****     public:
 711:/usr/include/c++/5/bits/basic_string.h ****       // Capacity:
 712:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 713:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
 714:/usr/include/c++/5/bits/basic_string.h ****       size_type
 715:/usr/include/c++/5/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 716:/usr/include/c++/5/bits/basic_string.h ****       { return _M_string_length; }
 717:/usr/include/c++/5/bits/basic_string.h **** 
 718:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 719:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
 720:/usr/include/c++/5/bits/basic_string.h ****       size_type
 721:/usr/include/c++/5/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 722:/usr/include/c++/5/bits/basic_string.h ****       { return _M_string_length; }
 723:/usr/include/c++/5/bits/basic_string.h **** 
 724:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 725:/usr/include/c++/5/bits/basic_string.h ****       size_type
 726:/usr/include/c++/5/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 727:/usr/include/c++/5/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 728:/usr/include/c++/5/bits/basic_string.h **** 
 729:/usr/include/c++/5/bits/basic_string.h ****       /**
 730:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 731:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 732:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 733:/usr/include/c++/5/bits/basic_string.h ****        *
 734:/usr/include/c++/5/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 735:/usr/include/c++/5/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 736:/usr/include/c++/5/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 737:/usr/include/c++/5/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 738:/usr/include/c++/5/bits/basic_string.h ****        */
 739:/usr/include/c++/5/bits/basic_string.h ****       void
 740:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 741:/usr/include/c++/5/bits/basic_string.h **** 
 742:/usr/include/c++/5/bits/basic_string.h ****       /**
 743:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 744:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 745:/usr/include/c++/5/bits/basic_string.h ****        *
 746:/usr/include/c++/5/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 747:/usr/include/c++/5/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 748:/usr/include/c++/5/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 749:/usr/include/c++/5/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 750:/usr/include/c++/5/bits/basic_string.h ****        *  setting them to 0.
 751:/usr/include/c++/5/bits/basic_string.h ****        */
 752:/usr/include/c++/5/bits/basic_string.h ****       void
 753:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n)
 754:/usr/include/c++/5/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 755:/usr/include/c++/5/bits/basic_string.h **** 
 756:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 757:/usr/include/c++/5/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 758:/usr/include/c++/5/bits/basic_string.h ****       void
 759:/usr/include/c++/5/bits/basic_string.h ****       shrink_to_fit() noexcept
 760:/usr/include/c++/5/bits/basic_string.h ****       {
 761:/usr/include/c++/5/bits/basic_string.h **** #if __cpp_exceptions
 762:/usr/include/c++/5/bits/basic_string.h **** 	if (capacity() > size())
 763:/usr/include/c++/5/bits/basic_string.h **** 	  {
 764:/usr/include/c++/5/bits/basic_string.h **** 	    try
 765:/usr/include/c++/5/bits/basic_string.h **** 	      { reserve(0); }
 766:/usr/include/c++/5/bits/basic_string.h **** 	    catch(...)
 767:/usr/include/c++/5/bits/basic_string.h **** 	      { }
 768:/usr/include/c++/5/bits/basic_string.h **** 	  }
 769:/usr/include/c++/5/bits/basic_string.h **** #endif
 770:/usr/include/c++/5/bits/basic_string.h ****       }
 771:/usr/include/c++/5/bits/basic_string.h **** #endif
 772:/usr/include/c++/5/bits/basic_string.h **** 
 773:/usr/include/c++/5/bits/basic_string.h ****       /**
 774:/usr/include/c++/5/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 775:/usr/include/c++/5/bits/basic_string.h ****        *  before needing to allocate more memory.
 776:/usr/include/c++/5/bits/basic_string.h ****        */
 777:/usr/include/c++/5/bits/basic_string.h ****       size_type
 778:/usr/include/c++/5/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 779:/usr/include/c++/5/bits/basic_string.h ****       {
 780:/usr/include/c++/5/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 781:/usr/include/c++/5/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 782:/usr/include/c++/5/bits/basic_string.h ****       }
 783:/usr/include/c++/5/bits/basic_string.h **** 
 784:/usr/include/c++/5/bits/basic_string.h ****       /**
 785:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 786:/usr/include/c++/5/bits/basic_string.h ****        *          characters.
 787:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 788:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 789:/usr/include/c++/5/bits/basic_string.h ****        *
 790:/usr/include/c++/5/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 791:/usr/include/c++/5/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 792:/usr/include/c++/5/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 793:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
 794:/usr/include/c++/5/bits/basic_string.h ****        *
 795:/usr/include/c++/5/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 796:/usr/include/c++/5/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 797:/usr/include/c++/5/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 798:/usr/include/c++/5/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 799:/usr/include/c++/5/bits/basic_string.h ****        *  data.
 800:/usr/include/c++/5/bits/basic_string.h ****        */
 801:/usr/include/c++/5/bits/basic_string.h ****       void
 802:/usr/include/c++/5/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 803:/usr/include/c++/5/bits/basic_string.h **** 
 804:/usr/include/c++/5/bits/basic_string.h ****       /**
 805:/usr/include/c++/5/bits/basic_string.h ****        *  Erases the string, making it empty.
 806:/usr/include/c++/5/bits/basic_string.h ****        */
 807:/usr/include/c++/5/bits/basic_string.h ****       void
 808:/usr/include/c++/5/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 809:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 810:/usr/include/c++/5/bits/basic_string.h **** 
 811:/usr/include/c++/5/bits/basic_string.h ****       /**
 812:/usr/include/c++/5/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 813:/usr/include/c++/5/bits/basic_string.h ****        *  <code>*this == ""</code>.
 814:/usr/include/c++/5/bits/basic_string.h ****        */
 815:/usr/include/c++/5/bits/basic_string.h ****       bool
 816:/usr/include/c++/5/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 817:/usr/include/c++/5/bits/basic_string.h ****       { return this->size() == 0; }
 818:/usr/include/c++/5/bits/basic_string.h **** 
 819:/usr/include/c++/5/bits/basic_string.h ****       // Element access:
 820:/usr/include/c++/5/bits/basic_string.h ****       /**
 821:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 822:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 823:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 824:/usr/include/c++/5/bits/basic_string.h ****        *
 825:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 826:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 827:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 828:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
 829:/usr/include/c++/5/bits/basic_string.h ****        */
 830:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 831:/usr/include/c++/5/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
 832:/usr/include/c++/5/bits/basic_string.h ****       {
 833:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 834:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
 835:/usr/include/c++/5/bits/basic_string.h ****       }
 836:/usr/include/c++/5/bits/basic_string.h **** 
 837:/usr/include/c++/5/bits/basic_string.h ****       /**
 838:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 839:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 840:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 841:/usr/include/c++/5/bits/basic_string.h ****        *
 842:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 843:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 844:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 845:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
 846:/usr/include/c++/5/bits/basic_string.h ****        */
 847:/usr/include/c++/5/bits/basic_string.h ****       reference
 848:/usr/include/c++/5/bits/basic_string.h ****       operator[](size_type __pos)
 849:/usr/include/c++/5/bits/basic_string.h ****       {
 850:/usr/include/c++/5/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
 851:/usr/include/c++/5/bits/basic_string.h **** 	// and in C++11 mode.
 852:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 853:/usr/include/c++/5/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
 854:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
 855:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
 856:/usr/include/c++/5/bits/basic_string.h ****       }
 857:/usr/include/c++/5/bits/basic_string.h **** 
 858:/usr/include/c++/5/bits/basic_string.h ****       /**
 859:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 860:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
 861:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
 862:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 863:/usr/include/c++/5/bits/basic_string.h ****        *
 864:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 865:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 866:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 867:/usr/include/c++/5/bits/basic_string.h ****        */
 868:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 869:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n) const
 870:/usr/include/c++/5/bits/basic_string.h ****       {
 871:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= this->size())
 872:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 873:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 874:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
 875:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
 876:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
 877:/usr/include/c++/5/bits/basic_string.h ****       }
 878:/usr/include/c++/5/bits/basic_string.h **** 
 879:/usr/include/c++/5/bits/basic_string.h ****       /**
 880:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 881:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
 882:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 883:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 884:/usr/include/c++/5/bits/basic_string.h ****        *
 885:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 886:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 887:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 888:/usr/include/c++/5/bits/basic_string.h ****        */
 889:/usr/include/c++/5/bits/basic_string.h ****       reference
 890:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n)
 891:/usr/include/c++/5/bits/basic_string.h ****       {
 892:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= size())
 893:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 894:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 895:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
 896:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
 897:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
 898:/usr/include/c++/5/bits/basic_string.h ****       }
 899:/usr/include/c++/5/bits/basic_string.h **** 
 900:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 901:/usr/include/c++/5/bits/basic_string.h ****       /**
 902:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
 903:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 904:/usr/include/c++/5/bits/basic_string.h ****        */
 905:/usr/include/c++/5/bits/basic_string.h ****       reference
 906:/usr/include/c++/5/bits/basic_string.h ****       front() noexcept
 907:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
 908:/usr/include/c++/5/bits/basic_string.h **** 
 909:/usr/include/c++/5/bits/basic_string.h ****       /**
 910:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
 911:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 912:/usr/include/c++/5/bits/basic_string.h ****        */
 913:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 914:/usr/include/c++/5/bits/basic_string.h ****       front() const noexcept
 915:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
 916:/usr/include/c++/5/bits/basic_string.h **** 
 917:/usr/include/c++/5/bits/basic_string.h ****       /**
 918:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
 919:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 920:/usr/include/c++/5/bits/basic_string.h ****        */
 921:/usr/include/c++/5/bits/basic_string.h ****       reference
 922:/usr/include/c++/5/bits/basic_string.h ****       back() noexcept
 923:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 924:/usr/include/c++/5/bits/basic_string.h **** 
 925:/usr/include/c++/5/bits/basic_string.h ****       /**
 926:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
 927:/usr/include/c++/5/bits/basic_string.h ****        *  last element of the %string.
 928:/usr/include/c++/5/bits/basic_string.h ****        */
 929:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 930:/usr/include/c++/5/bits/basic_string.h ****       back() const noexcept
 931:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 932:/usr/include/c++/5/bits/basic_string.h **** #endif
 933:/usr/include/c++/5/bits/basic_string.h **** 
 934:/usr/include/c++/5/bits/basic_string.h ****       // Modifiers:
 935:/usr/include/c++/5/bits/basic_string.h ****       /**
 936:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
 937:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 938:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 939:/usr/include/c++/5/bits/basic_string.h ****        */
 940:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 941:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const basic_string& __str)
 942:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__str); }
 943:/usr/include/c++/5/bits/basic_string.h **** 
 944:/usr/include/c++/5/bits/basic_string.h ****       /**
 945:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
 946:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
 947:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 948:/usr/include/c++/5/bits/basic_string.h ****        */
 949:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 950:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const _CharT* __s)
 951:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__s); }
 952:/usr/include/c++/5/bits/basic_string.h **** 
 953:/usr/include/c++/5/bits/basic_string.h ****       /**
 954:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a character.
 955:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to append.
 956:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 957:/usr/include/c++/5/bits/basic_string.h ****        */
 958:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 959:/usr/include/c++/5/bits/basic_string.h ****       operator+=(_CharT __c)
 960:/usr/include/c++/5/bits/basic_string.h ****       {
 961:/usr/include/c++/5/bits/basic_string.h **** 	this->push_back(__c);
 962:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 963:/usr/include/c++/5/bits/basic_string.h ****       }
 964:/usr/include/c++/5/bits/basic_string.h **** 
 965:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 966:/usr/include/c++/5/bits/basic_string.h ****       /**
 967:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
 968:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
 969:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 970:/usr/include/c++/5/bits/basic_string.h ****        */
 971:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 972:/usr/include/c++/5/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
 973:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
 974:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 975:/usr/include/c++/5/bits/basic_string.h **** 
 976:/usr/include/c++/5/bits/basic_string.h ****       /**
 977:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
 978:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 979:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 980:/usr/include/c++/5/bits/basic_string.h ****        */
 981:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 982:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str)
 983:/usr/include/c++/5/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 984:/usr/include/c++/5/bits/basic_string.h **** 
 985:/usr/include/c++/5/bits/basic_string.h ****       /**
 986:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a substring.
 987:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 988:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
 989:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 990:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 991:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
 992:/usr/include/c++/5/bits/basic_string.h ****        *
 993:/usr/include/c++/5/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
 994:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
 995:/usr/include/c++/5/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
 996:/usr/include/c++/5/bits/basic_string.h ****        *  remainder of @a __str is appended.
 997:/usr/include/c++/5/bits/basic_string.h ****        */
 998:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 999:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n)
1000:/usr/include/c++/5/bits/basic_string.h ****       { return _M_append(__str._M_data()
1001:/usr/include/c++/5/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1002:/usr/include/c++/5/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1003:/usr/include/c++/5/bits/basic_string.h **** 
1004:/usr/include/c++/5/bits/basic_string.h ****       /**
1005:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C substring.
1006:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
1007:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1008:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1009:/usr/include/c++/5/bits/basic_string.h ****        */
1010:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1011:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1012:/usr/include/c++/5/bits/basic_string.h ****       {
1013:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1014:/usr/include/c++/5/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1015:/usr/include/c++/5/bits/basic_string.h **** 	return _M_append(__s, __n);
1016:/usr/include/c++/5/bits/basic_string.h ****       }
1017:/usr/include/c++/5/bits/basic_string.h **** 
1018:/usr/include/c++/5/bits/basic_string.h ****       /**
1019:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
1020:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
1021:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1022:/usr/include/c++/5/bits/basic_string.h ****        */
1023:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1024:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s)
1025:/usr/include/c++/5/bits/basic_string.h ****       {
1026:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1027:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1028:/usr/include/c++/5/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1029:/usr/include/c++/5/bits/basic_string.h **** 	return _M_append(__s, __n);
1030:/usr/include/c++/5/bits/basic_string.h ****       }
1031:/usr/include/c++/5/bits/basic_string.h **** 
1032:/usr/include/c++/5/bits/basic_string.h ****       /**
1033:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append multiple characters.
1034:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1035:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
1036:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1037:/usr/include/c++/5/bits/basic_string.h ****        *
1038:/usr/include/c++/5/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1039:/usr/include/c++/5/bits/basic_string.h ****        */
1040:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1041:/usr/include/c++/5/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1042:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1043:/usr/include/c++/5/bits/basic_string.h **** 
1044:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1045:/usr/include/c++/5/bits/basic_string.h ****       /**
1046:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1047:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1048:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1049:/usr/include/c++/5/bits/basic_string.h ****        */
1050:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1051:/usr/include/c++/5/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1052:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1053:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1054:/usr/include/c++/5/bits/basic_string.h **** 
1055:/usr/include/c++/5/bits/basic_string.h ****       /**
1056:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a range of characters.
1057:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1058:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1059:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1060:/usr/include/c++/5/bits/basic_string.h ****        *
1061:/usr/include/c++/5/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1062:/usr/include/c++/5/bits/basic_string.h ****        */
1063:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1064:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1065:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1066:/usr/include/c++/5/bits/basic_string.h **** #else
1067:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1068:/usr/include/c++/5/bits/basic_string.h **** #endif
1069:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1070:/usr/include/c++/5/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1071:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1072:/usr/include/c++/5/bits/basic_string.h **** 
1073:/usr/include/c++/5/bits/basic_string.h ****       /**
1074:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a single character.
1075:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to append.
1076:/usr/include/c++/5/bits/basic_string.h ****        */
1077:/usr/include/c++/5/bits/basic_string.h ****       void
1078:/usr/include/c++/5/bits/basic_string.h ****       push_back(_CharT __c)
1079:/usr/include/c++/5/bits/basic_string.h ****       {
1080:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
1081:/usr/include/c++/5/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1082:/usr/include/c++/5/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1083:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1084:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1085:/usr/include/c++/5/bits/basic_string.h ****       }
1086:/usr/include/c++/5/bits/basic_string.h **** 
1087:/usr/include/c++/5/bits/basic_string.h ****       /**
1088:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1089:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
1090:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1091:/usr/include/c++/5/bits/basic_string.h ****        */
1092:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1093:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str)
1094:/usr/include/c++/5/bits/basic_string.h ****       {
1095:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_assign(__str);
1096:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
1097:/usr/include/c++/5/bits/basic_string.h ****       }
1098:/usr/include/c++/5/bits/basic_string.h **** 
1099:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1100:/usr/include/c++/5/bits/basic_string.h ****       /**
1101:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1102:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
1103:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1104:/usr/include/c++/5/bits/basic_string.h ****        *
1105:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1106:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1107:/usr/include/c++/5/bits/basic_string.h ****        */
1108:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1109:/usr/include/c++/5/bits/basic_string.h ****       assign(basic_string&& __str)
1110:/usr/include/c++/5/bits/basic_string.h ****       {
1111:/usr/include/c++/5/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1112:/usr/include/c++/5/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1113:/usr/include/c++/5/bits/basic_string.h **** 	return *this = std::move(__str);
1114:/usr/include/c++/5/bits/basic_string.h ****       }
1115:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1116:/usr/include/c++/5/bits/basic_string.h **** 
1117:/usr/include/c++/5/bits/basic_string.h ****       /**
1118:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1119:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to use.
1120:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1121:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1122:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1123:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1124:/usr/include/c++/5/bits/basic_string.h ****        *
1125:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1126:/usr/include/c++/5/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1127:/usr/include/c++/5/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1128:/usr/include/c++/5/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1129:/usr/include/c++/5/bits/basic_string.h ****        */
1130:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1131:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1132:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1133:/usr/include/c++/5/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1134:/usr/include/c++/5/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1135:/usr/include/c++/5/bits/basic_string.h **** 
1136:/usr/include/c++/5/bits/basic_string.h ****       /**
1137:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1138:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
1139:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1140:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1141:/usr/include/c++/5/bits/basic_string.h ****        *
1142:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1143:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1144:/usr/include/c++/5/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1145:/usr/include/c++/5/bits/basic_string.h ****        */
1146:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1147:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1148:/usr/include/c++/5/bits/basic_string.h ****       {
1149:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1150:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1151:/usr/include/c++/5/bits/basic_string.h ****       }
1152:/usr/include/c++/5/bits/basic_string.h **** 
1153:/usr/include/c++/5/bits/basic_string.h ****       /**
1154:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1155:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
1156:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1157:/usr/include/c++/5/bits/basic_string.h ****        *
1158:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1159:/usr/include/c++/5/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1160:/usr/include/c++/5/bits/basic_string.h ****        *  function returns.
1161:/usr/include/c++/5/bits/basic_string.h ****        */
1162:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1163:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s)
1164:/usr/include/c++/5/bits/basic_string.h ****       {
1165:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1166:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1167:/usr/include/c++/5/bits/basic_string.h **** 			  traits_type::length(__s));
1168:/usr/include/c++/5/bits/basic_string.h ****       }
1169:/usr/include/c++/5/bits/basic_string.h **** 
1170:/usr/include/c++/5/bits/basic_string.h ****       /**
1171:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1172:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1173:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
1174:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/c++/5/bits/basic_string.h ****        *
1176:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1177:/usr/include/c++/5/bits/basic_string.h ****        *  character @a __c.
1178:/usr/include/c++/5/bits/basic_string.h ****        */
1179:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1180:/usr/include/c++/5/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1181:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1182:/usr/include/c++/5/bits/basic_string.h **** 
1183:/usr/include/c++/5/bits/basic_string.h ****       /**
1184:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1185:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1186:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1187:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1188:/usr/include/c++/5/bits/basic_string.h ****        *
1189:/usr/include/c++/5/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1190:/usr/include/c++/5/bits/basic_string.h ****       */
1191:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1192:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1193:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1194:/usr/include/c++/5/bits/basic_string.h **** #else
1195:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1196:/usr/include/c++/5/bits/basic_string.h **** #endif
1197:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1198:/usr/include/c++/5/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1199:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1200:/usr/include/c++/5/bits/basic_string.h **** 
1201:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1202:/usr/include/c++/5/bits/basic_string.h ****       /**
1203:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1204:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1205:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1206:/usr/include/c++/5/bits/basic_string.h ****        */
1207:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1208:/usr/include/c++/5/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1209:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1210:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1211:/usr/include/c++/5/bits/basic_string.h **** 
1212:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1213:/usr/include/c++/5/bits/basic_string.h ****       /**
1214:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1215:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1216:/usr/include/c++/5/bits/basic_string.h ****        *              insert at.
1217:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1218:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1219:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1220:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1221:/usr/include/c++/5/bits/basic_string.h ****        *
1222:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1223:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1224:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1225:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1226:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1227:/usr/include/c++/5/bits/basic_string.h ****       */
1228:/usr/include/c++/5/bits/basic_string.h ****       iterator
1229:/usr/include/c++/5/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1230:/usr/include/c++/5/bits/basic_string.h ****       {
1231:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1232:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1233:/usr/include/c++/5/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1234:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1235:/usr/include/c++/5/bits/basic_string.h ****       }
1236:/usr/include/c++/5/bits/basic_string.h **** #else
1237:/usr/include/c++/5/bits/basic_string.h ****       /**
1238:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1239:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1240:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1241:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1242:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1243:/usr/include/c++/5/bits/basic_string.h ****        *
1244:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1245:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1246:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1247:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1248:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1249:/usr/include/c++/5/bits/basic_string.h ****       */
1250:/usr/include/c++/5/bits/basic_string.h ****       void
1251:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1252:/usr/include/c++/5/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1253:/usr/include/c++/5/bits/basic_string.h **** #endif
1254:/usr/include/c++/5/bits/basic_string.h **** 
1255:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1256:/usr/include/c++/5/bits/basic_string.h ****       /**
1257:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1258:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1259:/usr/include/c++/5/bits/basic_string.h ****        *              insert at.
1260:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
1261:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
1262:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1263:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1264:/usr/include/c++/5/bits/basic_string.h ****        *
1265:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1266:/usr/include/c++/5/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1267:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1268:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1269:/usr/include/c++/5/bits/basic_string.h ****       */
1270:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1271:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1272:/usr/include/c++/5/bits/basic_string.h **** 	iterator
1273:/usr/include/c++/5/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1274:/usr/include/c++/5/bits/basic_string.h ****         {
1275:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1276:/usr/include/c++/5/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1277:/usr/include/c++/5/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1278:/usr/include/c++/5/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1279:/usr/include/c++/5/bits/basic_string.h **** 	}
1280:/usr/include/c++/5/bits/basic_string.h **** #else
1281:/usr/include/c++/5/bits/basic_string.h ****       /**
1282:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1283:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1284:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
1285:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
1286:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1287:/usr/include/c++/5/bits/basic_string.h ****        *
1288:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1289:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1290:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1291:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1292:/usr/include/c++/5/bits/basic_string.h ****       */
1293:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1294:/usr/include/c++/5/bits/basic_string.h ****         void
1295:/usr/include/c++/5/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1296:/usr/include/c++/5/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1297:/usr/include/c++/5/bits/basic_string.h **** #endif
1298:/usr/include/c++/5/bits/basic_string.h **** 
1299:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1300:/usr/include/c++/5/bits/basic_string.h ****       /**
1301:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1302:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1303:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1304:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1305:/usr/include/c++/5/bits/basic_string.h ****        */
1306:/usr/include/c++/5/bits/basic_string.h ****       void
1307:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1308:/usr/include/c++/5/bits/basic_string.h ****       {
1309:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1310:/usr/include/c++/5/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1311:/usr/include/c++/5/bits/basic_string.h ****       }
1312:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1313:/usr/include/c++/5/bits/basic_string.h **** 
1314:/usr/include/c++/5/bits/basic_string.h ****       /**
1315:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert value of a string.
1316:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1317:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
1318:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1319:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1320:/usr/include/c++/5/bits/basic_string.h ****        *
1321:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1322:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1323:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1324:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1325:/usr/include/c++/5/bits/basic_string.h ****       */
1326:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1327:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1328:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1329:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1330:/usr/include/c++/5/bits/basic_string.h **** 
1331:/usr/include/c++/5/bits/basic_string.h ****       /**
1332:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a substring.
1333:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1334:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
1335:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1336:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1337:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1338:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1339:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1340:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1341:/usr/include/c++/5/bits/basic_string.h ****        *
1342:/usr/include/c++/5/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1343:/usr/include/c++/5/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1344:/usr/include/c++/5/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1345:/usr/include/c++/5/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1346:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1347:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1348:/usr/include/c++/5/bits/basic_string.h ****       */
1349:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1350:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1351:/usr/include/c++/5/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1352:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1353:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1354:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1355:/usr/include/c++/5/bits/basic_string.h **** 
1356:/usr/include/c++/5/bits/basic_string.h ****       /**
1357:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C substring.
1358:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1359:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
1360:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1361:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1363:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1364:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1365:/usr/include/c++/5/bits/basic_string.h ****        *
1366:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1367:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1368:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1369:/usr/include/c++/5/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1370:/usr/include/c++/5/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1371:/usr/include/c++/5/bits/basic_string.h ****       */
1372:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1373:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1374:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1375:/usr/include/c++/5/bits/basic_string.h **** 
1376:/usr/include/c++/5/bits/basic_string.h ****       /**
1377:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C string.
1378:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1379:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
1380:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1381:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1382:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1383:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1384:/usr/include/c++/5/bits/basic_string.h ****        *
1385:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1386:/usr/include/c++/5/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1387:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1388:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1389:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1390:/usr/include/c++/5/bits/basic_string.h ****       */
1391:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1392:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1393:/usr/include/c++/5/bits/basic_string.h ****       {
1394:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1395:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1396:/usr/include/c++/5/bits/basic_string.h **** 			     traits_type::length(__s));
1397:/usr/include/c++/5/bits/basic_string.h ****       }
1398:/usr/include/c++/5/bits/basic_string.h **** 
1399:/usr/include/c++/5/bits/basic_string.h ****       /**
1400:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1401:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1402:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1403:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1404:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1405:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1406:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1407:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1408:/usr/include/c++/5/bits/basic_string.h ****        *
1409:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1410:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1411:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1412:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1413:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1414:/usr/include/c++/5/bits/basic_string.h ****       */
1415:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1416:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1417:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1418:/usr/include/c++/5/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1419:/usr/include/c++/5/bits/basic_string.h **** 
1420:/usr/include/c++/5/bits/basic_string.h ****       /**
1421:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert one character.
1422:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1423:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1424:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1425:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1426:/usr/include/c++/5/bits/basic_string.h ****        *
1427:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1428:/usr/include/c++/5/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1429:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1430:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1431:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1432:/usr/include/c++/5/bits/basic_string.h ****       */
1433:/usr/include/c++/5/bits/basic_string.h ****       iterator
1434:/usr/include/c++/5/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1435:/usr/include/c++/5/bits/basic_string.h ****       {
1436:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1437:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1438:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1439:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1440:/usr/include/c++/5/bits/basic_string.h ****       }
1441:/usr/include/c++/5/bits/basic_string.h **** 
1442:/usr/include/c++/5/bits/basic_string.h ****       /**
1443:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove characters.
1444:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1445:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1446:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1448:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1449:/usr/include/c++/5/bits/basic_string.h ****        *
1450:/usr/include/c++/5/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1451:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1452:/usr/include/c++/5/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1453:/usr/include/c++/5/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1454:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1455:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1456:/usr/include/c++/5/bits/basic_string.h ****       */
1457:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1458:/usr/include/c++/5/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1459:/usr/include/c++/5/bits/basic_string.h ****       {
1460:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(_M_check(__pos, "basic_string::erase"),
1461:/usr/include/c++/5/bits/basic_string.h **** 		       _M_limit(__pos, __n));
1462:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
1463:/usr/include/c++/5/bits/basic_string.h ****       }
1464:/usr/include/c++/5/bits/basic_string.h **** 
1465:/usr/include/c++/5/bits/basic_string.h ****       /**
1466:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove one character.
1467:/usr/include/c++/5/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1468:/usr/include/c++/5/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1469:/usr/include/c++/5/bits/basic_string.h ****        *
1470:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1471:/usr/include/c++/5/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1472:/usr/include/c++/5/bits/basic_string.h ****       */
1473:/usr/include/c++/5/bits/basic_string.h ****       iterator
1474:/usr/include/c++/5/bits/basic_string.h ****       erase(__const_iterator __position)
1475:/usr/include/c++/5/bits/basic_string.h ****       {
1476:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1477:/usr/include/c++/5/bits/basic_string.h **** 				 && __position < end());
1478:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1479:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1480:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1481:/usr/include/c++/5/bits/basic_string.h ****       }
1482:/usr/include/c++/5/bits/basic_string.h **** 
1483:/usr/include/c++/5/bits/basic_string.h ****       /**
1484:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1485:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1486:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1487:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1488:/usr/include/c++/5/bits/basic_string.h ****        *
1489:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1490:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1491:/usr/include/c++/5/bits/basic_string.h ****       */
1492:/usr/include/c++/5/bits/basic_string.h ****       iterator
1493:/usr/include/c++/5/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1494:/usr/include/c++/5/bits/basic_string.h ****       {
1495:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1496:/usr/include/c++/5/bits/basic_string.h **** 				 && __last <= end());
1497:/usr/include/c++/5/bits/basic_string.h ****         const size_type __pos = __first - begin();
1498:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(__pos, __last - __first);
1499:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1500:/usr/include/c++/5/bits/basic_string.h ****       }
1501:/usr/include/c++/5/bits/basic_string.h **** 
1502:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1503:/usr/include/c++/5/bits/basic_string.h ****       /**
1504:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove the last character.
1505:/usr/include/c++/5/bits/basic_string.h ****        *
1506:/usr/include/c++/5/bits/basic_string.h ****        *  The string must be non-empty.
1507:/usr/include/c++/5/bits/basic_string.h ****        */
1508:/usr/include/c++/5/bits/basic_string.h ****       void
1509:/usr/include/c++/5/bits/basic_string.h ****       pop_back() noexcept
1510:/usr/include/c++/5/bits/basic_string.h ****       { _M_erase(size()-1, 1); }
1511:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1512:/usr/include/c++/5/bits/basic_string.h **** 
1513:/usr/include/c++/5/bits/basic_string.h ****       /**
1514:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1515:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1516:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1517:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
1518:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1519:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1520:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1521:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1522:/usr/include/c++/5/bits/basic_string.h ****        *
1523:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1524:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1525:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1526:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1527:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1528:/usr/include/c++/5/bits/basic_string.h ****        *  error is thrown.
1529:/usr/include/c++/5/bits/basic_string.h ****       */
1530:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1531:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1532:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1533:/usr/include/c++/5/bits/basic_string.h **** 
1534:/usr/include/c++/5/bits/basic_string.h ****       /**
1535:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1537:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1538:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
1539:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1540:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1541:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1542:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1543:/usr/include/c++/5/bits/basic_string.h ****        *  __str.size().
1544:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1545:/usr/include/c++/5/bits/basic_string.h ****        *
1546:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1547:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1548:/usr/include/c++/5/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1549:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1550:/usr/include/c++/5/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1551:/usr/include/c++/5/bits/basic_string.h ****       */
1552:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1553:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1554:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1555:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1556:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1557:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1558:/usr/include/c++/5/bits/basic_string.h **** 
1559:/usr/include/c++/5/bits/basic_string.h ****       /**
1560:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1561:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1562:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1563:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
1564:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1565:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1566:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1567:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1568:/usr/include/c++/5/bits/basic_string.h ****        *
1569:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1570:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1571:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1572:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1573:/usr/include/c++/5/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1574:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1575:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1576:/usr/include/c++/5/bits/basic_string.h ****       */
1577:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1578:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1579:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2)
1580:/usr/include/c++/5/bits/basic_string.h ****       {
1581:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1582:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1583:/usr/include/c++/5/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1584:/usr/include/c++/5/bits/basic_string.h ****       }
1585:/usr/include/c++/5/bits/basic_string.h **** 
1586:/usr/include/c++/5/bits/basic_string.h ****       /**
1587:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1588:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1589:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1590:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
1591:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1592:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1593:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1594:/usr/include/c++/5/bits/basic_string.h ****        *
1595:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1596:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1597:/usr/include/c++/5/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1598:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1599:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1600:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1601:/usr/include/c++/5/bits/basic_string.h ****       */
1602:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1603:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1604:/usr/include/c++/5/bits/basic_string.h ****       {
1605:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1606:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1607:/usr/include/c++/5/bits/basic_string.h ****       }
1608:/usr/include/c++/5/bits/basic_string.h **** 
1609:/usr/include/c++/5/bits/basic_string.h ****       /**
1610:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1611:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1612:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1613:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1614:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
1615:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1616:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1617:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1618:/usr/include/c++/5/bits/basic_string.h ****        *
1619:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1620:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1621:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1622:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1623:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1624:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1625:/usr/include/c++/5/bits/basic_string.h ****       */
1626:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1627:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1628:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1629:/usr/include/c++/5/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1630:/usr/include/c++/5/bits/basic_string.h **** 
1631:/usr/include/c++/5/bits/basic_string.h ****       /**
1632:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1633:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1634:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1635:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String value to insert.
1636:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1637:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1638:/usr/include/c++/5/bits/basic_string.h ****        *
1639:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1640:/usr/include/c++/5/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1641:/usr/include/c++/5/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1642:/usr/include/c++/5/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1643:/usr/include/c++/5/bits/basic_string.h ****       */
1644:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1645:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1646:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string& __str)
1647:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1648:/usr/include/c++/5/bits/basic_string.h **** 
1649:/usr/include/c++/5/bits/basic_string.h ****       /**
1650:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1651:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1652:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1653:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
1654:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1655:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1656:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1657:/usr/include/c++/5/bits/basic_string.h ****        *
1658:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1659:/usr/include/c++/5/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1660:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1661:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1662:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1663:/usr/include/c++/5/bits/basic_string.h ****       */
1664:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1665:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1666:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
1667:/usr/include/c++/5/bits/basic_string.h ****       {
1668:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1669:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1670:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
1671:/usr/include/c++/5/bits/basic_string.h ****       }
1672:/usr/include/c++/5/bits/basic_string.h **** 
1673:/usr/include/c++/5/bits/basic_string.h ****       /**
1674:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
1675:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1676:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1677:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
1678:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1679:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1680:/usr/include/c++/5/bits/basic_string.h ****        *
1681:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1682:/usr/include/c++/5/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1683:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1684:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1685:/usr/include/c++/5/bits/basic_string.h ****       */
1686:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1687:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
1688:/usr/include/c++/5/bits/basic_string.h ****       {
1689:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1690:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1691:/usr/include/c++/5/bits/basic_string.h ****       }
1692:/usr/include/c++/5/bits/basic_string.h **** 
1693:/usr/include/c++/5/bits/basic_string.h ****       /**
1694:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1695:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1696:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1697:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1698:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
1699:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1700:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1701:/usr/include/c++/5/bits/basic_string.h ****        *
1702:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1703:/usr/include/c++/5/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1704:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1705:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1706:/usr/include/c++/5/bits/basic_string.h ****       */
1707:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1708:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
1709:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT __c)
1710:/usr/include/c++/5/bits/basic_string.h ****       {
1711:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1712:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1713:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
1714:/usr/include/c++/5/bits/basic_string.h ****       }
1715:/usr/include/c++/5/bits/basic_string.h **** 
1716:/usr/include/c++/5/bits/basic_string.h ****       /**
1717:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
1718:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1719:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1720:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1721:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1722:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1723:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1724:/usr/include/c++/5/bits/basic_string.h ****        *
1725:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1726:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1727:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1728:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1729:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1730:/usr/include/c++/5/bits/basic_string.h ****       */
1731:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1732:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1733:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1734:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1735:/usr/include/c++/5/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
1736:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1737:/usr/include/c++/5/bits/basic_string.h ****         {
1738:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1739:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= end());
1740:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1741:/usr/include/c++/5/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
1742:/usr/include/c++/5/bits/basic_string.h **** 					   std::__false_type());
1743:/usr/include/c++/5/bits/basic_string.h **** 	}
1744:/usr/include/c++/5/bits/basic_string.h **** #else
1745:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1746:/usr/include/c++/5/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
1747:/usr/include/c++/5/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
1748:/usr/include/c++/5/bits/basic_string.h **** #else
1749:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1750:/usr/include/c++/5/bits/basic_string.h **** #endif
1751:/usr/include/c++/5/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
1752:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1753:/usr/include/c++/5/bits/basic_string.h ****         {
1754:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1755:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= end());
1756:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1757:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1758:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1759:/usr/include/c++/5/bits/basic_string.h **** 	}
1760:/usr/include/c++/5/bits/basic_string.h **** #endif
1761:/usr/include/c++/5/bits/basic_string.h **** 
1762:/usr/include/c++/5/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
1763:/usr/include/c++/5/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1764:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1765:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1766:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
1767:/usr/include/c++/5/bits/basic_string.h ****       {
1768:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1769:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1770:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1771:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1772:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1773:/usr/include/c++/5/bits/basic_string.h ****       }
1774:/usr/include/c++/5/bits/basic_string.h **** 
1775:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1776:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1777:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1778:/usr/include/c++/5/bits/basic_string.h ****       {
1779:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1780:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1781:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1782:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1783:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1784:/usr/include/c++/5/bits/basic_string.h ****       }
1785:/usr/include/c++/5/bits/basic_string.h **** 
1786:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1787:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1788:/usr/include/c++/5/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
1789:/usr/include/c++/5/bits/basic_string.h ****       {
1790:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1791:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1792:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1793:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1794:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1795:/usr/include/c++/5/bits/basic_string.h ****       }
1796:/usr/include/c++/5/bits/basic_string.h **** 
1797:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1798:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1799:/usr/include/c++/5/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1800:/usr/include/c++/5/bits/basic_string.h ****       {
1801:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1802:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1803:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1804:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1805:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1806:/usr/include/c++/5/bits/basic_string.h ****       }
1807:/usr/include/c++/5/bits/basic_string.h **** 
1808:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1809:/usr/include/c++/5/bits/basic_string.h ****       /**
1810:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1811:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1812:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1813:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1814:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1815:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1816:/usr/include/c++/5/bits/basic_string.h ****        *
1817:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1818:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1819:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1820:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1821:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1822:/usr/include/c++/5/bits/basic_string.h ****       */
1823:/usr/include/c++/5/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
1824:/usr/include/c++/5/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
1825:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1826:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1827:/usr/include/c++/5/bits/basic_string.h **** 
1828:/usr/include/c++/5/bits/basic_string.h ****     private:
1829:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
1830:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
1831:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1832:/usr/include/c++/5/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
1833:/usr/include/c++/5/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
1834:/usr/include/c++/5/bits/basic_string.h **** 
1835:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1836:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
1837:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1838:/usr/include/c++/5/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
1839:/usr/include/c++/5/bits/basic_string.h **** 			    __false_type);
1840:/usr/include/c++/5/bits/basic_string.h **** 
1841:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1842:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1843:/usr/include/c++/5/bits/basic_string.h **** 		     _CharT __c);
1844:/usr/include/c++/5/bits/basic_string.h **** 
1845:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1846:/usr/include/c++/5/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
1847:/usr/include/c++/5/bits/basic_string.h **** 		 const size_type __len2);
1848:/usr/include/c++/5/bits/basic_string.h **** 
1849:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1850:/usr/include/c++/5/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
1851:/usr/include/c++/5/bits/basic_string.h **** 
1852:/usr/include/c++/5/bits/basic_string.h ****     public:
1853:/usr/include/c++/5/bits/basic_string.h **** 
1854:/usr/include/c++/5/bits/basic_string.h ****       /**
1855:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy substring into C string.
1856:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to copy value into.
1857:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
1858:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
1859:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Number of characters actually copied
1860:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1861:/usr/include/c++/5/bits/basic_string.h ****        *
1862:/usr/include/c++/5/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1863:/usr/include/c++/5/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
1864:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.
1865:/usr/include/c++/5/bits/basic_string.h ****       */
1866:/usr/include/c++/5/bits/basic_string.h ****       size_type
1867:/usr/include/c++/5/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1868:/usr/include/c++/5/bits/basic_string.h **** 
1869:/usr/include/c++/5/bits/basic_string.h ****       /**
1870:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Swap contents with another string.
1871:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String to swap with.
1872:/usr/include/c++/5/bits/basic_string.h ****        *
1873:/usr/include/c++/5/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1874:/usr/include/c++/5/bits/basic_string.h ****        *  time.
1875:/usr/include/c++/5/bits/basic_string.h ****       */
1876:/usr/include/c++/5/bits/basic_string.h ****       void
1877:/usr/include/c++/5/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
1878:/usr/include/c++/5/bits/basic_string.h **** 
1879:/usr/include/c++/5/bits/basic_string.h ****       // String operations:
1880:/usr/include/c++/5/bits/basic_string.h ****       /**
1881:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1882:/usr/include/c++/5/bits/basic_string.h ****        *
1883:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1884:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
1885:/usr/include/c++/5/bits/basic_string.h ****       */
1886:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
1887:/usr/include/c++/5/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1888:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
1889:/usr/include/c++/5/bits/basic_string.h **** 
1890:/usr/include/c++/5/bits/basic_string.h ****       /**
1891:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
1892:/usr/include/c++/5/bits/basic_string.h ****        *
1893:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1894:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
1895:/usr/include/c++/5/bits/basic_string.h ****       */
1896:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
1897:/usr/include/c++/5/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
1898:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
1899:/usr/include/c++/5/bits/basic_string.h **** 
1900:/usr/include/c++/5/bits/basic_string.h ****       /**
1901:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
1902:/usr/include/c++/5/bits/basic_string.h ****       */
1903:/usr/include/c++/5/bits/basic_string.h ****       allocator_type
1904:/usr/include/c++/5/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1905:/usr/include/c++/5/bits/basic_string.h ****       { return _M_get_allocator(); }
1906:/usr/include/c++/5/bits/basic_string.h **** 
1907:/usr/include/c++/5/bits/basic_string.h ****       /**
1908:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C substring.
1909:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1910:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1911:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
1912:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1913:/usr/include/c++/5/bits/basic_string.h ****        *
1914:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
1915:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1916:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1917:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
1918:/usr/include/c++/5/bits/basic_string.h ****       */
1919:/usr/include/c++/5/bits/basic_string.h ****       size_type
1920:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
1921:/usr/include/c++/5/bits/basic_string.h **** 
1922:/usr/include/c++/5/bits/basic_string.h ****       /**
1923:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a string.
1924:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
1925:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1926:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1927:/usr/include/c++/5/bits/basic_string.h ****        *
1928:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
1929:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
1930:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns npos.
1931:/usr/include/c++/5/bits/basic_string.h ****       */
1932:/usr/include/c++/5/bits/basic_string.h ****       size_type
1933:/usr/include/c++/5/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
1934:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1935:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
1936:/usr/include/c++/5/bits/basic_string.h **** 
1937:/usr/include/c++/5/bits/basic_string.h ****       /**
1938:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C string.
1939:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1940:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1941:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1942:/usr/include/c++/5/bits/basic_string.h ****        *
1943:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
1944:/usr/include/c++/5/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
1945:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1946:/usr/include/c++/5/bits/basic_string.h ****       */
1947:/usr/include/c++/5/bits/basic_string.h ****       size_type
1948:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
1949:/usr/include/c++/5/bits/basic_string.h ****       {
1950:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1951:/usr/include/c++/5/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
1952:/usr/include/c++/5/bits/basic_string.h ****       }
1953:/usr/include/c++/5/bits/basic_string.h **** 
1954:/usr/include/c++/5/bits/basic_string.h ****       /**
1955:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
1956:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
1957:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1958:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
1959:/usr/include/c++/5/bits/basic_string.h ****        *
1960:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
1961:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1962:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
1963:/usr/include/c++/5/bits/basic_string.h ****       */
1964:/usr/include/c++/5/bits/basic_string.h ****       size_type
1965:/usr/include/c++/5/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
1966:/usr/include/c++/5/bits/basic_string.h **** 
1967:/usr/include/c++/5/bits/basic_string.h ****       /**
1968:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a string.
1969:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
1970:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1971:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1972:/usr/include/c++/5/bits/basic_string.h ****        *
1973:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
1974:/usr/include/c++/5/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
1975:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1976:/usr/include/c++/5/bits/basic_string.h ****       */
1977:/usr/include/c++/5/bits/basic_string.h ****       size_type
1978:/usr/include/c++/5/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
1979:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1980:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
1981:/usr/include/c++/5/bits/basic_string.h **** 
1982:/usr/include/c++/5/bits/basic_string.h ****       /**
1983:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
1984:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1985:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
1986:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1987:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1988:/usr/include/c++/5/bits/basic_string.h ****        *
1989:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
1990:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1991:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1992:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
1993:/usr/include/c++/5/bits/basic_string.h ****       */
1994:/usr/include/c++/5/bits/basic_string.h ****       size_type
1995:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
1996:/usr/include/c++/5/bits/basic_string.h **** 
1997:/usr/include/c++/5/bits/basic_string.h ****       /**
1998:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C string.
1999:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
2000:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2001:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2002:/usr/include/c++/5/bits/basic_string.h ****        *
2003:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2004:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2005:/usr/include/c++/5/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2006:/usr/include/c++/5/bits/basic_string.h ****       */
2007:/usr/include/c++/5/bits/basic_string.h ****       size_type
2008:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2009:/usr/include/c++/5/bits/basic_string.h ****       {
2010:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2011:/usr/include/c++/5/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2012:/usr/include/c++/5/bits/basic_string.h ****       }
2013:/usr/include/c++/5/bits/basic_string.h **** 
2014:/usr/include/c++/5/bits/basic_string.h ****       /**
2015:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
2016:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2017:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2018:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2019:/usr/include/c++/5/bits/basic_string.h ****        *
2020:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2021:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2022:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2023:/usr/include/c++/5/bits/basic_string.h ****       */
2024:/usr/include/c++/5/bits/basic_string.h ****       size_type
2025:/usr/include/c++/5/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2026:/usr/include/c++/5/bits/basic_string.h **** 
2027:/usr/include/c++/5/bits/basic_string.h ****       /**
2028:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2029:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2030:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2031:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2032:/usr/include/c++/5/bits/basic_string.h ****        *
2033:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2034:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2035:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2036:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2037:/usr/include/c++/5/bits/basic_string.h ****       */
2038:/usr/include/c++/5/bits/basic_string.h ****       size_type
2039:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2040:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2041:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2042:/usr/include/c++/5/bits/basic_string.h **** 
2043:/usr/include/c++/5/bits/basic_string.h ****       /**
2044:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2045:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2046:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2047:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2048:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2049:/usr/include/c++/5/bits/basic_string.h ****        *
2050:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2051:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2052:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2053:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2054:/usr/include/c++/5/bits/basic_string.h ****       */
2055:/usr/include/c++/5/bits/basic_string.h ****       size_type
2056:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
2057:/usr/include/c++/5/bits/basic_string.h **** 
2058:/usr/include/c++/5/bits/basic_string.h ****       /**
2059:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2060:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2061:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2062:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2063:/usr/include/c++/5/bits/basic_string.h ****        *
2064:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2065:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2066:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2067:/usr/include/c++/5/bits/basic_string.h ****       */
2068:/usr/include/c++/5/bits/basic_string.h ****       size_type
2069:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2070:/usr/include/c++/5/bits/basic_string.h ****       {
2071:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2072:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2073:/usr/include/c++/5/bits/basic_string.h ****       }
2074:/usr/include/c++/5/bits/basic_string.h **** 
2075:/usr/include/c++/5/bits/basic_string.h ****       /**
2076:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
2077:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2078:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2079:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2080:/usr/include/c++/5/bits/basic_string.h ****        *
2081:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2082:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2083:/usr/include/c++/5/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2084:/usr/include/c++/5/bits/basic_string.h ****        *
2085:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2086:/usr/include/c++/5/bits/basic_string.h ****       */
2087:/usr/include/c++/5/bits/basic_string.h ****       size_type
2088:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2089:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__c, __pos); }
2090:/usr/include/c++/5/bits/basic_string.h **** 
2091:/usr/include/c++/5/bits/basic_string.h ****       /**
2092:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2093:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2094:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2095:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2096:/usr/include/c++/5/bits/basic_string.h ****        *
2097:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2098:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2099:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2100:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2101:/usr/include/c++/5/bits/basic_string.h ****       */
2102:/usr/include/c++/5/bits/basic_string.h ****       size_type
2103:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2104:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2105:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2106:/usr/include/c++/5/bits/basic_string.h **** 
2107:/usr/include/c++/5/bits/basic_string.h ****       /**
2108:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2109:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2110:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2111:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2112:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2113:/usr/include/c++/5/bits/basic_string.h ****        *
2114:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2115:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2116:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2117:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2118:/usr/include/c++/5/bits/basic_string.h ****       */
2119:/usr/include/c++/5/bits/basic_string.h ****       size_type
2120:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2121:/usr/include/c++/5/bits/basic_string.h **** 
2122:/usr/include/c++/5/bits/basic_string.h ****       /**
2123:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2124:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2125:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2126:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2127:/usr/include/c++/5/bits/basic_string.h ****        *
2128:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2129:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2130:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2131:/usr/include/c++/5/bits/basic_string.h ****       */
2132:/usr/include/c++/5/bits/basic_string.h ****       size_type
2133:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2134:/usr/include/c++/5/bits/basic_string.h ****       {
2135:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2136:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2137:/usr/include/c++/5/bits/basic_string.h ****       }
2138:/usr/include/c++/5/bits/basic_string.h **** 
2139:/usr/include/c++/5/bits/basic_string.h ****       /**
2140:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
2141:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2142:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2143:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2144:/usr/include/c++/5/bits/basic_string.h ****        *
2145:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2146:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2147:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2148:/usr/include/c++/5/bits/basic_string.h ****        *
2149:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2150:/usr/include/c++/5/bits/basic_string.h ****       */
2151:/usr/include/c++/5/bits/basic_string.h ****       size_type
2152:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2153:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2154:/usr/include/c++/5/bits/basic_string.h **** 
2155:/usr/include/c++/5/bits/basic_string.h ****       /**
2156:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2157:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2158:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2159:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2160:/usr/include/c++/5/bits/basic_string.h ****        *
2161:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2162:/usr/include/c++/5/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2163:/usr/include/c++/5/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2164:/usr/include/c++/5/bits/basic_string.h ****       */
2165:/usr/include/c++/5/bits/basic_string.h ****       size_type
2166:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2167:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2168:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2169:/usr/include/c++/5/bits/basic_string.h **** 
2170:/usr/include/c++/5/bits/basic_string.h ****       /**
2171:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2172:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2173:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2174:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2175:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2176:/usr/include/c++/5/bits/basic_string.h ****        *
2177:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2178:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2179:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2180:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2181:/usr/include/c++/5/bits/basic_string.h ****       */
2182:/usr/include/c++/5/bits/basic_string.h ****       size_type
2183:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2184:/usr/include/c++/5/bits/basic_string.h **** 			size_type __n) const;
2185:/usr/include/c++/5/bits/basic_string.h **** 
2186:/usr/include/c++/5/bits/basic_string.h ****       /**
2187:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2188:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2189:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2190:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2191:/usr/include/c++/5/bits/basic_string.h ****        *
2192:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2193:/usr/include/c++/5/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2194:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2195:/usr/include/c++/5/bits/basic_string.h ****       */
2196:/usr/include/c++/5/bits/basic_string.h ****       size_type
2197:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2198:/usr/include/c++/5/bits/basic_string.h ****       {
2199:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2200:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2201:/usr/include/c++/5/bits/basic_string.h ****       }
2202:/usr/include/c++/5/bits/basic_string.h **** 
2203:/usr/include/c++/5/bits/basic_string.h ****       /**
2204:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a different character.
2205:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
2206:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2207:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2208:/usr/include/c++/5/bits/basic_string.h ****        *
2209:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2210:/usr/include/c++/5/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2211:/usr/include/c++/5/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2212:/usr/include/c++/5/bits/basic_string.h ****       */
2213:/usr/include/c++/5/bits/basic_string.h ****       size_type
2214:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2215:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2216:/usr/include/c++/5/bits/basic_string.h **** 
2217:/usr/include/c++/5/bits/basic_string.h ****       /**
2218:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2219:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2220:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2221:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2222:/usr/include/c++/5/bits/basic_string.h ****        *
2223:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2224:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2225:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2226:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2227:/usr/include/c++/5/bits/basic_string.h ****       */
2228:/usr/include/c++/5/bits/basic_string.h ****       size_type
2229:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2230:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2231:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2232:/usr/include/c++/5/bits/basic_string.h **** 
2233:/usr/include/c++/5/bits/basic_string.h ****       /**
2234:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2235:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2236:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2237:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2238:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2239:/usr/include/c++/5/bits/basic_string.h ****        *
2240:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2241:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2242:/usr/include/c++/5/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2243:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2244:/usr/include/c++/5/bits/basic_string.h ****       */
2245:/usr/include/c++/5/bits/basic_string.h ****       size_type
2246:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2247:/usr/include/c++/5/bits/basic_string.h **** 		       size_type __n) const;
2248:/usr/include/c++/5/bits/basic_string.h ****       /**
2249:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2250:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2251:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2252:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2253:/usr/include/c++/5/bits/basic_string.h ****        *
2254:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2255:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2256:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2257:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2258:/usr/include/c++/5/bits/basic_string.h ****       */
2259:/usr/include/c++/5/bits/basic_string.h ****       size_type
2260:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2261:/usr/include/c++/5/bits/basic_string.h ****       {
2262:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2263:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2264:/usr/include/c++/5/bits/basic_string.h ****       }
2265:/usr/include/c++/5/bits/basic_string.h **** 
2266:/usr/include/c++/5/bits/basic_string.h ****       /**
2267:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2268:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
2269:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2270:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2271:/usr/include/c++/5/bits/basic_string.h ****        *
2272:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2273:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2274:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2275:/usr/include/c++/5/bits/basic_string.h ****       */
2276:/usr/include/c++/5/bits/basic_string.h ****       size_type
2277:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2278:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2279:/usr/include/c++/5/bits/basic_string.h **** 
2280:/usr/include/c++/5/bits/basic_string.h ****       /**
2281:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Get a substring.
2282:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2283:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2284:/usr/include/c++/5/bits/basic_string.h ****        *  @return  The new string.
2285:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2286:/usr/include/c++/5/bits/basic_string.h ****        *
2287:/usr/include/c++/5/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2288:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2289:/usr/include/c++/5/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2290:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2291:/usr/include/c++/5/bits/basic_string.h ****       */
2292:/usr/include/c++/5/bits/basic_string.h ****       basic_string
2293:/usr/include/c++/5/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2294:/usr/include/c++/5/bits/basic_string.h ****       { return basic_string(*this,
2295:/usr/include/c++/5/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2296:/usr/include/c++/5/bits/basic_string.h **** 
2297:/usr/include/c++/5/bits/basic_string.h ****       /**
2298:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a string.
2299:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2300:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2301:/usr/include/c++/5/bits/basic_string.h ****        *
2302:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2303:/usr/include/c++/5/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2304:/usr/include/c++/5/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2305:/usr/include/c++/5/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2306:/usr/include/c++/5/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2307:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2308:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2309:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2310:/usr/include/c++/5/bits/basic_string.h ****       */
2311:/usr/include/c++/5/bits/basic_string.h ****       int
2312:/usr/include/c++/5/bits/basic_string.h ****       compare(const basic_string& __str) const
2313:/usr/include/c++/5/bits/basic_string.h ****       {
2314:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
2315:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __osize = __str.size();
2316:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2317:/usr/include/c++/5/bits/basic_string.h **** 
2318:/usr/include/c++/5/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2319:/usr/include/c++/5/bits/basic_string.h **** 	if (!__r)
2320:/usr/include/c++/5/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2321:/usr/include/c++/5/bits/basic_string.h **** 	return __r;
2322:/usr/include/c++/5/bits/basic_string.h ****       }
2323:/usr/include/c++/5/bits/basic_string.h **** 
2324:/usr/include/c++/5/bits/basic_string.h ****       /**
2325:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2326:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2327:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2328:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2329:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2330:/usr/include/c++/5/bits/basic_string.h ****        *
2331:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2332:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2333:/usr/include/c++/5/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2334:/usr/include/c++/5/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2335:/usr/include/c++/5/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2336:/usr/include/c++/5/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2337:/usr/include/c++/5/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2338:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling
2339:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2340:/usr/include/c++/5/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2341:/usr/include/c++/5/bits/basic_string.h ****        *  the shorter one is ordered first.
2342:/usr/include/c++/5/bits/basic_string.h ****       */
2343:/usr/include/c++/5/bits/basic_string.h ****       int
2344:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2345:/usr/include/c++/5/bits/basic_string.h **** 
2346:/usr/include/c++/5/bits/basic_string.h ****       /**
2347:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2348:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2349:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2350:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2351:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2352:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2353:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2354:/usr/include/c++/5/bits/basic_string.h ****        *
2355:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2356:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2357:/usr/include/c++/5/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2358:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2359:/usr/include/c++/5/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2360:/usr/include/c++/5/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2361:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2362:/usr/include/c++/5/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2363:/usr/include/c++/5/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2364:/usr/include/c++/5/bits/basic_string.h ****        *  calling
2365:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2366:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2367:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2368:/usr/include/c++/5/bits/basic_string.h ****       */
2369:/usr/include/c++/5/bits/basic_string.h ****       int
2370:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2371:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2372:/usr/include/c++/5/bits/basic_string.h **** 
2373:/usr/include/c++/5/bits/basic_string.h ****       /**
2374:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a C string.
2375:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
2376:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2377:/usr/include/c++/5/bits/basic_string.h ****        *
2378:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2379:/usr/include/c++/5/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2380:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2381:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2382:/usr/include/c++/5/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2383:/usr/include/c++/5/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2384:/usr/include/c++/5/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2385:/usr/include/c++/5/bits/basic_string.h ****        *  ordered first.
2386:/usr/include/c++/5/bits/basic_string.h ****       */
2387:/usr/include/c++/5/bits/basic_string.h ****       int
2388:/usr/include/c++/5/bits/basic_string.h ****       compare(const _CharT* __s) const;
2389:/usr/include/c++/5/bits/basic_string.h **** 
2390:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2391:/usr/include/c++/5/bits/basic_string.h ****       // 5 String::compare specification questionable
2392:/usr/include/c++/5/bits/basic_string.h ****       /**
2393:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2394:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2395:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2396:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
2397:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2398:/usr/include/c++/5/bits/basic_string.h ****        *
2399:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2400:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2401:/usr/include/c++/5/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2402:/usr/include/c++/5/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2403:/usr/include/c++/5/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2404:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2405:/usr/include/c++/5/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2406:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two string by calling
2407:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2408:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2409:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
2410:/usr/include/c++/5/bits/basic_string.h ****       */
2411:/usr/include/c++/5/bits/basic_string.h ****       int
2412:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2413:/usr/include/c++/5/bits/basic_string.h **** 
2414:/usr/include/c++/5/bits/basic_string.h ****       /**
2415:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2416:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2417:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2418:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2419:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2420:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2421:/usr/include/c++/5/bits/basic_string.h ****        *
2422:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2423:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2424:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2425:/usr/include/c++/5/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2426:/usr/include/c++/5/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2427:/usr/include/c++/5/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2428:/usr/include/c++/5/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
2429:/usr/include/c++/5/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2430:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two strings by calling
2431:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2432:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2433:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
2434:/usr/include/c++/5/bits/basic_string.h ****        *
2435:/usr/include/c++/5/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2436:/usr/include/c++/5/bits/basic_string.h ****        *  no special meaning.
2437:/usr/include/c++/5/bits/basic_string.h ****       */
2438:/usr/include/c++/5/bits/basic_string.h ****       int
2439:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2440:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2) const;
2441:/usr/include/c++/5/bits/basic_string.h ****   };
2442:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
2443:/usr/include/c++/5/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
2444:/usr/include/c++/5/bits/basic_string.h ****   // Reference-counted COW string implentation
2445:/usr/include/c++/5/bits/basic_string.h **** 
2446:/usr/include/c++/5/bits/basic_string.h ****   /**
2447:/usr/include/c++/5/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
2448:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
2449:/usr/include/c++/5/bits/basic_string.h ****    *
2450:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup strings
2451:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup sequences
2452:/usr/include/c++/5/bits/basic_string.h ****    *
2453:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _CharT  Type of character
2454:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
2455:/usr/include/c++/5/bits/basic_string.h ****    *                   char_traits<_CharT>.
2456:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
2457:/usr/include/c++/5/bits/basic_string.h ****    *
2458:/usr/include/c++/5/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
2459:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
2460:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
2461:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
2462:/usr/include/c++/5/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
2463:/usr/include/c++/5/bits/basic_string.h ****    *
2464:/usr/include/c++/5/bits/basic_string.h ****    *  @doctodo
2465:/usr/include/c++/5/bits/basic_string.h ****    *
2466:/usr/include/c++/5/bits/basic_string.h ****    *
2467:/usr/include/c++/5/bits/basic_string.h ****    *  Documentation?  What's that?
2468:/usr/include/c++/5/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
2469:/usr/include/c++/5/bits/basic_string.h ****    *
2470:/usr/include/c++/5/bits/basic_string.h ****    *  A string looks like this:
2471:/usr/include/c++/5/bits/basic_string.h ****    *
2472:/usr/include/c++/5/bits/basic_string.h ****    *  @code
2473:/usr/include/c++/5/bits/basic_string.h ****    *                                        [_Rep]
2474:/usr/include/c++/5/bits/basic_string.h ****    *                                        _M_length
2475:/usr/include/c++/5/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
2476:/usr/include/c++/5/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
2477:/usr/include/c++/5/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
2478:/usr/include/c++/5/bits/basic_string.h ****    *  @endcode
2479:/usr/include/c++/5/bits/basic_string.h ****    *
2480:/usr/include/c++/5/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
2481:/usr/include/c++/5/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
2482:/usr/include/c++/5/bits/basic_string.h ****    *  pointer to the header.
2483:/usr/include/c++/5/bits/basic_string.h ****    *
2484:/usr/include/c++/5/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
2485:/usr/include/c++/5/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
2486:/usr/include/c++/5/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
2487:/usr/include/c++/5/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
2488:/usr/include/c++/5/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
2489:/usr/include/c++/5/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
2490:/usr/include/c++/5/bits/basic_string.h ****    *  object at the front.
2491:/usr/include/c++/5/bits/basic_string.h ****    *
2492:/usr/include/c++/5/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
2493:/usr/include/c++/5/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
2494:/usr/include/c++/5/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
2495:/usr/include/c++/5/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
2496:/usr/include/c++/5/bits/basic_string.h ****    *  string length.)
2497:/usr/include/c++/5/bits/basic_string.h ****    *
2498:/usr/include/c++/5/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
2499:/usr/include/c++/5/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
2500:/usr/include/c++/5/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
2501:/usr/include/c++/5/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
2502:/usr/include/c++/5/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
2503:/usr/include/c++/5/bits/basic_string.h ****    *
2504:/usr/include/c++/5/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
2505:/usr/include/c++/5/bits/basic_string.h ****    *  for a C++ string implementation.
2506:/usr/include/c++/5/bits/basic_string.h ****   */
2507:/usr/include/c++/5/bits/basic_string.h ****   // 21.3  Template class basic_string
2508:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2509:/usr/include/c++/5/bits/basic_string.h ****     class basic_string
2510:/usr/include/c++/5/bits/basic_string.h ****     {
2511:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
2512:/usr/include/c++/5/bits/basic_string.h **** 
2513:/usr/include/c++/5/bits/basic_string.h ****       // Types:
2514:/usr/include/c++/5/bits/basic_string.h ****     public:
2515:/usr/include/c++/5/bits/basic_string.h ****       typedef _Traits					    traits_type;
2516:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
2517:/usr/include/c++/5/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
2518:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
2519:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
2520:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
2521:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
2522:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
2523:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
2524:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
2525:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
2526:/usr/include/c++/5/bits/basic_string.h ****                                                             const_iterator;
2527:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
2528:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
2529:/usr/include/c++/5/bits/basic_string.h **** 
2530:/usr/include/c++/5/bits/basic_string.h ****     private:
2531:/usr/include/c++/5/bits/basic_string.h ****       // _Rep: string representation
2532:/usr/include/c++/5/bits/basic_string.h ****       //   Invariants:
2533:/usr/include/c++/5/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
2534:/usr/include/c++/5/bits/basic_string.h ****       //      must be kept null-terminated.
2535:/usr/include/c++/5/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
2536:/usr/include/c++/5/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
2537:/usr/include/c++/5/bits/basic_string.h ****       //   3. _M_refcount has three states:
2538:/usr/include/c++/5/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
2539:/usr/include/c++/5/bits/basic_string.h ****       //       0: one reference, non-const.
2540:/usr/include/c++/5/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
2541:/usr/include/c++/5/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
2542:/usr/include/c++/5/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
2543:/usr/include/c++/5/bits/basic_string.h ****       //      empty string representation needs no constructor.
2544:/usr/include/c++/5/bits/basic_string.h **** 
2545:/usr/include/c++/5/bits/basic_string.h ****       struct _Rep_base
2546:/usr/include/c++/5/bits/basic_string.h ****       {
2547:/usr/include/c++/5/bits/basic_string.h **** 	size_type		_M_length;
2548:/usr/include/c++/5/bits/basic_string.h **** 	size_type		_M_capacity;
2549:/usr/include/c++/5/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
2550:/usr/include/c++/5/bits/basic_string.h ****       };
2551:/usr/include/c++/5/bits/basic_string.h **** 
2552:/usr/include/c++/5/bits/basic_string.h ****       struct _Rep : _Rep_base
2553:/usr/include/c++/5/bits/basic_string.h ****       {
2554:/usr/include/c++/5/bits/basic_string.h **** 	// Types:
2555:/usr/include/c++/5/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
2556:/usr/include/c++/5/bits/basic_string.h **** 
2557:/usr/include/c++/5/bits/basic_string.h **** 	// (Public) Data members:
2558:/usr/include/c++/5/bits/basic_string.h **** 
2559:/usr/include/c++/5/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
2560:/usr/include/c++/5/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
2561:/usr/include/c++/5/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
2562:/usr/include/c++/5/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
2563:/usr/include/c++/5/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
2564:/usr/include/c++/5/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
2565:/usr/include/c++/5/bits/basic_string.h **** 	// look like this:
2566:/usr/include/c++/5/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
2567:/usr/include/c++/5/bits/basic_string.h **** 	// Solving for m:
2568:/usr/include/c++/5/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
2569:/usr/include/c++/5/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
2570:/usr/include/c++/5/bits/basic_string.h **** 	static const size_type	_S_max_size;
2571:/usr/include/c++/5/bits/basic_string.h **** 	static const _CharT	_S_terminal;
2572:/usr/include/c++/5/bits/basic_string.h **** 
2573:/usr/include/c++/5/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
2574:/usr/include/c++/5/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
2575:/usr/include/c++/5/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
2576:/usr/include/c++/5/bits/basic_string.h **** 
2577:/usr/include/c++/5/bits/basic_string.h ****         static _Rep&
2578:/usr/include/c++/5/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
2579:/usr/include/c++/5/bits/basic_string.h ****         { 
2580:/usr/include/c++/5/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
2581:/usr/include/c++/5/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
2582:/usr/include/c++/5/bits/basic_string.h **** 	  // be reasonably safe in this case.
2583:/usr/include/c++/5/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
2584:/usr/include/c++/5/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
2585:/usr/include/c++/5/bits/basic_string.h **** 	}
2586:/usr/include/c++/5/bits/basic_string.h **** 
2587:/usr/include/c++/5/bits/basic_string.h ****         bool
2588:/usr/include/c++/5/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
2589:/usr/include/c++/5/bits/basic_string.h ****         { return this->_M_refcount < 0; }
2590:/usr/include/c++/5/bits/basic_string.h **** 
2591:/usr/include/c++/5/bits/basic_string.h ****         bool
2592:/usr/include/c++/5/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
2593:/usr/include/c++/5/bits/basic_string.h ****         { return this->_M_refcount > 0; }
2594:/usr/include/c++/5/bits/basic_string.h **** 
2595:/usr/include/c++/5/bits/basic_string.h ****         void
2596:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
2597:/usr/include/c++/5/bits/basic_string.h ****         { this->_M_refcount = -1; }
2598:/usr/include/c++/5/bits/basic_string.h **** 
2599:/usr/include/c++/5/bits/basic_string.h ****         void
2600:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
2601:/usr/include/c++/5/bits/basic_string.h ****         { this->_M_refcount = 0; }
2602:/usr/include/c++/5/bits/basic_string.h **** 
2603:/usr/include/c++/5/bits/basic_string.h **** 	void
2604:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
2605:/usr/include/c++/5/bits/basic_string.h **** 	{
2606:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2607:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2608:/usr/include/c++/5/bits/basic_string.h **** #endif
2609:/usr/include/c++/5/bits/basic_string.h **** 	    {
2610:/usr/include/c++/5/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
2611:/usr/include/c++/5/bits/basic_string.h **** 	      this->_M_length = __n;
2612:/usr/include/c++/5/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
2613:/usr/include/c++/5/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
2614:/usr/include/c++/5/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
2615:/usr/include/c++/5/bits/basic_string.h **** 	    }
2616:/usr/include/c++/5/bits/basic_string.h **** 	}
2617:/usr/include/c++/5/bits/basic_string.h **** 
2618:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2619:/usr/include/c++/5/bits/basic_string.h **** 	_M_refdata() throw()
2620:/usr/include/c++/5/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
2621:/usr/include/c++/5/bits/basic_string.h **** 
2622:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2623:/usr/include/c++/5/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
2624:/usr/include/c++/5/bits/basic_string.h **** 	{
2625:/usr/include/c++/5/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
2626:/usr/include/c++/5/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
2627:/usr/include/c++/5/bits/basic_string.h **** 	}
2628:/usr/include/c++/5/bits/basic_string.h **** 
2629:/usr/include/c++/5/bits/basic_string.h **** 	// Create & Destroy
2630:/usr/include/c++/5/bits/basic_string.h **** 	static _Rep*
2631:/usr/include/c++/5/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
2632:/usr/include/c++/5/bits/basic_string.h **** 
2633:/usr/include/c++/5/bits/basic_string.h **** 	void
2634:/usr/include/c++/5/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
2635:/usr/include/c++/5/bits/basic_string.h **** 	{
2636:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2637:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2638:/usr/include/c++/5/bits/basic_string.h **** #endif
2639:/usr/include/c++/5/bits/basic_string.h **** 	    {
2640:/usr/include/c++/5/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
2641:/usr/include/c++/5/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
2642:/usr/include/c++/5/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
2643:/usr/include/c++/5/bits/basic_string.h **** 							 -1) <= 0)
2644:/usr/include/c++/5/bits/basic_string.h **** 		{
2645:/usr/include/c++/5/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
2646:/usr/include/c++/5/bits/basic_string.h **** 		  _M_destroy(__a);
2647:/usr/include/c++/5/bits/basic_string.h **** 		}
2648:/usr/include/c++/5/bits/basic_string.h **** 	    }
2649:/usr/include/c++/5/bits/basic_string.h **** 	}  // XXX MT
2650:/usr/include/c++/5/bits/basic_string.h **** 
2651:/usr/include/c++/5/bits/basic_string.h **** 	void
2652:/usr/include/c++/5/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
2653:/usr/include/c++/5/bits/basic_string.h **** 
2654:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2655:/usr/include/c++/5/bits/basic_string.h **** 	_M_refcopy() throw()
2656:/usr/include/c++/5/bits/basic_string.h **** 	{
2657:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2658:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2659:/usr/include/c++/5/bits/basic_string.h **** #endif
2660:/usr/include/c++/5/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
2661:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_refdata();
2662:/usr/include/c++/5/bits/basic_string.h **** 	}  // XXX MT
2663:/usr/include/c++/5/bits/basic_string.h **** 
2664:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2665:/usr/include/c++/5/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
2666:/usr/include/c++/5/bits/basic_string.h ****       };
2667:/usr/include/c++/5/bits/basic_string.h **** 
2668:/usr/include/c++/5/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
2669:/usr/include/c++/5/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
2670:/usr/include/c++/5/bits/basic_string.h ****       {
2671:/usr/include/c++/5/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
2672:/usr/include/c++/5/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
2673:/usr/include/c++/5/bits/basic_string.h **** 
2674:/usr/include/c++/5/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
2675:/usr/include/c++/5/bits/basic_string.h ****       };
2676:/usr/include/c++/5/bits/basic_string.h **** 
2677:/usr/include/c++/5/bits/basic_string.h ****     public:
2678:/usr/include/c++/5/bits/basic_string.h ****       // Data Members (public):
2679:/usr/include/c++/5/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
2680:/usr/include/c++/5/bits/basic_string.h ****       // size that the allocator can hold.
2681:/usr/include/c++/5/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
2682:/usr/include/c++/5/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
2683:/usr/include/c++/5/bits/basic_string.h **** 
2684:/usr/include/c++/5/bits/basic_string.h ****     private:
2685:/usr/include/c++/5/bits/basic_string.h ****       // Data Members (private):
2686:/usr/include/c++/5/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
2687:/usr/include/c++/5/bits/basic_string.h **** 
2688:/usr/include/c++/5/bits/basic_string.h ****       _CharT*
2689:/usr/include/c++/5/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
2690:/usr/include/c++/5/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
2691:/usr/include/c++/5/bits/basic_string.h **** 
2692:/usr/include/c++/5/bits/basic_string.h ****       _CharT*
2693:/usr/include/c++/5/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
2694:/usr/include/c++/5/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
2695:/usr/include/c++/5/bits/basic_string.h **** 
2696:/usr/include/c++/5/bits/basic_string.h ****       _Rep*
2697:/usr/include/c++/5/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
2698:/usr/include/c++/5/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
2699:/usr/include/c++/5/bits/basic_string.h **** 
2700:/usr/include/c++/5/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
2701:/usr/include/c++/5/bits/basic_string.h ****       // but they do not call _M_leak.
2702:/usr/include/c++/5/bits/basic_string.h ****       iterator
2703:/usr/include/c++/5/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
2704:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data()); }
2705:/usr/include/c++/5/bits/basic_string.h **** 
2706:/usr/include/c++/5/bits/basic_string.h ****       iterator
2707:/usr/include/c++/5/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
2708:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
2709:/usr/include/c++/5/bits/basic_string.h **** 
2710:/usr/include/c++/5/bits/basic_string.h ****       void
2711:/usr/include/c++/5/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
2712:/usr/include/c++/5/bits/basic_string.h ****       {
2713:/usr/include/c++/5/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
2714:/usr/include/c++/5/bits/basic_string.h **** 	  _M_leak_hard();
2715:/usr/include/c++/5/bits/basic_string.h ****       }
2716:/usr/include/c++/5/bits/basic_string.h **** 
2717:/usr/include/c++/5/bits/basic_string.h ****       size_type
2718:/usr/include/c++/5/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
2719:/usr/include/c++/5/bits/basic_string.h ****       {
2720:/usr/include/c++/5/bits/basic_string.h **** 	if (__pos > this->size())
2721:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
2722:/usr/include/c++/5/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
2723:/usr/include/c++/5/bits/basic_string.h **** 				   __s, __pos, this->size());
2724:/usr/include/c++/5/bits/basic_string.h **** 	return __pos;
2725:/usr/include/c++/5/bits/basic_string.h ****       }
2726:/usr/include/c++/5/bits/basic_string.h **** 
2727:/usr/include/c++/5/bits/basic_string.h ****       void
2728:/usr/include/c++/5/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
2729:/usr/include/c++/5/bits/basic_string.h ****       {
2730:/usr/include/c++/5/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
2731:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
2732:/usr/include/c++/5/bits/basic_string.h ****       }
2733:/usr/include/c++/5/bits/basic_string.h **** 
2734:/usr/include/c++/5/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
2735:/usr/include/c++/5/bits/basic_string.h ****       size_type
2736:/usr/include/c++/5/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
2737:/usr/include/c++/5/bits/basic_string.h ****       {
2738:/usr/include/c++/5/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
2739:/usr/include/c++/5/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
2740:/usr/include/c++/5/bits/basic_string.h ****       }
2741:/usr/include/c++/5/bits/basic_string.h **** 
2742:/usr/include/c++/5/bits/basic_string.h ****       // True if _Rep and source do not overlap.
2743:/usr/include/c++/5/bits/basic_string.h ****       bool
2744:/usr/include/c++/5/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
2745:/usr/include/c++/5/bits/basic_string.h ****       {
2746:/usr/include/c++/5/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
2747:/usr/include/c++/5/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
2748:/usr/include/c++/5/bits/basic_string.h ****       }
2749:/usr/include/c++/5/bits/basic_string.h **** 
2750:/usr/include/c++/5/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
2751:/usr/include/c++/5/bits/basic_string.h ****       // traits_type::copy/move/assign.
2752:/usr/include/c++/5/bits/basic_string.h ****       static void
2753:/usr/include/c++/5/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2754:/usr/include/c++/5/bits/basic_string.h ****       {
2755:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2756:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
2757:/usr/include/c++/5/bits/basic_string.h **** 	else
2758:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
2759:/usr/include/c++/5/bits/basic_string.h ****       }
2760:/usr/include/c++/5/bits/basic_string.h **** 
2761:/usr/include/c++/5/bits/basic_string.h ****       static void
2762:/usr/include/c++/5/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2763:/usr/include/c++/5/bits/basic_string.h ****       {
2764:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2765:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
2766:/usr/include/c++/5/bits/basic_string.h **** 	else
2767:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
2768:/usr/include/c++/5/bits/basic_string.h ****       }
2769:/usr/include/c++/5/bits/basic_string.h **** 
2770:/usr/include/c++/5/bits/basic_string.h ****       static void
2771:/usr/include/c++/5/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
2772:/usr/include/c++/5/bits/basic_string.h ****       {
2773:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2774:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
2775:/usr/include/c++/5/bits/basic_string.h **** 	else
2776:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
2777:/usr/include/c++/5/bits/basic_string.h ****       }
2778:/usr/include/c++/5/bits/basic_string.h **** 
2779:/usr/include/c++/5/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
2780:/usr/include/c++/5/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
2781:/usr/include/c++/5/bits/basic_string.h ****       template<class _Iterator>
2782:/usr/include/c++/5/bits/basic_string.h ****         static void
2783:/usr/include/c++/5/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
2784:/usr/include/c++/5/bits/basic_string.h ****         {
2785:/usr/include/c++/5/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
2786:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
2787:/usr/include/c++/5/bits/basic_string.h **** 	}
2788:/usr/include/c++/5/bits/basic_string.h **** 
2789:/usr/include/c++/5/bits/basic_string.h ****       static void
2790:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
2791:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2792:/usr/include/c++/5/bits/basic_string.h **** 
2793:/usr/include/c++/5/bits/basic_string.h ****       static void
2794:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
2795:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2796:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2797:/usr/include/c++/5/bits/basic_string.h **** 
2798:/usr/include/c++/5/bits/basic_string.h ****       static void
2799:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
2800:/usr/include/c++/5/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2801:/usr/include/c++/5/bits/basic_string.h **** 
2802:/usr/include/c++/5/bits/basic_string.h ****       static void
2803:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
2804:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2805:/usr/include/c++/5/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2806:/usr/include/c++/5/bits/basic_string.h **** 
2807:/usr/include/c++/5/bits/basic_string.h ****       static int
2808:/usr/include/c++/5/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
2809:/usr/include/c++/5/bits/basic_string.h ****       {
2810:/usr/include/c++/5/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
2811:/usr/include/c++/5/bits/basic_string.h **** 
2812:/usr/include/c++/5/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
2813:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
2814:/usr/include/c++/5/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
2815:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
2816:/usr/include/c++/5/bits/basic_string.h **** 	else
2817:/usr/include/c++/5/bits/basic_string.h **** 	  return int(__d);
2818:/usr/include/c++/5/bits/basic_string.h ****       }
2819:/usr/include/c++/5/bits/basic_string.h **** 
2820:/usr/include/c++/5/bits/basic_string.h ****       void
2821:/usr/include/c++/5/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
2822:/usr/include/c++/5/bits/basic_string.h **** 
2823:/usr/include/c++/5/bits/basic_string.h ****       void
2824:/usr/include/c++/5/bits/basic_string.h ****       _M_leak_hard();
2825:/usr/include/c++/5/bits/basic_string.h **** 
2826:/usr/include/c++/5/bits/basic_string.h ****       static _Rep&
2827:/usr/include/c++/5/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
2828:/usr/include/c++/5/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
2829:/usr/include/c++/5/bits/basic_string.h **** 
2830:/usr/include/c++/5/bits/basic_string.h ****     public:
2831:/usr/include/c++/5/bits/basic_string.h ****       // Construct/copy/destroy:
2832:/usr/include/c++/5/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
2833:/usr/include/c++/5/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
2834:/usr/include/c++/5/bits/basic_string.h **** 
2835:/usr/include/c++/5/bits/basic_string.h ****       /**
2836:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
2837:/usr/include/c++/5/bits/basic_string.h ****        */
2838:/usr/include/c++/5/bits/basic_string.h ****       basic_string()
2839:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2840:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
2841:/usr/include/c++/5/bits/basic_string.h **** #else
2842:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
2843:/usr/include/c++/5/bits/basic_string.h **** #endif
2844:/usr/include/c++/5/bits/basic_string.h **** 
2845:/usr/include/c++/5/bits/basic_string.h ****       /**
2846:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
2847:/usr/include/c++/5/bits/basic_string.h ****        */
2848:/usr/include/c++/5/bits/basic_string.h ****       explicit
2849:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _Alloc& __a);
2850:/usr/include/c++/5/bits/basic_string.h **** 
2851:/usr/include/c++/5/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
2852:/usr/include/c++/5/bits/basic_string.h ****       /**
2853:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
2854:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2855:/usr/include/c++/5/bits/basic_string.h ****        */
2856:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str);
2857:/usr/include/c++/5/bits/basic_string.h ****       /**
2858:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
2859:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2860:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2861:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
2862:/usr/include/c++/5/bits/basic_string.h ****        */
2863:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2864:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n = npos);
2865:/usr/include/c++/5/bits/basic_string.h ****       /**
2866:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
2867:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2868:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2869:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
2870:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use.
2871:/usr/include/c++/5/bits/basic_string.h ****        */
2872:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2873:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
2874:/usr/include/c++/5/bits/basic_string.h **** 
2875:/usr/include/c++/5/bits/basic_string.h ****       /**
2876:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
2877:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source character %array.
2878:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
2879:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2880:/usr/include/c++/5/bits/basic_string.h ****        *
2881:/usr/include/c++/5/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
2882:/usr/include/c++/5/bits/basic_string.h ****        *  has no special meaning.
2883:/usr/include/c++/5/bits/basic_string.h ****        */
2884:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
2885:/usr/include/c++/5/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
2886:/usr/include/c++/5/bits/basic_string.h ****       /**
2887:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
2888:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source C string.
2889:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2890:/usr/include/c++/5/bits/basic_string.h ****        */
2891:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
2892:/usr/include/c++/5/bits/basic_string.h ****       /**
2893:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
2894:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters.
2895:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to use.
2896:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2897:/usr/include/c++/5/bits/basic_string.h ****        */
2898:/usr/include/c++/5/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
2899:/usr/include/c++/5/bits/basic_string.h **** 
2900:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
2901:/usr/include/c++/5/bits/basic_string.h ****       /**
2902:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move construct string.
2903:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2904:/usr/include/c++/5/bits/basic_string.h ****        *
2905:/usr/include/c++/5/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
2906:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
2907:/usr/include/c++/5/bits/basic_string.h ****        **/
2908:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str)
2909:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2910:/usr/include/c++/5/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
2911:/usr/include/c++/5/bits/basic_string.h **** #endif
2912:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
2913:/usr/include/c++/5/bits/basic_string.h ****       {
2914:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2915:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
2916:/usr/include/c++/5/bits/basic_string.h **** #else
2917:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
2918:/usr/include/c++/5/bits/basic_string.h **** #endif
2919:/usr/include/c++/5/bits/basic_string.h ****       }
2920:/usr/include/c++/5/bits/basic_string.h **** 
2921:/usr/include/c++/5/bits/basic_string.h ****       /**
2922:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
2923:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
2924:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2925:/usr/include/c++/5/bits/basic_string.h ****        */
2926:/usr/include/c++/5/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
2927:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
2928:/usr/include/c++/5/bits/basic_string.h **** 
2929:/usr/include/c++/5/bits/basic_string.h ****       /**
2930:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
2931:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __beg  Start of range.
2932:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __end  End of range.
2933:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2934:/usr/include/c++/5/bits/basic_string.h ****        */
2935:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
2936:/usr/include/c++/5/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
2937:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
2938:/usr/include/c++/5/bits/basic_string.h **** 
2939:/usr/include/c++/5/bits/basic_string.h ****       /**
2940:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Destroy the string instance.
2941:/usr/include/c++/5/bits/basic_string.h ****        */
2942:/usr/include/c++/5/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
2943:/usr/include/c++/5/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
2944:/usr/include/c++/5/bits/basic_string.h **** 
2945:/usr/include/c++/5/bits/basic_string.h ****       /**
2946:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
2947:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2948:/usr/include/c++/5/bits/basic_string.h ****        */
2949:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2950:/usr/include/c++/5/bits/basic_string.h ****       operator=(const basic_string& __str) 
2951:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str); }
2952:/usr/include/c++/5/bits/basic_string.h **** 
2953:/usr/include/c++/5/bits/basic_string.h ****       /**
2954:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
2955:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
2956:/usr/include/c++/5/bits/basic_string.h ****        */
2957:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2958:/usr/include/c++/5/bits/basic_string.h ****       operator=(const _CharT* __s) 
2959:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__s); }
2960:/usr/include/c++/5/bits/basic_string.h **** 
2961:/usr/include/c++/5/bits/basic_string.h ****       /**
2962:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
2963:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Source character.
2964:/usr/include/c++/5/bits/basic_string.h ****        *
2965:/usr/include/c++/5/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
2966:/usr/include/c++/5/bits/basic_string.h ****        *  (*this)[0] == @a c.
2967:/usr/include/c++/5/bits/basic_string.h ****        */
2968:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2969:/usr/include/c++/5/bits/basic_string.h ****       operator=(_CharT __c) 
2970:/usr/include/c++/5/bits/basic_string.h ****       { 
2971:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(1, __c); 
2972:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
2973:/usr/include/c++/5/bits/basic_string.h ****       }
2974:/usr/include/c++/5/bits/basic_string.h **** 
2975:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
2976:/usr/include/c++/5/bits/basic_string.h ****       /**
2977:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
2978:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2979:/usr/include/c++/5/bits/basic_string.h ****        *
2980:/usr/include/c++/5/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
2981:/usr/include/c++/5/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
2982:/usr/include/c++/5/bits/basic_string.h ****        **/
2983:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
2984:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2985:/usr/include/c++/5/bits/basic_string.h ****       operator=(basic_string&& __str)
2986:/usr/include/c++/5/bits/basic_string.h ****       {
2987:/usr/include/c++/5/bits/basic_string.h **** 	// NB: DR 1204.
2988:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
2989:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
2990:/usr/include/c++/5/bits/basic_string.h ****       }
2991:/usr/include/c++/5/bits/basic_string.h **** 
2992:/usr/include/c++/5/bits/basic_string.h ****       /**
2993:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
2994:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
2995:/usr/include/c++/5/bits/basic_string.h ****        */
2996:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2997:/usr/include/c++/5/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
2998:/usr/include/c++/5/bits/basic_string.h ****       {
2999:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3000:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3001:/usr/include/c++/5/bits/basic_string.h ****       }
3002:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3003:/usr/include/c++/5/bits/basic_string.h **** 
3004:/usr/include/c++/5/bits/basic_string.h ****       // Iterators:
3005:/usr/include/c++/5/bits/basic_string.h ****       /**
3006:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3007:/usr/include/c++/5/bits/basic_string.h ****        *  the %string.  Unshares the string.
3008:/usr/include/c++/5/bits/basic_string.h ****        */
3009:/usr/include/c++/5/bits/basic_string.h ****       iterator
3010:/usr/include/c++/5/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3011:/usr/include/c++/5/bits/basic_string.h ****       {
3012:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3013:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data());
3014:/usr/include/c++/5/bits/basic_string.h ****       }
3015:/usr/include/c++/5/bits/basic_string.h **** 
3016:/usr/include/c++/5/bits/basic_string.h ****       /**
3017:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3018:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
3019:/usr/include/c++/5/bits/basic_string.h ****        */
3020:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3021:/usr/include/c++/5/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3022:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3023:/usr/include/c++/5/bits/basic_string.h **** 
3024:/usr/include/c++/5/bits/basic_string.h ****       /**
3025:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3026:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3027:/usr/include/c++/5/bits/basic_string.h ****        */
3028:/usr/include/c++/5/bits/basic_string.h ****       iterator
3029:/usr/include/c++/5/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3030:/usr/include/c++/5/bits/basic_string.h ****       {
3031:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3032:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3033:/usr/include/c++/5/bits/basic_string.h ****       }
3034:/usr/include/c++/5/bits/basic_string.h **** 
3035:/usr/include/c++/5/bits/basic_string.h ****       /**
3036:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3037:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
3038:/usr/include/c++/5/bits/basic_string.h ****        */
3039:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3040:/usr/include/c++/5/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3041:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3042:/usr/include/c++/5/bits/basic_string.h **** 
3043:/usr/include/c++/5/bits/basic_string.h ****       /**
3044:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3045:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3046:/usr/include/c++/5/bits/basic_string.h ****        *  order.  Unshares the string.
3047:/usr/include/c++/5/bits/basic_string.h ****        */
3048:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
3049:/usr/include/c++/5/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3050:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3051:/usr/include/c++/5/bits/basic_string.h **** 
3052:/usr/include/c++/5/bits/basic_string.h ****       /**
3053:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3054:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3055:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
3056:/usr/include/c++/5/bits/basic_string.h ****        */
3057:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3058:/usr/include/c++/5/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3059:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3060:/usr/include/c++/5/bits/basic_string.h **** 
3061:/usr/include/c++/5/bits/basic_string.h ****       /**
3062:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3063:/usr/include/c++/5/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3064:/usr/include/c++/5/bits/basic_string.h ****        *  element order.  Unshares the string.
3065:/usr/include/c++/5/bits/basic_string.h ****        */
3066:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
3067:/usr/include/c++/5/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3068:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3069:/usr/include/c++/5/bits/basic_string.h **** 
3070:/usr/include/c++/5/bits/basic_string.h ****       /**
3071:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3072:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3073:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
3074:/usr/include/c++/5/bits/basic_string.h ****        */
3075:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3076:/usr/include/c++/5/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3077:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3078:/usr/include/c++/5/bits/basic_string.h **** 
3079:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3080:/usr/include/c++/5/bits/basic_string.h ****       /**
3081:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3082:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
3083:/usr/include/c++/5/bits/basic_string.h ****        */
3084:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3085:/usr/include/c++/5/bits/basic_string.h ****       cbegin() const noexcept
3086:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3087:/usr/include/c++/5/bits/basic_string.h **** 
3088:/usr/include/c++/5/bits/basic_string.h ****       /**
3089:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3090:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
3091:/usr/include/c++/5/bits/basic_string.h ****        */
3092:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3093:/usr/include/c++/5/bits/basic_string.h ****       cend() const noexcept
3094:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3095:/usr/include/c++/5/bits/basic_string.h **** 
3096:/usr/include/c++/5/bits/basic_string.h ****       /**
3097:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3098:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3099:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
3100:/usr/include/c++/5/bits/basic_string.h ****        */
3101:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3102:/usr/include/c++/5/bits/basic_string.h ****       crbegin() const noexcept
3103:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3104:/usr/include/c++/5/bits/basic_string.h **** 
3105:/usr/include/c++/5/bits/basic_string.h ****       /**
3106:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3107:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3108:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
3109:/usr/include/c++/5/bits/basic_string.h ****        */
3110:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3111:/usr/include/c++/5/bits/basic_string.h ****       crend() const noexcept
3112:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3113:/usr/include/c++/5/bits/basic_string.h **** #endif
3114:/usr/include/c++/5/bits/basic_string.h **** 
3115:/usr/include/c++/5/bits/basic_string.h ****     public:
3116:/usr/include/c++/5/bits/basic_string.h ****       // Capacity:
3117:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3118:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
3119:/usr/include/c++/5/bits/basic_string.h ****       size_type
3120:/usr/include/c++/5/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3121:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3122:/usr/include/c++/5/bits/basic_string.h **** 
3123:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3124:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
3125:/usr/include/c++/5/bits/basic_string.h ****       size_type
3126:/usr/include/c++/5/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3127:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3128:/usr/include/c++/5/bits/basic_string.h **** 
3129:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3130:/usr/include/c++/5/bits/basic_string.h ****       size_type
3131:/usr/include/c++/5/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3132:/usr/include/c++/5/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3133:/usr/include/c++/5/bits/basic_string.h **** 
3134:/usr/include/c++/5/bits/basic_string.h ****       /**
3135:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3136:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3137:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3138:/usr/include/c++/5/bits/basic_string.h ****        *
3139:/usr/include/c++/5/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3140:/usr/include/c++/5/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3141:/usr/include/c++/5/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3142:/usr/include/c++/5/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3143:/usr/include/c++/5/bits/basic_string.h ****        */
3144:/usr/include/c++/5/bits/basic_string.h ****       void
3145:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3146:/usr/include/c++/5/bits/basic_string.h **** 
3147:/usr/include/c++/5/bits/basic_string.h ****       /**
3148:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3149:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3150:/usr/include/c++/5/bits/basic_string.h ****        *
3151:/usr/include/c++/5/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3152:/usr/include/c++/5/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3153:/usr/include/c++/5/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3154:/usr/include/c++/5/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3155:/usr/include/c++/5/bits/basic_string.h ****        *  setting them to 0.
3156:/usr/include/c++/5/bits/basic_string.h ****        */
3157:/usr/include/c++/5/bits/basic_string.h ****       void
3158:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n)
3159:/usr/include/c++/5/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3160:/usr/include/c++/5/bits/basic_string.h **** 
3161:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3162:/usr/include/c++/5/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3163:/usr/include/c++/5/bits/basic_string.h ****       void
3164:/usr/include/c++/5/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3165:/usr/include/c++/5/bits/basic_string.h ****       {
3166:/usr/include/c++/5/bits/basic_string.h **** #if __cpp_exceptions
3167:/usr/include/c++/5/bits/basic_string.h **** 	if (capacity() > size())
3168:/usr/include/c++/5/bits/basic_string.h **** 	  {
3169:/usr/include/c++/5/bits/basic_string.h **** 	    try
3170:/usr/include/c++/5/bits/basic_string.h **** 	      { reserve(0); }
3171:/usr/include/c++/5/bits/basic_string.h **** 	    catch(...)
3172:/usr/include/c++/5/bits/basic_string.h **** 	      { }
3173:/usr/include/c++/5/bits/basic_string.h **** 	  }
3174:/usr/include/c++/5/bits/basic_string.h **** #endif
3175:/usr/include/c++/5/bits/basic_string.h ****       }
3176:/usr/include/c++/5/bits/basic_string.h **** #endif
3177:/usr/include/c++/5/bits/basic_string.h **** 
3178:/usr/include/c++/5/bits/basic_string.h ****       /**
3179:/usr/include/c++/5/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3180:/usr/include/c++/5/bits/basic_string.h ****        *  before needing to allocate more memory.
3181:/usr/include/c++/5/bits/basic_string.h ****        */
3182:/usr/include/c++/5/bits/basic_string.h ****       size_type
3183:/usr/include/c++/5/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3184:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3185:/usr/include/c++/5/bits/basic_string.h **** 
3186:/usr/include/c++/5/bits/basic_string.h ****       /**
3187:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3188:/usr/include/c++/5/bits/basic_string.h ****        *          characters.
3189:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3190:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3191:/usr/include/c++/5/bits/basic_string.h ****        *
3192:/usr/include/c++/5/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3193:/usr/include/c++/5/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3194:/usr/include/c++/5/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3195:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3196:/usr/include/c++/5/bits/basic_string.h ****        *
3197:/usr/include/c++/5/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3198:/usr/include/c++/5/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3199:/usr/include/c++/5/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3200:/usr/include/c++/5/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3201:/usr/include/c++/5/bits/basic_string.h ****        *  data.
3202:/usr/include/c++/5/bits/basic_string.h ****        */
3203:/usr/include/c++/5/bits/basic_string.h ****       void
3204:/usr/include/c++/5/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3205:/usr/include/c++/5/bits/basic_string.h **** 
3206:/usr/include/c++/5/bits/basic_string.h ****       /**
3207:/usr/include/c++/5/bits/basic_string.h ****        *  Erases the string, making it empty.
3208:/usr/include/c++/5/bits/basic_string.h ****        */
3209:/usr/include/c++/5/bits/basic_string.h ****       // PR 56166: this should not throw.
3210:/usr/include/c++/5/bits/basic_string.h ****       void
3211:/usr/include/c++/5/bits/basic_string.h ****       clear()
3212:/usr/include/c++/5/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
3213:/usr/include/c++/5/bits/basic_string.h **** 
3214:/usr/include/c++/5/bits/basic_string.h ****       /**
3215:/usr/include/c++/5/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
3216:/usr/include/c++/5/bits/basic_string.h ****        *  <code>*this == ""</code>.
3217:/usr/include/c++/5/bits/basic_string.h ****        */
3218:/usr/include/c++/5/bits/basic_string.h ****       bool
3219:/usr/include/c++/5/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
3220:/usr/include/c++/5/bits/basic_string.h ****       { return this->size() == 0; }
3221:/usr/include/c++/5/bits/basic_string.h **** 
3222:/usr/include/c++/5/bits/basic_string.h ****       // Element access:
3223:/usr/include/c++/5/bits/basic_string.h ****       /**
3224:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3225:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3226:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
3227:/usr/include/c++/5/bits/basic_string.h ****        *
3228:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3229:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3230:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3231:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
3232:/usr/include/c++/5/bits/basic_string.h ****        */
3233:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3234:/usr/include/c++/5/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
3235:/usr/include/c++/5/bits/basic_string.h ****       {
3236:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
3237:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
3238:/usr/include/c++/5/bits/basic_string.h ****       }
3239:/usr/include/c++/5/bits/basic_string.h **** 
3240:/usr/include/c++/5/bits/basic_string.h ****       /**
3241:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3242:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3243:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3244:/usr/include/c++/5/bits/basic_string.h ****        *
3245:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3246:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3247:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3248:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)  Unshares the string.
3249:/usr/include/c++/5/bits/basic_string.h ****        */
3250:/usr/include/c++/5/bits/basic_string.h ****       reference
3251:/usr/include/c++/5/bits/basic_string.h ****       operator[](size_type __pos)
3252:/usr/include/c++/5/bits/basic_string.h ****       {
3253:/usr/include/c++/5/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
3254:/usr/include/c++/5/bits/basic_string.h **** 	// and in C++11 mode.
3255:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
3256:/usr/include/c++/5/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
3257:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
3258:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3259:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
3260:/usr/include/c++/5/bits/basic_string.h ****       }
3261:/usr/include/c++/5/bits/basic_string.h **** 
3262:/usr/include/c++/5/bits/basic_string.h ****       /**
3263:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3264:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
3265:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
3266:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3267:/usr/include/c++/5/bits/basic_string.h ****        *
3268:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3269:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3270:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
3271:/usr/include/c++/5/bits/basic_string.h ****        */
3272:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3273:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n) const
3274:/usr/include/c++/5/bits/basic_string.h ****       {
3275:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= this->size())
3276:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3277:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3278:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
3279:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
3280:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
3281:/usr/include/c++/5/bits/basic_string.h ****       }
3282:/usr/include/c++/5/bits/basic_string.h **** 
3283:/usr/include/c++/5/bits/basic_string.h ****       /**
3284:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3285:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
3286:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3287:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3288:/usr/include/c++/5/bits/basic_string.h ****        *
3289:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3290:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3291:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
3292:/usr/include/c++/5/bits/basic_string.h ****        *  unsharing the string.
3293:/usr/include/c++/5/bits/basic_string.h ****        */
3294:/usr/include/c++/5/bits/basic_string.h ****       reference
3295:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n)
3296:/usr/include/c++/5/bits/basic_string.h ****       {
3297:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= size())
3298:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3299:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3300:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
3301:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
3302:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3303:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
3304:/usr/include/c++/5/bits/basic_string.h ****       }
3305:/usr/include/c++/5/bits/basic_string.h **** 
3306:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3307:/usr/include/c++/5/bits/basic_string.h ****       /**
3308:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
3309:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3310:/usr/include/c++/5/bits/basic_string.h ****        */
3311:/usr/include/c++/5/bits/basic_string.h ****       reference
3312:/usr/include/c++/5/bits/basic_string.h ****       front()
3313:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
3314:/usr/include/c++/5/bits/basic_string.h **** 
3315:/usr/include/c++/5/bits/basic_string.h ****       /**
3316:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
3317:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3318:/usr/include/c++/5/bits/basic_string.h ****        */
3319:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3320:/usr/include/c++/5/bits/basic_string.h ****       front() const _GLIBCXX_NOEXCEPT
3321:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
3322:/usr/include/c++/5/bits/basic_string.h **** 
3323:/usr/include/c++/5/bits/basic_string.h ****       /**
3324:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
3325:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3326:/usr/include/c++/5/bits/basic_string.h ****        */
3327:/usr/include/c++/5/bits/basic_string.h ****       reference
3328:/usr/include/c++/5/bits/basic_string.h ****       back()
3329:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
3330:/usr/include/c++/5/bits/basic_string.h **** 
3331:/usr/include/c++/5/bits/basic_string.h ****       /**
3332:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
3333:/usr/include/c++/5/bits/basic_string.h ****        *  last element of the %string.
3334:/usr/include/c++/5/bits/basic_string.h ****        */
3335:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3336:/usr/include/c++/5/bits/basic_string.h ****       back() const _GLIBCXX_NOEXCEPT
3337:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
3338:/usr/include/c++/5/bits/basic_string.h **** #endif
3339:/usr/include/c++/5/bits/basic_string.h **** 
3340:/usr/include/c++/5/bits/basic_string.h ****       // Modifiers:
3341:/usr/include/c++/5/bits/basic_string.h ****       /**
3342:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
3343:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3344:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3345:/usr/include/c++/5/bits/basic_string.h ****        */
3346:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3347:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const basic_string& __str)
3348:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__str); }
3349:/usr/include/c++/5/bits/basic_string.h **** 
3350:/usr/include/c++/5/bits/basic_string.h ****       /**
3351:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
3352:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3353:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3354:/usr/include/c++/5/bits/basic_string.h ****        */
3355:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3356:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const _CharT* __s)
3357:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__s); }
3358:/usr/include/c++/5/bits/basic_string.h **** 
3359:/usr/include/c++/5/bits/basic_string.h ****       /**
3360:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a character.
3361:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to append.
3362:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3363:/usr/include/c++/5/bits/basic_string.h ****        */
3364:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3365:/usr/include/c++/5/bits/basic_string.h ****       operator+=(_CharT __c)
3366:/usr/include/c++/5/bits/basic_string.h ****       { 
3367:/usr/include/c++/5/bits/basic_string.h **** 	this->push_back(__c);
3368:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3369:/usr/include/c++/5/bits/basic_string.h ****       }
3370:/usr/include/c++/5/bits/basic_string.h **** 
3371:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3372:/usr/include/c++/5/bits/basic_string.h ****       /**
3373:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
3374:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
3375:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3376:/usr/include/c++/5/bits/basic_string.h ****        */
3377:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3378:/usr/include/c++/5/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
3379:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3380:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3381:/usr/include/c++/5/bits/basic_string.h **** 
3382:/usr/include/c++/5/bits/basic_string.h ****       /**
3383:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
3384:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3385:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3386:/usr/include/c++/5/bits/basic_string.h ****        */
3387:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3388:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str);
3389:/usr/include/c++/5/bits/basic_string.h **** 
3390:/usr/include/c++/5/bits/basic_string.h ****       /**
3391:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a substring.
3392:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3393:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
3394:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3395:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3396:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
3397:/usr/include/c++/5/bits/basic_string.h ****        *
3398:/usr/include/c++/5/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
3399:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
3400:/usr/include/c++/5/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
3401:/usr/include/c++/5/bits/basic_string.h ****        *  remainder of @a __str is appended.
3402:/usr/include/c++/5/bits/basic_string.h ****        */
3403:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3404:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
3405:/usr/include/c++/5/bits/basic_string.h **** 
3406:/usr/include/c++/5/bits/basic_string.h ****       /**
3407:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C substring.
3408:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3409:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3410:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3411:/usr/include/c++/5/bits/basic_string.h ****        */
3412:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3413:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
3414:/usr/include/c++/5/bits/basic_string.h **** 
3415:/usr/include/c++/5/bits/basic_string.h ****       /**
3416:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
3417:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3418:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3419:/usr/include/c++/5/bits/basic_string.h ****        */
3420:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3421:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s)
3422:/usr/include/c++/5/bits/basic_string.h ****       {
3423:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3424:/usr/include/c++/5/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
3425:/usr/include/c++/5/bits/basic_string.h ****       }
3426:/usr/include/c++/5/bits/basic_string.h **** 
3427:/usr/include/c++/5/bits/basic_string.h ****       /**
3428:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append multiple characters.
3429:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3430:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
3431:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3432:/usr/include/c++/5/bits/basic_string.h ****        *
3433:/usr/include/c++/5/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
3434:/usr/include/c++/5/bits/basic_string.h ****        */
3435:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3436:/usr/include/c++/5/bits/basic_string.h ****       append(size_type __n, _CharT __c);
3437:/usr/include/c++/5/bits/basic_string.h **** 
3438:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3439:/usr/include/c++/5/bits/basic_string.h ****       /**
3440:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
3441:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
3442:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3443:/usr/include/c++/5/bits/basic_string.h ****        */
3444:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3445:/usr/include/c++/5/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
3446:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3447:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3448:/usr/include/c++/5/bits/basic_string.h **** 
3449:/usr/include/c++/5/bits/basic_string.h ****       /**
3450:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a range of characters.
3451:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3452:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3453:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3454:/usr/include/c++/5/bits/basic_string.h ****        *
3455:/usr/include/c++/5/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
3456:/usr/include/c++/5/bits/basic_string.h ****        */
3457:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3458:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
3459:/usr/include/c++/5/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
3460:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
3461:/usr/include/c++/5/bits/basic_string.h **** 
3462:/usr/include/c++/5/bits/basic_string.h ****       /**
3463:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a single character.
3464:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to append.
3465:/usr/include/c++/5/bits/basic_string.h ****        */
3466:/usr/include/c++/5/bits/basic_string.h ****       void
3467:/usr/include/c++/5/bits/basic_string.h ****       push_back(_CharT __c)
3468:/usr/include/c++/5/bits/basic_string.h ****       { 
3469:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
3470:/usr/include/c++/5/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
3471:/usr/include/c++/5/bits/basic_string.h **** 	  this->reserve(__len);
3472:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
3473:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
3474:/usr/include/c++/5/bits/basic_string.h ****       }
3475:/usr/include/c++/5/bits/basic_string.h **** 
3476:/usr/include/c++/5/bits/basic_string.h ****       /**
3477:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
3478:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
3479:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3480:/usr/include/c++/5/bits/basic_string.h ****        */
3481:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3482:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str);
3483:/usr/include/c++/5/bits/basic_string.h **** 
3484:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3485:/usr/include/c++/5/bits/basic_string.h ****       /**
3486:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
3487:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
3488:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3489:/usr/include/c++/5/bits/basic_string.h ****        *
3490:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
3491:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3492:/usr/include/c++/5/bits/basic_string.h ****        */
3493:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
3494:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3495:/usr/include/c++/5/bits/basic_string.h ****       assign(basic_string&& __str)
3496:/usr/include/c++/5/bits/basic_string.h ****       {
3497:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
3498:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3499:/usr/include/c++/5/bits/basic_string.h ****       }
3500:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3501:/usr/include/c++/5/bits/basic_string.h **** 
3502:/usr/include/c++/5/bits/basic_string.h ****       /**
3503:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
3504:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to use.
3505:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
3506:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
3507:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3508:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
3509:/usr/include/c++/5/bits/basic_string.h ****        *
3510:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
3511:/usr/include/c++/5/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
3512:/usr/include/c++/5/bits/basic_string.h ****        *  is larger than the number of available characters in @a
3513:/usr/include/c++/5/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
3514:/usr/include/c++/5/bits/basic_string.h ****        */
3515:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3516:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
3517:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str._M_data()
3518:/usr/include/c++/5/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
3519:/usr/include/c++/5/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
3520:/usr/include/c++/5/bits/basic_string.h **** 
3521:/usr/include/c++/5/bits/basic_string.h ****       /**
3522:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a C substring.
3523:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
3524:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
3525:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3526:/usr/include/c++/5/bits/basic_string.h ****        *
3527:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
3528:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
3529:/usr/include/c++/5/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
3530:/usr/include/c++/5/bits/basic_string.h ****        */
3531:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3532:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
3533:/usr/include/c++/5/bits/basic_string.h **** 
3534:/usr/include/c++/5/bits/basic_string.h ****       /**
3535:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
3536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
3537:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3538:/usr/include/c++/5/bits/basic_string.h ****        *
3539:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
3540:/usr/include/c++/5/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
3541:/usr/include/c++/5/bits/basic_string.h ****        *  function returns.
3542:/usr/include/c++/5/bits/basic_string.h ****        */
3543:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3544:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s)
3545:/usr/include/c++/5/bits/basic_string.h ****       {
3546:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3547:/usr/include/c++/5/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
3548:/usr/include/c++/5/bits/basic_string.h ****       }
3549:/usr/include/c++/5/bits/basic_string.h **** 
3550:/usr/include/c++/5/bits/basic_string.h ****       /**
3551:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
3552:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
3553:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
3554:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3555:/usr/include/c++/5/bits/basic_string.h ****        *
3556:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
3557:/usr/include/c++/5/bits/basic_string.h ****        *  character @a __c.
3558:/usr/include/c++/5/bits/basic_string.h ****        */
3559:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3560:/usr/include/c++/5/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
3561:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
3562:/usr/include/c++/5/bits/basic_string.h **** 
3563:/usr/include/c++/5/bits/basic_string.h ****       /**
3564:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
3565:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3566:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3567:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3568:/usr/include/c++/5/bits/basic_string.h ****        *
3569:/usr/include/c++/5/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
3570:/usr/include/c++/5/bits/basic_string.h ****       */
3571:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3572:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
3573:/usr/include/c++/5/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
3574:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
3575:/usr/include/c++/5/bits/basic_string.h **** 
3576:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3577:/usr/include/c++/5/bits/basic_string.h ****       /**
3578:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
3579:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
3580:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3581:/usr/include/c++/5/bits/basic_string.h ****        */
3582:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3583:/usr/include/c++/5/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
3584:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
3585:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3586:/usr/include/c++/5/bits/basic_string.h **** 
3587:/usr/include/c++/5/bits/basic_string.h ****       /**
3588:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
3589:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3590:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
3591:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3592:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3593:/usr/include/c++/5/bits/basic_string.h ****        *
3594:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
3595:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
3596:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3597:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3598:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3599:/usr/include/c++/5/bits/basic_string.h ****       */
3600:/usr/include/c++/5/bits/basic_string.h ****       void
3601:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
3602:/usr/include/c++/5/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
3603:/usr/include/c++/5/bits/basic_string.h **** 
3604:/usr/include/c++/5/bits/basic_string.h ****       /**
3605:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
3606:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3607:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
3608:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
3609:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3610:/usr/include/c++/5/bits/basic_string.h ****        *
3611:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
3612:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3613:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3614:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3615:/usr/include/c++/5/bits/basic_string.h ****       */
3616:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3617:/usr/include/c++/5/bits/basic_string.h ****         void
3618:/usr/include/c++/5/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
3619:/usr/include/c++/5/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
3620:/usr/include/c++/5/bits/basic_string.h **** 
3621:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3622:/usr/include/c++/5/bits/basic_string.h ****       /**
3623:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
3624:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3625:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
3626:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3627:/usr/include/c++/5/bits/basic_string.h ****        */
3628:/usr/include/c++/5/bits/basic_string.h ****       void
3629:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
3630:/usr/include/c++/5/bits/basic_string.h ****       {
3631:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3632:/usr/include/c++/5/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
3633:/usr/include/c++/5/bits/basic_string.h ****       }
3634:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3635:/usr/include/c++/5/bits/basic_string.h **** 
3636:/usr/include/c++/5/bits/basic_string.h ****       /**
3637:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert value of a string.
3638:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3639:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
3640:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3641:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3642:/usr/include/c++/5/bits/basic_string.h ****        *
3643:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
3644:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3645:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3646:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3647:/usr/include/c++/5/bits/basic_string.h ****       */
3648:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3649:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
3650:/usr/include/c++/5/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
3651:/usr/include/c++/5/bits/basic_string.h **** 
3652:/usr/include/c++/5/bits/basic_string.h ****       /**
3653:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a substring.
3654:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3655:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
3656:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
3657:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
3658:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3659:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3660:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
3661:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
3662:/usr/include/c++/5/bits/basic_string.h ****        *
3663:/usr/include/c++/5/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
3664:/usr/include/c++/5/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
3665:/usr/include/c++/5/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
3666:/usr/include/c++/5/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
3667:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
3668:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3669:/usr/include/c++/5/bits/basic_string.h ****       */
3670:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3671:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
3672:/usr/include/c++/5/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
3673:/usr/include/c++/5/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
3674:/usr/include/c++/5/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
3675:/usr/include/c++/5/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
3676:/usr/include/c++/5/bits/basic_string.h **** 
3677:/usr/include/c++/5/bits/basic_string.h ****       /**
3678:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C substring.
3679:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3680:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
3681:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
3682:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3683:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3684:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3685:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3686:/usr/include/c++/5/bits/basic_string.h ****        *
3687:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
3688:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
3689:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
3690:/usr/include/c++/5/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
3691:/usr/include/c++/5/bits/basic_string.h ****        *  doesn't change if an error is thrown.
3692:/usr/include/c++/5/bits/basic_string.h ****       */
3693:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3694:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
3695:/usr/include/c++/5/bits/basic_string.h **** 
3696:/usr/include/c++/5/bits/basic_string.h ****       /**
3697:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C string.
3698:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3699:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
3700:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3701:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3702:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3703:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3704:/usr/include/c++/5/bits/basic_string.h ****        *
3705:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
3706:/usr/include/c++/5/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
3707:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
3708:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
3709:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3710:/usr/include/c++/5/bits/basic_string.h ****       */
3711:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3712:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
3713:/usr/include/c++/5/bits/basic_string.h ****       {
3714:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3715:/usr/include/c++/5/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
3716:/usr/include/c++/5/bits/basic_string.h ****       }
3717:/usr/include/c++/5/bits/basic_string.h **** 
3718:/usr/include/c++/5/bits/basic_string.h ****       /**
3719:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
3720:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
3721:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
3722:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3723:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3724:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3725:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3726:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3727:/usr/include/c++/5/bits/basic_string.h ****        *
3728:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
3729:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
3730:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
3731:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3732:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3733:/usr/include/c++/5/bits/basic_string.h ****       */
3734:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3735:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
3736:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
3737:/usr/include/c++/5/bits/basic_string.h **** 			      size_type(0), __n, __c); }
3738:/usr/include/c++/5/bits/basic_string.h **** 
3739:/usr/include/c++/5/bits/basic_string.h ****       /**
3740:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert one character.
3741:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
3742:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3743:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
3744:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3745:/usr/include/c++/5/bits/basic_string.h ****        *
3746:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
3747:/usr/include/c++/5/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
3748:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
3749:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3750:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3751:/usr/include/c++/5/bits/basic_string.h ****       */
3752:/usr/include/c++/5/bits/basic_string.h ****       iterator
3753:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
3754:/usr/include/c++/5/bits/basic_string.h ****       {
3755:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3756:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
3757:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
3758:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
3759:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
3760:/usr/include/c++/5/bits/basic_string.h ****       }
3761:/usr/include/c++/5/bits/basic_string.h **** 
3762:/usr/include/c++/5/bits/basic_string.h ****       /**
3763:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove characters.
3764:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
3765:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
3766:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3767:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3768:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3769:/usr/include/c++/5/bits/basic_string.h ****        *
3770:/usr/include/c++/5/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
3771:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
3772:/usr/include/c++/5/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
3773:/usr/include/c++/5/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
3774:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3775:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3776:/usr/include/c++/5/bits/basic_string.h ****       */
3777:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3778:/usr/include/c++/5/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
3779:/usr/include/c++/5/bits/basic_string.h ****       { 
3780:/usr/include/c++/5/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
3781:/usr/include/c++/5/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
3782:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3783:/usr/include/c++/5/bits/basic_string.h ****       }
3784:/usr/include/c++/5/bits/basic_string.h **** 
3785:/usr/include/c++/5/bits/basic_string.h ****       /**
3786:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove one character.
3787:/usr/include/c++/5/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
3788:/usr/include/c++/5/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
3789:/usr/include/c++/5/bits/basic_string.h ****        *
3790:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
3791:/usr/include/c++/5/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
3792:/usr/include/c++/5/bits/basic_string.h ****       */
3793:/usr/include/c++/5/bits/basic_string.h ****       iterator
3794:/usr/include/c++/5/bits/basic_string.h ****       erase(iterator __position)
3795:/usr/include/c++/5/bits/basic_string.h ****       {
3796:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
3797:/usr/include/c++/5/bits/basic_string.h **** 				 && __position < _M_iend());
3798:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
3799:/usr/include/c++/5/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
3800:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
3801:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
3802:/usr/include/c++/5/bits/basic_string.h ****       }
3803:/usr/include/c++/5/bits/basic_string.h **** 
3804:/usr/include/c++/5/bits/basic_string.h ****       /**
3805:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove a range of characters.
3806:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
3807:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
3808:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
3809:/usr/include/c++/5/bits/basic_string.h ****        *
3810:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
3811:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
3812:/usr/include/c++/5/bits/basic_string.h ****       */
3813:/usr/include/c++/5/bits/basic_string.h ****       iterator
3814:/usr/include/c++/5/bits/basic_string.h ****       erase(iterator __first, iterator __last);
3815:/usr/include/c++/5/bits/basic_string.h ****  
3816:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3817:/usr/include/c++/5/bits/basic_string.h ****       /**
3818:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove the last character.
3819:/usr/include/c++/5/bits/basic_string.h ****        *
3820:/usr/include/c++/5/bits/basic_string.h ****        *  The string must be non-empty.
3821:/usr/include/c++/5/bits/basic_string.h ****        */
3822:/usr/include/c++/5/bits/basic_string.h ****       void
3823:/usr/include/c++/5/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
3824:/usr/include/c++/5/bits/basic_string.h ****       { erase(size()-1, 1); }
3825:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3826:/usr/include/c++/5/bits/basic_string.h **** 
3827:/usr/include/c++/5/bits/basic_string.h ****       /**
3828:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
3829:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3830:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
3831:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
3832:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3833:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3834:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3835:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3836:/usr/include/c++/5/bits/basic_string.h ****        *
3837:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
3838:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
3839:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3840:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
3841:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
3842:/usr/include/c++/5/bits/basic_string.h ****        *  error is thrown.
3843:/usr/include/c++/5/bits/basic_string.h ****       */
3844:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3845:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
3846:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
3847:/usr/include/c++/5/bits/basic_string.h **** 
3848:/usr/include/c++/5/bits/basic_string.h ****       /**
3849:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
3850:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
3851:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3852:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
3853:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
3854:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
3855:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3856:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
3857:/usr/include/c++/5/bits/basic_string.h ****        *  __str.size().
3858:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3859:/usr/include/c++/5/bits/basic_string.h ****        *
3860:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
3861:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
3862:/usr/include/c++/5/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
3863:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
3864:/usr/include/c++/5/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
3865:/usr/include/c++/5/bits/basic_string.h ****       */
3866:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3867:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
3868:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
3869:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
3870:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
3871:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
3872:/usr/include/c++/5/bits/basic_string.h **** 
3873:/usr/include/c++/5/bits/basic_string.h ****       /**
3874:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
3875:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3876:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3877:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
3878:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
3879:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3880:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
3881:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3882:/usr/include/c++/5/bits/basic_string.h ****        *
3883:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
3884:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
3885:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
3886:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
3887:/usr/include/c++/5/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
3888:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
3889:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
3890:/usr/include/c++/5/bits/basic_string.h ****       */
3891:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3892:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
3893:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2);
3894:/usr/include/c++/5/bits/basic_string.h **** 
3895:/usr/include/c++/5/bits/basic_string.h ****       /**
3896:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
3897:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3898:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3899:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
3900:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3901:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
3902:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3903:/usr/include/c++/5/bits/basic_string.h ****        *
3904:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
3905:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
3906:/usr/include/c++/5/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
3907:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
3908:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3909:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3910:/usr/include/c++/5/bits/basic_string.h ****       */
3911:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3912:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
3913:/usr/include/c++/5/bits/basic_string.h ****       {
3914:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3915:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
3916:/usr/include/c++/5/bits/basic_string.h ****       }
3917:/usr/include/c++/5/bits/basic_string.h **** 
3918:/usr/include/c++/5/bits/basic_string.h ****       /**
3919:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
3920:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3921:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3922:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
3923:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
3924:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3925:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
3926:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3927:/usr/include/c++/5/bits/basic_string.h ****        *
3928:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
3929:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
3930:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3931:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
3932:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
3933:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
3934:/usr/include/c++/5/bits/basic_string.h ****       */
3935:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3936:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
3937:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
3938:/usr/include/c++/5/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
3939:/usr/include/c++/5/bits/basic_string.h **** 
3940:/usr/include/c++/5/bits/basic_string.h ****       /**
3941:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
3942:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3943:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3944:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String value to insert.
3945:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3946:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3947:/usr/include/c++/5/bits/basic_string.h ****        *
3948:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3949:/usr/include/c++/5/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
3950:/usr/include/c++/5/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
3951:/usr/include/c++/5/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
3952:/usr/include/c++/5/bits/basic_string.h ****       */
3953:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3954:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
3955:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
3956:/usr/include/c++/5/bits/basic_string.h **** 
3957:/usr/include/c++/5/bits/basic_string.h ****       /**
3958:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
3959:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3960:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3961:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
3962:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
3963:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3964:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3965:/usr/include/c++/5/bits/basic_string.h ****        *
3966:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3967:/usr/include/c++/5/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
3968:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
3969:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
3970:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3971:/usr/include/c++/5/bits/basic_string.h ****       */
3972:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3973:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
3974:/usr/include/c++/5/bits/basic_string.h ****       {
3975:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
3976:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
3977:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
3978:/usr/include/c++/5/bits/basic_string.h ****       }
3979:/usr/include/c++/5/bits/basic_string.h **** 
3980:/usr/include/c++/5/bits/basic_string.h ****       /**
3981:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
3982:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3983:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3984:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
3985:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3986:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3987:/usr/include/c++/5/bits/basic_string.h ****        *
3988:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3989:/usr/include/c++/5/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
3990:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
3991:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3992:/usr/include/c++/5/bits/basic_string.h ****       */
3993:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3994:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
3995:/usr/include/c++/5/bits/basic_string.h ****       {
3996:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3997:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
3998:/usr/include/c++/5/bits/basic_string.h ****       }
3999:/usr/include/c++/5/bits/basic_string.h **** 
4000:/usr/include/c++/5/bits/basic_string.h ****       /**
4001:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4002:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4003:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4004:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4005:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
4006:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4007:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4008:/usr/include/c++/5/bits/basic_string.h ****        *
4009:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4010:/usr/include/c++/5/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4011:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4012:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4013:/usr/include/c++/5/bits/basic_string.h ****       */
4014:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4015:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4016:/usr/include/c++/5/bits/basic_string.h ****       {
4017:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4018:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4019:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4020:/usr/include/c++/5/bits/basic_string.h ****       }
4021:/usr/include/c++/5/bits/basic_string.h **** 
4022:/usr/include/c++/5/bits/basic_string.h ****       /**
4023:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4024:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4025:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4026:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4027:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4028:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4029:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4030:/usr/include/c++/5/bits/basic_string.h ****        *
4031:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4032:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4033:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4034:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4035:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
4036:/usr/include/c++/5/bits/basic_string.h ****       */
4037:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
4038:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
4039:/usr/include/c++/5/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4040:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4041:/usr/include/c++/5/bits/basic_string.h ****         {
4042:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4043:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4044:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4045:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4046:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4047:/usr/include/c++/5/bits/basic_string.h **** 	}
4048:/usr/include/c++/5/bits/basic_string.h **** 
4049:/usr/include/c++/5/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4050:/usr/include/c++/5/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4051:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4052:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4053:/usr/include/c++/5/bits/basic_string.h ****       {
4054:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4055:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4056:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4057:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4058:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4059:/usr/include/c++/5/bits/basic_string.h ****       }
4060:/usr/include/c++/5/bits/basic_string.h **** 
4061:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4062:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4063:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4064:/usr/include/c++/5/bits/basic_string.h ****       {
4065:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4066:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4067:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4068:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4069:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4070:/usr/include/c++/5/bits/basic_string.h ****       }
4071:/usr/include/c++/5/bits/basic_string.h **** 
4072:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4073:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4074:/usr/include/c++/5/bits/basic_string.h ****       {
4075:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4076:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4077:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4078:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4079:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4080:/usr/include/c++/5/bits/basic_string.h ****       }
4081:/usr/include/c++/5/bits/basic_string.h **** 
4082:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4083:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4084:/usr/include/c++/5/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
4085:/usr/include/c++/5/bits/basic_string.h ****       {
4086:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4087:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4088:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4089:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4090:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4091:/usr/include/c++/5/bits/basic_string.h ****       }
4092:/usr/include/c++/5/bits/basic_string.h ****       
4093:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
4094:/usr/include/c++/5/bits/basic_string.h ****       /**
4095:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
4096:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4097:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4098:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4099:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4100:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4101:/usr/include/c++/5/bits/basic_string.h ****        *
4102:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4103:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4104:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4105:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4106:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
4107:/usr/include/c++/5/bits/basic_string.h ****       */
4108:/usr/include/c++/5/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
4109:/usr/include/c++/5/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
4110:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
4111:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
4112:/usr/include/c++/5/bits/basic_string.h **** 
4113:/usr/include/c++/5/bits/basic_string.h ****     private:
4114:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
4115:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
4116:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
4117:/usr/include/c++/5/bits/basic_string.h **** 			    _Integer __val, __true_type)
4118:/usr/include/c++/5/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
4119:/usr/include/c++/5/bits/basic_string.h **** 
4120:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
4121:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
4122:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
4123:/usr/include/c++/5/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
4124:/usr/include/c++/5/bits/basic_string.h **** 
4125:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4126:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
4127:/usr/include/c++/5/bits/basic_string.h **** 		     _CharT __c);
4128:/usr/include/c++/5/bits/basic_string.h **** 
4129:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4130:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
4131:/usr/include/c++/5/bits/basic_string.h **** 		      size_type __n2);
4132:/usr/include/c++/5/bits/basic_string.h **** 
4133:/usr/include/c++/5/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
4134:/usr/include/c++/5/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
4135:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4136:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4137:/usr/include/c++/5/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
4138:/usr/include/c++/5/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
4139:/usr/include/c++/5/bits/basic_string.h **** 	{
4140:/usr/include/c++/5/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
4141:/usr/include/c++/5/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
4142:/usr/include/c++/5/bits/basic_string.h **** 	}
4143:/usr/include/c++/5/bits/basic_string.h **** 
4144:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4145:/usr/include/c++/5/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
4146:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
4147:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4148:/usr/include/c++/5/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
4149:/usr/include/c++/5/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
4150:/usr/include/c++/5/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
4151:/usr/include/c++/5/bits/basic_string.h **** 				    __end, __a); }
4152:/usr/include/c++/5/bits/basic_string.h **** 
4153:/usr/include/c++/5/bits/basic_string.h ****       static _CharT*
4154:/usr/include/c++/5/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
4155:/usr/include/c++/5/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
4156:/usr/include/c++/5/bits/basic_string.h **** 
4157:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4158:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4159:/usr/include/c++/5/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
4160:/usr/include/c++/5/bits/basic_string.h **** 	{
4161:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
4162:/usr/include/c++/5/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
4163:/usr/include/c++/5/bits/basic_string.h ****         }
4164:/usr/include/c++/5/bits/basic_string.h **** 
4165:/usr/include/c++/5/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
4166:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4167:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4168:/usr/include/c++/5/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
4169:/usr/include/c++/5/bits/basic_string.h **** 		      input_iterator_tag);
4170:/usr/include/c++/5/bits/basic_string.h **** 
4171:/usr/include/c++/5/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
4172:/usr/include/c++/5/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
4173:/usr/include/c++/5/bits/basic_string.h ****       template<class _FwdIterator>
4174:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4175:/usr/include/c++/5/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
4176:/usr/include/c++/5/bits/basic_string.h **** 		     forward_iterator_tag);
4177:/usr/include/c++/5/bits/basic_string.h **** 
4178:/usr/include/c++/5/bits/basic_string.h ****       static _CharT*
4179:/usr/include/c++/5/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
4180:/usr/include/c++/5/bits/basic_string.h **** 
4181:/usr/include/c++/5/bits/basic_string.h ****     public:
4182:/usr/include/c++/5/bits/basic_string.h **** 
4183:/usr/include/c++/5/bits/basic_string.h ****       /**
4184:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy substring into C string.
4185:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to copy value into.
4186:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
4187:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
4188:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Number of characters actually copied
4189:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4190:/usr/include/c++/5/bits/basic_string.h ****        *
4191:/usr/include/c++/5/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
4192:/usr/include/c++/5/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
4193:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.
4194:/usr/include/c++/5/bits/basic_string.h ****       */
4195:/usr/include/c++/5/bits/basic_string.h ****       size_type
4196:/usr/include/c++/5/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
4197:/usr/include/c++/5/bits/basic_string.h **** 
4198:/usr/include/c++/5/bits/basic_string.h ****       /**
4199:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Swap contents with another string.
4200:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String to swap with.
4201:/usr/include/c++/5/bits/basic_string.h ****        *
4202:/usr/include/c++/5/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
4203:/usr/include/c++/5/bits/basic_string.h ****        *  time.
4204:/usr/include/c++/5/bits/basic_string.h ****       */
4205:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
4206:/usr/include/c++/5/bits/basic_string.h ****       void
4207:/usr/include/c++/5/bits/basic_string.h ****       swap(basic_string& __s);
4208:/usr/include/c++/5/bits/basic_string.h **** 
4209:/usr/include/c++/5/bits/basic_string.h ****       // String operations:
4210:/usr/include/c++/5/bits/basic_string.h ****       /**
4211:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
4212:/usr/include/c++/5/bits/basic_string.h ****        *
4213:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4214:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
4215:/usr/include/c++/5/bits/basic_string.h ****       */
4216:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
4217:/usr/include/c++/5/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
4218:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
4219:/usr/include/c++/5/bits/basic_string.h **** 
4220:/usr/include/c++/5/bits/basic_string.h ****       /**
4221:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
4222:/usr/include/c++/5/bits/basic_string.h ****        *
4223:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4224:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
4225:/usr/include/c++/5/bits/basic_string.h ****       */
4226:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
4227:/usr/include/c++/5/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
4228:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
4229:/usr/include/c++/5/bits/basic_string.h **** 
4230:/usr/include/c++/5/bits/basic_string.h ****       /**
4231:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
4232:/usr/include/c++/5/bits/basic_string.h ****       */
4233:/usr/include/c++/5/bits/basic_string.h ****       allocator_type
4234:/usr/include/c++/5/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
4235:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
4236:/usr/include/c++/5/bits/basic_string.h **** 
4237:/usr/include/c++/5/bits/basic_string.h ****       /**
4238:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C substring.
4239:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4240:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4241:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
4242:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4243:/usr/include/c++/5/bits/basic_string.h ****        *
4244:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
4245:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4246:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
4247:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4248:/usr/include/c++/5/bits/basic_string.h ****       */
4249:/usr/include/c++/5/bits/basic_string.h ****       size_type
4250:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
4251:/usr/include/c++/5/bits/basic_string.h **** 
4252:/usr/include/c++/5/bits/basic_string.h ****       /**
4253:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a string.
4254:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
4255:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4256:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4257:/usr/include/c++/5/bits/basic_string.h ****        *
4258:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
4259:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
4260:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns npos.
4261:/usr/include/c++/5/bits/basic_string.h ****       */
4262:/usr/include/c++/5/bits/basic_string.h ****       size_type
4263:/usr/include/c++/5/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
4264:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4265:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
4266:/usr/include/c++/5/bits/basic_string.h **** 
4267:/usr/include/c++/5/bits/basic_string.h ****       /**
4268:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C string.
4269:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4270:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4271:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4272:/usr/include/c++/5/bits/basic_string.h ****        *
4273:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
4274:/usr/include/c++/5/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
4275:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
4276:/usr/include/c++/5/bits/basic_string.h ****       */
4277:/usr/include/c++/5/bits/basic_string.h ****       size_type
4278:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
4279:/usr/include/c++/5/bits/basic_string.h ****       {
4280:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4281:/usr/include/c++/5/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
4282:/usr/include/c++/5/bits/basic_string.h ****       }
4283:/usr/include/c++/5/bits/basic_string.h **** 
4284:/usr/include/c++/5/bits/basic_string.h ****       /**
4285:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
4286:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4287:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4288:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4289:/usr/include/c++/5/bits/basic_string.h ****        *
4290:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
4291:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4292:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4293:/usr/include/c++/5/bits/basic_string.h ****       */
4294:/usr/include/c++/5/bits/basic_string.h ****       size_type
4295:/usr/include/c++/5/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
4296:/usr/include/c++/5/bits/basic_string.h **** 
4297:/usr/include/c++/5/bits/basic_string.h ****       /**
4298:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a string.
4299:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
4300:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4301:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
4302:/usr/include/c++/5/bits/basic_string.h ****        *
4303:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
4304:/usr/include/c++/5/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
4305:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
4306:/usr/include/c++/5/bits/basic_string.h ****       */
4307:/usr/include/c++/5/bits/basic_string.h ****       size_type
4308:/usr/include/c++/5/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
4309:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4310:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
4311:/usr/include/c++/5/bits/basic_string.h **** 
4312:/usr/include/c++/5/bits/basic_string.h ****       /**
4313:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
4314:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4315:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4316:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4317:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
4318:/usr/include/c++/5/bits/basic_string.h ****        *
4319:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
4320:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4321:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
4322:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4323:/usr/include/c++/5/bits/basic_string.h ****       */
4324:/usr/include/c++/5/bits/basic_string.h ****       size_type
4325:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
4326:/usr/include/c++/5/bits/basic_string.h **** 
4327:/usr/include/c++/5/bits/basic_string.h ****       /**
4328:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C string.
4329:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4330:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
4331:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
4332:/usr/include/c++/5/bits/basic_string.h ****        *
4333:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
4334:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
4335:/usr/include/c++/5/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
4336:/usr/include/c++/5/bits/basic_string.h ****       */
4337:/usr/include/c++/5/bits/basic_string.h ****       size_type
4338:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
4339:/usr/include/c++/5/bits/basic_string.h ****       {
4340:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4341:/usr/include/c++/5/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
4342:/usr/include/c++/5/bits/basic_string.h ****       }
4343:/usr/include/c++/5/bits/basic_string.h **** 
4344:/usr/include/c++/5/bits/basic_string.h ****       /**
4345:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
4346:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4347:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4348:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4349:/usr/include/c++/5/bits/basic_string.h ****        *
4350:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4351:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4352:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4353:/usr/include/c++/5/bits/basic_string.h ****       */
4354:/usr/include/c++/5/bits/basic_string.h ****       size_type
4355:/usr/include/c++/5/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
4356:/usr/include/c++/5/bits/basic_string.h **** 
4357:/usr/include/c++/5/bits/basic_string.h ****       /**
4358:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of string.
4359:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
4360:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4361:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4362:/usr/include/c++/5/bits/basic_string.h ****        *
4363:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4364:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
4365:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4366:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4367:/usr/include/c++/5/bits/basic_string.h ****       */
4368:/usr/include/c++/5/bits/basic_string.h ****       size_type
4369:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
4370:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4371:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
4372:/usr/include/c++/5/bits/basic_string.h **** 
4373:/usr/include/c++/5/bits/basic_string.h ****       /**
4374:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
4375:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
4376:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4377:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4378:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4379:/usr/include/c++/5/bits/basic_string.h ****        *
4380:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4381:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4382:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
4383:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4384:/usr/include/c++/5/bits/basic_string.h ****       */
4385:/usr/include/c++/5/bits/basic_string.h ****       size_type
4386:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
4387:/usr/include/c++/5/bits/basic_string.h **** 
4388:/usr/include/c++/5/bits/basic_string.h ****       /**
4389:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
4390:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
4391:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4392:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4393:/usr/include/c++/5/bits/basic_string.h ****        *
4394:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4395:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4396:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4397:/usr/include/c++/5/bits/basic_string.h ****       */
4398:/usr/include/c++/5/bits/basic_string.h ****       size_type
4399:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
4400:/usr/include/c++/5/bits/basic_string.h ****       {
4401:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4402:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
4403:/usr/include/c++/5/bits/basic_string.h ****       }
4404:/usr/include/c++/5/bits/basic_string.h **** 
4405:/usr/include/c++/5/bits/basic_string.h ****       /**
4406:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
4407:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4408:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4409:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4410:/usr/include/c++/5/bits/basic_string.h ****        *
4411:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
4412:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
4413:/usr/include/c++/5/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
4414:/usr/include/c++/5/bits/basic_string.h ****        *
4415:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
4416:/usr/include/c++/5/bits/basic_string.h ****       */
4417:/usr/include/c++/5/bits/basic_string.h ****       size_type
4418:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
4419:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__c, __pos); }
4420:/usr/include/c++/5/bits/basic_string.h **** 
4421:/usr/include/c++/5/bits/basic_string.h ****       /**
4422:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
4423:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
4424:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4425:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4426:/usr/include/c++/5/bits/basic_string.h ****        *
4427:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4428:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
4429:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4430:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4431:/usr/include/c++/5/bits/basic_string.h ****       */
4432:/usr/include/c++/5/bits/basic_string.h ****       size_type
4433:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
4434:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4435:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
4436:/usr/include/c++/5/bits/basic_string.h **** 
4437:/usr/include/c++/5/bits/basic_string.h ****       /**
4438:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
4439:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
4440:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4441:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4442:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4443:/usr/include/c++/5/bits/basic_string.h ****        *
4444:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4445:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4446:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
4447:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4448:/usr/include/c++/5/bits/basic_string.h ****       */
4449:/usr/include/c++/5/bits/basic_string.h ****       size_type
4450:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
4451:/usr/include/c++/5/bits/basic_string.h **** 
4452:/usr/include/c++/5/bits/basic_string.h ****       /**
4453:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
4454:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
4455:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4456:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4457:/usr/include/c++/5/bits/basic_string.h ****        *
4458:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4459:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4460:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4461:/usr/include/c++/5/bits/basic_string.h ****       */
4462:/usr/include/c++/5/bits/basic_string.h ****       size_type
4463:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
4464:/usr/include/c++/5/bits/basic_string.h ****       {
4465:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4466:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
4467:/usr/include/c++/5/bits/basic_string.h ****       }
4468:/usr/include/c++/5/bits/basic_string.h **** 
4469:/usr/include/c++/5/bits/basic_string.h ****       /**
4470:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
4471:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4472:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4473:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4474:/usr/include/c++/5/bits/basic_string.h ****        *
4475:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4476:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4477:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4478:/usr/include/c++/5/bits/basic_string.h ****        *
4479:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
4480:/usr/include/c++/5/bits/basic_string.h ****       */
4481:/usr/include/c++/5/bits/basic_string.h ****       size_type
4482:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
4483:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
4484:/usr/include/c++/5/bits/basic_string.h **** 
4485:/usr/include/c++/5/bits/basic_string.h ****       /**
4486:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
4487:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
4488:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4489:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4490:/usr/include/c++/5/bits/basic_string.h ****        *
4491:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
4492:/usr/include/c++/5/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
4493:/usr/include/c++/5/bits/basic_string.h ****        *  was found.  If not found, returns npos.
4494:/usr/include/c++/5/bits/basic_string.h ****       */
4495:/usr/include/c++/5/bits/basic_string.h ****       size_type
4496:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
4497:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4498:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
4499:/usr/include/c++/5/bits/basic_string.h **** 
4500:/usr/include/c++/5/bits/basic_string.h ****       /**
4501:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
4502:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4503:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4504:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
4505:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4506:/usr/include/c++/5/bits/basic_string.h ****        *
4507:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4508:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
4509:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4510:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4511:/usr/include/c++/5/bits/basic_string.h ****       */
4512:/usr/include/c++/5/bits/basic_string.h ****       size_type
4513:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
4514:/usr/include/c++/5/bits/basic_string.h **** 			size_type __n) const;
4515:/usr/include/c++/5/bits/basic_string.h **** 
4516:/usr/include/c++/5/bits/basic_string.h ****       /**
4517:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
4518:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4519:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4520:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4521:/usr/include/c++/5/bits/basic_string.h ****        *
4522:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4523:/usr/include/c++/5/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
4524:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4525:/usr/include/c++/5/bits/basic_string.h ****       */
4526:/usr/include/c++/5/bits/basic_string.h ****       size_type
4527:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
4528:/usr/include/c++/5/bits/basic_string.h ****       {
4529:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4530:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
4531:/usr/include/c++/5/bits/basic_string.h ****       }
4532:/usr/include/c++/5/bits/basic_string.h **** 
4533:/usr/include/c++/5/bits/basic_string.h ****       /**
4534:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a different character.
4535:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
4536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4537:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4538:/usr/include/c++/5/bits/basic_string.h ****        *
4539:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
4540:/usr/include/c++/5/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
4541:/usr/include/c++/5/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
4542:/usr/include/c++/5/bits/basic_string.h ****       */
4543:/usr/include/c++/5/bits/basic_string.h ****       size_type
4544:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
4545:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4546:/usr/include/c++/5/bits/basic_string.h **** 
4547:/usr/include/c++/5/bits/basic_string.h ****       /**
4548:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
4549:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
4550:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4551:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4552:/usr/include/c++/5/bits/basic_string.h ****        *
4553:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4554:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
4555:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4556:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4557:/usr/include/c++/5/bits/basic_string.h ****       */
4558:/usr/include/c++/5/bits/basic_string.h ****       size_type
4559:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
4560:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4561:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
4562:/usr/include/c++/5/bits/basic_string.h **** 
4563:/usr/include/c++/5/bits/basic_string.h ****       /**
4564:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
4565:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4566:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4567:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
4568:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4569:/usr/include/c++/5/bits/basic_string.h ****        *
4570:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
4571:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
4572:/usr/include/c++/5/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
4573:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4574:/usr/include/c++/5/bits/basic_string.h ****       */
4575:/usr/include/c++/5/bits/basic_string.h ****       size_type
4576:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
4577:/usr/include/c++/5/bits/basic_string.h **** 		       size_type __n) const;
4578:/usr/include/c++/5/bits/basic_string.h ****       /**
4579:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
4580:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4581:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4582:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4583:/usr/include/c++/5/bits/basic_string.h ****        *
4584:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4585:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
4586:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4587:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4588:/usr/include/c++/5/bits/basic_string.h ****       */
4589:/usr/include/c++/5/bits/basic_string.h ****       size_type
4590:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
4591:/usr/include/c++/5/bits/basic_string.h ****       {
4592:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4593:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
4594:/usr/include/c++/5/bits/basic_string.h ****       }
4595:/usr/include/c++/5/bits/basic_string.h **** 
4596:/usr/include/c++/5/bits/basic_string.h ****       /**
4597:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a different character.
4598:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
4599:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4600:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4601:/usr/include/c++/5/bits/basic_string.h ****        *
4602:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
4603:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
4604:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4605:/usr/include/c++/5/bits/basic_string.h ****       */
4606:/usr/include/c++/5/bits/basic_string.h ****       size_type
4607:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
4608:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4609:/usr/include/c++/5/bits/basic_string.h **** 
4610:/usr/include/c++/5/bits/basic_string.h ****       /**
4611:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Get a substring.
4612:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
4613:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
4614:/usr/include/c++/5/bits/basic_string.h ****        *  @return  The new string.
4615:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4616:/usr/include/c++/5/bits/basic_string.h ****        *
4617:/usr/include/c++/5/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
4618:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
4619:/usr/include/c++/5/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
4620:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
4621:/usr/include/c++/5/bits/basic_string.h ****       */
4622:/usr/include/c++/5/bits/basic_string.h ****       basic_string
4623:/usr/include/c++/5/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
4624:/usr/include/c++/5/bits/basic_string.h ****       { return basic_string(*this,
4625:/usr/include/c++/5/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
4626:/usr/include/c++/5/bits/basic_string.h **** 
4627:/usr/include/c++/5/bits/basic_string.h ****       /**
4628:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a string.
4629:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4630:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4631:/usr/include/c++/5/bits/basic_string.h ****        *
4632:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
4633:/usr/include/c++/5/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
4634:/usr/include/c++/5/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
4635:/usr/include/c++/5/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
4636:/usr/include/c++/5/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
4637:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
4638:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4639:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
4640:/usr/include/c++/5/bits/basic_string.h ****       */
4641:/usr/include/c++/5/bits/basic_string.h ****       int
4642:/usr/include/c++/5/bits/basic_string.h ****       compare(const basic_string& __str) const
4643:/usr/include/c++/5/bits/basic_string.h ****       {
4644:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
4645:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __osize = __str.size();
4646:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
4647:/usr/include/c++/5/bits/basic_string.h **** 
4648:/usr/include/c++/5/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
4649:/usr/include/c++/5/bits/basic_string.h **** 	if (!__r)
4650:/usr/include/c++/5/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
4651:/usr/include/c++/5/bits/basic_string.h **** 	return __r;
4652:/usr/include/c++/5/bits/basic_string.h ****       }
4653:/usr/include/c++/5/bits/basic_string.h **** 
4654:/usr/include/c++/5/bits/basic_string.h ****       /**
4655:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a string.
4656:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4657:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
4658:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4659:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4660:/usr/include/c++/5/bits/basic_string.h ****        *
4661:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
4662:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
4663:/usr/include/c++/5/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
4664:/usr/include/c++/5/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
4665:/usr/include/c++/5/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
4666:/usr/include/c++/5/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
4667:/usr/include/c++/5/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
4668:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling
4669:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
4670:/usr/include/c++/5/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
4671:/usr/include/c++/5/bits/basic_string.h ****        *  the shorter one is ordered first.
4672:/usr/include/c++/5/bits/basic_string.h ****       */
4673:/usr/include/c++/5/bits/basic_string.h ****       int
4674:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
4675:/usr/include/c++/5/bits/basic_string.h **** 
4676:/usr/include/c++/5/bits/basic_string.h ****       /**
4677:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
4678:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
4679:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4680:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4681:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
4682:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
4683:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4684:/usr/include/c++/5/bits/basic_string.h ****        *
4685:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4686:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
4687:/usr/include/c++/5/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
4688:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
4689:/usr/include/c++/5/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
4690:/usr/include/c++/5/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
4691:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
4692:/usr/include/c++/5/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
4693:/usr/include/c++/5/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
4694:/usr/include/c++/5/bits/basic_string.h ****        *  calling
4695:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
4696:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4697:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
4698:/usr/include/c++/5/bits/basic_string.h ****       */
4699:/usr/include/c++/5/bits/basic_string.h ****       int
4700:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
4701:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
4702:/usr/include/c++/5/bits/basic_string.h **** 
4703:/usr/include/c++/5/bits/basic_string.h ****       /**
4704:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a C string.
4705:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
4706:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4707:/usr/include/c++/5/bits/basic_string.h ****        *
4708:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
4709:/usr/include/c++/5/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
4710:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
4711:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
4712:/usr/include/c++/5/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
4713:/usr/include/c++/5/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
4714:/usr/include/c++/5/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
4715:/usr/include/c++/5/bits/basic_string.h ****        *  ordered first.
4716:/usr/include/c++/5/bits/basic_string.h ****       */
4717:/usr/include/c++/5/bits/basic_string.h ****       int
4718:/usr/include/c++/5/bits/basic_string.h ****       compare(const _CharT* __s) const;
4719:/usr/include/c++/5/bits/basic_string.h **** 
4720:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4721:/usr/include/c++/5/bits/basic_string.h ****       // 5 String::compare specification questionable
4722:/usr/include/c++/5/bits/basic_string.h ****       /**
4723:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
4724:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4725:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4726:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
4727:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4728:/usr/include/c++/5/bits/basic_string.h ****        *
4729:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4730:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
4731:/usr/include/c++/5/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
4732:/usr/include/c++/5/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
4733:/usr/include/c++/5/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
4734:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
4735:/usr/include/c++/5/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
4736:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two string by calling
4737:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
4738:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4739:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
4740:/usr/include/c++/5/bits/basic_string.h ****       */
4741:/usr/include/c++/5/bits/basic_string.h ****       int
4742:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
4743:/usr/include/c++/5/bits/basic_string.h **** 
4744:/usr/include/c++/5/bits/basic_string.h ****       /**
4745:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
4746:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4747:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4748:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  character %array to compare against.
4749:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
4750:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4751:/usr/include/c++/5/bits/basic_string.h ****        *
4752:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4753:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
4754:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
4755:/usr/include/c++/5/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
4756:/usr/include/c++/5/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
4757:/usr/include/c++/5/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
4758:/usr/include/c++/5/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
4759:/usr/include/c++/5/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
4760:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two strings by calling
4761:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
4762:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4763:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
4764:/usr/include/c++/5/bits/basic_string.h ****        *
4765:/usr/include/c++/5/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
4766:/usr/include/c++/5/bits/basic_string.h ****        *  no special meaning.
4767:/usr/include/c++/5/bits/basic_string.h ****       */
4768:/usr/include/c++/5/bits/basic_string.h ****       int
4769:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
4770:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2) const;
4771:/usr/include/c++/5/bits/basic_string.h ****   };
4772:/usr/include/c++/5/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
4773:/usr/include/c++/5/bits/basic_string.h **** 
4774:/usr/include/c++/5/bits/basic_string.h ****   // operator+
4775:/usr/include/c++/5/bits/basic_string.h ****   /**
4776:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate two strings.
4777:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4778:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4779:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4780:/usr/include/c++/5/bits/basic_string.h ****    */
4781:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4782:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
4783:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4784:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4785:/usr/include/c++/5/bits/basic_string.h ****     {
4786:/usr/include/c++/5/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4787:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
4788:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4789:/usr/include/c++/5/bits/basic_string.h ****     }
4790:/usr/include/c++/5/bits/basic_string.h **** 
4791:/usr/include/c++/5/bits/basic_string.h ****   /**
4792:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
4793:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4794:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4795:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4796:/usr/include/c++/5/bits/basic_string.h ****    */
4797:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4798:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4799:/usr/include/c++/5/bits/basic_string.h ****     operator+(const _CharT* __lhs,
4800:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4801:/usr/include/c++/5/bits/basic_string.h **** 
4802:/usr/include/c++/5/bits/basic_string.h ****   /**
4803:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate character and string.
4804:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4805:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4806:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4807:/usr/include/c++/5/bits/basic_string.h ****    */
4808:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4809:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4810:/usr/include/c++/5/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4811:/usr/include/c++/5/bits/basic_string.h **** 
4812:/usr/include/c++/5/bits/basic_string.h ****   /**
4813:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
4814:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4815:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4816:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4817:/usr/include/c++/5/bits/basic_string.h ****    */
4818:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4819:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4820:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4821:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __rhs)
4822:/usr/include/c++/5/bits/basic_string.h ****     {
4823:/usr/include/c++/5/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4824:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
4825:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4826:/usr/include/c++/5/bits/basic_string.h ****     }
4827:/usr/include/c++/5/bits/basic_string.h **** 
4828:/usr/include/c++/5/bits/basic_string.h ****   /**
4829:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate string and character.
4830:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4831:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4832:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4833:/usr/include/c++/5/bits/basic_string.h ****    */
4834:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4835:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4836:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
4837:/usr/include/c++/5/bits/basic_string.h ****     {
4838:/usr/include/c++/5/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
4839:/usr/include/c++/5/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
4840:/usr/include/c++/5/bits/basic_string.h ****       __string_type __str(__lhs);
4841:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
4842:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4843:/usr/include/c++/5/bits/basic_string.h ****     }
4844:/usr/include/c++/5/bits/basic_string.h **** 
4845:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
4846:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4847:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4848:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4849:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4850:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
4851:/usr/include/c++/5/bits/basic_string.h **** 
4852:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4853:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4854:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4855:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4856:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
4857:/usr/include/c++/5/bits/basic_string.h **** 
4858:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4859:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4860:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4861:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4862:/usr/include/c++/5/bits/basic_string.h ****     {
4863:/usr/include/c++/5/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
4864:/usr/include/c++/5/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
4865:/usr/include/c++/5/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
4866:/usr/include/c++/5/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
4867:/usr/include/c++/5/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
4868:/usr/include/c++/5/bits/basic_string.h ****     }
4869:/usr/include/c++/5/bits/basic_string.h **** 
4870:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4871:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4872:/usr/include/c++/5/bits/basic_string.h ****     operator+(const _CharT* __lhs,
4873:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4874:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
4875:/usr/include/c++/5/bits/basic_string.h **** 
4876:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4877:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4878:/usr/include/c++/5/bits/basic_string.h ****     operator+(_CharT __lhs,
4879:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4880:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
4881:/usr/include/c++/5/bits/basic_string.h **** 
4882:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4883:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4884:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4885:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __rhs)
4886:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
4887:/usr/include/c++/5/bits/basic_string.h **** 
4888:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4889:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4890:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4891:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT __rhs)
4892:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
4893:/usr/include/c++/5/bits/basic_string.h **** #endif
4894:/usr/include/c++/5/bits/basic_string.h **** 
4895:/usr/include/c++/5/bits/basic_string.h ****   // operator ==
4896:/usr/include/c++/5/bits/basic_string.h ****   /**
4897:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
4898:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4899:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Second string.
4900:/usr/include/c++/5/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
4901:/usr/include/c++/5/bits/basic_string.h ****    */
4902:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4903:/usr/include/c++/5/bits/basic_string.h ****     inline bool
4904:/usr/include/c++/5/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4905:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4906:/usr/include/c++/5/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
4907:/usr/include/c++/5/bits/basic_string.h **** 
4908:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT>
4909:/usr/include/c++/5/bits/basic_string.h ****     inline
4910:/usr/include/c++/5/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
4911:/usr/include/c++/5/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
4912:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs)
4913:/usr/include/c++/5/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
4914:/usr/include/c++/5/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
4915:/usr/include/c++/5/bits/basic_string.h **** 						    __lhs.size())); }
4916:/usr/include/c++/5/bits/basic_string.h **** 
4917:/usr/include/c++/5/bits/basic_string.h ****   /**
4918:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
4919:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  C string.
4920:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  String.
4921:/usr/include/c++/5/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
4922:/usr/include/c++/5/bits/basic_string.h ****    */
4923:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4924:/usr/include/c++/5/bits/basic_string.h ****     inline bool
4925:/usr/include/c++/5/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 7906              		.loc 10 4925 0
 7907              		.cfi_startproc
 7908 0000 55       		pushq	%rbp
 7909              		.cfi_def_cfa_offset 16
 7910              		.cfi_offset 6, -16
 7911 0001 4889E5   		movq	%rsp, %rbp
 7912              		.cfi_def_cfa_register 6
 7913 0004 4883EC10 		subq	$16, %rsp
 7914 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7915 000c 488975F0 		movq	%rsi, -16(%rbp)
4926:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4927:/usr/include/c++/5/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 7916              		.loc 10 4927 0
 7917 0010 488B55F8 		movq	-8(%rbp), %rdx
 7918 0014 488B45F0 		movq	-16(%rbp), %rax
 7919 0018 4889D6   		movq	%rdx, %rsi
 7920 001b 4889C7   		movq	%rax, %rdi
 7921 001e E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 7921      00
 7922 0023 85C0     		testl	%eax, %eax
 7923 0025 0F94C0   		sete	%al
 7924 0028 C9       		leave
 7925              		.cfi_def_cfa 7, 8
 7926 0029 C3       		ret
 7927              		.cfi_endproc
 7928              	.LFE1521:
 7930              		.section	.text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_,"axG",@progbits,_ZN8UnitTest8AreCloseIff
 7931              		.weak	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 7933              	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:
 7934              	.LFB1523:
  39:../Checks.h   **** {
 7935              		.loc 8 39 0
 7936              		.cfi_startproc
 7937 0000 55       		pushq	%rbp
 7938              		.cfi_def_cfa_offset 16
 7939              		.cfi_offset 6, -16
 7940 0001 4889E5   		movq	%rsp, %rbp
 7941              		.cfi_def_cfa_register 6
 7942 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7943 0008 488975F0 		movq	%rsi, -16(%rbp)
 7944 000c 488955E8 		movq	%rdx, -24(%rbp)
  41:../Checks.h   **** }
 7945              		.loc 8 41 0
 7946 0010 488B45F0 		movq	-16(%rbp), %rax
 7947 0014 F30F1008 		movss	(%rax), %xmm1
 7948 0018 488B45F8 		movq	-8(%rbp), %rax
 7949 001c F30F1000 		movss	(%rax), %xmm0
 7950 0020 488B45E8 		movq	-24(%rbp), %rax
 7951 0024 F30F1010 		movss	(%rax), %xmm2
 7952 0028 F30F5CC2 		subss	%xmm2, %xmm0
 7953 002c 0F2EC8   		ucomiss	%xmm0, %xmm1
 7954 002f 7228     		jb	.L440
  41:../Checks.h   **** }
 7955              		.loc 8 41 0 is_stmt 0 discriminator 1
 7956 0031 488B45F0 		movq	-16(%rbp), %rax
 7957 0035 F30F1008 		movss	(%rax), %xmm1
 7958 0039 488B45F8 		movq	-8(%rbp), %rax
 7959 003d F30F1010 		movss	(%rax), %xmm2
 7960 0041 488B45E8 		movq	-24(%rbp), %rax
 7961 0045 F30F1000 		movss	(%rax), %xmm0
 7962 0049 F30F58C2 		addss	%xmm2, %xmm0
 7963 004d 0F2EC1   		ucomiss	%xmm1, %xmm0
 7964 0050 7207     		jb	.L440
  41:../Checks.h   **** }
 7965              		.loc 8 41 0 discriminator 3
 7966 0052 B8010000 		movl	$1, %eax
 7966      00
 7967 0057 EB05     		jmp	.L444
 7968              	.L440:
  41:../Checks.h   **** }
 7969              		.loc 8 41 0 discriminator 4
 7970 0059 B8000000 		movl	$0, %eax
 7970      00
 7971              	.L444:
  42:../Checks.h   **** 
 7972              		.loc 8 42 0 is_stmt 1 discriminator 7
 7973 005e 5D       		popq	%rbp
 7974              		.cfi_def_cfa 7, 8
 7975 005f C3       		ret
 7976              		.cfi_endproc
 7977              	.LFE1523:
 7979              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7980              		.align 2
 7981              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_ran
 7983              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_chec
 7984              	.LFB1525:
 800:/usr/include/c++/5/bits/stl_vector.h ****       {
 7985              		.loc 6 800 0
 7986              		.cfi_startproc
 7987 0000 55       		pushq	%rbp
 7988              		.cfi_def_cfa_offset 16
 7989              		.cfi_offset 6, -16
 7990 0001 4889E5   		movq	%rsp, %rbp
 7991              		.cfi_def_cfa_register 6
 7992 0004 4883EC10 		subq	$16, %rsp
 7993 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7994 000c 488975F0 		movq	%rsi, -16(%rbp)
 802:/usr/include/c++/5/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 7995              		.loc 6 802 0
 7996 0010 488B45F8 		movq	-8(%rbp), %rax
 7997 0014 4889C7   		movq	%rax, %rdi
 7998 0017 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 7998      00
 7999 001c 483B45F0 		cmpq	-16(%rbp), %rax
 8000 0020 0F96C0   		setbe	%al
 8001 0023 84C0     		testb	%al, %al
 8002 0025 7425     		je	.L449
 803:/usr/include/c++/5/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 8003              		.loc 6 803 0
 8004 0027 488B45F8 		movq	-8(%rbp), %rax
 8005 002b 4889C7   		movq	%rax, %rdi
 8006 002e E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 8006      00
 8007 0033 4889C2   		movq	%rax, %rdx
 8008 0036 488B45F0 		movq	-16(%rbp), %rax
 8009 003a 4889C6   		movq	%rax, %rsi
 8010 003d BF000000 		movl	$.LC37, %edi
 8010      00
 8011 0042 B8000000 		movl	$0, %eax
 8011      00
 8012 0047 E8000000 		call	_ZSt24__throw_out_of_range_fmtPKcz
 8012      00
 8013              	.L449:
 807:/usr/include/c++/5/bits/stl_vector.h **** 
 8014              		.loc 6 807 0
 8015 004c 90       		nop
 8016 004d C9       		leave
 8017              		.cfi_def_cfa 7, 8
 8018 004e C3       		ret
 8019              		.cfi_endproc
 8020              	.LFE1525:
 8022              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev,"axG"
 8023              		.align 2
 8024              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
 8026              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:
 8027              	.LFB1537:
  86:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
 8028              		.loc 6 86 0
 8029              		.cfi_startproc
 8030 0000 55       		pushq	%rbp
 8031              		.cfi_def_cfa_offset 16
 8032              		.cfi_offset 6, -16
 8033 0001 4889E5   		movq	%rsp, %rbp
 8034              		.cfi_def_cfa_register 6
 8035 0004 4883EC10 		subq	$16, %rsp
 8036 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8037              	.LBB147:
  87:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
 8038              		.loc 6 87 0
 8039 000c 488B45F8 		movq	-8(%rbp), %rax
 8040 0010 4889C7   		movq	%rax, %rdi
 8041 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8041      00
 8042 0018 488B45F8 		movq	-8(%rbp), %rax
 8043 001c 48C70000 		movq	$0, (%rax)
 8043      000000
 8044 0023 488B45F8 		movq	-8(%rbp), %rax
 8045 0027 48C74008 		movq	$0, 8(%rax)
 8045      00000000 
 8046 002f 488B45F8 		movq	-8(%rbp), %rax
 8047 0033 48C74010 		movq	$0, 16(%rax)
 8047      00000000 
 8048              	.LBE147:
  88:/usr/include/c++/5/bits/stl_vector.h **** 
 8049              		.loc 6 88 0
 8050 003b 90       		nop
 8051 003c C9       		leave
 8052              		.cfi_def_cfa 7, 8
 8053 003d C3       		ret
 8054              		.cfi_endproc
 8055              	.LFE1537:
 8057              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 8058              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev,_ZNSt12_Vector_
 8059              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 8060              		.align 2
 8061              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8063              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 8064              	.LFB1540:
 8065              		.file 11 "/usr/include/c++/5/bits/allocator.h"
   1:/usr/include/c++/5/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/5/bits/allocator.h **** 
   3:/usr/include/c++/5/bits/allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/allocator.h **** //
   5:/usr/include/c++/5/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/allocator.h **** // any later version.
  10:/usr/include/c++/5/bits/allocator.h **** 
  11:/usr/include/c++/5/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/allocator.h **** 
  16:/usr/include/c++/5/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/allocator.h **** 
  20:/usr/include/c++/5/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/allocator.h **** 
  25:/usr/include/c++/5/bits/allocator.h **** /*
  26:/usr/include/c++/5/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/5/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/5/bits/allocator.h ****  *
  29:/usr/include/c++/5/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/5/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/5/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/5/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/5/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/5/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/5/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/5/bits/allocator.h ****  */
  37:/usr/include/c++/5/bits/allocator.h **** 
  38:/usr/include/c++/5/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/5/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/5/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/5/bits/allocator.h ****  */
  42:/usr/include/c++/5/bits/allocator.h **** 
  43:/usr/include/c++/5/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/5/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/5/bits/allocator.h **** 
  46:/usr/include/c++/5/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/5/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/5/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/5/bits/allocator.h **** #endif
  51:/usr/include/c++/5/bits/allocator.h **** 
  52:/usr/include/c++/5/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/5/bits/allocator.h **** {
  54:/usr/include/c++/5/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/5/bits/allocator.h **** 
  56:/usr/include/c++/5/bits/allocator.h ****   /**
  57:/usr/include/c++/5/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/5/bits/allocator.h ****    *  @{
  59:/usr/include/c++/5/bits/allocator.h ****    */
  60:/usr/include/c++/5/bits/allocator.h **** 
  61:/usr/include/c++/5/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/5/bits/allocator.h ****   template<>
  63:/usr/include/c++/5/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/5/bits/allocator.h ****     {
  65:/usr/include/c++/5/bits/allocator.h ****     public:
  66:/usr/include/c++/5/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/5/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/5/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/5/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/5/bits/allocator.h **** 
  72:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/5/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/5/bits/allocator.h **** 
  76:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/5/bits/allocator.h **** #endif
  81:/usr/include/c++/5/bits/allocator.h ****     };
  82:/usr/include/c++/5/bits/allocator.h **** 
  83:/usr/include/c++/5/bits/allocator.h ****   /**
  84:/usr/include/c++/5/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/5/bits/allocator.h ****    *
  86:/usr/include/c++/5/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
  87:/usr/include/c++/5/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/5/bits/allocator.h ****    *
  89:/usr/include/c++/5/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/5/bits/allocator.h ****    */
  91:/usr/include/c++/5/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/5/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/5/bits/allocator.h ****     {
  94:/usr/include/c++/5/bits/allocator.h ****    public:
  95:/usr/include/c++/5/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp        value_type;
 102:/usr/include/c++/5/bits/allocator.h **** 
 103:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/5/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/5/bits/allocator.h **** 
 107:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/5/bits/allocator.h **** #endif
 112:/usr/include/c++/5/bits/allocator.h **** 
 113:/usr/include/c++/5/bits/allocator.h ****       allocator() throw() { }
 114:/usr/include/c++/5/bits/allocator.h **** 
 115:/usr/include/c++/5/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/5/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/5/bits/allocator.h **** 
 118:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/5/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/5/bits/allocator.h **** 
 121:/usr/include/c++/5/bits/allocator.h ****       ~allocator() throw() { }
 8066              		.loc 11 121 0
 8067              		.cfi_startproc
 8068 0000 55       		pushq	%rbp
 8069              		.cfi_def_cfa_offset 16
 8070              		.cfi_offset 6, -16
 8071 0001 4889E5   		movq	%rsp, %rbp
 8072              		.cfi_def_cfa_register 6
 8073 0004 4883EC10 		subq	$16, %rsp
 8074 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8075              	.LBB148:
 8076              		.loc 11 121 0
 8077 000c 488B45F8 		movq	-8(%rbp), %rax
 8078 0010 4889C7   		movq	%rax, %rdi
 8079 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 8079      00
 8080              	.LBE148:
 8081 0018 90       		nop
 8082 0019 C9       		leave
 8083              		.cfi_def_cfa 7, 8
 8084 001a C3       		ret
 8085              		.cfi_endproc
 8086              	.LFE1540:
 8088              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 8089              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8090              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 8091              		.align 2
 8092              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 8094              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 8095              	.LFB1542:
 174:/usr/include/c++/5/bits/stl_vector.h ****       {
 8096              		.loc 6 174 0
 8097              		.cfi_startproc
 8098 0000 55       		pushq	%rbp
 8099              		.cfi_def_cfa_offset 16
 8100              		.cfi_offset 6, -16
 8101 0001 4889E5   		movq	%rsp, %rbp
 8102              		.cfi_def_cfa_register 6
 8103 0004 4883EC20 		subq	$32, %rsp
 8104 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8105 000c 488975F0 		movq	%rsi, -16(%rbp)
 8106 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8107              		.loc 6 177 0
 8108 0014 48837DF0 		cmpq	$0, -16(%rbp)
 8108      00
 8109 0019 7417     		je	.L454
 178:/usr/include/c++/5/bits/stl_vector.h ****       }
 8110              		.loc 6 178 0
 8111 001b 488B45F8 		movq	-8(%rbp), %rax
 8112 001f 488B55E8 		movq	-24(%rbp), %rdx
 8113 0023 488B4DF0 		movq	-16(%rbp), %rcx
 8114 0027 4889CE   		movq	%rcx, %rsi
 8115 002a 4889C7   		movq	%rax, %rdi
 8116 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 8116      00
 8117              	.L454:
 179:/usr/include/c++/5/bits/stl_vector.h **** 
 8118              		.loc 6 179 0
 8119 0032 90       		nop
 8120 0033 C9       		leave
 8121              		.cfi_def_cfa 7, 8
 8122 0034 C3       		ret
 8123              		.cfi_endproc
 8124              	.LFE1542:
 8126              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 8127              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 8129              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 8130              	.LFB1543:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 8131              		.loc 9 122 0
 8132              		.cfi_startproc
 8133 0000 55       		pushq	%rbp
 8134              		.cfi_def_cfa_offset 16
 8135              		.cfi_offset 6, -16
 8136 0001 4889E5   		movq	%rsp, %rbp
 8137              		.cfi_def_cfa_register 6
 8138 0004 4883EC10 		subq	$16, %rsp
 8139 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8140 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 8141              		.loc 9 126 0
 8142 0010 488B55F0 		movq	-16(%rbp), %rdx
 8143 0014 488B45F8 		movq	-8(%rbp), %rax
 8144 0018 4889D6   		movq	%rdx, %rsi
 8145 001b 4889C7   		movq	%rax, %rdi
 8146 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8146      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 8147              		.loc 9 128 0
 8148 0023 90       		nop
 8149 0024 C9       		leave
 8150              		.cfi_def_cfa 7, 8
 8151 0025 C3       		ret
 8152              		.cfi_endproc
 8153              	.LFE1543:
 8155              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 8156              		.align 2
 8157              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8159              	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:
 8160              	.LFB1555:
 113:/usr/include/c++/5/bits/allocator.h **** 
 8161              		.loc 11 113 0
 8162              		.cfi_startproc
 8163 0000 55       		pushq	%rbp
 8164              		.cfi_def_cfa_offset 16
 8165              		.cfi_offset 6, -16
 8166 0001 4889E5   		movq	%rsp, %rbp
 8167              		.cfi_def_cfa_register 6
 8168 0004 4883EC10 		subq	$16, %rsp
 8169 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8170              	.LBB149:
 113:/usr/include/c++/5/bits/allocator.h **** 
 8171              		.loc 11 113 0
 8172 000c 488B45F8 		movq	-8(%rbp), %rax
 8173 0010 4889C7   		movq	%rax, %rdi
 8174 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8174      00
 8175              	.LBE149:
 8176 0018 90       		nop
 8177 0019 C9       		leave
 8178              		.cfi_def_cfa 7, 8
 8179 001a C3       		ret
 8180              		.cfi_endproc
 8181              	.LFE1555:
 8183              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
 8184              		.set	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev,_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8185              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 8186              		.align 2
 8187              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 8189              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 8190              	.LFB1558:
 8191              		.file 12 "/usr/include/c++/5/ext/new_allocator.h"
   1:/usr/include/c++/5/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/5/ext/new_allocator.h **** 
   3:/usr/include/c++/5/ext/new_allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/new_allocator.h **** //
   5:/usr/include/c++/5/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/5/ext/new_allocator.h **** 
  11:/usr/include/c++/5/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/new_allocator.h **** 
  16:/usr/include/c++/5/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/new_allocator.h **** 
  20:/usr/include/c++/5/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/new_allocator.h **** 
  25:/usr/include/c++/5/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/5/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/new_allocator.h ****  */
  28:/usr/include/c++/5/ext/new_allocator.h **** 
  29:/usr/include/c++/5/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/5/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/5/ext/new_allocator.h **** 
  32:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/5/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/5/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/5/ext/new_allocator.h **** #endif
  39:/usr/include/c++/5/ext/new_allocator.h **** 
  40:/usr/include/c++/5/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/5/ext/new_allocator.h **** {
  42:/usr/include/c++/5/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/5/ext/new_allocator.h **** 
  44:/usr/include/c++/5/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/5/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/5/ext/new_allocator.h **** 
  47:/usr/include/c++/5/ext/new_allocator.h ****   /**
  48:/usr/include/c++/5/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/5/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/5/ext/new_allocator.h ****    *
  51:/usr/include/c++/5/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/5/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/5/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/5/ext/new_allocator.h ****    *
  55:/usr/include/c++/5/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/5/ext/new_allocator.h ****    */
  57:/usr/include/c++/5/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/5/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/5/ext/new_allocator.h ****     {
  60:/usr/include/c++/5/ext/new_allocator.h ****     public:
  61:/usr/include/c++/5/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/5/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/5/ext/new_allocator.h **** 
  69:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/5/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/5/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/5/ext/new_allocator.h **** 
  73:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/5/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/5/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/5/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/5/ext/new_allocator.h **** #endif
  78:/usr/include/c++/5/ext/new_allocator.h **** 
  79:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/5/ext/new_allocator.h **** 
  81:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/5/ext/new_allocator.h **** 
  83:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/5/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/5/ext/new_allocator.h **** 
  86:/usr/include/c++/5/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8192              		.loc 12 86 0
 8193              		.cfi_startproc
 8194 0000 55       		pushq	%rbp
 8195              		.cfi_def_cfa_offset 16
 8196              		.cfi_offset 6, -16
 8197 0001 4889E5   		movq	%rsp, %rbp
 8198              		.cfi_def_cfa_register 6
 8199 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8200              		.loc 12 86 0
 8201 0008 90       		nop
 8202 0009 5D       		popq	%rbp
 8203              		.cfi_def_cfa 7, 8
 8204 000a C3       		ret
 8205              		.cfi_endproc
 8206              	.LFE1558:
 8208              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 8209              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 8210              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_
 8211              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 8213              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:
 8214              	.LFB1560:
 8215              		.file 13 "/usr/include/c++/5/ext/alloc_traits.h"
   1:/usr/include/c++/5/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/5/ext/alloc_traits.h **** 
   3:/usr/include/c++/5/ext/alloc_traits.h **** // Copyright (C) 2011-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/alloc_traits.h **** //
   5:/usr/include/c++/5/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/5/ext/alloc_traits.h **** 
  11:/usr/include/c++/5/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/alloc_traits.h **** 
  16:/usr/include/c++/5/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/alloc_traits.h **** 
  20:/usr/include/c++/5/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/alloc_traits.h **** 
  25:/usr/include/c++/5/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/5/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/alloc_traits.h ****  */
  28:/usr/include/c++/5/ext/alloc_traits.h **** 
  29:/usr/include/c++/5/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/5/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/5/ext/alloc_traits.h **** 
  32:/usr/include/c++/5/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/5/ext/alloc_traits.h **** 
  34:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/5/ext/alloc_traits.h **** #else
  38:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/5/ext/alloc_traits.h **** 
  41:/usr/include/c++/5/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/5/ext/alloc_traits.h **** {
  43:/usr/include/c++/5/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/5/ext/alloc_traits.h **** 
  45:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Alloc>
  47:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal : std::false_type { };
  48:/usr/include/c++/5/ext/alloc_traits.h **** 
  49:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  50:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<std::allocator<_Tp>>
  51:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  52:/usr/include/c++/5/ext/alloc_traits.h **** 
  53:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename, typename> struct array_allocator;
  54:/usr/include/c++/5/ext/alloc_traits.h **** 
  55:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp, typename _Array>
  56:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<array_allocator<_Tp, _Array>>
  57:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  58:/usr/include/c++/5/ext/alloc_traits.h **** 
  59:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct bitmap_allocator;
  60:/usr/include/c++/5/ext/alloc_traits.h **** 
  61:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  62:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<bitmap_allocator<_Tp>>
  63:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  64:/usr/include/c++/5/ext/alloc_traits.h **** 
  65:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct malloc_allocator;
  66:/usr/include/c++/5/ext/alloc_traits.h **** 
  67:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  68:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<malloc_allocator<_Tp>>
  69:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  70:/usr/include/c++/5/ext/alloc_traits.h **** 
  71:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct mt_allocator;
  72:/usr/include/c++/5/ext/alloc_traits.h **** 
  73:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  74:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<mt_allocator<_Tp>>
  75:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  76:/usr/include/c++/5/ext/alloc_traits.h **** 
  77:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct new_allocator;
  78:/usr/include/c++/5/ext/alloc_traits.h **** 
  79:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  80:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<new_allocator<_Tp>>
  81:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  82:/usr/include/c++/5/ext/alloc_traits.h **** 
  83:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct pool_allocator;
  84:/usr/include/c++/5/ext/alloc_traits.h **** 
  85:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  86:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<pool_allocator<_Tp>>
  87:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  88:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  89:/usr/include/c++/5/ext/alloc_traits.h **** 
  90:/usr/include/c++/5/ext/alloc_traits.h **** /**
  91:/usr/include/c++/5/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++0x allocators.
  92:/usr/include/c++/5/ext/alloc_traits.h ****  * @ingroup allocators
  93:/usr/include/c++/5/ext/alloc_traits.h **** */
  94:/usr/include/c++/5/ext/alloc_traits.h **** template<typename _Alloc>
  95:/usr/include/c++/5/ext/alloc_traits.h ****   struct __alloc_traits
  96:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/5/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  98:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  99:/usr/include/c++/5/ext/alloc_traits.h ****   {
 100:/usr/include/c++/5/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
 101:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
 102:/usr/include/c++/5/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
 103:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
 104:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
 105:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
 106:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
 107:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
 108:/usr/include/c++/5/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
 109:/usr/include/c++/5/ext/alloc_traits.h ****     typedef value_type&                             reference;
 110:/usr/include/c++/5/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
 111:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::allocate;
 112:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::deallocate;
 113:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::construct;
 114:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::destroy;
 115:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::max_size;
 116:/usr/include/c++/5/ext/alloc_traits.h **** 
 117:/usr/include/c++/5/ext/alloc_traits.h ****   private:
 118:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr>
 119:/usr/include/c++/5/ext/alloc_traits.h ****       using __is_custom_pointer
 120:/usr/include/c++/5/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
 121:/usr/include/c++/5/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
 122:/usr/include/c++/5/ext/alloc_traits.h **** 
 123:/usr/include/c++/5/ext/alloc_traits.h ****   public:
 124:/usr/include/c++/5/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
 125:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
 126:/usr/include/c++/5/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 127:/usr/include/c++/5/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
 128:/usr/include/c++/5/ext/alloc_traits.h ****       {
 129:/usr/include/c++/5/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
 130:/usr/include/c++/5/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
 131:/usr/include/c++/5/ext/alloc_traits.h ****       }
 132:/usr/include/c++/5/ext/alloc_traits.h **** 
 133:/usr/include/c++/5/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
 134:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr>
 135:/usr/include/c++/5/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 136:/usr/include/c++/5/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
 137:/usr/include/c++/5/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
 138:/usr/include/c++/5/ext/alloc_traits.h **** 
 139:/usr/include/c++/5/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 140:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 141:/usr/include/c++/5/ext/alloc_traits.h **** 
 142:/usr/include/c++/5/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
 143:/usr/include/c++/5/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 144:/usr/include/c++/5/ext/alloc_traits.h **** 
 145:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 146:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 147:/usr/include/c++/5/ext/alloc_traits.h **** 
 148:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 149:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 150:/usr/include/c++/5/ext/alloc_traits.h **** 
 151:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 152:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 153:/usr/include/c++/5/ext/alloc_traits.h **** 
 154:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 155:/usr/include/c++/5/ext/alloc_traits.h ****     { return __allocator_always_compares_equal<_Alloc>::value; }
 156:/usr/include/c++/5/ext/alloc_traits.h **** 
 157:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 158:/usr/include/c++/5/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 159:/usr/include/c++/5/ext/alloc_traits.h **** 
 160:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_swap()
 161:/usr/include/c++/5/ext/alloc_traits.h ****     {
 162:/usr/include/c++/5/ext/alloc_traits.h ****       using std::swap;
 163:/usr/include/c++/5/ext/alloc_traits.h ****       return !_S_propagate_on_swap()
 164:/usr/include/c++/5/ext/alloc_traits.h ****        	|| noexcept(swap(std::declval<_Alloc&>(), std::declval<_Alloc&>()));
 165:/usr/include/c++/5/ext/alloc_traits.h ****     }
 166:/usr/include/c++/5/ext/alloc_traits.h **** 
 167:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Tp>
 168:/usr/include/c++/5/ext/alloc_traits.h ****       struct rebind
 169:/usr/include/c++/5/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 170:/usr/include/c++/5/ext/alloc_traits.h **** #else
 171:/usr/include/c++/5/ext/alloc_traits.h **** 
 172:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 173:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 174:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 175:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 176:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 177:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 178:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 179:/usr/include/c++/5/ext/alloc_traits.h **** 
 180:/usr/include/c++/5/ext/alloc_traits.h ****     static pointer
 181:/usr/include/c++/5/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 182:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 183:/usr/include/c++/5/ext/alloc_traits.h **** 
 184:/usr/include/c++/5/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 8216              		.loc 13 184 0
 8217              		.cfi_startproc
 8218 0000 55       		pushq	%rbp
 8219              		.cfi_def_cfa_offset 16
 8220              		.cfi_offset 6, -16
 8221 0001 4889E5   		movq	%rsp, %rbp
 8222              		.cfi_def_cfa_register 6
 8223 0004 4883EC20 		subq	$32, %rsp
 8224 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8225 000c 488975F0 		movq	%rsi, -16(%rbp)
 8226 0010 488955E8 		movq	%rdx, -24(%rbp)
 185:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 8227              		.loc 13 185 0
 8228 0014 488B55E8 		movq	-24(%rbp), %rdx
 8229 0018 488B4DF0 		movq	-16(%rbp), %rcx
 8230 001c 488B45F8 		movq	-8(%rbp), %rax
 8231 0020 4889CE   		movq	%rcx, %rsi
 8232 0023 4889C7   		movq	%rax, %rdi
 8233 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8233      00
 8234 002b 90       		nop
 8235 002c C9       		leave
 8236              		.cfi_def_cfa 7, 8
 8237 002d C3       		ret
 8238              		.cfi_endproc
 8239              	.LFE1560:
 8241              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 8242              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8244              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 8245              	.LFB1561:
 100:/usr/include/c++/5/bits/stl_construct.h **** 	{
 8246              		.loc 9 100 0
 8247              		.cfi_startproc
 8248 0000 55       		pushq	%rbp
 8249              		.cfi_def_cfa_offset 16
 8250              		.cfi_offset 6, -16
 8251 0001 4889E5   		movq	%rsp, %rbp
 8252              		.cfi_def_cfa_register 6
 8253 0004 4883EC10 		subq	$16, %rsp
 8254 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8255 000c 488975F0 		movq	%rsi, -16(%rbp)
 8256              	.L461:
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8257              		.loc 9 102 0 discriminator 2
 8258 0010 488B45F8 		movq	-8(%rbp), %rax
 8259 0014 483B45F0 		cmpq	-16(%rbp), %rax
 8260 0018 741B     		je	.L462
 103:/usr/include/c++/5/bits/stl_construct.h **** 	}
 8261              		.loc 9 103 0 discriminator 1
 8262 001a 488B45F8 		movq	-8(%rbp), %rax
 8263 001e 4889C7   		movq	%rax, %rdi
 8264 0021 E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8264      00
 8265 0026 4889C7   		movq	%rax, %rdi
 8266 0029 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8266      00
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8267              		.loc 9 102 0 discriminator 1
 8268 002e 48836DF8 		subq	$-128, -8(%rbp)
 8268      80
 8269 0033 EBDB     		jmp	.L461
 8270              	.L462:
 104:/usr/include/c++/5/bits/stl_construct.h ****     };
 8271              		.loc 9 104 0
 8272 0035 90       		nop
 8273 0036 C9       		leave
 8274              		.cfi_def_cfa 7, 8
 8275 0037 C3       		ret
 8276              		.cfi_endproc
 8277              	.LFE1561:
 8279              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_
 8280              		.align 2
 8281              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8283              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:
 8284              	.LFB1565:
  79:/usr/include/c++/5/ext/new_allocator.h **** 
 8285              		.loc 12 79 0
 8286              		.cfi_startproc
 8287 0000 55       		pushq	%rbp
 8288              		.cfi_def_cfa_offset 16
 8289              		.cfi_offset 6, -16
 8290 0001 4889E5   		movq	%rsp, %rbp
 8291              		.cfi_def_cfa_register 6
 8292 0004 48897DF8 		movq	%rdi, -8(%rbp)
  79:/usr/include/c++/5/ext/new_allocator.h **** 
 8293              		.loc 12 79 0
 8294 0008 90       		nop
 8295 0009 5D       		popq	%rbp
 8296              		.cfi_def_cfa 7, 8
 8297 000a C3       		ret
 8298              		.cfi_endproc
 8299              	.LFE1565:
 8301              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
 8302              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev,_ZN9__gnu_cxx13new_allocato
 8303              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 8304              		.align 2
 8305              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8307              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 8308              	.LFB1567:
  87:/usr/include/c++/5/ext/new_allocator.h **** 
  88:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/5/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/5/ext/new_allocator.h **** 
  92:/usr/include/c++/5/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/5/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/5/ext/new_allocator.h **** 
  96:/usr/include/c++/5/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/5/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/5/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/5/ext/new_allocator.h ****       { 
 101:/usr/include/c++/5/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/5/ext/new_allocator.h **** 
 104:/usr/include/c++/5/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/5/ext/new_allocator.h ****       }
 106:/usr/include/c++/5/ext/new_allocator.h **** 
 107:/usr/include/c++/5/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/5/ext/new_allocator.h ****       void
 109:/usr/include/c++/5/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 8309              		.loc 12 109 0
 8310              		.cfi_startproc
 8311 0000 55       		pushq	%rbp
 8312              		.cfi_def_cfa_offset 16
 8313              		.cfi_offset 6, -16
 8314 0001 4889E5   		movq	%rsp, %rbp
 8315              		.cfi_def_cfa_register 6
 8316 0004 4883EC20 		subq	$32, %rsp
 8317 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8318 000c 488975F0 		movq	%rsi, -16(%rbp)
 8319 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 8320              		.loc 12 110 0
 8321 0014 488B45F0 		movq	-16(%rbp), %rax
 8322 0018 4889C7   		movq	%rax, %rdi
 8323 001b E8000000 		call	_ZdlPv
 8323      00
 8324 0020 90       		nop
 8325 0021 C9       		leave
 8326              		.cfi_def_cfa 7, 8
 8327 0022 C3       		ret
 8328              		.cfi_endproc
 8329              	.LFE1567:
 8331              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 8332              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8334              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 8335              	.LFB1568:
 8336              		.file 14 "/usr/include/c++/5/bits/move.h"
   1:/usr/include/c++/5/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/5/bits/move.h **** 
   3:/usr/include/c++/5/bits/move.h **** // Copyright (C) 2007-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/move.h **** //
   5:/usr/include/c++/5/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/move.h **** // any later version.
  10:/usr/include/c++/5/bits/move.h **** 
  11:/usr/include/c++/5/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/move.h **** 
  16:/usr/include/c++/5/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/move.h **** 
  20:/usr/include/c++/5/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/move.h **** 
  25:/usr/include/c++/5/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/5/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/5/bits/move.h ****  */
  29:/usr/include/c++/5/bits/move.h **** 
  30:/usr/include/c++/5/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/5/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/5/bits/move.h **** 
  33:/usr/include/c++/5/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/5/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/5/bits/move.h **** 
  36:/usr/include/c++/5/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/5/bits/move.h **** {
  38:/usr/include/c++/5/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/5/bits/move.h **** 
  40:/usr/include/c++/5/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/5/bits/move.h ****   /**
  42:/usr/include/c++/5/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/5/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/5/bits/move.h ****    */
  45:/usr/include/c++/5/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/5/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/5/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8337              		.loc 14 47 0
 8338              		.cfi_startproc
 8339 0000 55       		pushq	%rbp
 8340              		.cfi_def_cfa_offset 16
 8341              		.cfi_offset 6, -16
 8342 0001 4889E5   		movq	%rsp, %rbp
 8343              		.cfi_def_cfa_register 6
 8344 0004 48897DF8 		movq	%rdi, -8(%rbp)
  48:/usr/include/c++/5/bits/move.h ****     {
  49:/usr/include/c++/5/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/5/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
 8345              		.loc 14 50 0
 8346 0008 488B45F8 		movq	-8(%rbp), %rax
  51:/usr/include/c++/5/bits/move.h ****     }
 8347              		.loc 14 51 0
 8348 000c 5D       		popq	%rbp
 8349              		.cfi_def_cfa 7, 8
 8350 000d C3       		ret
 8351              		.cfi_endproc
 8352              	.LFE1568:
 8354              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8355              		.align 2
 8356              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 8358              	_ZN8UnitTest18DeferredTestResultD2Ev:
 8359              	.LFB1571:
 8360              		.file 15 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 8361              		.loc 15 10 0
 8362              		.cfi_startproc
 8363              		.cfi_personality 0x3,__gxx_personality_v0
 8364              		.cfi_lsda 0x3,.LLSDA1571
 8365 0000 55       		pushq	%rbp
 8366              		.cfi_def_cfa_offset 16
 8367              		.cfi_offset 6, -16
 8368 0001 4889E5   		movq	%rsp, %rbp
 8369              		.cfi_def_cfa_register 6
 8370 0004 53       		pushq	%rbx
 8371 0005 4883EC18 		subq	$24, %rsp
 8372              		.cfi_offset 3, -24
 8373 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8374              	.LBB150:
 8375              		.loc 15 10 0
 8376 000d 488B45E8 		movq	-24(%rbp), %rax
 8377 0011 4883C060 		addq	$96, %rax
 8378 0015 4889C7   		movq	%rax, %rdi
 8379              	.LEHB224:
 8380 0018 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 8380      00
 8381              	.LEHE224:
 8382              		.loc 15 10 0 is_stmt 0 discriminator 2
 8383 001d 488B45E8 		movq	-24(%rbp), %rax
 8384 0021 4883C040 		addq	$64, %rax
 8385 0025 4889C7   		movq	%rax, %rdi
 8386              	.LEHB225:
 8387 0028 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 8387      00
 8388              	.LEHE225:
 8389              		.loc 15 10 0 discriminator 4
 8390 002d 488B45E8 		movq	-24(%rbp), %rax
 8391 0031 4883C020 		addq	$32, %rax
 8392 0035 4889C7   		movq	%rax, %rdi
 8393              	.LEHB226:
 8394 0038 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 8394      00
 8395              	.LEHE226:
 8396              		.loc 15 10 0 discriminator 6
 8397 003d 488B45E8 		movq	-24(%rbp), %rax
 8398 0041 4889C7   		movq	%rax, %rdi
 8399              	.LEHB227:
 8400 0044 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 8400      00
 8401              	.LEHE227:
 8402              	.LBE150:
 8403 0049 EB44     		jmp	.L474
 8404              	.L471:
 8405 004b 4889C3   		movq	%rax, %rbx
 8406              	.LBB151:
 8407              		.loc 15 10 0
 8408 004e 488B45E8 		movq	-24(%rbp), %rax
 8409 0052 4883C040 		addq	$64, %rax
 8410 0056 4889C7   		movq	%rax, %rdi
 8411 0059 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 8411      00
 8412 005e EB03     		jmp	.L469
 8413              	.L472:
 8414 0060 4889C3   		movq	%rax, %rbx
 8415              	.L469:
 8416              		.loc 15 10 0 discriminator 3
 8417 0063 488B45E8 		movq	-24(%rbp), %rax
 8418 0067 4883C020 		addq	$32, %rax
 8419 006b 4889C7   		movq	%rax, %rdi
 8420 006e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 8420      00
 8421 0073 EB03     		jmp	.L470
 8422              	.L473:
 8423 0075 4889C3   		movq	%rax, %rbx
 8424              	.L470:
 8425              		.loc 15 10 0 discriminator 5
 8426 0078 488B45E8 		movq	-24(%rbp), %rax
 8427 007c 4889C7   		movq	%rax, %rdi
 8428 007f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 8428      00
 8429 0084 4889D8   		movq	%rbx, %rax
 8430 0087 4889C7   		movq	%rax, %rdi
 8431              	.LEHB228:
 8432 008a E8000000 		call	_Unwind_Resume
 8432      00
 8433              	.LEHE228:
 8434              	.L474:
 8435              	.LBE151:
 8436              		.loc 15 10 0
 8437 008f 4883C418 		addq	$24, %rsp
 8438 0093 5B       		popq	%rbx
 8439 0094 5D       		popq	%rbp
 8440              		.cfi_def_cfa 7, 8
 8441 0095 C3       		ret
 8442              		.cfi_endproc
 8443              	.LFE1571:
 8444              		.section	.gcc_except_table
 8445              	.LLSDA1571:
 8446 0638 FF       		.byte	0xff
 8447 0639 FF       		.byte	0xff
 8448 063a 01       		.byte	0x1
 8449 063b 15       		.uleb128 .LLSDACSE1571-.LLSDACSB1571
 8450              	.LLSDACSB1571:
 8451 063c 18       		.uleb128 .LEHB224-.LFB1571
 8452 063d 05       		.uleb128 .LEHE224-.LEHB224
 8453 063e 4B       		.uleb128 .L471-.LFB1571
 8454 063f 00       		.uleb128 0
 8455 0640 28       		.uleb128 .LEHB225-.LFB1571
 8456 0641 05       		.uleb128 .LEHE225-.LEHB225
 8457 0642 60       		.uleb128 .L472-.LFB1571
 8458 0643 00       		.uleb128 0
 8459 0644 38       		.uleb128 .LEHB226-.LFB1571
 8460 0645 05       		.uleb128 .LEHE226-.LEHB226
 8461 0646 75       		.uleb128 .L473-.LFB1571
 8462 0647 00       		.uleb128 0
 8463 0648 44       		.uleb128 .LEHB227-.LFB1571
 8464 0649 05       		.uleb128 .LEHE227-.LEHB227
 8465 064a 00       		.uleb128 0
 8466 064b 00       		.uleb128 0
 8467 064c 8A01     		.uleb128 .LEHB228-.LFB1571
 8468 064e 05       		.uleb128 .LEHE228-.LEHB228
 8469 064f 00       		.uleb128 0
 8470 0650 00       		.uleb128 0
 8471              	.LLSDACSE1571:
 8472              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8474              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 8475              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 8476              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 8477              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8479              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 8480              	.LFB1569:
  92:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 8481              		.loc 9 92 0 is_stmt 1
 8482              		.cfi_startproc
 8483 0000 55       		pushq	%rbp
 8484              		.cfi_def_cfa_offset 16
 8485              		.cfi_offset 6, -16
 8486 0001 4889E5   		movq	%rsp, %rbp
 8487              		.cfi_def_cfa_register 6
 8488 0004 4883EC10 		subq	$16, %rsp
 8489 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/5/bits/stl_construct.h **** 
 8490              		.loc 9 93 0
 8491 000c 488B45F8 		movq	-8(%rbp), %rax
 8492 0010 4889C7   		movq	%rax, %rdi
 8493 0013 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 8493      00
 8494 0018 90       		nop
 8495 0019 C9       		leave
 8496              		.cfi_def_cfa 7, 8
 8497 001a C3       		ret
 8498              		.cfi_endproc
 8499              	.LFE1569:
 8501              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 8502              		.align 2
 8503              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
 8505              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 8506              	.LFB1579:
 423:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8507              		.loc 6 423 0
 8508              		.cfi_startproc
 8509              		.cfi_personality 0x3,__gxx_personality_v0
 8510              		.cfi_lsda 0x3,.LLSDA1579
 8511 0000 55       		pushq	%rbp
 8512              		.cfi_def_cfa_offset 16
 8513              		.cfi_offset 6, -16
 8514 0001 4889E5   		movq	%rsp, %rbp
 8515              		.cfi_def_cfa_register 6
 8516 0004 53       		pushq	%rbx
 8517 0005 4883EC18 		subq	$24, %rsp
 8518              		.cfi_offset 3, -24
 8519 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8520              	.LBB152:
 425:/usr/include/c++/5/bits/stl_vector.h **** 
 8521              		.loc 6 425 0
 8522 000d 488B45E8 		movq	-24(%rbp), %rax
 8523 0011 4889C7   		movq	%rax, %rdi
 8524 0014 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 8524      00
 8525 0019 4889C2   		movq	%rax, %rdx
 424:/usr/include/c++/5/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 8526              		.loc 6 424 0
 8527 001c 488B45E8 		movq	-24(%rbp), %rax
 8528 0020 488B4808 		movq	8(%rax), %rcx
 8529 0024 488B45E8 		movq	-24(%rbp), %rax
 8530 0028 488B00   		movq	(%rax), %rax
 8531 002b 4889CE   		movq	%rcx, %rsi
 8532 002e 4889C7   		movq	%rax, %rdi
 8533              	.LEHB229:
 8534 0031 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 8534      00
 8535              	.LEHE229:
 425:/usr/include/c++/5/bits/stl_vector.h **** 
 8536              		.loc 6 425 0
 8537 0036 488B45E8 		movq	-24(%rbp), %rax
 8538 003a 4889C7   		movq	%rax, %rdi
 8539              	.LEHB230:
 8540 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 8540      00
 8541              	.LEHE230:
 8542              	.LBE152:
 8543 0042 EB1A     		jmp	.L479
 8544              	.L478:
 8545 0044 4889C3   		movq	%rax, %rbx
 8546              	.LBB153:
 8547 0047 488B45E8 		movq	-24(%rbp), %rax
 8548 004b 4889C7   		movq	%rax, %rdi
 8549 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 8549      00
 8550 0053 4889D8   		movq	%rbx, %rax
 8551 0056 4889C7   		movq	%rax, %rdi
 8552              	.LEHB231:
 8553 0059 E8000000 		call	_Unwind_Resume
 8553      00
 8554              	.LEHE231:
 8555              	.L479:
 8556              	.LBE153:
 8557 005e 4883C418 		addq	$24, %rsp
 8558 0062 5B       		popq	%rbx
 8559 0063 5D       		popq	%rbp
 8560              		.cfi_def_cfa 7, 8
 8561 0064 C3       		ret
 8562              		.cfi_endproc
 8563              	.LFE1579:
 8564              		.section	.gcc_except_table
 8565              	.LLSDA1579:
 8566 0651 FF       		.byte	0xff
 8567 0652 FF       		.byte	0xff
 8568 0653 01       		.byte	0x1
 8569 0654 0C       		.uleb128 .LLSDACSE1579-.LLSDACSB1579
 8570              	.LLSDACSB1579:
 8571 0655 31       		.uleb128 .LEHB229-.LFB1579
 8572 0656 05       		.uleb128 .LEHE229-.LEHB229
 8573 0657 44       		.uleb128 .L478-.LFB1579
 8574 0658 00       		.uleb128 0
 8575 0659 3D       		.uleb128 .LEHB230-.LFB1579
 8576 065a 05       		.uleb128 .LEHE230-.LEHB230
 8577 065b 00       		.uleb128 0
 8578 065c 00       		.uleb128 0
 8579 065d 59       		.uleb128 .LEHB231-.LFB1579
 8580 065e 05       		.uleb128 .LEHE231-.LEHB231
 8581 065f 00       		.uleb128 0
 8582 0660 00       		.uleb128 0
 8583              	.LLSDACSE1579:
 8584              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 8586              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 8587              		.set	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev,_ZNSt
 8588              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8589              		.align 2
 8590              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 8592              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector
 8593              	.LFB1586:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 8594              		.loc 6 79 0
 8595              		.cfi_startproc
 8596 0000 55       		pushq	%rbp
 8597              		.cfi_def_cfa_offset 16
 8598              		.cfi_offset 6, -16
 8599 0001 4889E5   		movq	%rsp, %rbp
 8600              		.cfi_def_cfa_register 6
 8601 0004 4883EC10 		subq	$16, %rsp
 8602 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8603              	.LBB154:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 8604              		.loc 6 79 0
 8605 000c 488B45F8 		movq	-8(%rbp), %rax
 8606 0010 4889C7   		movq	%rax, %rdi
 8607 0013 E8000000 		call	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 8607      00
 8608              	.LBE154:
 8609 0018 90       		nop
 8610 0019 C9       		leave
 8611              		.cfi_def_cfa 7, 8
 8612 001a C3       		ret
 8613              		.cfi_endproc
 8614              	.LFE1586:
 8616              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 8617              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 8618              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8619              		.align 2
 8620              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2
 8622              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 8623              	.LFB1588:
 159:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 8624              		.loc 6 159 0
 8625              		.cfi_startproc
 8626              		.cfi_personality 0x3,__gxx_personality_v0
 8627              		.cfi_lsda 0x3,.LLSDA1588
 8628 0000 55       		pushq	%rbp
 8629              		.cfi_def_cfa_offset 16
 8630              		.cfi_offset 6, -16
 8631 0001 4889E5   		movq	%rsp, %rbp
 8632              		.cfi_def_cfa_register 6
 8633 0004 53       		pushq	%rbx
 8634 0005 4883EC18 		subq	$24, %rsp
 8635              		.cfi_offset 3, -24
 8636 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8637              	.LBB155:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 8638              		.loc 6 161 0
 8639 000d 488B45E8 		movq	-24(%rbp), %rax
 8640 0011 488B4010 		movq	16(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 8641              		.loc 6 160 0
 8642 0015 4889C2   		movq	%rax, %rdx
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 8643              		.loc 6 161 0
 8644 0018 488B45E8 		movq	-24(%rbp), %rax
 8645 001c 488B00   		movq	(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 8646              		.loc 6 160 0
 8647 001f 4829C2   		subq	%rax, %rdx
 8648 0022 4889D0   		movq	%rdx, %rax
 8649 0025 48C1F803 		sarq	$3, %rax
 8650 0029 4889C2   		movq	%rax, %rdx
 8651 002c 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 8651      CCCCCCCC 
 8651      CCCC
 8652 0036 480FAFC2 		imulq	%rdx, %rax
 8653 003a 4889C2   		movq	%rax, %rdx
 8654 003d 488B45E8 		movq	-24(%rbp), %rax
 8655 0041 488B08   		movq	(%rax), %rcx
 8656 0044 488B45E8 		movq	-24(%rbp), %rax
 8657 0048 4889CE   		movq	%rcx, %rsi
 8658 004b 4889C7   		movq	%rax, %rdi
 8659              	.LEHB232:
 8660 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 8660      00
 8661              	.LEHE232:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 8662              		.loc 6 161 0
 8663 0053 488B45E8 		movq	-24(%rbp), %rax
 8664 0057 4889C7   		movq	%rax, %rdi
 8665 005a E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 8665      00
 8666              	.LBE155:
 8667 005f EB1A     		jmp	.L484
 8668              	.L483:
 8669 0061 4889C3   		movq	%rax, %rbx
 8670              	.LBB156:
 8671 0064 488B45E8 		movq	-24(%rbp), %rax
 8672 0068 4889C7   		movq	%rax, %rdi
 8673 006b E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 8673      00
 8674 0070 4889D8   		movq	%rbx, %rax
 8675 0073 4889C7   		movq	%rax, %rdi
 8676              	.LEHB233:
 8677 0076 E8000000 		call	_Unwind_Resume
 8677      00
 8678              	.LEHE233:
 8679              	.L484:
 8680              	.LBE156:
 8681 007b 4883C418 		addq	$24, %rsp
 8682 007f 5B       		popq	%rbx
 8683 0080 5D       		popq	%rbp
 8684              		.cfi_def_cfa 7, 8
 8685 0081 C3       		ret
 8686              		.cfi_endproc
 8687              	.LFE1588:
 8688              		.section	.gcc_except_table
 8689              	.LLSDA1588:
 8690 0661 FF       		.byte	0xff
 8691 0662 FF       		.byte	0xff
 8692 0663 01       		.byte	0x1
 8693 0664 08       		.uleb128 .LLSDACSE1588-.LLSDACSB1588
 8694              	.LLSDACSB1588:
 8695 0665 4E       		.uleb128 .LEHB232-.LFB1588
 8696 0666 05       		.uleb128 .LEHE232-.LEHB232
 8697 0667 61       		.uleb128 .L483-.LFB1588
 8698 0668 00       		.uleb128 0
 8699 0669 76       		.uleb128 .LEHB233-.LFB1588
 8700 066a 05       		.uleb128 .LEHE233-.LEHB233
 8701 066b 00       		.uleb128 0
 8702 066c 00       		.uleb128 0
 8703              	.LLSDACSE1588:
 8704              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8706              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1
 8707              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1E
 8708              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8709              		.align 2
 8710              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 8712              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_
 8713              	.LFB1590:
 113:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 8714              		.loc 6 113 0
 8715              		.cfi_startproc
 8716 0000 55       		pushq	%rbp
 8717              		.cfi_def_cfa_offset 16
 8718              		.cfi_offset 6, -16
 8719 0001 4889E5   		movq	%rsp, %rbp
 8720              		.cfi_def_cfa_register 6
 8721 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/bits/stl_vector.h **** 
 8722              		.loc 6 114 0
 8723 0008 488B45F8 		movq	-8(%rbp), %rax
 8724 000c 5D       		popq	%rbp
 8725              		.cfi_def_cfa 7, 8
 8726 000d C3       		ret
 8727              		.cfi_endproc
 8728              	.LFE1590:
 8730              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT
 8731              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT
 8733              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:
 8734              	.LFB1591:
 148:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 8735              		.loc 9 148 0
 8736              		.cfi_startproc
 8737 0000 55       		pushq	%rbp
 8738              		.cfi_def_cfa_offset 16
 8739              		.cfi_offset 6, -16
 8740 0001 4889E5   		movq	%rsp, %rbp
 8741              		.cfi_def_cfa_register 6
 8742 0004 4883EC20 		subq	$32, %rsp
 8743 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8744 000c 488975F0 		movq	%rsi, -16(%rbp)
 8745 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/5/bits/stl_construct.h ****     }
 8746              		.loc 9 151 0
 8747 0014 488B55F0 		movq	-16(%rbp), %rdx
 8748 0018 488B45F8 		movq	-8(%rbp), %rax
 8749 001c 4889D6   		movq	%rdx, %rsi
 8750 001f 4889C7   		movq	%rax, %rdi
 8751 0022 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 8751      00
 8752              		.loc 9 152 0
 8753 0027 90       		nop
 8754 0028 C9       		leave
 8755              		.cfi_def_cfa 7, 8
 8756 0029 C3       		ret
 8757              		.cfi_endproc
 8758              	.LFE1591:
 8760              		.section	.text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev,"axG",@pr
 8761              		.align 2
 8762              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 8764              	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 8765              	.LFB1593:
 8766              		.loc 11 121 0
 8767              		.cfi_startproc
 8768 0000 55       		pushq	%rbp
 8769              		.cfi_def_cfa_offset 16
 8770              		.cfi_offset 6, -16
 8771 0001 4889E5   		movq	%rsp, %rbp
 8772              		.cfi_def_cfa_register 6
 8773 0004 4883EC10 		subq	$16, %rsp
 8774 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8775              	.LBB157:
 8776              		.loc 11 121 0
 8777 000c 488B45F8 		movq	-8(%rbp), %rax
 8778 0010 4889C7   		movq	%rax, %rdi
 8779 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 8779      00
 8780              	.LBE157:
 8781 0018 90       		nop
 8782 0019 C9       		leave
 8783              		.cfi_def_cfa 7, 8
 8784 001a C3       		ret
 8785              		.cfi_endproc
 8786              	.LFE1593:
 8788              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
 8789              		.set	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev,_ZNSaISt4pairIiNSt7
 8790              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8791              		.align 2
 8792              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13
 8794              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deal
 8795              	.LFB1595:
 174:/usr/include/c++/5/bits/stl_vector.h ****       {
 8796              		.loc 6 174 0
 8797              		.cfi_startproc
 8798 0000 55       		pushq	%rbp
 8799              		.cfi_def_cfa_offset 16
 8800              		.cfi_offset 6, -16
 8801 0001 4889E5   		movq	%rsp, %rbp
 8802              		.cfi_def_cfa_register 6
 8803 0004 4883EC20 		subq	$32, %rsp
 8804 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8805 000c 488975F0 		movq	%rsi, -16(%rbp)
 8806 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8807              		.loc 6 177 0
 8808 0014 48837DF0 		cmpq	$0, -16(%rbp)
 8808      00
 8809 0019 7417     		je	.L491
 178:/usr/include/c++/5/bits/stl_vector.h ****       }
 8810              		.loc 6 178 0
 8811 001b 488B45F8 		movq	-8(%rbp), %rax
 8812 001f 488B55E8 		movq	-24(%rbp), %rdx
 8813 0023 488B4DF0 		movq	-16(%rbp), %rcx
 8814 0027 4889CE   		movq	%rcx, %rsi
 8815 002a 4889C7   		movq	%rax, %rdi
 8816 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 8816      00
 8817              	.L491:
 179:/usr/include/c++/5/bits/stl_vector.h **** 
 8818              		.loc 6 179 0
 8819 0032 90       		nop
 8820 0033 C9       		leave
 8821              		.cfi_def_cfa 7, 8
 8822 0034 C3       		ret
 8823              		.cfi_endproc
 8824              	.LFE1595:
 8826              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9
 8827              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 8829              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
 8830              	.LFB1596:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 8831              		.loc 9 122 0
 8832              		.cfi_startproc
 8833 0000 55       		pushq	%rbp
 8834              		.cfi_def_cfa_offset 16
 8835              		.cfi_offset 6, -16
 8836 0001 4889E5   		movq	%rsp, %rbp
 8837              		.cfi_def_cfa_register 6
 8838 0004 4883EC10 		subq	$16, %rsp
 8839 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8840 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 8841              		.loc 9 126 0
 8842 0010 488B55F0 		movq	-16(%rbp), %rdx
 8843 0014 488B45F8 		movq	-8(%rbp), %rax
 8844 0018 4889D6   		movq	%rdx, %rsi
 8845 001b 4889C7   		movq	%rax, %rdi
 8846 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 8846      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 8847              		.loc 9 128 0
 8848 0023 90       		nop
 8849 0024 C9       		leave
 8850              		.cfi_def_cfa 7, 8
 8851 0025 C3       		ret
 8852              		.cfi_endproc
 8853              	.LFE1596:
 8855              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 8856              		.align 2
 8857              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 8859              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 8860              	.LFB1598:
  86:/usr/include/c++/5/ext/new_allocator.h **** 
 8861              		.loc 12 86 0
 8862              		.cfi_startproc
 8863 0000 55       		pushq	%rbp
 8864              		.cfi_def_cfa_offset 16
 8865              		.cfi_offset 6, -16
 8866 0001 4889E5   		movq	%rsp, %rbp
 8867              		.cfi_def_cfa_register 6
 8868 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/5/ext/new_allocator.h **** 
 8869              		.loc 12 86 0
 8870 0008 90       		nop
 8871 0009 5D       		popq	%rbp
 8872              		.cfi_def_cfa 7, 8
 8873 000a C3       		ret
 8874              		.cfi_endproc
 8875              	.LFE1598:
 8877              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 8878              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 8879              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 8880              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 8882              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10
 8883              	.LFB1600:
 184:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 8884              		.loc 13 184 0
 8885              		.cfi_startproc
 8886 0000 55       		pushq	%rbp
 8887              		.cfi_def_cfa_offset 16
 8888              		.cfi_offset 6, -16
 8889 0001 4889E5   		movq	%rsp, %rbp
 8890              		.cfi_def_cfa_register 6
 8891 0004 4883EC20 		subq	$32, %rsp
 8892 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8893 000c 488975F0 		movq	%rsi, -16(%rbp)
 8894 0010 488955E8 		movq	%rdx, -24(%rbp)
 8895              		.loc 13 185 0
 8896 0014 488B55E8 		movq	-24(%rbp), %rdx
 8897 0018 488B4DF0 		movq	-16(%rbp), %rcx
 8898 001c 488B45F8 		movq	-8(%rbp), %rax
 8899 0020 4889CE   		movq	%rcx, %rsi
 8900 0023 4889C7   		movq	%rax, %rdi
 8901 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE1
 8901      00
 8902 002b 90       		nop
 8903 002c C9       		leave
 8904              		.cfi_def_cfa 7, 8
 8905 002d C3       		ret
 8906              		.cfi_endproc
 8907              	.LFE1600:
 8909              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 8910              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcES
 8912              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 8913              	.LFB1601:
 100:/usr/include/c++/5/bits/stl_construct.h **** 	{
 8914              		.loc 9 100 0
 8915              		.cfi_startproc
 8916 0000 55       		pushq	%rbp
 8917              		.cfi_def_cfa_offset 16
 8918              		.cfi_offset 6, -16
 8919 0001 4889E5   		movq	%rsp, %rbp
 8920              		.cfi_def_cfa_register 6
 8921 0004 4883EC10 		subq	$16, %rsp
 8922 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8923 000c 488975F0 		movq	%rsi, -16(%rbp)
 8924              	.L497:
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8925              		.loc 9 102 0 discriminator 2
 8926 0010 488B45F8 		movq	-8(%rbp), %rax
 8927 0014 483B45F0 		cmpq	-16(%rbp), %rax
 8928 0018 741B     		je	.L498
 103:/usr/include/c++/5/bits/stl_construct.h **** 	}
 8929              		.loc 9 103 0 discriminator 1
 8930 001a 488B45F8 		movq	-8(%rbp), %rax
 8931 001e 4889C7   		movq	%rax, %rdi
 8932 0021 E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 8932      00
 8933 0026 4889C7   		movq	%rax, %rdi
 8934 0029 E8000000 		call	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 8934      00
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8935              		.loc 9 102 0 discriminator 1
 8936 002e 488345F8 		addq	$40, -8(%rbp)
 8936      28
 8937 0033 EBDB     		jmp	.L497
 8938              	.L498:
 104:/usr/include/c++/5/bits/stl_construct.h ****     };
 8939              		.loc 9 104 0
 8940 0035 90       		nop
 8941 0036 C9       		leave
 8942              		.cfi_def_cfa 7, 8
 8943 0037 C3       		ret
 8944              		.cfi_endproc
 8945              	.LFE1601:
 8947              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 8948              		.align 2
 8949              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 8951              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deall
 8952              	.LFB1602:
 109:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 8953              		.loc 12 109 0
 8954              		.cfi_startproc
 8955 0000 55       		pushq	%rbp
 8956              		.cfi_def_cfa_offset 16
 8957              		.cfi_offset 6, -16
 8958 0001 4889E5   		movq	%rsp, %rbp
 8959              		.cfi_def_cfa_register 6
 8960 0004 4883EC20 		subq	$32, %rsp
 8961 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8962 000c 488975F0 		movq	%rsi, -16(%rbp)
 8963 0010 488955E8 		movq	%rdx, -24(%rbp)
 8964              		.loc 12 110 0
 8965 0014 488B45F0 		movq	-16(%rbp), %rax
 8966 0018 4889C7   		movq	%rax, %rdi
 8967 001b E8000000 		call	_ZdlPv
 8967      00
 8968 0020 90       		nop
 8969 0021 C9       		leave
 8970              		.cfi_def_cfa 7, 8
 8971 0022 C3       		ret
 8972              		.cfi_endproc
 8973              	.LFE1602:
 8975              		.section	.text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT
 8976              		.weak	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 8978              	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:
 8979              	.LFB1603:
  47:/usr/include/c++/5/bits/move.h ****     {
 8980              		.loc 14 47 0
 8981              		.cfi_startproc
 8982 0000 55       		pushq	%rbp
 8983              		.cfi_def_cfa_offset 16
 8984              		.cfi_offset 6, -16
 8985 0001 4889E5   		movq	%rsp, %rbp
 8986              		.cfi_def_cfa_register 6
 8987 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/5/bits/move.h ****     }
 8988              		.loc 14 50 0
 8989 0008 488B45F8 		movq	-8(%rbp), %rax
 8990              		.loc 14 51 0
 8991 000c 5D       		popq	%rbp
 8992              		.cfi_def_cfa 7, 8
 8993 000d C3       		ret
 8994              		.cfi_endproc
 8995              	.LFE1603:
 8997              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev,"axG",@progbi
 8998              		.align 2
 8999              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
 9001              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
 9002              	.LFB1606:
 9003              		.file 16 "/usr/include/c++/5/bits/stl_pair.h"
   1:/usr/include/c++/5/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_pair.h **** 
   3:/usr/include/c++/5/bits/stl_pair.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_pair.h **** //
   5:/usr/include/c++/5/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_pair.h **** 
  11:/usr/include/c++/5/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_pair.h **** 
  16:/usr/include/c++/5/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_pair.h **** 
  20:/usr/include/c++/5/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_pair.h **** 
  25:/usr/include/c++/5/bits/stl_pair.h **** /*
  26:/usr/include/c++/5/bits/stl_pair.h ****  *
  27:/usr/include/c++/5/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_pair.h ****  *
  30:/usr/include/c++/5/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_pair.h ****  *
  38:/usr/include/c++/5/bits/stl_pair.h ****  *
  39:/usr/include/c++/5/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_pair.h ****  *
  42:/usr/include/c++/5/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_pair.h ****  */
  50:/usr/include/c++/5/bits/stl_pair.h **** 
  51:/usr/include/c++/5/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/5/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/5/bits/stl_pair.h ****  */
  55:/usr/include/c++/5/bits/stl_pair.h **** 
  56:/usr/include/c++/5/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/5/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/5/bits/stl_pair.h **** 
  59:/usr/include/c++/5/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/5/bits/stl_pair.h **** 
  61:/usr/include/c++/5/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/5/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/5/bits/stl_pair.h **** #endif
  64:/usr/include/c++/5/bits/stl_pair.h **** 
  65:/usr/include/c++/5/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/5/bits/stl_pair.h **** {
  67:/usr/include/c++/5/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/5/bits/stl_pair.h **** 
  69:/usr/include/c++/5/bits/stl_pair.h ****   /**
  70:/usr/include/c++/5/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/5/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/5/bits/stl_pair.h ****    */
  73:/usr/include/c++/5/bits/stl_pair.h **** 
  74:/usr/include/c++/5/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/5/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/5/bits/stl_pair.h ****   struct piecewise_construct_t { };
  77:/usr/include/c++/5/bits/stl_pair.h **** 
  78:/usr/include/c++/5/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/5/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  80:/usr/include/c++/5/bits/stl_pair.h **** 
  81:/usr/include/c++/5/bits/stl_pair.h ****   // Forward declarations.
  82:/usr/include/c++/5/bits/stl_pair.h ****   template<typename...>
  83:/usr/include/c++/5/bits/stl_pair.h ****     class tuple;
  84:/usr/include/c++/5/bits/stl_pair.h **** 
  85:/usr/include/c++/5/bits/stl_pair.h ****   template<std::size_t...>
  86:/usr/include/c++/5/bits/stl_pair.h ****     struct _Index_tuple;
  87:/usr/include/c++/5/bits/stl_pair.h **** #endif
  88:/usr/include/c++/5/bits/stl_pair.h **** 
  89:/usr/include/c++/5/bits/stl_pair.h ****  /**
  90:/usr/include/c++/5/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
  91:/usr/include/c++/5/bits/stl_pair.h ****    *
  92:/usr/include/c++/5/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
  93:/usr/include/c++/5/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
  94:/usr/include/c++/5/bits/stl_pair.h ****    */
  95:/usr/include/c++/5/bits/stl_pair.h ****   template<class _T1, class _T2>
  96:/usr/include/c++/5/bits/stl_pair.h ****     struct pair
 9004              		.loc 16 96 0
 9005              		.cfi_startproc
 9006 0000 55       		pushq	%rbp
 9007              		.cfi_def_cfa_offset 16
 9008              		.cfi_offset 6, -16
 9009 0001 4889E5   		movq	%rsp, %rbp
 9010              		.cfi_def_cfa_register 6
 9011 0004 4883EC10 		subq	$16, %rsp
 9012 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9013              	.LBB158:
 9014              		.loc 16 96 0
 9015 000c 488B45F8 		movq	-8(%rbp), %rax
 9016 0010 4883C008 		addq	$8, %rax
 9017 0014 4889C7   		movq	%rax, %rdi
 9018 0017 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 9018      00
 9019              	.LBE158:
 9020 001c 90       		nop
 9021 001d C9       		leave
 9022              		.cfi_def_cfa 7, 8
 9023 001e C3       		ret
 9024              		.cfi_endproc
 9025              	.LFE1606:
 9027              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 9028              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,_ZNSt4pairIiNSt7__cxx11
 9029              		.section	.text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_,"
 9030              		.weak	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 9032              	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:
 9033              	.LFB1604:
  92:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 9034              		.loc 9 92 0
 9035              		.cfi_startproc
 9036 0000 55       		pushq	%rbp
 9037              		.cfi_def_cfa_offset 16
 9038              		.cfi_offset 6, -16
 9039 0001 4889E5   		movq	%rsp, %rbp
 9040              		.cfi_def_cfa_register 6
 9041 0004 4883EC10 		subq	$16, %rsp
 9042 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/5/bits/stl_construct.h **** 
 9043              		.loc 9 93 0
 9044 000c 488B45F8 		movq	-8(%rbp), %rax
 9045 0010 4889C7   		movq	%rax, %rdi
 9046 0013 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 9046      00
 9047 0018 90       		nop
 9048 0019 C9       		leave
 9049              		.cfi_def_cfa 7, 8
 9050 001a C3       		ret
 9051              		.cfi_endproc
 9052              	.LFE1604:
 9054              		.section	.rodata
 9055 05c2 00000000 		.align 8
 9055      0000
 9058              	_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 9059 05c8 00000000 		.quad	0
 9059      00000000 
 9060 05d0 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9060      00000000 
 9061 05d8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9061      00000000 
 9062 05e0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9062      00000000 
 9063 05e8 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 9063      00000000 
 9064              		.text
 9065 3337 90       		.align 2
 9067              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 9068              	.LFB1609:
  98:TestDeferredTestReporter.cpp **** {
 9069              		.loc 3 98 0
 9070              		.cfi_startproc
 9071 3338 55       		pushq	%rbp
 9072              		.cfi_def_cfa_offset 16
 9073              		.cfi_offset 6, -16
 9074 3339 4889E5   		movq	%rsp, %rbp
 9075              		.cfi_def_cfa_register 6
 9076 333c 4883EC10 		subq	$16, %rsp
 9077 3340 48897DF8 		movq	%rdi, -8(%rbp)
 9078              	.LBB159:
  98:TestDeferredTestReporter.cpp **** {
 9079              		.loc 3 98 0
 9080 3344 BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9080      00
 9081 3349 488B45F8 		movq	-8(%rbp), %rax
 9082 334d 488910   		movq	%rdx, (%rax)
 9083 3350 488B45F8 		movq	-8(%rbp), %rax
 9084 3354 4889C7   		movq	%rax, %rdi
 9085 3357 E8000000 		call	_ZN8UnitTest4TestD2Ev
 9085      00
 9086              	.LBE159:
 9087 335c B8000000 		movl	$0, %eax
 9087      00
 9088 3361 85C0     		testl	%eax, %eax
 9089 3363 740C     		je	.L504
  98:TestDeferredTestReporter.cpp **** {
 9090              		.loc 3 98 0 is_stmt 0 discriminator 4
 9091 3365 488B45F8 		movq	-8(%rbp), %rax
 9092 3369 4889C7   		movq	%rax, %rdi
 9093 336c E8000000 		call	_ZdlPv
 9093      00
 9094              	.L504:
  98:TestDeferredTestReporter.cpp **** {
 9095              		.loc 3 98 0
 9096 3371 C9       		leave
 9097              		.cfi_def_cfa 7, 8
 9098 3372 C3       		ret
 9099              		.cfi_endproc
 9100              	.LFE1609:
 9102              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9103 3373 90       		.align 2
 9105              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 9106              	.LFB1611:
  98:TestDeferredTestReporter.cpp **** {
 9107              		.loc 3 98 0 is_stmt 1
 9108              		.cfi_startproc
 9109 3374 55       		pushq	%rbp
 9110              		.cfi_def_cfa_offset 16
 9111              		.cfi_offset 6, -16
 9112 3375 4889E5   		movq	%rsp, %rbp
 9113              		.cfi_def_cfa_register 6
 9114 3378 4883EC10 		subq	$16, %rsp
 9115 337c 48897DF8 		movq	%rdi, -8(%rbp)
  98:TestDeferredTestReporter.cpp **** {
 9116              		.loc 3 98 0
 9117 3380 488B45F8 		movq	-8(%rbp), %rax
 9118 3384 4889C7   		movq	%rax, %rdi
 9119 3387 E8ACFFFF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9119      FF
 9120 338c 488B45F8 		movq	-8(%rbp), %rax
 9121 3390 4889C7   		movq	%rax, %rdi
 9122 3393 E8000000 		call	_ZdlPv
 9122      00
 9123 3398 C9       		leave
 9124              		.cfi_def_cfa 7, 8
 9125 3399 C3       		ret
 9126              		.cfi_endproc
 9127              	.LFE1611:
 9129              		.section	.rodata
 9130              		.align 8
 9133              	_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 9134 05f0 00000000 		.quad	0
 9134      00000000 
 9135 05f8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9135      00000000 
 9136 0600 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9136      00000000 
 9137 0608 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9137      00000000 
 9138 0610 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9138      00000000 
 9139              		.text
 9140              		.align 2
 9142              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 9143              	.LFB1613:
  83:TestDeferredTestReporter.cpp **** {
 9144              		.loc 3 83 0
 9145              		.cfi_startproc
 9146 339a 55       		pushq	%rbp
 9147              		.cfi_def_cfa_offset 16
 9148              		.cfi_offset 6, -16
 9149 339b 4889E5   		movq	%rsp, %rbp
 9150              		.cfi_def_cfa_register 6
 9151 339e 4883EC10 		subq	$16, %rsp
 9152 33a2 48897DF8 		movq	%rdi, -8(%rbp)
 9153              	.LBB160:
  83:TestDeferredTestReporter.cpp **** {
 9154              		.loc 3 83 0
 9155 33a6 BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9155      00
 9156 33ab 488B45F8 		movq	-8(%rbp), %rax
 9157 33af 488910   		movq	%rdx, (%rax)
 9158 33b2 488B45F8 		movq	-8(%rbp), %rax
 9159 33b6 4889C7   		movq	%rax, %rdi
 9160 33b9 E8000000 		call	_ZN8UnitTest4TestD2Ev
 9160      00
 9161              	.LBE160:
 9162 33be B8000000 		movl	$0, %eax
 9162      00
 9163 33c3 85C0     		testl	%eax, %eax
 9164 33c5 740C     		je	.L507
  83:TestDeferredTestReporter.cpp **** {
 9165              		.loc 3 83 0 is_stmt 0 discriminator 4
 9166 33c7 488B45F8 		movq	-8(%rbp), %rax
 9167 33cb 4889C7   		movq	%rax, %rdi
 9168 33ce E8000000 		call	_ZdlPv
 9168      00
 9169              	.L507:
  83:TestDeferredTestReporter.cpp **** {
 9170              		.loc 3 83 0
 9171 33d3 C9       		leave
 9172              		.cfi_def_cfa 7, 8
 9173 33d4 C3       		ret
 9174              		.cfi_endproc
 9175              	.LFE1613:
 9177              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9178 33d5 90       		.align 2
 9180              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 9181              	.LFB1615:
  83:TestDeferredTestReporter.cpp **** {
 9182              		.loc 3 83 0 is_stmt 1
 9183              		.cfi_startproc
 9184 33d6 55       		pushq	%rbp
 9185              		.cfi_def_cfa_offset 16
 9186              		.cfi_offset 6, -16
 9187 33d7 4889E5   		movq	%rsp, %rbp
 9188              		.cfi_def_cfa_register 6
 9189 33da 4883EC10 		subq	$16, %rsp
 9190 33de 48897DF8 		movq	%rdi, -8(%rbp)
  83:TestDeferredTestReporter.cpp **** {
 9191              		.loc 3 83 0
 9192 33e2 488B45F8 		movq	-8(%rbp), %rax
 9193 33e6 4889C7   		movq	%rax, %rdi
 9194 33e9 E8ACFFFF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9194      FF
 9195 33ee 488B45F8 		movq	-8(%rbp), %rax
 9196 33f2 4889C7   		movq	%rax, %rdi
 9197 33f5 E8000000 		call	_ZdlPv
 9197      00
 9198 33fa C9       		leave
 9199              		.cfi_def_cfa 7, 8
 9200 33fb C3       		ret
 9201              		.cfi_endproc
 9202              	.LFE1615:
 9204              		.section	.rodata
 9205              		.align 8
 9208              	_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 9209 0618 00000000 		.quad	0
 9209      00000000 
 9210 0620 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9210      00000000 
 9211 0628 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9211      00000000 
 9212 0630 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9212      00000000 
 9213 0638 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9213      00000000 
 9214              		.text
 9215              		.align 2
 9217              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev:
 9218              	.LFB1617:
  71:TestDeferredTestReporter.cpp **** {
 9219              		.loc 3 71 0
 9220              		.cfi_startproc
 9221 33fc 55       		pushq	%rbp
 9222              		.cfi_def_cfa_offset 16
 9223              		.cfi_offset 6, -16
 9224 33fd 4889E5   		movq	%rsp, %rbp
 9225              		.cfi_def_cfa_register 6
 9226 3400 4883EC10 		subq	$16, %rsp
 9227 3404 48897DF8 		movq	%rdi, -8(%rbp)
 9228              	.LBB161:
  71:TestDeferredTestReporter.cpp **** {
 9229              		.loc 3 71 0
 9230 3408 BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9230      00
 9231 340d 488B45F8 		movq	-8(%rbp), %rax
 9232 3411 488910   		movq	%rdx, (%rax)
 9233 3414 488B45F8 		movq	-8(%rbp), %rax
 9234 3418 4889C7   		movq	%rax, %rdi
 9235 341b E8000000 		call	_ZN8UnitTest4TestD2Ev
 9235      00
 9236              	.LBE161:
 9237 3420 B8000000 		movl	$0, %eax
 9237      00
 9238 3425 85C0     		testl	%eax, %eax
 9239 3427 740C     		je	.L510
  71:TestDeferredTestReporter.cpp **** {
 9240              		.loc 3 71 0 is_stmt 0 discriminator 4
 9241 3429 488B45F8 		movq	-8(%rbp), %rax
 9242 342d 4889C7   		movq	%rax, %rdi
 9243 3430 E8000000 		call	_ZdlPv
 9243      00
 9244              	.L510:
  71:TestDeferredTestReporter.cpp **** {
 9245              		.loc 3 71 0
 9246 3435 C9       		leave
 9247              		.cfi_def_cfa 7, 8
 9248 3436 C3       		ret
 9249              		.cfi_endproc
 9250              	.LFE1617:
 9252              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 9253 3437 90       		.align 2
 9255              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev:
 9256              	.LFB1619:
  71:TestDeferredTestReporter.cpp **** {
 9257              		.loc 3 71 0 is_stmt 1
 9258              		.cfi_startproc
 9259 3438 55       		pushq	%rbp
 9260              		.cfi_def_cfa_offset 16
 9261              		.cfi_offset 6, -16
 9262 3439 4889E5   		movq	%rsp, %rbp
 9263              		.cfi_def_cfa_register 6
 9264 343c 4883EC10 		subq	$16, %rsp
 9265 3440 48897DF8 		movq	%rdi, -8(%rbp)
  71:TestDeferredTestReporter.cpp **** {
 9266              		.loc 3 71 0
 9267 3444 488B45F8 		movq	-8(%rbp), %rax
 9268 3448 4889C7   		movq	%rax, %rdi
 9269 344b E8ACFFFF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 9269      FF
 9270 3450 488B45F8 		movq	-8(%rbp), %rax
 9271 3454 4889C7   		movq	%rax, %rdi
 9272 3457 E8000000 		call	_ZdlPv
 9272      00
 9273 345c C9       		leave
 9274              		.cfi_def_cfa 7, 8
 9275 345d C3       		ret
 9276              		.cfi_endproc
 9277              	.LFE1619:
 9279              		.section	.rodata
 9280              		.align 8
 9283              	_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 9284 0640 00000000 		.quad	0
 9284      00000000 
 9285 0648 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 9285      00000000 
 9286 0650 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9286      00000000 
 9287 0658 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
 9287      00000000 
 9288 0660 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7Ru
 9288      00000000 
 9289              		.text
 9290              		.align 2
 9292              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev:
 9293              	.LFB1621:
  61:TestDeferredTestReporter.cpp **** {
 9294              		.loc 3 61 0
 9295              		.cfi_startproc
 9296 345e 55       		pushq	%rbp
 9297              		.cfi_def_cfa_offset 16
 9298              		.cfi_offset 6, -16
 9299 345f 4889E5   		movq	%rsp, %rbp
 9300              		.cfi_def_cfa_register 6
 9301 3462 4883EC10 		subq	$16, %rsp
 9302 3466 48897DF8 		movq	%rdi, -8(%rbp)
 9303              	.LBB162:
  61:TestDeferredTestReporter.cpp **** {
 9304              		.loc 3 61 0
 9305 346a BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE+
 9305      00
 9306 346f 488B45F8 		movq	-8(%rbp), %rax
 9307 3473 488910   		movq	%rdx, (%rax)
 9308 3476 488B45F8 		movq	-8(%rbp), %rax
 9309 347a 4889C7   		movq	%rax, %rdi
 9310 347d E8000000 		call	_ZN8UnitTest4TestD2Ev
 9310      00
 9311              	.LBE162:
 9312 3482 B8000000 		movl	$0, %eax
 9312      00
 9313 3487 85C0     		testl	%eax, %eax
 9314 3489 740C     		je	.L513
  61:TestDeferredTestReporter.cpp **** {
 9315              		.loc 3 61 0 is_stmt 0 discriminator 4
 9316 348b 488B45F8 		movq	-8(%rbp), %rax
 9317 348f 4889C7   		movq	%rax, %rdi
 9318 3492 E8000000 		call	_ZdlPv
 9318      00
 9319              	.L513:
  61:TestDeferredTestReporter.cpp **** {
 9320              		.loc 3 61 0
 9321 3497 C9       		leave
 9322              		.cfi_def_cfa 7, 8
 9323 3498 C3       		ret
 9324              		.cfi_endproc
 9325              	.LFE1621:
 9327              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev,
 9328 3499 90       		.align 2
 9330              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev:
 9331              	.LFB1623:
  61:TestDeferredTestReporter.cpp **** {
 9332              		.loc 3 61 0 is_stmt 1
 9333              		.cfi_startproc
 9334 349a 55       		pushq	%rbp
 9335              		.cfi_def_cfa_offset 16
 9336              		.cfi_offset 6, -16
 9337 349b 4889E5   		movq	%rsp, %rbp
 9338              		.cfi_def_cfa_register 6
 9339 349e 4883EC10 		subq	$16, %rsp
 9340 34a2 48897DF8 		movq	%rdi, -8(%rbp)
  61:TestDeferredTestReporter.cpp **** {
 9341              		.loc 3 61 0
 9342 34a6 488B45F8 		movq	-8(%rbp), %rax
 9343 34aa 4889C7   		movq	%rax, %rdi
 9344 34ad E8ACFFFF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9344      FF
 9345 34b2 488B45F8 		movq	-8(%rbp), %rax
 9346 34b6 4889C7   		movq	%rax, %rdi
 9347 34b9 E8000000 		call	_ZdlPv
 9347      00
 9348 34be C9       		leave
 9349              		.cfi_def_cfa 7, 8
 9350 34bf C3       		ret
 9351              		.cfi_endproc
 9352              	.LFE1623:
 9354              		.section	.rodata
 9355              		.align 8
 9358              	_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 9359 0668 00000000 		.quad	0
 9359      00000000 
 9360 0670 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9360      00000000 
 9361 0678 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9361      00000000 
 9362 0680 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9362      00000000 
 9363 0688 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 9363      00000000 
 9364              		.text
 9365              		.align 2
 9367              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 9368              	.LFB1625:
  52:TestDeferredTestReporter.cpp **** {
 9369              		.loc 3 52 0
 9370              		.cfi_startproc
 9371 34c0 55       		pushq	%rbp
 9372              		.cfi_def_cfa_offset 16
 9373              		.cfi_offset 6, -16
 9374 34c1 4889E5   		movq	%rsp, %rbp
 9375              		.cfi_def_cfa_register 6
 9376 34c4 4883EC10 		subq	$16, %rsp
 9377 34c8 48897DF8 		movq	%rdi, -8(%rbp)
 9378              	.LBB163:
  52:TestDeferredTestReporter.cpp **** {
 9379              		.loc 3 52 0
 9380 34cc BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9380      00
 9381 34d1 488B45F8 		movq	-8(%rbp), %rax
 9382 34d5 488910   		movq	%rdx, (%rax)
 9383 34d8 488B45F8 		movq	-8(%rbp), %rax
 9384 34dc 4889C7   		movq	%rax, %rdi
 9385 34df E8000000 		call	_ZN8UnitTest4TestD2Ev
 9385      00
 9386              	.LBE163:
 9387 34e4 B8000000 		movl	$0, %eax
 9387      00
 9388 34e9 85C0     		testl	%eax, %eax
 9389 34eb 740C     		je	.L516
  52:TestDeferredTestReporter.cpp **** {
 9390              		.loc 3 52 0 is_stmt 0 discriminator 4
 9391 34ed 488B45F8 		movq	-8(%rbp), %rax
 9392 34f1 4889C7   		movq	%rax, %rdi
 9393 34f4 E8000000 		call	_ZdlPv
 9393      00
 9394              	.L516:
  52:TestDeferredTestReporter.cpp **** {
 9395              		.loc 3 52 0
 9396 34f9 C9       		leave
 9397              		.cfi_def_cfa 7, 8
 9398 34fa C3       		ret
 9399              		.cfi_endproc
 9400              	.LFE1625:
 9402              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9403 34fb 90       		.align 2
 9405              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 9406              	.LFB1627:
  52:TestDeferredTestReporter.cpp **** {
 9407              		.loc 3 52 0 is_stmt 1
 9408              		.cfi_startproc
 9409 34fc 55       		pushq	%rbp
 9410              		.cfi_def_cfa_offset 16
 9411              		.cfi_offset 6, -16
 9412 34fd 4889E5   		movq	%rsp, %rbp
 9413              		.cfi_def_cfa_register 6
 9414 3500 4883EC10 		subq	$16, %rsp
 9415 3504 48897DF8 		movq	%rdi, -8(%rbp)
  52:TestDeferredTestReporter.cpp **** {
 9416              		.loc 3 52 0
 9417 3508 488B45F8 		movq	-8(%rbp), %rax
 9418 350c 4889C7   		movq	%rax, %rdi
 9419 350f E8ACFFFF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9419      FF
 9420 3514 488B45F8 		movq	-8(%rbp), %rax
 9421 3518 4889C7   		movq	%rax, %rdi
 9422 351b E8000000 		call	_ZdlPv
 9422      00
 9423 3520 C9       		leave
 9424              		.cfi_def_cfa 7, 8
 9425 3521 C3       		ret
 9426              		.cfi_endproc
 9427              	.LFE1627:
 9429              		.section	.rodata
 9430              		.align 8
 9433              	_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 9434 0690 00000000 		.quad	0
 9434      00000000 
 9435 0698 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9435      00000000 
 9436 06a0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9436      00000000 
 9437 06a8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9437      00000000 
 9438 06b0 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 9438      00000000 
 9439              		.text
 9440              		.align 2
 9442              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2
 9443              	.LFB1629:
  46:TestDeferredTestReporter.cpp **** {
 9444              		.loc 3 46 0
 9445              		.cfi_startproc
 9446 3522 55       		pushq	%rbp
 9447              		.cfi_def_cfa_offset 16
 9448              		.cfi_offset 6, -16
 9449 3523 4889E5   		movq	%rsp, %rbp
 9450              		.cfi_def_cfa_register 6
 9451 3526 4883EC10 		subq	$16, %rsp
 9452 352a 48897DF8 		movq	%rdi, -8(%rbp)
 9453              	.LBB164:
  46:TestDeferredTestReporter.cpp **** {
 9454              		.loc 3 46 0
 9455 352e BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9455      00
 9456 3533 488B45F8 		movq	-8(%rbp), %rax
 9457 3537 488910   		movq	%rdx, (%rax)
 9458 353a 488B45F8 		movq	-8(%rbp), %rax
 9459 353e 4889C7   		movq	%rax, %rdi
 9460 3541 E8000000 		call	_ZN8UnitTest4TestD2Ev
 9460      00
 9461              	.LBE164:
 9462 3546 B8000000 		movl	$0, %eax
 9462      00
 9463 354b 85C0     		testl	%eax, %eax
 9464 354d 740C     		je	.L519
  46:TestDeferredTestReporter.cpp **** {
 9465              		.loc 3 46 0 is_stmt 0 discriminator 4
 9466 354f 488B45F8 		movq	-8(%rbp), %rax
 9467 3553 4889C7   		movq	%rax, %rdi
 9468 3556 E8000000 		call	_ZdlPv
 9468      00
 9469              	.L519:
  46:TestDeferredTestReporter.cpp **** {
 9470              		.loc 3 46 0
 9471 355b C9       		leave
 9472              		.cfi_def_cfa 7, 8
 9473 355c C3       		ret
 9474              		.cfi_endproc
 9475              	.LFE1629:
 9477              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9478 355d 90       		.align 2
 9480              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0
 9481              	.LFB1631:
  46:TestDeferredTestReporter.cpp **** {
 9482              		.loc 3 46 0 is_stmt 1
 9483              		.cfi_startproc
 9484 355e 55       		pushq	%rbp
 9485              		.cfi_def_cfa_offset 16
 9486              		.cfi_offset 6, -16
 9487 355f 4889E5   		movq	%rsp, %rbp
 9488              		.cfi_def_cfa_register 6
 9489 3562 4883EC10 		subq	$16, %rsp
 9490 3566 48897DF8 		movq	%rdi, -8(%rbp)
  46:TestDeferredTestReporter.cpp **** {
 9491              		.loc 3 46 0
 9492 356a 488B45F8 		movq	-8(%rbp), %rax
 9493 356e 4889C7   		movq	%rax, %rdi
 9494 3571 E8ACFFFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9494      FF
 9495 3576 488B45F8 		movq	-8(%rbp), %rax
 9496 357a 4889C7   		movq	%rax, %rdi
 9497 357d E8000000 		call	_ZdlPv
 9497      00
 9498 3582 C9       		leave
 9499              		.cfi_def_cfa 7, 8
 9500 3583 C3       		ret
 9501              		.cfi_endproc
 9502              	.LFE1631:
 9504              		.section	.rodata
 9505              		.align 8
 9508              	_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 9509 06b8 00000000 		.quad	0
 9509      00000000 
 9510 06c0 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 9510      00000000 
 9511 06c8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 9511      00000000 
 9512 06d0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
 9512      00000000 
 9513 06d8 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 9513      00000000 
 9514 06e0 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 9514      00000000 
 9515 06e8 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 9515      00000000 
 9516 06f0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
 9516      00000000 
 9517              		.text
 9518              		.align 2
 9520              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev:
 9521              	.LFB1633:
  20:TestDeferredTestReporter.cpp **** {
 9522              		.loc 3 20 0
 9523              		.cfi_startproc
 9524 3584 55       		pushq	%rbp
 9525              		.cfi_def_cfa_offset 16
 9526              		.cfi_offset 6, -16
 9527 3585 4889E5   		movq	%rsp, %rbp
 9528              		.cfi_def_cfa_register 6
 9529 3588 4883EC10 		subq	$16, %rsp
 9530 358c 48897DF8 		movq	%rdi, -8(%rbp)
 9531              	.LBB165:
  20:TestDeferredTestReporter.cpp **** {
 9532              		.loc 3 20 0
 9533 3590 BA000000 		movl	$_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE+16, %edx
 9533      00
 9534 3595 488B45F8 		movq	-8(%rbp), %rax
 9535 3599 488910   		movq	%rdx, (%rax)
 9536 359c 488B45F8 		movq	-8(%rbp), %rax
 9537 35a0 4889C7   		movq	%rax, %rdi
 9538 35a3 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 9538      00
 9539              	.LBE165:
 9540 35a8 B8000000 		movl	$0, %eax
 9540      00
 9541 35ad 85C0     		testl	%eax, %eax
 9542 35af 740C     		je	.L522
  20:TestDeferredTestReporter.cpp **** {
 9543              		.loc 3 20 0 is_stmt 0 discriminator 4
 9544 35b1 488B45F8 		movq	-8(%rbp), %rax
 9545 35b5 4889C7   		movq	%rax, %rdi
 9546 35b8 E8000000 		call	_ZdlPv
 9546      00
 9547              	.L522:
  20:TestDeferredTestReporter.cpp **** {
 9548              		.loc 3 20 0
 9549 35bd C9       		leave
 9550              		.cfi_def_cfa 7, 8
 9551 35be C3       		ret
 9552              		.cfi_endproc
 9553              	.LFE1633:
 9555              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 9556 35bf 90       		.align 2
 9558              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev:
 9559              	.LFB1635:
  20:TestDeferredTestReporter.cpp **** {
 9560              		.loc 3 20 0 is_stmt 1
 9561              		.cfi_startproc
 9562 35c0 55       		pushq	%rbp
 9563              		.cfi_def_cfa_offset 16
 9564              		.cfi_offset 6, -16
 9565 35c1 4889E5   		movq	%rsp, %rbp
 9566              		.cfi_def_cfa_register 6
 9567 35c4 4883EC10 		subq	$16, %rsp
 9568 35c8 48897DF8 		movq	%rdi, -8(%rbp)
  20:TestDeferredTestReporter.cpp **** {
 9569              		.loc 3 20 0
 9570 35cc 488B45F8 		movq	-8(%rbp), %rax
 9571 35d0 4889C7   		movq	%rax, %rdi
 9572 35d3 E8ACFFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 9572      FF
 9573 35d8 488B45F8 		movq	-8(%rbp), %rax
 9574 35dc 4889C7   		movq	%rax, %rdi
 9575 35df E8000000 		call	_ZdlPv
 9575      00
 9576 35e4 C9       		leave
 9577              		.cfi_def_cfa 7, 8
 9578 35e5 C3       		ret
 9579              		.cfi_endproc
 9580              	.LFE1635:
 9582              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9583              		.section	.rodata._ZTVN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9584              		.align 8
 9587              	_ZTVN8UnitTest15MemoryOutStreamE:
 9588 0000 90000000 		.quad	144
 9588      00000000 
 9589 0008 00000000 		.quad	0
 9589      00000000 
 9590 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9590      00000000 
 9591 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9591      00000000 
 9592 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9592      00000000 
 9593 0028 70FFFFFF 		.quad	-144
 9593      FFFFFFFF 
 9594 0030 70FFFFFF 		.quad	-144
 9594      FFFFFFFF 
 9595 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9595      00000000 
 9596 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9596      00000000 
 9597 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9597      00000000 
 9598              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9599              		.section	.rodata._ZTTN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9600              		.align 8
 9603              	_ZTTN8UnitTest15MemoryOutStreamE:
 9604 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9604      00000000 
 9605 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9605      00000000 
 9606 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9606      00000000 
 9607 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9607      00000000 
 9608 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9608      00000000 
 9609 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9609      00000000 
 9610              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIc
 9611              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9612              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_trai
 9613              		.align 8
 9616              	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:
 9617 0000 90000000 		.quad	144
 9617      00000000 
 9618 0008 00000000 		.quad	0
 9618      00000000 
 9619 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9619      00000000 
 9620 0018 00000000 		.quad	0
 9620      00000000 
 9621 0020 00000000 		.quad	0
 9621      00000000 
 9622 0028 70FFFFFF 		.quad	-144
 9622      FFFFFFFF 
 9623 0030 70FFFFFF 		.quad	-144
 9623      FFFFFFFF 
 9624 0038 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9624      00000000 
 9625 0040 00000000 		.quad	0
 9625      00000000 
 9626 0048 00000000 		.quad	0
 9626      00000000 
 9627              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9628              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9629              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_So,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStre
 9630              		.align 8
 9633              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9634 0000 90000000 		.quad	144
 9634      00000000 
 9635 0008 00000000 		.quad	0
 9635      00000000 
 9636 0010 00000000 		.quad	_ZTISo
 9636      00000000 
 9637 0018 00000000 		.quad	0
 9637      00000000 
 9638 0020 00000000 		.quad	0
 9638      00000000 
 9639 0028 70FFFFFF 		.quad	-144
 9639      FFFFFFFF 
 9640 0030 70FFFFFF 		.quad	-144
 9640      FFFFFFFF 
 9641 0038 00000000 		.quad	_ZTISo
 9641      00000000 
 9642 0040 00000000 		.quad	0
 9642      00000000 
 9643 0048 00000000 		.quad	0
 9643      00000000 
 9644              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9645              		.align 2
 9646              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 9648              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 9649              	.LFB1638:
  13:../MemoryOutStream.h **** {
 9650              		.loc 2 13 0
 9651              		.cfi_startproc
 9652              		.cfi_personality 0x3,__gxx_personality_v0
 9653              		.cfi_lsda 0x3,.LLSDA1638
 9654 0000 55       		pushq	%rbp
 9655              		.cfi_def_cfa_offset 16
 9656              		.cfi_offset 6, -16
 9657 0001 4889E5   		movq	%rsp, %rbp
 9658              		.cfi_def_cfa_register 6
 9659 0004 53       		pushq	%rbx
 9660 0005 4883EC18 		subq	$24, %rsp
 9661              		.cfi_offset 3, -24
 9662 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9663              	.LBB166:
  13:../MemoryOutStream.h **** {
 9664              		.loc 2 13 0
 9665 000d BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
 9665      00
 9666 0012 488B45E8 		movq	-24(%rbp), %rax
 9667 0016 488910   		movq	%rdx, (%rax)
 9668 0019 BA900000 		movl	$144, %edx
 9668      00
 9669 001e 488B45E8 		movq	-24(%rbp), %rax
 9670 0022 4801D0   		addq	%rdx, %rax
 9671 0025 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
 9671      00
 9672 002a 488910   		movq	%rdx, (%rax)
 9673 002d 488B45E8 		movq	-24(%rbp), %rax
 9674 0031 4883C070 		addq	$112, %rax
 9675 0035 4889C7   		movq	%rax, %rdi
 9676              	.LEHB234:
 9677 0038 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 9677      00
 9678              	.LEHE234:
  13:../MemoryOutStream.h **** {
 9679              		.loc 2 13 0 is_stmt 0 discriminator 14
 9680 003d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9680      00
 9681 0042 488B45E8 		movq	-24(%rbp), %rax
 9682 0046 4889D6   		movq	%rdx, %rsi
 9683 0049 4889C7   		movq	%rax, %rdi
 9684              	.LEHB235:
 9685 004c E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9685      00
 9686              	.LEHE235:
  13:../MemoryOutStream.h **** {
 9687              		.loc 2 13 0 discriminator 20
 9688 0051 B8020000 		movl	$2, %eax
 9688      00
 9689 0056 85C0     		testl	%eax, %eax
 9690 0058 7412     		je	.L526
  13:../MemoryOutStream.h **** {
 9691              		.loc 2 13 0 discriminator 21
 9692 005a 488B45E8 		movq	-24(%rbp), %rax
 9693 005e 48059000 		addq	$144, %rax
 9693      0000
 9694 0064 4889C7   		movq	%rax, %rdi
 9695              	.LEHB236:
 9696 0067 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9696      00
 9697              	.LEHE236:
 9698              	.L526:
 9699              	.LBE166:
  13:../MemoryOutStream.h **** {
 9700              		.loc 2 13 0 discriminator 22
 9701 006c B8000000 		movl	$0, %eax
 9701      00
 9702 0071 85C0     		testl	%eax, %eax
 9703 0073 7450     		je	.L525
  13:../MemoryOutStream.h **** {
 9704              		.loc 2 13 0 discriminator 25
 9705 0075 488B45E8 		movq	-24(%rbp), %rax
 9706 0079 4889C7   		movq	%rax, %rdi
 9707 007c E8000000 		call	_ZdlPv
 9707      00
 9708 0081 EB42     		jmp	.L525
 9709              	.L531:
 9710 0083 4889C3   		movq	%rax, %rbx
 9711              	.LBB167:
  13:../MemoryOutStream.h **** {
 9712              		.loc 2 13 0
 9713 0086 BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9713      00
 9714 008b 488B45E8 		movq	-24(%rbp), %rax
 9715 008f 4889D6   		movq	%rdx, %rsi
 9716 0092 4889C7   		movq	%rax, %rdi
 9717 0095 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9717      00
 9718 009a EB03     		jmp	.L529
 9719              	.L532:
 9720 009c 4889C3   		movq	%rax, %rbx
 9721              	.L529:
  13:../MemoryOutStream.h **** {
 9722              		.loc 2 13 0 discriminator 19
 9723 009f B8020000 		movl	$2, %eax
 9723      00
 9724 00a4 85C0     		testl	%eax, %eax
 9725 00a6 7412     		je	.L530
  13:../MemoryOutStream.h **** {
 9726              		.loc 2 13 0 discriminator 32
 9727 00a8 488B45E8 		movq	-24(%rbp), %rax
 9728 00ac 48059000 		addq	$144, %rax
 9728      0000
 9729 00b2 4889C7   		movq	%rax, %rdi
 9730 00b5 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9730      00
 9731              	.L530:
 9732 00ba 4889D8   		movq	%rbx, %rax
 9733 00bd 4889C7   		movq	%rax, %rdi
 9734              	.LEHB237:
 9735 00c0 E8000000 		call	_Unwind_Resume
 9735      00
 9736              	.LEHE237:
 9737              	.L525:
 9738              	.LBE167:
  13:../MemoryOutStream.h **** {
 9739              		.loc 2 13 0
 9740 00c5 4883C418 		addq	$24, %rsp
 9741 00c9 5B       		popq	%rbx
 9742 00ca 5D       		popq	%rbp
 9743              		.cfi_def_cfa 7, 8
 9744 00cb C3       		ret
 9745              		.cfi_endproc
 9746              	.LFE1638:
 9747              		.section	.gcc_except_table
 9748              	.LLSDA1638:
 9749 066d FF       		.byte	0xff
 9750 066e FF       		.byte	0xff
 9751 066f 01       		.byte	0x1
 9752 0670 13       		.uleb128 .LLSDACSE1638-.LLSDACSB1638
 9753              	.LLSDACSB1638:
 9754 0671 38       		.uleb128 .LEHB234-.LFB1638
 9755 0672 05       		.uleb128 .LEHE234-.LEHB234
 9756 0673 8301     		.uleb128 .L531-.LFB1638
 9757 0675 00       		.uleb128 0
 9758 0676 4C       		.uleb128 .LEHB235-.LFB1638
 9759 0677 05       		.uleb128 .LEHE235-.LEHB235
 9760 0678 9C01     		.uleb128 .L532-.LFB1638
 9761 067a 00       		.uleb128 0
 9762 067b 67       		.uleb128 .LEHB236-.LFB1638
 9763 067c 05       		.uleb128 .LEHE236-.LEHB236
 9764 067d 00       		.uleb128 0
 9765 067e 00       		.uleb128 0
 9766 067f C001     		.uleb128 .LEHB237-.LFB1638
 9767 0681 05       		.uleb128 .LEHE237-.LEHB237
 9768 0682 00       		.uleb128 0
 9769 0683 00       		.uleb128 0
 9770              	.LLSDACSE1638:
 9771              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9773              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 9774              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9776              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 9777              	.LFB1642:
  13:../MemoryOutStream.h **** {
 9778              		.loc 2 13 0 is_stmt 1
 9779              		.cfi_startproc
 9780 00cc 4C8B17   		movq	(%rdi), %r10
 9781 00cf 49037AE8 		addq	-24(%r10), %rdi
 9782 00d3 E928FFFF 		jmp	.LTHUNK0
 9782      FF
 9783              		.cfi_endproc
 9784              	.LFE1642:
 9786              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9787              		.align 2
 9788              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 9790              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 9791              	.LFB1639:
  13:../MemoryOutStream.h **** {
 9792              		.loc 2 13 0
 9793              		.cfi_startproc
 9794 0000 55       		pushq	%rbp
 9795              		.cfi_def_cfa_offset 16
 9796              		.cfi_offset 6, -16
 9797 0001 4889E5   		movq	%rsp, %rbp
 9798              		.cfi_def_cfa_register 6
 9799 0004 4883EC10 		subq	$16, %rsp
 9800 0008 48897DF8 		movq	%rdi, -8(%rbp)
  13:../MemoryOutStream.h **** {
 9801              		.loc 2 13 0
 9802 000c 488B45F8 		movq	-8(%rbp), %rax
 9803 0010 4889C7   		movq	%rax, %rdi
 9804 0013 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 9804      00
 9805 0018 488B45F8 		movq	-8(%rbp), %rax
 9806 001c 4889C7   		movq	%rax, %rdi
 9807 001f E8000000 		call	_ZdlPv
 9807      00
 9808 0024 C9       		leave
 9809              		.cfi_def_cfa 7, 8
 9810 0025 C3       		ret
 9811              		.cfi_endproc
 9812              	.LFE1639:
 9814              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 9815              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9817              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 9818              	.LFB1643:
  13:../MemoryOutStream.h **** {
 9819              		.loc 2 13 0
 9820              		.cfi_startproc
 9821 0026 4C8B17   		movq	(%rdi), %r10
 9822 0029 49037AE8 		addq	-24(%r10), %rdi
 9823 002d EBD1     		jmp	.LTHUNK1
 9824              		.cfi_endproc
 9825              	.LFE1643:
 9827              		.section	.rodata
 9828 06f8 00000000 		.align 32
 9828      00000000 
 9831              	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 9832 0700 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9832      6E697454 
 9832      65737431 
 9832      325F474C 
 9832      4F42414C 
 9833 0769 00000000 		.align 8
 9833      000000
 9836              	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 9837 0770 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9837      00000000 
 9838 0778 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9838      00000000 
 9839 0780 00000000 		.quad	_ZTIN8UnitTest4TestE
 9839      00000000 
 9840 0788 00000000 		.align 32
 9840      00000000 
 9840      00000000 
 9840      00000000 
 9840      00000000 
 9843              	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 9844 07a0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9844      6E697454 
 9844      65737431 
 9844      325F474C 
 9844      4F42414C 
 9845 080f 00       		.align 8
 9848              	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 9849 0810 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9849      00000000 
 9850 0818 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9850      00000000 
 9851 0820 00000000 		.quad	_ZTIN8UnitTest4TestE
 9851      00000000 
 9852 0828 00000000 		.align 32
 9852      00000000 
 9852      00000000 
 9852      00000000 
 9852      00000000 
 9855              	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 9856 0840 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9856      6E697454 
 9856      65737431 
 9856      325F474C 
 9856      4F42414C 
 9857 089c 00000000 		.align 8
 9860              	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 9861 08a0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9861      00000000 
 9862 08a8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9862      00000000 
 9863 08b0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9863      00000000 
 9864 08b8 00000000 		.align 32
 9864      00000000 
 9867              	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 9868 08c0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE"
 9868      6E697454 
 9868      65737431 
 9868      325F474C 
 9868      4F42414C 
 9869 0919 00000000 		.align 8
 9869      000000
 9872              	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 9873 0920 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9873      00000000 
 9874 0928 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 9874      00000000 
 9875 0930 00000000 		.quad	_ZTIN8UnitTest4TestE
 9875      00000000 
 9876 0938 00000000 		.align 32
 9876      00000000 
 9879              	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 9880 0940 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9880      6E697454 
 9880      65737431 
 9880      325F474C 
 9880      4F42414C 
 9881 09a3 00000000 		.align 8
 9881      00
 9884              	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 9885 09a8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9885      00000000 
 9886 09b0 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9886      00000000 
 9887 09b8 00000000 		.quad	_ZTIN8UnitTest4TestE
 9887      00000000 
 9888              		.align 32
 9891              	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 9892 09c0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9892      6E697454 
 9892      65737431 
 9892      325F474C 
 9892      4F42414C 
 9893 0a22 00000000 		.align 8
 9893      0000
 9896              	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 9897 0a28 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9897      00000000 
 9898 0a30 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9898      00000000 
 9899 0a38 00000000 		.quad	_ZTIN8UnitTest4TestE
 9899      00000000 
 9900              		.align 32
 9903              	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 9904 0a40 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE"
 9904      6E697454 
 9904      65737431 
 9904      325F474C 
 9904      4F42414C 
 9905 0a75 000000   		.align 8
 9908              	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 9909 0a78 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9909      00000000 
 9910 0a80 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 9910      00000000 
 9911 0a88 00000000 		.quad	_ZTIN8UnitTest20DeferredTestReporterE
 9911      00000000 
 9912              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 9913              		.section	.rodata._ZTIN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTIN8UnitTest15MemoryOutStreamE,
 9914              		.align 8
 9917              	_ZTIN8UnitTest15MemoryOutStreamE:
 9918 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9918      00000000 
 9919 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 9919      00000000 
 9920 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9920      00000000 
 9921              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 9922              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 9923              		.align 16
 9926              	_ZTSN8UnitTest15MemoryOutStreamE:
 9927 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 9927      69745465 
 9927      73743135 
 9927      4D656D6F 
 9927      72794F75 
 9928              		.text
 9930              	_Z41__static_initialization_and_destruction_0ii:
 9931              	.LFB1640:
 116:TestDeferredTestReporter.cpp **** 
 117:TestDeferredTestReporter.cpp **** }}
 9932              		.loc 3 117 0
 9933              		.cfi_startproc
 9934 35e6 55       		pushq	%rbp
 9935              		.cfi_def_cfa_offset 16
 9936              		.cfi_offset 6, -16
 9937 35e7 4889E5   		movq	%rsp, %rbp
 9938              		.cfi_def_cfa_register 6
 9939 35ea 4883EC10 		subq	$16, %rsp
 9940 35ee 897DFC   		movl	%edi, -4(%rbp)
 9941 35f1 8975F8   		movl	%esi, -8(%rbp)
 9942              		.loc 3 117 0
 9943 35f4 837DFC01 		cmpl	$1, -4(%rbp)
 9944 35f8 0F854B01 		jne	.L536
 9944      0000
 9945              		.loc 3 117 0 is_stmt 0 discriminator 1
 9946 35fe 817DF8FF 		cmpl	$65535, -8(%rbp)
 9946      FF0000
 9947 3605 0F853E01 		jne	.L536
 9947      0000
  46:TestDeferredTestReporter.cpp **** {
 9948              		.loc 3 46 0 is_stmt 1
 9949 360b BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9949      00
 9950 3610 E8C3CCFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9950      FF
 9951 3615 BA000000 		movl	$__dso_handle, %edx
 9951      00
 9952 361a BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9952      00
 9953 361f BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9953      00
 9954 3624 E8000000 		call	__cxa_atexit
 9954      00
 9955 3629 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9955      00
 9956 362e BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9956      00
 9957 3633 4889C6   		movq	%rax, %rsi
 9958 3636 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 9958      00
 9959 363b E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9959      00
  52:TestDeferredTestReporter.cpp **** {
 9960              		.loc 3 52 0
 9961 3640 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9961      00
 9962 3645 E824D1FF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9962      FF
 9963 364a BA000000 		movl	$__dso_handle, %edx
 9963      00
 9964 364f BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9964      00
 9965 3654 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9965      00
 9966 3659 E8000000 		call	__cxa_atexit
 9966      00
 9967 365e E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9967      00
 9968 3663 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9968      00
 9969 3668 4889C6   		movq	%rax, %rsi
 9970 366b BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 9970      00
 9971 3670 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9971      00
  61:TestDeferredTestReporter.cpp **** {
 9972              		.loc 3 61 0
 9973 3675 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9973      00
 9974 367a E851D6FF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev
 9974      FF
 9975 367f BA000000 		movl	$__dso_handle, %edx
 9975      00
 9976 3684 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9976      00
 9977 3689 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9977      00
 9978 368e E8000000 		call	__cxa_atexit
 9978      00
 9979 3693 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9979      00
 9980 3698 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9980      00
 9981 369d 4889C6   		movq	%rax, %rsi
 9982 36a0 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE, 
 9982      00
 9983 36a5 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9983      00
  71:TestDeferredTestReporter.cpp **** {
 9984              		.loc 3 71 0
 9985 36aa BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9985      00
 9986 36af E800DBFF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1
 9986      FF
 9987 36b4 BA000000 		movl	$__dso_handle, %edx
 9987      00
 9988 36b9 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9988      00
 9989 36be BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9989      00
 9990 36c3 E8000000 		call	__cxa_atexit
 9990      00
 9991 36c8 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9991      00
 9992 36cd BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9992      00
 9993 36d2 4889C6   		movq	%rax, %rsi
 9994 36d5 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9994      00
 9995 36da E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9995      00
  83:TestDeferredTestReporter.cpp **** {
 9996              		.loc 3 83 0
 9997 36df BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9997      00
 9998 36e4 E853E0FF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9998      FF
 9999 36e9 BA000000 		movl	$__dso_handle, %edx
 9999      00
 10000 36ee BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 10000      00
 10001 36f3 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 10001      00
 10002 36f8 E8000000 		call	__cxa_atexit
 10002      00
 10003 36fd E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 10003      00
 10004 3702 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 10004      00
 10005 3707 4889C6   		movq	%rax, %rsi
 10006 370a BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 10006      00
 10007 370f E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 10007      00
  98:TestDeferredTestReporter.cpp **** {
 10008              		.loc 3 98 0
 10009 3714 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 10009      00
 10010 3719 E87CE6FF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10010      FF
 10011 371e BA000000 		movl	$__dso_handle, %edx
 10011      00
 10012 3723 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 10012      00
 10013 3728 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 10013      00
 10014 372d E8000000 		call	__cxa_atexit
 10014      00
 10015 3732 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 10015      00
 10016 3737 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 10016      00
 10017 373c 4889C6   		movq	%rax, %rsi
 10018 373f BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 10018      00
 10019 3744 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 10019      00
 10020              	.L536:
 10021              		.loc 3 117 0
 10022 3749 90       		nop
 10023 374a C9       		leave
 10024              		.cfi_def_cfa 7, 8
 10025 374b C3       		ret
 10026              		.cfi_endproc
 10027              	.LFE1640:
 10030              	_GLOBAL__sub_I_TestDeferredTestReporter.cpp:
 10031              	.LFB1641:
 10032              		.loc 3 117 0
 10033              		.cfi_startproc
 10034 374c 55       		pushq	%rbp
 10035              		.cfi_def_cfa_offset 16
 10036              		.cfi_offset 6, -16
 10037 374d 4889E5   		movq	%rsp, %rbp
 10038              		.cfi_def_cfa_register 6
 10039              		.loc 3 117 0
 10040 3750 BEFFFF00 		movl	$65535, %esi
 10040      00
 10041 3755 BF010000 		movl	$1, %edi
 10041      00
 10042 375a E887FEFF 		call	_Z41__static_initialization_and_destruction_0ii
 10042      FF
 10043 375f 5D       		popq	%rbp
 10044              		.cfi_def_cfa 7, 8
 10045 3760 C3       		ret
 10046              		.cfi_endproc
 10047              	.LFE1641:
 10049              		.section	.init_array,"aw"
 10050              		.align 8
 10051 0000 00000000 		.quad	_GLOBAL__sub_I_TestDeferredTestReporter.cpp
 10051      00000000 
 10052              		.section	.rodata
 10053              		.align 4
 10054              	.LC14:
 10055 0a90 66E6F642 		.long	1123477094
 10056              		.align 4
 10057              	.LC15:
 10058 0a94 17B7D138 		.long	953267991
 10059              		.text
 10060              	.Letext0:
 10061              		.file 17 "../TestDetails.h"
 10062              		.file 18 "../TestList.h"
 10063              		.file 19 "../TestResults.h"
 10064              		.file 20 "../PosixUtils/SignalTranslator.h"
 10065              		.file 21 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h"
 10066              		.file 22 "/usr/include/c++/5/bits/basic_string.tcc"
 10067              		.file 23 "/usr/include/c++/5/bits/stringfwd.h"
 10068              		.file 24 "/usr/include/c++/5/cwchar"
 10069              		.file 25 "/usr/include/c++/5/bits/char_traits.h"
 10070              		.file 26 "/usr/include/c++/5/clocale"
 10071              		.file 27 "/usr/include/c++/5/cwctype"
 10072              		.file 28 "/usr/include/c++/5/bits/vector.tcc"
 10073              		.file 29 "/usr/include/c++/5/cstring"
 10074              		.file 30 "/usr/include/c++/5/bits/stl_iterator_base_types.h"
 10075              		.file 31 "/usr/include/c++/5/debug/debug.h"
 10076              		.file 32 "/usr/include/c++/5/bits/predefined_ops.h"
 10077              		.file 33 "/usr/include/c++/5/ext/numeric_traits.h"
 10078              		.file 34 "/usr/include/c++/5/bits/stl_iterator.h"
 10079              		.file 35 "/usr/include/stdio.h"
 10080              		.file 36 "<built-in>"
 10081              		.file 37 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 10082              		.file 38 "/usr/include/wchar.h"
 10083              		.file 39 "/usr/include/time.h"
 10084              		.file 40 "/usr/include/locale.h"
 10085              		.file 41 "/usr/include/x86_64-linux-gnu/bits/types.h"
 10086              		.file 42 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 10087              		.file 43 "/usr/include/wctype.h"
 10088              		.file 44 "/usr/include/x86_64-linux-gnu/bits/sigset.h"
 10089              		.file 45 "/usr/include/setjmp.h"
 10090              		.file 46 "/usr/include/x86_64-linux-gnu/bits/siginfo.h"
 10091              		.file 47 "/usr/include/signal.h"
 10092              		.file 48 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 10093              		.file 49 "/usr/include/x86_64-linux-gnu/sys/time.h"
 10094              		.file 50 "/usr/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestDeferredTestReporter.cpp
     /tmp/cc0qG313.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/cc0qG313.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/cc0qG313.s:9603   .rodata._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/cc0qG313.s:9587   .rodata._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/cc0qG313.s:145    .text:0000000000000000 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
     /tmp/cc0qG313.s:172    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC2Ev
     /tmp/cc0qG313.s:172    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC1Ev
     /tmp/cc0qG313.s:202    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC2Ev
     /tmp/cc0qG313.s:4800   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/cc0qG313.s:202    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC1Ev
     /tmp/cc0qG313.s:278    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/cc0qG313.s:4831   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/cc0qG313.s:278    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/cc0qG313.s:368    .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/cc0qG313.s:395    .text:000000000000001a _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev
     /tmp/cc0qG313.s:9508   .rodata:00000000000006b8 _ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/cc0qG313.s:395    .text:000000000000001a _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev
     /tmp/cc0qG313.s:433    .text:0000000000000042 _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
     /tmp/cc0qG313.s:9520   .text:0000000000003584 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
     /tmp/cc0qG313.s:642    .text:0000000000000214 _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
     /tmp/cc0qG313.s:759    .text:00000000000002aa _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC2ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:759    .text:00000000000002aa _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC1ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:797    .text:00000000000002d8 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2Ev
     /tmp/cc0qG313.s:9433   .rodata:0000000000000690 _ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/cc0qG313.s:797    .text:00000000000002d8 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC1Ev
     /tmp/cc0qG313.s:831    .bss:0000000000000000 _ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestInstanceE
     /tmp/cc0qG313.s:831    .bss:0000000000000038 _ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/cc0qG313.s:836    .text:0000000000000318 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD2Ev
     /tmp/cc0qG313.s:836    .text:0000000000000318 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD1Ev
     /tmp/cc0qG313.s:873    .text:0000000000000334 _ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7RunImplEv
     /tmp/cc0qG313.s:4921   .text:00000000000022bd _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:9648   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/cc0qG313.s:1216   .text:000000000000063a _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper7RunImplEv
     /tmp/cc0qG313.s:5269   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
     /tmp/cc0qG313.s:5302   .text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:1374   .text:0000000000000740 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC2ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:1374   .text:0000000000000740 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC1ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:1410   .text:000000000000076e _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC2Ev
     /tmp/cc0qG313.s:9358   .rodata:0000000000000668 _ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/cc0qG313.s:1410   .text:000000000000076e _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC1Ev
     /tmp/cc0qG313.s:1444   .bss:0000000000000040 _ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteInstanceE
     /tmp/cc0qG313.s:1444   .bss:0000000000000078 _ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/cc0qG313.s:1449   .text:00000000000007ae _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD2Ev
     /tmp/cc0qG313.s:1449   .text:00000000000007ae _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD1Ev
     /tmp/cc0qG313.s:1476   .text:00000000000007ca _ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite7RunImplEv
     /tmp/cc0qG313.s:5443   .text:000000000000257c _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:1822   .text:0000000000000ad0 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelper7RunImplEv
     /tmp/cc0qG313.s:5790   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
     /tmp/cc0qG313.s:5824   .text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:2056   .text:0000000000000ca2 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:2056   .text:0000000000000ca2 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:2091   .text:0000000000000cd0 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev
     /tmp/cc0qG313.s:9283   .rodata:0000000000000640 _ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/cc0qG313.s:2091   .text:0000000000000cd0 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev
     /tmp/cc0qG313.s:2125   .bss:0000000000000080 _ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInstanceE
     /tmp/cc0qG313.s:2125   .bss:00000000000000b8 _ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/cc0qG313.s:2130   .text:0000000000000d10 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev
     /tmp/cc0qG313.s:2130   .text:0000000000000d10 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1Ev
     /tmp/cc0qG313.s:2157   .text:0000000000000d2c _ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
     /tmp/cc0qG313.s:5964   .text:000000000000283b _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:2500   .text:0000000000001032 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplEv
     /tmp/cc0qG313.s:6313   .text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:2678   .text:0000000000001186 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:2678   .text:0000000000001186 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC1ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:2714   .text:00000000000011b4 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev
     /tmp/cc0qG313.s:9208   .rodata:0000000000000618 _ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/cc0qG313.s:2714   .text:00000000000011b4 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1Ev
     /tmp/cc0qG313.s:2748   .bss:00000000000000c0 _ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsInstanceE
     /tmp/cc0qG313.s:2748   .bss:00000000000000f8 _ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/cc0qG313.s:2753   .text:00000000000011f4 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev
     /tmp/cc0qG313.s:2753   .text:00000000000011f4 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD1Ev
     /tmp/cc0qG313.s:2780   .text:0000000000001210 _ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImplEv
     /tmp/cc0qG313.s:6473   .text:0000000000002afa _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:3130   .text:0000000000001516 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunImplEv
     /tmp/cc0qG313.s:6819   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/cc0qG313.s:3375   .text:000000000000170e _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC2ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:3375   .text:000000000000170e _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC1ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:3411   .text:000000000000173c _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC2Ev
     /tmp/cc0qG313.s:9133   .rodata:00000000000005f0 _ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/cc0qG313.s:3411   .text:000000000000173c _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC1Ev
     /tmp/cc0qG313.s:3445   .bss:0000000000000100 _ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresInstanceE
     /tmp/cc0qG313.s:3445   .bss:0000000000000138 _ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/cc0qG313.s:3450   .text:000000000000177c _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD2Ev
     /tmp/cc0qG313.s:3450   .text:000000000000177c _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD1Ev
     /tmp/cc0qG313.s:3477   .text:0000000000001798 _ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailures7RunImplEv
     /tmp/cc0qG313.s:6841   .text:0000000000002db9 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:3830   .text:0000000000001a9e _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelper7RunImplEv
     /tmp/cc0qG313.s:7188   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
     /tmp/cc0qG313.s:7220   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
     /tmp/cc0qG313.s:4168   .text:0000000000001d6c _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC2ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:4168   .text:0000000000001d6c _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC1ERKNS_11TestDetailsE
     /tmp/cc0qG313.s:4204   .text:0000000000001d9a _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC2Ev
     /tmp/cc0qG313.s:9058   .rodata:00000000000005c8 _ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/cc0qG313.s:4204   .text:0000000000001d9a _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC1Ev
     /tmp/cc0qG313.s:4238   .bss:0000000000000140 _ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageInstanceE
     /tmp/cc0qG313.s:4238   .bss:0000000000000178 _ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/cc0qG313.s:4243   .text:0000000000001dda _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD2Ev
     /tmp/cc0qG313.s:4243   .text:0000000000001dda _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD1Ev
     /tmp/cc0qG313.s:4270   .text:0000000000001df6 _ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessage7RunImplEv
     /tmp/cc0qG313.s:7248   .text:0000000000003078 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc0qG313.s:4617   .text:00000000000020fc _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelper7RunImplEv
     /tmp/cc0qG313.s:7595   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
     /tmp/cc0qG313.s:4800   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/cc0qG313.s:7660   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/cc0qG313.s:4831   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/cc0qG313.s:7777   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/cc0qG313.s:7798   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/cc0qG313.s:7690   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/cc0qG313.s:7834   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
     /tmp/cc0qG313.s:7877   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
     /tmp/cc0qG313.s:7903   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
     /tmp/cc0qG313.s:7933   .text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:0000000000000000 _ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
     /tmp/cc0qG313.s:7983   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_checkEm
     /tmp/cc0qG313.s:7630   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/cc0qG313.s:8063   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/cc0qG313.s:7630   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/cc0qG313.s:8026   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
     /tmp/cc0qG313.s:7660   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/cc0qG313.s:8094   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/cc0qG313.s:7690   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/cc0qG313.s:8129   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/cc0qG313.s:8026   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
     /tmp/cc0qG313.s:8159   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/cc0qG313.s:8189   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/cc0qG313.s:8063   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/cc0qG313.s:8213   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
     /tmp/cc0qG313.s:8244   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/cc0qG313.s:8283   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/cc0qG313.s:8159   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/cc0qG313.s:8189   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/cc0qG313.s:8307   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/cc0qG313.s:8334   .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/cc0qG313.s:8479   .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/cc0qG313.s:8283   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/cc0qG313.s:8358   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/cc0qG313.s:8505   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/cc0qG313.s:8358   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/cc0qG313.s:8505   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/cc0qG313.s:8712   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv
     /tmp/cc0qG313.s:8733   .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E
     /tmp/cc0qG313.s:8622   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/cc0qG313.s:8592   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev
     /tmp/cc0qG313.s:8764   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/cc0qG313.s:8592   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD1Ev
     /tmp/cc0qG313.s:8794   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m
     /tmp/cc0qG313.s:8622   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/cc0qG313.s:8829   .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
     /tmp/cc0qG313.s:8859   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/cc0qG313.s:8764   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/cc0qG313.s:8882   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m
     /tmp/cc0qG313.s:8912   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_
     /tmp/cc0qG313.s:8859   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/cc0qG313.s:8951   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m
     /tmp/cc0qG313.s:8978   .text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:0000000000000000 _ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
     /tmp/cc0qG313.s:9032   .text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
     /tmp/cc0qG313.s:9001   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
     /tmp/cc0qG313.s:9001   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
     /tmp/cc0qG313.s:9836   .rodata:0000000000000770 _ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/cc0qG313.s:9067   .text:0000000000003338 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD1Ev
     /tmp/cc0qG313.s:9105   .text:0000000000003374 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD0Ev
     /tmp/cc0qG313.s:9067   .text:0000000000003338 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD2Ev
     /tmp/cc0qG313.s:9848   .rodata:0000000000000810 _ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/cc0qG313.s:9142   .text:000000000000339a _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD1Ev
     /tmp/cc0qG313.s:9180   .text:00000000000033d6 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD0Ev
     /tmp/cc0qG313.s:9142   .text:000000000000339a _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD2Ev
     /tmp/cc0qG313.s:9860   .rodata:00000000000008a0 _ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/cc0qG313.s:9217   .text:00000000000033fc _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1Ev
     /tmp/cc0qG313.s:9255   .text:0000000000003438 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev
     /tmp/cc0qG313.s:9217   .text:00000000000033fc _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev
     /tmp/cc0qG313.s:9872   .rodata:0000000000000920 _ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/cc0qG313.s:9292   .text:000000000000345e _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
     /tmp/cc0qG313.s:9330   .text:000000000000349a _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
     /tmp/cc0qG313.s:9292   .text:000000000000345e _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev
     /tmp/cc0qG313.s:9884   .rodata:00000000000009a8 _ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/cc0qG313.s:9367   .text:00000000000034c0 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD1Ev
     /tmp/cc0qG313.s:9405   .text:00000000000034fc _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD0Ev
     /tmp/cc0qG313.s:9367   .text:00000000000034c0 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD2Ev
     /tmp/cc0qG313.s:9896   .rodata:0000000000000a28 _ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/cc0qG313.s:9442   .text:0000000000003522 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD1Ev
     /tmp/cc0qG313.s:9480   .text:000000000000355e _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0Ev
     /tmp/cc0qG313.s:9442   .text:0000000000003522 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2Ev
     /tmp/cc0qG313.s:9908   .rodata:0000000000000a78 _ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/cc0qG313.s:9558   .text:00000000000035c0 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
     /tmp/cc0qG313.s:9520   .text:0000000000003584 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
     /tmp/cc0qG313.s:9917   .rodata._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/cc0qG313.s:9790   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/cc0qG313.s:9776   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000cc _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/cc0qG313.s:9817   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000026 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/cc0qG313.s:9616   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
     /tmp/cc0qG313.s:9633   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/cc0qG313.s:9831   .rodata:0000000000000700 _ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/cc0qG313.s:9843   .rodata:00000000000007a0 _ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/cc0qG313.s:9855   .rodata:0000000000000840 _ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/cc0qG313.s:9867   .rodata:00000000000008c0 _ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/cc0qG313.s:9879   .rodata:0000000000000940 _ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/cc0qG313.s:9891   .rodata:00000000000009c0 _ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/cc0qG313.s:9903   .rodata:0000000000000a40 _ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/cc0qG313.s:9926   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/cc0qG313.s:9930   .text:00000000000035e6 _Z41__static_initialization_and_destruction_0ii
     /tmp/cc0qG313.s:10030  .text:000000000000374c _GLOBAL__sub_I_TestDeferredTestReporter.cpp
                           .group:0000000000000000 _ZN8UnitTest12TestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED5Ev

UNDEFINED SYMBOLS
__gxx_personality_v0
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
_ZTVN8UnitTest12TestReporterE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZdlPv
_ZNSaIcEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
_ZNSaIcED1Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
__stack_chk_fail
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_begin_catch
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11CurrentTest7ResultsEv
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_end_catch
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZTISt9exception
_ZTIN8UnitTest15AssertExceptionE
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest20DeferredTestReporter10GetResultsEv
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
strcpy
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZNSolsEi
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
_ZNSolsEf
_ZSt24__throw_out_of_range_fmtPKcz
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISo
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
_ZTIN8UnitTest20DeferredTestReporterE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
