   1              		.file	"DeferredTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text._ZnwmPv,"axG",@progbits,_ZnwmPv,comdat
   5              		.weak	_ZnwmPv
   7              	_ZnwmPv:
   8              	.LFB265:
   9              		.file 1 "/usr/include/c++/5/new"
   1:/usr/include/c++/5/new **** // The -*- C++ -*- dynamic memory management header.
   2:/usr/include/c++/5/new **** 
   3:/usr/include/c++/5/new **** // Copyright (C) 1994-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/new **** 
   5:/usr/include/c++/5/new **** // This file is part of GCC.
   6:/usr/include/c++/5/new **** //
   7:/usr/include/c++/5/new **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/c++/5/new **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/c++/5/new **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/5/new **** // any later version.
  11:/usr/include/c++/5/new **** // 
  12:/usr/include/c++/5/new **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/c++/5/new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/5/new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/5/new **** // GNU General Public License for more details.
  16:/usr/include/c++/5/new **** // 
  17:/usr/include/c++/5/new **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/5/new **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/c++/5/new **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/5/new **** 
  21:/usr/include/c++/5/new **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/5/new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/5/new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/5/new **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/5/new **** 
  26:/usr/include/c++/5/new **** /** @file new
  27:/usr/include/c++/5/new ****  *  This is a Standard C++ Library header.
  28:/usr/include/c++/5/new ****  *
  29:/usr/include/c++/5/new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:/usr/include/c++/5/new ****  *  handling memory allocation errors; see
  31:/usr/include/c++/5/new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:/usr/include/c++/5/new ****  */
  33:/usr/include/c++/5/new **** 
  34:/usr/include/c++/5/new **** #ifndef _NEW
  35:/usr/include/c++/5/new **** #define _NEW
  36:/usr/include/c++/5/new **** 
  37:/usr/include/c++/5/new **** #pragma GCC system_header
  38:/usr/include/c++/5/new **** 
  39:/usr/include/c++/5/new **** #include <bits/c++config.h>
  40:/usr/include/c++/5/new **** #include <exception>
  41:/usr/include/c++/5/new **** 
  42:/usr/include/c++/5/new **** #pragma GCC visibility push(default)
  43:/usr/include/c++/5/new **** 
  44:/usr/include/c++/5/new **** extern "C++" {
  45:/usr/include/c++/5/new **** 
  46:/usr/include/c++/5/new **** namespace std 
  47:/usr/include/c++/5/new **** {
  48:/usr/include/c++/5/new ****   /**
  49:/usr/include/c++/5/new ****    *  @brief  Exception possibly thrown by @c new.
  50:/usr/include/c++/5/new ****    *  @ingroup exceptions
  51:/usr/include/c++/5/new ****    *
  52:/usr/include/c++/5/new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:/usr/include/c++/5/new ****    *  errors from the throwing forms of @c new.  */
  54:/usr/include/c++/5/new ****   class bad_alloc : public exception 
  55:/usr/include/c++/5/new ****   {
  56:/usr/include/c++/5/new ****   public:
  57:/usr/include/c++/5/new ****     bad_alloc() throw() { }
  58:/usr/include/c++/5/new **** 
  59:/usr/include/c++/5/new ****     // This declaration is not useless:
  60:/usr/include/c++/5/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  61:/usr/include/c++/5/new ****     virtual ~bad_alloc() throw();
  62:/usr/include/c++/5/new **** 
  63:/usr/include/c++/5/new ****     // See comment in eh_exception.cc.
  64:/usr/include/c++/5/new ****     virtual const char* what() const throw();
  65:/usr/include/c++/5/new ****   };
  66:/usr/include/c++/5/new **** 
  67:/usr/include/c++/5/new **** #if __cplusplus >= 201103L
  68:/usr/include/c++/5/new ****   class bad_array_new_length : public bad_alloc
  69:/usr/include/c++/5/new ****   {
  70:/usr/include/c++/5/new ****   public:
  71:/usr/include/c++/5/new ****     bad_array_new_length() throw() { };
  72:/usr/include/c++/5/new **** 
  73:/usr/include/c++/5/new ****     // This declaration is not useless:
  74:/usr/include/c++/5/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  75:/usr/include/c++/5/new ****     virtual ~bad_array_new_length() throw();
  76:/usr/include/c++/5/new **** 
  77:/usr/include/c++/5/new ****     // See comment in eh_exception.cc.
  78:/usr/include/c++/5/new ****     virtual const char* what() const throw();
  79:/usr/include/c++/5/new ****   };
  80:/usr/include/c++/5/new **** #endif
  81:/usr/include/c++/5/new **** 
  82:/usr/include/c++/5/new ****   struct nothrow_t { };
  83:/usr/include/c++/5/new **** 
  84:/usr/include/c++/5/new ****   extern const nothrow_t nothrow;
  85:/usr/include/c++/5/new **** 
  86:/usr/include/c++/5/new ****   /** If you write your own error handler to be called by @c new, it must
  87:/usr/include/c++/5/new ****    *  be of this type.  */
  88:/usr/include/c++/5/new ****   typedef void (*new_handler)();
  89:/usr/include/c++/5/new **** 
  90:/usr/include/c++/5/new ****   /// Takes a replacement handler as the argument, returns the
  91:/usr/include/c++/5/new ****   /// previous handler.
  92:/usr/include/c++/5/new ****   new_handler set_new_handler(new_handler) throw();
  93:/usr/include/c++/5/new **** 
  94:/usr/include/c++/5/new **** #if __cplusplus >= 201103L
  95:/usr/include/c++/5/new ****   /// Return the current new handler.
  96:/usr/include/c++/5/new ****   new_handler get_new_handler() noexcept;
  97:/usr/include/c++/5/new **** #endif
  98:/usr/include/c++/5/new **** } // namespace std
  99:/usr/include/c++/5/new **** 
 100:/usr/include/c++/5/new **** //@{
 101:/usr/include/c++/5/new **** /** These are replaceable signatures:
 102:/usr/include/c++/5/new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 103:/usr/include/c++/5/new ****  *  - normal array new and delete (same)
 104:/usr/include/c++/5/new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 105:/usr/include/c++/5/new ****  *    @c NULL on error)
 106:/usr/include/c++/5/new ****  *  - @c nothrow array new and delete (same)
 107:/usr/include/c++/5/new ****  *
 108:/usr/include/c++/5/new ****  *  Placement new and delete signatures (take a memory address argument,
 109:/usr/include/c++/5/new ****  *  does nothing) may not be replaced by a user's program.
 110:/usr/include/c++/5/new **** */
 111:/usr/include/c++/5/new **** void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 112:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 113:/usr/include/c++/5/new **** void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 114:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 115:/usr/include/c++/5/new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 116:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 117:/usr/include/c++/5/new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 118:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 119:/usr/include/c++/5/new **** void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 120:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 121:/usr/include/c++/5/new **** void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 122:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 123:/usr/include/c++/5/new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 124:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 125:/usr/include/c++/5/new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 126:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 127:/usr/include/c++/5/new **** 
 128:/usr/include/c++/5/new **** // Default placement versions of operator new.
 129:/usr/include/c++/5/new **** inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 130:/usr/include/c++/5/new **** { return __p; }
  10              		.loc 1 130 0
  11              		.cfi_startproc
  12 0000 55       		pushq	%rbp
  13              		.cfi_def_cfa_offset 16
  14              		.cfi_offset 6, -16
  15 0001 4889E5   		movq	%rsp, %rbp
  16              		.cfi_def_cfa_register 6
  17 0004 48897DF8 		movq	%rdi, -8(%rbp)
  18 0008 488975F0 		movq	%rsi, -16(%rbp)
  19              		.loc 1 130 0
  20 000c 488B45F0 		movq	-16(%rbp), %rax
  21 0010 5D       		popq	%rbp
  22              		.cfi_def_cfa 7, 8
  23 0011 C3       		ret
  24              		.cfi_endproc
  25              	.LFE265:
  27              		.section	.text._ZdlPvS_,"axG",@progbits,_ZdlPvS_,comdat
  28              		.weak	_ZdlPvS_
  30              	_ZdlPvS_:
  31              	.LFB267:
 131:/usr/include/c++/5/new **** inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 132:/usr/include/c++/5/new **** { return __p; }
 133:/usr/include/c++/5/new **** 
 134:/usr/include/c++/5/new **** // Default placement versions of operator delete.
 135:/usr/include/c++/5/new **** inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
  32              		.loc 1 135 0
  33              		.cfi_startproc
  34 0000 55       		pushq	%rbp
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 6, -16
  37 0001 4889E5   		movq	%rsp, %rbp
  38              		.cfi_def_cfa_register 6
  39 0004 48897DF8 		movq	%rdi, -8(%rbp)
  40 0008 488975F0 		movq	%rsi, -16(%rbp)
  41              		.loc 1 135 0
  42 000c 90       		nop
  43 000d 5D       		popq	%rbp
  44              		.cfi_def_cfa 7, 8
  45 000e C3       		ret
  46              		.cfi_endproc
  47              	.LFE267:
  49              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
  50              		.align 2
  51              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
  53              	_ZN8UnitTest18DeferredTestResultD2Ev:
  54              	.LFB868:
  55              		.file 2 "DeferredTestResult.h"
   1:DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:DeferredTestResult.h **** 
   4:DeferredTestResult.h **** #include <string>
   5:DeferredTestResult.h **** #include <vector>
   6:DeferredTestResult.h **** 
   7:DeferredTestResult.h **** namespace UnitTest
   8:DeferredTestResult.h **** {
   9:DeferredTestResult.h **** 
  10:DeferredTestResult.h **** struct DeferredTestResult
  56              		.loc 2 10 0
  57              		.cfi_startproc
  58              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  59              		.cfi_lsda 0x1b,.LLSDA868
  60 0000 55       		pushq	%rbp
  61              		.cfi_def_cfa_offset 16
  62              		.cfi_offset 6, -16
  63 0001 4889E5   		movq	%rsp, %rbp
  64              		.cfi_def_cfa_register 6
  65 0004 53       		pushq	%rbx
  66 0005 4883EC18 		subq	$24, %rsp
  67              		.cfi_offset 3, -24
  68 0009 48897DE8 		movq	%rdi, -24(%rbp)
  69              	.LBB2:
  70              		.loc 2 10 0
  71 000d 488B45E8 		movq	-24(%rbp), %rax
  72 0011 4883C060 		addq	$96, %rax
  73 0015 4889C7   		movq	%rax, %rdi
  74              	.LEHB0:
  75 0018 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev@PLT
  75      00
  76              	.LEHE0:
  77              		.loc 2 10 0 is_stmt 0 discriminator 2
  78 001d 488B45E8 		movq	-24(%rbp), %rax
  79 0021 4883C040 		addq	$64, %rax
  80 0025 4889C7   		movq	%rax, %rdi
  81              	.LEHB1:
  82 0028 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
  82      00
  83              	.LEHE1:
  84              		.loc 2 10 0 discriminator 4
  85 002d 488B45E8 		movq	-24(%rbp), %rax
  86 0031 4883C020 		addq	$32, %rax
  87 0035 4889C7   		movq	%rax, %rdi
  88              	.LEHB2:
  89 0038 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
  89      00
  90              	.LEHE2:
  91              		.loc 2 10 0 discriminator 6
  92 003d 488B45E8 		movq	-24(%rbp), %rax
  93 0041 4889C7   		movq	%rax, %rdi
  94              	.LEHB3:
  95 0044 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
  95      00
  96              	.LEHE3:
  97              	.LBE2:
  98 0049 EB44     		jmp	.L11
  99              	.L8:
 100 004b 4889C3   		movq	%rax, %rbx
 101              	.LBB3:
 102              		.loc 2 10 0
 103 004e 488B45E8 		movq	-24(%rbp), %rax
 104 0052 4883C040 		addq	$64, %rax
 105 0056 4889C7   		movq	%rax, %rdi
 106 0059 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 106      00
 107 005e EB03     		jmp	.L6
 108              	.L9:
 109 0060 4889C3   		movq	%rax, %rbx
 110              	.L6:
 111              		.loc 2 10 0 discriminator 3
 112 0063 488B45E8 		movq	-24(%rbp), %rax
 113 0067 4883C020 		addq	$32, %rax
 114 006b 4889C7   		movq	%rax, %rdi
 115 006e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 115      00
 116 0073 EB03     		jmp	.L7
 117              	.L10:
 118 0075 4889C3   		movq	%rax, %rbx
 119              	.L7:
 120              		.loc 2 10 0 discriminator 5
 121 0078 488B45E8 		movq	-24(%rbp), %rax
 122 007c 4889C7   		movq	%rax, %rdi
 123 007f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 123      00
 124 0084 4889D8   		movq	%rbx, %rax
 125 0087 4889C7   		movq	%rax, %rdi
 126              	.LEHB4:
 127 008a E8000000 		call	_Unwind_Resume@PLT
 127      00
 128              	.LEHE4:
 129              	.L11:
 130              	.LBE3:
 131              		.loc 2 10 0
 132 008f 4883C418 		addq	$24, %rsp
 133 0093 5B       		popq	%rbx
 134 0094 5D       		popq	%rbp
 135              		.cfi_def_cfa 7, 8
 136 0095 C3       		ret
 137              		.cfi_endproc
 138              	.LFE868:
 139              		.globl	__gxx_personality_v0
 140              		.section	.gcc_except_table._ZN8UnitTest18DeferredTestResultD2Ev,"aG",@progbits,_ZN8UnitTest18Defer
 141              	.LLSDA868:
 142 0000 FF       		.byte	0xff
 143 0001 FF       		.byte	0xff
 144 0002 01       		.byte	0x1
 145 0003 15       		.uleb128 .LLSDACSE868-.LLSDACSB868
 146              	.LLSDACSB868:
 147 0004 18       		.uleb128 .LEHB0-.LFB868
 148 0005 05       		.uleb128 .LEHE0-.LEHB0
 149 0006 4B       		.uleb128 .L8-.LFB868
 150 0007 00       		.uleb128 0
 151 0008 28       		.uleb128 .LEHB1-.LFB868
 152 0009 05       		.uleb128 .LEHE1-.LEHB1
 153 000a 60       		.uleb128 .L9-.LFB868
 154 000b 00       		.uleb128 0
 155 000c 38       		.uleb128 .LEHB2-.LFB868
 156 000d 05       		.uleb128 .LEHE2-.LEHB2
 157 000e 75       		.uleb128 .L10-.LFB868
 158 000f 00       		.uleb128 0
 159 0010 44       		.uleb128 .LEHB3-.LFB868
 160 0011 05       		.uleb128 .LEHE3-.LEHB3
 161 0012 00       		.uleb128 0
 162 0013 00       		.uleb128 0
 163 0014 8A01     		.uleb128 .LEHB4-.LFB868
 164 0016 05       		.uleb128 .LEHE4-.LEHB4
 165 0017 00       		.uleb128 0
 166 0018 00       		.uleb128 0
 167              	.LLSDACSE868:
 168              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 170              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 171              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 172              		.text
 173              		.align 2
 174              		.globl	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 176              	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE:
 177              	.LFB866:
 178              		.file 3 "DeferredTestReporter.cpp"
   1:DeferredTestReporter.cpp **** #include "DeferredTestReporter.h"
   2:DeferredTestReporter.cpp **** #include "TestDetails.h"
   3:DeferredTestReporter.cpp **** #include "Config.h"
   4:DeferredTestReporter.cpp **** 
   5:DeferredTestReporter.cpp **** using namespace UnitTest;
   6:DeferredTestReporter.cpp **** 
   7:DeferredTestReporter.cpp **** void DeferredTestReporter::ReportTestStart(TestDetails const& details)
   8:DeferredTestReporter.cpp **** {
 179              		.loc 3 8 0 is_stmt 1
 180              		.cfi_startproc
 181              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 182              		.cfi_lsda 0x1b,.LLSDA866
 183 0000 55       		pushq	%rbp
 184              		.cfi_def_cfa_offset 16
 185              		.cfi_offset 6, -16
 186 0001 4889E5   		movq	%rsp, %rbp
 187              		.cfi_def_cfa_register 6
 188 0004 53       		pushq	%rbx
 189 0005 4881ECA8 		subq	$168, %rsp
 189      000000
 190              		.cfi_offset 3, -24
 191 000c 4889BD58 		movq	%rdi, -168(%rbp)
 191      FFFFFF
 192 0013 4889B550 		movq	%rsi, -176(%rbp)
 192      FFFFFF
 193              		.loc 3 8 0
 194 001a 64488B04 		movq	%fs:40, %rax
 194      25280000 
 194      00
 195 0023 488945E8 		movq	%rax, -24(%rbp)
 196 0027 31C0     		xorl	%eax, %eax
   9:DeferredTestReporter.cpp ****     m_results.push_back(DeferredTestResult(details.suiteName, details.testName));
 197              		.loc 3 9 0
 198 0029 488B8550 		movq	-176(%rbp), %rax
 198      FFFFFF
 199 0030 488B5008 		movq	8(%rax), %rdx
 200 0034 488B8550 		movq	-176(%rbp), %rax
 200      FFFFFF
 201 003b 488B08   		movq	(%rax), %rcx
 202 003e 488D8560 		leaq	-160(%rbp), %rax
 202      FFFFFF
 203 0045 4889CE   		movq	%rcx, %rsi
 204 0048 4889C7   		movq	%rax, %rdi
 205              	.LEHB5:
 206 004b E8000000 		call	_ZN8UnitTest18DeferredTestResultC1EPKcS2_@PLT
 206      00
 207              	.LEHE5:
 208 0050 488B8558 		movq	-168(%rbp), %rax
 208      FFFFFF
 209 0057 488D5008 		leaq	8(%rax), %rdx
 210 005b 488D8560 		leaq	-160(%rbp), %rax
 210      FFFFFF
 211 0062 4889C6   		movq	%rax, %rsi
 212 0065 4889D7   		movq	%rdx, %rdi
 213              	.LEHB6:
 214 0068 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE9push_backERKS1_@PLT
 214      00
 215              	.LEHE6:
 216              		.loc 3 9 0 is_stmt 0 discriminator 2
 217 006d 488D8560 		leaq	-160(%rbp), %rax
 217      FFFFFF
 218 0074 4889C7   		movq	%rax, %rdi
 219              	.LEHB7:
 220 0077 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev@PLT
 220      00
 221              	.LEHE7:
  10:DeferredTestReporter.cpp **** }
 222              		.loc 3 10 0 is_stmt 1 discriminator 2
 223 007c 90       		nop
 224 007d 488B45E8 		movq	-24(%rbp), %rax
 225 0081 64483304 		xorq	%fs:40, %rax
 225      25280000 
 225      00
 226 008a 7424     		je	.L14
 227 008c EB1D     		jmp	.L16
 228              	.L15:
 229 008e 4889C3   		movq	%rax, %rbx
   9:DeferredTestReporter.cpp ****     m_results.push_back(DeferredTestResult(details.suiteName, details.testName));
 230              		.loc 3 9 0
 231 0091 488D8560 		leaq	-160(%rbp), %rax
 231      FFFFFF
 232 0098 4889C7   		movq	%rax, %rdi
 233 009b E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev@PLT
 233      00
 234 00a0 4889D8   		movq	%rbx, %rax
 235 00a3 4889C7   		movq	%rax, %rdi
 236              	.LEHB8:
 237 00a6 E8000000 		call	_Unwind_Resume@PLT
 237      00
 238              	.LEHE8:
 239              	.L16:
 240              		.loc 3 10 0
 241 00ab E8000000 		call	__stack_chk_fail@PLT
 241      00
 242              	.L14:
 243 00b0 4881C4A8 		addq	$168, %rsp
 243      000000
 244 00b7 5B       		popq	%rbx
 245 00b8 5D       		popq	%rbp
 246              		.cfi_def_cfa 7, 8
 247 00b9 C3       		ret
 248              		.cfi_endproc
 249              	.LFE866:
 250              		.section	.gcc_except_table,"a",@progbits
 251              	.LLSDA866:
 252 0000 FF       		.byte	0xff
 253 0001 FF       		.byte	0xff
 254 0002 01       		.byte	0x1
 255 0003 12       		.uleb128 .LLSDACSE866-.LLSDACSB866
 256              	.LLSDACSB866:
 257 0004 4B       		.uleb128 .LEHB5-.LFB866
 258 0005 05       		.uleb128 .LEHE5-.LEHB5
 259 0006 00       		.uleb128 0
 260 0007 00       		.uleb128 0
 261 0008 68       		.uleb128 .LEHB6-.LFB866
 262 0009 05       		.uleb128 .LEHE6-.LEHB6
 263 000a 8E01     		.uleb128 .L15-.LFB866
 264 000c 00       		.uleb128 0
 265 000d 77       		.uleb128 .LEHB7-.LFB866
 266 000e 05       		.uleb128 .LEHE7-.LEHB7
 267 000f 00       		.uleb128 0
 268 0010 00       		.uleb128 0
 269 0011 A601     		.uleb128 .LEHB8-.LFB866
 270 0013 05       		.uleb128 .LEHE8-.LEHB8
 271 0014 00       		.uleb128 0
 272 0015 00       		.uleb128 0
 273              	.LLSDACSE866:
 274              		.text
 276              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev,"axG",@progbi
 277              		.align 2
 278              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
 280              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
 281              	.LFB872:
 282              		.file 4 "/usr/include/c++/5/bits/stl_pair.h"
   1:/usr/include/c++/5/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_pair.h **** 
   3:/usr/include/c++/5/bits/stl_pair.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_pair.h **** //
   5:/usr/include/c++/5/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_pair.h **** 
  11:/usr/include/c++/5/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_pair.h **** 
  16:/usr/include/c++/5/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_pair.h **** 
  20:/usr/include/c++/5/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_pair.h **** 
  25:/usr/include/c++/5/bits/stl_pair.h **** /*
  26:/usr/include/c++/5/bits/stl_pair.h ****  *
  27:/usr/include/c++/5/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_pair.h ****  *
  30:/usr/include/c++/5/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_pair.h ****  *
  38:/usr/include/c++/5/bits/stl_pair.h ****  *
  39:/usr/include/c++/5/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_pair.h ****  *
  42:/usr/include/c++/5/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_pair.h ****  */
  50:/usr/include/c++/5/bits/stl_pair.h **** 
  51:/usr/include/c++/5/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/5/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/5/bits/stl_pair.h ****  */
  55:/usr/include/c++/5/bits/stl_pair.h **** 
  56:/usr/include/c++/5/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/5/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/5/bits/stl_pair.h **** 
  59:/usr/include/c++/5/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/5/bits/stl_pair.h **** 
  61:/usr/include/c++/5/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/5/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/5/bits/stl_pair.h **** #endif
  64:/usr/include/c++/5/bits/stl_pair.h **** 
  65:/usr/include/c++/5/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/5/bits/stl_pair.h **** {
  67:/usr/include/c++/5/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/5/bits/stl_pair.h **** 
  69:/usr/include/c++/5/bits/stl_pair.h ****   /**
  70:/usr/include/c++/5/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/5/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/5/bits/stl_pair.h ****    */
  73:/usr/include/c++/5/bits/stl_pair.h **** 
  74:/usr/include/c++/5/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/5/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/5/bits/stl_pair.h ****   struct piecewise_construct_t { };
  77:/usr/include/c++/5/bits/stl_pair.h **** 
  78:/usr/include/c++/5/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/5/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  80:/usr/include/c++/5/bits/stl_pair.h **** 
  81:/usr/include/c++/5/bits/stl_pair.h ****   // Forward declarations.
  82:/usr/include/c++/5/bits/stl_pair.h ****   template<typename...>
  83:/usr/include/c++/5/bits/stl_pair.h ****     class tuple;
  84:/usr/include/c++/5/bits/stl_pair.h **** 
  85:/usr/include/c++/5/bits/stl_pair.h ****   template<std::size_t...>
  86:/usr/include/c++/5/bits/stl_pair.h ****     struct _Index_tuple;
  87:/usr/include/c++/5/bits/stl_pair.h **** #endif
  88:/usr/include/c++/5/bits/stl_pair.h **** 
  89:/usr/include/c++/5/bits/stl_pair.h ****  /**
  90:/usr/include/c++/5/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
  91:/usr/include/c++/5/bits/stl_pair.h ****    *
  92:/usr/include/c++/5/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
  93:/usr/include/c++/5/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
  94:/usr/include/c++/5/bits/stl_pair.h ****    */
  95:/usr/include/c++/5/bits/stl_pair.h ****   template<class _T1, class _T2>
  96:/usr/include/c++/5/bits/stl_pair.h ****     struct pair
 283              		.loc 4 96 0
 284              		.cfi_startproc
 285 0000 55       		pushq	%rbp
 286              		.cfi_def_cfa_offset 16
 287              		.cfi_offset 6, -16
 288 0001 4889E5   		movq	%rsp, %rbp
 289              		.cfi_def_cfa_register 6
 290 0004 4883EC10 		subq	$16, %rsp
 291 0008 48897DF8 		movq	%rdi, -8(%rbp)
 292              	.LBB4:
 293              		.loc 4 96 0
 294 000c 488B45F8 		movq	-8(%rbp), %rax
 295 0010 4883C008 		addq	$8, %rax
 296 0014 4889C7   		movq	%rax, %rdi
 297 0017 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 297      00
 298              	.LBE4:
 299 001c 90       		nop
 300 001d C9       		leave
 301              		.cfi_def_cfa 7, 8
 302 001e C3       		ret
 303              		.cfi_endproc
 304              	.LFE872:
 306              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 307              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,_ZNSt4pairIiNSt7__cxx11
 308              		.text
 309              		.align 2
 310              		.globl	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 312              	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc:
 313              	.LFB870:
  11:DeferredTestReporter.cpp **** 
  12:DeferredTestReporter.cpp **** void DeferredTestReporter::ReportFailure(TestDetails const& details, char const* failure)
  13:DeferredTestReporter.cpp **** {
 314              		.loc 3 13 0
 315              		.cfi_startproc
 316              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 317              		.cfi_lsda 0x1b,.LLSDA870
 318 00ba 55       		pushq	%rbp
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 6, -16
 321 00bb 4889E5   		movq	%rsp, %rbp
 322              		.cfi_def_cfa_register 6
 323 00be 53       		pushq	%rbx
 324 00bf 4881EC88 		subq	$136, %rsp
 324      000000
 325              		.cfi_offset 3, -24
 326 00c6 48897D88 		movq	%rdi, -120(%rbp)
 327 00ca 48897580 		movq	%rsi, -128(%rbp)
 328 00ce 48899578 		movq	%rdx, -136(%rbp)
 328      FFFFFF
 329              		.loc 3 13 0
 330 00d5 64488B04 		movq	%fs:40, %rax
 330      25280000 
 330      00
 331 00de 488945E8 		movq	%rax, -24(%rbp)
 332 00e2 31C0     		xorl	%eax, %eax
  14:DeferredTestReporter.cpp ****     DeferredTestResult& r = m_results.back();
 333              		.loc 3 14 0
 334 00e4 488B4588 		movq	-120(%rbp), %rax
 335 00e8 4883C008 		addq	$8, %rax
 336 00ec 4889C7   		movq	%rax, %rdi
 337              	.LEHB9:
 338 00ef E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4backEv@PLT
 338      00
 339              	.LEHE9:
 340 00f4 48894598 		movq	%rax, -104(%rbp)
  15:DeferredTestReporter.cpp ****     r.failed = true;
 341              		.loc 3 15 0
 342 00f8 488B4598 		movq	-104(%rbp), %rax
 343 00fc C6407C01 		movb	$1, 124(%rax)
  16:DeferredTestReporter.cpp ****     r.failures.push_back(DeferredTestResult::Failure(details.lineNumber, failure));
 344              		.loc 3 16 0
 345 0100 488D4597 		leaq	-105(%rbp), %rax
 346 0104 4889C7   		movq	%rax, %rdi
 347 0107 E8000000 		call	_ZNSaIcEC1Ev@PLT
 347      00
 348 010c 488D5597 		leaq	-105(%rbp), %rdx
 349 0110 488B8D78 		movq	-136(%rbp), %rcx
 349      FFFFFF
 350 0117 488D45A0 		leaq	-96(%rbp), %rax
 351 011b 4889CE   		movq	%rcx, %rsi
 352 011e 4889C7   		movq	%rax, %rdi
 353              	.LEHB10:
 354 0121 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 354      00
 355              	.LEHE10:
 356              		.loc 3 16 0 is_stmt 0 discriminator 2
 357 0126 488B4580 		movq	-128(%rbp), %rax
 358 012a 488D4818 		leaq	24(%rax), %rcx
 359 012e 488D55A0 		leaq	-96(%rbp), %rdx
 360 0132 488D45C0 		leaq	-64(%rbp), %rax
 361 0136 4889CE   		movq	%rcx, %rsi
 362 0139 4889C7   		movq	%rax, %rdi
 363              	.LEHB11:
 364 013c E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKiRKS5_@PLT
 364      00
 365              	.LEHE11:
 366              		.loc 3 16 0 discriminator 4
 367 0141 488B4598 		movq	-104(%rbp), %rax
 368 0145 488D5060 		leaq	96(%rax), %rdx
 369 0149 488D45C0 		leaq	-64(%rbp), %rax
 370 014d 4889C6   		movq	%rax, %rsi
 371 0150 4889D7   		movq	%rdx, %rdi
 372              	.LEHB12:
 373 0153 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE9push_back
 373      00
 374              	.LEHE12:
 375              		.loc 3 16 0 discriminator 6
 376 0158 488D45C0 		leaq	-64(%rbp), %rax
 377 015c 4889C7   		movq	%rax, %rdi
 378              	.LEHB13:
 379 015f E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev@PLT
 379      00
 380              	.LEHE13:
 381              		.loc 3 16 0 discriminator 8
 382 0164 488D45A0 		leaq	-96(%rbp), %rax
 383 0168 4889C7   		movq	%rax, %rdi
 384              	.LEHB14:
 385 016b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 385      00
 386              	.LEHE14:
 387              		.loc 3 16 0 discriminator 10
 388 0170 488D4597 		leaq	-105(%rbp), %rax
 389 0174 4889C7   		movq	%rax, %rdi
 390 0177 E8000000 		call	_ZNSaIcED1Ev@PLT
 390      00
  17:DeferredTestReporter.cpp ****     r.failureFile = details.filename;
 391              		.loc 3 17 0 is_stmt 1 discriminator 10
 392 017c 488B4580 		movq	-128(%rbp), %rax
 393 0180 488B4010 		movq	16(%rax), %rax
 394 0184 488B5598 		movq	-104(%rbp), %rdx
 395 0188 4883C240 		addq	$64, %rdx
 396 018c 4889C6   		movq	%rax, %rsi
 397 018f 4889D7   		movq	%rdx, %rdi
 398              	.LEHB15:
 399 0192 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@PLT
 399      00
 400              	.LEHE15:
  18:DeferredTestReporter.cpp **** }
 401              		.loc 3 18 0 discriminator 10
 402 0197 90       		nop
 403 0198 488B45E8 		movq	-24(%rbp), %rax
 404 019c 64483304 		xorq	%fs:40, %rax
 404      25280000 
 404      00
 405 01a5 7443     		je	.L22
 406 01a7 EB3C     		jmp	.L26
 407              	.L25:
 408 01a9 4889C3   		movq	%rax, %rbx
  16:DeferredTestReporter.cpp ****     r.failures.push_back(DeferredTestResult::Failure(details.lineNumber, failure));
 409              		.loc 3 16 0
 410 01ac 488D45C0 		leaq	-64(%rbp), %rax
 411 01b0 4889C7   		movq	%rax, %rdi
 412 01b3 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev@PLT
 412      00
 413 01b8 EB03     		jmp	.L20
 414              	.L24:
 415 01ba 4889C3   		movq	%rax, %rbx
 416              	.L20:
  16:DeferredTestReporter.cpp ****     r.failures.push_back(DeferredTestResult::Failure(details.lineNumber, failure));
 417              		.loc 3 16 0 is_stmt 0 discriminator 7
 418 01bd 488D45A0 		leaq	-96(%rbp), %rax
 419 01c1 4889C7   		movq	%rax, %rdi
 420 01c4 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 420      00
 421 01c9 EB03     		jmp	.L21
 422              	.L23:
 423 01cb 4889C3   		movq	%rax, %rbx
 424              	.L21:
  16:DeferredTestReporter.cpp ****     r.failures.push_back(DeferredTestResult::Failure(details.lineNumber, failure));
 425              		.loc 3 16 0 discriminator 9
 426 01ce 488D4597 		leaq	-105(%rbp), %rax
 427 01d2 4889C7   		movq	%rax, %rdi
 428 01d5 E8000000 		call	_ZNSaIcED1Ev@PLT
 428      00
 429 01da 4889D8   		movq	%rbx, %rax
 430 01dd 4889C7   		movq	%rax, %rdi
 431              	.LEHB16:
 432 01e0 E8000000 		call	_Unwind_Resume@PLT
 432      00
 433              	.LEHE16:
 434              	.L26:
 435              		.loc 3 18 0 is_stmt 1
 436 01e5 E8000000 		call	__stack_chk_fail@PLT
 436      00
 437              	.L22:
 438 01ea 4881C488 		addq	$136, %rsp
 438      000000
 439 01f1 5B       		popq	%rbx
 440 01f2 5D       		popq	%rbp
 441              		.cfi_def_cfa 7, 8
 442 01f3 C3       		ret
 443              		.cfi_endproc
 444              	.LFE870:
 445              		.section	.gcc_except_table
 446              	.LLSDA870:
 447 0016 FF       		.byte	0xff
 448 0017 FF       		.byte	0xff
 449 0018 01       		.byte	0x1
 450 0019 2B       		.uleb128 .LLSDACSE870-.LLSDACSB870
 451              	.LLSDACSB870:
 452 001a 35       		.uleb128 .LEHB9-.LFB870
 453 001b 05       		.uleb128 .LEHE9-.LEHB9
 454 001c 00       		.uleb128 0
 455 001d 00       		.uleb128 0
 456 001e 67       		.uleb128 .LEHB10-.LFB870
 457 001f 05       		.uleb128 .LEHE10-.LEHB10
 458 0020 9102     		.uleb128 .L23-.LFB870
 459 0022 00       		.uleb128 0
 460 0023 8201     		.uleb128 .LEHB11-.LFB870
 461 0025 05       		.uleb128 .LEHE11-.LEHB11
 462 0026 8002     		.uleb128 .L24-.LFB870
 463 0028 00       		.uleb128 0
 464 0029 9901     		.uleb128 .LEHB12-.LFB870
 465 002b 05       		.uleb128 .LEHE12-.LEHB12
 466 002c EF01     		.uleb128 .L25-.LFB870
 467 002e 00       		.uleb128 0
 468 002f A501     		.uleb128 .LEHB13-.LFB870
 469 0031 05       		.uleb128 .LEHE13-.LEHB13
 470 0032 8002     		.uleb128 .L24-.LFB870
 471 0034 00       		.uleb128 0
 472 0035 B101     		.uleb128 .LEHB14-.LFB870
 473 0037 05       		.uleb128 .LEHE14-.LEHB14
 474 0038 9102     		.uleb128 .L23-.LFB870
 475 003a 00       		.uleb128 0
 476 003b D801     		.uleb128 .LEHB15-.LFB870
 477 003d 05       		.uleb128 .LEHE15-.LEHB15
 478 003e 00       		.uleb128 0
 479 003f 00       		.uleb128 0
 480 0040 A602     		.uleb128 .LEHB16-.LFB870
 481 0042 05       		.uleb128 .LEHE16-.LEHB16
 482 0043 00       		.uleb128 0
 483 0044 00       		.uleb128 0
 484              	.LLSDACSE870:
 485              		.text
 487              		.align 2
 488              		.globl	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 490              	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf:
 491              	.LFB874:
  19:DeferredTestReporter.cpp **** 
  20:DeferredTestReporter.cpp **** void DeferredTestReporter::ReportTestFinish(TestDetails const&, float secondsElapsed)
  21:DeferredTestReporter.cpp **** {
 492              		.loc 3 21 0
 493              		.cfi_startproc
 494 01f4 55       		pushq	%rbp
 495              		.cfi_def_cfa_offset 16
 496              		.cfi_offset 6, -16
 497 01f5 4889E5   		movq	%rsp, %rbp
 498              		.cfi_def_cfa_register 6
 499 01f8 4883EC30 		subq	$48, %rsp
 500 01fc 48897DE8 		movq	%rdi, -24(%rbp)
 501 0200 488975E0 		movq	%rsi, -32(%rbp)
 502 0204 F30F1145 		movss	%xmm0, -36(%rbp)
 502      DC
  22:DeferredTestReporter.cpp ****     DeferredTestResult& r = m_results.back();
 503              		.loc 3 22 0
 504 0209 488B45E8 		movq	-24(%rbp), %rax
 505 020d 4883C008 		addq	$8, %rax
 506 0211 4889C7   		movq	%rax, %rdi
 507 0214 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4backEv@PLT
 507      00
 508 0219 488945F8 		movq	%rax, -8(%rbp)
  23:DeferredTestReporter.cpp ****     r.timeElapsed = secondsElapsed;
 509              		.loc 3 23 0
 510 021d 488B45F8 		movq	-8(%rbp), %rax
 511 0221 F30F1045 		movss	-36(%rbp), %xmm0
 511      DC
 512 0226 F30F1140 		movss	%xmm0, 120(%rax)
 512      78
  24:DeferredTestReporter.cpp **** }
 513              		.loc 3 24 0
 514 022b 90       		nop
 515 022c C9       		leave
 516              		.cfi_def_cfa 7, 8
 517 022d C3       		ret
 518              		.cfi_endproc
 519              	.LFE874:
 521              		.align 2
 522              		.globl	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 524              	_ZN8UnitTest20DeferredTestReporter10GetResultsEv:
 525              	.LFB875:
  25:DeferredTestReporter.cpp **** 
  26:DeferredTestReporter.cpp **** DeferredTestReporter::DeferredTestResultList& DeferredTestReporter::GetResults()
  27:DeferredTestReporter.cpp **** {
 526              		.loc 3 27 0
 527              		.cfi_startproc
 528 022e 55       		pushq	%rbp
 529              		.cfi_def_cfa_offset 16
 530              		.cfi_offset 6, -16
 531 022f 4889E5   		movq	%rsp, %rbp
 532              		.cfi_def_cfa_register 6
 533 0232 48897DF8 		movq	%rdi, -8(%rbp)
  28:DeferredTestReporter.cpp ****     return m_results;
 534              		.loc 3 28 0
 535 0236 488B45F8 		movq	-8(%rbp), %rax
 536 023a 4883C008 		addq	$8, %rax
  29:DeferredTestReporter.cpp **** }
 537              		.loc 3 29 0
 538 023e 5D       		popq	%rbp
 539              		.cfi_def_cfa 7, 8
 540 023f C3       		ret
 541              		.cfi_endproc
 542              	.LFE875:
 544              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 545              		.align 2
 546              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
 548              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 549              	.LFB884:
 550              		.file 5 "/usr/include/c++/5/bits/stl_vector.h"
   1:/usr/include/c++/5/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_vector.h **** 
   3:/usr/include/c++/5/bits/stl_vector.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_vector.h **** //
   5:/usr/include/c++/5/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_vector.h **** 
  11:/usr/include/c++/5/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_vector.h **** 
  16:/usr/include/c++/5/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_vector.h **** 
  20:/usr/include/c++/5/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_vector.h **** 
  25:/usr/include/c++/5/bits/stl_vector.h **** /*
  26:/usr/include/c++/5/bits/stl_vector.h ****  *
  27:/usr/include/c++/5/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_vector.h ****  *
  30:/usr/include/c++/5/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_vector.h ****  *
  38:/usr/include/c++/5/bits/stl_vector.h ****  *
  39:/usr/include/c++/5/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/5/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_vector.h ****  *
  42:/usr/include/c++/5/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/5/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_vector.h ****  */
  50:/usr/include/c++/5/bits/stl_vector.h **** 
  51:/usr/include/c++/5/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/5/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/5/bits/stl_vector.h ****  */
  55:/usr/include/c++/5/bits/stl_vector.h **** 
  56:/usr/include/c++/5/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/5/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/5/bits/stl_vector.h **** 
  59:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/5/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/5/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/5/bits/stl_vector.h **** #endif
  65:/usr/include/c++/5/bits/stl_vector.h **** 
  66:/usr/include/c++/5/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/5/bits/stl_vector.h **** {
  68:/usr/include/c++/5/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/5/bits/stl_vector.h **** 
  70:/usr/include/c++/5/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/5/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/5/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/5/bits/stl_vector.h ****     {
  74:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/5/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/5/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/5/bits/stl_vector.h **** 
  79:/usr/include/c++/5/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/5/bits/stl_vector.h ****       {
  82:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/5/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/5/bits/stl_vector.h **** 
  86:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  88:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/5/bits/stl_vector.h **** 
  90:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  92:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/5/bits/stl_vector.h **** 
  94:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/5/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
  98:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/5/bits/stl_vector.h **** #endif
 100:/usr/include/c++/5/bits/stl_vector.h **** 
 101:/usr/include/c++/5/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:/usr/include/c++/5/bits/stl_vector.h **** 	{
 103:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/5/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/5/bits/stl_vector.h **** 	}
 107:/usr/include/c++/5/bits/stl_vector.h ****       };
 108:/usr/include/c++/5/bits/stl_vector.h ****       
 109:/usr/include/c++/5/bits/stl_vector.h ****     public:
 110:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/5/bits/stl_vector.h **** 
 112:/usr/include/c++/5/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/5/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/5/bits/stl_vector.h **** 
 116:/usr/include/c++/5/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/5/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/5/bits/stl_vector.h **** 
 120:/usr/include/c++/5/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/5/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/5/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/5/bits/stl_vector.h **** 
 124:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/5/bits/stl_vector.h **** 
 127:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/5/bits/stl_vector.h **** 
 130:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/5/bits/stl_vector.h **** 
 134:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/5/bits/stl_vector.h **** 
 138:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/5/bits/stl_vector.h **** 
 142:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/5/bits/stl_vector.h **** 
 146:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/5/bits/stl_vector.h ****       {
 149:/usr/include/c++/5/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/5/bits/stl_vector.h **** 	else
 152:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/5/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/5/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/5/bits/stl_vector.h ****       }
 157:/usr/include/c++/5/bits/stl_vector.h **** #endif
 158:/usr/include/c++/5/bits/stl_vector.h **** 
 159:/usr/include/c++/5/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/5/bits/stl_vector.h **** 
 163:/usr/include/c++/5/bits/stl_vector.h ****     public:
 164:/usr/include/c++/5/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/5/bits/stl_vector.h **** 
 166:/usr/include/c++/5/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/5/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/5/bits/stl_vector.h ****       {
 169:/usr/include/c++/5/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:/usr/include/c++/5/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 171:/usr/include/c++/5/bits/stl_vector.h ****       }
 172:/usr/include/c++/5/bits/stl_vector.h **** 
 173:/usr/include/c++/5/bits/stl_vector.h ****       void
 174:/usr/include/c++/5/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:/usr/include/c++/5/bits/stl_vector.h ****       {
 176:/usr/include/c++/5/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:/usr/include/c++/5/bits/stl_vector.h **** 	if (__p)
 178:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:/usr/include/c++/5/bits/stl_vector.h ****       }
 180:/usr/include/c++/5/bits/stl_vector.h **** 
 181:/usr/include/c++/5/bits/stl_vector.h ****     private:
 182:/usr/include/c++/5/bits/stl_vector.h ****       void
 183:/usr/include/c++/5/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 184:/usr/include/c++/5/bits/stl_vector.h ****       {
 185:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:/usr/include/c++/5/bits/stl_vector.h ****       }
 189:/usr/include/c++/5/bits/stl_vector.h ****     };
 190:/usr/include/c++/5/bits/stl_vector.h **** 
 191:/usr/include/c++/5/bits/stl_vector.h **** 
 192:/usr/include/c++/5/bits/stl_vector.h ****   /**
 193:/usr/include/c++/5/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:/usr/include/c++/5/bits/stl_vector.h ****    *  individual elements in any order.
 195:/usr/include/c++/5/bits/stl_vector.h ****    *
 196:/usr/include/c++/5/bits/stl_vector.h ****    *  @ingroup sequences
 197:/usr/include/c++/5/bits/stl_vector.h ****    *
 198:/usr/include/c++/5/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:/usr/include/c++/5/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:/usr/include/c++/5/bits/stl_vector.h ****    *
 201:/usr/include/c++/5/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:/usr/include/c++/5/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:/usr/include/c++/5/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:/usr/include/c++/5/bits/stl_vector.h ****    *
 207:/usr/include/c++/5/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:/usr/include/c++/5/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:/usr/include/c++/5/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:/usr/include/c++/5/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:/usr/include/c++/5/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 212:/usr/include/c++/5/bits/stl_vector.h ****   */
 213:/usr/include/c++/5/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:/usr/include/c++/5/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:/usr/include/c++/5/bits/stl_vector.h ****     {
 216:/usr/include/c++/5/bits/stl_vector.h ****       // Concept requirements.
 217:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:/usr/include/c++/5/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 219:/usr/include/c++/5/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 220:/usr/include/c++/5/bits/stl_vector.h ****       
 221:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 222:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 223:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 224:/usr/include/c++/5/bits/stl_vector.h **** 
 225:/usr/include/c++/5/bits/stl_vector.h ****     public:
 226:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Tp					 value_type;
 227:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 228:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 229:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 230:/usr/include/c++/5/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 231:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 232:/usr/include/c++/5/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 233:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator;
 234:/usr/include/c++/5/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 235:/usr/include/c++/5/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 236:/usr/include/c++/5/bits/stl_vector.h ****       typedef size_t					 size_type;
 237:/usr/include/c++/5/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 238:/usr/include/c++/5/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 239:/usr/include/c++/5/bits/stl_vector.h **** 
 240:/usr/include/c++/5/bits/stl_vector.h ****     protected:
 241:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_allocate;
 242:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_deallocate;
 243:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_impl;
 244:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 245:/usr/include/c++/5/bits/stl_vector.h **** 
 246:/usr/include/c++/5/bits/stl_vector.h ****     public:
 247:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 248:/usr/include/c++/5/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 249:/usr/include/c++/5/bits/stl_vector.h **** 
 250:/usr/include/c++/5/bits/stl_vector.h ****       /**
 251:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 252:/usr/include/c++/5/bits/stl_vector.h ****        */
 253:/usr/include/c++/5/bits/stl_vector.h ****       vector()
 254:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 255:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 256:/usr/include/c++/5/bits/stl_vector.h **** #endif
 257:/usr/include/c++/5/bits/stl_vector.h ****       : _Base() { }
 258:/usr/include/c++/5/bits/stl_vector.h **** 
 259:/usr/include/c++/5/bits/stl_vector.h ****       /**
 260:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 261:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 262:/usr/include/c++/5/bits/stl_vector.h ****        */
 263:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 264:/usr/include/c++/5/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 265:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__a) { }
 266:/usr/include/c++/5/bits/stl_vector.h **** 
 267:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 268:/usr/include/c++/5/bits/stl_vector.h ****       /**
 269:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 270:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 271:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 272:/usr/include/c++/5/bits/stl_vector.h ****        *
 273:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 274:/usr/include/c++/5/bits/stl_vector.h ****        *  constructed elements.
 275:/usr/include/c++/5/bits/stl_vector.h ****        */
 276:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 277:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 278:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 279:/usr/include/c++/5/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 280:/usr/include/c++/5/bits/stl_vector.h **** 
 281:/usr/include/c++/5/bits/stl_vector.h ****       /**
 282:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 283:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 284:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 285:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 286:/usr/include/c++/5/bits/stl_vector.h ****        *
 287:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 288:/usr/include/c++/5/bits/stl_vector.h ****        */
 289:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 290:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 291:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 292:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 293:/usr/include/c++/5/bits/stl_vector.h **** #else
 294:/usr/include/c++/5/bits/stl_vector.h ****       /**
 295:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 296:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 297:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 298:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 299:/usr/include/c++/5/bits/stl_vector.h ****        *
 300:/usr/include/c++/5/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 301:/usr/include/c++/5/bits/stl_vector.h ****        */
 302:/usr/include/c++/5/bits/stl_vector.h ****       explicit
 303:/usr/include/c++/5/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 304:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 305:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__n, __a)
 306:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 307:/usr/include/c++/5/bits/stl_vector.h **** #endif
 308:/usr/include/c++/5/bits/stl_vector.h **** 
 309:/usr/include/c++/5/bits/stl_vector.h ****       /**
 310:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 311:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 312:/usr/include/c++/5/bits/stl_vector.h ****        *
 313:/usr/include/c++/5/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 314:/usr/include/c++/5/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 315:/usr/include/c++/5/bits/stl_vector.h ****        *  but any extra memory in
 316:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 317:/usr/include/c++/5/bits/stl_vector.h ****        */
 318:/usr/include/c++/5/bits/stl_vector.h ****       vector(const vector& __x)
 319:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(),
 320:/usr/include/c++/5/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 321:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 322:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 323:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 324:/usr/include/c++/5/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 325:/usr/include/c++/5/bits/stl_vector.h ****       }
 326:/usr/include/c++/5/bits/stl_vector.h **** 
 327:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 328:/usr/include/c++/5/bits/stl_vector.h ****       /**
 329:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 330:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 331:/usr/include/c++/5/bits/stl_vector.h ****        *
 332:/usr/include/c++/5/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 333:/usr/include/c++/5/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 334:/usr/include/c++/5/bits/stl_vector.h ****        */
 335:/usr/include/c++/5/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 336:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 337:/usr/include/c++/5/bits/stl_vector.h **** 
 338:/usr/include/c++/5/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 339:/usr/include/c++/5/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 340:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 341:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 342:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 343:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 344:/usr/include/c++/5/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 345:/usr/include/c++/5/bits/stl_vector.h ****       }
 346:/usr/include/c++/5/bits/stl_vector.h **** 
 347:/usr/include/c++/5/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 348:/usr/include/c++/5/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 349:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 350:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 351:/usr/include/c++/5/bits/stl_vector.h ****       {
 352:/usr/include/c++/5/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 353:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 354:/usr/include/c++/5/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 355:/usr/include/c++/5/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 356:/usr/include/c++/5/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 357:/usr/include/c++/5/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 358:/usr/include/c++/5/bits/stl_vector.h **** 	    __rv.clear();
 359:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 360:/usr/include/c++/5/bits/stl_vector.h ****       }
 361:/usr/include/c++/5/bits/stl_vector.h **** 
 362:/usr/include/c++/5/bits/stl_vector.h ****       /**
 363:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 364:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 365:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 366:/usr/include/c++/5/bits/stl_vector.h ****        *
 367:/usr/include/c++/5/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 368:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer_list @a __l.
 369:/usr/include/c++/5/bits/stl_vector.h ****        *
 370:/usr/include/c++/5/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 371:/usr/include/c++/5/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 372:/usr/include/c++/5/bits/stl_vector.h ****        */
 373:/usr/include/c++/5/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 374:/usr/include/c++/5/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 375:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__a)
 376:/usr/include/c++/5/bits/stl_vector.h ****       {
 377:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 378:/usr/include/c++/5/bits/stl_vector.h **** 			    random_access_iterator_tag());
 379:/usr/include/c++/5/bits/stl_vector.h ****       }
 380:/usr/include/c++/5/bits/stl_vector.h **** #endif
 381:/usr/include/c++/5/bits/stl_vector.h **** 
 382:/usr/include/c++/5/bits/stl_vector.h ****       /**
 383:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 384:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 385:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 386:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __a  An allocator.
 387:/usr/include/c++/5/bits/stl_vector.h ****        *
 388:/usr/include/c++/5/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 389:/usr/include/c++/5/bits/stl_vector.h ****        *  [first,last).
 390:/usr/include/c++/5/bits/stl_vector.h ****        *
 391:/usr/include/c++/5/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 392:/usr/include/c++/5/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 393:/usr/include/c++/5/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 394:/usr/include/c++/5/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 395:/usr/include/c++/5/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 396:/usr/include/c++/5/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 397:/usr/include/c++/5/bits/stl_vector.h ****        */
 398:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 399:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
 400:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 401:/usr/include/c++/5/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 402:/usr/include/c++/5/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 403:/usr/include/c++/5/bits/stl_vector.h **** 	: _Base(__a)
 404:/usr/include/c++/5/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 405:/usr/include/c++/5/bits/stl_vector.h **** #else
 406:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
 407:/usr/include/c++/5/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 408:/usr/include/c++/5/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 409:/usr/include/c++/5/bits/stl_vector.h **** 	: _Base(__a)
 410:/usr/include/c++/5/bits/stl_vector.h ****         {
 411:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 412:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 413:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 414:/usr/include/c++/5/bits/stl_vector.h **** 	}
 415:/usr/include/c++/5/bits/stl_vector.h **** #endif
 416:/usr/include/c++/5/bits/stl_vector.h **** 
 417:/usr/include/c++/5/bits/stl_vector.h ****       /**
 418:/usr/include/c++/5/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 419:/usr/include/c++/5/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 420:/usr/include/c++/5/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 421:/usr/include/c++/5/bits/stl_vector.h ****        *  responsibility.
 422:/usr/include/c++/5/bits/stl_vector.h ****        */
 423:/usr/include/c++/5/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 551              		.loc 5 423 0
 552              		.cfi_startproc
 553              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 554              		.cfi_lsda 0x1b,.LLSDA884
 555 0000 55       		pushq	%rbp
 556              		.cfi_def_cfa_offset 16
 557              		.cfi_offset 6, -16
 558 0001 4889E5   		movq	%rsp, %rbp
 559              		.cfi_def_cfa_register 6
 560 0004 53       		pushq	%rbx
 561 0005 4883EC18 		subq	$24, %rsp
 562              		.cfi_offset 3, -24
 563 0009 48897DE8 		movq	%rdi, -24(%rbp)
 564              	.LBB5:
 424:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 425:/usr/include/c++/5/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 565              		.loc 5 425 0
 566 000d 488B45E8 		movq	-24(%rbp), %rax
 567 0011 4889C7   		movq	%rax, %rdi
 568 0014 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 568      00
 569 0019 4889C2   		movq	%rax, %rdx
 424:/usr/include/c++/5/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 570              		.loc 5 424 0
 571 001c 488B45E8 		movq	-24(%rbp), %rax
 572 0020 488B4808 		movq	8(%rax), %rcx
 573 0024 488B45E8 		movq	-24(%rbp), %rax
 574 0028 488B00   		movq	(%rax), %rax
 575 002b 4889CE   		movq	%rcx, %rsi
 576 002e 4889C7   		movq	%rax, %rdi
 577              	.LEHB17:
 578 0031 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 578      00
 579              	.LEHE17:
 580              		.loc 5 425 0
 581 0036 488B45E8 		movq	-24(%rbp), %rax
 582 003a 4889C7   		movq	%rax, %rdi
 583              	.LEHB18:
 584 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 584      00
 585              	.LEHE18:
 586              	.LBE5:
 587 0042 EB1A     		jmp	.L33
 588              	.L32:
 589 0044 4889C3   		movq	%rax, %rbx
 590              	.LBB6:
 591 0047 488B45E8 		movq	-24(%rbp), %rax
 592 004b 4889C7   		movq	%rax, %rdi
 593 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 593      00
 594 0053 4889D8   		movq	%rbx, %rax
 595 0056 4889C7   		movq	%rax, %rdi
 596              	.LEHB19:
 597 0059 E8000000 		call	_Unwind_Resume@PLT
 597      00
 598              	.LEHE19:
 599              	.L33:
 600              	.LBE6:
 601 005e 4883C418 		addq	$24, %rsp
 602 0062 5B       		popq	%rbx
 603 0063 5D       		popq	%rbp
 604              		.cfi_def_cfa 7, 8
 605 0064 C3       		ret
 606              		.cfi_endproc
 607              	.LFE884:
 608              		.section	.gcc_except_table
 609              	.LLSDA884:
 610 0045 FF       		.byte	0xff
 611 0046 FF       		.byte	0xff
 612 0047 01       		.byte	0x1
 613 0048 0C       		.uleb128 .LLSDACSE884-.LLSDACSB884
 614              	.LLSDACSB884:
 615 0049 31       		.uleb128 .LEHB17-.LFB884
 616 004a 05       		.uleb128 .LEHE17-.LEHB17
 617 004b 44       		.uleb128 .L32-.LFB884
 618 004c 00       		.uleb128 0
 619 004d 3D       		.uleb128 .LEHB18-.LFB884
 620 004e 05       		.uleb128 .LEHE18-.LEHB18
 621 004f 00       		.uleb128 0
 622 0050 00       		.uleb128 0
 623 0051 59       		.uleb128 .LEHB19-.LFB884
 624 0052 05       		.uleb128 .LEHE19-.LEHB19
 625 0053 00       		.uleb128 0
 626 0054 00       		.uleb128 0
 627              	.LLSDACSE884:
 628              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 630              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 631              		.set	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev,_ZNSt
 632              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE9push_backERKS1_,"axG",@progbit
 633              		.align 2
 634              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE9push_backERKS1_
 636              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE9push_backERKS1_:
 637              	.LFB886:
 426:/usr/include/c++/5/bits/stl_vector.h **** 
 427:/usr/include/c++/5/bits/stl_vector.h ****       /**
 428:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 429:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 430:/usr/include/c++/5/bits/stl_vector.h ****        *
 431:/usr/include/c++/5/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 432:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 433:/usr/include/c++/5/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 434:/usr/include/c++/5/bits/stl_vector.h ****        */
 435:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 436:/usr/include/c++/5/bits/stl_vector.h ****       operator=(const vector& __x);
 437:/usr/include/c++/5/bits/stl_vector.h **** 
 438:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 439:/usr/include/c++/5/bits/stl_vector.h ****       /**
 440:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 441:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 442:/usr/include/c++/5/bits/stl_vector.h ****        *
 443:/usr/include/c++/5/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 444:/usr/include/c++/5/bits/stl_vector.h ****        *  if the allocators permit it).
 445:/usr/include/c++/5/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 446:/usr/include/c++/5/bits/stl_vector.h ****        */
 447:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 448:/usr/include/c++/5/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 449:/usr/include/c++/5/bits/stl_vector.h ****       {
 450:/usr/include/c++/5/bits/stl_vector.h ****         constexpr bool __move_storage =
 451:/usr/include/c++/5/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 452:/usr/include/c++/5/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 453:/usr/include/c++/5/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
 454:/usr/include/c++/5/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 455:/usr/include/c++/5/bits/stl_vector.h **** 	return *this;
 456:/usr/include/c++/5/bits/stl_vector.h ****       }
 457:/usr/include/c++/5/bits/stl_vector.h **** 
 458:/usr/include/c++/5/bits/stl_vector.h ****       /**
 459:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 460:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 461:/usr/include/c++/5/bits/stl_vector.h ****        *
 462:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 463:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer list @a __l.
 464:/usr/include/c++/5/bits/stl_vector.h ****        *
 465:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 466:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 467:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 468:/usr/include/c++/5/bits/stl_vector.h ****        */
 469:/usr/include/c++/5/bits/stl_vector.h ****       vector&
 470:/usr/include/c++/5/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 471:/usr/include/c++/5/bits/stl_vector.h ****       {
 472:/usr/include/c++/5/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 473:/usr/include/c++/5/bits/stl_vector.h **** 	return *this;
 474:/usr/include/c++/5/bits/stl_vector.h ****       }
 475:/usr/include/c++/5/bits/stl_vector.h **** #endif
 476:/usr/include/c++/5/bits/stl_vector.h **** 
 477:/usr/include/c++/5/bits/stl_vector.h ****       /**
 478:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 479:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 480:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 481:/usr/include/c++/5/bits/stl_vector.h ****        *
 482:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 483:/usr/include/c++/5/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 484:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 485:/usr/include/c++/5/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 486:/usr/include/c++/5/bits/stl_vector.h ****        */
 487:/usr/include/c++/5/bits/stl_vector.h ****       void
 488:/usr/include/c++/5/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 489:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 490:/usr/include/c++/5/bits/stl_vector.h **** 
 491:/usr/include/c++/5/bits/stl_vector.h ****       /**
 492:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 493:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 494:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 495:/usr/include/c++/5/bits/stl_vector.h ****        *
 496:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 497:/usr/include/c++/5/bits/stl_vector.h ****        *  range [__first,__last).
 498:/usr/include/c++/5/bits/stl_vector.h ****        *
 499:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 500:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 501:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 502:/usr/include/c++/5/bits/stl_vector.h ****        */
 503:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 504:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
 505:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 506:/usr/include/c++/5/bits/stl_vector.h ****         void
 507:/usr/include/c++/5/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 508:/usr/include/c++/5/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 509:/usr/include/c++/5/bits/stl_vector.h **** #else
 510:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
 511:/usr/include/c++/5/bits/stl_vector.h ****         void
 512:/usr/include/c++/5/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 513:/usr/include/c++/5/bits/stl_vector.h ****         {
 514:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 515:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 516:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 517:/usr/include/c++/5/bits/stl_vector.h **** 	}
 518:/usr/include/c++/5/bits/stl_vector.h **** #endif
 519:/usr/include/c++/5/bits/stl_vector.h **** 
 520:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 521:/usr/include/c++/5/bits/stl_vector.h ****       /**
 522:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 523:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 524:/usr/include/c++/5/bits/stl_vector.h ****        *
 525:/usr/include/c++/5/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 526:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer list @a __l.
 527:/usr/include/c++/5/bits/stl_vector.h ****        *
 528:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 529:/usr/include/c++/5/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 530:/usr/include/c++/5/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 531:/usr/include/c++/5/bits/stl_vector.h ****        */
 532:/usr/include/c++/5/bits/stl_vector.h ****       void
 533:/usr/include/c++/5/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 534:/usr/include/c++/5/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 535:/usr/include/c++/5/bits/stl_vector.h **** #endif
 536:/usr/include/c++/5/bits/stl_vector.h **** 
 537:/usr/include/c++/5/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 538:/usr/include/c++/5/bits/stl_vector.h ****       using _Base::get_allocator;
 539:/usr/include/c++/5/bits/stl_vector.h **** 
 540:/usr/include/c++/5/bits/stl_vector.h ****       // iterators
 541:/usr/include/c++/5/bits/stl_vector.h ****       /**
 542:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 543:/usr/include/c++/5/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 544:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 545:/usr/include/c++/5/bits/stl_vector.h ****        */
 546:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 547:/usr/include/c++/5/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 548:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 549:/usr/include/c++/5/bits/stl_vector.h **** 
 550:/usr/include/c++/5/bits/stl_vector.h ****       /**
 551:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 552:/usr/include/c++/5/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 553:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 554:/usr/include/c++/5/bits/stl_vector.h ****        */
 555:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 556:/usr/include/c++/5/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 557:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 558:/usr/include/c++/5/bits/stl_vector.h **** 
 559:/usr/include/c++/5/bits/stl_vector.h ****       /**
 560:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 561:/usr/include/c++/5/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 562:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 563:/usr/include/c++/5/bits/stl_vector.h ****        */
 564:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 565:/usr/include/c++/5/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 566:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 567:/usr/include/c++/5/bits/stl_vector.h **** 
 568:/usr/include/c++/5/bits/stl_vector.h ****       /**
 569:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 570:/usr/include/c++/5/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 571:/usr/include/c++/5/bits/stl_vector.h ****        *  ordinary element order.
 572:/usr/include/c++/5/bits/stl_vector.h ****        */
 573:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 574:/usr/include/c++/5/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 575:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 576:/usr/include/c++/5/bits/stl_vector.h **** 
 577:/usr/include/c++/5/bits/stl_vector.h ****       /**
 578:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 579:/usr/include/c++/5/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 580:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 581:/usr/include/c++/5/bits/stl_vector.h ****        */
 582:/usr/include/c++/5/bits/stl_vector.h ****       reverse_iterator
 583:/usr/include/c++/5/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 584:/usr/include/c++/5/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 585:/usr/include/c++/5/bits/stl_vector.h **** 
 586:/usr/include/c++/5/bits/stl_vector.h ****       /**
 587:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 588:/usr/include/c++/5/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 589:/usr/include/c++/5/bits/stl_vector.h ****        *  reverse element order.
 590:/usr/include/c++/5/bits/stl_vector.h ****        */
 591:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 592:/usr/include/c++/5/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 593:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 594:/usr/include/c++/5/bits/stl_vector.h **** 
 595:/usr/include/c++/5/bits/stl_vector.h ****       /**
 596:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 597:/usr/include/c++/5/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 598:/usr/include/c++/5/bits/stl_vector.h ****        *  in reverse element order.
 599:/usr/include/c++/5/bits/stl_vector.h ****        */
 600:/usr/include/c++/5/bits/stl_vector.h ****       reverse_iterator
 601:/usr/include/c++/5/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 602:/usr/include/c++/5/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 603:/usr/include/c++/5/bits/stl_vector.h **** 
 604:/usr/include/c++/5/bits/stl_vector.h ****       /**
 605:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 606:/usr/include/c++/5/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 607:/usr/include/c++/5/bits/stl_vector.h ****        *  is done in reverse element order.
 608:/usr/include/c++/5/bits/stl_vector.h ****        */
 609:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 610:/usr/include/c++/5/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 611:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 612:/usr/include/c++/5/bits/stl_vector.h **** 
 613:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 614:/usr/include/c++/5/bits/stl_vector.h ****       /**
 615:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 616:/usr/include/c++/5/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 617:/usr/include/c++/5/bits/stl_vector.h ****        *  element order.
 618:/usr/include/c++/5/bits/stl_vector.h ****        */
 619:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 620:/usr/include/c++/5/bits/stl_vector.h ****       cbegin() const noexcept
 621:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 622:/usr/include/c++/5/bits/stl_vector.h **** 
 623:/usr/include/c++/5/bits/stl_vector.h ****       /**
 624:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 625:/usr/include/c++/5/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 626:/usr/include/c++/5/bits/stl_vector.h ****        *  ordinary element order.
 627:/usr/include/c++/5/bits/stl_vector.h ****        */
 628:/usr/include/c++/5/bits/stl_vector.h ****       const_iterator
 629:/usr/include/c++/5/bits/stl_vector.h ****       cend() const noexcept
 630:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 631:/usr/include/c++/5/bits/stl_vector.h **** 
 632:/usr/include/c++/5/bits/stl_vector.h ****       /**
 633:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 634:/usr/include/c++/5/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 635:/usr/include/c++/5/bits/stl_vector.h ****        *  reverse element order.
 636:/usr/include/c++/5/bits/stl_vector.h ****        */
 637:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 638:/usr/include/c++/5/bits/stl_vector.h ****       crbegin() const noexcept
 639:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 640:/usr/include/c++/5/bits/stl_vector.h **** 
 641:/usr/include/c++/5/bits/stl_vector.h ****       /**
 642:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 643:/usr/include/c++/5/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 644:/usr/include/c++/5/bits/stl_vector.h ****        *  is done in reverse element order.
 645:/usr/include/c++/5/bits/stl_vector.h ****        */
 646:/usr/include/c++/5/bits/stl_vector.h ****       const_reverse_iterator
 647:/usr/include/c++/5/bits/stl_vector.h ****       crend() const noexcept
 648:/usr/include/c++/5/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 649:/usr/include/c++/5/bits/stl_vector.h **** #endif
 650:/usr/include/c++/5/bits/stl_vector.h **** 
 651:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.2] capacity
 652:/usr/include/c++/5/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 653:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 654:/usr/include/c++/5/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 655:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 656:/usr/include/c++/5/bits/stl_vector.h **** 
 657:/usr/include/c++/5/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 658:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 659:/usr/include/c++/5/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 660:/usr/include/c++/5/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 661:/usr/include/c++/5/bits/stl_vector.h **** 
 662:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 663:/usr/include/c++/5/bits/stl_vector.h ****       /**
 664:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 665:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 666:/usr/include/c++/5/bits/stl_vector.h ****        *
 667:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 668:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 669:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 670:/usr/include/c++/5/bits/stl_vector.h ****        *  default constructed elements are appended.
 671:/usr/include/c++/5/bits/stl_vector.h ****        */
 672:/usr/include/c++/5/bits/stl_vector.h ****       void
 673:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size)
 674:/usr/include/c++/5/bits/stl_vector.h ****       {
 675:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 676:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 677:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 678:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 679:/usr/include/c++/5/bits/stl_vector.h ****       }
 680:/usr/include/c++/5/bits/stl_vector.h **** 
 681:/usr/include/c++/5/bits/stl_vector.h ****       /**
 682:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 683:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 684:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 685:/usr/include/c++/5/bits/stl_vector.h ****        *
 686:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 687:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 688:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 689:/usr/include/c++/5/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 690:/usr/include/c++/5/bits/stl_vector.h ****        *  given data.
 691:/usr/include/c++/5/bits/stl_vector.h ****        */
 692:/usr/include/c++/5/bits/stl_vector.h ****       void
 693:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 694:/usr/include/c++/5/bits/stl_vector.h ****       {
 695:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 696:/usr/include/c++/5/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 697:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 698:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 699:/usr/include/c++/5/bits/stl_vector.h ****       }
 700:/usr/include/c++/5/bits/stl_vector.h **** #else
 701:/usr/include/c++/5/bits/stl_vector.h ****       /**
 702:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 703:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 704:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 705:/usr/include/c++/5/bits/stl_vector.h ****        *
 706:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 707:/usr/include/c++/5/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 708:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 709:/usr/include/c++/5/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 710:/usr/include/c++/5/bits/stl_vector.h ****        *  given data.
 711:/usr/include/c++/5/bits/stl_vector.h ****        */
 712:/usr/include/c++/5/bits/stl_vector.h ****       void
 713:/usr/include/c++/5/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 714:/usr/include/c++/5/bits/stl_vector.h ****       {
 715:/usr/include/c++/5/bits/stl_vector.h **** 	if (__new_size > size())
 716:/usr/include/c++/5/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 717:/usr/include/c++/5/bits/stl_vector.h **** 	else if (__new_size < size())
 718:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 719:/usr/include/c++/5/bits/stl_vector.h ****       }
 720:/usr/include/c++/5/bits/stl_vector.h **** #endif
 721:/usr/include/c++/5/bits/stl_vector.h **** 
 722:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 723:/usr/include/c++/5/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 724:/usr/include/c++/5/bits/stl_vector.h ****       void
 725:/usr/include/c++/5/bits/stl_vector.h ****       shrink_to_fit()
 726:/usr/include/c++/5/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 727:/usr/include/c++/5/bits/stl_vector.h **** #endif
 728:/usr/include/c++/5/bits/stl_vector.h **** 
 729:/usr/include/c++/5/bits/stl_vector.h ****       /**
 730:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 731:/usr/include/c++/5/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 732:/usr/include/c++/5/bits/stl_vector.h ****        */
 733:/usr/include/c++/5/bits/stl_vector.h ****       size_type
 734:/usr/include/c++/5/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 735:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 736:/usr/include/c++/5/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 737:/usr/include/c++/5/bits/stl_vector.h **** 
 738:/usr/include/c++/5/bits/stl_vector.h ****       /**
 739:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 740:/usr/include/c++/5/bits/stl_vector.h ****        *  equal end().)
 741:/usr/include/c++/5/bits/stl_vector.h ****        */
 742:/usr/include/c++/5/bits/stl_vector.h ****       bool
 743:/usr/include/c++/5/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 744:/usr/include/c++/5/bits/stl_vector.h ****       { return begin() == end(); }
 745:/usr/include/c++/5/bits/stl_vector.h **** 
 746:/usr/include/c++/5/bits/stl_vector.h ****       /**
 747:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 748:/usr/include/c++/5/bits/stl_vector.h ****        *          elements.
 749:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 750:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 751:/usr/include/c++/5/bits/stl_vector.h ****        *
 752:/usr/include/c++/5/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 753:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 754:/usr/include/c++/5/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 755:/usr/include/c++/5/bits/stl_vector.h ****        *  thrown.
 756:/usr/include/c++/5/bits/stl_vector.h ****        *
 757:/usr/include/c++/5/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 758:/usr/include/c++/5/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 759:/usr/include/c++/5/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 760:/usr/include/c++/5/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 761:/usr/include/c++/5/bits/stl_vector.h ****        *  and copying of %vector data.
 762:/usr/include/c++/5/bits/stl_vector.h ****        */
 763:/usr/include/c++/5/bits/stl_vector.h ****       void
 764:/usr/include/c++/5/bits/stl_vector.h ****       reserve(size_type __n);
 765:/usr/include/c++/5/bits/stl_vector.h **** 
 766:/usr/include/c++/5/bits/stl_vector.h ****       // element access
 767:/usr/include/c++/5/bits/stl_vector.h ****       /**
 768:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 769:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 770:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 771:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 772:/usr/include/c++/5/bits/stl_vector.h ****        *
 773:/usr/include/c++/5/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 774:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 775:/usr/include/c++/5/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 776:/usr/include/c++/5/bits/stl_vector.h ****        *  see at().)
 777:/usr/include/c++/5/bits/stl_vector.h ****        */
 778:/usr/include/c++/5/bits/stl_vector.h ****       reference
 779:/usr/include/c++/5/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 780:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 781:/usr/include/c++/5/bits/stl_vector.h **** 
 782:/usr/include/c++/5/bits/stl_vector.h ****       /**
 783:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 784:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 785:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 786:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 787:/usr/include/c++/5/bits/stl_vector.h ****        *
 788:/usr/include/c++/5/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 789:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 790:/usr/include/c++/5/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 791:/usr/include/c++/5/bits/stl_vector.h ****        *  see at().)
 792:/usr/include/c++/5/bits/stl_vector.h ****        */
 793:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 794:/usr/include/c++/5/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 795:/usr/include/c++/5/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 796:/usr/include/c++/5/bits/stl_vector.h **** 
 797:/usr/include/c++/5/bits/stl_vector.h ****     protected:
 798:/usr/include/c++/5/bits/stl_vector.h ****       /// Safety check used only from at().
 799:/usr/include/c++/5/bits/stl_vector.h ****       void
 800:/usr/include/c++/5/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 801:/usr/include/c++/5/bits/stl_vector.h ****       {
 802:/usr/include/c++/5/bits/stl_vector.h **** 	if (__n >= this->size())
 803:/usr/include/c++/5/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 804:/usr/include/c++/5/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 805:/usr/include/c++/5/bits/stl_vector.h **** 				       "(which is %zu)"),
 806:/usr/include/c++/5/bits/stl_vector.h **** 				   __n, this->size());
 807:/usr/include/c++/5/bits/stl_vector.h ****       }
 808:/usr/include/c++/5/bits/stl_vector.h **** 
 809:/usr/include/c++/5/bits/stl_vector.h ****     public:
 810:/usr/include/c++/5/bits/stl_vector.h ****       /**
 811:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 812:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 813:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 814:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 815:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 816:/usr/include/c++/5/bits/stl_vector.h ****        *
 817:/usr/include/c++/5/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 818:/usr/include/c++/5/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 819:/usr/include/c++/5/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 820:/usr/include/c++/5/bits/stl_vector.h ****        */
 821:/usr/include/c++/5/bits/stl_vector.h ****       reference
 822:/usr/include/c++/5/bits/stl_vector.h ****       at(size_type __n)
 823:/usr/include/c++/5/bits/stl_vector.h ****       {
 824:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_check(__n);
 825:/usr/include/c++/5/bits/stl_vector.h **** 	return (*this)[__n]; 
 826:/usr/include/c++/5/bits/stl_vector.h ****       }
 827:/usr/include/c++/5/bits/stl_vector.h **** 
 828:/usr/include/c++/5/bits/stl_vector.h ****       /**
 829:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 830:/usr/include/c++/5/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 831:/usr/include/c++/5/bits/stl_vector.h ****        *  accessed.
 832:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 833:/usr/include/c++/5/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 834:/usr/include/c++/5/bits/stl_vector.h ****        *
 835:/usr/include/c++/5/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 836:/usr/include/c++/5/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 837:/usr/include/c++/5/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 838:/usr/include/c++/5/bits/stl_vector.h ****        */
 839:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 840:/usr/include/c++/5/bits/stl_vector.h ****       at(size_type __n) const
 841:/usr/include/c++/5/bits/stl_vector.h ****       {
 842:/usr/include/c++/5/bits/stl_vector.h **** 	_M_range_check(__n);
 843:/usr/include/c++/5/bits/stl_vector.h **** 	return (*this)[__n];
 844:/usr/include/c++/5/bits/stl_vector.h ****       }
 845:/usr/include/c++/5/bits/stl_vector.h **** 
 846:/usr/include/c++/5/bits/stl_vector.h ****       /**
 847:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 848:/usr/include/c++/5/bits/stl_vector.h ****        *  element of the %vector.
 849:/usr/include/c++/5/bits/stl_vector.h ****        */
 850:/usr/include/c++/5/bits/stl_vector.h ****       reference
 851:/usr/include/c++/5/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 852:/usr/include/c++/5/bits/stl_vector.h ****       { return *begin(); }
 853:/usr/include/c++/5/bits/stl_vector.h **** 
 854:/usr/include/c++/5/bits/stl_vector.h ****       /**
 855:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 856:/usr/include/c++/5/bits/stl_vector.h ****        *  element of the %vector.
 857:/usr/include/c++/5/bits/stl_vector.h ****        */
 858:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 859:/usr/include/c++/5/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 860:/usr/include/c++/5/bits/stl_vector.h ****       { return *begin(); }
 861:/usr/include/c++/5/bits/stl_vector.h **** 
 862:/usr/include/c++/5/bits/stl_vector.h ****       /**
 863:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
 864:/usr/include/c++/5/bits/stl_vector.h ****        *  element of the %vector.
 865:/usr/include/c++/5/bits/stl_vector.h ****        */
 866:/usr/include/c++/5/bits/stl_vector.h ****       reference
 867:/usr/include/c++/5/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 868:/usr/include/c++/5/bits/stl_vector.h ****       { return *(end() - 1); }
 869:/usr/include/c++/5/bits/stl_vector.h ****       
 870:/usr/include/c++/5/bits/stl_vector.h ****       /**
 871:/usr/include/c++/5/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 872:/usr/include/c++/5/bits/stl_vector.h ****        *  last element of the %vector.
 873:/usr/include/c++/5/bits/stl_vector.h ****        */
 874:/usr/include/c++/5/bits/stl_vector.h ****       const_reference
 875:/usr/include/c++/5/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 876:/usr/include/c++/5/bits/stl_vector.h ****       { return *(end() - 1); }
 877:/usr/include/c++/5/bits/stl_vector.h **** 
 878:/usr/include/c++/5/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 879:/usr/include/c++/5/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 880:/usr/include/c++/5/bits/stl_vector.h ****       // data access
 881:/usr/include/c++/5/bits/stl_vector.h ****       /**
 882:/usr/include/c++/5/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 883:/usr/include/c++/5/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 884:/usr/include/c++/5/bits/stl_vector.h ****        */
 885:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 886:/usr/include/c++/5/bits/stl_vector.h ****       _Tp*
 887:/usr/include/c++/5/bits/stl_vector.h **** #else
 888:/usr/include/c++/5/bits/stl_vector.h ****       pointer
 889:/usr/include/c++/5/bits/stl_vector.h **** #endif
 890:/usr/include/c++/5/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 891:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 892:/usr/include/c++/5/bits/stl_vector.h **** 
 893:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 894:/usr/include/c++/5/bits/stl_vector.h ****       const _Tp*
 895:/usr/include/c++/5/bits/stl_vector.h **** #else
 896:/usr/include/c++/5/bits/stl_vector.h ****       const_pointer
 897:/usr/include/c++/5/bits/stl_vector.h **** #endif
 898:/usr/include/c++/5/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 899:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 900:/usr/include/c++/5/bits/stl_vector.h **** 
 901:/usr/include/c++/5/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 902:/usr/include/c++/5/bits/stl_vector.h ****       /**
 903:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 904:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 905:/usr/include/c++/5/bits/stl_vector.h ****        *
 906:/usr/include/c++/5/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 907:/usr/include/c++/5/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 908:/usr/include/c++/5/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 909:/usr/include/c++/5/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 910:/usr/include/c++/5/bits/stl_vector.h ****        *  available.
 911:/usr/include/c++/5/bits/stl_vector.h ****        */
 912:/usr/include/c++/5/bits/stl_vector.h ****       void
 913:/usr/include/c++/5/bits/stl_vector.h ****       push_back(const value_type& __x)
 638              		.loc 5 913 0
 639              		.cfi_startproc
 640 0000 55       		pushq	%rbp
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 6, -16
 643 0001 4889E5   		movq	%rsp, %rbp
 644              		.cfi_def_cfa_register 6
 645 0004 4883EC10 		subq	$16, %rsp
 646 0008 48897DF8 		movq	%rdi, -8(%rbp)
 647 000c 488975F0 		movq	%rsi, -16(%rbp)
 914:/usr/include/c++/5/bits/stl_vector.h ****       {
 915:/usr/include/c++/5/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 648              		.loc 5 915 0
 649 0010 488B45F8 		movq	-8(%rbp), %rax
 650 0014 488B5008 		movq	8(%rax), %rdx
 651 0018 488B45F8 		movq	-8(%rbp), %rax
 652 001c 488B4010 		movq	16(%rax), %rax
 653 0020 4839C2   		cmpq	%rax, %rdx
 654 0023 7434     		je	.L35
 916:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 917:/usr/include/c++/5/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 655              		.loc 5 917 0
 656 0025 488B45F8 		movq	-8(%rbp), %rax
 657 0029 488B4808 		movq	8(%rax), %rcx
 658 002d 488B45F8 		movq	-8(%rbp), %rax
 659 0031 488B55F0 		movq	-16(%rbp), %rdx
 660 0035 4889CE   		movq	%rcx, %rsi
 661 0038 4889C7   		movq	%rax, %rdi
 662 003b E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE9constructIS2_EEvRS3_PS2_RK
 662      00
 918:/usr/include/c++/5/bits/stl_vector.h **** 	                             __x);
 919:/usr/include/c++/5/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 663              		.loc 5 919 0
 664 0040 488B45F8 		movq	-8(%rbp), %rax
 665 0044 488B4008 		movq	8(%rax), %rax
 666 0048 488D9080 		leaq	128(%rax), %rdx
 666      000000
 667 004f 488B45F8 		movq	-8(%rbp), %rax
 668 0053 48895008 		movq	%rdx, 8(%rax)
 920:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 921:/usr/include/c++/5/bits/stl_vector.h **** 	else
 922:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 923:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_emplace_back_aux(__x);
 924:/usr/include/c++/5/bits/stl_vector.h **** #else
 925:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_insert_aux(end(), __x);
 926:/usr/include/c++/5/bits/stl_vector.h **** #endif
 927:/usr/include/c++/5/bits/stl_vector.h ****       }
 669              		.loc 5 927 0
 670 0057 EB22     		jmp	.L37
 671              	.L35:
 925:/usr/include/c++/5/bits/stl_vector.h **** #endif
 672              		.loc 5 925 0
 673 0059 488B45F8 		movq	-8(%rbp), %rax
 674 005d 4889C7   		movq	%rax, %rdi
 675 0060 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE3endEv@PLT
 675      00
 676 0065 4889C1   		movq	%rax, %rcx
 677 0068 488B55F0 		movq	-16(%rbp), %rdx
 678 006c 488B45F8 		movq	-8(%rbp), %rax
 679 0070 4889CE   		movq	%rcx, %rsi
 680 0073 4889C7   		movq	%rax, %rdi
 681 0076 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_ite
 681      00
 682              	.L37:
 683              		.loc 5 927 0
 684 007b 90       		nop
 685 007c C9       		leave
 686              		.cfi_def_cfa 7, 8
 687 007d C3       		ret
 688              		.cfi_endproc
 689              	.LFE886:
 691              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4backEv,"axG",@progbits,_ZNSt6v
 692              		.align 2
 693              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4backEv
 695              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4backEv:
 696              	.LFB887:
 867:/usr/include/c++/5/bits/stl_vector.h ****       { return *(end() - 1); }
 697              		.loc 5 867 0
 698              		.cfi_startproc
 699 0000 55       		pushq	%rbp
 700              		.cfi_def_cfa_offset 16
 701              		.cfi_offset 6, -16
 702 0001 4889E5   		movq	%rsp, %rbp
 703              		.cfi_def_cfa_register 6
 704 0004 4883EC30 		subq	$48, %rsp
 705 0008 48897DD8 		movq	%rdi, -40(%rbp)
 867:/usr/include/c++/5/bits/stl_vector.h ****       { return *(end() - 1); }
 706              		.loc 5 867 0
 707 000c 64488B04 		movq	%fs:40, %rax
 707      25280000 
 707      00
 708 0015 488945F8 		movq	%rax, -8(%rbp)
 709 0019 31C0     		xorl	%eax, %eax
 868:/usr/include/c++/5/bits/stl_vector.h ****       
 710              		.loc 5 868 0
 711 001b 488B45D8 		movq	-40(%rbp), %rax
 712 001f 4889C7   		movq	%rax, %rdi
 713 0022 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE3endEv@PLT
 713      00
 714 0027 488945E0 		movq	%rax, -32(%rbp)
 715 002b 488D45E0 		leaq	-32(%rbp), %rax
 716 002f BE010000 		movl	$1, %esi
 716      00
 717 0034 4889C7   		movq	%rax, %rdi
 718 0037 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEmiEl@
 718      00
 719 003c 488945F0 		movq	%rax, -16(%rbp)
 720 0040 488D45F0 		leaq	-16(%rbp), %rax
 721 0044 4889C7   		movq	%rax, %rdi
 722 0047 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEdeEv@
 722      00
 723 004c 488B55F8 		movq	-8(%rbp), %rdx
 724 0050 64483314 		xorq	%fs:40, %rdx
 724      25280000 
 724      00
 725 0059 7405     		je	.L40
 726 005b E8000000 		call	__stack_chk_fail@PLT
 726      00
 727              	.L40:
 728 0060 C9       		leave
 729              		.cfi_def_cfa 7, 8
 730 0061 C3       		ret
 731              		.cfi_endproc
 732              	.LFE887:
 734              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKiRKS5_,"axG",
 735              		.align 2
 736              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKiRKS5_
 738              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKiRKS5_:
 739              	.LFB898:
  97:/usr/include/c++/5/bits/stl_pair.h ****     {
  98:/usr/include/c++/5/bits/stl_pair.h ****       typedef _T1 first_type;    /// @c first_type is the first bound type
  99:/usr/include/c++/5/bits/stl_pair.h ****       typedef _T2 second_type;   /// @c second_type is the second bound type
 100:/usr/include/c++/5/bits/stl_pair.h **** 
 101:/usr/include/c++/5/bits/stl_pair.h ****       _T1 first;                 /// @c first is a copy of the first object
 102:/usr/include/c++/5/bits/stl_pair.h ****       _T2 second;                /// @c second is a copy of the second object
 103:/usr/include/c++/5/bits/stl_pair.h **** 
 104:/usr/include/c++/5/bits/stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 105:/usr/include/c++/5/bits/stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 106:/usr/include/c++/5/bits/stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 107:/usr/include/c++/5/bits/stl_pair.h ****        *  respective default constructors.  */
 108:/usr/include/c++/5/bits/stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 109:/usr/include/c++/5/bits/stl_pair.h ****       : first(), second() { }
 110:/usr/include/c++/5/bits/stl_pair.h **** 
 111:/usr/include/c++/5/bits/stl_pair.h ****       /** Two objects may be passed to a @c pair constructor to be copied.  */
 112:/usr/include/c++/5/bits/stl_pair.h ****       _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
 740              		.loc 4 112 0
 741              		.cfi_startproc
 742 0000 55       		pushq	%rbp
 743              		.cfi_def_cfa_offset 16
 744              		.cfi_offset 6, -16
 745 0001 4889E5   		movq	%rsp, %rbp
 746              		.cfi_def_cfa_register 6
 747 0004 4883EC20 		subq	$32, %rsp
 748 0008 48897DF8 		movq	%rdi, -8(%rbp)
 749 000c 488975F0 		movq	%rsi, -16(%rbp)
 750 0010 488955E8 		movq	%rdx, -24(%rbp)
 751              	.LBB7:
 113:/usr/include/c++/5/bits/stl_pair.h ****       : first(__a), second(__b) { }
 752              		.loc 4 113 0
 753 0014 488B45F0 		movq	-16(%rbp), %rax
 754 0018 8B10     		movl	(%rax), %edx
 755 001a 488B45F8 		movq	-8(%rbp), %rax
 756 001e 8910     		movl	%edx, (%rax)
 757 0020 488B45F8 		movq	-8(%rbp), %rax
 758 0024 488D5008 		leaq	8(%rax), %rdx
 759 0028 488B45E8 		movq	-24(%rbp), %rax
 760 002c 4889C6   		movq	%rax, %rsi
 761 002f 4889D7   		movq	%rdx, %rdi
 762 0032 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@PLT
 762      00
 763              	.LBE7:
 764 0037 90       		nop
 765 0038 C9       		leave
 766              		.cfi_def_cfa 7, 8
 767 0039 C3       		ret
 768              		.cfi_endproc
 769              	.LFE898:
 771              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKiRKS5_
 772              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKiRKS5_,_ZNSt4pairIiNSt7
 773              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 774              		.align 2
 775              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE9push_bac
 777              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE9push_backERKS7_
 778              	.LFB900:
 913:/usr/include/c++/5/bits/stl_vector.h ****       {
 779              		.loc 5 913 0
 780              		.cfi_startproc
 781 0000 55       		pushq	%rbp
 782              		.cfi_def_cfa_offset 16
 783              		.cfi_offset 6, -16
 784 0001 4889E5   		movq	%rsp, %rbp
 785              		.cfi_def_cfa_register 6
 786 0004 4883EC10 		subq	$16, %rsp
 787 0008 48897DF8 		movq	%rdi, -8(%rbp)
 788 000c 488975F0 		movq	%rsi, -16(%rbp)
 915:/usr/include/c++/5/bits/stl_vector.h **** 	  {
 789              		.loc 5 915 0
 790 0010 488B45F8 		movq	-8(%rbp), %rax
 791 0014 488B5008 		movq	8(%rax), %rdx
 792 0018 488B45F8 		movq	-8(%rbp), %rax
 793 001c 488B4010 		movq	16(%rax), %rax
 794 0020 4839C2   		cmpq	%rax, %rdx
 795 0023 7431     		je	.L43
 917:/usr/include/c++/5/bits/stl_vector.h **** 	                             __x);
 796              		.loc 5 917 0
 797 0025 488B45F8 		movq	-8(%rbp), %rax
 798 0029 488B4808 		movq	8(%rax), %rcx
 799 002d 488B45F8 		movq	-8(%rbp), %rax
 800 0031 488B55F0 		movq	-16(%rbp), %rdx
 801 0035 4889CE   		movq	%rcx, %rsi
 802 0038 4889C7   		movq	%rax, %rdi
 803 003b E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 803      00
 919:/usr/include/c++/5/bits/stl_vector.h **** 	  }
 804              		.loc 5 919 0
 805 0040 488B45F8 		movq	-8(%rbp), %rax
 806 0044 488B4008 		movq	8(%rax), %rax
 807 0048 488D5028 		leaq	40(%rax), %rdx
 808 004c 488B45F8 		movq	-8(%rbp), %rax
 809 0050 48895008 		movq	%rdx, 8(%rax)
 810              		.loc 5 927 0
 811 0054 EB22     		jmp	.L45
 812              	.L43:
 925:/usr/include/c++/5/bits/stl_vector.h **** #endif
 813              		.loc 5 925 0
 814 0056 488B45F8 		movq	-8(%rbp), %rax
 815 005a 4889C7   		movq	%rax, %rdi
 816 005d E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv@PLT
 816      00
 817 0062 4889C1   		movq	%rax, %rcx
 818 0065 488B55F0 		movq	-16(%rbp), %rdx
 819 0069 488B45F8 		movq	-8(%rbp), %rax
 820 006d 4889CE   		movq	%rcx, %rsi
 821 0070 4889C7   		movq	%rax, %rdi
 822 0073 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_inser
 822      00
 823              	.L45:
 824              		.loc 5 927 0
 825 0078 90       		nop
 826 0079 C9       		leave
 827              		.cfi_def_cfa 7, 8
 828 007a C3       		ret
 829              		.cfi_endproc
 830              	.LFE900:
 832              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 833              		.align 2
 834              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 836              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector
 837              	.LFB907:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 838              		.loc 5 79 0
 839              		.cfi_startproc
 840 0000 55       		pushq	%rbp
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 6, -16
 843 0001 4889E5   		movq	%rsp, %rbp
 844              		.cfi_def_cfa_register 6
 845 0004 4883EC10 		subq	$16, %rsp
 846 0008 48897DF8 		movq	%rdi, -8(%rbp)
 847              	.LBB8:
  79:/usr/include/c++/5/bits/stl_vector.h ****       : public _Tp_alloc_type
 848              		.loc 5 79 0
 849 000c 488B45F8 		movq	-8(%rbp), %rax
 850 0010 4889C7   		movq	%rax, %rdi
 851 0013 E8000000 		call	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev@PLT
 851      00
 852              	.LBE8:
 853 0018 90       		nop
 854 0019 C9       		leave
 855              		.cfi_def_cfa 7, 8
 856 001a C3       		ret
 857              		.cfi_endproc
 858              	.LFE907:
 860              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 861              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 862              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 863              		.align 2
 864              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2
 866              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 867              	.LFB909:
 159:/usr/include/c++/5/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 868              		.loc 5 159 0
 869              		.cfi_startproc
 870              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 871              		.cfi_lsda 0x1b,.LLSDA909
 872 0000 55       		pushq	%rbp
 873              		.cfi_def_cfa_offset 16
 874              		.cfi_offset 6, -16
 875 0001 4889E5   		movq	%rsp, %rbp
 876              		.cfi_def_cfa_register 6
 877 0004 53       		pushq	%rbx
 878 0005 4883EC18 		subq	$24, %rsp
 879              		.cfi_offset 3, -24
 880 0009 48897DE8 		movq	%rdi, -24(%rbp)
 881              	.LBB9:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 882              		.loc 5 161 0
 883 000d 488B45E8 		movq	-24(%rbp), %rax
 884 0011 488B4010 		movq	16(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 885              		.loc 5 160 0
 886 0015 4889C2   		movq	%rax, %rdx
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 887              		.loc 5 161 0
 888 0018 488B45E8 		movq	-24(%rbp), %rax
 889 001c 488B00   		movq	(%rax), %rax
 160:/usr/include/c++/5/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 890              		.loc 5 160 0
 891 001f 4829C2   		subq	%rax, %rdx
 892 0022 4889D0   		movq	%rdx, %rax
 893 0025 48C1F803 		sarq	$3, %rax
 894 0029 4889C2   		movq	%rax, %rdx
 895 002c 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 895      CCCCCCCC 
 895      CCCC
 896 0036 480FAFC2 		imulq	%rdx, %rax
 897 003a 4889C2   		movq	%rax, %rdx
 898 003d 488B45E8 		movq	-24(%rbp), %rax
 899 0041 488B08   		movq	(%rax), %rcx
 900 0044 488B45E8 		movq	-24(%rbp), %rax
 901 0048 4889CE   		movq	%rcx, %rsi
 902 004b 4889C7   		movq	%rax, %rdi
 903              	.LEHB20:
 904 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 904      00
 905              	.LEHE20:
 161:/usr/include/c++/5/bits/stl_vector.h **** 
 906              		.loc 5 161 0
 907 0053 488B45E8 		movq	-24(%rbp), %rax
 908 0057 4889C7   		movq	%rax, %rdi
 909 005a E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 909      00
 910              	.LBE9:
 911 005f EB1A     		jmp	.L50
 912              	.L49:
 913 0061 4889C3   		movq	%rax, %rbx
 914              	.LBB10:
 915 0064 488B45E8 		movq	-24(%rbp), %rax
 916 0068 4889C7   		movq	%rax, %rdi
 917 006b E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 917      00
 918 0070 4889D8   		movq	%rbx, %rax
 919 0073 4889C7   		movq	%rax, %rdi
 920              	.LEHB21:
 921 0076 E8000000 		call	_Unwind_Resume@PLT
 921      00
 922              	.LEHE21:
 923              	.L50:
 924              	.LBE10:
 925 007b 4883C418 		addq	$24, %rsp
 926 007f 5B       		popq	%rbx
 927 0080 5D       		popq	%rbp
 928              		.cfi_def_cfa 7, 8
 929 0081 C3       		ret
 930              		.cfi_endproc
 931              	.LFE909:
 932              		.section	.gcc_except_table
 933              	.LLSDA909:
 934 0055 FF       		.byte	0xff
 935 0056 FF       		.byte	0xff
 936 0057 01       		.byte	0x1
 937 0058 08       		.uleb128 .LLSDACSE909-.LLSDACSB909
 938              	.LLSDACSB909:
 939 0059 4E       		.uleb128 .LEHB20-.LFB909
 940 005a 05       		.uleb128 .LEHE20-.LEHB20
 941 005b 61       		.uleb128 .L49-.LFB909
 942 005c 00       		.uleb128 0
 943 005d 76       		.uleb128 .LEHB21-.LFB909
 944 005e 05       		.uleb128 .LEHE21-.LEHB21
 945 005f 00       		.uleb128 0
 946 0060 00       		.uleb128 0
 947              	.LLSDACSE909:
 948              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 950              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1
 951              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1E
 952              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 953              		.align 2
 954              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 956              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_
 957              	.LFB911:
 113:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 958              		.loc 5 113 0
 959              		.cfi_startproc
 960 0000 55       		pushq	%rbp
 961              		.cfi_def_cfa_offset 16
 962              		.cfi_offset 6, -16
 963 0001 4889E5   		movq	%rsp, %rbp
 964              		.cfi_def_cfa_register 6
 965 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/bits/stl_vector.h **** 
 966              		.loc 5 114 0
 967 0008 488B45F8 		movq	-8(%rbp), %rax
 968 000c 5D       		popq	%rbp
 969              		.cfi_def_cfa 7, 8
 970 000d C3       		ret
 971              		.cfi_endproc
 972              	.LFE911:
 974              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT
 975              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT
 977              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:
 978              	.LFB912:
 979              		.file 6 "/usr/include/c++/5/bits/stl_construct.h"
   1:/usr/include/c++/5/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_construct.h **** 
   3:/usr/include/c++/5/bits/stl_construct.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_construct.h **** //
   5:/usr/include/c++/5/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_construct.h **** 
  11:/usr/include/c++/5/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_construct.h **** 
  16:/usr/include/c++/5/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_construct.h **** 
  20:/usr/include/c++/5/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_construct.h **** 
  25:/usr/include/c++/5/bits/stl_construct.h **** /*
  26:/usr/include/c++/5/bits/stl_construct.h ****  *
  27:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_construct.h ****  *
  30:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_construct.h ****  *
  38:/usr/include/c++/5/bits/stl_construct.h ****  *
  39:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_construct.h ****  *
  42:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_construct.h ****  */
  50:/usr/include/c++/5/bits/stl_construct.h **** 
  51:/usr/include/c++/5/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/5/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/5/bits/stl_construct.h ****  */
  55:/usr/include/c++/5/bits/stl_construct.h **** 
  56:/usr/include/c++/5/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/5/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/5/bits/stl_construct.h **** 
  59:/usr/include/c++/5/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/5/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/5/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/5/bits/stl_construct.h **** 
  63:/usr/include/c++/5/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/5/bits/stl_construct.h **** {
  65:/usr/include/c++/5/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/5/bits/stl_construct.h **** 
  67:/usr/include/c++/5/bits/stl_construct.h ****   /**
  68:/usr/include/c++/5/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/5/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/5/bits/stl_construct.h ****    */
  71:/usr/include/c++/5/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/5/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/5/bits/stl_construct.h **** #else
  77:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/5/bits/stl_construct.h ****     {
  81:/usr/include/c++/5/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/5/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/5/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/5/bits/stl_construct.h ****     }
  85:/usr/include/c++/5/bits/stl_construct.h **** #endif
  86:/usr/include/c++/5/bits/stl_construct.h **** 
  87:/usr/include/c++/5/bits/stl_construct.h ****   /**
  88:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/5/bits/stl_construct.h ****    */
  90:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/5/bits/stl_construct.h **** 
  95:/usr/include/c++/5/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/5/bits/stl_construct.h ****     {
  98:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/5/bits/stl_construct.h ****         static void
 100:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/5/bits/stl_construct.h **** 	{
 102:/usr/include/c++/5/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/5/bits/stl_construct.h **** 	}
 105:/usr/include/c++/5/bits/stl_construct.h ****     };
 106:/usr/include/c++/5/bits/stl_construct.h **** 
 107:/usr/include/c++/5/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/5/bits/stl_construct.h ****     {
 110:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/5/bits/stl_construct.h ****         static void
 112:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/5/bits/stl_construct.h ****     };
 114:/usr/include/c++/5/bits/stl_construct.h **** 
 115:/usr/include/c++/5/bits/stl_construct.h ****   /**
 116:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/5/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/5/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/5/bits/stl_construct.h ****    */
 120:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/5/bits/stl_construct.h ****     {
 124:/usr/include/c++/5/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/5/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/5/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/5/bits/stl_construct.h ****     }
 129:/usr/include/c++/5/bits/stl_construct.h **** 
 130:/usr/include/c++/5/bits/stl_construct.h ****   /**
 131:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/5/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/5/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/5/bits/stl_construct.h ****    */
 135:/usr/include/c++/5/bits/stl_construct.h **** 
 136:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/5/bits/stl_construct.h ****     void
 138:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/5/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/5/bits/stl_construct.h ****     {
 141:/usr/include/c++/5/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/5/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/5/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/5/bits/stl_construct.h ****     }
 145:/usr/include/c++/5/bits/stl_construct.h **** 
 146:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 980              		.loc 6 148 0
 981              		.cfi_startproc
 982 0000 55       		pushq	%rbp
 983              		.cfi_def_cfa_offset 16
 984              		.cfi_offset 6, -16
 985 0001 4889E5   		movq	%rsp, %rbp
 986              		.cfi_def_cfa_register 6
 987 0004 4883EC20 		subq	$32, %rsp
 988 0008 48897DF8 		movq	%rdi, -8(%rbp)
 989 000c 488975F0 		movq	%rsi, -16(%rbp)
 990 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/5/bits/stl_construct.h ****     {
 151:/usr/include/c++/5/bits/stl_construct.h ****       _Destroy(__first, __last);
 991              		.loc 6 151 0
 992 0014 488B55F0 		movq	-16(%rbp), %rdx
 993 0018 488B45F8 		movq	-8(%rbp), %rax
 994 001c 4889D6   		movq	%rdx, %rsi
 995 001f 4889C7   		movq	%rax, %rdi
 996 0022 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_@PLT
 996      00
 152:/usr/include/c++/5/bits/stl_construct.h ****     }
 997              		.loc 6 152 0
 998 0027 90       		nop
 999 0028 C9       		leave
 1000              		.cfi_def_cfa 7, 8
 1001 0029 C3       		ret
 1002              		.cfi_endproc
 1003              	.LFE912:
 1005              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE9constructIS2_EEv
 1006              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE9constructIS2_EEvRS3_PS2_R
 1008              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE9constructIS2_EEvRS3_PS2_RKT_:
 1009              	.LFB913:
 1010              		.file 7 "/usr/include/c++/5/ext/alloc_traits.h"
   1:/usr/include/c++/5/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/5/ext/alloc_traits.h **** 
   3:/usr/include/c++/5/ext/alloc_traits.h **** // Copyright (C) 2011-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/alloc_traits.h **** //
   5:/usr/include/c++/5/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/5/ext/alloc_traits.h **** 
  11:/usr/include/c++/5/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/alloc_traits.h **** 
  16:/usr/include/c++/5/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/alloc_traits.h **** 
  20:/usr/include/c++/5/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/alloc_traits.h **** 
  25:/usr/include/c++/5/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/5/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/alloc_traits.h ****  */
  28:/usr/include/c++/5/ext/alloc_traits.h **** 
  29:/usr/include/c++/5/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/5/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/5/ext/alloc_traits.h **** 
  32:/usr/include/c++/5/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/5/ext/alloc_traits.h **** 
  34:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/5/ext/alloc_traits.h **** #else
  38:/usr/include/c++/5/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/5/ext/alloc_traits.h **** 
  41:/usr/include/c++/5/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/5/ext/alloc_traits.h **** {
  43:/usr/include/c++/5/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/5/ext/alloc_traits.h **** 
  45:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Alloc>
  47:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal : std::false_type { };
  48:/usr/include/c++/5/ext/alloc_traits.h **** 
  49:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  50:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<std::allocator<_Tp>>
  51:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  52:/usr/include/c++/5/ext/alloc_traits.h **** 
  53:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename, typename> struct array_allocator;
  54:/usr/include/c++/5/ext/alloc_traits.h **** 
  55:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp, typename _Array>
  56:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<array_allocator<_Tp, _Array>>
  57:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  58:/usr/include/c++/5/ext/alloc_traits.h **** 
  59:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct bitmap_allocator;
  60:/usr/include/c++/5/ext/alloc_traits.h **** 
  61:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  62:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<bitmap_allocator<_Tp>>
  63:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  64:/usr/include/c++/5/ext/alloc_traits.h **** 
  65:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct malloc_allocator;
  66:/usr/include/c++/5/ext/alloc_traits.h **** 
  67:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  68:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<malloc_allocator<_Tp>>
  69:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  70:/usr/include/c++/5/ext/alloc_traits.h **** 
  71:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct mt_allocator;
  72:/usr/include/c++/5/ext/alloc_traits.h **** 
  73:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  74:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<mt_allocator<_Tp>>
  75:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  76:/usr/include/c++/5/ext/alloc_traits.h **** 
  77:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct new_allocator;
  78:/usr/include/c++/5/ext/alloc_traits.h **** 
  79:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  80:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<new_allocator<_Tp>>
  81:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  82:/usr/include/c++/5/ext/alloc_traits.h **** 
  83:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename> struct pool_allocator;
  84:/usr/include/c++/5/ext/alloc_traits.h **** 
  85:/usr/include/c++/5/ext/alloc_traits.h ****   template<typename _Tp>
  86:/usr/include/c++/5/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<pool_allocator<_Tp>>
  87:/usr/include/c++/5/ext/alloc_traits.h ****     : std::true_type { };
  88:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  89:/usr/include/c++/5/ext/alloc_traits.h **** 
  90:/usr/include/c++/5/ext/alloc_traits.h **** /**
  91:/usr/include/c++/5/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++0x allocators.
  92:/usr/include/c++/5/ext/alloc_traits.h ****  * @ingroup allocators
  93:/usr/include/c++/5/ext/alloc_traits.h **** */
  94:/usr/include/c++/5/ext/alloc_traits.h **** template<typename _Alloc>
  95:/usr/include/c++/5/ext/alloc_traits.h ****   struct __alloc_traits
  96:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/5/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  98:/usr/include/c++/5/ext/alloc_traits.h **** #endif
  99:/usr/include/c++/5/ext/alloc_traits.h ****   {
 100:/usr/include/c++/5/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
 101:/usr/include/c++/5/ext/alloc_traits.h **** #if __cplusplus >= 201103L
 102:/usr/include/c++/5/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
 103:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
 104:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
 105:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
 106:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
 107:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
 108:/usr/include/c++/5/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
 109:/usr/include/c++/5/ext/alloc_traits.h ****     typedef value_type&                             reference;
 110:/usr/include/c++/5/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
 111:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::allocate;
 112:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::deallocate;
 113:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::construct;
 114:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::destroy;
 115:/usr/include/c++/5/ext/alloc_traits.h ****     using _Base_type::max_size;
 116:/usr/include/c++/5/ext/alloc_traits.h **** 
 117:/usr/include/c++/5/ext/alloc_traits.h ****   private:
 118:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr>
 119:/usr/include/c++/5/ext/alloc_traits.h ****       using __is_custom_pointer
 120:/usr/include/c++/5/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
 121:/usr/include/c++/5/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
 122:/usr/include/c++/5/ext/alloc_traits.h **** 
 123:/usr/include/c++/5/ext/alloc_traits.h ****   public:
 124:/usr/include/c++/5/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
 125:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
 126:/usr/include/c++/5/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 127:/usr/include/c++/5/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
 128:/usr/include/c++/5/ext/alloc_traits.h ****       {
 129:/usr/include/c++/5/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
 130:/usr/include/c++/5/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
 131:/usr/include/c++/5/ext/alloc_traits.h ****       }
 132:/usr/include/c++/5/ext/alloc_traits.h **** 
 133:/usr/include/c++/5/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
 134:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Ptr>
 135:/usr/include/c++/5/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 136:/usr/include/c++/5/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
 137:/usr/include/c++/5/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
 138:/usr/include/c++/5/ext/alloc_traits.h **** 
 139:/usr/include/c++/5/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 140:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 141:/usr/include/c++/5/ext/alloc_traits.h **** 
 142:/usr/include/c++/5/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
 143:/usr/include/c++/5/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 144:/usr/include/c++/5/ext/alloc_traits.h **** 
 145:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 146:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 147:/usr/include/c++/5/ext/alloc_traits.h **** 
 148:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 149:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 150:/usr/include/c++/5/ext/alloc_traits.h **** 
 151:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 152:/usr/include/c++/5/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 153:/usr/include/c++/5/ext/alloc_traits.h **** 
 154:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 155:/usr/include/c++/5/ext/alloc_traits.h ****     { return __allocator_always_compares_equal<_Alloc>::value; }
 156:/usr/include/c++/5/ext/alloc_traits.h **** 
 157:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 158:/usr/include/c++/5/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 159:/usr/include/c++/5/ext/alloc_traits.h **** 
 160:/usr/include/c++/5/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_swap()
 161:/usr/include/c++/5/ext/alloc_traits.h ****     {
 162:/usr/include/c++/5/ext/alloc_traits.h ****       using std::swap;
 163:/usr/include/c++/5/ext/alloc_traits.h ****       return !_S_propagate_on_swap()
 164:/usr/include/c++/5/ext/alloc_traits.h ****        	|| noexcept(swap(std::declval<_Alloc&>(), std::declval<_Alloc&>()));
 165:/usr/include/c++/5/ext/alloc_traits.h ****     }
 166:/usr/include/c++/5/ext/alloc_traits.h **** 
 167:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Tp>
 168:/usr/include/c++/5/ext/alloc_traits.h ****       struct rebind
 169:/usr/include/c++/5/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 170:/usr/include/c++/5/ext/alloc_traits.h **** #else
 171:/usr/include/c++/5/ext/alloc_traits.h **** 
 172:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 173:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 174:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 175:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 176:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 177:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 178:/usr/include/c++/5/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 179:/usr/include/c++/5/ext/alloc_traits.h **** 
 180:/usr/include/c++/5/ext/alloc_traits.h ****     static pointer
 181:/usr/include/c++/5/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 182:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 183:/usr/include/c++/5/ext/alloc_traits.h **** 
 184:/usr/include/c++/5/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 185:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 186:/usr/include/c++/5/ext/alloc_traits.h **** 
 187:/usr/include/c++/5/ext/alloc_traits.h ****     template<typename _Tp>
 188:/usr/include/c++/5/ext/alloc_traits.h ****       static void construct(_Alloc& __a, pointer __p, const _Tp& __arg)
 1011              		.loc 7 188 0
 1012              		.cfi_startproc
 1013 0000 55       		pushq	%rbp
 1014              		.cfi_def_cfa_offset 16
 1015              		.cfi_offset 6, -16
 1016 0001 4889E5   		movq	%rsp, %rbp
 1017              		.cfi_def_cfa_register 6
 1018 0004 4883EC20 		subq	$32, %rsp
 1019 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1020 000c 488975F0 		movq	%rsi, -16(%rbp)
 1021 0010 488955E8 		movq	%rdx, -24(%rbp)
 189:/usr/include/c++/5/ext/alloc_traits.h ****       { __a.construct(__p, __arg); }
 1022              		.loc 7 189 0
 1023 0014 488B55E8 		movq	-24(%rbp), %rdx
 1024 0018 488B4DF0 		movq	-16(%rbp), %rcx
 1025 001c 488B45F8 		movq	-8(%rbp), %rax
 1026 0020 4889CE   		movq	%rcx, %rsi
 1027 0023 4889C7   		movq	%rax, %rdi
 1028 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE9constructEPS2_RKS2_@PLT
 1028      00
 1029 002b 90       		nop
 1030 002c C9       		leave
 1031              		.cfi_def_cfa 7, 8
 1032 002d C3       		ret
 1033              		.cfi_endproc
 1034              	.LFE913:
 1036              		.section	.text._ZN8UnitTest18DeferredTestResultC2ERKS0_,"axG",@progbits,_ZN8UnitTest18DeferredTest
 1037              		.align 2
 1038              		.weak	_ZN8UnitTest18DeferredTestResultC2ERKS0_
 1040              	_ZN8UnitTest18DeferredTestResultC2ERKS0_:
 1041              	.LFB916:
 1042              		.loc 2 10 0
 1043              		.cfi_startproc
 1044              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1045              		.cfi_lsda 0x1b,.LLSDA916
 1046 0000 55       		pushq	%rbp
 1047              		.cfi_def_cfa_offset 16
 1048              		.cfi_offset 6, -16
 1049 0001 4889E5   		movq	%rsp, %rbp
 1050              		.cfi_def_cfa_register 6
 1051 0004 53       		pushq	%rbx
 1052 0005 4883EC18 		subq	$24, %rsp
 1053              		.cfi_offset 3, -24
 1054 0009 48897DE8 		movq	%rdi, -24(%rbp)
 1055 000d 488975E0 		movq	%rsi, -32(%rbp)
 1056              	.LBB11:
 1057              		.loc 2 10 0
 1058 0011 488B55E0 		movq	-32(%rbp), %rdx
 1059 0015 488B45E8 		movq	-24(%rbp), %rax
 1060 0019 4889D6   		movq	%rdx, %rsi
 1061 001c 4889C7   		movq	%rax, %rdi
 1062              	.LEHB22:
 1063 001f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@PLT
 1063      00
 1064              	.LEHE22:
 1065 0024 488B45E0 		movq	-32(%rbp), %rax
 1066 0028 488D5020 		leaq	32(%rax), %rdx
 1067 002c 488B45E8 		movq	-24(%rbp), %rax
 1068 0030 4883C020 		addq	$32, %rax
 1069 0034 4889D6   		movq	%rdx, %rsi
 1070 0037 4889C7   		movq	%rax, %rdi
 1071              	.LEHB23:
 1072 003a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@PLT
 1072      00
 1073              	.LEHE23:
 1074              		.loc 2 10 0 is_stmt 0 discriminator 2
 1075 003f 488B45E0 		movq	-32(%rbp), %rax
 1076 0043 488D5040 		leaq	64(%rax), %rdx
 1077 0047 488B45E8 		movq	-24(%rbp), %rax
 1078 004b 4883C040 		addq	$64, %rax
 1079 004f 4889D6   		movq	%rdx, %rsi
 1080 0052 4889C7   		movq	%rax, %rdi
 1081              	.LEHB24:
 1082 0055 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@PLT
 1082      00
 1083              	.LEHE24:
 1084              		.loc 2 10 0 discriminator 4
 1085 005a 488B45E0 		movq	-32(%rbp), %rax
 1086 005e 488D5060 		leaq	96(%rax), %rdx
 1087 0062 488B45E8 		movq	-24(%rbp), %rax
 1088 0066 4883C060 		addq	$96, %rax
 1089 006a 4889D6   		movq	%rdx, %rsi
 1090 006d 4889C7   		movq	%rax, %rdi
 1091              	.LEHB25:
 1092 0070 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC1ERKS9_@P
 1092      00
 1093              	.LEHE25:
 1094              		.loc 2 10 0 discriminator 6
 1095 0075 488B45E0 		movq	-32(%rbp), %rax
 1096 0079 F30F1040 		movss	120(%rax), %xmm0
 1096      78
 1097 007e 488B45E8 		movq	-24(%rbp), %rax
 1098 0082 F30F1140 		movss	%xmm0, 120(%rax)
 1098      78
 1099 0087 488B45E0 		movq	-32(%rbp), %rax
 1100 008b 0FB6507C 		movzbl	124(%rax), %edx
 1101 008f 488B45E8 		movq	-24(%rbp), %rax
 1102 0093 88507C   		movb	%dl, 124(%rax)
 1103              	.LBE11:
 1104 0096 EB44     		jmp	.L62
 1105              	.L61:
 1106 0098 4889C3   		movq	%rax, %rbx
 1107              	.LBB12:
 1108              		.loc 2 10 0
 1109 009b 488B45E8 		movq	-24(%rbp), %rax
 1110 009f 4883C040 		addq	$64, %rax
 1111 00a3 4889C7   		movq	%rax, %rdi
 1112 00a6 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1112      00
 1113 00ab EB03     		jmp	.L57
 1114              	.L60:
 1115 00ad 4889C3   		movq	%rax, %rbx
 1116              	.L57:
 1117              		.loc 2 10 0 discriminator 3
 1118 00b0 488B45E8 		movq	-24(%rbp), %rax
 1119 00b4 4883C020 		addq	$32, %rax
 1120 00b8 4889C7   		movq	%rax, %rdi
 1121 00bb E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1121      00
 1122 00c0 EB03     		jmp	.L58
 1123              	.L59:
 1124 00c2 4889C3   		movq	%rax, %rbx
 1125              	.L58:
 1126              		.loc 2 10 0 discriminator 1
 1127 00c5 488B45E8 		movq	-24(%rbp), %rax
 1128 00c9 4889C7   		movq	%rax, %rdi
 1129 00cc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1129      00
 1130 00d1 4889D8   		movq	%rbx, %rax
 1131 00d4 4889C7   		movq	%rax, %rdi
 1132              	.LEHB26:
 1133 00d7 E8000000 		call	_Unwind_Resume@PLT
 1133      00
 1134              	.LEHE26:
 1135              	.L62:
 1136              	.LBE12:
 1137              		.loc 2 10 0
 1138 00dc 4883C418 		addq	$24, %rsp
 1139 00e0 5B       		popq	%rbx
 1140 00e1 5D       		popq	%rbp
 1141              		.cfi_def_cfa 7, 8
 1142 00e2 C3       		ret
 1143              		.cfi_endproc
 1144              	.LFE916:
 1145              		.section	.gcc_except_table
 1146              	.LLSDA916:
 1147 0061 FF       		.byte	0xff
 1148 0062 FF       		.byte	0xff
 1149 0063 01       		.byte	0x1
 1150 0064 18       		.uleb128 .LLSDACSE916-.LLSDACSB916
 1151              	.LLSDACSB916:
 1152 0065 1F       		.uleb128 .LEHB22-.LFB916
 1153 0066 05       		.uleb128 .LEHE22-.LEHB22
 1154 0067 00       		.uleb128 0
 1155 0068 00       		.uleb128 0
 1156 0069 3A       		.uleb128 .LEHB23-.LFB916
 1157 006a 05       		.uleb128 .LEHE23-.LEHB23
 1158 006b C201     		.uleb128 .L59-.LFB916
 1159 006d 00       		.uleb128 0
 1160 006e 55       		.uleb128 .LEHB24-.LFB916
 1161 006f 05       		.uleb128 .LEHE24-.LEHB24
 1162 0070 AD01     		.uleb128 .L60-.LFB916
 1163 0072 00       		.uleb128 0
 1164 0073 70       		.uleb128 .LEHB25-.LFB916
 1165 0074 05       		.uleb128 .LEHE25-.LEHB25
 1166 0075 9801     		.uleb128 .L61-.LFB916
 1167 0077 00       		.uleb128 0
 1168 0078 D701     		.uleb128 .LEHB26-.LFB916
 1169 007a 05       		.uleb128 .LEHE26-.LEHB26
 1170 007b 00       		.uleb128 0
 1171 007c 00       		.uleb128 0
 1172              	.LLSDACSE916:
 1173              		.section	.text._ZN8UnitTest18DeferredTestResultC2ERKS0_,"axG",@progbits,_ZN8UnitTest18DeferredTest
 1175              		.weak	_ZN8UnitTest18DeferredTestResultC1ERKS0_
 1176              		.set	_ZN8UnitTest18DeferredTestResultC1ERKS0_,_ZN8UnitTest18DeferredTestResultC2ERKS0_
 1177              		.section	.text._ZN8UnitTest18DeferredTestResultaSERKS0_,"axG",@progbits,_ZN8UnitTest18DeferredTest
 1178              		.align 2
 1179              		.weak	_ZN8UnitTest18DeferredTestResultaSERKS0_
 1181              	_ZN8UnitTest18DeferredTestResultaSERKS0_:
 1182              	.LFB918:
 1183              		.loc 2 10 0 is_stmt 1
 1184              		.cfi_startproc
 1185 0000 55       		pushq	%rbp
 1186              		.cfi_def_cfa_offset 16
 1187              		.cfi_offset 6, -16
 1188 0001 4889E5   		movq	%rsp, %rbp
 1189              		.cfi_def_cfa_register 6
 1190 0004 4883EC10 		subq	$16, %rsp
 1191 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1192 000c 488975F0 		movq	%rsi, -16(%rbp)
 1193              		.loc 2 10 0
 1194 0010 488B55F0 		movq	-16(%rbp), %rdx
 1195 0014 488B45F8 		movq	-8(%rbp), %rax
 1196 0018 4889D6   		movq	%rdx, %rsi
 1197 001b 4889C7   		movq	%rax, %rdi
 1198 001e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@PLT
 1198      00
 1199 0023 488B45F0 		movq	-16(%rbp), %rax
 1200 0027 488D5020 		leaq	32(%rax), %rdx
 1201 002b 488B45F8 		movq	-8(%rbp), %rax
 1202 002f 4883C020 		addq	$32, %rax
 1203 0033 4889D6   		movq	%rdx, %rsi
 1204 0036 4889C7   		movq	%rax, %rdi
 1205 0039 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@PLT
 1205      00
 1206 003e 488B45F0 		movq	-16(%rbp), %rax
 1207 0042 488D5040 		leaq	64(%rax), %rdx
 1208 0046 488B45F8 		movq	-8(%rbp), %rax
 1209 004a 4883C040 		addq	$64, %rax
 1210 004e 4889D6   		movq	%rdx, %rsi
 1211 0051 4889C7   		movq	%rax, %rdi
 1212 0054 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@PLT
 1212      00
 1213 0059 488B45F0 		movq	-16(%rbp), %rax
 1214 005d 488D5060 		leaq	96(%rax), %rdx
 1215 0061 488B45F8 		movq	-8(%rbp), %rax
 1216 0065 4883C060 		addq	$96, %rax
 1217 0069 4889D6   		movq	%rdx, %rsi
 1218 006c 4889C7   		movq	%rax, %rdi
 1219 006f E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_@P
 1219      00
 1220 0074 488B45F0 		movq	-16(%rbp), %rax
 1221 0078 F30F1040 		movss	120(%rax), %xmm0
 1221      78
 1222 007d 488B45F8 		movq	-8(%rbp), %rax
 1223 0081 F30F1140 		movss	%xmm0, 120(%rax)
 1223      78
 1224 0086 488B45F0 		movq	-16(%rbp), %rax
 1225 008a 0FB6507C 		movzbl	124(%rax), %edx
 1226 008e 488B45F8 		movq	-8(%rbp), %rax
 1227 0092 88507C   		movb	%dl, 124(%rax)
 1228 0095 488B45F8 		movq	-8(%rbp), %rax
 1229 0099 C9       		leave
 1230              		.cfi_def_cfa 7, 8
 1231 009a C3       		ret
 1232              		.cfi_endproc
 1233              	.LFE918:
 1235              		.section	.rodata
 1236              	.LC0:
 1237 0000 76656374 		.string	"vector::_M_insert_aux"
 1237      6F723A3A 
 1237      5F4D5F69 
 1237      6E736572 
 1237      745F6175 
 1238              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__
 1239              		.align 2
 1240              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_it
 1242              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorI
 1243              	.LFB914:
 1244              		.file 8 "/usr/include/c++/5/bits/vector.tcc"
   1:/usr/include/c++/5/bits/vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:/usr/include/c++/5/bits/vector.tcc **** 
   3:/usr/include/c++/5/bits/vector.tcc **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/vector.tcc **** //
   5:/usr/include/c++/5/bits/vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/vector.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/vector.tcc **** // any later version.
  10:/usr/include/c++/5/bits/vector.tcc **** 
  11:/usr/include/c++/5/bits/vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/vector.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/vector.tcc **** 
  16:/usr/include/c++/5/bits/vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/vector.tcc **** 
  20:/usr/include/c++/5/bits/vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/vector.tcc **** 
  25:/usr/include/c++/5/bits/vector.tcc **** /*
  26:/usr/include/c++/5/bits/vector.tcc ****  *
  27:/usr/include/c++/5/bits/vector.tcc ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/vector.tcc ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/vector.tcc ****  *
  30:/usr/include/c++/5/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/vector.tcc ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/vector.tcc ****  *
  38:/usr/include/c++/5/bits/vector.tcc ****  *
  39:/usr/include/c++/5/bits/vector.tcc ****  * Copyright (c) 1996
  40:/usr/include/c++/5/bits/vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/vector.tcc ****  *
  42:/usr/include/c++/5/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/vector.tcc ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/5/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/vector.tcc ****  */
  50:/usr/include/c++/5/bits/vector.tcc **** 
  51:/usr/include/c++/5/bits/vector.tcc **** /** @file bits/vector.tcc
  52:/usr/include/c++/5/bits/vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/5/bits/vector.tcc ****  */
  55:/usr/include/c++/5/bits/vector.tcc **** 
  56:/usr/include/c++/5/bits/vector.tcc **** #ifndef _VECTOR_TCC
  57:/usr/include/c++/5/bits/vector.tcc **** #define _VECTOR_TCC 1
  58:/usr/include/c++/5/bits/vector.tcc **** 
  59:/usr/include/c++/5/bits/vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/5/bits/vector.tcc **** {
  61:/usr/include/c++/5/bits/vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  62:/usr/include/c++/5/bits/vector.tcc **** 
  63:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
  64:/usr/include/c++/5/bits/vector.tcc ****     void
  65:/usr/include/c++/5/bits/vector.tcc ****     vector<_Tp, _Alloc>::
  66:/usr/include/c++/5/bits/vector.tcc ****     reserve(size_type __n)
  67:/usr/include/c++/5/bits/vector.tcc ****     {
  68:/usr/include/c++/5/bits/vector.tcc ****       if (__n > this->max_size())
  69:/usr/include/c++/5/bits/vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  70:/usr/include/c++/5/bits/vector.tcc ****       if (this->capacity() < __n)
  71:/usr/include/c++/5/bits/vector.tcc **** 	{
  72:/usr/include/c++/5/bits/vector.tcc **** 	  const size_type __old_size = size();
  73:/usr/include/c++/5/bits/vector.tcc **** 	  pointer __tmp = _M_allocate_and_copy(__n,
  74:/usr/include/c++/5/bits/vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  75:/usr/include/c++/5/bits/vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  76:/usr/include/c++/5/bits/vector.tcc **** 	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  77:/usr/include/c++/5/bits/vector.tcc **** 			_M_get_Tp_allocator());
  78:/usr/include/c++/5/bits/vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  79:/usr/include/c++/5/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
  80:/usr/include/c++/5/bits/vector.tcc **** 			- this->_M_impl._M_start);
  81:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  82:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  83:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  84:/usr/include/c++/5/bits/vector.tcc **** 	}
  85:/usr/include/c++/5/bits/vector.tcc ****     }
  86:/usr/include/c++/5/bits/vector.tcc **** 
  87:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus >= 201103L
  88:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
  89:/usr/include/c++/5/bits/vector.tcc ****     template<typename... _Args>
  90:/usr/include/c++/5/bits/vector.tcc ****       void
  91:/usr/include/c++/5/bits/vector.tcc ****       vector<_Tp, _Alloc>::
  92:/usr/include/c++/5/bits/vector.tcc ****       emplace_back(_Args&&... __args)
  93:/usr/include/c++/5/bits/vector.tcc ****       {
  94:/usr/include/c++/5/bits/vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
  95:/usr/include/c++/5/bits/vector.tcc **** 	  {
  96:/usr/include/c++/5/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
  97:/usr/include/c++/5/bits/vector.tcc **** 				     std::forward<_Args>(__args)...);
  98:/usr/include/c++/5/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
  99:/usr/include/c++/5/bits/vector.tcc **** 	  }
 100:/usr/include/c++/5/bits/vector.tcc **** 	else
 101:/usr/include/c++/5/bits/vector.tcc **** 	  _M_emplace_back_aux(std::forward<_Args>(__args)...);
 102:/usr/include/c++/5/bits/vector.tcc ****       }
 103:/usr/include/c++/5/bits/vector.tcc **** #endif
 104:/usr/include/c++/5/bits/vector.tcc **** 
 105:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 106:/usr/include/c++/5/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 107:/usr/include/c++/5/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 108:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus >= 201103L
 109:/usr/include/c++/5/bits/vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 110:/usr/include/c++/5/bits/vector.tcc **** #else
 111:/usr/include/c++/5/bits/vector.tcc ****     insert(iterator __position, const value_type& __x)
 112:/usr/include/c++/5/bits/vector.tcc **** #endif
 113:/usr/include/c++/5/bits/vector.tcc ****     {
 114:/usr/include/c++/5/bits/vector.tcc ****       const size_type __n = __position - begin();
 115:/usr/include/c++/5/bits/vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
 116:/usr/include/c++/5/bits/vector.tcc **** 	  && __position == end())
 117:/usr/include/c++/5/bits/vector.tcc **** 	{
 118:/usr/include/c++/5/bits/vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish, __x);
 119:/usr/include/c++/5/bits/vector.tcc **** 	  ++this->_M_impl._M_finish;
 120:/usr/include/c++/5/bits/vector.tcc **** 	}
 121:/usr/include/c++/5/bits/vector.tcc ****       else
 122:/usr/include/c++/5/bits/vector.tcc **** 	{
 123:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus >= 201103L
 124:/usr/include/c++/5/bits/vector.tcc **** 	  const auto __pos = begin() + (__position - cbegin());
 125:/usr/include/c++/5/bits/vector.tcc **** 	  if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 126:/usr/include/c++/5/bits/vector.tcc **** 	    {
 127:/usr/include/c++/5/bits/vector.tcc **** 	      _Tp __x_copy = __x;
 128:/usr/include/c++/5/bits/vector.tcc **** 	      _M_insert_aux(__pos, std::move(__x_copy));
 129:/usr/include/c++/5/bits/vector.tcc **** 	    }
 130:/usr/include/c++/5/bits/vector.tcc **** 	  else
 131:/usr/include/c++/5/bits/vector.tcc **** 	    _M_insert_aux(__pos, __x);
 132:/usr/include/c++/5/bits/vector.tcc **** #else
 133:/usr/include/c++/5/bits/vector.tcc **** 	    _M_insert_aux(__position, __x);
 134:/usr/include/c++/5/bits/vector.tcc **** #endif
 135:/usr/include/c++/5/bits/vector.tcc **** 	}
 136:/usr/include/c++/5/bits/vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 137:/usr/include/c++/5/bits/vector.tcc ****     }
 138:/usr/include/c++/5/bits/vector.tcc **** 
 139:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 140:/usr/include/c++/5/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 141:/usr/include/c++/5/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 142:/usr/include/c++/5/bits/vector.tcc ****     _M_erase(iterator __position)
 143:/usr/include/c++/5/bits/vector.tcc ****     {
 144:/usr/include/c++/5/bits/vector.tcc ****       if (__position + 1 != end())
 145:/usr/include/c++/5/bits/vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 146:/usr/include/c++/5/bits/vector.tcc ****       --this->_M_impl._M_finish;
 147:/usr/include/c++/5/bits/vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 148:/usr/include/c++/5/bits/vector.tcc ****       return __position;
 149:/usr/include/c++/5/bits/vector.tcc ****     }
 150:/usr/include/c++/5/bits/vector.tcc **** 
 151:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 152:/usr/include/c++/5/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 153:/usr/include/c++/5/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 154:/usr/include/c++/5/bits/vector.tcc ****     _M_erase(iterator __first, iterator __last)
 155:/usr/include/c++/5/bits/vector.tcc ****     {
 156:/usr/include/c++/5/bits/vector.tcc ****       if (__first != __last)
 157:/usr/include/c++/5/bits/vector.tcc **** 	{
 158:/usr/include/c++/5/bits/vector.tcc **** 	  if (__last != end())
 159:/usr/include/c++/5/bits/vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 160:/usr/include/c++/5/bits/vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 161:/usr/include/c++/5/bits/vector.tcc **** 	}
 162:/usr/include/c++/5/bits/vector.tcc ****       return __first;
 163:/usr/include/c++/5/bits/vector.tcc ****     }
 164:/usr/include/c++/5/bits/vector.tcc **** 
 165:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 166:/usr/include/c++/5/bits/vector.tcc ****     vector<_Tp, _Alloc>&
 167:/usr/include/c++/5/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 168:/usr/include/c++/5/bits/vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 169:/usr/include/c++/5/bits/vector.tcc ****     {
 170:/usr/include/c++/5/bits/vector.tcc ****       if (&__x != this)
 171:/usr/include/c++/5/bits/vector.tcc **** 	{
 172:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus >= 201103L
 173:/usr/include/c++/5/bits/vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 174:/usr/include/c++/5/bits/vector.tcc **** 	    {
 175:/usr/include/c++/5/bits/vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 176:/usr/include/c++/5/bits/vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 177:/usr/include/c++/5/bits/vector.tcc **** 	        {
 178:/usr/include/c++/5/bits/vector.tcc **** 		  // replacement allocator cannot free existing storage
 179:/usr/include/c++/5/bits/vector.tcc **** 		  this->clear();
 180:/usr/include/c++/5/bits/vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 181:/usr/include/c++/5/bits/vector.tcc **** 				this->_M_impl._M_end_of_storage
 182:/usr/include/c++/5/bits/vector.tcc **** 				- this->_M_impl._M_start);
 183:/usr/include/c++/5/bits/vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 184:/usr/include/c++/5/bits/vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 185:/usr/include/c++/5/bits/vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 186:/usr/include/c++/5/bits/vector.tcc **** 		}
 187:/usr/include/c++/5/bits/vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 188:/usr/include/c++/5/bits/vector.tcc **** 				   __x._M_get_Tp_allocator());
 189:/usr/include/c++/5/bits/vector.tcc **** 	    }
 190:/usr/include/c++/5/bits/vector.tcc **** #endif
 191:/usr/include/c++/5/bits/vector.tcc **** 	  const size_type __xlen = __x.size();
 192:/usr/include/c++/5/bits/vector.tcc **** 	  if (__xlen > capacity())
 193:/usr/include/c++/5/bits/vector.tcc **** 	    {
 194:/usr/include/c++/5/bits/vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 195:/usr/include/c++/5/bits/vector.tcc **** 						   __x.end());
 196:/usr/include/c++/5/bits/vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 197:/usr/include/c++/5/bits/vector.tcc **** 			    _M_get_Tp_allocator());
 198:/usr/include/c++/5/bits/vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 199:/usr/include/c++/5/bits/vector.tcc **** 			    this->_M_impl._M_end_of_storage
 200:/usr/include/c++/5/bits/vector.tcc **** 			    - this->_M_impl._M_start);
 201:/usr/include/c++/5/bits/vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 202:/usr/include/c++/5/bits/vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 203:/usr/include/c++/5/bits/vector.tcc **** 	    }
 204:/usr/include/c++/5/bits/vector.tcc **** 	  else if (size() >= __xlen)
 205:/usr/include/c++/5/bits/vector.tcc **** 	    {
 206:/usr/include/c++/5/bits/vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 207:/usr/include/c++/5/bits/vector.tcc **** 			    end(), _M_get_Tp_allocator());
 208:/usr/include/c++/5/bits/vector.tcc **** 	    }
 209:/usr/include/c++/5/bits/vector.tcc **** 	  else
 210:/usr/include/c++/5/bits/vector.tcc **** 	    {
 211:/usr/include/c++/5/bits/vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 212:/usr/include/c++/5/bits/vector.tcc **** 			this->_M_impl._M_start);
 213:/usr/include/c++/5/bits/vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 214:/usr/include/c++/5/bits/vector.tcc **** 					  __x._M_impl._M_finish,
 215:/usr/include/c++/5/bits/vector.tcc **** 					  this->_M_impl._M_finish,
 216:/usr/include/c++/5/bits/vector.tcc **** 					  _M_get_Tp_allocator());
 217:/usr/include/c++/5/bits/vector.tcc **** 	    }
 218:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 219:/usr/include/c++/5/bits/vector.tcc **** 	}
 220:/usr/include/c++/5/bits/vector.tcc ****       return *this;
 221:/usr/include/c++/5/bits/vector.tcc ****     }
 222:/usr/include/c++/5/bits/vector.tcc **** 
 223:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 224:/usr/include/c++/5/bits/vector.tcc ****     void
 225:/usr/include/c++/5/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 226:/usr/include/c++/5/bits/vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 227:/usr/include/c++/5/bits/vector.tcc ****     {
 228:/usr/include/c++/5/bits/vector.tcc ****       if (__n > capacity())
 229:/usr/include/c++/5/bits/vector.tcc **** 	{
 230:/usr/include/c++/5/bits/vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 231:/usr/include/c++/5/bits/vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 232:/usr/include/c++/5/bits/vector.tcc **** 	}
 233:/usr/include/c++/5/bits/vector.tcc ****       else if (__n > size())
 234:/usr/include/c++/5/bits/vector.tcc **** 	{
 235:/usr/include/c++/5/bits/vector.tcc **** 	  std::fill(begin(), end(), __val);
 236:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_finish =
 237:/usr/include/c++/5/bits/vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 238:/usr/include/c++/5/bits/vector.tcc **** 					  __n - size(), __val,
 239:/usr/include/c++/5/bits/vector.tcc **** 					  _M_get_Tp_allocator());
 240:/usr/include/c++/5/bits/vector.tcc **** 	}
 241:/usr/include/c++/5/bits/vector.tcc ****       else
 242:/usr/include/c++/5/bits/vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 243:/usr/include/c++/5/bits/vector.tcc ****     }
 244:/usr/include/c++/5/bits/vector.tcc **** 
 245:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 246:/usr/include/c++/5/bits/vector.tcc ****     template<typename _InputIterator>
 247:/usr/include/c++/5/bits/vector.tcc ****       void
 248:/usr/include/c++/5/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 249:/usr/include/c++/5/bits/vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 250:/usr/include/c++/5/bits/vector.tcc **** 		    std::input_iterator_tag)
 251:/usr/include/c++/5/bits/vector.tcc ****       {
 252:/usr/include/c++/5/bits/vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 253:/usr/include/c++/5/bits/vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 254:/usr/include/c++/5/bits/vector.tcc **** 	     ++__cur, ++__first)
 255:/usr/include/c++/5/bits/vector.tcc **** 	  *__cur = *__first;
 256:/usr/include/c++/5/bits/vector.tcc **** 	if (__first == __last)
 257:/usr/include/c++/5/bits/vector.tcc **** 	  _M_erase_at_end(__cur);
 258:/usr/include/c++/5/bits/vector.tcc **** 	else
 259:/usr/include/c++/5/bits/vector.tcc **** 	  insert(end(), __first, __last);
 260:/usr/include/c++/5/bits/vector.tcc ****       }
 261:/usr/include/c++/5/bits/vector.tcc **** 
 262:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 263:/usr/include/c++/5/bits/vector.tcc ****     template<typename _ForwardIterator>
 264:/usr/include/c++/5/bits/vector.tcc ****       void
 265:/usr/include/c++/5/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 266:/usr/include/c++/5/bits/vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 267:/usr/include/c++/5/bits/vector.tcc **** 		    std::forward_iterator_tag)
 268:/usr/include/c++/5/bits/vector.tcc ****       {
 269:/usr/include/c++/5/bits/vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 270:/usr/include/c++/5/bits/vector.tcc **** 
 271:/usr/include/c++/5/bits/vector.tcc **** 	if (__len > capacity())
 272:/usr/include/c++/5/bits/vector.tcc **** 	  {
 273:/usr/include/c++/5/bits/vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 274:/usr/include/c++/5/bits/vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 275:/usr/include/c++/5/bits/vector.tcc **** 			  _M_get_Tp_allocator());
 276:/usr/include/c++/5/bits/vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 277:/usr/include/c++/5/bits/vector.tcc **** 			  this->_M_impl._M_end_of_storage
 278:/usr/include/c++/5/bits/vector.tcc **** 			  - this->_M_impl._M_start);
 279:/usr/include/c++/5/bits/vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 280:/usr/include/c++/5/bits/vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 281:/usr/include/c++/5/bits/vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 282:/usr/include/c++/5/bits/vector.tcc **** 	  }
 283:/usr/include/c++/5/bits/vector.tcc **** 	else if (size() >= __len)
 284:/usr/include/c++/5/bits/vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 285:/usr/include/c++/5/bits/vector.tcc **** 	else
 286:/usr/include/c++/5/bits/vector.tcc **** 	  {
 287:/usr/include/c++/5/bits/vector.tcc **** 	    _ForwardIterator __mid = __first;
 288:/usr/include/c++/5/bits/vector.tcc **** 	    std::advance(__mid, size());
 289:/usr/include/c++/5/bits/vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 290:/usr/include/c++/5/bits/vector.tcc **** 	    this->_M_impl._M_finish =
 291:/usr/include/c++/5/bits/vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 292:/usr/include/c++/5/bits/vector.tcc **** 					  this->_M_impl._M_finish,
 293:/usr/include/c++/5/bits/vector.tcc **** 					  _M_get_Tp_allocator());
 294:/usr/include/c++/5/bits/vector.tcc **** 	  }
 295:/usr/include/c++/5/bits/vector.tcc ****       }
 296:/usr/include/c++/5/bits/vector.tcc **** 
 297:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus >= 201103L
 298:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 299:/usr/include/c++/5/bits/vector.tcc ****     template<typename... _Args>
 300:/usr/include/c++/5/bits/vector.tcc ****       typename vector<_Tp, _Alloc>::iterator
 301:/usr/include/c++/5/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 302:/usr/include/c++/5/bits/vector.tcc ****       emplace(const_iterator __position, _Args&&... __args)
 303:/usr/include/c++/5/bits/vector.tcc ****       {
 304:/usr/include/c++/5/bits/vector.tcc **** 	const size_type __n = __position - begin();
 305:/usr/include/c++/5/bits/vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
 306:/usr/include/c++/5/bits/vector.tcc **** 	    && __position == end())
 307:/usr/include/c++/5/bits/vector.tcc **** 	  {
 308:/usr/include/c++/5/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 309:/usr/include/c++/5/bits/vector.tcc **** 				     std::forward<_Args>(__args)...);
 310:/usr/include/c++/5/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
 311:/usr/include/c++/5/bits/vector.tcc **** 	  }
 312:/usr/include/c++/5/bits/vector.tcc **** 	else
 313:/usr/include/c++/5/bits/vector.tcc **** 	  _M_insert_aux(begin() + (__position - cbegin()),
 314:/usr/include/c++/5/bits/vector.tcc **** 			std::forward<_Args>(__args)...);
 315:/usr/include/c++/5/bits/vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 316:/usr/include/c++/5/bits/vector.tcc ****       }
 317:/usr/include/c++/5/bits/vector.tcc **** 
 318:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 319:/usr/include/c++/5/bits/vector.tcc ****     template<typename... _Args>
 320:/usr/include/c++/5/bits/vector.tcc ****       void
 321:/usr/include/c++/5/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 322:/usr/include/c++/5/bits/vector.tcc ****       _M_insert_aux(iterator __position, _Args&&... __args)
 323:/usr/include/c++/5/bits/vector.tcc **** #else
 324:/usr/include/c++/5/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 325:/usr/include/c++/5/bits/vector.tcc ****     void
 326:/usr/include/c++/5/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 1245              		.loc 8 326 0
 1246              		.cfi_startproc
 1247              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1248              		.cfi_lsda 0x1b,.LLSDA914
 1249 0000 55       		pushq	%rbp
 1250              		.cfi_def_cfa_offset 16
 1251              		.cfi_offset 6, -16
 1252 0001 4889E5   		movq	%rsp, %rbp
 1253              		.cfi_def_cfa_register 6
 1254 0004 4154     		pushq	%r12
 1255 0006 53       		pushq	%rbx
 1256 0007 4881ECE0 		subq	$224, %rsp
 1256      000000
 1257              		.cfi_offset 12, -24
 1258              		.cfi_offset 3, -32
 1259 000e 4889BD28 		movq	%rdi, -216(%rbp)
 1259      FFFFFF
 1260 0015 4889B520 		movq	%rsi, -224(%rbp)
 1260      FFFFFF
 1261 001c 48899518 		movq	%rdx, -232(%rbp)
 1261      FFFFFF
 1262              		.loc 8 326 0
 1263 0023 64488B04 		movq	%fs:40, %rax
 1263      25280000 
 1263      00
 1264 002c 488945E8 		movq	%rax, -24(%rbp)
 1265 0030 31C0     		xorl	%eax, %eax
 1266              	.LBB13:
 327:/usr/include/c++/5/bits/vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 328:/usr/include/c++/5/bits/vector.tcc **** #endif
 329:/usr/include/c++/5/bits/vector.tcc ****     {
 330:/usr/include/c++/5/bits/vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 1267              		.loc 8 330 0
 1268 0032 488B8528 		movq	-216(%rbp), %rax
 1268      FFFFFF
 1269 0039 488B5008 		movq	8(%rax), %rdx
 1270 003d 488B8528 		movq	-216(%rbp), %rax
 1270      FFFFFF
 1271 0044 488B4010 		movq	16(%rax), %rax
 1272 0048 4839C2   		cmpq	%rax, %rdx
 1273 004b 0F84DB00 		je	.L66
 1273      0000
 1274              	.LBB14:
 331:/usr/include/c++/5/bits/vector.tcc **** 	{
 332:/usr/include/c++/5/bits/vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 333:/usr/include/c++/5/bits/vector.tcc **** 			           _GLIBCXX_MOVE(*(this->_M_impl._M_finish
 1275              		.loc 8 333 0
 1276 0051 488B8528 		movq	-216(%rbp), %rax
 1276      FFFFFF
 1277 0058 488B4008 		movq	8(%rax), %rax
 332:/usr/include/c++/5/bits/vector.tcc **** 			           _GLIBCXX_MOVE(*(this->_M_impl._M_finish
 1278              		.loc 8 332 0
 1279 005c 488D5080 		leaq	-128(%rax), %rdx
 1280 0060 488B8528 		movq	-216(%rbp), %rax
 1280      FFFFFF
 1281 0067 488B4808 		movq	8(%rax), %rcx
 1282 006b 488B8528 		movq	-216(%rbp), %rax
 1282      FFFFFF
 1283 0072 4889CE   		movq	%rcx, %rsi
 1284 0075 4889C7   		movq	%rax, %rdi
 1285              	.LEHB27:
 1286 0078 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE9constructIS2_EEvRS3_PS2_RK
 1286      00
 334:/usr/include/c++/5/bits/vector.tcc **** 				                   - 1)));
 335:/usr/include/c++/5/bits/vector.tcc **** 	  ++this->_M_impl._M_finish;
 1287              		.loc 8 335 0
 1288 007d 488B8528 		movq	-216(%rbp), %rax
 1288      FFFFFF
 1289 0084 488B4008 		movq	8(%rax), %rax
 1290 0088 488D9080 		leaq	128(%rax), %rdx
 1290      000000
 1291 008f 488B8528 		movq	-216(%rbp), %rax
 1291      FFFFFF
 1292 0096 48895008 		movq	%rdx, 8(%rax)
 336:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus < 201103L
 337:/usr/include/c++/5/bits/vector.tcc **** 	  _Tp __x_copy = __x;
 1293              		.loc 8 337 0
 1294 009a 488B9518 		movq	-232(%rbp), %rdx
 1294      FFFFFF
 1295 00a1 488D8560 		leaq	-160(%rbp), %rax
 1295      FFFFFF
 1296 00a8 4889D6   		movq	%rdx, %rsi
 1297 00ab 4889C7   		movq	%rax, %rdi
 1298 00ae E8000000 		call	_ZN8UnitTest18DeferredTestResultC1ERKS0_@PLT
 1298      00
 1299              	.LEHE27:
 338:/usr/include/c++/5/bits/vector.tcc **** #endif
 339:/usr/include/c++/5/bits/vector.tcc **** 	  _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 1300              		.loc 8 339 0
 1301 00b3 488B8528 		movq	-216(%rbp), %rax
 1301      FFFFFF
 1302 00ba 488B4008 		movq	8(%rax), %rax
 1303 00be 4C8D6080 		leaq	-128(%rax), %r12
 1304 00c2 488B8528 		movq	-216(%rbp), %rax
 1304      FFFFFF
 1305 00c9 488B4008 		movq	8(%rax), %rax
 1306 00cd 488D9800 		leaq	-256(%rax), %rbx
 1306      FFFFFF
 1307 00d4 488D8520 		leaq	-224(%rbp), %rax
 1307      FFFFFF
 1308 00db 4889C7   		movq	%rax, %rdi
 1309 00de E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4base
 1309      00
 1310 00e3 488B00   		movq	(%rax), %rax
 1311 00e6 4C89E2   		movq	%r12, %rdx
 1312 00e9 4889DE   		movq	%rbx, %rsi
 1313 00ec 4889C7   		movq	%rax, %rdi
 1314              	.LEHB28:
 1315 00ef E8000000 		call	_ZSt13copy_backwardIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_@PLT
 1315      00
 340:/usr/include/c++/5/bits/vector.tcc **** 				  this->_M_impl._M_finish - 2,
 341:/usr/include/c++/5/bits/vector.tcc **** 				  this->_M_impl._M_finish - 1);
 342:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus < 201103L
 343:/usr/include/c++/5/bits/vector.tcc **** 	  *__position = __x_copy;
 1316              		.loc 8 343 0
 1317 00f4 488D8520 		leaq	-224(%rbp), %rax
 1317      FFFFFF
 1318 00fb 4889C7   		movq	%rax, %rdi
 1319 00fe E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEdeEv@
 1319      00
 1320 0103 4889C2   		movq	%rax, %rdx
 1321 0106 488D8560 		leaq	-160(%rbp), %rax
 1321      FFFFFF
 1322 010d 4889C6   		movq	%rax, %rsi
 1323 0110 4889D7   		movq	%rdx, %rdi
 1324 0113 E8000000 		call	_ZN8UnitTest18DeferredTestResultaSERKS0_@PLT
 1324      00
 1325              	.LEHE28:
 337:/usr/include/c++/5/bits/vector.tcc **** #endif
 1326              		.loc 8 337 0
 1327 0118 488D8560 		leaq	-160(%rbp), %rax
 1327      FFFFFF
 1328 011f 4889C7   		movq	%rax, %rdi
 1329              	.LEHB29:
 1330 0122 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev@PLT
 1330      00
 1331              	.LBE14:
 1332              	.LBE13:
 344:/usr/include/c++/5/bits/vector.tcc **** #else
 345:/usr/include/c++/5/bits/vector.tcc **** 	  *__position = _Tp(std::forward<_Args>(__args)...);
 346:/usr/include/c++/5/bits/vector.tcc **** #endif
 347:/usr/include/c++/5/bits/vector.tcc **** 	}
 348:/usr/include/c++/5/bits/vector.tcc ****       else
 349:/usr/include/c++/5/bits/vector.tcc **** 	{
 350:/usr/include/c++/5/bits/vector.tcc **** 	  const size_type __len =
 351:/usr/include/c++/5/bits/vector.tcc **** 	    _M_check_len(size_type(1), "vector::_M_insert_aux");
 352:/usr/include/c++/5/bits/vector.tcc **** 	  const size_type __elems_before = __position - begin();
 353:/usr/include/c++/5/bits/vector.tcc **** 	  pointer __new_start(this->_M_allocate(__len));
 354:/usr/include/c++/5/bits/vector.tcc **** 	  pointer __new_finish(__new_start);
 355:/usr/include/c++/5/bits/vector.tcc **** 	  __try
 356:/usr/include/c++/5/bits/vector.tcc **** 	    {
 357:/usr/include/c++/5/bits/vector.tcc **** 	      // The order of the three operations is dictated by the C++0x
 358:/usr/include/c++/5/bits/vector.tcc **** 	      // case, where the moves could alter a new element belonging
 359:/usr/include/c++/5/bits/vector.tcc **** 	      // to the existing vector.  This is an issue only for callers
 360:/usr/include/c++/5/bits/vector.tcc **** 	      // taking the element by const lvalue ref (see 23.1/13).
 361:/usr/include/c++/5/bits/vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl,
 362:/usr/include/c++/5/bits/vector.tcc **** 		                       __new_start + __elems_before,
 363:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus >= 201103L
 364:/usr/include/c++/5/bits/vector.tcc **** 				       std::forward<_Args>(__args)...);
 365:/usr/include/c++/5/bits/vector.tcc **** #else
 366:/usr/include/c++/5/bits/vector.tcc **** 	                               __x);
 367:/usr/include/c++/5/bits/vector.tcc **** #endif
 368:/usr/include/c++/5/bits/vector.tcc **** 	      __new_finish = pointer();
 369:/usr/include/c++/5/bits/vector.tcc **** 
 370:/usr/include/c++/5/bits/vector.tcc **** 	      __new_finish
 371:/usr/include/c++/5/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 372:/usr/include/c++/5/bits/vector.tcc **** 		(this->_M_impl._M_start, __position.base(),
 373:/usr/include/c++/5/bits/vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 374:/usr/include/c++/5/bits/vector.tcc **** 
 375:/usr/include/c++/5/bits/vector.tcc **** 	      ++__new_finish;
 376:/usr/include/c++/5/bits/vector.tcc **** 
 377:/usr/include/c++/5/bits/vector.tcc **** 	      __new_finish
 378:/usr/include/c++/5/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 379:/usr/include/c++/5/bits/vector.tcc **** 		(__position.base(), this->_M_impl._M_finish,
 380:/usr/include/c++/5/bits/vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 381:/usr/include/c++/5/bits/vector.tcc **** 	    }
 382:/usr/include/c++/5/bits/vector.tcc ****           __catch(...)
 383:/usr/include/c++/5/bits/vector.tcc **** 	    {
 384:/usr/include/c++/5/bits/vector.tcc **** 	      if (!__new_finish)
 385:/usr/include/c++/5/bits/vector.tcc **** 		_Alloc_traits::destroy(this->_M_impl,
 386:/usr/include/c++/5/bits/vector.tcc **** 		                       __new_start + __elems_before);
 387:/usr/include/c++/5/bits/vector.tcc **** 	      else
 388:/usr/include/c++/5/bits/vector.tcc **** 		std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 389:/usr/include/c++/5/bits/vector.tcc **** 	      _M_deallocate(__new_start, __len);
 390:/usr/include/c++/5/bits/vector.tcc **** 	      __throw_exception_again;
 391:/usr/include/c++/5/bits/vector.tcc **** 	    }
 392:/usr/include/c++/5/bits/vector.tcc **** 	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 393:/usr/include/c++/5/bits/vector.tcc **** 			_M_get_Tp_allocator());
 394:/usr/include/c++/5/bits/vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
 395:/usr/include/c++/5/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
 396:/usr/include/c++/5/bits/vector.tcc **** 			- this->_M_impl._M_start);
 397:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_start = __new_start;
 398:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_finish = __new_finish;
 399:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_end_of_storage = __new_start + __len;
 400:/usr/include/c++/5/bits/vector.tcc **** 	}
 401:/usr/include/c++/5/bits/vector.tcc ****     }
 1333              		.loc 8 401 0
 1334 0127 E9D90200 		jmp	.L65
 1334      00
 1335              	.L66:
 1336              	.LBB18:
 1337              	.LBB15:
 351:/usr/include/c++/5/bits/vector.tcc **** 	  const size_type __elems_before = __position - begin();
 1338              		.loc 8 351 0
 1339 012c 488B8528 		movq	-216(%rbp), %rax
 1339      FFFFFF
 1340 0133 488D1500 		leaq	.LC0(%rip), %rdx
 1340      000000
 1341 013a BE010000 		movl	$1, %esi
 1341      00
 1342 013f 4889C7   		movq	%rax, %rdi
 1343 0142 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE12_M_check_lenEmPKc@PLT
 1343      00
 1344 0147 48898548 		movq	%rax, -184(%rbp)
 1344      FFFFFF
 352:/usr/include/c++/5/bits/vector.tcc **** 	  pointer __new_start(this->_M_allocate(__len));
 1345              		.loc 8 352 0
 1346 014e 488B8528 		movq	-216(%rbp), %rax
 1346      FFFFFF
 1347 0155 4889C7   		movq	%rax, %rdi
 1348 0158 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE5beginEv@PLT
 1348      00
 1349 015d 48898530 		movq	%rax, -208(%rbp)
 1349      FFFFFF
 1350 0164 488D9530 		leaq	-208(%rbp), %rdx
 1350      FFFFFF
 1351 016b 488D8520 		leaq	-224(%rbp), %rax
 1351      FFFFFF
 1352 0172 4889D6   		movq	%rdx, %rsi
 1353 0175 4889C7   		movq	%rax, %rdi
 1354 0178 E8000000 		call	_ZN9__gnu_cxxmiIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEENS_17__normal_iterator
 1354      00
 1355 017d 48898550 		movq	%rax, -176(%rbp)
 1355      FFFFFF
 353:/usr/include/c++/5/bits/vector.tcc **** 	  pointer __new_finish(__new_start);
 1356              		.loc 8 353 0
 1357 0184 488B8528 		movq	-216(%rbp), %rax
 1357      FFFFFF
 1358 018b 488B9548 		movq	-184(%rbp), %rdx
 1358      FFFFFF
 1359 0192 4889D6   		movq	%rdx, %rsi
 1360 0195 4889C7   		movq	%rax, %rdi
 1361 0198 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE11_M_allocateEm@PLT
 1361      00
 1362              	.LEHE29:
 1363 019d 48898558 		movq	%rax, -168(%rbp)
 1363      FFFFFF
 354:/usr/include/c++/5/bits/vector.tcc **** 	  __try
 1364              		.loc 8 354 0
 1365 01a4 488B8558 		movq	-168(%rbp), %rax
 1365      FFFFFF
 1366 01ab 48898540 		movq	%rax, -192(%rbp)
 1366      FFFFFF
 361:/usr/include/c++/5/bits/vector.tcc **** 		                       __new_start + __elems_before,
 1367              		.loc 8 361 0
 1368 01b2 488B8550 		movq	-176(%rbp), %rax
 1368      FFFFFF
 1369 01b9 48C1E007 		salq	$7, %rax
 1370 01bd 4889C2   		movq	%rax, %rdx
 1371 01c0 488B8558 		movq	-168(%rbp), %rax
 1371      FFFFFF
 1372 01c7 488D0C02 		leaq	(%rdx,%rax), %rcx
 1373 01cb 488B8528 		movq	-216(%rbp), %rax
 1373      FFFFFF
 1374 01d2 488B9518 		movq	-232(%rbp), %rdx
 1374      FFFFFF
 1375 01d9 4889CE   		movq	%rcx, %rsi
 1376 01dc 4889C7   		movq	%rax, %rdi
 1377              	.LEHB30:
 1378 01df E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE9constructIS2_EEvRS3_PS2_RK
 1378      00
 368:/usr/include/c++/5/bits/vector.tcc **** 
 1379              		.loc 8 368 0
 1380 01e4 48C78540 		movq	$0, -192(%rbp)
 1380      FFFFFF00 
 1380      000000
 373:/usr/include/c++/5/bits/vector.tcc **** 
 1381              		.loc 8 373 0
 1382 01ef 488B8528 		movq	-216(%rbp), %rax
 1382      FFFFFF
 1383 01f6 4889C7   		movq	%rax, %rdi
 1384 01f9 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv@PLT
 1384      00
 1385 01fe 4889C3   		movq	%rax, %rbx
 372:/usr/include/c++/5/bits/vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 1386              		.loc 8 372 0
 1387 0201 488D8520 		leaq	-224(%rbp), %rax
 1387      FFFFFF
 1388 0208 4889C7   		movq	%rax, %rdi
 1389 020b E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4base
 1389      00
 1390 0210 488B30   		movq	(%rax), %rsi
 1391 0213 488B8528 		movq	-216(%rbp), %rax
 1391      FFFFFF
 1392 021a 488B00   		movq	(%rax), %rax
 370:/usr/include/c++/5/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 1393              		.loc 8 370 0
 1394 021d 488B9558 		movq	-168(%rbp), %rdx
 1394      FFFFFF
 1395 0224 4889D9   		movq	%rbx, %rcx
 1396 0227 4889C7   		movq	%rax, %rdi
 1397 022a E8000000 		call	_ZSt34__uninitialized_move_if_noexcept_aIPN8UnitTest18DeferredTestResultES2_SaIS1_EET0_T_S5_S
 1397      00
 1398 022f 48898540 		movq	%rax, -192(%rbp)
 1398      FFFFFF
 375:/usr/include/c++/5/bits/vector.tcc **** 
 1399              		.loc 8 375 0
 1400 0236 4883AD40 		subq	$-128, -192(%rbp)
 1400      FFFFFF80 
 380:/usr/include/c++/5/bits/vector.tcc **** 	    }
 1401              		.loc 8 380 0
 1402 023e 488B8528 		movq	-216(%rbp), %rax
 1402      FFFFFF
 1403 0245 4889C7   		movq	%rax, %rdi
 1404 0248 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv@PLT
 1404      00
 1405 024d 4989C4   		movq	%rax, %r12
 379:/usr/include/c++/5/bits/vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 1406              		.loc 8 379 0
 1407 0250 488B8528 		movq	-216(%rbp), %rax
 1407      FFFFFF
 1408 0257 488B5808 		movq	8(%rax), %rbx
 1409 025b 488D8520 		leaq	-224(%rbp), %rax
 1409      FFFFFF
 1410 0262 4889C7   		movq	%rax, %rdi
 1411 0265 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4base
 1411      00
 1412 026a 488B00   		movq	(%rax), %rax
 377:/usr/include/c++/5/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 1413              		.loc 8 377 0
 1414 026d 488B9540 		movq	-192(%rbp), %rdx
 1414      FFFFFF
 1415 0274 4C89E1   		movq	%r12, %rcx
 1416 0277 4889DE   		movq	%rbx, %rsi
 1417 027a 4889C7   		movq	%rax, %rdi
 1418 027d E8000000 		call	_ZSt34__uninitialized_move_if_noexcept_aIPN8UnitTest18DeferredTestResultES2_SaIS1_EET0_T_S5_S
 1418      00
 1419              	.LEHE30:
 377:/usr/include/c++/5/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 1420              		.loc 8 377 0 is_stmt 0 discriminator 1
 1421 0282 48898540 		movq	%rax, -192(%rbp)
 1421      FFFFFF
 393:/usr/include/c++/5/bits/vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
 1422              		.loc 8 393 0 is_stmt 1 discriminator 1
 1423 0289 488B8528 		movq	-216(%rbp), %rax
 1423      FFFFFF
 1424 0290 4889C7   		movq	%rax, %rdi
 1425 0293 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv@PLT
 1425      00
 1426 0298 4889C2   		movq	%rax, %rdx
 392:/usr/include/c++/5/bits/vector.tcc **** 			_M_get_Tp_allocator());
 1427              		.loc 8 392 0 discriminator 1
 1428 029b 488B8528 		movq	-216(%rbp), %rax
 1428      FFFFFF
 1429 02a2 488B4808 		movq	8(%rax), %rcx
 1430 02a6 488B8528 		movq	-216(%rbp), %rax
 1430      FFFFFF
 1431 02ad 488B00   		movq	(%rax), %rax
 1432 02b0 4889CE   		movq	%rcx, %rsi
 1433 02b3 4889C7   		movq	%rax, %rdi
 1434              	.LEHB31:
 1435 02b6 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E@PLT
 1435      00
 396:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_start = __new_start;
 1436              		.loc 8 396 0 discriminator 1
 1437 02bb 488B8528 		movq	-216(%rbp), %rax
 1437      FFFFFF
 1438 02c2 488B4010 		movq	16(%rax), %rax
 394:/usr/include/c++/5/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
 1439              		.loc 8 394 0 discriminator 1
 1440 02c6 4889C2   		movq	%rax, %rdx
 396:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_start = __new_start;
 1441              		.loc 8 396 0 discriminator 1
 1442 02c9 488B8528 		movq	-216(%rbp), %rax
 1442      FFFFFF
 1443 02d0 488B00   		movq	(%rax), %rax
 394:/usr/include/c++/5/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
 1444              		.loc 8 394 0 discriminator 1
 1445 02d3 4829C2   		subq	%rax, %rdx
 1446 02d6 4889D0   		movq	%rdx, %rax
 1447 02d9 48C1F807 		sarq	$7, %rax
 1448 02dd 4889C2   		movq	%rax, %rdx
 1449 02e0 488B8528 		movq	-216(%rbp), %rax
 1449      FFFFFF
 1450 02e7 488B08   		movq	(%rax), %rcx
 1451 02ea 488B8528 		movq	-216(%rbp), %rax
 1451      FFFFFF
 1452 02f1 4889CE   		movq	%rcx, %rsi
 1453 02f4 4889C7   		movq	%rax, %rdi
 1454 02f7 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m@PLT
 1454      00
 1455              	.LEHE31:
 397:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_finish = __new_finish;
 1456              		.loc 8 397 0 discriminator 1
 1457 02fc 488B8528 		movq	-216(%rbp), %rax
 1457      FFFFFF
 1458 0303 488B9558 		movq	-168(%rbp), %rdx
 1458      FFFFFF
 1459 030a 488910   		movq	%rdx, (%rax)
 398:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_end_of_storage = __new_start + __len;
 1460              		.loc 8 398 0 discriminator 1
 1461 030d 488B8528 		movq	-216(%rbp), %rax
 1461      FFFFFF
 1462 0314 488B9540 		movq	-192(%rbp), %rdx
 1462      FFFFFF
 1463 031b 48895008 		movq	%rdx, 8(%rax)
 399:/usr/include/c++/5/bits/vector.tcc **** 	}
 1464              		.loc 8 399 0 discriminator 1
 1465 031f 488B8548 		movq	-184(%rbp), %rax
 1465      FFFFFF
 1466 0326 48C1E007 		salq	$7, %rax
 1467 032a 4889C2   		movq	%rax, %rdx
 1468 032d 488B8558 		movq	-168(%rbp), %rax
 1468      FFFFFF
 1469 0334 4801C2   		addq	%rax, %rdx
 1470 0337 488B8528 		movq	-216(%rbp), %rax
 1470      FFFFFF
 1471 033e 48895010 		movq	%rdx, 16(%rax)
 1472              	.LBE15:
 1473              	.LBE18:
 1474              		.loc 8 401 0 discriminator 1
 1475 0342 E9BE0000 		jmp	.L65
 1475      00
 1476              	.L74:
 1477 0347 4889C3   		movq	%rax, %rbx
 1478              	.LBB19:
 1479              	.LBB16:
 337:/usr/include/c++/5/bits/vector.tcc **** #endif
 1480              		.loc 8 337 0
 1481 034a 488D8560 		leaq	-160(%rbp), %rax
 1481      FFFFFF
 1482 0351 4889C7   		movq	%rax, %rdi
 1483 0354 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev@PLT
 1483      00
 1484 0359 4889D8   		movq	%rbx, %rax
 1485 035c 4889C7   		movq	%rax, %rdi
 1486              	.LEHB32:
 1487 035f E8000000 		call	_Unwind_Resume@PLT
 1487      00
 1488              	.LEHE32:
 1489              	.L75:
 1490              	.LBE16:
 1491              	.LBB17:
 382:/usr/include/c++/5/bits/vector.tcc **** 	    {
 1492              		.loc 8 382 0
 1493 0364 4889C7   		movq	%rax, %rdi
 1494 0367 E8000000 		call	__cxa_begin_catch@PLT
 1494      00
 384:/usr/include/c++/5/bits/vector.tcc **** 		_Alloc_traits::destroy(this->_M_impl,
 1495              		.loc 8 384 0
 1496 036c 4883BD40 		cmpq	$0, -192(%rbp)
 1496      FFFFFF00 
 1497 0374 752C     		jne	.L70
 385:/usr/include/c++/5/bits/vector.tcc **** 		                       __new_start + __elems_before);
 1498              		.loc 8 385 0
 1499 0376 488B8550 		movq	-176(%rbp), %rax
 1499      FFFFFF
 1500 037d 48C1E007 		salq	$7, %rax
 1501 0381 4889C2   		movq	%rax, %rdx
 1502 0384 488B8558 		movq	-168(%rbp), %rax
 1502      FFFFFF
 1503 038b 4801C2   		addq	%rax, %rdx
 1504 038e 488B8528 		movq	-216(%rbp), %rax
 1504      FFFFFF
 1505 0395 4889D6   		movq	%rdx, %rsi
 1506 0398 4889C7   		movq	%rax, %rdi
 1507              	.LEHB33:
 1508 039b E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE7destroyERS3_PS2_@PLT
 1508      00
 1509 03a0 EB2B     		jmp	.L71
 1510              	.L70:
 388:/usr/include/c++/5/bits/vector.tcc **** 	      _M_deallocate(__new_start, __len);
 1511              		.loc 8 388 0
 1512 03a2 488B8528 		movq	-216(%rbp), %rax
 1512      FFFFFF
 1513 03a9 4889C7   		movq	%rax, %rdi
 1514 03ac E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv@PLT
 1514      00
 1515 03b1 4889C2   		movq	%rax, %rdx
 1516 03b4 488B8D40 		movq	-192(%rbp), %rcx
 1516      FFFFFF
 1517 03bb 488B8558 		movq	-168(%rbp), %rax
 1517      FFFFFF
 1518 03c2 4889CE   		movq	%rcx, %rsi
 1519 03c5 4889C7   		movq	%rax, %rdi
 1520 03c8 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E@PLT
 1520      00
 1521              	.L71:
 389:/usr/include/c++/5/bits/vector.tcc **** 	      __throw_exception_again;
 1522              		.loc 8 389 0
 1523 03cd 488B8528 		movq	-216(%rbp), %rax
 1523      FFFFFF
 1524 03d4 488B9548 		movq	-184(%rbp), %rdx
 1524      FFFFFF
 1525 03db 488B8D58 		movq	-168(%rbp), %rcx
 1525      FFFFFF
 1526 03e2 4889CE   		movq	%rcx, %rsi
 1527 03e5 4889C7   		movq	%rax, %rdi
 1528 03e8 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m@PLT
 1528      00
 390:/usr/include/c++/5/bits/vector.tcc **** 	    }
 1529              		.loc 8 390 0
 1530 03ed E8000000 		call	__cxa_rethrow@PLT
 1530      00
 1531              	.LEHE33:
 1532              	.L76:
 1533 03f2 4889C3   		movq	%rax, %rbx
 382:/usr/include/c++/5/bits/vector.tcc **** 	    {
 1534              		.loc 8 382 0
 1535 03f5 E8000000 		call	__cxa_end_catch@PLT
 1535      00
 1536 03fa 4889D8   		movq	%rbx, %rax
 1537 03fd 4889C7   		movq	%rax, %rdi
 1538              	.LEHB34:
 1539 0400 E8000000 		call	_Unwind_Resume@PLT
 1539      00
 1540              	.LEHE34:
 1541              	.L65:
 1542              	.LBE17:
 1543              	.LBE19:
 1544              		.loc 8 401 0
 1545 0405 488B45E8 		movq	-24(%rbp), %rax
 1546 0409 64483304 		xorq	%fs:40, %rax
 1546      25280000 
 1546      00
 1547 0412 7405     		je	.L73
 1548 0414 E8000000 		call	__stack_chk_fail@PLT
 1548      00
 1549              	.L73:
 1550 0419 4881C4E0 		addq	$224, %rsp
 1550      000000
 1551 0420 5B       		popq	%rbx
 1552 0421 415C     		popq	%r12
 1553 0423 5D       		popq	%rbp
 1554              		.cfi_def_cfa 7, 8
 1555 0424 C3       		ret
 1556              		.cfi_endproc
 1557              	.LFE914:
 1558              		.section	.gcc_except_table
 1559 007d 000000   		.align 4
 1560              	.LLSDA914:
 1561 0080 FF       		.byte	0xff
 1562 0081 9B       		.byte	0x9b
 1563 0082 35       		.uleb128 .LLSDATT914-.LLSDATTD914
 1564              	.LLSDATTD914:
 1565 0083 01       		.byte	0x1
 1566 0084 2B       		.uleb128 .LLSDACSE914-.LLSDACSB914
 1567              	.LLSDACSB914:
 1568 0085 78       		.uleb128 .LEHB27-.LFB914
 1569 0086 3B       		.uleb128 .LEHE27-.LEHB27
 1570 0087 00       		.uleb128 0
 1571 0088 00       		.uleb128 0
 1572 0089 EF01     		.uleb128 .LEHB28-.LFB914
 1573 008b 29       		.uleb128 .LEHE28-.LEHB28
 1574 008c C706     		.uleb128 .L74-.LFB914
 1575 008e 00       		.uleb128 0
 1576 008f A202     		.uleb128 .LEHB29-.LFB914
 1577 0091 7B       		.uleb128 .LEHE29-.LEHB29
 1578 0092 00       		.uleb128 0
 1579 0093 00       		.uleb128 0
 1580 0094 DF03     		.uleb128 .LEHB30-.LFB914
 1581 0096 A301     		.uleb128 .LEHE30-.LEHB30
 1582 0098 E406     		.uleb128 .L75-.LFB914
 1583 009a 01       		.uleb128 0x1
 1584 009b B605     		.uleb128 .LEHB31-.LFB914
 1585 009d 46       		.uleb128 .LEHE31-.LEHB31
 1586 009e 00       		.uleb128 0
 1587 009f 00       		.uleb128 0
 1588 00a0 DF06     		.uleb128 .LEHB32-.LFB914
 1589 00a2 05       		.uleb128 .LEHE32-.LEHB32
 1590 00a3 00       		.uleb128 0
 1591 00a4 00       		.uleb128 0
 1592 00a5 9B07     		.uleb128 .LEHB33-.LFB914
 1593 00a7 57       		.uleb128 .LEHE33-.LEHB33
 1594 00a8 F207     		.uleb128 .L76-.LFB914
 1595 00aa 00       		.uleb128 0
 1596 00ab 8008     		.uleb128 .LEHB34-.LFB914
 1597 00ad 05       		.uleb128 .LEHE34-.LEHB34
 1598 00ae 00       		.uleb128 0
 1599 00af 00       		.uleb128 0
 1600              	.LLSDACSE914:
 1601 00b0 01       		.byte	0x1
 1602 00b1 00       		.byte	0
 1603 00b2 0000     		.align 4
 1604 00b4 00000000 		.long	0
 1605              	
 1606              	.LLSDATT914:
 1607              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__
 1609              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE3endEv,"axG",@progbits,_ZNSt6ve
 1610              		.align 2
 1611              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE3endEv
 1613              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE3endEv:
 1614              	.LFB919:
 565:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 1615              		.loc 5 565 0
 1616              		.cfi_startproc
 1617 0000 55       		pushq	%rbp
 1618              		.cfi_def_cfa_offset 16
 1619              		.cfi_offset 6, -16
 1620 0001 4889E5   		movq	%rsp, %rbp
 1621              		.cfi_def_cfa_register 6
 1622 0004 4883EC20 		subq	$32, %rsp
 1623 0008 48897DE8 		movq	%rdi, -24(%rbp)
 565:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 1624              		.loc 5 565 0
 1625 000c 64488B04 		movq	%fs:40, %rax
 1625      25280000 
 1625      00
 1626 0015 488945F8 		movq	%rax, -8(%rbp)
 1627 0019 31C0     		xorl	%eax, %eax
 566:/usr/include/c++/5/bits/stl_vector.h **** 
 1628              		.loc 5 566 0
 1629 001b 488B45E8 		movq	-24(%rbp), %rax
 1630 001f 488D5008 		leaq	8(%rax), %rdx
 1631 0023 488D45F0 		leaq	-16(%rbp), %rax
 1632 0027 4889D6   		movq	%rdx, %rsi
 1633 002a 4889C7   		movq	%rax, %rdi
 1634 002d E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC1ERKS
 1634      00
 1635 0032 488B45F0 		movq	-16(%rbp), %rax
 1636 0036 488B4DF8 		movq	-8(%rbp), %rcx
 1637 003a 6448330C 		xorq	%fs:40, %rcx
 1637      25280000 
 1637      00
 1638 0043 7405     		je	.L79
 1639 0045 E8000000 		call	__stack_chk_fail@PLT
 1639      00
 1640              	.L79:
 1641 004a C9       		leave
 1642              		.cfi_def_cfa 7, 8
 1643 004b C3       		ret
 1644              		.cfi_endproc
 1645              	.LFE919:
 1647              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS
 1648              		.align 2
 1649              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEmiEl
 1651              	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEmiEl:
 1652              	.LFB920:
 1653              		.file 9 "/usr/include/c++/5/bits/stl_iterator.h"
   1:/usr/include/c++/5/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_iterator.h **** 
   3:/usr/include/c++/5/bits/stl_iterator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_iterator.h **** //
   5:/usr/include/c++/5/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_iterator.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_iterator.h **** 
  11:/usr/include/c++/5/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_iterator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_iterator.h **** 
  16:/usr/include/c++/5/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_iterator.h **** 
  20:/usr/include/c++/5/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_iterator.h **** 
  25:/usr/include/c++/5/bits/stl_iterator.h **** /*
  26:/usr/include/c++/5/bits/stl_iterator.h ****  *
  27:/usr/include/c++/5/bits/stl_iterator.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_iterator.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_iterator.h ****  *
  30:/usr/include/c++/5/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_iterator.h ****  *
  38:/usr/include/c++/5/bits/stl_iterator.h ****  *
  39:/usr/include/c++/5/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_iterator.h ****  *
  42:/usr/include/c++/5/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_iterator.h ****  */
  50:/usr/include/c++/5/bits/stl_iterator.h **** 
  51:/usr/include/c++/5/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
  52:/usr/include/c++/5/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/5/bits/stl_iterator.h ****  *
  55:/usr/include/c++/5/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:/usr/include/c++/5/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:/usr/include/c++/5/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:/usr/include/c++/5/bits/stl_iterator.h ****  */
  59:/usr/include/c++/5/bits/stl_iterator.h **** 
  60:/usr/include/c++/5/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:/usr/include/c++/5/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:/usr/include/c++/5/bits/stl_iterator.h **** 
  63:/usr/include/c++/5/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:/usr/include/c++/5/bits/stl_iterator.h **** #include <ext/type_traits.h>
  65:/usr/include/c++/5/bits/stl_iterator.h **** #include <bits/move.h>
  66:/usr/include/c++/5/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  67:/usr/include/c++/5/bits/stl_iterator.h **** 
  68:/usr/include/c++/5/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:/usr/include/c++/5/bits/stl_iterator.h **** {
  70:/usr/include/c++/5/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  71:/usr/include/c++/5/bits/stl_iterator.h **** 
  72:/usr/include/c++/5/bits/stl_iterator.h ****   /**
  73:/usr/include/c++/5/bits/stl_iterator.h ****    * @addtogroup iterators
  74:/usr/include/c++/5/bits/stl_iterator.h ****    * @{
  75:/usr/include/c++/5/bits/stl_iterator.h ****    */
  76:/usr/include/c++/5/bits/stl_iterator.h **** 
  77:/usr/include/c++/5/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  78:/usr/include/c++/5/bits/stl_iterator.h ****   /**
  79:/usr/include/c++/5/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  80:/usr/include/c++/5/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  81:/usr/include/c++/5/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  82:/usr/include/c++/5/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  83:/usr/include/c++/5/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  84:/usr/include/c++/5/bits/stl_iterator.h ****    *  @code
  85:/usr/include/c++/5/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  86:/usr/include/c++/5/bits/stl_iterator.h ****    *  @endcode
  87:/usr/include/c++/5/bits/stl_iterator.h ****    *
  88:/usr/include/c++/5/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  89:/usr/include/c++/5/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  90:/usr/include/c++/5/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  91:/usr/include/c++/5/bits/stl_iterator.h ****    *
  92:/usr/include/c++/5/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
  93:/usr/include/c++/5/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
  94:/usr/include/c++/5/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
  95:/usr/include/c++/5/bits/stl_iterator.h ****   */
  96:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
  97:/usr/include/c++/5/bits/stl_iterator.h ****     class reverse_iterator
  98:/usr/include/c++/5/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
  99:/usr/include/c++/5/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 100:/usr/include/c++/5/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 101:/usr/include/c++/5/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 102:/usr/include/c++/5/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 103:/usr/include/c++/5/bits/stl_iterator.h ****     {
 104:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 105:/usr/include/c++/5/bits/stl_iterator.h ****       _Iterator current;
 106:/usr/include/c++/5/bits/stl_iterator.h **** 
 107:/usr/include/c++/5/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 108:/usr/include/c++/5/bits/stl_iterator.h **** 
 109:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 110:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 111:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 112:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 113:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 114:/usr/include/c++/5/bits/stl_iterator.h **** 
 115:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 116:/usr/include/c++/5/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 117:/usr/include/c++/5/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 118:/usr/include/c++/5/bits/stl_iterator.h ****       */
 119:/usr/include/c++/5/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/5/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 121:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 122:/usr/include/c++/5/bits/stl_iterator.h **** 
 123:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 124:/usr/include/c++/5/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 125:/usr/include/c++/5/bits/stl_iterator.h ****       */
 126:/usr/include/c++/5/bits/stl_iterator.h ****       explicit
 127:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 128:/usr/include/c++/5/bits/stl_iterator.h **** 
 129:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 130:/usr/include/c++/5/bits/stl_iterator.h ****        *  The copy constructor is normal.
 131:/usr/include/c++/5/bits/stl_iterator.h ****       */
 132:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 133:/usr/include/c++/5/bits/stl_iterator.h ****       : current(__x.current) { }
 134:/usr/include/c++/5/bits/stl_iterator.h **** 
 135:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 136:/usr/include/c++/5/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 137:/usr/include/c++/5/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 138:/usr/include/c++/5/bits/stl_iterator.h ****       */
 139:/usr/include/c++/5/bits/stl_iterator.h ****       template<typename _Iter>
 140:/usr/include/c++/5/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 141:/usr/include/c++/5/bits/stl_iterator.h **** 	: current(__x.base()) { }
 142:/usr/include/c++/5/bits/stl_iterator.h **** 
 143:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 144:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 145:/usr/include/c++/5/bits/stl_iterator.h ****       */
 146:/usr/include/c++/5/bits/stl_iterator.h ****       iterator_type
 147:/usr/include/c++/5/bits/stl_iterator.h ****       base() const
 148:/usr/include/c++/5/bits/stl_iterator.h ****       { return current; }
 149:/usr/include/c++/5/bits/stl_iterator.h **** 
 150:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 151:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 152:/usr/include/c++/5/bits/stl_iterator.h ****        *
 153:/usr/include/c++/5/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 154:/usr/include/c++/5/bits/stl_iterator.h ****        *
 155:/usr/include/c++/5/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 156:/usr/include/c++/5/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 157:/usr/include/c++/5/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 158:/usr/include/c++/5/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 159:/usr/include/c++/5/bits/stl_iterator.h ****       */
 160:/usr/include/c++/5/bits/stl_iterator.h ****       reference
 161:/usr/include/c++/5/bits/stl_iterator.h ****       operator*() const
 162:/usr/include/c++/5/bits/stl_iterator.h ****       {
 163:/usr/include/c++/5/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 164:/usr/include/c++/5/bits/stl_iterator.h **** 	return *--__tmp;
 165:/usr/include/c++/5/bits/stl_iterator.h ****       }
 166:/usr/include/c++/5/bits/stl_iterator.h **** 
 167:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 168:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 169:/usr/include/c++/5/bits/stl_iterator.h ****        *
 170:/usr/include/c++/5/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 171:/usr/include/c++/5/bits/stl_iterator.h ****       */
 172:/usr/include/c++/5/bits/stl_iterator.h ****       pointer
 173:/usr/include/c++/5/bits/stl_iterator.h ****       operator->() const
 174:/usr/include/c++/5/bits/stl_iterator.h ****       { return &(operator*()); }
 175:/usr/include/c++/5/bits/stl_iterator.h **** 
 176:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 177:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  @c *this
 178:/usr/include/c++/5/bits/stl_iterator.h ****        *
 179:/usr/include/c++/5/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 180:/usr/include/c++/5/bits/stl_iterator.h ****       */
 181:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator&
 182:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
 183:/usr/include/c++/5/bits/stl_iterator.h ****       {
 184:/usr/include/c++/5/bits/stl_iterator.h **** 	--current;
 185:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 186:/usr/include/c++/5/bits/stl_iterator.h ****       }
 187:/usr/include/c++/5/bits/stl_iterator.h **** 
 188:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 189:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 190:/usr/include/c++/5/bits/stl_iterator.h ****        *
 191:/usr/include/c++/5/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 192:/usr/include/c++/5/bits/stl_iterator.h ****       */
 193:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator
 194:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
 195:/usr/include/c++/5/bits/stl_iterator.h ****       {
 196:/usr/include/c++/5/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 197:/usr/include/c++/5/bits/stl_iterator.h **** 	--current;
 198:/usr/include/c++/5/bits/stl_iterator.h **** 	return __tmp;
 199:/usr/include/c++/5/bits/stl_iterator.h ****       }
 200:/usr/include/c++/5/bits/stl_iterator.h **** 
 201:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 202:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  @c *this
 203:/usr/include/c++/5/bits/stl_iterator.h ****        *
 204:/usr/include/c++/5/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 205:/usr/include/c++/5/bits/stl_iterator.h ****       */
 206:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator&
 207:/usr/include/c++/5/bits/stl_iterator.h ****       operator--()
 208:/usr/include/c++/5/bits/stl_iterator.h ****       {
 209:/usr/include/c++/5/bits/stl_iterator.h **** 	++current;
 210:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 211:/usr/include/c++/5/bits/stl_iterator.h ****       }
 212:/usr/include/c++/5/bits/stl_iterator.h **** 
 213:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 214:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 215:/usr/include/c++/5/bits/stl_iterator.h ****        *
 216:/usr/include/c++/5/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 217:/usr/include/c++/5/bits/stl_iterator.h ****       */
 218:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator
 219:/usr/include/c++/5/bits/stl_iterator.h ****       operator--(int)
 220:/usr/include/c++/5/bits/stl_iterator.h ****       {
 221:/usr/include/c++/5/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 222:/usr/include/c++/5/bits/stl_iterator.h **** 	++current;
 223:/usr/include/c++/5/bits/stl_iterator.h **** 	return __tmp;
 224:/usr/include/c++/5/bits/stl_iterator.h ****       }
 225:/usr/include/c++/5/bits/stl_iterator.h **** 
 226:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 227:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 228:/usr/include/c++/5/bits/stl_iterator.h ****        *
 229:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 230:/usr/include/c++/5/bits/stl_iterator.h ****       */
 231:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator
 232:/usr/include/c++/5/bits/stl_iterator.h ****       operator+(difference_type __n) const
 233:/usr/include/c++/5/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 234:/usr/include/c++/5/bits/stl_iterator.h **** 
 235:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 236:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  *this
 237:/usr/include/c++/5/bits/stl_iterator.h ****        *
 238:/usr/include/c++/5/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 239:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 240:/usr/include/c++/5/bits/stl_iterator.h ****       */
 241:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator&
 242:/usr/include/c++/5/bits/stl_iterator.h ****       operator+=(difference_type __n)
 243:/usr/include/c++/5/bits/stl_iterator.h ****       {
 244:/usr/include/c++/5/bits/stl_iterator.h **** 	current -= __n;
 245:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 246:/usr/include/c++/5/bits/stl_iterator.h ****       }
 247:/usr/include/c++/5/bits/stl_iterator.h **** 
 248:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 249:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 250:/usr/include/c++/5/bits/stl_iterator.h ****        *
 251:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 252:/usr/include/c++/5/bits/stl_iterator.h ****       */
 253:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator
 254:/usr/include/c++/5/bits/stl_iterator.h ****       operator-(difference_type __n) const
 255:/usr/include/c++/5/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 256:/usr/include/c++/5/bits/stl_iterator.h **** 
 257:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 258:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  *this
 259:/usr/include/c++/5/bits/stl_iterator.h ****        *
 260:/usr/include/c++/5/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 261:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 262:/usr/include/c++/5/bits/stl_iterator.h ****       */
 263:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator&
 264:/usr/include/c++/5/bits/stl_iterator.h ****       operator-=(difference_type __n)
 265:/usr/include/c++/5/bits/stl_iterator.h ****       {
 266:/usr/include/c++/5/bits/stl_iterator.h **** 	current += __n;
 267:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 268:/usr/include/c++/5/bits/stl_iterator.h ****       }
 269:/usr/include/c++/5/bits/stl_iterator.h **** 
 270:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 271:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 272:/usr/include/c++/5/bits/stl_iterator.h ****        *
 273:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 274:/usr/include/c++/5/bits/stl_iterator.h ****       */
 275:/usr/include/c++/5/bits/stl_iterator.h ****       reference
 276:/usr/include/c++/5/bits/stl_iterator.h ****       operator[](difference_type __n) const
 277:/usr/include/c++/5/bits/stl_iterator.h ****       { return *(*this + __n); }
 278:/usr/include/c++/5/bits/stl_iterator.h ****     };
 279:/usr/include/c++/5/bits/stl_iterator.h **** 
 280:/usr/include/c++/5/bits/stl_iterator.h ****   //@{
 281:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 282:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 283:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 284:/usr/include/c++/5/bits/stl_iterator.h ****    *  @return  A simple bool.
 285:/usr/include/c++/5/bits/stl_iterator.h ****    *
 286:/usr/include/c++/5/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 287:/usr/include/c++/5/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 288:/usr/include/c++/5/bits/stl_iterator.h ****    *
 289:/usr/include/c++/5/bits/stl_iterator.h ****   */
 290:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 291:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 292:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 293:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 294:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 295:/usr/include/c++/5/bits/stl_iterator.h **** 
 296:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 297:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 298:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 299:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 300:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 301:/usr/include/c++/5/bits/stl_iterator.h **** 
 302:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 303:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 304:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 305:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 306:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x == __y); }
 307:/usr/include/c++/5/bits/stl_iterator.h **** 
 308:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 309:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 310:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 311:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 312:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y < __x; }
 313:/usr/include/c++/5/bits/stl_iterator.h **** 
 314:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 315:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 316:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 317:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 318:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__y < __x); }
 319:/usr/include/c++/5/bits/stl_iterator.h **** 
 320:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 321:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 322:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 323:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 324:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x < __y); }
 325:/usr/include/c++/5/bits/stl_iterator.h **** 
 326:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 327:/usr/include/c++/5/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 328:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 329:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 330:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 331:/usr/include/c++/5/bits/stl_iterator.h **** 
 332:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 333:/usr/include/c++/5/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 334:/usr/include/c++/5/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 335:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 336:/usr/include/c++/5/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 337:/usr/include/c++/5/bits/stl_iterator.h **** 
 338:/usr/include/c++/5/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 339:/usr/include/c++/5/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 340:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 341:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 342:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 343:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 344:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 345:/usr/include/c++/5/bits/stl_iterator.h **** 
 346:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 347:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 348:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 349:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 350:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 351:/usr/include/c++/5/bits/stl_iterator.h **** 
 352:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 353:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 354:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 355:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 356:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x == __y); }
 357:/usr/include/c++/5/bits/stl_iterator.h **** 
 358:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 359:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 360:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 361:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 362:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y < __x; }
 363:/usr/include/c++/5/bits/stl_iterator.h **** 
 364:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 365:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 366:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 367:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 368:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__y < __x); }
 369:/usr/include/c++/5/bits/stl_iterator.h **** 
 370:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 371:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 372:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 373:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 374:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x < __y); }
 375:/usr/include/c++/5/bits/stl_iterator.h **** 
 376:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 377:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 378:/usr/include/c++/5/bits/stl_iterator.h ****     // DR 685.
 379:/usr/include/c++/5/bits/stl_iterator.h ****     inline auto
 380:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 381:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 382:/usr/include/c++/5/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 383:/usr/include/c++/5/bits/stl_iterator.h **** #else
 384:/usr/include/c++/5/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 385:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 386:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 387:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 388:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 389:/usr/include/c++/5/bits/stl_iterator.h ****   //@}
 390:/usr/include/c++/5/bits/stl_iterator.h **** 
 391:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus > 201103L
 392:/usr/include/c++/5/bits/stl_iterator.h **** #define __cpp_lib_make_reverse_iterator 201402
 393:/usr/include/c++/5/bits/stl_iterator.h **** 
 394:/usr/include/c++/5/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 395:/usr/include/c++/5/bits/stl_iterator.h ****   // DR 2285. make_reverse_iterator
 396:/usr/include/c++/5/bits/stl_iterator.h ****   /// Generator function for reverse_iterator.
 397:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 398:/usr/include/c++/5/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 399:/usr/include/c++/5/bits/stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 400:/usr/include/c++/5/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 401:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 402:/usr/include/c++/5/bits/stl_iterator.h **** 
 403:/usr/include/c++/5/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 404:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 405:/usr/include/c++/5/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 406:/usr/include/c++/5/bits/stl_iterator.h ****    *
 407:/usr/include/c++/5/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 408:/usr/include/c++/5/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 409:/usr/include/c++/5/bits/stl_iterator.h ****    *  push_back.
 410:/usr/include/c++/5/bits/stl_iterator.h ****    *
 411:/usr/include/c++/5/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 412:/usr/include/c++/5/bits/stl_iterator.h ****    *  save typing.
 413:/usr/include/c++/5/bits/stl_iterator.h ****   */
 414:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 415:/usr/include/c++/5/bits/stl_iterator.h ****     class back_insert_iterator
 416:/usr/include/c++/5/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 417:/usr/include/c++/5/bits/stl_iterator.h ****     {
 418:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 419:/usr/include/c++/5/bits/stl_iterator.h ****       _Container* container;
 420:/usr/include/c++/5/bits/stl_iterator.h **** 
 421:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 422:/usr/include/c++/5/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 423:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Container          container_type;
 424:/usr/include/c++/5/bits/stl_iterator.h **** 
 425:/usr/include/c++/5/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 426:/usr/include/c++/5/bits/stl_iterator.h ****       explicit
 427:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x) : container(&__x) { }
 428:/usr/include/c++/5/bits/stl_iterator.h **** 
 429:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 430:/usr/include/c++/5/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 431:/usr/include/c++/5/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 432:/usr/include/c++/5/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 433:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 434:/usr/include/c++/5/bits/stl_iterator.h ****        *
 435:/usr/include/c++/5/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 436:/usr/include/c++/5/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 437:/usr/include/c++/5/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 438:/usr/include/c++/5/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 439:/usr/include/c++/5/bits/stl_iterator.h ****       */
 440:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus < 201103L
 441:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 442:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 443:/usr/include/c++/5/bits/stl_iterator.h ****       {
 444:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_back(__value);
 445:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 446:/usr/include/c++/5/bits/stl_iterator.h ****       }
 447:/usr/include/c++/5/bits/stl_iterator.h **** #else
 448:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 449:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 450:/usr/include/c++/5/bits/stl_iterator.h ****       {
 451:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_back(__value);
 452:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 453:/usr/include/c++/5/bits/stl_iterator.h ****       }
 454:/usr/include/c++/5/bits/stl_iterator.h **** 
 455:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 456:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 457:/usr/include/c++/5/bits/stl_iterator.h ****       {
 458:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 459:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 460:/usr/include/c++/5/bits/stl_iterator.h ****       }
 461:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 462:/usr/include/c++/5/bits/stl_iterator.h **** 
 463:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.
 464:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 465:/usr/include/c++/5/bits/stl_iterator.h ****       operator*()
 466:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 467:/usr/include/c++/5/bits/stl_iterator.h **** 
 468:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 469:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 470:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
 471:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 472:/usr/include/c++/5/bits/stl_iterator.h **** 
 473:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 474:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator
 475:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
 476:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 477:/usr/include/c++/5/bits/stl_iterator.h ****     };
 478:/usr/include/c++/5/bits/stl_iterator.h **** 
 479:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 480:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 481:/usr/include/c++/5/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 482:/usr/include/c++/5/bits/stl_iterator.h ****    *
 483:/usr/include/c++/5/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 484:/usr/include/c++/5/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 485:/usr/include/c++/5/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 486:/usr/include/c++/5/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 487:/usr/include/c++/5/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 488:/usr/include/c++/5/bits/stl_iterator.h ****    *  types for you.
 489:/usr/include/c++/5/bits/stl_iterator.h ****   */
 490:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 491:/usr/include/c++/5/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
 492:/usr/include/c++/5/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 493:/usr/include/c++/5/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 494:/usr/include/c++/5/bits/stl_iterator.h **** 
 495:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 496:/usr/include/c++/5/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 497:/usr/include/c++/5/bits/stl_iterator.h ****    *
 498:/usr/include/c++/5/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 499:/usr/include/c++/5/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 500:/usr/include/c++/5/bits/stl_iterator.h ****    *  push_front.
 501:/usr/include/c++/5/bits/stl_iterator.h ****    *
 502:/usr/include/c++/5/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 503:/usr/include/c++/5/bits/stl_iterator.h ****    *  save typing.
 504:/usr/include/c++/5/bits/stl_iterator.h ****   */
 505:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 506:/usr/include/c++/5/bits/stl_iterator.h ****     class front_insert_iterator
 507:/usr/include/c++/5/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 508:/usr/include/c++/5/bits/stl_iterator.h ****     {
 509:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 510:/usr/include/c++/5/bits/stl_iterator.h ****       _Container* container;
 511:/usr/include/c++/5/bits/stl_iterator.h **** 
 512:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 513:/usr/include/c++/5/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 514:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Container          container_type;
 515:/usr/include/c++/5/bits/stl_iterator.h **** 
 516:/usr/include/c++/5/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 517:/usr/include/c++/5/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x) : container(&__x) { }
 518:/usr/include/c++/5/bits/stl_iterator.h **** 
 519:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 520:/usr/include/c++/5/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 521:/usr/include/c++/5/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 522:/usr/include/c++/5/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 523:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 524:/usr/include/c++/5/bits/stl_iterator.h ****        *
 525:/usr/include/c++/5/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 526:/usr/include/c++/5/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 527:/usr/include/c++/5/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 528:/usr/include/c++/5/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 529:/usr/include/c++/5/bits/stl_iterator.h ****       */
 530:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus < 201103L
 531:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 532:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 533:/usr/include/c++/5/bits/stl_iterator.h ****       {
 534:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_front(__value);
 535:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 536:/usr/include/c++/5/bits/stl_iterator.h ****       }
 537:/usr/include/c++/5/bits/stl_iterator.h **** #else
 538:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 539:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 540:/usr/include/c++/5/bits/stl_iterator.h ****       {
 541:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_front(__value);
 542:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 543:/usr/include/c++/5/bits/stl_iterator.h ****       }
 544:/usr/include/c++/5/bits/stl_iterator.h **** 
 545:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 546:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 547:/usr/include/c++/5/bits/stl_iterator.h ****       {
 548:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 549:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 550:/usr/include/c++/5/bits/stl_iterator.h ****       }
 551:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 552:/usr/include/c++/5/bits/stl_iterator.h **** 
 553:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.
 554:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 555:/usr/include/c++/5/bits/stl_iterator.h ****       operator*()
 556:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 557:/usr/include/c++/5/bits/stl_iterator.h **** 
 558:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 559:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 560:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
 561:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 562:/usr/include/c++/5/bits/stl_iterator.h **** 
 563:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 564:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator
 565:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
 566:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 567:/usr/include/c++/5/bits/stl_iterator.h ****     };
 568:/usr/include/c++/5/bits/stl_iterator.h **** 
 569:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 570:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 571:/usr/include/c++/5/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 572:/usr/include/c++/5/bits/stl_iterator.h ****    *
 573:/usr/include/c++/5/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 574:/usr/include/c++/5/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 575:/usr/include/c++/5/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 576:/usr/include/c++/5/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 577:/usr/include/c++/5/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 578:/usr/include/c++/5/bits/stl_iterator.h ****    *  types for you.
 579:/usr/include/c++/5/bits/stl_iterator.h ****   */
 580:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 581:/usr/include/c++/5/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 582:/usr/include/c++/5/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 583:/usr/include/c++/5/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 584:/usr/include/c++/5/bits/stl_iterator.h **** 
 585:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 586:/usr/include/c++/5/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:/usr/include/c++/5/bits/stl_iterator.h ****    *
 588:/usr/include/c++/5/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:/usr/include/c++/5/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 590:/usr/include/c++/5/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 591:/usr/include/c++/5/bits/stl_iterator.h ****    *  position.
 592:/usr/include/c++/5/bits/stl_iterator.h ****    *
 593:/usr/include/c++/5/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 594:/usr/include/c++/5/bits/stl_iterator.h ****    *  %iterator's position.)
 595:/usr/include/c++/5/bits/stl_iterator.h ****    *
 596:/usr/include/c++/5/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 597:/usr/include/c++/5/bits/stl_iterator.h ****    *  save typing.
 598:/usr/include/c++/5/bits/stl_iterator.h ****   */
 599:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 600:/usr/include/c++/5/bits/stl_iterator.h ****     class insert_iterator
 601:/usr/include/c++/5/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 602:/usr/include/c++/5/bits/stl_iterator.h ****     {
 603:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 604:/usr/include/c++/5/bits/stl_iterator.h ****       _Container* container;
 605:/usr/include/c++/5/bits/stl_iterator.h ****       typename _Container::iterator iter;
 606:/usr/include/c++/5/bits/stl_iterator.h **** 
 607:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 608:/usr/include/c++/5/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 609:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Container          container_type;
 610:/usr/include/c++/5/bits/stl_iterator.h **** 
 611:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 612:/usr/include/c++/5/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 613:/usr/include/c++/5/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 614:/usr/include/c++/5/bits/stl_iterator.h ****       */
 615:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 616:/usr/include/c++/5/bits/stl_iterator.h ****       : container(&__x), iter(__i) {}
 617:/usr/include/c++/5/bits/stl_iterator.h **** 
 618:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 619:/usr/include/c++/5/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 620:/usr/include/c++/5/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 621:/usr/include/c++/5/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 622:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 623:/usr/include/c++/5/bits/stl_iterator.h ****        *
 624:/usr/include/c++/5/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 625:/usr/include/c++/5/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 626:/usr/include/c++/5/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 627:/usr/include/c++/5/bits/stl_iterator.h ****        *
 628:/usr/include/c++/5/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 629:/usr/include/c++/5/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
 630:/usr/include/c++/5/bits/stl_iterator.h ****        *  @code
 631:/usr/include/c++/5/bits/stl_iterator.h ****        *     // vector v contains A and Z
 632:/usr/include/c++/5/bits/stl_iterator.h ****        *
 633:/usr/include/c++/5/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 634:/usr/include/c++/5/bits/stl_iterator.h ****        *     i = 1;
 635:/usr/include/c++/5/bits/stl_iterator.h ****        *     i = 2;
 636:/usr/include/c++/5/bits/stl_iterator.h ****        *     i = 3;
 637:/usr/include/c++/5/bits/stl_iterator.h ****        *
 638:/usr/include/c++/5/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 639:/usr/include/c++/5/bits/stl_iterator.h ****        *  @endcode
 640:/usr/include/c++/5/bits/stl_iterator.h ****       */
 641:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus < 201103L
 642:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 643:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 644:/usr/include/c++/5/bits/stl_iterator.h ****       {
 645:/usr/include/c++/5/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 646:/usr/include/c++/5/bits/stl_iterator.h **** 	++iter;
 647:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 648:/usr/include/c++/5/bits/stl_iterator.h ****       }
 649:/usr/include/c++/5/bits/stl_iterator.h **** #else
 650:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 651:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 652:/usr/include/c++/5/bits/stl_iterator.h ****       {
 653:/usr/include/c++/5/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 654:/usr/include/c++/5/bits/stl_iterator.h **** 	++iter;
 655:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 656:/usr/include/c++/5/bits/stl_iterator.h ****       }
 657:/usr/include/c++/5/bits/stl_iterator.h **** 
 658:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 659:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 660:/usr/include/c++/5/bits/stl_iterator.h ****       {
 661:/usr/include/c++/5/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 662:/usr/include/c++/5/bits/stl_iterator.h **** 	++iter;
 663:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 664:/usr/include/c++/5/bits/stl_iterator.h ****       }
 665:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 666:/usr/include/c++/5/bits/stl_iterator.h **** 
 667:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.
 668:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 669:/usr/include/c++/5/bits/stl_iterator.h ****       operator*()
 670:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 671:/usr/include/c++/5/bits/stl_iterator.h **** 
 672:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 673:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 674:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
 675:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 676:/usr/include/c++/5/bits/stl_iterator.h **** 
 677:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 678:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 679:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
 680:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 681:/usr/include/c++/5/bits/stl_iterator.h ****     };
 682:/usr/include/c++/5/bits/stl_iterator.h **** 
 683:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 684:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 685:/usr/include/c++/5/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 686:/usr/include/c++/5/bits/stl_iterator.h ****    *
 687:/usr/include/c++/5/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 688:/usr/include/c++/5/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 689:/usr/include/c++/5/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 690:/usr/include/c++/5/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 691:/usr/include/c++/5/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 692:/usr/include/c++/5/bits/stl_iterator.h ****    *  types for you.
 693:/usr/include/c++/5/bits/stl_iterator.h ****   */
 694:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 695:/usr/include/c++/5/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 696:/usr/include/c++/5/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 697:/usr/include/c++/5/bits/stl_iterator.h ****     {
 698:/usr/include/c++/5/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 699:/usr/include/c++/5/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 700:/usr/include/c++/5/bits/stl_iterator.h ****     }
 701:/usr/include/c++/5/bits/stl_iterator.h **** 
 702:/usr/include/c++/5/bits/stl_iterator.h ****   // @} group iterators
 703:/usr/include/c++/5/bits/stl_iterator.h **** 
 704:/usr/include/c++/5/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 705:/usr/include/c++/5/bits/stl_iterator.h **** } // namespace
 706:/usr/include/c++/5/bits/stl_iterator.h **** 
 707:/usr/include/c++/5/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 708:/usr/include/c++/5/bits/stl_iterator.h **** {
 709:/usr/include/c++/5/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 710:/usr/include/c++/5/bits/stl_iterator.h **** 
 711:/usr/include/c++/5/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 712:/usr/include/c++/5/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 713:/usr/include/c++/5/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 714:/usr/include/c++/5/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 715:/usr/include/c++/5/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 716:/usr/include/c++/5/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 717:/usr/include/c++/5/bits/stl_iterator.h ****   // _Iterator parameter is the same.
 718:/usr/include/c++/5/bits/stl_iterator.h ****   using std::iterator_traits;
 719:/usr/include/c++/5/bits/stl_iterator.h ****   using std::iterator;
 720:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 721:/usr/include/c++/5/bits/stl_iterator.h ****     class __normal_iterator
 722:/usr/include/c++/5/bits/stl_iterator.h ****     {
 723:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 724:/usr/include/c++/5/bits/stl_iterator.h ****       _Iterator _M_current;
 725:/usr/include/c++/5/bits/stl_iterator.h **** 
 726:/usr/include/c++/5/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 727:/usr/include/c++/5/bits/stl_iterator.h **** 
 728:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 729:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 730:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 731:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 732:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 733:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 734:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 735:/usr/include/c++/5/bits/stl_iterator.h **** 
 736:/usr/include/c++/5/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 737:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 738:/usr/include/c++/5/bits/stl_iterator.h **** 
 739:/usr/include/c++/5/bits/stl_iterator.h ****       explicit
 740:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 741:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(__i) { }
 742:/usr/include/c++/5/bits/stl_iterator.h **** 
 743:/usr/include/c++/5/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
 744:/usr/include/c++/5/bits/stl_iterator.h ****       template<typename _Iter>
 745:/usr/include/c++/5/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 746:/usr/include/c++/5/bits/stl_iterator.h **** 			  typename __enable_if<
 747:/usr/include/c++/5/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 748:/usr/include/c++/5/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 749:/usr/include/c++/5/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 750:/usr/include/c++/5/bits/stl_iterator.h **** 
 751:/usr/include/c++/5/bits/stl_iterator.h ****       // Forward iterator requirements
 752:/usr/include/c++/5/bits/stl_iterator.h ****       reference
 753:/usr/include/c++/5/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 754:/usr/include/c++/5/bits/stl_iterator.h ****       { return *_M_current; }
 755:/usr/include/c++/5/bits/stl_iterator.h **** 
 756:/usr/include/c++/5/bits/stl_iterator.h ****       pointer
 757:/usr/include/c++/5/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 758:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 759:/usr/include/c++/5/bits/stl_iterator.h **** 
 760:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator&
 761:/usr/include/c++/5/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 762:/usr/include/c++/5/bits/stl_iterator.h ****       {
 763:/usr/include/c++/5/bits/stl_iterator.h **** 	++_M_current;
 764:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 765:/usr/include/c++/5/bits/stl_iterator.h ****       }
 766:/usr/include/c++/5/bits/stl_iterator.h **** 
 767:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator
 768:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 769:/usr/include/c++/5/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 770:/usr/include/c++/5/bits/stl_iterator.h **** 
 771:/usr/include/c++/5/bits/stl_iterator.h ****       // Bidirectional iterator requirements
 772:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator&
 773:/usr/include/c++/5/bits/stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 774:/usr/include/c++/5/bits/stl_iterator.h ****       {
 775:/usr/include/c++/5/bits/stl_iterator.h **** 	--_M_current;
 776:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 777:/usr/include/c++/5/bits/stl_iterator.h ****       }
 778:/usr/include/c++/5/bits/stl_iterator.h **** 
 779:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator
 780:/usr/include/c++/5/bits/stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 781:/usr/include/c++/5/bits/stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 782:/usr/include/c++/5/bits/stl_iterator.h **** 
 783:/usr/include/c++/5/bits/stl_iterator.h ****       // Random access iterator requirements
 784:/usr/include/c++/5/bits/stl_iterator.h ****       reference
 785:/usr/include/c++/5/bits/stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 786:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current[__n]; }
 787:/usr/include/c++/5/bits/stl_iterator.h **** 
 788:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator&
 789:/usr/include/c++/5/bits/stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 790:/usr/include/c++/5/bits/stl_iterator.h ****       { _M_current += __n; return *this; }
 791:/usr/include/c++/5/bits/stl_iterator.h **** 
 792:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator
 793:/usr/include/c++/5/bits/stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 794:/usr/include/c++/5/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 795:/usr/include/c++/5/bits/stl_iterator.h **** 
 796:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator&
 797:/usr/include/c++/5/bits/stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 798:/usr/include/c++/5/bits/stl_iterator.h ****       { _M_current -= __n; return *this; }
 799:/usr/include/c++/5/bits/stl_iterator.h **** 
 800:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator
 801:/usr/include/c++/5/bits/stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 1654              		.loc 9 801 0
 1655              		.cfi_startproc
 1656 0000 55       		pushq	%rbp
 1657              		.cfi_def_cfa_offset 16
 1658              		.cfi_offset 6, -16
 1659 0001 4889E5   		movq	%rsp, %rbp
 1660              		.cfi_def_cfa_register 6
 1661 0004 4883EC30 		subq	$48, %rsp
 1662 0008 48897DD8 		movq	%rdi, -40(%rbp)
 1663 000c 488975D0 		movq	%rsi, -48(%rbp)
 1664              		.loc 9 801 0
 1665 0010 64488B04 		movq	%fs:40, %rax
 1665      25280000 
 1665      00
 1666 0019 488945F8 		movq	%rax, -8(%rbp)
 1667 001d 31C0     		xorl	%eax, %eax
 802:/usr/include/c++/5/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 1668              		.loc 9 802 0
 1669 001f 488B45D8 		movq	-40(%rbp), %rax
 1670 0023 488B00   		movq	(%rax), %rax
 1671 0026 488B55D0 		movq	-48(%rbp), %rdx
 1672 002a 48C1E207 		salq	$7, %rdx
 1673 002e 48F7DA   		negq	%rdx
 1674 0031 4801D0   		addq	%rdx, %rax
 1675 0034 488945F0 		movq	%rax, -16(%rbp)
 1676 0038 488D55F0 		leaq	-16(%rbp), %rdx
 1677 003c 488D45E0 		leaq	-32(%rbp), %rax
 1678 0040 4889D6   		movq	%rdx, %rsi
 1679 0043 4889C7   		movq	%rax, %rdi
 1680 0046 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC1ERKS
 1680      00
 1681 004b 488B45E0 		movq	-32(%rbp), %rax
 1682 004f 488B4DF8 		movq	-8(%rbp), %rcx
 1683 0053 6448330C 		xorq	%fs:40, %rcx
 1683      25280000 
 1683      00
 1684 005c 7405     		je	.L82
 1685 005e E8000000 		call	__stack_chk_fail@PLT
 1685      00
 1686              	.L82:
 1687 0063 C9       		leave
 1688              		.cfi_def_cfa 7, 8
 1689 0064 C3       		ret
 1690              		.cfi_endproc
 1691              	.LFE920:
 1693              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS
 1694              		.align 2
 1695              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEdeEv
 1697              	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEdeEv:
 1698              	.LFB921:
 753:/usr/include/c++/5/bits/stl_iterator.h ****       { return *_M_current; }
 1699              		.loc 9 753 0
 1700              		.cfi_startproc
 1701 0000 55       		pushq	%rbp
 1702              		.cfi_def_cfa_offset 16
 1703              		.cfi_offset 6, -16
 1704 0001 4889E5   		movq	%rsp, %rbp
 1705              		.cfi_def_cfa_register 6
 1706 0004 48897DF8 		movq	%rdi, -8(%rbp)
 754:/usr/include/c++/5/bits/stl_iterator.h **** 
 1707              		.loc 9 754 0
 1708 0008 488B45F8 		movq	-8(%rbp), %rax
 1709 000c 488B00   		movq	(%rax), %rax
 1710 000f 5D       		popq	%rbp
 1711              		.cfi_def_cfa 7, 8
 1712 0010 C3       		ret
 1713              		.cfi_endproc
 1714              	.LFE921:
 1716              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 1717              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 1719              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9c
 1720              	.LFB936:
 188:/usr/include/c++/5/ext/alloc_traits.h ****       { __a.construct(__p, __arg); }
 1721              		.loc 7 188 0
 1722              		.cfi_startproc
 1723 0000 55       		pushq	%rbp
 1724              		.cfi_def_cfa_offset 16
 1725              		.cfi_offset 6, -16
 1726 0001 4889E5   		movq	%rsp, %rbp
 1727              		.cfi_def_cfa_register 6
 1728 0004 4883EC20 		subq	$32, %rsp
 1729 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1730 000c 488975F0 		movq	%rsi, -16(%rbp)
 1731 0010 488955E8 		movq	%rdx, -24(%rbp)
 1732              		.loc 7 189 0
 1733 0014 488B55E8 		movq	-24(%rbp), %rdx
 1734 0018 488B4DF0 		movq	-16(%rbp), %rcx
 1735 001c 488B45F8 		movq	-8(%rbp), %rax
 1736 0020 4889CE   		movq	%rcx, %rsi
 1737 0023 4889C7   		movq	%rax, %rdi
 1738 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9
 1738      00
 1739 002b 90       		nop
 1740 002c C9       		leave
 1741              		.cfi_def_cfa 7, 8
 1742 002d C3       		ret
 1743              		.cfi_endproc
 1744              	.LFE936:
 1746              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS6_,"axG",@pr
 1747              		.align 2
 1748              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS6_
 1750              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS6_:
 1751              	.LFB939:
  96:/usr/include/c++/5/bits/stl_pair.h ****     {
 1752              		.loc 4 96 0
 1753              		.cfi_startproc
 1754 0000 55       		pushq	%rbp
 1755              		.cfi_def_cfa_offset 16
 1756              		.cfi_offset 6, -16
 1757 0001 4889E5   		movq	%rsp, %rbp
 1758              		.cfi_def_cfa_register 6
 1759 0004 4883EC10 		subq	$16, %rsp
 1760 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1761 000c 488975F0 		movq	%rsi, -16(%rbp)
 1762              	.LBB20:
  96:/usr/include/c++/5/bits/stl_pair.h ****     {
 1763              		.loc 4 96 0
 1764 0010 488B45F0 		movq	-16(%rbp), %rax
 1765 0014 8B10     		movl	(%rax), %edx
 1766 0016 488B45F8 		movq	-8(%rbp), %rax
 1767 001a 8910     		movl	%edx, (%rax)
 1768 001c 488B45F0 		movq	-16(%rbp), %rax
 1769 0020 488D5008 		leaq	8(%rax), %rdx
 1770 0024 488B45F8 		movq	-8(%rbp), %rax
 1771 0028 4883C008 		addq	$8, %rax
 1772 002c 4889D6   		movq	%rdx, %rsi
 1773 002f 4889C7   		movq	%rax, %rdi
 1774 0032 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@PLT
 1774      00
 1775              	.LBE20:
 1776 0037 90       		nop
 1777 0038 C9       		leave
 1778              		.cfi_def_cfa 7, 8
 1779 0039 C3       		ret
 1780              		.cfi_endproc
 1781              	.LFE939:
 1783              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_
 1784              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_,_ZNSt4pairIiNSt7__c
 1785              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_,"axG",@pr
 1786              		.align 2
 1787              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_
 1789              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_:
 1790              	.LFB941:
  96:/usr/include/c++/5/bits/stl_pair.h ****     {
 1791              		.loc 4 96 0
 1792              		.cfi_startproc
 1793 0000 55       		pushq	%rbp
 1794              		.cfi_def_cfa_offset 16
 1795              		.cfi_offset 6, -16
 1796 0001 4889E5   		movq	%rsp, %rbp
 1797              		.cfi_def_cfa_register 6
 1798 0004 4883EC10 		subq	$16, %rsp
 1799 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1800 000c 488975F0 		movq	%rsi, -16(%rbp)
  96:/usr/include/c++/5/bits/stl_pair.h ****     {
 1801              		.loc 4 96 0
 1802 0010 488B45F0 		movq	-16(%rbp), %rax
 1803 0014 8B10     		movl	(%rax), %edx
 1804 0016 488B45F8 		movq	-8(%rbp), %rax
 1805 001a 8910     		movl	%edx, (%rax)
 1806 001c 488B45F0 		movq	-16(%rbp), %rax
 1807 0020 488D5008 		leaq	8(%rax), %rdx
 1808 0024 488B45F8 		movq	-8(%rbp), %rax
 1809 0028 4883C008 		addq	$8, %rax
 1810 002c 4889D6   		movq	%rdx, %rsi
 1811 002f 4889C7   		movq	%rax, %rdi
 1812 0032 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@PLT
 1812      00
 1813 0037 488B45F8 		movq	-8(%rbp), %rax
 1814 003b C9       		leave
 1815              		.cfi_def_cfa 7, 8
 1816 003c C3       		ret
 1817              		.cfi_endproc
 1818              	.LFE941:
 1820              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 1821              		.align 2
 1822              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_inse
 1824              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_insert_auxE
 1825              	.LFB937:
 326:/usr/include/c++/5/bits/vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 1826              		.loc 8 326 0
 1827              		.cfi_startproc
 1828              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1829              		.cfi_lsda 0x1b,.LLSDA937
 1830 0000 55       		pushq	%rbp
 1831              		.cfi_def_cfa_offset 16
 1832              		.cfi_offset 6, -16
 1833 0001 4889E5   		movq	%rsp, %rbp
 1834              		.cfi_def_cfa_register 6
 1835 0004 4154     		pushq	%r12
 1836 0006 53       		pushq	%rbx
 1837 0007 4883C480 		addq	$-128, %rsp
 1838              		.cfi_offset 12, -24
 1839              		.cfi_offset 3, -32
 1840 000b 48897D88 		movq	%rdi, -120(%rbp)
 1841 000f 48897580 		movq	%rsi, -128(%rbp)
 1842 0013 48899578 		movq	%rdx, -136(%rbp)
 1842      FFFFFF
 326:/usr/include/c++/5/bits/vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 1843              		.loc 8 326 0
 1844 001a 64488B04 		movq	%fs:40, %rax
 1844      25280000 
 1844      00
 1845 0023 488945E8 		movq	%rax, -24(%rbp)
 1846 0027 31C0     		xorl	%eax, %eax
 1847              	.LBB21:
 330:/usr/include/c++/5/bits/vector.tcc **** 	{
 1848              		.loc 8 330 0
 1849 0029 488B4588 		movq	-120(%rbp), %rax
 1850 002d 488B5008 		movq	8(%rax), %rdx
 1851 0031 488B4588 		movq	-120(%rbp), %rax
 1852 0035 488B4010 		movq	16(%rax), %rax
 1853 0039 4839C2   		cmpq	%rax, %rdx
 1854 003c 0F84B100 		je	.L90
 1854      0000
 1855              	.LBB22:
 333:/usr/include/c++/5/bits/vector.tcc **** 				                   - 1)));
 1856              		.loc 8 333 0
 1857 0042 488B4588 		movq	-120(%rbp), %rax
 1858 0046 488B4008 		movq	8(%rax), %rax
 332:/usr/include/c++/5/bits/vector.tcc **** 			           _GLIBCXX_MOVE(*(this->_M_impl._M_finish
 1859              		.loc 8 332 0
 1860 004a 488D50D8 		leaq	-40(%rax), %rdx
 1861 004e 488B4588 		movq	-120(%rbp), %rax
 1862 0052 488B4808 		movq	8(%rax), %rcx
 1863 0056 488B4588 		movq	-120(%rbp), %rax
 1864 005a 4889CE   		movq	%rcx, %rsi
 1865 005d 4889C7   		movq	%rax, %rdi
 1866              	.LEHB35:
 1867 0060 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 1867      00
 335:/usr/include/c++/5/bits/vector.tcc **** #if __cplusplus < 201103L
 1868              		.loc 8 335 0
 1869 0065 488B4588 		movq	-120(%rbp), %rax
 1870 0069 488B4008 		movq	8(%rax), %rax
 1871 006d 488D5028 		leaq	40(%rax), %rdx
 1872 0071 488B4588 		movq	-120(%rbp), %rax
 1873 0075 48895008 		movq	%rdx, 8(%rax)
 337:/usr/include/c++/5/bits/vector.tcc **** #endif
 1874              		.loc 8 337 0
 1875 0079 488B9578 		movq	-136(%rbp), %rdx
 1875      FFFFFF
 1876 0080 488D45C0 		leaq	-64(%rbp), %rax
 1877 0084 4889D6   		movq	%rdx, %rsi
 1878 0087 4889C7   		movq	%rax, %rdi
 1879 008a E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_@PLT
 1879      00
 1880              	.LEHE35:
 339:/usr/include/c++/5/bits/vector.tcc **** 				  this->_M_impl._M_finish - 2,
 1881              		.loc 8 339 0
 1882 008f 488B4588 		movq	-120(%rbp), %rax
 1883 0093 488B4008 		movq	8(%rax), %rax
 1884 0097 4C8D60D8 		leaq	-40(%rax), %r12
 1885 009b 488B4588 		movq	-120(%rbp), %rax
 1886 009f 488B4008 		movq	8(%rax), %rax
 1887 00a3 488D58B0 		leaq	-80(%rax), %rbx
 1888 00a7 488D4580 		leaq	-128(%rbp), %rax
 1889 00ab 4889C7   		movq	%rax, %rdi
 1890 00ae E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 1890      00
 1891 00b3 488B00   		movq	(%rax), %rax
 1892 00b6 4C89E2   		movq	%r12, %rdx
 1893 00b9 4889DE   		movq	%rbx, %rsi
 1894 00bc 4889C7   		movq	%rax, %rdi
 1895              	.LEHB36:
 1896 00bf E8000000 		call	_ZSt13copy_backwardIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_S
 1896      00
 343:/usr/include/c++/5/bits/vector.tcc **** #else
 1897              		.loc 8 343 0
 1898 00c4 488D4580 		leaq	-128(%rbp), %rax
 1899 00c8 4889C7   		movq	%rax, %rdi
 1900 00cb E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 1900      00
 1901 00d0 4889C2   		movq	%rax, %rdx
 1902 00d3 488D45C0 		leaq	-64(%rbp), %rax
 1903 00d7 4889C6   		movq	%rax, %rsi
 1904 00da 4889D7   		movq	%rdx, %rdi
 1905 00dd E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_@PLT
 1905      00
 1906              	.LEHE36:
 337:/usr/include/c++/5/bits/vector.tcc **** #endif
 1907              		.loc 8 337 0
 1908 00e2 488D45C0 		leaq	-64(%rbp), %rax
 1909 00e6 4889C7   		movq	%rax, %rdi
 1910              	.LEHB37:
 1911 00e9 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev@PLT
 1911      00
 1912              	.LBE22:
 1913              	.LBE21:
 1914              		.loc 8 401 0
 1915 00ee E96C0200 		jmp	.L89
 1915      00
 1916              	.L90:
 1917              	.LBB26:
 1918              	.LBB23:
 351:/usr/include/c++/5/bits/vector.tcc **** 	  const size_type __elems_before = __position - begin();
 1919              		.loc 8 351 0
 1920 00f3 488B4588 		movq	-120(%rbp), %rax
 1921 00f7 488D1500 		leaq	.LC0(%rip), %rdx
 1921      000000
 1922 00fe BE010000 		movl	$1, %esi
 1922      00
 1923 0103 4889C7   		movq	%rax, %rdi
 1924 0106 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_chec
 1924      00
 1925 010b 488945A8 		movq	%rax, -88(%rbp)
 352:/usr/include/c++/5/bits/vector.tcc **** 	  pointer __new_start(this->_M_allocate(__len));
 1926              		.loc 8 352 0
 1927 010f 488B4588 		movq	-120(%rbp), %rax
 1928 0113 4889C7   		movq	%rax, %rdi
 1929 0116 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv@P
 1929      00
 1930 011b 48894590 		movq	%rax, -112(%rbp)
 1931 011f 488D5590 		leaq	-112(%rbp), %rdx
 1932 0123 488D4580 		leaq	-128(%rbp), %rax
 1933 0127 4889D6   		movq	%rdx, %rsi
 1934 012a 4889C7   		movq	%rax, %rdi
 1935 012d E8000000 		call	_ZN9__gnu_cxxmiIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_S
 1935      00
 1936 0132 488945B0 		movq	%rax, -80(%rbp)
 353:/usr/include/c++/5/bits/vector.tcc **** 	  pointer __new_finish(__new_start);
 1937              		.loc 8 353 0
 1938 0136 488B4588 		movq	-120(%rbp), %rax
 1939 013a 488B55A8 		movq	-88(%rbp), %rdx
 1940 013e 4889D6   		movq	%rdx, %rsi
 1941 0141 4889C7   		movq	%rax, %rdi
 1942 0144 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_
 1942      00
 1943              	.LEHE37:
 1944 0149 488945B8 		movq	%rax, -72(%rbp)
 354:/usr/include/c++/5/bits/vector.tcc **** 	  __try
 1945              		.loc 8 354 0
 1946 014d 488B45B8 		movq	-72(%rbp), %rax
 1947 0151 488945A0 		movq	%rax, -96(%rbp)
 361:/usr/include/c++/5/bits/vector.tcc **** 		                       __new_start + __elems_before,
 1948              		.loc 8 361 0
 1949 0155 488B55B0 		movq	-80(%rbp), %rdx
 1950 0159 4889D0   		movq	%rdx, %rax
 1951 015c 48C1E002 		salq	$2, %rax
 1952 0160 4801D0   		addq	%rdx, %rax
 1953 0163 48C1E003 		salq	$3, %rax
 1954 0167 4889C2   		movq	%rax, %rdx
 1955 016a 488B45B8 		movq	-72(%rbp), %rax
 1956 016e 488D0C02 		leaq	(%rdx,%rax), %rcx
 1957 0172 488B4588 		movq	-120(%rbp), %rax
 1958 0176 488B9578 		movq	-136(%rbp), %rdx
 1958      FFFFFF
 1959 017d 4889CE   		movq	%rcx, %rsi
 1960 0180 4889C7   		movq	%rax, %rdi
 1961              	.LEHB38:
 1962 0183 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 1962      00
 368:/usr/include/c++/5/bits/vector.tcc **** 
 1963              		.loc 8 368 0
 1964 0188 48C745A0 		movq	$0, -96(%rbp)
 1964      00000000 
 373:/usr/include/c++/5/bits/vector.tcc **** 
 1965              		.loc 8 373 0
 1966 0190 488B4588 		movq	-120(%rbp), %rax
 1967 0194 4889C7   		movq	%rax, %rdi
 1968 0197 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 1968      00
 1969 019c 4889C3   		movq	%rax, %rbx
 372:/usr/include/c++/5/bits/vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 1970              		.loc 8 372 0
 1971 019f 488D4580 		leaq	-128(%rbp), %rax
 1972 01a3 4889C7   		movq	%rax, %rdi
 1973 01a6 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 1973      00
 1974 01ab 488B30   		movq	(%rax), %rsi
 1975 01ae 488B4588 		movq	-120(%rbp), %rax
 1976 01b2 488B00   		movq	(%rax), %rax
 370:/usr/include/c++/5/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 1977              		.loc 8 370 0
 1978 01b5 488B55B8 		movq	-72(%rbp), %rdx
 1979 01b9 4889D9   		movq	%rbx, %rcx
 1980 01bc 4889C7   		movq	%rax, %rdi
 1981 01bf E8000000 		call	_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traits
 1981      00
 1982 01c4 488945A0 		movq	%rax, -96(%rbp)
 375:/usr/include/c++/5/bits/vector.tcc **** 
 1983              		.loc 8 375 0
 1984 01c8 488345A0 		addq	$40, -96(%rbp)
 1984      28
 380:/usr/include/c++/5/bits/vector.tcc **** 	    }
 1985              		.loc 8 380 0
 1986 01cd 488B4588 		movq	-120(%rbp), %rax
 1987 01d1 4889C7   		movq	%rax, %rdi
 1988 01d4 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 1988      00
 1989 01d9 4989C4   		movq	%rax, %r12
 379:/usr/include/c++/5/bits/vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 1990              		.loc 8 379 0
 1991 01dc 488B4588 		movq	-120(%rbp), %rax
 1992 01e0 488B5808 		movq	8(%rax), %rbx
 1993 01e4 488D4580 		leaq	-128(%rbp), %rax
 1994 01e8 4889C7   		movq	%rax, %rdi
 1995 01eb E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 1995      00
 1996 01f0 488B00   		movq	(%rax), %rax
 377:/usr/include/c++/5/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 1997              		.loc 8 377 0
 1998 01f3 488B55A0 		movq	-96(%rbp), %rdx
 1999 01f7 4C89E1   		movq	%r12, %rcx
 2000 01fa 4889DE   		movq	%rbx, %rsi
 2001 01fd 4889C7   		movq	%rax, %rdi
 2002 0200 E8000000 		call	_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traits
 2002      00
 2003              	.LEHE38:
 377:/usr/include/c++/5/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 2004              		.loc 8 377 0 is_stmt 0 discriminator 1
 2005 0205 488945A0 		movq	%rax, -96(%rbp)
 393:/usr/include/c++/5/bits/vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
 2006              		.loc 8 393 0 is_stmt 1 discriminator 1
 2007 0209 488B4588 		movq	-120(%rbp), %rax
 2008 020d 4889C7   		movq	%rax, %rdi
 2009 0210 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 2009      00
 2010 0215 4889C2   		movq	%rax, %rdx
 392:/usr/include/c++/5/bits/vector.tcc **** 			_M_get_Tp_allocator());
 2011              		.loc 8 392 0 discriminator 1
 2012 0218 488B4588 		movq	-120(%rbp), %rax
 2013 021c 488B4808 		movq	8(%rax), %rcx
 2014 0220 488B4588 		movq	-120(%rbp), %rax
 2015 0224 488B00   		movq	(%rax), %rax
 2016 0227 4889CE   		movq	%rcx, %rsi
 2017 022a 4889C7   		movq	%rax, %rdi
 2018              	.LEHB39:
 2019 022d E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 2019      00
 396:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_start = __new_start;
 2020              		.loc 8 396 0 discriminator 1
 2021 0232 488B4588 		movq	-120(%rbp), %rax
 2022 0236 488B4010 		movq	16(%rax), %rax
 394:/usr/include/c++/5/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
 2023              		.loc 8 394 0 discriminator 1
 2024 023a 4889C2   		movq	%rax, %rdx
 396:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_start = __new_start;
 2025              		.loc 8 396 0 discriminator 1
 2026 023d 488B4588 		movq	-120(%rbp), %rax
 2027 0241 488B00   		movq	(%rax), %rax
 394:/usr/include/c++/5/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
 2028              		.loc 8 394 0 discriminator 1
 2029 0244 4829C2   		subq	%rax, %rdx
 2030 0247 4889D0   		movq	%rdx, %rax
 2031 024a 48C1F803 		sarq	$3, %rax
 2032 024e 4889C2   		movq	%rax, %rdx
 2033 0251 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 2033      CCCCCCCC 
 2033      CCCC
 2034 025b 480FAFC2 		imulq	%rdx, %rax
 2035 025f 4889C2   		movq	%rax, %rdx
 2036 0262 488B4588 		movq	-120(%rbp), %rax
 2037 0266 488B08   		movq	(%rax), %rcx
 2038 0269 488B4588 		movq	-120(%rbp), %rax
 2039 026d 4889CE   		movq	%rcx, %rsi
 2040 0270 4889C7   		movq	%rax, %rdi
 2041 0273 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 2041      00
 2042              	.LEHE39:
 397:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_finish = __new_finish;
 2043              		.loc 8 397 0 discriminator 1
 2044 0278 488B4588 		movq	-120(%rbp), %rax
 2045 027c 488B55B8 		movq	-72(%rbp), %rdx
 2046 0280 488910   		movq	%rdx, (%rax)
 398:/usr/include/c++/5/bits/vector.tcc **** 	  this->_M_impl._M_end_of_storage = __new_start + __len;
 2047              		.loc 8 398 0 discriminator 1
 2048 0283 488B4588 		movq	-120(%rbp), %rax
 2049 0287 488B55A0 		movq	-96(%rbp), %rdx
 2050 028b 48895008 		movq	%rdx, 8(%rax)
 399:/usr/include/c++/5/bits/vector.tcc **** 	}
 2051              		.loc 8 399 0 discriminator 1
 2052 028f 488B55A8 		movq	-88(%rbp), %rdx
 2053 0293 4889D0   		movq	%rdx, %rax
 2054 0296 48C1E002 		salq	$2, %rax
 2055 029a 4801D0   		addq	%rdx, %rax
 2056 029d 48C1E003 		salq	$3, %rax
 2057 02a1 4889C2   		movq	%rax, %rdx
 2058 02a4 488B45B8 		movq	-72(%rbp), %rax
 2059 02a8 4801C2   		addq	%rax, %rdx
 2060 02ab 488B4588 		movq	-120(%rbp), %rax
 2061 02af 48895010 		movq	%rdx, 16(%rax)
 2062              	.LBE23:
 2063              	.LBE26:
 2064              		.loc 8 401 0 discriminator 1
 2065 02b3 E9A70000 		jmp	.L89
 2065      00
 2066              	.L98:
 2067 02b8 4889C3   		movq	%rax, %rbx
 2068              	.LBB27:
 2069              	.LBB24:
 337:/usr/include/c++/5/bits/vector.tcc **** #endif
 2070              		.loc 8 337 0
 2071 02bb 488D45C0 		leaq	-64(%rbp), %rax
 2072 02bf 4889C7   		movq	%rax, %rdi
 2073 02c2 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev@PLT
 2073      00
 2074 02c7 4889D8   		movq	%rbx, %rax
 2075 02ca 4889C7   		movq	%rax, %rdi
 2076              	.LEHB40:
 2077 02cd E8000000 		call	_Unwind_Resume@PLT
 2077      00
 2078              	.LEHE40:
 2079              	.L99:
 2080              	.LBE24:
 2081              	.LBB25:
 382:/usr/include/c++/5/bits/vector.tcc **** 	    {
 2082              		.loc 8 382 0
 2083 02d2 4889C7   		movq	%rax, %rdi
 2084 02d5 E8000000 		call	__cxa_begin_catch@PLT
 2084      00
 384:/usr/include/c++/5/bits/vector.tcc **** 		_Alloc_traits::destroy(this->_M_impl,
 2085              		.loc 8 384 0
 2086 02da 48837DA0 		cmpq	$0, -96(%rbp)
 2086      00
 2087 02df 752D     		jne	.L94
 385:/usr/include/c++/5/bits/vector.tcc **** 		                       __new_start + __elems_before);
 2088              		.loc 8 385 0
 2089 02e1 488B55B0 		movq	-80(%rbp), %rdx
 2090 02e5 4889D0   		movq	%rdx, %rax
 2091 02e8 48C1E002 		salq	$2, %rax
 2092 02ec 4801D0   		addq	%rdx, %rax
 2093 02ef 48C1E003 		salq	$3, %rax
 2094 02f3 4889C2   		movq	%rax, %rdx
 2095 02f6 488B45B8 		movq	-72(%rbp), %rax
 2096 02fa 4801C2   		addq	%rax, %rdx
 2097 02fd 488B4588 		movq	-120(%rbp), %rax
 2098 0301 4889D6   		movq	%rdx, %rsi
 2099 0304 4889C7   		movq	%rax, %rdi
 2100              	.LEHB41:
 2101 0307 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 2101      00
 2102 030c EB22     		jmp	.L95
 2103              	.L94:
 388:/usr/include/c++/5/bits/vector.tcc **** 	      _M_deallocate(__new_start, __len);
 2104              		.loc 8 388 0
 2105 030e 488B4588 		movq	-120(%rbp), %rax
 2106 0312 4889C7   		movq	%rax, %rdi
 2107 0315 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 2107      00
 2108 031a 4889C2   		movq	%rax, %rdx
 2109 031d 488B4DA0 		movq	-96(%rbp), %rcx
 2110 0321 488B45B8 		movq	-72(%rbp), %rax
 2111 0325 4889CE   		movq	%rcx, %rsi
 2112 0328 4889C7   		movq	%rax, %rdi
 2113 032b E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 2113      00
 2114              	.L95:
 389:/usr/include/c++/5/bits/vector.tcc **** 	      __throw_exception_again;
 2115              		.loc 8 389 0
 2116 0330 488B4588 		movq	-120(%rbp), %rax
 2117 0334 488B55A8 		movq	-88(%rbp), %rdx
 2118 0338 488B4DB8 		movq	-72(%rbp), %rcx
 2119 033c 4889CE   		movq	%rcx, %rsi
 2120 033f 4889C7   		movq	%rax, %rdi
 2121 0342 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 2121      00
 390:/usr/include/c++/5/bits/vector.tcc **** 	    }
 2122              		.loc 8 390 0
 2123 0347 E8000000 		call	__cxa_rethrow@PLT
 2123      00
 2124              	.LEHE41:
 2125              	.L100:
 2126 034c 4889C3   		movq	%rax, %rbx
 382:/usr/include/c++/5/bits/vector.tcc **** 	    {
 2127              		.loc 8 382 0
 2128 034f E8000000 		call	__cxa_end_catch@PLT
 2128      00
 2129 0354 4889D8   		movq	%rbx, %rax
 2130 0357 4889C7   		movq	%rax, %rdi
 2131              	.LEHB42:
 2132 035a E8000000 		call	_Unwind_Resume@PLT
 2132      00
 2133              	.LEHE42:
 2134              	.L89:
 2135              	.LBE25:
 2136              	.LBE27:
 2137              		.loc 8 401 0
 2138 035f 488B45E8 		movq	-24(%rbp), %rax
 2139 0363 64483304 		xorq	%fs:40, %rax
 2139      25280000 
 2139      00
 2140 036c 7405     		je	.L97
 2141 036e E8000000 		call	__stack_chk_fail@PLT
 2141      00
 2142              	.L97:
 2143 0373 4883EC80 		subq	$-128, %rsp
 2144 0377 5B       		popq	%rbx
 2145 0378 415C     		popq	%r12
 2146 037a 5D       		popq	%rbp
 2147              		.cfi_def_cfa 7, 8
 2148 037b C3       		ret
 2149              		.cfi_endproc
 2150              	.LFE937:
 2151              		.section	.gcc_except_table
 2152              		.align 4
 2153              	.LLSDA937:
 2154 00b8 FF       		.byte	0xff
 2155 00b9 9B       		.byte	0x9b
 2156 00ba 35       		.uleb128 .LLSDATT937-.LLSDATTD937
 2157              	.LLSDATTD937:
 2158 00bb 01       		.byte	0x1
 2159 00bc 2B       		.uleb128 .LLSDACSE937-.LLSDACSB937
 2160              	.LLSDACSB937:
 2161 00bd 60       		.uleb128 .LEHB35-.LFB937
 2162 00be 2F       		.uleb128 .LEHE35-.LEHB35
 2163 00bf 00       		.uleb128 0
 2164 00c0 00       		.uleb128 0
 2165 00c1 BF01     		.uleb128 .LEHB36-.LFB937
 2166 00c3 23       		.uleb128 .LEHE36-.LEHB36
 2167 00c4 B805     		.uleb128 .L98-.LFB937
 2168 00c6 00       		.uleb128 0
 2169 00c7 E901     		.uleb128 .LEHB37-.LFB937
 2170 00c9 60       		.uleb128 .LEHE37-.LEHB37
 2171 00ca 00       		.uleb128 0
 2172 00cb 00       		.uleb128 0
 2173 00cc 8303     		.uleb128 .LEHB38-.LFB937
 2174 00ce 8201     		.uleb128 .LEHE38-.LEHB38
 2175 00d0 D205     		.uleb128 .L99-.LFB937
 2176 00d2 01       		.uleb128 0x1
 2177 00d3 AD04     		.uleb128 .LEHB39-.LFB937
 2178 00d5 4B       		.uleb128 .LEHE39-.LEHB39
 2179 00d6 00       		.uleb128 0
 2180 00d7 00       		.uleb128 0
 2181 00d8 CD05     		.uleb128 .LEHB40-.LFB937
 2182 00da 05       		.uleb128 .LEHE40-.LEHB40
 2183 00db 00       		.uleb128 0
 2184 00dc 00       		.uleb128 0
 2185 00dd 8706     		.uleb128 .LEHB41-.LFB937
 2186 00df 45       		.uleb128 .LEHE41-.LEHB41
 2187 00e0 CC06     		.uleb128 .L100-.LFB937
 2188 00e2 00       		.uleb128 0
 2189 00e3 DA06     		.uleb128 .LEHB42-.LFB937
 2190 00e5 05       		.uleb128 .LEHE42-.LEHB42
 2191 00e6 00       		.uleb128 0
 2192 00e7 00       		.uleb128 0
 2193              	.LLSDACSE937:
 2194 00e8 01       		.byte	0x1
 2195 00e9 00       		.byte	0
 2196 00ea 0000     		.align 4
 2197 00ec 00000000 		.long	0
 2198              	
 2199              	.LLSDATT937:
 2200              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 2202              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 2203              		.align 2
 2204              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv
 2206              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv:
 2207              	.LFB942:
 565:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 2208              		.loc 5 565 0
 2209              		.cfi_startproc
 2210 0000 55       		pushq	%rbp
 2211              		.cfi_def_cfa_offset 16
 2212              		.cfi_offset 6, -16
 2213 0001 4889E5   		movq	%rsp, %rbp
 2214              		.cfi_def_cfa_register 6
 2215 0004 4883EC20 		subq	$32, %rsp
 2216 0008 48897DE8 		movq	%rdi, -24(%rbp)
 565:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 2217              		.loc 5 565 0
 2218 000c 64488B04 		movq	%fs:40, %rax
 2218      25280000 
 2218      00
 2219 0015 488945F8 		movq	%rax, -8(%rbp)
 2220 0019 31C0     		xorl	%eax, %eax
 566:/usr/include/c++/5/bits/stl_vector.h **** 
 2221              		.loc 5 566 0
 2222 001b 488B45E8 		movq	-24(%rbp), %rax
 2223 001f 488D5008 		leaq	8(%rax), %rdx
 2224 0023 488D45F0 		leaq	-16(%rbp), %rax
 2225 0027 4889D6   		movq	%rdx, %rsi
 2226 002a 4889C7   		movq	%rax, %rdi
 2227 002d E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 2227      00
 2228 0032 488B45F0 		movq	-16(%rbp), %rax
 2229 0036 488B4DF8 		movq	-8(%rbp), %rcx
 2230 003a 6448330C 		xorq	%fs:40, %rcx
 2230      25280000 
 2230      00
 2231 0043 7405     		je	.L103
 2232 0045 E8000000 		call	__stack_chk_fail@PLT
 2232      00
 2233              	.L103:
 2234 004a C9       		leave
 2235              		.cfi_def_cfa 7, 8
 2236 004b C3       		ret
 2237              		.cfi_endproc
 2238              	.LFE942:
 2240              		.section	.text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev,"axG",@pr
 2241              		.align 2
 2242              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 2244              	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 2245              	.LFB948:
 2246              		.file 10 "/usr/include/c++/5/bits/allocator.h"
   1:/usr/include/c++/5/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/5/bits/allocator.h **** 
   3:/usr/include/c++/5/bits/allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/allocator.h **** //
   5:/usr/include/c++/5/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/allocator.h **** // any later version.
  10:/usr/include/c++/5/bits/allocator.h **** 
  11:/usr/include/c++/5/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/allocator.h **** 
  16:/usr/include/c++/5/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/allocator.h **** 
  20:/usr/include/c++/5/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/allocator.h **** 
  25:/usr/include/c++/5/bits/allocator.h **** /*
  26:/usr/include/c++/5/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/5/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/5/bits/allocator.h ****  *
  29:/usr/include/c++/5/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/5/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/5/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/5/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/5/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/5/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/5/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/5/bits/allocator.h ****  */
  37:/usr/include/c++/5/bits/allocator.h **** 
  38:/usr/include/c++/5/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/5/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/5/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/5/bits/allocator.h ****  */
  42:/usr/include/c++/5/bits/allocator.h **** 
  43:/usr/include/c++/5/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/5/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/5/bits/allocator.h **** 
  46:/usr/include/c++/5/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/5/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/5/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/5/bits/allocator.h **** #endif
  51:/usr/include/c++/5/bits/allocator.h **** 
  52:/usr/include/c++/5/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/5/bits/allocator.h **** {
  54:/usr/include/c++/5/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/5/bits/allocator.h **** 
  56:/usr/include/c++/5/bits/allocator.h ****   /**
  57:/usr/include/c++/5/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/5/bits/allocator.h ****    *  @{
  59:/usr/include/c++/5/bits/allocator.h ****    */
  60:/usr/include/c++/5/bits/allocator.h **** 
  61:/usr/include/c++/5/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/5/bits/allocator.h ****   template<>
  63:/usr/include/c++/5/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/5/bits/allocator.h ****     {
  65:/usr/include/c++/5/bits/allocator.h ****     public:
  66:/usr/include/c++/5/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/5/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/5/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/5/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/5/bits/allocator.h **** 
  72:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/5/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/5/bits/allocator.h **** 
  76:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/5/bits/allocator.h **** #endif
  81:/usr/include/c++/5/bits/allocator.h ****     };
  82:/usr/include/c++/5/bits/allocator.h **** 
  83:/usr/include/c++/5/bits/allocator.h ****   /**
  84:/usr/include/c++/5/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/5/bits/allocator.h ****    *
  86:/usr/include/c++/5/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
  87:/usr/include/c++/5/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/5/bits/allocator.h ****    *
  89:/usr/include/c++/5/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/5/bits/allocator.h ****    */
  91:/usr/include/c++/5/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/5/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/5/bits/allocator.h ****     {
  94:/usr/include/c++/5/bits/allocator.h ****    public:
  95:/usr/include/c++/5/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp        value_type;
 102:/usr/include/c++/5/bits/allocator.h **** 
 103:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/5/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/5/bits/allocator.h **** 
 107:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/5/bits/allocator.h **** #endif
 112:/usr/include/c++/5/bits/allocator.h **** 
 113:/usr/include/c++/5/bits/allocator.h ****       allocator() throw() { }
 114:/usr/include/c++/5/bits/allocator.h **** 
 115:/usr/include/c++/5/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/5/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/5/bits/allocator.h **** 
 118:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/5/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/5/bits/allocator.h **** 
 121:/usr/include/c++/5/bits/allocator.h ****       ~allocator() throw() { }
 2247              		.loc 10 121 0
 2248              		.cfi_startproc
 2249 0000 55       		pushq	%rbp
 2250              		.cfi_def_cfa_offset 16
 2251              		.cfi_offset 6, -16
 2252 0001 4889E5   		movq	%rsp, %rbp
 2253              		.cfi_def_cfa_register 6
 2254 0004 4883EC10 		subq	$16, %rsp
 2255 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2256              	.LBB28:
 2257              		.loc 10 121 0
 2258 000c 488B45F8 		movq	-8(%rbp), %rax
 2259 0010 4889C7   		movq	%rax, %rdi
 2260 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 2260      00
 2261              	.LBE28:
 2262 0018 90       		nop
 2263 0019 C9       		leave
 2264              		.cfi_def_cfa 7, 8
 2265 001a C3       		ret
 2266              		.cfi_endproc
 2267              	.LFE948:
 2269              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
 2270              		.set	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev,_ZNSaISt4pairIiNSt7
 2271              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 2272              		.align 2
 2273              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13
 2275              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deal
 2276              	.LFB950:
 174:/usr/include/c++/5/bits/stl_vector.h ****       {
 2277              		.loc 5 174 0
 2278              		.cfi_startproc
 2279 0000 55       		pushq	%rbp
 2280              		.cfi_def_cfa_offset 16
 2281              		.cfi_offset 6, -16
 2282 0001 4889E5   		movq	%rsp, %rbp
 2283              		.cfi_def_cfa_register 6
 2284 0004 4883EC20 		subq	$32, %rsp
 2285 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2286 000c 488975F0 		movq	%rsi, -16(%rbp)
 2287 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2288              		.loc 5 177 0
 2289 0014 48837DF0 		cmpq	$0, -16(%rbp)
 2289      00
 2290 0019 7417     		je	.L107
 178:/usr/include/c++/5/bits/stl_vector.h ****       }
 2291              		.loc 5 178 0
 2292 001b 488B45F8 		movq	-8(%rbp), %rax
 2293 001f 488B55E8 		movq	-24(%rbp), %rdx
 2294 0023 488B4DF0 		movq	-16(%rbp), %rcx
 2295 0027 4889CE   		movq	%rcx, %rsi
 2296 002a 4889C7   		movq	%rax, %rdi
 2297 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 2297      00
 2298              	.L107:
 179:/usr/include/c++/5/bits/stl_vector.h **** 
 2299              		.loc 5 179 0
 2300 0032 90       		nop
 2301 0033 C9       		leave
 2302              		.cfi_def_cfa 7, 8
 2303 0034 C3       		ret
 2304              		.cfi_endproc
 2305              	.LFE950:
 2307              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9
 2308              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 2310              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
 2311              	.LFB951:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 2312              		.loc 6 122 0
 2313              		.cfi_startproc
 2314 0000 55       		pushq	%rbp
 2315              		.cfi_def_cfa_offset 16
 2316              		.cfi_offset 6, -16
 2317 0001 4889E5   		movq	%rsp, %rbp
 2318              		.cfi_def_cfa_register 6
 2319 0004 4883EC10 		subq	$16, %rsp
 2320 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2321 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 2322              		.loc 6 126 0
 2323 0010 488B55F0 		movq	-16(%rbp), %rdx
 2324 0014 488B45F8 		movq	-8(%rbp), %rax
 2325 0018 4889D6   		movq	%rdx, %rsi
 2326 001b 4889C7   		movq	%rax, %rdi
 2327 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 2327      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 2328              		.loc 6 128 0
 2329 0023 90       		nop
 2330 0024 C9       		leave
 2331              		.cfi_def_cfa 7, 8
 2332 0025 C3       		ret
 2333              		.cfi_endproc
 2334              	.LFE951:
 2336              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE9constructEPS2_RKS2_,"
 2337              		.align 2
 2338              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE9constructEPS2_RKS2_
 2340              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE9constructEPS2_RKS2_:
 2341              	.LFB952:
 2342              		.file 11 "/usr/include/c++/5/ext/new_allocator.h"
   1:/usr/include/c++/5/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/5/ext/new_allocator.h **** 
   3:/usr/include/c++/5/ext/new_allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/new_allocator.h **** //
   5:/usr/include/c++/5/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/5/ext/new_allocator.h **** 
  11:/usr/include/c++/5/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/new_allocator.h **** 
  16:/usr/include/c++/5/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/new_allocator.h **** 
  20:/usr/include/c++/5/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/new_allocator.h **** 
  25:/usr/include/c++/5/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/5/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/new_allocator.h ****  */
  28:/usr/include/c++/5/ext/new_allocator.h **** 
  29:/usr/include/c++/5/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/5/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/5/ext/new_allocator.h **** 
  32:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/5/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/5/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/5/ext/new_allocator.h **** #endif
  39:/usr/include/c++/5/ext/new_allocator.h **** 
  40:/usr/include/c++/5/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/5/ext/new_allocator.h **** {
  42:/usr/include/c++/5/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/5/ext/new_allocator.h **** 
  44:/usr/include/c++/5/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/5/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/5/ext/new_allocator.h **** 
  47:/usr/include/c++/5/ext/new_allocator.h ****   /**
  48:/usr/include/c++/5/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/5/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/5/ext/new_allocator.h ****    *
  51:/usr/include/c++/5/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/5/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/5/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/5/ext/new_allocator.h ****    *
  55:/usr/include/c++/5/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/5/ext/new_allocator.h ****    */
  57:/usr/include/c++/5/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/5/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/5/ext/new_allocator.h ****     {
  60:/usr/include/c++/5/ext/new_allocator.h ****     public:
  61:/usr/include/c++/5/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/5/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/5/ext/new_allocator.h **** 
  69:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/5/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/5/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/5/ext/new_allocator.h **** 
  73:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/5/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/5/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/5/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/5/ext/new_allocator.h **** #endif
  78:/usr/include/c++/5/ext/new_allocator.h **** 
  79:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/5/ext/new_allocator.h **** 
  81:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/5/ext/new_allocator.h **** 
  83:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/5/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/5/ext/new_allocator.h **** 
  86:/usr/include/c++/5/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  87:/usr/include/c++/5/ext/new_allocator.h **** 
  88:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/5/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/5/ext/new_allocator.h **** 
  92:/usr/include/c++/5/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/5/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/5/ext/new_allocator.h **** 
  96:/usr/include/c++/5/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/5/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/5/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/5/ext/new_allocator.h ****       { 
 101:/usr/include/c++/5/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/5/ext/new_allocator.h **** 
 104:/usr/include/c++/5/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/5/ext/new_allocator.h ****       }
 106:/usr/include/c++/5/ext/new_allocator.h **** 
 107:/usr/include/c++/5/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/5/ext/new_allocator.h ****       void
 109:/usr/include/c++/5/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 110:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 111:/usr/include/c++/5/ext/new_allocator.h **** 
 112:/usr/include/c++/5/ext/new_allocator.h ****       size_type
 113:/usr/include/c++/5/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 114:/usr/include/c++/5/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 115:/usr/include/c++/5/ext/new_allocator.h **** 
 116:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Up, typename... _Args>
 118:/usr/include/c++/5/ext/new_allocator.h ****         void
 119:/usr/include/c++/5/ext/new_allocator.h ****         construct(_Up* __p, _Args&&... __args)
 120:/usr/include/c++/5/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 121:/usr/include/c++/5/ext/new_allocator.h **** 
 122:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Up>
 123:/usr/include/c++/5/ext/new_allocator.h ****         void 
 124:/usr/include/c++/5/ext/new_allocator.h ****         destroy(_Up* __p) { __p->~_Up(); }
 125:/usr/include/c++/5/ext/new_allocator.h **** #else
 126:/usr/include/c++/5/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 127:/usr/include/c++/5/ext/new_allocator.h ****       // 402. wrong new expression in [some_] allocator::construct
 128:/usr/include/c++/5/ext/new_allocator.h ****       void 
 129:/usr/include/c++/5/ext/new_allocator.h ****       construct(pointer __p, const _Tp& __val) 
 2343              		.loc 11 129 0
 2344              		.cfi_startproc
 2345              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2346              		.cfi_lsda 0x1b,.LLSDA952
 2347 0000 55       		pushq	%rbp
 2348              		.cfi_def_cfa_offset 16
 2349              		.cfi_offset 6, -16
 2350 0001 4889E5   		movq	%rsp, %rbp
 2351              		.cfi_def_cfa_register 6
 2352 0004 4155     		pushq	%r13
 2353 0006 4154     		pushq	%r12
 2354 0008 53       		pushq	%rbx
 2355 0009 4883EC28 		subq	$40, %rsp
 2356              		.cfi_offset 13, -24
 2357              		.cfi_offset 12, -32
 2358              		.cfi_offset 3, -40
 2359 000d 48897DD8 		movq	%rdi, -40(%rbp)
 2360 0011 488975D0 		movq	%rsi, -48(%rbp)
 2361 0015 488955C8 		movq	%rdx, -56(%rbp)
 130:/usr/include/c++/5/ext/new_allocator.h ****       { ::new((void *)__p) _Tp(__val); }
 2362              		.loc 11 130 0
 2363 0019 4C8B65D0 		movq	-48(%rbp), %r12
 2364 001d 4C89E6   		movq	%r12, %rsi
 2365 0020 BF800000 		movl	$128, %edi
 2365      00
 2366 0025 E8000000 		call	_ZnwmPv@PLT
 2366      00
 2367 002a 4889C3   		movq	%rax, %rbx
 2368 002d 4885DB   		testq	%rbx, %rbx
 2369 0030 742A     		je	.L114
 2370              		.loc 11 130 0 is_stmt 0 discriminator 1
 2371 0032 488B45C8 		movq	-56(%rbp), %rax
 2372 0036 4889C6   		movq	%rax, %rsi
 2373 0039 4889DF   		movq	%rbx, %rdi
 2374              	.LEHB43:
 2375 003c E8000000 		call	_ZN8UnitTest18DeferredTestResultC1ERKS0_@PLT
 2375      00
 2376              	.LEHE43:
 2377              		.loc 11 130 0
 2378 0041 EB19     		jmp	.L114
 2379              	.L113:
 2380 0043 4989C5   		movq	%rax, %r13
 2381 0046 4C89E6   		movq	%r12, %rsi
 2382 0049 4889DF   		movq	%rbx, %rdi
 2383 004c E8000000 		call	_ZdlPvS_@PLT
 2383      00
 2384 0051 4C89E8   		movq	%r13, %rax
 2385 0054 4889C7   		movq	%rax, %rdi
 2386              	.LEHB44:
 2387 0057 E8000000 		call	_Unwind_Resume@PLT
 2387      00
 2388              	.LEHE44:
 2389              	.L114:
 2390 005c 90       		nop
 2391 005d 4883C428 		addq	$40, %rsp
 2392 0061 5B       		popq	%rbx
 2393 0062 415C     		popq	%r12
 2394 0064 415D     		popq	%r13
 2395 0066 5D       		popq	%rbp
 2396              		.cfi_def_cfa 7, 8
 2397 0067 C3       		ret
 2398              		.cfi_endproc
 2399              	.LFE952:
 2400              		.section	.gcc_except_table
 2401              	.LLSDA952:
 2402 00f0 FF       		.byte	0xff
 2403 00f1 FF       		.byte	0xff
 2404 00f2 01       		.byte	0x1
 2405 00f3 08       		.uleb128 .LLSDACSE952-.LLSDACSB952
 2406              	.LLSDACSB952:
 2407 00f4 3C       		.uleb128 .LEHB43-.LFB952
 2408 00f5 05       		.uleb128 .LEHE43-.LEHB43
 2409 00f6 43       		.uleb128 .L113-.LFB952
 2410 00f7 00       		.uleb128 0
 2411 00f8 57       		.uleb128 .LEHB44-.LFB952
 2412 00f9 05       		.uleb128 .LEHE44-.LEHB44
 2413 00fa 00       		.uleb128 0
 2414 00fb 00       		.uleb128 0
 2415              	.LLSDACSE952:
 2416              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE9constructEPS2_RKS2_,"
 2418              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 2419              		.align 2
 2420              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2ERKS9_
 2422              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2ERKS9_:
 2423              	.LFB954:
 318:/usr/include/c++/5/bits/stl_vector.h ****       : _Base(__x.size(),
 2424              		.loc 5 318 0 is_stmt 1
 2425              		.cfi_startproc
 2426              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2427              		.cfi_lsda 0x1b,.LLSDA954
 2428 0000 55       		pushq	%rbp
 2429              		.cfi_def_cfa_offset 16
 2430              		.cfi_offset 6, -16
 2431 0001 4889E5   		movq	%rsp, %rbp
 2432              		.cfi_def_cfa_register 6
 2433 0004 4155     		pushq	%r13
 2434 0006 4154     		pushq	%r12
 2435 0008 53       		pushq	%rbx
 2436 0009 4883EC18 		subq	$24, %rsp
 2437              		.cfi_offset 13, -24
 2438              		.cfi_offset 12, -32
 2439              		.cfi_offset 3, -40
 2440 000d 48897DD8 		movq	%rdi, -40(%rbp)
 2441 0011 488975D0 		movq	%rsi, -48(%rbp)
 2442              	.LBB29:
 320:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 2443              		.loc 5 320 0
 2444 0015 488B45D0 		movq	-48(%rbp), %rax
 2445 0019 4889C7   		movq	%rax, %rdi
 2446 001c E8000000 		call	_ZNKSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 2446      00
 2447 0021 4889C7   		movq	%rax, %rdi
 2448 0024 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 2448      00
 2449 0029 4889C3   		movq	%rax, %rbx
 2450 002c 488B45D0 		movq	-48(%rbp), %rax
 2451 0030 4889C7   		movq	%rax, %rdi
 2452 0033 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 2452      00
 2453 0038 4889C1   		movq	%rax, %rcx
 2454 003b 488B45D8 		movq	-40(%rbp), %rax
 2455 003f 4889DA   		movq	%rbx, %rdx
 2456 0042 4889CE   		movq	%rcx, %rsi
 2457 0045 4889C7   		movq	%rax, %rdi
 2458              	.LEHB45:
 2459 0048 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2E
 2459      00
 2460              	.LEHE45:
 324:/usr/include/c++/5/bits/stl_vector.h ****       }
 2461              		.loc 5 324 0
 2462 004d 488B45D8 		movq	-40(%rbp), %rax
 2463 0051 4889C7   		movq	%rax, %rdi
 2464 0054 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 2464      00
 2465 0059 4989C5   		movq	%rax, %r13
 322:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 2466              		.loc 5 322 0
 2467 005c 488B45D8 		movq	-40(%rbp), %rax
 2468 0060 488B18   		movq	(%rax), %rbx
 2469 0063 488B45D0 		movq	-48(%rbp), %rax
 2470 0067 4889C7   		movq	%rax, %rdi
 2471              	.LEHB46:
 2472 006a E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv@PL
 2472      00
 2473 006f 4989C4   		movq	%rax, %r12
 2474 0072 488B45D0 		movq	-48(%rbp), %rax
 2475 0076 4889C7   		movq	%rax, %rdi
 2476 0079 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv@
 2476      00
 322:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 2477              		.loc 5 322 0 is_stmt 0 discriminator 1
 2478 007e 4C89E9   		movq	%r13, %rcx
 2479 0081 4889DA   		movq	%rbx, %rdx
 2480 0084 4C89E6   		movq	%r12, %rsi
 2481 0087 4889C7   		movq	%rax, %rdi
 2482 008a E8000000 		call	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_str
 2482      00
 2483              	.LEHE46:
 322:/usr/include/c++/5/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 2484              		.loc 5 322 0 discriminator 2
 2485 008f 4889C2   		movq	%rax, %rdx
 321:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 2486              		.loc 5 321 0 is_stmt 1 discriminator 2
 2487 0092 488B45D8 		movq	-40(%rbp), %rax
 2488 0096 48895008 		movq	%rdx, 8(%rax)
 2489              	.LBE29:
 325:/usr/include/c++/5/bits/stl_vector.h **** 
 2490              		.loc 5 325 0 discriminator 2
 2491 009a EB1A     		jmp	.L118
 2492              	.L117:
 2493 009c 4889C3   		movq	%rax, %rbx
 2494              	.LBB30:
 320:/usr/include/c++/5/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 2495              		.loc 5 320 0
 2496 009f 488B45D8 		movq	-40(%rbp), %rax
 2497 00a3 4889C7   		movq	%rax, %rdi
 2498 00a6 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 2498      00
 2499 00ab 4889D8   		movq	%rbx, %rax
 2500 00ae 4889C7   		movq	%rax, %rdi
 2501              	.LEHB47:
 2502 00b1 E8000000 		call	_Unwind_Resume@PLT
 2502      00
 2503              	.LEHE47:
 2504              	.L118:
 2505              	.LBE30:
 325:/usr/include/c++/5/bits/stl_vector.h **** 
 2506              		.loc 5 325 0
 2507 00b6 4883C418 		addq	$24, %rsp
 2508 00ba 5B       		popq	%rbx
 2509 00bb 415C     		popq	%r12
 2510 00bd 415D     		popq	%r13
 2511 00bf 5D       		popq	%rbp
 2512              		.cfi_def_cfa 7, 8
 2513 00c0 C3       		ret
 2514              		.cfi_endproc
 2515              	.LFE954:
 2516              		.section	.gcc_except_table
 2517              	.LLSDA954:
 2518 00fc FF       		.byte	0xff
 2519 00fd FF       		.byte	0xff
 2520 00fe 01       		.byte	0x1
 2521 00ff 0E       		.uleb128 .LLSDACSE954-.LLSDACSB954
 2522              	.LLSDACSB954:
 2523 0100 48       		.uleb128 .LEHB45-.LFB954
 2524 0101 05       		.uleb128 .LEHE45-.LEHB45
 2525 0102 00       		.uleb128 0
 2526 0103 00       		.uleb128 0
 2527 0104 6A       		.uleb128 .LEHB46-.LFB954
 2528 0105 25       		.uleb128 .LEHE46-.LEHB46
 2529 0106 9C01     		.uleb128 .L117-.LFB954
 2530 0108 00       		.uleb128 0
 2531 0109 B101     		.uleb128 .LEHB47-.LFB954
 2532 010b 05       		.uleb128 .LEHE47-.LEHB47
 2533 010c 00       		.uleb128 0
 2534 010d 00       		.uleb128 0
 2535              	.LLSDACSE954:
 2536              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 2538              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC1ERKS9_
 2539              		.set	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC1ERKS9_,_
 2540              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS
 2541              		.align 2
 2542              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4bas
 2544              	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4baseEv:
 2545              	.LFB956:
 803:/usr/include/c++/5/bits/stl_iterator.h **** 
 804:/usr/include/c++/5/bits/stl_iterator.h ****       const _Iterator&
 805:/usr/include/c++/5/bits/stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 2546              		.loc 9 805 0
 2547              		.cfi_startproc
 2548 0000 55       		pushq	%rbp
 2549              		.cfi_def_cfa_offset 16
 2550              		.cfi_offset 6, -16
 2551 0001 4889E5   		movq	%rsp, %rbp
 2552              		.cfi_def_cfa_register 6
 2553 0004 48897DF8 		movq	%rdi, -8(%rbp)
 806:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 2554              		.loc 9 806 0
 2555 0008 488B45F8 		movq	-8(%rbp), %rax
 2556 000c 5D       		popq	%rbp
 2557              		.cfi_def_cfa 7, 8
 2558 000d C3       		ret
 2559              		.cfi_endproc
 2560              	.LFE956:
 2562              		.section	.text._ZSt13copy_backwardIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_,"axG",@progbits
 2563              		.weak	_ZSt13copy_backwardIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_
 2565              	_ZSt13copy_backwardIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_:
 2566              	.LFB957:
 2567              		.file 12 "/usr/include/c++/5/bits/stl_algobase.h"
   1:/usr/include/c++/5/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_algobase.h **** 
   3:/usr/include/c++/5/bits/stl_algobase.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_algobase.h **** //
   5:/usr/include/c++/5/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_algobase.h **** 
  11:/usr/include/c++/5/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_algobase.h **** 
  16:/usr/include/c++/5/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_algobase.h **** 
  20:/usr/include/c++/5/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_algobase.h **** 
  25:/usr/include/c++/5/bits/stl_algobase.h **** /*
  26:/usr/include/c++/5/bits/stl_algobase.h ****  *
  27:/usr/include/c++/5/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_algobase.h ****  *
  30:/usr/include/c++/5/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_algobase.h ****  *
  38:/usr/include/c++/5/bits/stl_algobase.h ****  *
  39:/usr/include/c++/5/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_algobase.h ****  *
  42:/usr/include/c++/5/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_algobase.h ****  */
  50:/usr/include/c++/5/bits/stl_algobase.h **** 
  51:/usr/include/c++/5/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/5/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/5/bits/stl_algobase.h ****  */
  55:/usr/include/c++/5/bits/stl_algobase.h **** 
  56:/usr/include/c++/5/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/5/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/5/bits/stl_algobase.h **** 
  59:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/5/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/5/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/5/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/5/bits/stl_algobase.h **** 
  73:/usr/include/c++/5/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/5/bits/stl_algobase.h **** {
  75:/usr/include/c++/5/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/5/bits/stl_algobase.h **** 
  77:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/usr/include/c++/5/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/usr/include/c++/5/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/usr/include/c++/5/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/usr/include/c++/5/bits/stl_algobase.h ****     struct __iter_swap
  83:/usr/include/c++/5/bits/stl_algobase.h ****     {
  84:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/usr/include/c++/5/bits/stl_algobase.h ****         static void
  86:/usr/include/c++/5/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/usr/include/c++/5/bits/stl_algobase.h ****         {
  88:/usr/include/c++/5/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/usr/include/c++/5/bits/stl_algobase.h ****             _ValueType1;
  90:/usr/include/c++/5/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/usr/include/c++/5/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/usr/include/c++/5/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/usr/include/c++/5/bits/stl_algobase.h **** 	}
  94:/usr/include/c++/5/bits/stl_algobase.h ****     };
  95:/usr/include/c++/5/bits/stl_algobase.h **** 
  96:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
  97:/usr/include/c++/5/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/usr/include/c++/5/bits/stl_algobase.h ****     {
  99:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/usr/include/c++/5/bits/stl_algobase.h ****         static void 
 101:/usr/include/c++/5/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/usr/include/c++/5/bits/stl_algobase.h ****         {
 103:/usr/include/c++/5/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/usr/include/c++/5/bits/stl_algobase.h ****         }
 105:/usr/include/c++/5/bits/stl_algobase.h ****     };
 106:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 107:/usr/include/c++/5/bits/stl_algobase.h **** 
 108:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 109:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/usr/include/c++/5/bits/stl_algobase.h ****    *
 115:/usr/include/c++/5/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/usr/include/c++/5/bits/stl_algobase.h ****    *  iterators themselves.
 117:/usr/include/c++/5/bits/stl_algobase.h ****   */
 118:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/include/c++/5/bits/stl_algobase.h ****     inline void
 120:/usr/include/c++/5/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/include/c++/5/bits/stl_algobase.h ****     {
 122:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 123:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/usr/include/c++/5/bits/stl_algobase.h **** 
 128:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/usr/include/c++/5/bits/stl_algobase.h **** 	_ValueType1;
 131:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/usr/include/c++/5/bits/stl_algobase.h **** 	_ValueType2;
 133:/usr/include/c++/5/bits/stl_algobase.h **** 
 134:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/usr/include/c++/5/bits/stl_algobase.h **** 
 139:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/usr/include/c++/5/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/usr/include/c++/5/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/usr/include/c++/5/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/usr/include/c++/5/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/usr/include/c++/5/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/usr/include/c++/5/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/usr/include/c++/5/bits/stl_algobase.h **** #else
 148:/usr/include/c++/5/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 150:/usr/include/c++/5/bits/stl_algobase.h ****     }
 151:/usr/include/c++/5/bits/stl_algobase.h **** 
 152:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 153:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/usr/include/c++/5/bits/stl_algobase.h ****    *
 160:/usr/include/c++/5/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/usr/include/c++/5/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/usr/include/c++/5/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/usr/include/c++/5/bits/stl_algobase.h ****   */
 164:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/usr/include/c++/5/bits/stl_algobase.h ****     _ForwardIterator2
 166:/usr/include/c++/5/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/usr/include/c++/5/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/usr/include/c++/5/bits/stl_algobase.h ****     {
 169:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 170:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/usr/include/c++/5/bits/stl_algobase.h **** 
 176:/usr/include/c++/5/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 177:/usr/include/c++/5/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/usr/include/c++/5/bits/stl_algobase.h ****       return __first2;
 179:/usr/include/c++/5/bits/stl_algobase.h ****     }
 180:/usr/include/c++/5/bits/stl_algobase.h **** 
 181:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 182:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/usr/include/c++/5/bits/stl_algobase.h ****    *
 188:/usr/include/c++/5/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/usr/include/c++/5/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/usr/include/c++/5/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/usr/include/c++/5/bits/stl_algobase.h ****   */
 192:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 193:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 195:/usr/include/c++/5/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/usr/include/c++/5/bits/stl_algobase.h ****     {
 197:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 198:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/usr/include/c++/5/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/usr/include/c++/5/bits/stl_algobase.h ****       if (__b < __a)
 201:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 202:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 203:/usr/include/c++/5/bits/stl_algobase.h ****     }
 204:/usr/include/c++/5/bits/stl_algobase.h **** 
 205:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 206:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/usr/include/c++/5/bits/stl_algobase.h ****    *
 212:/usr/include/c++/5/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/usr/include/c++/5/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/usr/include/c++/5/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/usr/include/c++/5/bits/stl_algobase.h ****   */
 216:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 217:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 219:/usr/include/c++/5/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/usr/include/c++/5/bits/stl_algobase.h ****     {
 221:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 222:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/usr/include/c++/5/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/usr/include/c++/5/bits/stl_algobase.h ****       if (__a < __b)
 225:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 226:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 227:/usr/include/c++/5/bits/stl_algobase.h ****     }
 228:/usr/include/c++/5/bits/stl_algobase.h **** 
 229:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 230:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/usr/include/c++/5/bits/stl_algobase.h ****    *
 237:/usr/include/c++/5/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/usr/include/c++/5/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/usr/include/c++/5/bits/stl_algobase.h ****   */
 240:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 243:/usr/include/c++/5/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/usr/include/c++/5/bits/stl_algobase.h ****     {
 245:/usr/include/c++/5/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/usr/include/c++/5/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 248:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 249:/usr/include/c++/5/bits/stl_algobase.h ****     }
 250:/usr/include/c++/5/bits/stl_algobase.h **** 
 251:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 252:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/usr/include/c++/5/bits/stl_algobase.h ****    *
 259:/usr/include/c++/5/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/usr/include/c++/5/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/usr/include/c++/5/bits/stl_algobase.h ****   */
 262:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 265:/usr/include/c++/5/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/usr/include/c++/5/bits/stl_algobase.h ****     {
 267:/usr/include/c++/5/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/usr/include/c++/5/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 270:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 271:/usr/include/c++/5/bits/stl_algobase.h ****     }
 272:/usr/include/c++/5/bits/stl_algobase.h **** 
 273:/usr/include/c++/5/bits/stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 274:/usr/include/c++/5/bits/stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 275:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/usr/include/c++/5/bits/stl_algobase.h ****     struct _Niter_base
 277:/usr/include/c++/5/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 278:/usr/include/c++/5/bits/stl_algobase.h ****     { };
 279:/usr/include/c++/5/bits/stl_algobase.h **** 
 280:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 281:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 282:/usr/include/c++/5/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 283:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 284:/usr/include/c++/5/bits/stl_algobase.h **** 
 285:/usr/include/c++/5/bits/stl_algobase.h ****   // Likewise, for move_iterator.
 286:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 287:/usr/include/c++/5/bits/stl_algobase.h ****     struct _Miter_base
 288:/usr/include/c++/5/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 289:/usr/include/c++/5/bits/stl_algobase.h ****     { };
 290:/usr/include/c++/5/bits/stl_algobase.h **** 
 291:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 292:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 293:/usr/include/c++/5/bits/stl_algobase.h ****     __miter_base(_Iterator __it)
 294:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 295:/usr/include/c++/5/bits/stl_algobase.h **** 
 296:/usr/include/c++/5/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 297:/usr/include/c++/5/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 298:/usr/include/c++/5/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 299:/usr/include/c++/5/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 300:/usr/include/c++/5/bits/stl_algobase.h ****   // a for loop with an explicit count.
 301:/usr/include/c++/5/bits/stl_algobase.h **** 
 302:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool, bool, typename>
 303:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move
 304:/usr/include/c++/5/bits/stl_algobase.h ****     {
 305:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 306:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 307:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 308:/usr/include/c++/5/bits/stl_algobase.h ****         {
 309:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 310:/usr/include/c++/5/bits/stl_algobase.h **** 	    *__result = *__first;
 311:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 312:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 313:/usr/include/c++/5/bits/stl_algobase.h ****     };
 314:/usr/include/c++/5/bits/stl_algobase.h **** 
 315:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 316:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Category>
 317:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 318:/usr/include/c++/5/bits/stl_algobase.h ****     {
 319:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 320:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 321:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 322:/usr/include/c++/5/bits/stl_algobase.h ****         {
 323:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 324:/usr/include/c++/5/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 325:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 326:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 327:/usr/include/c++/5/bits/stl_algobase.h ****     };
 328:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 329:/usr/include/c++/5/bits/stl_algobase.h **** 
 330:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 331:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 332:/usr/include/c++/5/bits/stl_algobase.h ****     {
 333:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 334:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 335:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 336:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 337:/usr/include/c++/5/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 339:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 340:/usr/include/c++/5/bits/stl_algobase.h **** 	      *__result = *__first;
 341:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 342:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 343:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 344:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 345:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 346:/usr/include/c++/5/bits/stl_algobase.h ****     };
 347:/usr/include/c++/5/bits/stl_algobase.h **** 
 348:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 349:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 350:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 351:/usr/include/c++/5/bits/stl_algobase.h ****     {
 352:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 353:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 354:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 355:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 356:/usr/include/c++/5/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 357:/usr/include/c++/5/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 358:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 359:/usr/include/c++/5/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 360:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 361:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 362:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 363:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 364:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 365:/usr/include/c++/5/bits/stl_algobase.h ****     };
 366:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 367:/usr/include/c++/5/bits/stl_algobase.h **** 
 368:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove>
 369:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 370:/usr/include/c++/5/bits/stl_algobase.h ****     {
 371:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _Tp>
 372:/usr/include/c++/5/bits/stl_algobase.h ****         static _Tp*
 373:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 374:/usr/include/c++/5/bits/stl_algobase.h ****         {
 375:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 376:/usr/include/c++/5/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 377:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 378:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 379:/usr/include/c++/5/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 380:/usr/include/c++/5/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 381:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 382:/usr/include/c++/5/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 383:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 384:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 385:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result + _Num;
 386:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 387:/usr/include/c++/5/bits/stl_algobase.h ****     };
 388:/usr/include/c++/5/bits/stl_algobase.h **** 
 389:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 390:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 391:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 392:/usr/include/c++/5/bits/stl_algobase.h ****     {
 393:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 394:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 395:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 396:/usr/include/c++/5/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 397:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 398:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 399:/usr/include/c++/5/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 400:/usr/include/c++/5/bits/stl_algobase.h **** 
 401:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 402:/usr/include/c++/5/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 403:/usr/include/c++/5/bits/stl_algobase.h ****     }
 404:/usr/include/c++/5/bits/stl_algobase.h **** 
 405:/usr/include/c++/5/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 406:/usr/include/c++/5/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 407:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT>
 408:/usr/include/c++/5/bits/stl_algobase.h ****     struct char_traits;
 409:/usr/include/c++/5/bits/stl_algobase.h **** 
 410:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 411:/usr/include/c++/5/bits/stl_algobase.h ****     class istreambuf_iterator;
 412:/usr/include/c++/5/bits/stl_algobase.h **** 
 413:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 414:/usr/include/c++/5/bits/stl_algobase.h ****     class ostreambuf_iterator;
 415:/usr/include/c++/5/bits/stl_algobase.h **** 
 416:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 417:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 418:/usr/include/c++/5/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 419:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 420:/usr/include/c++/5/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 421:/usr/include/c++/5/bits/stl_algobase.h **** 
 422:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 423:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 424:/usr/include/c++/5/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 425:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 426:/usr/include/c++/5/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 427:/usr/include/c++/5/bits/stl_algobase.h **** 
 428:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 429:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 430:/usr/include/c++/5/bits/stl_algobase.h **** 				    _CharT*>::__type
 431:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 432:/usr/include/c++/5/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 433:/usr/include/c++/5/bits/stl_algobase.h **** 
 434:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 435:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 436:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 437:/usr/include/c++/5/bits/stl_algobase.h ****     {
 438:/usr/include/c++/5/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 439:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 440:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 441:/usr/include/c++/5/bits/stl_algobase.h ****     }
 442:/usr/include/c++/5/bits/stl_algobase.h **** 
 443:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 444:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 445:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 446:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 447:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 448:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 449:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result + (first - last)
 450:/usr/include/c++/5/bits/stl_algobase.h ****    *
 451:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 452:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 453:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 454:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 455:/usr/include/c++/5/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 456:/usr/include/c++/5/bits/stl_algobase.h ****    *
 457:/usr/include/c++/5/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 458:/usr/include/c++/5/bits/stl_algobase.h ****    *  within [first,last).
 459:/usr/include/c++/5/bits/stl_algobase.h ****   */
 460:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 461:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 462:/usr/include/c++/5/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 463:/usr/include/c++/5/bits/stl_algobase.h ****     {
 464:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 465:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 466:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 467:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 468:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 469:/usr/include/c++/5/bits/stl_algobase.h **** 
 470:/usr/include/c++/5/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 471:/usr/include/c++/5/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 472:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 473:/usr/include/c++/5/bits/stl_algobase.h ****     }
 474:/usr/include/c++/5/bits/stl_algobase.h **** 
 475:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 476:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 477:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 478:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 479:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 480:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 481:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 482:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result + (first - last)
 483:/usr/include/c++/5/bits/stl_algobase.h ****    *
 484:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 485:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 486:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 487:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 488:/usr/include/c++/5/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 489:/usr/include/c++/5/bits/stl_algobase.h ****    *
 490:/usr/include/c++/5/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 491:/usr/include/c++/5/bits/stl_algobase.h ****    *  within [first,last).
 492:/usr/include/c++/5/bits/stl_algobase.h ****   */
 493:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 494:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 495:/usr/include/c++/5/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 496:/usr/include/c++/5/bits/stl_algobase.h ****     {
 497:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 498:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 499:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 500:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 501:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 502:/usr/include/c++/5/bits/stl_algobase.h **** 
 503:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 504:/usr/include/c++/5/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 505:/usr/include/c++/5/bits/stl_algobase.h ****     }
 506:/usr/include/c++/5/bits/stl_algobase.h **** 
 507:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 508:/usr/include/c++/5/bits/stl_algobase.h **** #else
 509:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 510:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 511:/usr/include/c++/5/bits/stl_algobase.h **** 
 512:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool, bool, typename>
 513:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward
 514:/usr/include/c++/5/bits/stl_algobase.h ****     {
 515:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 516:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 517:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 518:/usr/include/c++/5/bits/stl_algobase.h ****         {
 519:/usr/include/c++/5/bits/stl_algobase.h **** 	  while (__first != __last)
 520:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 521:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 522:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 523:/usr/include/c++/5/bits/stl_algobase.h ****     };
 524:/usr/include/c++/5/bits/stl_algobase.h **** 
 525:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 526:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Category>
 527:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 528:/usr/include/c++/5/bits/stl_algobase.h ****     {
 529:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 530:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 531:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 532:/usr/include/c++/5/bits/stl_algobase.h ****         {
 533:/usr/include/c++/5/bits/stl_algobase.h **** 	  while (__first != __last)
 534:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 535:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 536:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 537:/usr/include/c++/5/bits/stl_algobase.h ****     };
 538:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 539:/usr/include/c++/5/bits/stl_algobase.h **** 
 540:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 541:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 542:/usr/include/c++/5/bits/stl_algobase.h ****     {
 543:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 544:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 545:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 546:/usr/include/c++/5/bits/stl_algobase.h ****         {
 547:/usr/include/c++/5/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 549:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 550:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 551:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 552:/usr/include/c++/5/bits/stl_algobase.h ****     };
 553:/usr/include/c++/5/bits/stl_algobase.h **** 
 554:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 555:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 556:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 557:/usr/include/c++/5/bits/stl_algobase.h ****     {
 558:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 559:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 560:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 561:/usr/include/c++/5/bits/stl_algobase.h ****         {
 562:/usr/include/c++/5/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 563:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 564:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 565:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 566:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 567:/usr/include/c++/5/bits/stl_algobase.h ****     };
 568:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 569:/usr/include/c++/5/bits/stl_algobase.h **** 
 570:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove>
 571:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 572:/usr/include/c++/5/bits/stl_algobase.h ****     {
 573:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _Tp>
 574:/usr/include/c++/5/bits/stl_algobase.h ****         static _Tp*
 575:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 576:/usr/include/c++/5/bits/stl_algobase.h ****         {
 577:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 578:/usr/include/c++/5/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 579:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 580:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 581:/usr/include/c++/5/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 582:/usr/include/c++/5/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 583:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 584:/usr/include/c++/5/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 585:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 586:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 587:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result - _Num;
 588:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 589:/usr/include/c++/5/bits/stl_algobase.h ****     };
 590:/usr/include/c++/5/bits/stl_algobase.h **** 
 591:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 592:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 593:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 594:/usr/include/c++/5/bits/stl_algobase.h ****     {
 595:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 596:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 597:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 598:/usr/include/c++/5/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 599:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 600:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 601:/usr/include/c++/5/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 602:/usr/include/c++/5/bits/stl_algobase.h **** 
 603:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 604:/usr/include/c++/5/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 605:/usr/include/c++/5/bits/stl_algobase.h **** 								 __last,
 606:/usr/include/c++/5/bits/stl_algobase.h **** 								 __result);
 607:/usr/include/c++/5/bits/stl_algobase.h ****     }
 608:/usr/include/c++/5/bits/stl_algobase.h **** 
 609:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 610:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 611:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 612:/usr/include/c++/5/bits/stl_algobase.h ****     {
 613:/usr/include/c++/5/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 614:/usr/include/c++/5/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 615:/usr/include/c++/5/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 616:/usr/include/c++/5/bits/stl_algobase.h ****     }
 617:/usr/include/c++/5/bits/stl_algobase.h **** 
 618:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 619:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 620:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 621:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 622:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 623:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 624:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result - (first - last)
 625:/usr/include/c++/5/bits/stl_algobase.h ****    *
 626:/usr/include/c++/5/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 627:/usr/include/c++/5/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 628:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 629:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 630:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 631:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 632:/usr/include/c++/5/bits/stl_algobase.h ****    *
 633:/usr/include/c++/5/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 634:/usr/include/c++/5/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 635:/usr/include/c++/5/bits/stl_algobase.h ****   */
 636:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 637:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 638:/usr/include/c++/5/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 2568              		.loc 12 638 0
 2569              		.cfi_startproc
 2570 0000 55       		pushq	%rbp
 2571              		.cfi_def_cfa_offset 16
 2572              		.cfi_offset 6, -16
 2573 0001 4889E5   		movq	%rsp, %rbp
 2574              		.cfi_def_cfa_register 6
 2575 0004 53       		pushq	%rbx
 2576 0005 4883EC28 		subq	$40, %rsp
 2577              		.cfi_offset 3, -24
 2578 0009 48897DE8 		movq	%rdi, -24(%rbp)
 2579 000d 488975E0 		movq	%rsi, -32(%rbp)
 2580 0011 488955D8 		movq	%rdx, -40(%rbp)
 639:/usr/include/c++/5/bits/stl_algobase.h ****     {
 640:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 641:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 642:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 643:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 644:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 645:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 646:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 647:/usr/include/c++/5/bits/stl_algobase.h **** 
 648:/usr/include/c++/5/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 649:/usr/include/c++/5/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 2581              		.loc 12 649 0
 2582 0015 488B45E0 		movq	-32(%rbp), %rax
 2583 0019 4889C7   		movq	%rax, %rdi
 2584 001c E8000000 		call	_ZSt12__miter_baseIPN8UnitTest18DeferredTestResultEENSt11_Miter_baseIT_E13iterator_typeES4_@P
 2584      00
 2585 0021 4889C3   		movq	%rax, %rbx
 2586 0024 488B45E8 		movq	-24(%rbp), %rax
 2587 0028 4889C7   		movq	%rax, %rdi
 2588 002b E8000000 		call	_ZSt12__miter_baseIPN8UnitTest18DeferredTestResultEENSt11_Miter_baseIT_E13iterator_typeES4_@P
 2588      00
 2589 0030 4889C1   		movq	%rax, %rcx
 650:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 2590              		.loc 12 650 0
 2591 0033 488B45D8 		movq	-40(%rbp), %rax
 2592 0037 4889C2   		movq	%rax, %rdx
 2593 003a 4889DE   		movq	%rbx, %rsi
 2594 003d 4889CF   		movq	%rcx, %rdi
 2595 0040 E8000000 		call	_ZSt23__copy_move_backward_a2ILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_@PLT
 2595      00
 651:/usr/include/c++/5/bits/stl_algobase.h ****     }
 2596              		.loc 12 651 0
 2597 0045 4883C428 		addq	$40, %rsp
 2598 0049 5B       		popq	%rbx
 2599 004a 5D       		popq	%rbp
 2600              		.cfi_def_cfa 7, 8
 2601 004b C3       		ret
 2602              		.cfi_endproc
 2603              	.LFE957:
 2605              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 2606              		.align 2
 2607              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_
 2609              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_:
 2610              	.LFB959:
 167:/usr/include/c++/5/bits/vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 2611              		.loc 8 167 0
 2612              		.cfi_startproc
 2613 0000 55       		pushq	%rbp
 2614              		.cfi_def_cfa_offset 16
 2615              		.cfi_offset 6, -16
 2616 0001 4889E5   		movq	%rsp, %rbp
 2617              		.cfi_def_cfa_register 6
 2618 0004 4156     		pushq	%r14
 2619 0006 4155     		pushq	%r13
 2620 0008 4154     		pushq	%r12
 2621 000a 53       		pushq	%rbx
 2622 000b 4883EC20 		subq	$32, %rsp
 2623              		.cfi_offset 14, -24
 2624              		.cfi_offset 13, -32
 2625              		.cfi_offset 12, -40
 2626              		.cfi_offset 3, -48
 2627 000f 48897DC8 		movq	%rdi, -56(%rbp)
 2628 0013 488975C0 		movq	%rsi, -64(%rbp)
 2629              	.LBB31:
 170:/usr/include/c++/5/bits/vector.tcc **** 	{
 2630              		.loc 8 170 0
 2631 0017 488B45C0 		movq	-64(%rbp), %rax
 2632 001b 483B45C8 		cmpq	-56(%rbp), %rax
 2633 001f 0F844402 		je	.L124
 2633      0000
 2634              	.LBB32:
 191:/usr/include/c++/5/bits/vector.tcc **** 	  if (__xlen > capacity())
 2635              		.loc 8 191 0
 2636 0025 488B45C0 		movq	-64(%rbp), %rax
 2637 0029 4889C7   		movq	%rax, %rdi
 2638 002c E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 2638      00
 2639 0031 488945D0 		movq	%rax, -48(%rbp)
 2640              	.LBB33:
 192:/usr/include/c++/5/bits/vector.tcc **** 	    {
 2641              		.loc 8 192 0
 2642 0035 488B45C8 		movq	-56(%rbp), %rax
 2643 0039 4889C7   		movq	%rax, %rdi
 2644 003c E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8capacity
 2644      00
 2645 0041 483B45D0 		cmpq	-48(%rbp), %rax
 2646 0045 0F92C0   		setb	%al
 2647 0048 84C0     		testb	%al, %al
 2648 004a 0F84D900 		je	.L125
 2648      0000
 2649              	.LBB34:
 194:/usr/include/c++/5/bits/vector.tcc **** 						   __x.end());
 2650              		.loc 8 194 0
 2651 0050 488B45C0 		movq	-64(%rbp), %rax
 2652 0054 4889C7   		movq	%rax, %rdi
 2653 0057 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv@PL
 2653      00
 2654 005c 4889C3   		movq	%rax, %rbx
 2655 005f 488B45C0 		movq	-64(%rbp), %rax
 2656 0063 4889C7   		movq	%rax, %rdi
 2657 0066 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv@
 2657      00
 2658 006b 4889C2   		movq	%rax, %rdx
 195:/usr/include/c++/5/bits/vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 2659              		.loc 8 195 0
 2660 006e 488B75D0 		movq	-48(%rbp), %rsi
 2661 0072 488B45C8 		movq	-56(%rbp), %rax
 2662 0076 4889D9   		movq	%rbx, %rcx
 2663 0079 4889C7   		movq	%rax, %rdi
 2664 007c E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE20_M_alloc
 2664      00
 2665 0081 488945D8 		movq	%rax, -40(%rbp)
 197:/usr/include/c++/5/bits/vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 2666              		.loc 8 197 0
 2667 0085 488B45C8 		movq	-56(%rbp), %rax
 2668 0089 4889C7   		movq	%rax, %rdi
 2669 008c E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 2669      00
 2670 0091 4889C2   		movq	%rax, %rdx
 196:/usr/include/c++/5/bits/vector.tcc **** 			    _M_get_Tp_allocator());
 2671              		.loc 8 196 0
 2672 0094 488B45C8 		movq	-56(%rbp), %rax
 2673 0098 488B4808 		movq	8(%rax), %rcx
 2674 009c 488B45C8 		movq	-56(%rbp), %rax
 2675 00a0 488B00   		movq	(%rax), %rax
 2676 00a3 4889CE   		movq	%rcx, %rsi
 2677 00a6 4889C7   		movq	%rax, %rdi
 2678 00a9 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 2678      00
 200:/usr/include/c++/5/bits/vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 2679              		.loc 8 200 0
 2680 00ae 488B45C8 		movq	-56(%rbp), %rax
 2681 00b2 488B4010 		movq	16(%rax), %rax
 198:/usr/include/c++/5/bits/vector.tcc **** 			    this->_M_impl._M_end_of_storage
 2682              		.loc 8 198 0
 2683 00b6 4889C2   		movq	%rax, %rdx
 200:/usr/include/c++/5/bits/vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 2684              		.loc 8 200 0
 2685 00b9 488B45C8 		movq	-56(%rbp), %rax
 2686 00bd 488B00   		movq	(%rax), %rax
 198:/usr/include/c++/5/bits/vector.tcc **** 			    this->_M_impl._M_end_of_storage
 2687              		.loc 8 198 0
 2688 00c0 4829C2   		subq	%rax, %rdx
 2689 00c3 4889D0   		movq	%rdx, %rax
 2690 00c6 48C1F803 		sarq	$3, %rax
 2691 00ca 4889C2   		movq	%rax, %rdx
 2692 00cd 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 2692      CCCCCCCC 
 2692      CCCC
 2693 00d7 480FAFC2 		imulq	%rdx, %rax
 2694 00db 4889C2   		movq	%rax, %rdx
 2695 00de 488B45C8 		movq	-56(%rbp), %rax
 2696 00e2 488B08   		movq	(%rax), %rcx
 2697 00e5 488B45C8 		movq	-56(%rbp), %rax
 2698 00e9 4889CE   		movq	%rcx, %rsi
 2699 00ec 4889C7   		movq	%rax, %rdi
 2700 00ef E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 2700      00
 201:/usr/include/c++/5/bits/vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 2701              		.loc 8 201 0
 2702 00f4 488B45C8 		movq	-56(%rbp), %rax
 2703 00f8 488B55D8 		movq	-40(%rbp), %rdx
 2704 00fc 488910   		movq	%rdx, (%rax)
 202:/usr/include/c++/5/bits/vector.tcc **** 	    }
 2705              		.loc 8 202 0
 2706 00ff 488B45C8 		movq	-56(%rbp), %rax
 2707 0103 488B08   		movq	(%rax), %rcx
 2708 0106 488B55D0 		movq	-48(%rbp), %rdx
 2709 010a 4889D0   		movq	%rdx, %rax
 2710 010d 48C1E002 		salq	$2, %rax
 2711 0111 4801D0   		addq	%rdx, %rax
 2712 0114 48C1E003 		salq	$3, %rax
 2713 0118 488D1401 		leaq	(%rcx,%rax), %rdx
 2714 011c 488B45C8 		movq	-56(%rbp), %rax
 2715 0120 48895010 		movq	%rdx, 16(%rax)
 2716              	.LBE34:
 2717 0124 E91B0100 		jmp	.L126
 2717      00
 2718              	.L125:
 204:/usr/include/c++/5/bits/vector.tcc **** 	    {
 2719              		.loc 8 204 0
 2720 0129 488B45C8 		movq	-56(%rbp), %rax
 2721 012d 4889C7   		movq	%rax, %rdi
 2722 0130 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 2722      00
 2723 0135 483B45D0 		cmpq	-48(%rbp), %rax
 2724 0139 0F93C0   		setnb	%al
 2725 013c 84C0     		testb	%al, %al
 2726 013e 7469     		je	.L127
 207:/usr/include/c++/5/bits/vector.tcc **** 	    }
 2727              		.loc 8 207 0
 2728 0140 488B45C8 		movq	-56(%rbp), %rax
 2729 0144 4889C7   		movq	%rax, %rdi
 2730 0147 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 2730      00
 2731 014c 4989C4   		movq	%rax, %r12
 206:/usr/include/c++/5/bits/vector.tcc **** 			    end(), _M_get_Tp_allocator());
 2732              		.loc 8 206 0
 2733 014f 488B45C8 		movq	-56(%rbp), %rax
 2734 0153 4889C7   		movq	%rax, %rdi
 2735 0156 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv@PLT
 2735      00
 2736 015b 4889C3   		movq	%rax, %rbx
 2737 015e 488B45C8 		movq	-56(%rbp), %rax
 2738 0162 4889C7   		movq	%rax, %rdi
 2739 0165 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv@P
 2739      00
 2740 016a 4989C6   		movq	%rax, %r14
 2741 016d 488B45C0 		movq	-64(%rbp), %rax
 2742 0171 4889C7   		movq	%rax, %rdi
 2743 0174 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv@PL
 2743      00
 2744 0179 4989C5   		movq	%rax, %r13
 2745 017c 488B45C0 		movq	-64(%rbp), %rax
 2746 0180 4889C7   		movq	%rax, %rdi
 2747 0183 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv@
 2747      00
 2748 0188 4C89F2   		movq	%r14, %rdx
 2749 018b 4C89EE   		movq	%r13, %rsi
 2750 018e 4889C7   		movq	%rax, %rdi
 2751 0191 E8000000 		call	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 2751      00
 2752 0196 4C89E2   		movq	%r12, %rdx
 2753 0199 4889DE   		movq	%rbx, %rsi
 2754 019c 4889C7   		movq	%rax, %rdi
 2755 019f E8000000 		call	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tr
 2755      00
 2756 01a4 E99B0000 		jmp	.L126
 2756      00
 2757              	.L127:
 211:/usr/include/c++/5/bits/vector.tcc **** 			this->_M_impl._M_start);
 2758              		.loc 8 211 0
 2759 01a9 488B45C8 		movq	-56(%rbp), %rax
 2760 01ad 488B18   		movq	(%rax), %rbx
 2761 01b0 488B45C0 		movq	-64(%rbp), %rax
 2762 01b4 4C8B20   		movq	(%rax), %r12
 2763 01b7 488B45C8 		movq	-56(%rbp), %rax
 2764 01bb 4889C7   		movq	%rax, %rdi
 2765 01be E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 2765      00
 2766 01c3 4889C2   		movq	%rax, %rdx
 2767 01c6 4889D0   		movq	%rdx, %rax
 2768 01c9 48C1E002 		salq	$2, %rax
 2769 01cd 4801D0   		addq	%rdx, %rax
 2770 01d0 48C1E003 		salq	$3, %rax
 2771 01d4 498D0C04 		leaq	(%r12,%rax), %rcx
 2772 01d8 488B45C0 		movq	-64(%rbp), %rax
 2773 01dc 488B00   		movq	(%rax), %rax
 2774 01df 4889DA   		movq	%rbx, %rdx
 2775 01e2 4889CE   		movq	%rcx, %rsi
 2776 01e5 4889C7   		movq	%rax, %rdi
 2777 01e8 E8000000 		call	_ZSt4copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_@PLT
 2777      00
 216:/usr/include/c++/5/bits/vector.tcc **** 	    }
 2778              		.loc 8 216 0
 2779 01ed 488B45C8 		movq	-56(%rbp), %rax
 2780 01f1 4889C7   		movq	%rax, %rdi
 2781 01f4 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 2781      00
 2782 01f9 4989C6   		movq	%rax, %r14
 213:/usr/include/c++/5/bits/vector.tcc **** 					  __x._M_impl._M_finish,
 2783              		.loc 8 213 0
 2784 01fc 488B45C8 		movq	-56(%rbp), %rax
 2785 0200 4C8B6008 		movq	8(%rax), %r12
 2786 0204 488B45C0 		movq	-64(%rbp), %rax
 2787 0208 488B5808 		movq	8(%rax), %rbx
 2788 020c 488B45C0 		movq	-64(%rbp), %rax
 2789 0210 4C8B28   		movq	(%rax), %r13
 2790 0213 488B45C8 		movq	-56(%rbp), %rax
 2791 0217 4889C7   		movq	%rax, %rdi
 2792 021a E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 2792      00
 2793 021f 4889C2   		movq	%rax, %rdx
 2794 0222 4889D0   		movq	%rdx, %rax
 2795 0225 48C1E002 		salq	$2, %rax
 2796 0229 4801D0   		addq	%rdx, %rax
 2797 022c 48C1E003 		salq	$3, %rax
 2798 0230 4C01E8   		addq	%r13, %rax
 2799 0233 4C89F1   		movq	%r14, %rcx
 2800 0236 4C89E2   		movq	%r12, %rdx
 2801 0239 4889DE   		movq	%rbx, %rsi
 2802 023c 4889C7   		movq	%rax, %rdi
 2803 023f E8000000 		call	_ZSt22__uninitialized_copy_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 2803      00
 2804              	.L126:
 2805              	.LBE33:
 218:/usr/include/c++/5/bits/vector.tcc **** 	}
 2806              		.loc 8 218 0
 2807 0244 488B45C8 		movq	-56(%rbp), %rax
 2808 0248 488B08   		movq	(%rax), %rcx
 2809 024b 488B55D0 		movq	-48(%rbp), %rdx
 2810 024f 4889D0   		movq	%rdx, %rax
 2811 0252 48C1E002 		salq	$2, %rax
 2812 0256 4801D0   		addq	%rdx, %rax
 2813 0259 48C1E003 		salq	$3, %rax
 2814 025d 488D1401 		leaq	(%rcx,%rax), %rdx
 2815 0261 488B45C8 		movq	-56(%rbp), %rax
 2816 0265 48895008 		movq	%rdx, 8(%rax)
 2817              	.L124:
 2818              	.LBE32:
 2819              	.LBE31:
 220:/usr/include/c++/5/bits/vector.tcc ****     }
 2820              		.loc 8 220 0
 2821 0269 488B45C8 		movq	-56(%rbp), %rax
 221:/usr/include/c++/5/bits/vector.tcc **** 
 2822              		.loc 8 221 0
 2823 026d 4883C420 		addq	$32, %rsp
 2824 0271 5B       		popq	%rbx
 2825 0272 415C     		popq	%r12
 2826 0274 415D     		popq	%r13
 2827 0276 415E     		popq	%r14
 2828 0278 5D       		popq	%rbp
 2829              		.cfi_def_cfa 7, 8
 2830 0279 C3       		ret
 2831              		.cfi_endproc
 2832              	.LFE959:
 2834              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE12_M_check_lenEmPKc,"axG",@pro
 2835              		.align 2
 2836              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE12_M_check_lenEmPKc
 2838              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE12_M_check_lenEmPKc:
 2839              	.LFB960:
 928:/usr/include/c++/5/bits/stl_vector.h **** 
 929:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 930:/usr/include/c++/5/bits/stl_vector.h ****       void
 931:/usr/include/c++/5/bits/stl_vector.h ****       push_back(value_type&& __x)
 932:/usr/include/c++/5/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 933:/usr/include/c++/5/bits/stl_vector.h **** 
 934:/usr/include/c++/5/bits/stl_vector.h ****       template<typename... _Args>
 935:/usr/include/c++/5/bits/stl_vector.h ****         void
 936:/usr/include/c++/5/bits/stl_vector.h ****         emplace_back(_Args&&... __args);
 937:/usr/include/c++/5/bits/stl_vector.h **** #endif
 938:/usr/include/c++/5/bits/stl_vector.h **** 
 939:/usr/include/c++/5/bits/stl_vector.h ****       /**
 940:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Removes last element.
 941:/usr/include/c++/5/bits/stl_vector.h ****        *
 942:/usr/include/c++/5/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 943:/usr/include/c++/5/bits/stl_vector.h ****        *
 944:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 945:/usr/include/c++/5/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 946:/usr/include/c++/5/bits/stl_vector.h ****        *  called.
 947:/usr/include/c++/5/bits/stl_vector.h ****        */
 948:/usr/include/c++/5/bits/stl_vector.h ****       void
 949:/usr/include/c++/5/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 950:/usr/include/c++/5/bits/stl_vector.h ****       {
 951:/usr/include/c++/5/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 952:/usr/include/c++/5/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 953:/usr/include/c++/5/bits/stl_vector.h ****       }
 954:/usr/include/c++/5/bits/stl_vector.h **** 
 955:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
 956:/usr/include/c++/5/bits/stl_vector.h ****       /**
 957:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 958:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 959:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __args  Arguments.
 960:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 961:/usr/include/c++/5/bits/stl_vector.h ****        *
 962:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 963:/usr/include/c++/5/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 964:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 965:/usr/include/c++/5/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 966:/usr/include/c++/5/bits/stl_vector.h ****        *  std::list.
 967:/usr/include/c++/5/bits/stl_vector.h ****        */
 968:/usr/include/c++/5/bits/stl_vector.h ****       template<typename... _Args>
 969:/usr/include/c++/5/bits/stl_vector.h ****         iterator
 970:/usr/include/c++/5/bits/stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 971:/usr/include/c++/5/bits/stl_vector.h **** 
 972:/usr/include/c++/5/bits/stl_vector.h ****       /**
 973:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 974:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 975:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 976:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 977:/usr/include/c++/5/bits/stl_vector.h ****        *
 978:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 979:/usr/include/c++/5/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 980:/usr/include/c++/5/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 981:/usr/include/c++/5/bits/stl_vector.h ****        *  used the user should consider using std::list.
 982:/usr/include/c++/5/bits/stl_vector.h ****        */
 983:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 984:/usr/include/c++/5/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 985:/usr/include/c++/5/bits/stl_vector.h **** #else
 986:/usr/include/c++/5/bits/stl_vector.h ****       /**
 987:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 988:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 989:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 990:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 991:/usr/include/c++/5/bits/stl_vector.h ****        *
 992:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 993:/usr/include/c++/5/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 994:/usr/include/c++/5/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 995:/usr/include/c++/5/bits/stl_vector.h ****        *  used the user should consider using std::list.
 996:/usr/include/c++/5/bits/stl_vector.h ****        */
 997:/usr/include/c++/5/bits/stl_vector.h ****       iterator
 998:/usr/include/c++/5/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
 999:/usr/include/c++/5/bits/stl_vector.h **** #endif
1000:/usr/include/c++/5/bits/stl_vector.h **** 
1001:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1002:/usr/include/c++/5/bits/stl_vector.h ****       /**
1003:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1004:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1005:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1006:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1007:/usr/include/c++/5/bits/stl_vector.h ****        *
1008:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1009:/usr/include/c++/5/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1010:/usr/include/c++/5/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1011:/usr/include/c++/5/bits/stl_vector.h ****        *  used the user should consider using std::list.
1012:/usr/include/c++/5/bits/stl_vector.h ****        */
1013:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1014:/usr/include/c++/5/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1015:/usr/include/c++/5/bits/stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1016:/usr/include/c++/5/bits/stl_vector.h **** 
1017:/usr/include/c++/5/bits/stl_vector.h ****       /**
1018:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1019:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1020:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1021:/usr/include/c++/5/bits/stl_vector.h ****        *
1022:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert copies of the data in the 
1023:/usr/include/c++/5/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1024:/usr/include/c++/5/bits/stl_vector.h ****        *  specified by @a position.
1025:/usr/include/c++/5/bits/stl_vector.h ****        *
1026:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1027:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1028:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1029:/usr/include/c++/5/bits/stl_vector.h ****        */
1030:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1031:/usr/include/c++/5/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1032:/usr/include/c++/5/bits/stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1033:/usr/include/c++/5/bits/stl_vector.h **** #endif
1034:/usr/include/c++/5/bits/stl_vector.h **** 
1035:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1036:/usr/include/c++/5/bits/stl_vector.h ****       /**
1037:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1038:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1039:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1040:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1041:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1042:/usr/include/c++/5/bits/stl_vector.h ****        *
1043:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1044:/usr/include/c++/5/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1045:/usr/include/c++/5/bits/stl_vector.h ****        *
1046:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1047:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1048:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1049:/usr/include/c++/5/bits/stl_vector.h ****        */
1050:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1051:/usr/include/c++/5/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1052:/usr/include/c++/5/bits/stl_vector.h ****       {
1053:/usr/include/c++/5/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1054:/usr/include/c++/5/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1055:/usr/include/c++/5/bits/stl_vector.h **** 	return begin() + __offset;
1056:/usr/include/c++/5/bits/stl_vector.h ****       }
1057:/usr/include/c++/5/bits/stl_vector.h **** #else
1058:/usr/include/c++/5/bits/stl_vector.h ****       /**
1059:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1060:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1061:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1062:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1063:/usr/include/c++/5/bits/stl_vector.h ****        *
1064:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1065:/usr/include/c++/5/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1066:/usr/include/c++/5/bits/stl_vector.h ****        *
1067:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1068:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1069:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1070:/usr/include/c++/5/bits/stl_vector.h ****        */
1071:/usr/include/c++/5/bits/stl_vector.h ****       void
1072:/usr/include/c++/5/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1073:/usr/include/c++/5/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1074:/usr/include/c++/5/bits/stl_vector.h **** #endif
1075:/usr/include/c++/5/bits/stl_vector.h **** 
1076:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1077:/usr/include/c++/5/bits/stl_vector.h ****       /**
1078:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1079:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1080:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1081:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1082:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1083:/usr/include/c++/5/bits/stl_vector.h ****        *
1084:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1085:/usr/include/c++/5/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1086:/usr/include/c++/5/bits/stl_vector.h ****        *  by @a pos.
1087:/usr/include/c++/5/bits/stl_vector.h ****        *
1088:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1089:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1090:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1091:/usr/include/c++/5/bits/stl_vector.h ****        */
1092:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator,
1093:/usr/include/c++/5/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1094:/usr/include/c++/5/bits/stl_vector.h ****         iterator
1095:/usr/include/c++/5/bits/stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1096:/usr/include/c++/5/bits/stl_vector.h **** 	       _InputIterator __last)
1097:/usr/include/c++/5/bits/stl_vector.h ****         {
1098:/usr/include/c++/5/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1099:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1100:/usr/include/c++/5/bits/stl_vector.h **** 			     __first, __last, __false_type());
1101:/usr/include/c++/5/bits/stl_vector.h **** 	  return begin() + __offset;
1102:/usr/include/c++/5/bits/stl_vector.h **** 	}
1103:/usr/include/c++/5/bits/stl_vector.h **** #else
1104:/usr/include/c++/5/bits/stl_vector.h ****       /**
1105:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1106:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1107:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1108:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1109:/usr/include/c++/5/bits/stl_vector.h ****        *
1110:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1111:/usr/include/c++/5/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1112:/usr/include/c++/5/bits/stl_vector.h ****        *  by @a pos.
1113:/usr/include/c++/5/bits/stl_vector.h ****        *
1114:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1115:/usr/include/c++/5/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1116:/usr/include/c++/5/bits/stl_vector.h ****        *  consider using std::list.
1117:/usr/include/c++/5/bits/stl_vector.h ****        */
1118:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1119:/usr/include/c++/5/bits/stl_vector.h ****         void
1120:/usr/include/c++/5/bits/stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1121:/usr/include/c++/5/bits/stl_vector.h **** 	       _InputIterator __last)
1122:/usr/include/c++/5/bits/stl_vector.h ****         {
1123:/usr/include/c++/5/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1124:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1125:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1126:/usr/include/c++/5/bits/stl_vector.h **** 	}
1127:/usr/include/c++/5/bits/stl_vector.h **** #endif
1128:/usr/include/c++/5/bits/stl_vector.h **** 
1129:/usr/include/c++/5/bits/stl_vector.h ****       /**
1130:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1131:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1132:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1133:/usr/include/c++/5/bits/stl_vector.h ****        *
1134:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1135:/usr/include/c++/5/bits/stl_vector.h ****        *  shorten the %vector by one.
1136:/usr/include/c++/5/bits/stl_vector.h ****        *
1137:/usr/include/c++/5/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1138:/usr/include/c++/5/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1139:/usr/include/c++/5/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1140:/usr/include/c++/5/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1141:/usr/include/c++/5/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1142:/usr/include/c++/5/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1143:/usr/include/c++/5/bits/stl_vector.h ****        */
1144:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1145:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1146:/usr/include/c++/5/bits/stl_vector.h ****       erase(const_iterator __position)
1147:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1148:/usr/include/c++/5/bits/stl_vector.h **** #else
1149:/usr/include/c++/5/bits/stl_vector.h ****       erase(iterator __position)
1150:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_erase(__position); }
1151:/usr/include/c++/5/bits/stl_vector.h **** #endif
1152:/usr/include/c++/5/bits/stl_vector.h **** 
1153:/usr/include/c++/5/bits/stl_vector.h ****       /**
1154:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1155:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1156:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1157:/usr/include/c++/5/bits/stl_vector.h ****        *                  erased.
1158:/usr/include/c++/5/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1159:/usr/include/c++/5/bits/stl_vector.h ****        *           prior to erasing (or end()).
1160:/usr/include/c++/5/bits/stl_vector.h ****        *
1161:/usr/include/c++/5/bits/stl_vector.h ****        *  This function will erase the elements in the range
1162:/usr/include/c++/5/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1163:/usr/include/c++/5/bits/stl_vector.h ****        *
1164:/usr/include/c++/5/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1165:/usr/include/c++/5/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1166:/usr/include/c++/5/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1167:/usr/include/c++/5/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1168:/usr/include/c++/5/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1169:/usr/include/c++/5/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1170:/usr/include/c++/5/bits/stl_vector.h ****        */
1171:/usr/include/c++/5/bits/stl_vector.h ****       iterator
1172:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1173:/usr/include/c++/5/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1174:/usr/include/c++/5/bits/stl_vector.h ****       {
1175:/usr/include/c++/5/bits/stl_vector.h **** 	const auto __beg = begin();
1176:/usr/include/c++/5/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1177:/usr/include/c++/5/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1178:/usr/include/c++/5/bits/stl_vector.h ****       }
1179:/usr/include/c++/5/bits/stl_vector.h **** #else
1180:/usr/include/c++/5/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1181:/usr/include/c++/5/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1182:/usr/include/c++/5/bits/stl_vector.h **** #endif
1183:/usr/include/c++/5/bits/stl_vector.h **** 
1184:/usr/include/c++/5/bits/stl_vector.h ****       /**
1185:/usr/include/c++/5/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1186:/usr/include/c++/5/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1187:/usr/include/c++/5/bits/stl_vector.h ****        *
1188:/usr/include/c++/5/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1189:/usr/include/c++/5/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1190:/usr/include/c++/5/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1191:/usr/include/c++/5/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1192:/usr/include/c++/5/bits/stl_vector.h ****        */
1193:/usr/include/c++/5/bits/stl_vector.h ****       void
1194:/usr/include/c++/5/bits/stl_vector.h ****       swap(vector& __x)
1195:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1196:/usr/include/c++/5/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_nothrow_swap())
1197:/usr/include/c++/5/bits/stl_vector.h **** #endif
1198:/usr/include/c++/5/bits/stl_vector.h ****       {
1199:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1200:/usr/include/c++/5/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1201:/usr/include/c++/5/bits/stl_vector.h **** 	                          __x._M_get_Tp_allocator());
1202:/usr/include/c++/5/bits/stl_vector.h ****       }
1203:/usr/include/c++/5/bits/stl_vector.h **** 
1204:/usr/include/c++/5/bits/stl_vector.h ****       /**
1205:/usr/include/c++/5/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1206:/usr/include/c++/5/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1207:/usr/include/c++/5/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1208:/usr/include/c++/5/bits/stl_vector.h ****        *  the user's responsibility.
1209:/usr/include/c++/5/bits/stl_vector.h ****        */
1210:/usr/include/c++/5/bits/stl_vector.h ****       void
1211:/usr/include/c++/5/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1212:/usr/include/c++/5/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1213:/usr/include/c++/5/bits/stl_vector.h **** 
1214:/usr/include/c++/5/bits/stl_vector.h ****     protected:
1215:/usr/include/c++/5/bits/stl_vector.h ****       /**
1216:/usr/include/c++/5/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1217:/usr/include/c++/5/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1218:/usr/include/c++/5/bits/stl_vector.h ****        */
1219:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _ForwardIterator>
1220:/usr/include/c++/5/bits/stl_vector.h ****         pointer
1221:/usr/include/c++/5/bits/stl_vector.h ****         _M_allocate_and_copy(size_type __n,
1222:/usr/include/c++/5/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1223:/usr/include/c++/5/bits/stl_vector.h ****         {
1224:/usr/include/c++/5/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1225:/usr/include/c++/5/bits/stl_vector.h **** 	  __try
1226:/usr/include/c++/5/bits/stl_vector.h **** 	    {
1227:/usr/include/c++/5/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1228:/usr/include/c++/5/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1229:/usr/include/c++/5/bits/stl_vector.h **** 	      return __result;
1230:/usr/include/c++/5/bits/stl_vector.h **** 	    }
1231:/usr/include/c++/5/bits/stl_vector.h **** 	  __catch(...)
1232:/usr/include/c++/5/bits/stl_vector.h **** 	    {
1233:/usr/include/c++/5/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1234:/usr/include/c++/5/bits/stl_vector.h **** 	      __throw_exception_again;
1235:/usr/include/c++/5/bits/stl_vector.h **** 	    }
1236:/usr/include/c++/5/bits/stl_vector.h **** 	}
1237:/usr/include/c++/5/bits/stl_vector.h **** 
1238:/usr/include/c++/5/bits/stl_vector.h **** 
1239:/usr/include/c++/5/bits/stl_vector.h ****       // Internal constructor functions follow.
1240:/usr/include/c++/5/bits/stl_vector.h **** 
1241:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1242:/usr/include/c++/5/bits/stl_vector.h **** 
1243:/usr/include/c++/5/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1244:/usr/include/c++/5/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1245:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _Integer>
1246:/usr/include/c++/5/bits/stl_vector.h ****         void
1247:/usr/include/c++/5/bits/stl_vector.h ****         _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1248:/usr/include/c++/5/bits/stl_vector.h ****         {
1249:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1250:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1251:/usr/include/c++/5/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1252:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1253:/usr/include/c++/5/bits/stl_vector.h **** 	}
1254:/usr/include/c++/5/bits/stl_vector.h **** 
1255:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1256:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1257:/usr/include/c++/5/bits/stl_vector.h ****         void
1258:/usr/include/c++/5/bits/stl_vector.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1259:/usr/include/c++/5/bits/stl_vector.h **** 			       __false_type)
1260:/usr/include/c++/5/bits/stl_vector.h ****         {
1261:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1262:/usr/include/c++/5/bits/stl_vector.h **** 	    iterator_category _IterCategory;
1263:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1264:/usr/include/c++/5/bits/stl_vector.h **** 	}
1265:/usr/include/c++/5/bits/stl_vector.h **** 
1266:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1267:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1268:/usr/include/c++/5/bits/stl_vector.h ****         void
1269:/usr/include/c++/5/bits/stl_vector.h ****         _M_range_initialize(_InputIterator __first,
1270:/usr/include/c++/5/bits/stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1271:/usr/include/c++/5/bits/stl_vector.h ****         {
1272:/usr/include/c++/5/bits/stl_vector.h **** 	  for (; __first != __last; ++__first)
1273:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1274:/usr/include/c++/5/bits/stl_vector.h **** 	    emplace_back(*__first);
1275:/usr/include/c++/5/bits/stl_vector.h **** #else
1276:/usr/include/c++/5/bits/stl_vector.h **** 	    push_back(*__first);
1277:/usr/include/c++/5/bits/stl_vector.h **** #endif
1278:/usr/include/c++/5/bits/stl_vector.h **** 	}
1279:/usr/include/c++/5/bits/stl_vector.h **** 
1280:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1281:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _ForwardIterator>
1282:/usr/include/c++/5/bits/stl_vector.h ****         void
1283:/usr/include/c++/5/bits/stl_vector.h ****         _M_range_initialize(_ForwardIterator __first,
1284:/usr/include/c++/5/bits/stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1285:/usr/include/c++/5/bits/stl_vector.h ****         {
1286:/usr/include/c++/5/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1287:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1288:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1289:/usr/include/c++/5/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1290:/usr/include/c++/5/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1291:/usr/include/c++/5/bits/stl_vector.h **** 					this->_M_impl._M_start,
1292:/usr/include/c++/5/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1293:/usr/include/c++/5/bits/stl_vector.h **** 	}
1294:/usr/include/c++/5/bits/stl_vector.h **** 
1295:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1296:/usr/include/c++/5/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1297:/usr/include/c++/5/bits/stl_vector.h ****       void
1298:/usr/include/c++/5/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1299:/usr/include/c++/5/bits/stl_vector.h ****       {
1300:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1301:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1302:/usr/include/c++/5/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1303:/usr/include/c++/5/bits/stl_vector.h ****       }
1304:/usr/include/c++/5/bits/stl_vector.h **** 
1305:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1306:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the vector(n) constructor.
1307:/usr/include/c++/5/bits/stl_vector.h ****       void
1308:/usr/include/c++/5/bits/stl_vector.h ****       _M_default_initialize(size_type __n)
1309:/usr/include/c++/5/bits/stl_vector.h ****       {
1310:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1311:/usr/include/c++/5/bits/stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1312:/usr/include/c++/5/bits/stl_vector.h **** 					   _M_get_Tp_allocator());
1313:/usr/include/c++/5/bits/stl_vector.h ****       }
1314:/usr/include/c++/5/bits/stl_vector.h **** #endif
1315:/usr/include/c++/5/bits/stl_vector.h **** 
1316:/usr/include/c++/5/bits/stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1317:/usr/include/c++/5/bits/stl_vector.h ****       // assignment work for the range versions.
1318:/usr/include/c++/5/bits/stl_vector.h **** 
1319:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1320:/usr/include/c++/5/bits/stl_vector.h **** 
1321:/usr/include/c++/5/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1322:/usr/include/c++/5/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1323:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _Integer>
1324:/usr/include/c++/5/bits/stl_vector.h ****         void
1325:/usr/include/c++/5/bits/stl_vector.h ****         _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1326:/usr/include/c++/5/bits/stl_vector.h ****         { _M_fill_assign(__n, __val); }
1327:/usr/include/c++/5/bits/stl_vector.h **** 
1328:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1329:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1330:/usr/include/c++/5/bits/stl_vector.h ****         void
1331:/usr/include/c++/5/bits/stl_vector.h ****         _M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1332:/usr/include/c++/5/bits/stl_vector.h **** 			   __false_type)
1333:/usr/include/c++/5/bits/stl_vector.h ****         {
1334:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1335:/usr/include/c++/5/bits/stl_vector.h **** 	    iterator_category _IterCategory;
1336:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_assign_aux(__first, __last, _IterCategory());
1337:/usr/include/c++/5/bits/stl_vector.h **** 	}
1338:/usr/include/c++/5/bits/stl_vector.h **** 
1339:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the second assign_dispatch above
1340:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1341:/usr/include/c++/5/bits/stl_vector.h ****         void
1342:/usr/include/c++/5/bits/stl_vector.h ****         _M_assign_aux(_InputIterator __first, _InputIterator __last,
1343:/usr/include/c++/5/bits/stl_vector.h **** 		      std::input_iterator_tag);
1344:/usr/include/c++/5/bits/stl_vector.h **** 
1345:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the second assign_dispatch above
1346:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _ForwardIterator>
1347:/usr/include/c++/5/bits/stl_vector.h ****         void
1348:/usr/include/c++/5/bits/stl_vector.h ****         _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1349:/usr/include/c++/5/bits/stl_vector.h **** 		      std::forward_iterator_tag);
1350:/usr/include/c++/5/bits/stl_vector.h **** 
1351:/usr/include/c++/5/bits/stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1352:/usr/include/c++/5/bits/stl_vector.h ****       // to be the same thing.
1353:/usr/include/c++/5/bits/stl_vector.h ****       void
1354:/usr/include/c++/5/bits/stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1355:/usr/include/c++/5/bits/stl_vector.h **** 
1356:/usr/include/c++/5/bits/stl_vector.h **** 
1357:/usr/include/c++/5/bits/stl_vector.h ****       // Internal insert functions follow.
1358:/usr/include/c++/5/bits/stl_vector.h **** 
1359:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1360:/usr/include/c++/5/bits/stl_vector.h **** 
1361:/usr/include/c++/5/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1362:/usr/include/c++/5/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1363:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _Integer>
1364:/usr/include/c++/5/bits/stl_vector.h ****         void
1365:/usr/include/c++/5/bits/stl_vector.h ****         _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1366:/usr/include/c++/5/bits/stl_vector.h **** 			   __true_type)
1367:/usr/include/c++/5/bits/stl_vector.h ****         { _M_fill_insert(__pos, __n, __val); }
1368:/usr/include/c++/5/bits/stl_vector.h **** 
1369:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1370:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1371:/usr/include/c++/5/bits/stl_vector.h ****         void
1372:/usr/include/c++/5/bits/stl_vector.h ****         _M_insert_dispatch(iterator __pos, _InputIterator __first,
1373:/usr/include/c++/5/bits/stl_vector.h **** 			   _InputIterator __last, __false_type)
1374:/usr/include/c++/5/bits/stl_vector.h ****         {
1375:/usr/include/c++/5/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1376:/usr/include/c++/5/bits/stl_vector.h **** 	    iterator_category _IterCategory;
1377:/usr/include/c++/5/bits/stl_vector.h **** 	  _M_range_insert(__pos, __first, __last, _IterCategory());
1378:/usr/include/c++/5/bits/stl_vector.h **** 	}
1379:/usr/include/c++/5/bits/stl_vector.h **** 
1380:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the second insert_dispatch above
1381:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _InputIterator>
1382:/usr/include/c++/5/bits/stl_vector.h ****         void
1383:/usr/include/c++/5/bits/stl_vector.h ****         _M_range_insert(iterator __pos, _InputIterator __first,
1384:/usr/include/c++/5/bits/stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1385:/usr/include/c++/5/bits/stl_vector.h **** 
1386:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the second insert_dispatch above
1387:/usr/include/c++/5/bits/stl_vector.h ****       template<typename _ForwardIterator>
1388:/usr/include/c++/5/bits/stl_vector.h ****         void
1389:/usr/include/c++/5/bits/stl_vector.h ****         _M_range_insert(iterator __pos, _ForwardIterator __first,
1390:/usr/include/c++/5/bits/stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1391:/usr/include/c++/5/bits/stl_vector.h **** 
1392:/usr/include/c++/5/bits/stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1393:/usr/include/c++/5/bits/stl_vector.h ****       // the same thing.
1394:/usr/include/c++/5/bits/stl_vector.h ****       void
1395:/usr/include/c++/5/bits/stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1396:/usr/include/c++/5/bits/stl_vector.h **** 
1397:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus >= 201103L
1398:/usr/include/c++/5/bits/stl_vector.h ****       // Called by resize(n).
1399:/usr/include/c++/5/bits/stl_vector.h ****       void
1400:/usr/include/c++/5/bits/stl_vector.h ****       _M_default_append(size_type __n);
1401:/usr/include/c++/5/bits/stl_vector.h **** 
1402:/usr/include/c++/5/bits/stl_vector.h ****       bool
1403:/usr/include/c++/5/bits/stl_vector.h ****       _M_shrink_to_fit();
1404:/usr/include/c++/5/bits/stl_vector.h **** #endif
1405:/usr/include/c++/5/bits/stl_vector.h **** 
1406:/usr/include/c++/5/bits/stl_vector.h ****       // Called by insert(p,x)
1407:/usr/include/c++/5/bits/stl_vector.h **** #if __cplusplus < 201103L
1408:/usr/include/c++/5/bits/stl_vector.h ****       void
1409:/usr/include/c++/5/bits/stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1410:/usr/include/c++/5/bits/stl_vector.h **** #else
1411:/usr/include/c++/5/bits/stl_vector.h ****       template<typename... _Args>
1412:/usr/include/c++/5/bits/stl_vector.h ****         void
1413:/usr/include/c++/5/bits/stl_vector.h ****         _M_insert_aux(iterator __position, _Args&&... __args);
1414:/usr/include/c++/5/bits/stl_vector.h **** 
1415:/usr/include/c++/5/bits/stl_vector.h ****       template<typename... _Args>
1416:/usr/include/c++/5/bits/stl_vector.h ****         void
1417:/usr/include/c++/5/bits/stl_vector.h ****         _M_emplace_back_aux(_Args&&... __args);
1418:/usr/include/c++/5/bits/stl_vector.h **** #endif
1419:/usr/include/c++/5/bits/stl_vector.h **** 
1420:/usr/include/c++/5/bits/stl_vector.h ****       // Called by the latter.
1421:/usr/include/c++/5/bits/stl_vector.h ****       size_type
1422:/usr/include/c++/5/bits/stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 2840              		.loc 5 1422 0
 2841              		.cfi_startproc
 2842 0000 55       		pushq	%rbp
 2843              		.cfi_def_cfa_offset 16
 2844              		.cfi_offset 6, -16
 2845 0001 4889E5   		movq	%rsp, %rbp
 2846              		.cfi_def_cfa_register 6
 2847 0004 53       		pushq	%rbx
 2848 0005 4883EC48 		subq	$72, %rsp
 2849              		.cfi_offset 3, -24
 2850 0009 48897DC8 		movq	%rdi, -56(%rbp)
 2851 000d 488975C0 		movq	%rsi, -64(%rbp)
 2852 0011 488955B8 		movq	%rdx, -72(%rbp)
 2853              		.loc 5 1422 0
 2854 0015 64488B04 		movq	%fs:40, %rax
 2854      25280000 
 2854      00
 2855 001e 488945E8 		movq	%rax, -24(%rbp)
 2856 0022 31C0     		xorl	%eax, %eax
1423:/usr/include/c++/5/bits/stl_vector.h ****       {
1424:/usr/include/c++/5/bits/stl_vector.h **** 	if (max_size() - size() < __n)
 2857              		.loc 5 1424 0
 2858 0024 488B45C8 		movq	-56(%rbp), %rax
 2859 0028 4889C7   		movq	%rax, %rdi
 2860 002b E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE8max_sizeEv@PLT
 2860      00
 2861 0030 4889C3   		movq	%rax, %rbx
 2862 0033 488B45C8 		movq	-56(%rbp), %rax
 2863 0037 4889C7   		movq	%rax, %rdi
 2864 003a E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv@PLT
 2864      00
 2865 003f 4829C3   		subq	%rax, %rbx
 2866 0042 4889DA   		movq	%rbx, %rdx
 2867 0045 488B45C0 		movq	-64(%rbp), %rax
 2868 0049 4839C2   		cmpq	%rax, %rdx
 2869 004c 0F92C0   		setb	%al
 2870 004f 84C0     		testb	%al, %al
 2871 0051 740C     		je	.L130
1425:/usr/include/c++/5/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 2872              		.loc 5 1425 0
 2873 0053 488B45B8 		movq	-72(%rbp), %rax
 2874 0057 4889C7   		movq	%rax, %rdi
 2875 005a E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 2875      00
 2876              	.L130:
1426:/usr/include/c++/5/bits/stl_vector.h **** 
1427:/usr/include/c++/5/bits/stl_vector.h **** 	const size_type __len = size() + std::max(size(), __n);
 2877              		.loc 5 1427 0
 2878 005f 488B45C8 		movq	-56(%rbp), %rax
 2879 0063 4889C7   		movq	%rax, %rdi
 2880 0066 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv@PLT
 2880      00
 2881 006b 4889C3   		movq	%rax, %rbx
 2882 006e 488B45C8 		movq	-56(%rbp), %rax
 2883 0072 4889C7   		movq	%rax, %rdi
 2884 0075 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv@PLT
 2884      00
 2885 007a 488945D8 		movq	%rax, -40(%rbp)
 2886 007e 488D55C0 		leaq	-64(%rbp), %rdx
 2887 0082 488D45D8 		leaq	-40(%rbp), %rax
 2888 0086 4889D6   		movq	%rdx, %rsi
 2889 0089 4889C7   		movq	%rax, %rdi
 2890 008c E8000000 		call	_ZSt3maxImERKT_S2_S2_@PLT
 2890      00
 2891 0091 488B00   		movq	(%rax), %rax
 2892 0094 4801D8   		addq	%rbx, %rax
 2893 0097 488945E0 		movq	%rax, -32(%rbp)
1428:/usr/include/c++/5/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 2894              		.loc 5 1428 0
 2895 009b 488B45C8 		movq	-56(%rbp), %rax
 2896 009f 4889C7   		movq	%rax, %rdi
 2897 00a2 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv@PLT
 2897      00
 2898 00a7 483B45E0 		cmpq	-32(%rbp), %rax
 2899 00ab 7712     		ja	.L131
 2900              		.loc 5 1428 0 is_stmt 0 discriminator 2
 2901 00ad 488B45C8 		movq	-56(%rbp), %rax
 2902 00b1 4889C7   		movq	%rax, %rdi
 2903 00b4 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE8max_sizeEv@PLT
 2903      00
 2904 00b9 483B45E0 		cmpq	-32(%rbp), %rax
 2905 00bd 730E     		jnb	.L132
 2906              	.L131:
 2907              		.loc 5 1428 0 discriminator 3
 2908 00bf 488B45C8 		movq	-56(%rbp), %rax
 2909 00c3 4889C7   		movq	%rax, %rdi
 2910 00c6 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE8max_sizeEv@PLT
 2910      00
 2911 00cb EB04     		jmp	.L134
 2912              	.L132:
 2913              		.loc 5 1428 0 discriminator 4
 2914 00cd 488B45E0 		movq	-32(%rbp), %rax
 2915              	.L134:
1429:/usr/include/c++/5/bits/stl_vector.h ****       }
 2916              		.loc 5 1429 0 is_stmt 1 discriminator 7
 2917 00d1 488B4DE8 		movq	-24(%rbp), %rcx
 2918 00d5 6448330C 		xorq	%fs:40, %rcx
 2918      25280000 
 2918      00
 2919 00de 7405     		je	.L135
 2920              		.loc 5 1429 0 is_stmt 0
 2921 00e0 E8000000 		call	__stack_chk_fail@PLT
 2921      00
 2922              	.L135:
 2923 00e5 4883C448 		addq	$72, %rsp
 2924 00e9 5B       		popq	%rbx
 2925 00ea 5D       		popq	%rbp
 2926              		.cfi_def_cfa 7, 8
 2927 00eb C3       		ret
 2928              		.cfi_endproc
 2929              	.LFE960:
 2931              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6
 2932              		.align 2
 2933              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE5beginEv
 2935              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE5beginEv:
 2936              	.LFB961:
 547:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 2937              		.loc 5 547 0 is_stmt 1
 2938              		.cfi_startproc
 2939 0000 55       		pushq	%rbp
 2940              		.cfi_def_cfa_offset 16
 2941              		.cfi_offset 6, -16
 2942 0001 4889E5   		movq	%rsp, %rbp
 2943              		.cfi_def_cfa_register 6
 2944 0004 4883EC20 		subq	$32, %rsp
 2945 0008 48897DE8 		movq	%rdi, -24(%rbp)
 547:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 2946              		.loc 5 547 0
 2947 000c 64488B04 		movq	%fs:40, %rax
 2947      25280000 
 2947      00
 2948 0015 488945F8 		movq	%rax, -8(%rbp)
 2949 0019 31C0     		xorl	%eax, %eax
 548:/usr/include/c++/5/bits/stl_vector.h **** 
 2950              		.loc 5 548 0
 2951 001b 488B55E8 		movq	-24(%rbp), %rdx
 2952 001f 488D45F0 		leaq	-16(%rbp), %rax
 2953 0023 4889D6   		movq	%rdx, %rsi
 2954 0026 4889C7   		movq	%rax, %rdi
 2955 0029 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC1ERKS
 2955      00
 2956 002e 488B45F0 		movq	-16(%rbp), %rax
 2957 0032 488B4DF8 		movq	-8(%rbp), %rcx
 2958 0036 6448330C 		xorq	%fs:40, %rcx
 2958      25280000 
 2958      00
 2959 003f 7405     		je	.L138
 2960 0041 E8000000 		call	__stack_chk_fail@PLT
 2960      00
 2961              	.L138:
 2962 0046 C9       		leave
 2963              		.cfi_def_cfa 7, 8
 2964 0047 C3       		ret
 2965              		.cfi_endproc
 2966              	.LFE961:
 2968              		.section	.text._ZN9__gnu_cxxmiIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEENS_17__norma
 2969              		.weak	_ZN9__gnu_cxxmiIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEENS_17__normal_iterato
 2971              	_ZN9__gnu_cxxmiIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_
 2972              	.LFB962:
 807:/usr/include/c++/5/bits/stl_iterator.h ****     };
 808:/usr/include/c++/5/bits/stl_iterator.h **** 
 809:/usr/include/c++/5/bits/stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 810:/usr/include/c++/5/bits/stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 811:/usr/include/c++/5/bits/stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 812:/usr/include/c++/5/bits/stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 813:/usr/include/c++/5/bits/stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 814:/usr/include/c++/5/bits/stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 815:/usr/include/c++/5/bits/stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 816:/usr/include/c++/5/bits/stl_iterator.h **** 
 817:/usr/include/c++/5/bits/stl_iterator.h ****   // Forward iterator requirements
 818:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 819:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 820:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 821:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 822:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 823:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 824:/usr/include/c++/5/bits/stl_iterator.h **** 
 825:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 826:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 827:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 828:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 829:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 830:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 831:/usr/include/c++/5/bits/stl_iterator.h **** 
 832:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 833:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 834:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 835:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 836:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 837:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 838:/usr/include/c++/5/bits/stl_iterator.h **** 
 839:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 840:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 841:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 842:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 843:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 844:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 845:/usr/include/c++/5/bits/stl_iterator.h **** 
 846:/usr/include/c++/5/bits/stl_iterator.h ****   // Random access iterator requirements
 847:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 848:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 849:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 850:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 851:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 852:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 853:/usr/include/c++/5/bits/stl_iterator.h **** 
 854:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 855:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 856:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
 857:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 858:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 859:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 860:/usr/include/c++/5/bits/stl_iterator.h **** 
 861:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 862:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 863:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 864:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 865:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 866:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 867:/usr/include/c++/5/bits/stl_iterator.h **** 
 868:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 869:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 870:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 871:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 872:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 873:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 874:/usr/include/c++/5/bits/stl_iterator.h **** 
 875:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 876:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 877:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 878:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 879:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 880:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 881:/usr/include/c++/5/bits/stl_iterator.h **** 
 882:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 883:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 884:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 885:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 886:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 887:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 888:/usr/include/c++/5/bits/stl_iterator.h **** 
 889:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 890:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 891:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 892:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 893:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 894:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 895:/usr/include/c++/5/bits/stl_iterator.h **** 
 896:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 897:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 898:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
 899:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 900:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 901:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 902:/usr/include/c++/5/bits/stl_iterator.h **** 
 903:/usr/include/c++/5/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 904:/usr/include/c++/5/bits/stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 905:/usr/include/c++/5/bits/stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 906:/usr/include/c++/5/bits/stl_iterator.h ****   // parameters.
 907:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 908:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 909:/usr/include/c++/5/bits/stl_iterator.h ****     // DR 685.
 910:/usr/include/c++/5/bits/stl_iterator.h ****     inline auto
 911:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 912:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 913:/usr/include/c++/5/bits/stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
 914:/usr/include/c++/5/bits/stl_iterator.h **** #else
 915:/usr/include/c++/5/bits/stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 916:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 917:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 918:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 919:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 920:/usr/include/c++/5/bits/stl_iterator.h **** 
 921:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 922:/usr/include/c++/5/bits/stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 923:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 2973              		.loc 9 923 0
 2974              		.cfi_startproc
 2975 0000 55       		pushq	%rbp
 2976              		.cfi_def_cfa_offset 16
 2977              		.cfi_offset 6, -16
 2978 0001 4889E5   		movq	%rsp, %rbp
 2979              		.cfi_def_cfa_register 6
 2980 0004 53       		pushq	%rbx
 2981 0005 4883EC18 		subq	$24, %rsp
 2982              		.cfi_offset 3, -24
 2983 0009 48897DE8 		movq	%rdi, -24(%rbp)
 2984 000d 488975E0 		movq	%rsi, -32(%rbp)
 924:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 925:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 926:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 2985              		.loc 9 926 0
 2986 0011 488B45E8 		movq	-24(%rbp), %rax
 2987 0015 4889C7   		movq	%rax, %rdi
 2988 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4base
 2988      00
 2989 001d 488B00   		movq	(%rax), %rax
 2990 0020 4889C3   		movq	%rax, %rbx
 2991 0023 488B45E0 		movq	-32(%rbp), %rax
 2992 0027 4889C7   		movq	%rax, %rdi
 2993 002a E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4base
 2993      00
 2994 002f 488B00   		movq	(%rax), %rax
 2995 0032 4829C3   		subq	%rax, %rbx
 2996 0035 4889D8   		movq	%rbx, %rax
 2997 0038 48C1F807 		sarq	$7, %rax
 2998 003c 4883C418 		addq	$24, %rsp
 2999 0040 5B       		popq	%rbx
 3000 0041 5D       		popq	%rbp
 3001              		.cfi_def_cfa 7, 8
 3002 0042 C3       		ret
 3003              		.cfi_endproc
 3004              	.LFE962:
 3006              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE11_M_allocateEm,"axG",@p
 3007              		.align 2
 3008              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE11_M_allocateEm
 3010              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE11_M_allocateEm:
 3011              	.LFB963:
 167:/usr/include/c++/5/bits/stl_vector.h ****       {
 3012              		.loc 5 167 0
 3013              		.cfi_startproc
 3014 0000 55       		pushq	%rbp
 3015              		.cfi_def_cfa_offset 16
 3016              		.cfi_offset 6, -16
 3017 0001 4889E5   		movq	%rsp, %rbp
 3018              		.cfi_def_cfa_register 6
 3019 0004 4883EC10 		subq	$16, %rsp
 3020 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3021 000c 488975F0 		movq	%rsi, -16(%rbp)
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 3022              		.loc 5 170 0
 3023 0010 48837DF0 		cmpq	$0, -16(%rbp)
 3023      00
 3024 0015 7415     		je	.L142
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 3025              		.loc 5 170 0 is_stmt 0 discriminator 1
 3026 0017 488B45F8 		movq	-8(%rbp), %rax
 3027 001b 488B55F0 		movq	-16(%rbp), %rdx
 3028 001f 4889D6   		movq	%rdx, %rsi
 3029 0022 4889C7   		movq	%rax, %rdi
 3030 0025 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8allocateERS3_m@PLT
 3030      00
 3031 002a EB05     		jmp	.L144
 3032              	.L142:
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 3033              		.loc 5 170 0 discriminator 2
 3034 002c B8000000 		movl	$0, %eax
 3034      00
 3035              	.L144:
 171:/usr/include/c++/5/bits/stl_vector.h **** 
 3036              		.loc 5 171 0 is_stmt 1 discriminator 5
 3037 0031 C9       		leave
 3038              		.cfi_def_cfa 7, 8
 3039 0032 C3       		ret
 3040              		.cfi_endproc
 3041              	.LFE963:
 3043              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 3044              		.align 2
 3045              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 3047              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 3048              	.LFB964:
 113:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 3049              		.loc 5 113 0
 3050              		.cfi_startproc
 3051 0000 55       		pushq	%rbp
 3052              		.cfi_def_cfa_offset 16
 3053              		.cfi_offset 6, -16
 3054 0001 4889E5   		movq	%rsp, %rbp
 3055              		.cfi_def_cfa_register 6
 3056 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/bits/stl_vector.h **** 
 3057              		.loc 5 114 0
 3058 0008 488B45F8 		movq	-8(%rbp), %rax
 3059 000c 5D       		popq	%rbp
 3060              		.cfi_def_cfa 7, 8
 3061 000d C3       		ret
 3062              		.cfi_endproc
 3063              	.LFE964:
 3065              		.section	.text._ZSt34__uninitialized_move_if_noexcept_aIPN8UnitTest18DeferredTestResultES2_SaIS1_E
 3066              		.weak	_ZSt34__uninitialized_move_if_noexcept_aIPN8UnitTest18DeferredTestResultES2_SaIS1_EET0_T_S5_
 3068              	_ZSt34__uninitialized_move_if_noexcept_aIPN8UnitTest18DeferredTestResultES2_SaIS1_EET0_T_S5_S4_RT1_
 3069              	.LFB965:
 3070              		.file 13 "/usr/include/c++/5/bits/stl_uninitialized.h"
   1:/usr/include/c++/5/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_uninitialized.h **** 
   3:/usr/include/c++/5/bits/stl_uninitialized.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_uninitialized.h **** //
   5:/usr/include/c++/5/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_uninitialized.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  11:/usr/include/c++/5/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  16:/usr/include/c++/5/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  20:/usr/include/c++/5/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  25:/usr/include/c++/5/bits/stl_uninitialized.h **** /*
  26:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  27:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  30:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  38:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  39:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  42:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_uninitialized.h ****  */
  50:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  51:/usr/include/c++/5/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/usr/include/c++/5/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/5/bits/stl_uninitialized.h ****  */
  55:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  56:/usr/include/c++/5/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/usr/include/c++/5/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  59:/usr/include/c++/5/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/5/bits/stl_uninitialized.h **** {
  61:/usr/include/c++/5/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  63:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  64:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  65:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
  66:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  67:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
  68:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  69:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  70:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
  71:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  72:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
  73:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, ++__cur)
  75:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  76:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
  77:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
  79:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
  80:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  81:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  82:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
  83:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
  84:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
  85:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  86:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
  87:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  88:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
  89:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  90:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
  91:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  92:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  93:/usr/include/c++/5/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
  94:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
  95:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  96:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
  97:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
  98:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
  99:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 100:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 101:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 102:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 103:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 104:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 105:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 106:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 107:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 108:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 109:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 110:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 111:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType1;
 112:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 113:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType2;
 114:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 115:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 116:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 117:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 118:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 119:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 120:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 121:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 122:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 123:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 124:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 125:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       && __assignable>::
 126:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 127:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 128:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 129:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 130:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 131:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 132:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 133:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 134:/usr/include/c++/5/bits/stl_uninitialized.h ****         static void
 135:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 136:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 137:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
 138:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 139:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 140:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 141:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 142:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 143:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 144:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
 145:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 146:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 147:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 148:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 149:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 150:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 151:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 152:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
 153:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 154:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 155:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 156:/usr/include/c++/5/bits/stl_uninitialized.h ****         static void
 157:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 158:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 159:/usr/include/c++/5/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 160:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 161:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 162:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
 163:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 164:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 165:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 166:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 167:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   Nothing.
 168:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 169:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 170:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 171:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 172:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline void
 173:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 174:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 175:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 176:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 177:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType;
 178:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 179:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 180:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 181:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 182:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 183:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 184:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 185:/usr/include/c++/5/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 186:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 187:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 188:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 189:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 190:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 191:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 192:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 193:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 194:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
 195:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 196:/usr/include/c++/5/bits/stl_uninitialized.h **** 			const _Tp& __x)
 197:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
 198:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 199:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 200:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 201:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 202:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 203:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
 204:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 205:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
 206:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 207:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 208:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 209:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 210:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 211:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 212:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 213:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
 214:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 215:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 216:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 217:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
 218:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 219:/usr/include/c++/5/bits/stl_uninitialized.h **** 			const _Tp& __x)
 220:/usr/include/c++/5/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 221:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 222:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 223:/usr/include/c++/5/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 224:/usr/include/c++/5/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 225:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
 226:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 227:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 228:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 229:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 230:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   Nothing.
 231:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 232:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 233:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 234:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 235:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 236:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 237:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 238:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 239:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType;
 240:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 241:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 242:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 243:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 244:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 245:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 246:/usr/include/c++/5/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 247:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 248:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 249:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 250:/usr/include/c++/5/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 251:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 252:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 253:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 254:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 255:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 256:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 257:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 258:/usr/include/c++/5/bits/stl_uninitialized.h ****     _ForwardIterator
 259:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 260:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 261:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 262:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 263:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 264:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 265:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 266:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, ++__cur)
 267:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 268:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  return __cur;
 269:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 270:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 271:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 272:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 273:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 274:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 275:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 276:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 277:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 278:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 279:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 280:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 281:/usr/include/c++/5/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 282:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 283:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 284:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 285:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 286:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 287:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 288:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 289:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 290:/usr/include/c++/5/bits/stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 291:/usr/include/c++/5/bits/stl_uninitialized.h **** 					 __result, __alloc);
 292:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 293:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 294:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 295:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 296:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 297:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 3071              		.loc 13 297 0
 3072              		.cfi_startproc
 3073 0000 55       		pushq	%rbp
 3074              		.cfi_def_cfa_offset 16
 3075              		.cfi_offset 6, -16
 3076 0001 4889E5   		movq	%rsp, %rbp
 3077              		.cfi_def_cfa_register 6
 3078 0004 4883EC20 		subq	$32, %rsp
 3079 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3080 000c 488975F0 		movq	%rsi, -16(%rbp)
 3081 0010 488955E8 		movq	%rdx, -24(%rbp)
 3082 0014 48894DE0 		movq	%rcx, -32(%rbp)
 298:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 299:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _ForwardIterator __result,
 300:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _Allocator& __alloc)
 301:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 302:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a
 303:/usr/include/c++/5/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 304:/usr/include/c++/5/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 3083              		.loc 13 304 0
 3084 0018 488B4DE0 		movq	-32(%rbp), %rcx
 3085 001c 488B55E8 		movq	-24(%rbp), %rdx
 3086 0020 488B75F0 		movq	-16(%rbp), %rsi
 3087 0024 488B45F8 		movq	-8(%rbp), %rax
 3088 0028 4889C7   		movq	%rax, %rdi
 3089 002b E8000000 		call	_ZSt22__uninitialized_copy_aIPN8UnitTest18DeferredTestResultES2_S1_ET0_T_S4_S3_RSaIT1_E@PLT
 3089      00
 305:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 3090              		.loc 13 305 0
 3091 0030 C9       		leave
 3092              		.cfi_def_cfa 7, 8
 3093 0031 C3       		ret
 3094              		.cfi_endproc
 3095              	.LFE965:
 3097              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE7destroyERS3_PS2_
 3098              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE7destroyERS3_PS2_
 3100              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE7destroyERS3_PS2_:
 3101              	.LFB966:
 190:/usr/include/c++/5/ext/alloc_traits.h **** 
 191:/usr/include/c++/5/ext/alloc_traits.h ****     static void destroy(_Alloc& __a, pointer __p)
 3102              		.loc 7 191 0
 3103              		.cfi_startproc
 3104 0000 55       		pushq	%rbp
 3105              		.cfi_def_cfa_offset 16
 3106              		.cfi_offset 6, -16
 3107 0001 4889E5   		movq	%rsp, %rbp
 3108              		.cfi_def_cfa_register 6
 3109 0004 4883EC10 		subq	$16, %rsp
 3110 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3111 000c 488975F0 		movq	%rsi, -16(%rbp)
 192:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.destroy(__p); }
 3112              		.loc 7 192 0
 3113 0010 488B55F0 		movq	-16(%rbp), %rdx
 3114 0014 488B45F8 		movq	-8(%rbp), %rax
 3115 0018 4889D6   		movq	%rdx, %rsi
 3116 001b 4889C7   		movq	%rax, %rdi
 3117 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE7destroyEPS2_@PLT
 3117      00
 3118 0023 90       		nop
 3119 0024 C9       		leave
 3120              		.cfi_def_cfa 7, 8
 3121 0025 C3       		ret
 3122              		.cfi_endproc
 3123              	.LFE966:
 3125              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 3126              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 3128              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 3129              	.LFB967:
 148:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 3130              		.loc 6 148 0
 3131              		.cfi_startproc
 3132 0000 55       		pushq	%rbp
 3133              		.cfi_def_cfa_offset 16
 3134              		.cfi_offset 6, -16
 3135 0001 4889E5   		movq	%rsp, %rbp
 3136              		.cfi_def_cfa_register 6
 3137 0004 4883EC20 		subq	$32, %rsp
 3138 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3139 000c 488975F0 		movq	%rsi, -16(%rbp)
 3140 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/5/bits/stl_construct.h ****     }
 3141              		.loc 6 151 0
 3142 0014 488B55F0 		movq	-16(%rbp), %rdx
 3143 0018 488B45F8 		movq	-8(%rbp), %rax
 3144 001c 4889D6   		movq	%rdx, %rsi
 3145 001f 4889C7   		movq	%rax, %rdi
 3146 0022 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_@PLT
 3146      00
 3147              		.loc 6 152 0
 3148 0027 90       		nop
 3149 0028 C9       		leave
 3150              		.cfi_def_cfa 7, 8
 3151 0029 C3       		ret
 3152              		.cfi_endproc
 3153              	.LFE967:
 3155              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 3156              		.align 2
 3157              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 3159              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 3160              	.LFB968:
 174:/usr/include/c++/5/bits/stl_vector.h ****       {
 3161              		.loc 5 174 0
 3162              		.cfi_startproc
 3163 0000 55       		pushq	%rbp
 3164              		.cfi_def_cfa_offset 16
 3165              		.cfi_offset 6, -16
 3166 0001 4889E5   		movq	%rsp, %rbp
 3167              		.cfi_def_cfa_register 6
 3168 0004 4883EC20 		subq	$32, %rsp
 3169 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3170 000c 488975F0 		movq	%rsi, -16(%rbp)
 3171 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/5/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 3172              		.loc 5 177 0
 3173 0014 48837DF0 		cmpq	$0, -16(%rbp)
 3173      00
 3174 0019 7417     		je	.L153
 178:/usr/include/c++/5/bits/stl_vector.h ****       }
 3175              		.loc 5 178 0
 3176 001b 488B45F8 		movq	-8(%rbp), %rax
 3177 001f 488B55E8 		movq	-24(%rbp), %rdx
 3178 0023 488B4DF0 		movq	-16(%rbp), %rcx
 3179 0027 4889CE   		movq	%rcx, %rsi
 3180 002a 4889C7   		movq	%rax, %rdi
 3181 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m@PLT
 3181      00
 3182              	.L153:
 179:/usr/include/c++/5/bits/stl_vector.h **** 
 3183              		.loc 5 179 0
 3184 0032 90       		nop
 3185 0033 C9       		leave
 3186              		.cfi_def_cfa 7, 8
 3187 0034 C3       		ret
 3188              		.cfi_endproc
 3189              	.LFE968:
 3191              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2
 3192              		.align 2
 3193              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC2ERK
 3195              	_ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC2ERKS3_:
 3196              	.LFB970:
 740:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(__i) { }
 3197              		.loc 9 740 0
 3198              		.cfi_startproc
 3199 0000 55       		pushq	%rbp
 3200              		.cfi_def_cfa_offset 16
 3201              		.cfi_offset 6, -16
 3202 0001 4889E5   		movq	%rsp, %rbp
 3203              		.cfi_def_cfa_register 6
 3204 0004 48897DF8 		movq	%rdi, -8(%rbp)
 3205 0008 488975F0 		movq	%rsi, -16(%rbp)
 3206              	.LBB35:
 741:/usr/include/c++/5/bits/stl_iterator.h **** 
 3207              		.loc 9 741 0
 3208 000c 488B45F0 		movq	-16(%rbp), %rax
 3209 0010 488B10   		movq	(%rax), %rdx
 3210 0013 488B45F8 		movq	-8(%rbp), %rax
 3211 0017 488910   		movq	%rdx, (%rax)
 3212              	.LBE35:
 3213 001a 90       		nop
 3214 001b 5D       		popq	%rbp
 3215              		.cfi_def_cfa 7, 8
 3216 001c C3       		ret
 3217              		.cfi_endproc
 3218              	.LFE970:
 3220              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC1ERK
 3221              		.set	_ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC1ERKS
 3222              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 3223              		.align 2
 3224              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 3226              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constr
 3227              	.LFB980:
 129:/usr/include/c++/5/ext/new_allocator.h ****       { ::new((void *)__p) _Tp(__val); }
 3228              		.loc 11 129 0
 3229              		.cfi_startproc
 3230              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3231              		.cfi_lsda 0x1b,.LLSDA980
 3232 0000 55       		pushq	%rbp
 3233              		.cfi_def_cfa_offset 16
 3234              		.cfi_offset 6, -16
 3235 0001 4889E5   		movq	%rsp, %rbp
 3236              		.cfi_def_cfa_register 6
 3237 0004 4155     		pushq	%r13
 3238 0006 4154     		pushq	%r12
 3239 0008 53       		pushq	%rbx
 3240 0009 4883EC28 		subq	$40, %rsp
 3241              		.cfi_offset 13, -24
 3242              		.cfi_offset 12, -32
 3243              		.cfi_offset 3, -40
 3244 000d 48897DD8 		movq	%rdi, -40(%rbp)
 3245 0011 488975D0 		movq	%rsi, -48(%rbp)
 3246 0015 488955C8 		movq	%rdx, -56(%rbp)
 3247              		.loc 11 130 0
 3248 0019 4C8B65D0 		movq	-48(%rbp), %r12
 3249 001d 4C89E6   		movq	%r12, %rsi
 3250 0020 BF280000 		movl	$40, %edi
 3250      00
 3251 0025 E8000000 		call	_ZnwmPv@PLT
 3251      00
 3252 002a 4889C3   		movq	%rax, %rbx
 3253 002d 4885DB   		testq	%rbx, %rbx
 3254 0030 742A     		je	.L160
 3255              		.loc 11 130 0 is_stmt 0 discriminator 1
 3256 0032 488B45C8 		movq	-56(%rbp), %rax
 3257 0036 4889C6   		movq	%rax, %rsi
 3258 0039 4889DF   		movq	%rbx, %rdi
 3259              	.LEHB48:
 3260 003c E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_@PLT
 3260      00
 3261              	.LEHE48:
 3262              		.loc 11 130 0
 3263 0041 EB19     		jmp	.L160
 3264              	.L159:
 3265 0043 4989C5   		movq	%rax, %r13
 3266 0046 4C89E6   		movq	%r12, %rsi
 3267 0049 4889DF   		movq	%rbx, %rdi
 3268 004c E8000000 		call	_ZdlPvS_@PLT
 3268      00
 3269 0051 4C89E8   		movq	%r13, %rax
 3270 0054 4889C7   		movq	%rax, %rdi
 3271              	.LEHB49:
 3272 0057 E8000000 		call	_Unwind_Resume@PLT
 3272      00
 3273              	.LEHE49:
 3274              	.L160:
 3275 005c 90       		nop
 3276 005d 4883C428 		addq	$40, %rsp
 3277 0061 5B       		popq	%rbx
 3278 0062 415C     		popq	%r12
 3279 0064 415D     		popq	%r13
 3280 0066 5D       		popq	%rbp
 3281              		.cfi_def_cfa 7, 8
 3282 0067 C3       		ret
 3283              		.cfi_endproc
 3284              	.LFE980:
 3285              		.section	.gcc_except_table
 3286              	.LLSDA980:
 3287 010e FF       		.byte	0xff
 3288 010f FF       		.byte	0xff
 3289 0110 01       		.byte	0x1
 3290 0111 08       		.uleb128 .LLSDACSE980-.LLSDACSB980
 3291              	.LLSDACSB980:
 3292 0112 3C       		.uleb128 .LEHB48-.LFB980
 3293 0113 05       		.uleb128 .LEHE48-.LEHB48
 3294 0114 43       		.uleb128 .L159-.LFB980
 3295 0115 00       		.uleb128 0
 3296 0116 57       		.uleb128 .LEHB49-.LFB980
 3297 0117 05       		.uleb128 .LEHE49-.LEHB49
 3298 0118 00       		.uleb128 0
 3299 0119 00       		.uleb128 0
 3300              	.LLSDACSE980:
 3301              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 3303              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tra
 3304              		.align 2
 3305              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 3307              	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt
 3308              	.LFB981:
 805:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 3309              		.loc 9 805 0 is_stmt 1
 3310              		.cfi_startproc
 3311 0000 55       		pushq	%rbp
 3312              		.cfi_def_cfa_offset 16
 3313              		.cfi_offset 6, -16
 3314 0001 4889E5   		movq	%rsp, %rbp
 3315              		.cfi_def_cfa_register 6
 3316 0004 48897DF8 		movq	%rdi, -8(%rbp)
 806:/usr/include/c++/5/bits/stl_iterator.h ****     };
 3317              		.loc 9 806 0
 3318 0008 488B45F8 		movq	-8(%rbp), %rax
 3319 000c 5D       		popq	%rbp
 3320              		.cfi_def_cfa 7, 8
 3321 000d C3       		ret
 3322              		.cfi_endproc
 3323              	.LFE981:
 3325              		.section	.text._ZSt13copy_backwardIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 3326              		.weak	_ZSt13copy_backwardIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_
 3328              	_ZSt13copy_backwardIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_:
 3329              	.LFB982:
 638:/usr/include/c++/5/bits/stl_algobase.h ****     {
 3330              		.loc 12 638 0
 3331              		.cfi_startproc
 3332 0000 55       		pushq	%rbp
 3333              		.cfi_def_cfa_offset 16
 3334              		.cfi_offset 6, -16
 3335 0001 4889E5   		movq	%rsp, %rbp
 3336              		.cfi_def_cfa_register 6
 3337 0004 53       		pushq	%rbx
 3338 0005 4883EC28 		subq	$40, %rsp
 3339              		.cfi_offset 3, -24
 3340 0009 48897DE8 		movq	%rdi, -24(%rbp)
 3341 000d 488975E0 		movq	%rsi, -32(%rbp)
 3342 0011 488955D8 		movq	%rdx, -40(%rbp)
 649:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 3343              		.loc 12 649 0
 3344 0015 488B45E0 		movq	-32(%rbp), %rax
 3345 0019 4889C7   		movq	%rax, %rdi
 3346 001c E8000000 		call	_ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Mite
 3346      00
 3347 0021 4889C3   		movq	%rax, %rbx
 3348 0024 488B45E8 		movq	-24(%rbp), %rax
 3349 0028 4889C7   		movq	%rax, %rdi
 3350 002b E8000000 		call	_ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Mite
 3350      00
 3351 0030 4889C1   		movq	%rax, %rcx
 650:/usr/include/c++/5/bits/stl_algobase.h ****     }
 3352              		.loc 12 650 0
 3353 0033 488B45D8 		movq	-40(%rbp), %rax
 3354 0037 4889C2   		movq	%rax, %rdx
 3355 003a 4889DE   		movq	%rbx, %rsi
 3356 003d 4889CF   		movq	%rcx, %rdi
 3357 0040 E8000000 		call	_ZSt23__copy_move_backward_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 3357      00
 3358              		.loc 12 651 0
 3359 0045 4883C428 		addq	$40, %rsp
 3360 0049 5B       		popq	%rbx
 3361 004a 5D       		popq	%rbp
 3362              		.cfi_def_cfa 7, 8
 3363 004b C3       		ret
 3364              		.cfi_endproc
 3365              	.LFE982:
 3367              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tra
 3368              		.align 2
 3369              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 3371              	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt
 3372              	.LFB983:
 753:/usr/include/c++/5/bits/stl_iterator.h ****       { return *_M_current; }
 3373              		.loc 9 753 0
 3374              		.cfi_startproc
 3375 0000 55       		pushq	%rbp
 3376              		.cfi_def_cfa_offset 16
 3377              		.cfi_offset 6, -16
 3378 0001 4889E5   		movq	%rsp, %rbp
 3379              		.cfi_def_cfa_register 6
 3380 0004 48897DF8 		movq	%rdi, -8(%rbp)
 754:/usr/include/c++/5/bits/stl_iterator.h **** 
 3381              		.loc 9 754 0
 3382 0008 488B45F8 		movq	-8(%rbp), %rax
 3383 000c 488B00   		movq	(%rax), %rax
 3384 000f 5D       		popq	%rbp
 3385              		.cfi_def_cfa 7, 8
 3386 0010 C3       		ret
 3387              		.cfi_endproc
 3388              	.LFE983:
 3390              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 3391              		.align 2
 3392              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_che
 3394              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_check_lenE
 3395              	.LFB984:
1422:/usr/include/c++/5/bits/stl_vector.h ****       {
 3396              		.loc 5 1422 0
 3397              		.cfi_startproc
 3398 0000 55       		pushq	%rbp
 3399              		.cfi_def_cfa_offset 16
 3400              		.cfi_offset 6, -16
 3401 0001 4889E5   		movq	%rsp, %rbp
 3402              		.cfi_def_cfa_register 6
 3403 0004 53       		pushq	%rbx
 3404 0005 4883EC48 		subq	$72, %rsp
 3405              		.cfi_offset 3, -24
 3406 0009 48897DC8 		movq	%rdi, -56(%rbp)
 3407 000d 488975C0 		movq	%rsi, -64(%rbp)
 3408 0011 488955B8 		movq	%rdx, -72(%rbp)
1422:/usr/include/c++/5/bits/stl_vector.h ****       {
 3409              		.loc 5 1422 0
 3410 0015 64488B04 		movq	%fs:40, %rax
 3410      25280000 
 3410      00
 3411 001e 488945E8 		movq	%rax, -24(%rbp)
 3412 0022 31C0     		xorl	%eax, %eax
1424:/usr/include/c++/5/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 3413              		.loc 5 1424 0
 3414 0024 488B45C8 		movq	-56(%rbp), %rax
 3415 0028 4889C7   		movq	%rax, %rdi
 3416 002b E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8max_size
 3416      00
 3417 0030 4889C3   		movq	%rax, %rbx
 3418 0033 488B45C8 		movq	-56(%rbp), %rax
 3419 0037 4889C7   		movq	%rax, %rdi
 3420 003a E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 3420      00
 3421 003f 4829C3   		subq	%rax, %rbx
 3422 0042 4889DA   		movq	%rbx, %rdx
 3423 0045 488B45C0 		movq	-64(%rbp), %rax
 3424 0049 4839C2   		cmpq	%rax, %rdx
 3425 004c 0F92C0   		setb	%al
 3426 004f 84C0     		testb	%al, %al
 3427 0051 740C     		je	.L168
1425:/usr/include/c++/5/bits/stl_vector.h **** 
 3428              		.loc 5 1425 0
 3429 0053 488B45B8 		movq	-72(%rbp), %rax
 3430 0057 4889C7   		movq	%rax, %rdi
 3431 005a E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 3431      00
 3432              	.L168:
1427:/usr/include/c++/5/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 3433              		.loc 5 1427 0
 3434 005f 488B45C8 		movq	-56(%rbp), %rax
 3435 0063 4889C7   		movq	%rax, %rdi
 3436 0066 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 3436      00
 3437 006b 4889C3   		movq	%rax, %rbx
 3438 006e 488B45C8 		movq	-56(%rbp), %rax
 3439 0072 4889C7   		movq	%rax, %rdi
 3440 0075 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 3440      00
 3441 007a 488945D8 		movq	%rax, -40(%rbp)
 3442 007e 488D55C0 		leaq	-64(%rbp), %rdx
 3443 0082 488D45D8 		leaq	-40(%rbp), %rax
 3444 0086 4889D6   		movq	%rdx, %rsi
 3445 0089 4889C7   		movq	%rax, %rdi
 3446 008c E8000000 		call	_ZSt3maxImERKT_S2_S2_@PLT
 3446      00
 3447 0091 488B00   		movq	(%rax), %rax
 3448 0094 4801D8   		addq	%rbx, %rax
 3449 0097 488945E0 		movq	%rax, -32(%rbp)
1428:/usr/include/c++/5/bits/stl_vector.h ****       }
 3450              		.loc 5 1428 0
 3451 009b 488B45C8 		movq	-56(%rbp), %rax
 3452 009f 4889C7   		movq	%rax, %rdi
 3453 00a2 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv@P
 3453      00
 3454 00a7 483B45E0 		cmpq	-32(%rbp), %rax
 3455 00ab 7712     		ja	.L169
1428:/usr/include/c++/5/bits/stl_vector.h ****       }
 3456              		.loc 5 1428 0 is_stmt 0 discriminator 2
 3457 00ad 488B45C8 		movq	-56(%rbp), %rax
 3458 00b1 4889C7   		movq	%rax, %rdi
 3459 00b4 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8max_size
 3459      00
 3460 00b9 483B45E0 		cmpq	-32(%rbp), %rax
 3461 00bd 730E     		jnb	.L170
 3462              	.L169:
1428:/usr/include/c++/5/bits/stl_vector.h ****       }
 3463              		.loc 5 1428 0 discriminator 3
 3464 00bf 488B45C8 		movq	-56(%rbp), %rax
 3465 00c3 4889C7   		movq	%rax, %rdi
 3466 00c6 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8max_size
 3466      00
 3467 00cb EB04     		jmp	.L172
 3468              	.L170:
1428:/usr/include/c++/5/bits/stl_vector.h ****       }
 3469              		.loc 5 1428 0 discriminator 4
 3470 00cd 488B45E0 		movq	-32(%rbp), %rax
 3471              	.L172:
 3472              		.loc 5 1429 0 is_stmt 1 discriminator 7
 3473 00d1 488B4DE8 		movq	-24(%rbp), %rcx
 3474 00d5 6448330C 		xorq	%fs:40, %rcx
 3474      25280000 
 3474      00
 3475 00de 7405     		je	.L173
 3476              		.loc 5 1429 0 is_stmt 0
 3477 00e0 E8000000 		call	__stack_chk_fail@PLT
 3477      00
 3478              	.L173:
 3479 00e5 4883C448 		addq	$72, %rsp
 3480 00e9 5B       		popq	%rbx
 3481 00ea 5D       		popq	%rbp
 3482              		.cfi_def_cfa 7, 8
 3483 00eb C3       		ret
 3484              		.cfi_endproc
 3485              	.LFE984:
 3487              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 3488              		.align 2
 3489              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv
 3491              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv:
 3492              	.LFB985:
 547:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 3493              		.loc 5 547 0 is_stmt 1
 3494              		.cfi_startproc
 3495 0000 55       		pushq	%rbp
 3496              		.cfi_def_cfa_offset 16
 3497              		.cfi_offset 6, -16
 3498 0001 4889E5   		movq	%rsp, %rbp
 3499              		.cfi_def_cfa_register 6
 3500 0004 4883EC20 		subq	$32, %rsp
 3501 0008 48897DE8 		movq	%rdi, -24(%rbp)
 547:/usr/include/c++/5/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 3502              		.loc 5 547 0
 3503 000c 64488B04 		movq	%fs:40, %rax
 3503      25280000 
 3503      00
 3504 0015 488945F8 		movq	%rax, -8(%rbp)
 3505 0019 31C0     		xorl	%eax, %eax
 548:/usr/include/c++/5/bits/stl_vector.h **** 
 3506              		.loc 5 548 0
 3507 001b 488B55E8 		movq	-24(%rbp), %rdx
 3508 001f 488D45F0 		leaq	-16(%rbp), %rax
 3509 0023 4889D6   		movq	%rdx, %rsi
 3510 0026 4889C7   		movq	%rax, %rdi
 3511 0029 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 3511      00
 3512 002e 488B45F0 		movq	-16(%rbp), %rax
 3513 0032 488B4DF8 		movq	-8(%rbp), %rcx
 3514 0036 6448330C 		xorq	%fs:40, %rcx
 3514      25280000 
 3514      00
 3515 003f 7405     		je	.L176
 3516 0041 E8000000 		call	__stack_chk_fail@PLT
 3516      00
 3517              	.L176:
 3518 0046 C9       		leave
 3519              		.cfi_def_cfa 7, 8
 3520 0047 C3       		ret
 3521              		.cfi_endproc
 3522              	.LFE985:
 3524              		.section	.text._ZN9__gnu_cxxmiIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6v
 3525              		.weak	_ZN9__gnu_cxxmiIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_
 3527              	_ZN9__gnu_cxxmiIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_E
 3528              	.LFB986:
 923:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 3529              		.loc 9 923 0
 3530              		.cfi_startproc
 3531 0000 55       		pushq	%rbp
 3532              		.cfi_def_cfa_offset 16
 3533              		.cfi_offset 6, -16
 3534 0001 4889E5   		movq	%rsp, %rbp
 3535              		.cfi_def_cfa_register 6
 3536 0004 53       		pushq	%rbx
 3537 0005 4883EC18 		subq	$24, %rsp
 3538              		.cfi_offset 3, -24
 3539 0009 48897DE8 		movq	%rdi, -24(%rbp)
 3540 000d 488975E0 		movq	%rsi, -32(%rbp)
 3541              		.loc 9 926 0
 3542 0011 488B45E8 		movq	-24(%rbp), %rax
 3543 0015 4889C7   		movq	%rax, %rdi
 3544 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 3544      00
 3545 001d 488B00   		movq	(%rax), %rax
 3546 0020 4889C3   		movq	%rax, %rbx
 3547 0023 488B45E0 		movq	-32(%rbp), %rax
 3548 0027 4889C7   		movq	%rax, %rdi
 3549 002a E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 3549      00
 3550 002f 488B00   		movq	(%rax), %rax
 3551 0032 4829C3   		subq	%rax, %rbx
 3552 0035 4889D8   		movq	%rbx, %rax
 3553 0038 48C1F803 		sarq	$3, %rax
 3554 003c 4889C2   		movq	%rax, %rdx
 3555 003f 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 3555      CCCCCCCC 
 3555      CCCC
 3556 0049 480FAFC2 		imulq	%rdx, %rax
 3557 004d 4883C418 		addq	$24, %rsp
 3558 0051 5B       		popq	%rbx
 3559 0052 5D       		popq	%rbp
 3560              		.cfi_def_cfa 7, 8
 3561 0053 C3       		ret
 3562              		.cfi_endproc
 3563              	.LFE986:
 3565              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 3566              		.align 2
 3567              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11
 3569              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_M_allo
 3570              	.LFB987:
 167:/usr/include/c++/5/bits/stl_vector.h ****       {
 3571              		.loc 5 167 0
 3572              		.cfi_startproc
 3573 0000 55       		pushq	%rbp
 3574              		.cfi_def_cfa_offset 16
 3575              		.cfi_offset 6, -16
 3576 0001 4889E5   		movq	%rsp, %rbp
 3577              		.cfi_def_cfa_register 6
 3578 0004 4883EC10 		subq	$16, %rsp
 3579 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3580 000c 488975F0 		movq	%rsi, -16(%rbp)
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 3581              		.loc 5 170 0
 3582 0010 48837DF0 		cmpq	$0, -16(%rbp)
 3582      00
 3583 0015 7415     		je	.L180
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 3584              		.loc 5 170 0 is_stmt 0 discriminator 1
 3585 0017 488B45F8 		movq	-8(%rbp), %rax
 3586 001b 488B55F0 		movq	-16(%rbp), %rdx
 3587 001f 4889D6   		movq	%rdx, %rsi
 3588 0022 4889C7   		movq	%rax, %rdi
 3589 0025 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 3589      00
 3590 002a EB05     		jmp	.L182
 3591              	.L180:
 170:/usr/include/c++/5/bits/stl_vector.h ****       }
 3592              		.loc 5 170 0 discriminator 2
 3593 002c B8000000 		movl	$0, %eax
 3593      00
 3594              	.L182:
 171:/usr/include/c++/5/bits/stl_vector.h **** 
 3595              		.loc 5 171 0 is_stmt 1 discriminator 5
 3596 0031 C9       		leave
 3597              		.cfi_def_cfa 7, 8
 3598 0032 C3       		ret
 3599              		.cfi_endproc
 3600              	.LFE987:
 3602              		.section	.text._ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 3603              		.weak	_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 3605              	_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 3606              	.LFB988:
 297:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 3607              		.loc 13 297 0
 3608              		.cfi_startproc
 3609 0000 55       		pushq	%rbp
 3610              		.cfi_def_cfa_offset 16
 3611              		.cfi_offset 6, -16
 3612 0001 4889E5   		movq	%rsp, %rbp
 3613              		.cfi_def_cfa_register 6
 3614 0004 4883EC20 		subq	$32, %rsp
 3615 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3616 000c 488975F0 		movq	%rsi, -16(%rbp)
 3617 0010 488955E8 		movq	%rdx, -24(%rbp)
 3618 0014 48894DE0 		movq	%rcx, -32(%rbp)
 304:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 3619              		.loc 13 304 0
 3620 0018 488B4DE0 		movq	-32(%rbp), %rcx
 3621 001c 488B55E8 		movq	-24(%rbp), %rdx
 3622 0020 488B75F0 		movq	-16(%rbp), %rsi
 3623 0024 488B45F8 		movq	-8(%rbp), %rax
 3624 0028 4889C7   		movq	%rax, %rdi
 3625 002b E8000000 		call	_ZSt22__uninitialized_copy_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 3625      00
 3626              		.loc 13 305 0
 3627 0030 C9       		leave
 3628              		.cfi_def_cfa 7, 8
 3629 0031 C3       		ret
 3630              		.cfi_endproc
 3631              	.LFE988:
 3633              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 3634              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 3636              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7d
 3637              	.LFB989:
 191:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.destroy(__p); }
 3638              		.loc 7 191 0
 3639              		.cfi_startproc
 3640 0000 55       		pushq	%rbp
 3641              		.cfi_def_cfa_offset 16
 3642              		.cfi_offset 6, -16
 3643 0001 4889E5   		movq	%rsp, %rbp
 3644              		.cfi_def_cfa_register 6
 3645 0004 4883EC10 		subq	$16, %rsp
 3646 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3647 000c 488975F0 		movq	%rsi, -16(%rbp)
 3648              		.loc 7 192 0
 3649 0010 488B55F0 		movq	-16(%rbp), %rdx
 3650 0014 488B45F8 		movq	-8(%rbp), %rax
 3651 0018 4889D6   		movq	%rdx, %rsi
 3652 001b 4889C7   		movq	%rax, %rdi
 3653 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7
 3653      00
 3654 0023 90       		nop
 3655 0024 C9       		leave
 3656              		.cfi_def_cfa 7, 8
 3657 0025 C3       		ret
 3658              		.cfi_endproc
 3659              	.LFE989:
 3661              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_trai
 3662              		.align 2
 3663              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 3665              	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6
 3666              	.LFB991:
 740:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(__i) { }
 3667              		.loc 9 740 0
 3668              		.cfi_startproc
 3669 0000 55       		pushq	%rbp
 3670              		.cfi_def_cfa_offset 16
 3671              		.cfi_offset 6, -16
 3672 0001 4889E5   		movq	%rsp, %rbp
 3673              		.cfi_def_cfa_register 6
 3674 0004 48897DF8 		movq	%rdi, -8(%rbp)
 3675 0008 488975F0 		movq	%rsi, -16(%rbp)
 3676              	.LBB36:
 741:/usr/include/c++/5/bits/stl_iterator.h **** 
 3677              		.loc 9 741 0
 3678 000c 488B45F0 		movq	-16(%rbp), %rax
 3679 0010 488B10   		movq	(%rax), %rdx
 3680 0013 488B45F8 		movq	-8(%rbp), %rax
 3681 0017 488910   		movq	%rdx, (%rax)
 3682              	.LBE36:
 3683 001a 90       		nop
 3684 001b 5D       		popq	%rbp
 3685              		.cfi_def_cfa 7, 8
 3686 001c C3       		ret
 3687              		.cfi_endproc
 3688              	.LFE991:
 3690              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 3691              		.set	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 3692              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 3693              		.align 2
 3694              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 3696              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 3697              	.LFB998:
  86:/usr/include/c++/5/ext/new_allocator.h **** 
 3698              		.loc 11 86 0
 3699              		.cfi_startproc
 3700 0000 55       		pushq	%rbp
 3701              		.cfi_def_cfa_offset 16
 3702              		.cfi_offset 6, -16
 3703 0001 4889E5   		movq	%rsp, %rbp
 3704              		.cfi_def_cfa_register 6
 3705 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/5/ext/new_allocator.h **** 
 3706              		.loc 11 86 0
 3707 0008 90       		nop
 3708 0009 5D       		popq	%rbp
 3709              		.cfi_def_cfa 7, 8
 3710 000a C3       		ret
 3711              		.cfi_endproc
 3712              	.LFE998:
 3714              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 3715              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 3716              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 3717              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 3719              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10
 3720              	.LFB1000:
 184:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 3721              		.loc 7 184 0
 3722              		.cfi_startproc
 3723 0000 55       		pushq	%rbp
 3724              		.cfi_def_cfa_offset 16
 3725              		.cfi_offset 6, -16
 3726 0001 4889E5   		movq	%rsp, %rbp
 3727              		.cfi_def_cfa_register 6
 3728 0004 4883EC20 		subq	$32, %rsp
 3729 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3730 000c 488975F0 		movq	%rsi, -16(%rbp)
 3731 0010 488955E8 		movq	%rdx, -24(%rbp)
 185:/usr/include/c++/5/ext/alloc_traits.h **** 
 3732              		.loc 7 185 0
 3733 0014 488B55E8 		movq	-24(%rbp), %rdx
 3734 0018 488B4DF0 		movq	-16(%rbp), %rcx
 3735 001c 488B45F8 		movq	-8(%rbp), %rax
 3736 0020 4889CE   		movq	%rcx, %rsi
 3737 0023 4889C7   		movq	%rax, %rdi
 3738 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE1
 3738      00
 3739 002b 90       		nop
 3740 002c C9       		leave
 3741              		.cfi_def_cfa 7, 8
 3742 002d C3       		ret
 3743              		.cfi_endproc
 3744              	.LFE1000:
 3746              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 3747              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcES
 3749              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 3750              	.LFB1001:
 100:/usr/include/c++/5/bits/stl_construct.h **** 	{
 3751              		.loc 6 100 0
 3752              		.cfi_startproc
 3753 0000 55       		pushq	%rbp
 3754              		.cfi_def_cfa_offset 16
 3755              		.cfi_offset 6, -16
 3756 0001 4889E5   		movq	%rsp, %rbp
 3757              		.cfi_def_cfa_register 6
 3758 0004 4883EC10 		subq	$16, %rsp
 3759 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3760 000c 488975F0 		movq	%rsi, -16(%rbp)
 3761              	.L191:
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 3762              		.loc 6 102 0 discriminator 2
 3763 0010 488B45F8 		movq	-8(%rbp), %rax
 3764 0014 483B45F0 		cmpq	-16(%rbp), %rax
 3765 0018 741B     		je	.L192
 103:/usr/include/c++/5/bits/stl_construct.h **** 	}
 3766              		.loc 6 103 0 discriminator 1
 3767 001a 488B45F8 		movq	-8(%rbp), %rax
 3768 001e 4889C7   		movq	%rax, %rdi
 3769 0021 E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_@PLT
 3769      00
 3770 0026 4889C7   		movq	%rax, %rdi
 3771 0029 E8000000 		call	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_@PLT
 3771      00
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 3772              		.loc 6 102 0 discriminator 1
 3773 002e 488345F8 		addq	$40, -8(%rbp)
 3773      28
 3774 0033 EBDB     		jmp	.L191
 3775              	.L192:
 104:/usr/include/c++/5/bits/stl_construct.h ****     };
 3776              		.loc 6 104 0
 3777 0035 90       		nop
 3778 0036 C9       		leave
 3779              		.cfi_def_cfa 7, 8
 3780 0037 C3       		ret
 3781              		.cfi_endproc
 3782              	.LFE1001:
 3784              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 3785              		.align 2
 3786              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 3788              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv:
 3789              	.LFB1002:
 654:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 3790              		.loc 5 654 0
 3791              		.cfi_startproc
 3792 0000 55       		pushq	%rbp
 3793              		.cfi_def_cfa_offset 16
 3794              		.cfi_offset 6, -16
 3795 0001 4889E5   		movq	%rsp, %rbp
 3796              		.cfi_def_cfa_register 6
 3797 0004 48897DF8 		movq	%rdi, -8(%rbp)
 655:/usr/include/c++/5/bits/stl_vector.h **** 
 3798              		.loc 5 655 0
 3799 0008 488B45F8 		movq	-8(%rbp), %rax
 3800 000c 488B4008 		movq	8(%rax), %rax
 3801 0010 4889C2   		movq	%rax, %rdx
 3802 0013 488B45F8 		movq	-8(%rbp), %rax
 3803 0017 488B00   		movq	(%rax), %rax
 3804 001a 4829C2   		subq	%rax, %rdx
 3805 001d 4889D0   		movq	%rdx, %rax
 3806 0020 48C1F803 		sarq	$3, %rax
 3807 0024 4889C2   		movq	%rax, %rdx
 3808 0027 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 3808      CCCCCCCC 
 3808      CCCC
 3809 0031 480FAFC2 		imulq	%rdx, %rax
 3810 0035 5D       		popq	%rbp
 3811              		.cfi_def_cfa 7, 8
 3812 0036 C3       		ret
 3813              		.cfi_endproc
 3814              	.LFE1002:
 3816              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 3817              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 3819              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE17
 3820              	.LFB1003:
 193:/usr/include/c++/5/ext/alloc_traits.h **** 
 194:/usr/include/c++/5/ext/alloc_traits.h ****     static size_type max_size(const _Alloc& __a)
 195:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.max_size(); }
 196:/usr/include/c++/5/ext/alloc_traits.h **** 
 197:/usr/include/c++/5/ext/alloc_traits.h ****     static const _Alloc& _S_select_on_copy(const _Alloc& __a) { return __a; }
 3821              		.loc 7 197 0
 3822              		.cfi_startproc
 3823 0000 55       		pushq	%rbp
 3824              		.cfi_def_cfa_offset 16
 3825              		.cfi_offset 6, -16
 3826 0001 4889E5   		movq	%rsp, %rbp
 3827              		.cfi_def_cfa_register 6
 3828 0004 48897DF8 		movq	%rdi, -8(%rbp)
 3829              		.loc 7 197 0
 3830 0008 488B45F8 		movq	-8(%rbp), %rax
 3831 000c 5D       		popq	%rbp
 3832              		.cfi_def_cfa 7, 8
 3833 000d C3       		ret
 3834              		.cfi_endproc
 3835              	.LFE1003:
 3837              		.section	.text._ZNKSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 3838              		.align 2
 3839              		.weak	_ZNKSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE1
 3841              	_ZNKSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get
 3842              	.LFB1004:
 117:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 3843              		.loc 5 117 0
 3844              		.cfi_startproc
 3845 0000 55       		pushq	%rbp
 3846              		.cfi_def_cfa_offset 16
 3847              		.cfi_offset 6, -16
 3848 0001 4889E5   		movq	%rsp, %rbp
 3849              		.cfi_def_cfa_register 6
 3850 0004 48897DF8 		movq	%rdi, -8(%rbp)
 118:/usr/include/c++/5/bits/stl_vector.h **** 
 3851              		.loc 5 118 0
 3852 0008 488B45F8 		movq	-8(%rbp), %rax
 3853 000c 5D       		popq	%rbp
 3854              		.cfi_def_cfa 7, 8
 3855 000d C3       		ret
 3856              		.cfi_endproc
 3857              	.LFE1004:
 3859              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 3860              		.align 2
 3861              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2
 3863              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2EmRKS8_
 3864              	.LFB1006:
 134:/usr/include/c++/5/bits/stl_vector.h ****       : _M_impl(__a)
 3865              		.loc 5 134 0
 3866              		.cfi_startproc
 3867              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3868              		.cfi_lsda 0x1b,.LLSDA1006
 3869 0000 55       		pushq	%rbp
 3870              		.cfi_def_cfa_offset 16
 3871              		.cfi_offset 6, -16
 3872 0001 4889E5   		movq	%rsp, %rbp
 3873              		.cfi_def_cfa_register 6
 3874 0004 53       		pushq	%rbx
 3875 0005 4883EC28 		subq	$40, %rsp
 3876              		.cfi_offset 3, -24
 3877 0009 48897DE8 		movq	%rdi, -24(%rbp)
 3878 000d 488975E0 		movq	%rsi, -32(%rbp)
 3879 0011 488955D8 		movq	%rdx, -40(%rbp)
 3880              	.LBB37:
 135:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 3881              		.loc 5 135 0
 3882 0015 488B45E8 		movq	-24(%rbp), %rax
 3883 0019 488B55D8 		movq	-40(%rbp), %rdx
 3884 001d 4889D6   		movq	%rdx, %rsi
 3885 0020 4889C7   		movq	%rax, %rdi
 3886 0023 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 3886      00
 136:/usr/include/c++/5/bits/stl_vector.h **** 
 3887              		.loc 5 136 0
 3888 0028 488B55E0 		movq	-32(%rbp), %rdx
 3889 002c 488B45E8 		movq	-24(%rbp), %rax
 3890 0030 4889D6   		movq	%rdx, %rsi
 3891 0033 4889C7   		movq	%rax, %rdi
 3892              	.LEHB50:
 3893 0036 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_
 3893      00
 3894              	.LEHE50:
 3895              	.LBE37:
 3896 003b EB1A     		jmp	.L202
 3897              	.L201:
 3898 003d 4889C3   		movq	%rax, %rbx
 3899              	.LBB38:
 135:/usr/include/c++/5/bits/stl_vector.h ****       { _M_create_storage(__n); }
 3900              		.loc 5 135 0
 3901 0040 488B45E8 		movq	-24(%rbp), %rax
 3902 0044 4889C7   		movq	%rax, %rdi
 3903 0047 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 3903      00
 3904 004c 4889D8   		movq	%rbx, %rax
 3905 004f 4889C7   		movq	%rax, %rdi
 3906              	.LEHB51:
 3907 0052 E8000000 		call	_Unwind_Resume@PLT
 3907      00
 3908              	.LEHE51:
 3909              	.L202:
 3910              	.LBE38:
 136:/usr/include/c++/5/bits/stl_vector.h **** 
 3911              		.loc 5 136 0
 3912 0057 4883C428 		addq	$40, %rsp
 3913 005b 5B       		popq	%rbx
 3914 005c 5D       		popq	%rbp
 3915              		.cfi_def_cfa 7, 8
 3916 005d C3       		ret
 3917              		.cfi_endproc
 3918              	.LFE1006:
 3919              		.section	.gcc_except_table
 3920              	.LLSDA1006:
 3921 011a FF       		.byte	0xff
 3922 011b FF       		.byte	0xff
 3923 011c 01       		.byte	0x1
 3924 011d 08       		.uleb128 .LLSDACSE1006-.LLSDACSB1006
 3925              	.LLSDACSB1006:
 3926 011e 36       		.uleb128 .LEHB50-.LFB1006
 3927 011f 05       		.uleb128 .LEHE50-.LEHB50
 3928 0120 3D       		.uleb128 .L201-.LFB1006
 3929 0121 00       		.uleb128 0
 3930 0122 52       		.uleb128 .LEHB51-.LFB1006
 3931 0123 05       		.uleb128 .LEHE51-.LEHB51
 3932 0124 00       		.uleb128 0
 3933 0125 00       		.uleb128 0
 3934              	.LLSDACSE1006:
 3935              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 3937              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC1
 3938              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC1E
 3939              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 3940              		.align 2
 3941              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv
 3943              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv:
 3944              	.LFB1008:
 556:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 3945              		.loc 5 556 0
 3946              		.cfi_startproc
 3947 0000 55       		pushq	%rbp
 3948              		.cfi_def_cfa_offset 16
 3949              		.cfi_offset 6, -16
 3950 0001 4889E5   		movq	%rsp, %rbp
 3951              		.cfi_def_cfa_register 6
 3952 0004 4883EC30 		subq	$48, %rsp
 3953 0008 48897DD8 		movq	%rdi, -40(%rbp)
 556:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 3954              		.loc 5 556 0
 3955 000c 64488B04 		movq	%fs:40, %rax
 3955      25280000 
 3955      00
 3956 0015 488945F8 		movq	%rax, -8(%rbp)
 3957 0019 31C0     		xorl	%eax, %eax
 557:/usr/include/c++/5/bits/stl_vector.h **** 
 3958              		.loc 5 557 0
 3959 001b 488B45D8 		movq	-40(%rbp), %rax
 3960 001f 488B00   		movq	(%rax), %rax
 3961 0022 488945F0 		movq	%rax, -16(%rbp)
 3962 0026 488D55F0 		leaq	-16(%rbp), %rdx
 3963 002a 488D45E0 		leaq	-32(%rbp), %rax
 3964 002e 4889D6   		movq	%rdx, %rsi
 3965 0031 4889C7   		movq	%rax, %rdi
 3966 0034 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 3966      00
 3967 0039 488B45E0 		movq	-32(%rbp), %rax
 3968 003d 488B4DF8 		movq	-8(%rbp), %rcx
 3969 0041 6448330C 		xorq	%fs:40, %rcx
 3969      25280000 
 3969      00
 3970 004a 7405     		je	.L205
 3971 004c E8000000 		call	__stack_chk_fail@PLT
 3971      00
 3972              	.L205:
 3973 0051 C9       		leave
 3974              		.cfi_def_cfa 7, 8
 3975 0052 C3       		ret
 3976              		.cfi_endproc
 3977              	.LFE1008:
 3979              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 3980              		.align 2
 3981              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv
 3983              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv:
 3984              	.LFB1009:
 574:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 3985              		.loc 5 574 0
 3986              		.cfi_startproc
 3987 0000 55       		pushq	%rbp
 3988              		.cfi_def_cfa_offset 16
 3989              		.cfi_offset 6, -16
 3990 0001 4889E5   		movq	%rsp, %rbp
 3991              		.cfi_def_cfa_register 6
 3992 0004 4883EC30 		subq	$48, %rsp
 3993 0008 48897DD8 		movq	%rdi, -40(%rbp)
 574:/usr/include/c++/5/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 3994              		.loc 5 574 0
 3995 000c 64488B04 		movq	%fs:40, %rax
 3995      25280000 
 3995      00
 3996 0015 488945F8 		movq	%rax, -8(%rbp)
 3997 0019 31C0     		xorl	%eax, %eax
 575:/usr/include/c++/5/bits/stl_vector.h **** 
 3998              		.loc 5 575 0
 3999 001b 488B45D8 		movq	-40(%rbp), %rax
 4000 001f 488B4008 		movq	8(%rax), %rax
 4001 0023 488945F0 		movq	%rax, -16(%rbp)
 4002 0027 488D55F0 		leaq	-16(%rbp), %rdx
 4003 002b 488D45E0 		leaq	-32(%rbp), %rax
 4004 002f 4889D6   		movq	%rdx, %rsi
 4005 0032 4889C7   		movq	%rax, %rdi
 4006 0035 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 4006      00
 4007 003a 488B45E0 		movq	-32(%rbp), %rax
 4008 003e 488B4DF8 		movq	-8(%rbp), %rcx
 4009 0042 6448330C 		xorq	%fs:40, %rcx
 4009      25280000 
 4009      00
 4010 004b 7405     		je	.L208
 4011 004d E8000000 		call	__stack_chk_fail@PLT
 4011      00
 4012              	.L208:
 4013 0052 C9       		leave
 4014              		.cfi_def_cfa 7, 8
 4015 0053 C3       		ret
 4016              		.cfi_endproc
 4017              	.LFE1009:
 4019              		.section	.text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx111
 4020              		.weak	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_st
 4022              	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcS
 4023              	.LFB1010:
 279:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 4024              		.loc 13 279 0
 4025              		.cfi_startproc
 4026 0000 55       		pushq	%rbp
 4027              		.cfi_def_cfa_offset 16
 4028              		.cfi_offset 6, -16
 4029 0001 4889E5   		movq	%rsp, %rbp
 4030              		.cfi_def_cfa_register 6
 4031 0004 4883EC20 		subq	$32, %rsp
 4032 0008 48897DF0 		movq	%rdi, -16(%rbp)
 4033 000c 488975E0 		movq	%rsi, -32(%rbp)
 4034 0010 488955E8 		movq	%rdx, -24(%rbp)
 4035 0014 48894DF8 		movq	%rcx, -8(%rbp)
 281:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 4036              		.loc 13 281 0
 4037 0018 488B55E8 		movq	-24(%rbp), %rdx
 4038 001c 488B4DE0 		movq	-32(%rbp), %rcx
 4039 0020 488B45F0 		movq	-16(%rbp), %rax
 4040 0024 4889CE   		movq	%rcx, %rsi
 4041 0027 4889C7   		movq	%rax, %rdi
 4042 002a E8000000 		call	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringI
 4042      00
 4043 002f C9       		leave
 4044              		.cfi_def_cfa 7, 8
 4045 0030 C3       		ret
 4046              		.cfi_endproc
 4047              	.LFE1010:
 4049              		.section	.text._ZSt12__miter_baseIPN8UnitTest18DeferredTestResultEENSt11_Miter_baseIT_E13iterator_
 4050              		.weak	_ZSt12__miter_baseIPN8UnitTest18DeferredTestResultEENSt11_Miter_baseIT_E13iterator_typeES4_
 4052              	_ZSt12__miter_baseIPN8UnitTest18DeferredTestResultEENSt11_Miter_baseIT_E13iterator_typeES4_:
 4053              	.LFB1011:
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 4054              		.loc 12 293 0
 4055              		.cfi_startproc
 4056 0000 55       		pushq	%rbp
 4057              		.cfi_def_cfa_offset 16
 4058              		.cfi_offset 6, -16
 4059 0001 4889E5   		movq	%rsp, %rbp
 4060              		.cfi_def_cfa_register 6
 4061 0004 4883EC10 		subq	$16, %rsp
 4062 0008 48897DF8 		movq	%rdi, -8(%rbp)
 294:/usr/include/c++/5/bits/stl_algobase.h **** 
 4063              		.loc 12 294 0
 4064 000c 488B45F8 		movq	-8(%rbp), %rax
 4065 0010 4889C7   		movq	%rax, %rdi
 4066 0013 E8000000 		call	_ZNSt10_Iter_baseIPN8UnitTest18DeferredTestResultELb0EE7_S_baseES2_@PLT
 4066      00
 4067 0018 C9       		leave
 4068              		.cfi_def_cfa 7, 8
 4069 0019 C3       		ret
 4070              		.cfi_endproc
 4071              	.LFE1011:
 4073              		.section	.text._ZSt23__copy_move_backward_a2ILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_,
 4074              		.weak	_ZSt23__copy_move_backward_a2ILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_
 4076              	_ZSt23__copy_move_backward_a2ILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_:
 4077              	.LFB1012:
 611:/usr/include/c++/5/bits/stl_algobase.h ****     {
 4078              		.loc 12 611 0
 4079              		.cfi_startproc
 4080 0000 55       		pushq	%rbp
 4081              		.cfi_def_cfa_offset 16
 4082              		.cfi_offset 6, -16
 4083 0001 4889E5   		movq	%rsp, %rbp
 4084              		.cfi_def_cfa_register 6
 4085 0004 4154     		pushq	%r12
 4086 0006 53       		pushq	%rbx
 4087 0007 4883EC20 		subq	$32, %rsp
 4088              		.cfi_offset 12, -24
 4089              		.cfi_offset 3, -32
 4090 000b 48897DE8 		movq	%rdi, -24(%rbp)
 4091 000f 488975E0 		movq	%rsi, -32(%rbp)
 4092 0013 488955D8 		movq	%rdx, -40(%rbp)
 614:/usr/include/c++/5/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 4093              		.loc 12 614 0
 4094 0017 488B45D8 		movq	-40(%rbp), %rax
 4095 001b 4889C7   		movq	%rax, %rdi
 4096 001e E8000000 		call	_ZSt12__niter_baseIPN8UnitTest18DeferredTestResultEENSt11_Niter_baseIT_E13iterator_typeES4_@P
 4096      00
 4097 0023 4989C4   		movq	%rax, %r12
 4098 0026 488B45E0 		movq	-32(%rbp), %rax
 4099 002a 4889C7   		movq	%rax, %rdi
 4100 002d E8000000 		call	_ZSt12__niter_baseIPN8UnitTest18DeferredTestResultEENSt11_Niter_baseIT_E13iterator_typeES4_@P
 4100      00
 4101 0032 4889C3   		movq	%rax, %rbx
 4102 0035 488B45E8 		movq	-24(%rbp), %rax
 4103 0039 4889C7   		movq	%rax, %rdi
 4104 003c E8000000 		call	_ZSt12__niter_baseIPN8UnitTest18DeferredTestResultEENSt11_Niter_baseIT_E13iterator_typeES4_@P
 4104      00
 615:/usr/include/c++/5/bits/stl_algobase.h ****     }
 4105              		.loc 12 615 0
 4106 0041 4C89E2   		movq	%r12, %rdx
 4107 0044 4889DE   		movq	%rbx, %rsi
 4108 0047 4889C7   		movq	%rax, %rdi
 4109 004a E8000000 		call	_ZSt22__copy_move_backward_aILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_@PLT
 4109      00
 616:/usr/include/c++/5/bits/stl_algobase.h **** 
 4110              		.loc 12 616 0
 4111 004f 4883C420 		addq	$32, %rsp
 4112 0053 5B       		popq	%rbx
 4113 0054 415C     		popq	%r12
 4114 0056 5D       		popq	%rbp
 4115              		.cfi_def_cfa 7, 8
 4116 0057 C3       		ret
 4117              		.cfi_endproc
 4118              	.LFE1012:
 4120              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 4121              		.align 2
 4122              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8capacit
 4124              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8capacityEv:
 4125              	.LFB1014:
 734:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 4126              		.loc 5 734 0
 4127              		.cfi_startproc
 4128 0000 55       		pushq	%rbp
 4129              		.cfi_def_cfa_offset 16
 4130              		.cfi_offset 6, -16
 4131 0001 4889E5   		movq	%rsp, %rbp
 4132              		.cfi_def_cfa_register 6
 4133 0004 48897DF8 		movq	%rdi, -8(%rbp)
 736:/usr/include/c++/5/bits/stl_vector.h **** 
 4134              		.loc 5 736 0
 4135 0008 488B45F8 		movq	-8(%rbp), %rax
 4136 000c 488B4010 		movq	16(%rax), %rax
 4137 0010 4889C2   		movq	%rax, %rdx
 4138 0013 488B45F8 		movq	-8(%rbp), %rax
 4139 0017 488B00   		movq	(%rax), %rax
 4140 001a 4829C2   		subq	%rax, %rdx
 4141 001d 4889D0   		movq	%rdx, %rax
 4142 0020 48C1F803 		sarq	$3, %rax
 4143 0024 4889C2   		movq	%rax, %rdx
 4144 0027 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 4144      CCCCCCCC 
 4144      CCCC
 4145 0031 480FAFC2 		imulq	%rdx, %rax
 4146 0035 5D       		popq	%rbp
 4147              		.cfi_def_cfa 7, 8
 4148 0036 C3       		ret
 4149              		.cfi_endproc
 4150              	.LFE1014:
 4152              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 4153              		.align 2
 4154              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE20_M_allo
 4156              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE20_M_allocate_an
 4157              	.LFB1015:
1221:/usr/include/c++/5/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
 4158              		.loc 5 1221 0
 4159              		.cfi_startproc
 4160              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4161              		.cfi_lsda 0x1b,.LLSDA1015
 4162 0000 55       		pushq	%rbp
 4163              		.cfi_def_cfa_offset 16
 4164              		.cfi_offset 6, -16
 4165 0001 4889E5   		movq	%rsp, %rbp
 4166              		.cfi_def_cfa_register 6
 4167 0004 53       		pushq	%rbx
 4168 0005 4883EC48 		subq	$72, %rsp
 4169              		.cfi_offset 3, -24
 4170 0009 48897DD8 		movq	%rdi, -40(%rbp)
 4171 000d 488975D0 		movq	%rsi, -48(%rbp)
 4172 0011 488955C0 		movq	%rdx, -64(%rbp)
 4173 0015 48894DB0 		movq	%rcx, -80(%rbp)
1224:/usr/include/c++/5/bits/stl_vector.h **** 	  __try
 4174              		.loc 5 1224 0
 4175 0019 488B45D8 		movq	-40(%rbp), %rax
 4176 001d 488B55D0 		movq	-48(%rbp), %rdx
 4177 0021 4889D6   		movq	%rdx, %rsi
 4178 0024 4889C7   		movq	%rax, %rdi
 4179              	.LEHB52:
 4180 0027 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_
 4180      00
 4181              	.LEHE52:
 4182 002c 488945E8 		movq	%rax, -24(%rbp)
1228:/usr/include/c++/5/bits/stl_vector.h **** 	      return __result;
 4183              		.loc 5 1228 0
 4184 0030 488B45D8 		movq	-40(%rbp), %rax
 4185 0034 4889C7   		movq	%rax, %rdi
 4186 0037 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 4186      00
 4187 003c 4889C1   		movq	%rax, %rcx
1227:/usr/include/c++/5/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 4188              		.loc 5 1227 0
 4189 003f 488B55E8 		movq	-24(%rbp), %rdx
 4190 0043 488B75B0 		movq	-80(%rbp), %rsi
 4191 0047 488B45C0 		movq	-64(%rbp), %rax
 4192 004b 4889C7   		movq	%rax, %rdi
 4193              	.LEHB53:
 4194 004e E8000000 		call	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_str
 4194      00
 4195              	.LEHE53:
1229:/usr/include/c++/5/bits/stl_vector.h **** 	    }
 4196              		.loc 5 1229 0
 4197 0053 488B45E8 		movq	-24(%rbp), %rax
 4198 0057 EB37     		jmp	.L223
 4199              	.L221:
1231:/usr/include/c++/5/bits/stl_vector.h **** 	    {
 4200              		.loc 5 1231 0
 4201 0059 4889C7   		movq	%rax, %rdi
 4202 005c E8000000 		call	__cxa_begin_catch@PLT
 4202      00
1233:/usr/include/c++/5/bits/stl_vector.h **** 	      __throw_exception_again;
 4203              		.loc 5 1233 0
 4204 0061 488B45D8 		movq	-40(%rbp), %rax
 4205 0065 488B55D0 		movq	-48(%rbp), %rdx
 4206 0069 488B4DE8 		movq	-24(%rbp), %rcx
 4207 006d 4889CE   		movq	%rcx, %rsi
 4208 0070 4889C7   		movq	%rax, %rdi
 4209              	.LEHB54:
 4210 0073 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 4210      00
1234:/usr/include/c++/5/bits/stl_vector.h **** 	    }
 4211              		.loc 5 1234 0
 4212 0078 E8000000 		call	__cxa_rethrow@PLT
 4212      00
 4213              	.LEHE54:
 4214              	.L222:
 4215 007d 4889C3   		movq	%rax, %rbx
1231:/usr/include/c++/5/bits/stl_vector.h **** 	    {
 4216              		.loc 5 1231 0
 4217 0080 E8000000 		call	__cxa_end_catch@PLT
 4217      00
 4218 0085 4889D8   		movq	%rbx, %rax
 4219 0088 4889C7   		movq	%rax, %rdi
 4220              	.LEHB55:
 4221 008b E8000000 		call	_Unwind_Resume@PLT
 4221      00
 4222              	.LEHE55:
 4223              	.L223:
1236:/usr/include/c++/5/bits/stl_vector.h **** 
 4224              		.loc 5 1236 0
 4225 0090 4883C448 		addq	$72, %rsp
 4226 0094 5B       		popq	%rbx
 4227 0095 5D       		popq	%rbp
 4228              		.cfi_def_cfa 7, 8
 4229 0096 C3       		ret
 4230              		.cfi_endproc
 4231              	.LFE1015:
 4232              		.section	.gcc_except_table
 4233 0126 0000     		.align 4
 4234              	.LLSDA1015:
 4235 0128 FF       		.byte	0xff
 4236 0129 9B       		.byte	0x9b
 4237 012a 19       		.uleb128 .LLSDATT1015-.LLSDATTD1015
 4238              	.LLSDATTD1015:
 4239 012b 01       		.byte	0x1
 4240 012c 11       		.uleb128 .LLSDACSE1015-.LLSDACSB1015
 4241              	.LLSDACSB1015:
 4242 012d 27       		.uleb128 .LEHB52-.LFB1015
 4243 012e 05       		.uleb128 .LEHE52-.LEHB52
 4244 012f 00       		.uleb128 0
 4245 0130 00       		.uleb128 0
 4246 0131 4E       		.uleb128 .LEHB53-.LFB1015
 4247 0132 05       		.uleb128 .LEHE53-.LEHB53
 4248 0133 59       		.uleb128 .L221-.LFB1015
 4249 0134 01       		.uleb128 0x1
 4250 0135 73       		.uleb128 .LEHB54-.LFB1015
 4251 0136 0A       		.uleb128 .LEHE54-.LEHB54
 4252 0137 7D       		.uleb128 .L222-.LFB1015
 4253 0138 00       		.uleb128 0
 4254 0139 8B01     		.uleb128 .LEHB55-.LFB1015
 4255 013b 05       		.uleb128 .LEHE55-.LEHB55
 4256 013c 00       		.uleb128 0
 4257 013d 00       		.uleb128 0
 4258              	.LLSDACSE1015:
 4259 013e 01       		.byte	0x1
 4260 013f 00       		.byte	0
 4261              		.align 4
 4262 0140 00000000 		.long	0
 4263              	
 4264              	.LLSDATT1015:
 4265              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 4267              		.section	.text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11
 4268              		.weak	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_trai
 4270              	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 4271              	.LFB1016:
 462:/usr/include/c++/5/bits/stl_algobase.h ****     {
 4272              		.loc 12 462 0
 4273              		.cfi_startproc
 4274 0000 55       		pushq	%rbp
 4275              		.cfi_def_cfa_offset 16
 4276              		.cfi_offset 6, -16
 4277 0001 4889E5   		movq	%rsp, %rbp
 4278              		.cfi_def_cfa_register 6
 4279 0004 53       		pushq	%rbx
 4280 0005 4883EC38 		subq	$56, %rsp
 4281              		.cfi_offset 3, -24
 4282 0009 48897DE0 		movq	%rdi, -32(%rbp)
 4283 000d 488975D0 		movq	%rsi, -48(%rbp)
 4284 0011 488955C0 		movq	%rdx, -64(%rbp)
 471:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 4285              		.loc 12 471 0
 4286 0015 488B45D0 		movq	-48(%rbp), %rax
 4287 0019 4889C7   		movq	%rax, %rdi
 4288 001c E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 4288      00
 4289 0021 4889C3   		movq	%rax, %rbx
 4290 0024 488B45E0 		movq	-32(%rbp), %rax
 4291 0028 4889C7   		movq	%rax, %rdi
 4292 002b E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 4292      00
 4293 0030 4889C1   		movq	%rax, %rcx
 472:/usr/include/c++/5/bits/stl_algobase.h ****     }
 4294              		.loc 12 472 0
 4295 0033 488B45C0 		movq	-64(%rbp), %rax
 4296 0037 4889C2   		movq	%rax, %rdx
 4297 003a 4889DE   		movq	%rbx, %rsi
 4298 003d 4889CF   		movq	%rcx, %rdi
 4299 0040 E8000000 		call	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringI
 4299      00
 473:/usr/include/c++/5/bits/stl_algobase.h **** 
 4300              		.loc 12 473 0
 4301 0045 4883C438 		addq	$56, %rsp
 4302 0049 5B       		popq	%rbx
 4303 004a 5D       		popq	%rbp
 4304              		.cfi_def_cfa 7, 8
 4305 004b C3       		ret
 4306              		.cfi_endproc
 4307              	.LFE1016:
 4309              		.section	.text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcS
 4310              		.weak	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 4312              	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIc
 4313              	.LFB1017:
 148:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 4314              		.loc 6 148 0
 4315              		.cfi_startproc
 4316 0000 55       		pushq	%rbp
 4317              		.cfi_def_cfa_offset 16
 4318              		.cfi_offset 6, -16
 4319 0001 4889E5   		movq	%rsp, %rbp
 4320              		.cfi_def_cfa_register 6
 4321 0004 4883EC20 		subq	$32, %rsp
 4322 0008 48897DF0 		movq	%rdi, -16(%rbp)
 4323 000c 488975E0 		movq	%rsi, -32(%rbp)
 4324 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/5/bits/stl_construct.h ****     }
 4325              		.loc 6 151 0
 4326 0014 488B55E0 		movq	-32(%rbp), %rdx
 4327 0018 488B45F0 		movq	-16(%rbp), %rax
 4328 001c 4889D6   		movq	%rdx, %rsi
 4329 001f 4889C7   		movq	%rax, %rdi
 4330 0022 E8000000 		call	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tr
 4330      00
 4331              		.loc 6 152 0
 4332 0027 90       		nop
 4333 0028 C9       		leave
 4334              		.cfi_def_cfa 7, 8
 4335 0029 C3       		ret
 4336              		.cfi_endproc
 4337              	.LFE1017:
 4339              		.section	.text._ZSt4copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_S
 4340              		.weak	_ZSt4copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_
 4342              	_ZSt4copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_:
 4343              	.LFB1018:
 462:/usr/include/c++/5/bits/stl_algobase.h ****     {
 4344              		.loc 12 462 0
 4345              		.cfi_startproc
 4346 0000 55       		pushq	%rbp
 4347              		.cfi_def_cfa_offset 16
 4348              		.cfi_offset 6, -16
 4349 0001 4889E5   		movq	%rsp, %rbp
 4350              		.cfi_def_cfa_register 6
 4351 0004 53       		pushq	%rbx
 4352 0005 4883EC28 		subq	$40, %rsp
 4353              		.cfi_offset 3, -24
 4354 0009 48897DE8 		movq	%rdi, -24(%rbp)
 4355 000d 488975E0 		movq	%rsi, -32(%rbp)
 4356 0011 488955D8 		movq	%rdx, -40(%rbp)
 471:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 4357              		.loc 12 471 0
 4358 0015 488B45E0 		movq	-32(%rbp), %rax
 4359 0019 4889C7   		movq	%rax, %rdi
 4360 001c E8000000 		call	_ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Mite
 4360      00
 4361 0021 4889C3   		movq	%rax, %rbx
 4362 0024 488B45E8 		movq	-24(%rbp), %rax
 4363 0028 4889C7   		movq	%rax, %rdi
 4364 002b E8000000 		call	_ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Mite
 4364      00
 4365 0030 4889C1   		movq	%rax, %rcx
 472:/usr/include/c++/5/bits/stl_algobase.h ****     }
 4366              		.loc 12 472 0
 4367 0033 488B45D8 		movq	-40(%rbp), %rax
 4368 0037 4889C2   		movq	%rax, %rdx
 4369 003a 4889DE   		movq	%rbx, %rsi
 4370 003d 4889CF   		movq	%rcx, %rdi
 4371 0040 E8000000 		call	_ZSt14__copy_move_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET
 4371      00
 473:/usr/include/c++/5/bits/stl_algobase.h **** 
 4372              		.loc 12 473 0
 4373 0045 4883C428 		addq	$40, %rsp
 4374 0049 5B       		popq	%rbx
 4375 004a 5D       		popq	%rbp
 4376              		.cfi_def_cfa 7, 8
 4377 004b C3       		ret
 4378              		.cfi_endproc
 4379              	.LFE1018:
 4381              		.section	.text._ZSt22__uninitialized_copy_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIc
 4382              		.weak	_ZSt22__uninitialized_copy_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 4384              	_ZSt22__uninitialized_copy_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_S7_E
 4385              	.LFB1019:
 279:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 4386              		.loc 13 279 0
 4387              		.cfi_startproc
 4388 0000 55       		pushq	%rbp
 4389              		.cfi_def_cfa_offset 16
 4390              		.cfi_offset 6, -16
 4391 0001 4889E5   		movq	%rsp, %rbp
 4392              		.cfi_def_cfa_register 6
 4393 0004 4883EC20 		subq	$32, %rsp
 4394 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4395 000c 488975F0 		movq	%rsi, -16(%rbp)
 4396 0010 488955E8 		movq	%rdx, -24(%rbp)
 4397 0014 48894DE0 		movq	%rcx, -32(%rbp)
 281:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 4398              		.loc 13 281 0
 4399 0018 488B55E8 		movq	-24(%rbp), %rdx
 4400 001c 488B4DF0 		movq	-16(%rbp), %rcx
 4401 0020 488B45F8 		movq	-8(%rbp), %rax
 4402 0024 4889CE   		movq	%rcx, %rsi
 4403 0027 4889C7   		movq	%rax, %rdi
 4404 002a E8000000 		call	_ZSt18uninitialized_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET
 4404      00
 4405 002f C9       		leave
 4406              		.cfi_def_cfa 7, 8
 4407 0030 C3       		ret
 4408              		.cfi_endproc
 4409              	.LFE1019:
 4411              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE8max_sizeEv,"axG",@progbits,_Z
 4412              		.align 2
 4413              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE8max_sizeEv
 4415              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE8max_sizeEv:
 4416              	.LFB1020:
 659:/usr/include/c++/5/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 4417              		.loc 5 659 0
 4418              		.cfi_startproc
 4419 0000 55       		pushq	%rbp
 4420              		.cfi_def_cfa_offset 16
 4421              		.cfi_offset 6, -16
 4422 0001 4889E5   		movq	%rsp, %rbp
 4423              		.cfi_def_cfa_register 6
 4424 0004 4883EC10 		subq	$16, %rsp
 4425 0008 48897DF8 		movq	%rdi, -8(%rbp)
 660:/usr/include/c++/5/bits/stl_vector.h **** 
 4426              		.loc 5 660 0
 4427 000c 488B45F8 		movq	-8(%rbp), %rax
 4428 0010 4889C7   		movq	%rax, %rdi
 4429 0013 E8000000 		call	_ZNKSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv@PLT
 4429      00
 4430 0018 4889C7   		movq	%rax, %rdi
 4431 001b E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8max_sizeERKS3_@PLT
 4431      00
 4432 0020 C9       		leave
 4433              		.cfi_def_cfa 7, 8
 4434 0021 C3       		ret
 4435              		.cfi_endproc
 4436              	.LFE1020:
 4438              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt
 4439              		.align 2
 4440              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 4442              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:
 4443              	.LFB1021:
 654:/usr/include/c++/5/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 4444              		.loc 5 654 0
 4445              		.cfi_startproc
 4446 0000 55       		pushq	%rbp
 4447              		.cfi_def_cfa_offset 16
 4448              		.cfi_offset 6, -16
 4449 0001 4889E5   		movq	%rsp, %rbp
 4450              		.cfi_def_cfa_register 6
 4451 0004 48897DF8 		movq	%rdi, -8(%rbp)
 655:/usr/include/c++/5/bits/stl_vector.h **** 
 4452              		.loc 5 655 0
 4453 0008 488B45F8 		movq	-8(%rbp), %rax
 4454 000c 488B4008 		movq	8(%rax), %rax
 4455 0010 4889C2   		movq	%rax, %rdx
 4456 0013 488B45F8 		movq	-8(%rbp), %rax
 4457 0017 488B00   		movq	(%rax), %rax
 4458 001a 4829C2   		subq	%rax, %rdx
 4459 001d 4889D0   		movq	%rdx, %rax
 4460 0020 48C1F807 		sarq	$7, %rax
 4461 0024 5D       		popq	%rbp
 4462              		.cfi_def_cfa 7, 8
 4463 0025 C3       		ret
 4464              		.cfi_endproc
 4465              	.LFE1021:
 4467              		.section	.text._ZSt3maxImERKT_S2_S2_,"axG",@progbits,_ZSt3maxImERKT_S2_S2_,comdat
 4468              		.weak	_ZSt3maxImERKT_S2_S2_
 4470              	_ZSt3maxImERKT_S2_S2_:
 4471              	.LFB1022:
 219:/usr/include/c++/5/bits/stl_algobase.h ****     {
 4472              		.loc 12 219 0
 4473              		.cfi_startproc
 4474 0000 55       		pushq	%rbp
 4475              		.cfi_def_cfa_offset 16
 4476              		.cfi_offset 6, -16
 4477 0001 4889E5   		movq	%rsp, %rbp
 4478              		.cfi_def_cfa_register 6
 4479 0004 48897DF8 		movq	%rdi, -8(%rbp)
 4480 0008 488975F0 		movq	%rsi, -16(%rbp)
 224:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 4481              		.loc 12 224 0
 4482 000c 488B45F8 		movq	-8(%rbp), %rax
 4483 0010 488B10   		movq	(%rax), %rdx
 4484 0013 488B45F0 		movq	-16(%rbp), %rax
 4485 0017 488B00   		movq	(%rax), %rax
 4486 001a 4839C2   		cmpq	%rax, %rdx
 4487 001d 7306     		jnb	.L236
 225:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 4488              		.loc 12 225 0
 4489 001f 488B45F0 		movq	-16(%rbp), %rax
 4490 0023 EB04     		jmp	.L237
 4491              	.L236:
 226:/usr/include/c++/5/bits/stl_algobase.h ****     }
 4492              		.loc 12 226 0
 4493 0025 488B45F8 		movq	-8(%rbp), %rax
 4494              	.L237:
 227:/usr/include/c++/5/bits/stl_algobase.h **** 
 4495              		.loc 12 227 0
 4496 0029 5D       		popq	%rbp
 4497              		.cfi_def_cfa 7, 8
 4498 002a C3       		ret
 4499              		.cfi_endproc
 4500              	.LFE1022:
 4502              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8allocateERS3_m,"
 4503              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8allocateERS3_m
 4505              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8allocateERS3_m:
 4506              	.LFB1023:
 181:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 4507              		.loc 7 181 0
 4508              		.cfi_startproc
 4509 0000 55       		pushq	%rbp
 4510              		.cfi_def_cfa_offset 16
 4511              		.cfi_offset 6, -16
 4512 0001 4889E5   		movq	%rsp, %rbp
 4513              		.cfi_def_cfa_register 6
 4514 0004 4883EC10 		subq	$16, %rsp
 4515 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4516 000c 488975F0 		movq	%rsi, -16(%rbp)
 182:/usr/include/c++/5/ext/alloc_traits.h **** 
 4517              		.loc 7 182 0
 4518 0010 488B4DF0 		movq	-16(%rbp), %rcx
 4519 0014 488B45F8 		movq	-8(%rbp), %rax
 4520 0018 BA000000 		movl	$0, %edx
 4520      00
 4521 001d 4889CE   		movq	%rcx, %rsi
 4522 0020 4889C7   		movq	%rax, %rdi
 4523 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8allocateEmPKv@PLT
 4523      00
 4524 0028 C9       		leave
 4525              		.cfi_def_cfa 7, 8
 4526 0029 C3       		ret
 4527              		.cfi_endproc
 4528              	.LFE1023:
 4530              		.section	.text._ZSt22__uninitialized_copy_aIPN8UnitTest18DeferredTestResultES2_S1_ET0_T_S4_S3_RSaI
 4531              		.weak	_ZSt22__uninitialized_copy_aIPN8UnitTest18DeferredTestResultES2_S1_ET0_T_S4_S3_RSaIT1_E
 4533              	_ZSt22__uninitialized_copy_aIPN8UnitTest18DeferredTestResultES2_S1_ET0_T_S4_S3_RSaIT1_E:
 4534              	.LFB1024:
 279:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 4535              		.loc 13 279 0
 4536              		.cfi_startproc
 4537 0000 55       		pushq	%rbp
 4538              		.cfi_def_cfa_offset 16
 4539              		.cfi_offset 6, -16
 4540 0001 4889E5   		movq	%rsp, %rbp
 4541              		.cfi_def_cfa_register 6
 4542 0004 4883EC20 		subq	$32, %rsp
 4543 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4544 000c 488975F0 		movq	%rsi, -16(%rbp)
 4545 0010 488955E8 		movq	%rdx, -24(%rbp)
 4546 0014 48894DE0 		movq	%rcx, -32(%rbp)
 281:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 4547              		.loc 13 281 0
 4548 0018 488B55E8 		movq	-24(%rbp), %rdx
 4549 001c 488B4DF0 		movq	-16(%rbp), %rcx
 4550 0020 488B45F8 		movq	-8(%rbp), %rax
 4551 0024 4889CE   		movq	%rcx, %rsi
 4552 0027 4889C7   		movq	%rax, %rdi
 4553 002a E8000000 		call	_ZSt18uninitialized_copyIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_@PLT
 4553      00
 4554 002f C9       		leave
 4555              		.cfi_def_cfa 7, 8
 4556 0030 C3       		ret
 4557              		.cfi_endproc
 4558              	.LFE1024:
 4560              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE7destroyEPS2_,"axG",@p
 4561              		.align 2
 4562              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE7destroyEPS2_
 4564              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE7destroyEPS2_:
 4565              	.LFB1025:
 131:/usr/include/c++/5/ext/new_allocator.h **** 
 132:/usr/include/c++/5/ext/new_allocator.h ****       void 
 133:/usr/include/c++/5/ext/new_allocator.h ****       destroy(pointer __p) { __p->~_Tp(); }
 4566              		.loc 11 133 0
 4567              		.cfi_startproc
 4568 0000 55       		pushq	%rbp
 4569              		.cfi_def_cfa_offset 16
 4570              		.cfi_offset 6, -16
 4571 0001 4889E5   		movq	%rsp, %rbp
 4572              		.cfi_def_cfa_register 6
 4573 0004 4883EC10 		subq	$16, %rsp
 4574 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4575 000c 488975F0 		movq	%rsi, -16(%rbp)
 4576              		.loc 11 133 0
 4577 0010 488B45F0 		movq	-16(%rbp), %rax
 4578 0014 4889C7   		movq	%rax, %rdi
 4579 0017 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev@PLT
 4579      00
 4580 001c 90       		nop
 4581 001d C9       		leave
 4582              		.cfi_def_cfa 7, 8
 4583 001e C3       		ret
 4584              		.cfi_endproc
 4585              	.LFE1025:
 4587              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 4588              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 4590              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 4591              	.LFB1026:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 4592              		.loc 6 122 0
 4593              		.cfi_startproc
 4594 0000 55       		pushq	%rbp
 4595              		.cfi_def_cfa_offset 16
 4596              		.cfi_offset 6, -16
 4597 0001 4889E5   		movq	%rsp, %rbp
 4598              		.cfi_def_cfa_register 6
 4599 0004 4883EC10 		subq	$16, %rsp
 4600 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4601 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 4602              		.loc 6 126 0
 4603 0010 488B55F0 		movq	-16(%rbp), %rdx
 4604 0014 488B45F8 		movq	-8(%rbp), %rax
 4605 0018 4889D6   		movq	%rdx, %rsi
 4606 001b 4889C7   		movq	%rax, %rdi
 4607 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_@PLT
 4607      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 4608              		.loc 6 128 0
 4609 0023 90       		nop
 4610 0024 C9       		leave
 4611              		.cfi_def_cfa 7, 8
 4612 0025 C3       		ret
 4613              		.cfi_endproc
 4614              	.LFE1026:
 4616              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_
 4617              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 4619              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:
 4620              	.LFB1027:
 184:/usr/include/c++/5/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 4621              		.loc 7 184 0
 4622              		.cfi_startproc
 4623 0000 55       		pushq	%rbp
 4624              		.cfi_def_cfa_offset 16
 4625              		.cfi_offset 6, -16
 4626 0001 4889E5   		movq	%rsp, %rbp
 4627              		.cfi_def_cfa_register 6
 4628 0004 4883EC20 		subq	$32, %rsp
 4629 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4630 000c 488975F0 		movq	%rsi, -16(%rbp)
 4631 0010 488955E8 		movq	%rdx, -24(%rbp)
 185:/usr/include/c++/5/ext/alloc_traits.h **** 
 4632              		.loc 7 185 0
 4633 0014 488B55E8 		movq	-24(%rbp), %rdx
 4634 0018 488B4DF0 		movq	-16(%rbp), %rcx
 4635 001c 488B45F8 		movq	-8(%rbp), %rax
 4636 0020 4889CE   		movq	%rcx, %rsi
 4637 0023 4889C7   		movq	%rax, %rdi
 4638 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m@PLT
 4638      00
 4639 002b 90       		nop
 4640 002c C9       		leave
 4641              		.cfi_def_cfa 7, 8
 4642 002d C3       		ret
 4643              		.cfi_endproc
 4644              	.LFE1027:
 4646              		.section	.text._ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 4647              		.weak	_ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Mit
 4649              	_ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Miter_base
 4650              	.LFB1033:
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 4651              		.loc 12 293 0
 4652              		.cfi_startproc
 4653 0000 55       		pushq	%rbp
 4654              		.cfi_def_cfa_offset 16
 4655              		.cfi_offset 6, -16
 4656 0001 4889E5   		movq	%rsp, %rbp
 4657              		.cfi_def_cfa_register 6
 4658 0004 4883EC10 		subq	$16, %rsp
 4659 0008 48897DF8 		movq	%rdi, -8(%rbp)
 294:/usr/include/c++/5/bits/stl_algobase.h **** 
 4660              		.loc 12 294 0
 4661 000c 488B45F8 		movq	-8(%rbp), %rax
 4662 0010 4889C7   		movq	%rax, %rdi
 4663 0013 E8000000 		call	_ZNSt10_Iter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb0EE7_S_bas
 4663      00
 4664 0018 C9       		leave
 4665              		.cfi_def_cfa 7, 8
 4666 0019 C3       		ret
 4667              		.cfi_endproc
 4668              	.LFE1033:
 4670              		.section	.text._ZSt23__copy_move_backward_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tra
 4671              		.weak	_ZSt23__copy_move_backward_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 4673              	_ZSt23__copy_move_backward_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8
 4674              	.LFB1034:
 611:/usr/include/c++/5/bits/stl_algobase.h ****     {
 4675              		.loc 12 611 0
 4676              		.cfi_startproc
 4677 0000 55       		pushq	%rbp
 4678              		.cfi_def_cfa_offset 16
 4679              		.cfi_offset 6, -16
 4680 0001 4889E5   		movq	%rsp, %rbp
 4681              		.cfi_def_cfa_register 6
 4682 0004 4154     		pushq	%r12
 4683 0006 53       		pushq	%rbx
 4684 0007 4883EC20 		subq	$32, %rsp
 4685              		.cfi_offset 12, -24
 4686              		.cfi_offset 3, -32
 4687 000b 48897DE8 		movq	%rdi, -24(%rbp)
 4688 000f 488975E0 		movq	%rsi, -32(%rbp)
 4689 0013 488955D8 		movq	%rdx, -40(%rbp)
 614:/usr/include/c++/5/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 4690              		.loc 12 614 0
 4691 0017 488B45D8 		movq	-40(%rbp), %rax
 4692 001b 4889C7   		movq	%rax, %rdi
 4693 001e E8000000 		call	_ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Nite
 4693      00
 4694 0023 4989C4   		movq	%rax, %r12
 4695 0026 488B45E0 		movq	-32(%rbp), %rax
 4696 002a 4889C7   		movq	%rax, %rdi
 4697 002d E8000000 		call	_ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Nite
 4697      00
 4698 0032 4889C3   		movq	%rax, %rbx
 4699 0035 488B45E8 		movq	-24(%rbp), %rax
 4700 0039 4889C7   		movq	%rax, %rdi
 4701 003c E8000000 		call	_ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Nite
 4701      00
 615:/usr/include/c++/5/bits/stl_algobase.h ****     }
 4702              		.loc 12 615 0
 4703 0041 4C89E2   		movq	%r12, %rdx
 4704 0044 4889DE   		movq	%rbx, %rsi
 4705 0047 4889C7   		movq	%rax, %rdi
 4706 004a E8000000 		call	_ZSt22__copy_move_backward_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 4706      00
 616:/usr/include/c++/5/bits/stl_algobase.h **** 
 4707              		.loc 12 616 0
 4708 004f 4883C420 		addq	$32, %rsp
 4709 0053 5B       		popq	%rbx
 4710 0054 415C     		popq	%r12
 4711 0056 5D       		popq	%rbp
 4712              		.cfi_def_cfa 7, 8
 4713 0057 C3       		ret
 4714              		.cfi_endproc
 4715              	.LFE1034:
 4717              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 4718              		.align 2
 4719              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8max_siz
 4721              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8max_sizeEv:
 4722              	.LFB1035:
 659:/usr/include/c++/5/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 4723              		.loc 5 659 0
 4724              		.cfi_startproc
 4725 0000 55       		pushq	%rbp
 4726              		.cfi_def_cfa_offset 16
 4727              		.cfi_offset 6, -16
 4728 0001 4889E5   		movq	%rsp, %rbp
 4729              		.cfi_def_cfa_register 6
 4730 0004 4883EC10 		subq	$16, %rsp
 4731 0008 48897DF8 		movq	%rdi, -8(%rbp)
 660:/usr/include/c++/5/bits/stl_vector.h **** 
 4732              		.loc 5 660 0
 4733 000c 488B45F8 		movq	-8(%rbp), %rax
 4734 0010 4889C7   		movq	%rax, %rdi
 4735 0013 E8000000 		call	_ZNKSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 4735      00
 4736 0018 4889C7   		movq	%rax, %rdi
 4737 001b E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 4737      00
 4738 0020 C9       		leave
 4739              		.cfi_def_cfa 7, 8
 4740 0021 C3       		ret
 4741              		.cfi_endproc
 4742              	.LFE1035:
 4744              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 4745              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 4747              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8a
 4748              	.LFB1036:
 181:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 4749              		.loc 7 181 0
 4750              		.cfi_startproc
 4751 0000 55       		pushq	%rbp
 4752              		.cfi_def_cfa_offset 16
 4753              		.cfi_offset 6, -16
 4754 0001 4889E5   		movq	%rsp, %rbp
 4755              		.cfi_def_cfa_register 6
 4756 0004 4883EC10 		subq	$16, %rsp
 4757 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4758 000c 488975F0 		movq	%rsi, -16(%rbp)
 182:/usr/include/c++/5/ext/alloc_traits.h **** 
 4759              		.loc 7 182 0
 4760 0010 488B4DF0 		movq	-16(%rbp), %rcx
 4761 0014 488B45F8 		movq	-8(%rbp), %rax
 4762 0018 BA000000 		movl	$0, %edx
 4762      00
 4763 001d 4889CE   		movq	%rcx, %rsi
 4764 0020 4889C7   		movq	%rax, %rdi
 4765 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8
 4765      00
 4766 0028 C9       		leave
 4767              		.cfi_def_cfa 7, 8
 4768 0029 C3       		ret
 4769              		.cfi_endproc
 4770              	.LFE1036:
 4772              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 4773              		.align 2
 4774              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 4776              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destro
 4777              	.LFB1037:
 4778              		.loc 11 133 0
 4779              		.cfi_startproc
 4780 0000 55       		pushq	%rbp
 4781              		.cfi_def_cfa_offset 16
 4782              		.cfi_offset 6, -16
 4783 0001 4889E5   		movq	%rsp, %rbp
 4784              		.cfi_def_cfa_register 6
 4785 0004 4883EC10 		subq	$16, %rsp
 4786 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4787 000c 488975F0 		movq	%rsi, -16(%rbp)
 4788              		.loc 11 133 0
 4789 0010 488B45F0 		movq	-16(%rbp), %rax
 4790 0014 4889C7   		movq	%rax, %rdi
 4791 0017 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev@PLT
 4791      00
 4792 001c 90       		nop
 4793 001d C9       		leave
 4794              		.cfi_def_cfa 7, 8
 4795 001e C3       		ret
 4796              		.cfi_endproc
 4797              	.LFE1037:
 4799              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 4800              		.align 2
 4801              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 4803              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deall
 4804              	.LFB1039:
 109:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 4805              		.loc 11 109 0
 4806              		.cfi_startproc
 4807 0000 55       		pushq	%rbp
 4808              		.cfi_def_cfa_offset 16
 4809              		.cfi_offset 6, -16
 4810 0001 4889E5   		movq	%rsp, %rbp
 4811              		.cfi_def_cfa_register 6
 4812 0004 4883EC20 		subq	$32, %rsp
 4813 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4814 000c 488975F0 		movq	%rsi, -16(%rbp)
 4815 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/5/ext/new_allocator.h **** 
 4816              		.loc 11 110 0
 4817 0014 488B45F0 		movq	-16(%rbp), %rax
 4818 0018 4889C7   		movq	%rax, %rdi
 4819 001b E8000000 		call	_ZdlPv@PLT
 4819      00
 4820 0020 90       		nop
 4821 0021 C9       		leave
 4822              		.cfi_def_cfa 7, 8
 4823 0022 C3       		ret
 4824              		.cfi_endproc
 4825              	.LFE1039:
 4827              		.section	.text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT
 4828              		.weak	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 4830              	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:
 4831              	.LFB1040:
 4832              		.file 14 "/usr/include/c++/5/bits/move.h"
   1:/usr/include/c++/5/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/5/bits/move.h **** 
   3:/usr/include/c++/5/bits/move.h **** // Copyright (C) 2007-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/move.h **** //
   5:/usr/include/c++/5/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/move.h **** // any later version.
  10:/usr/include/c++/5/bits/move.h **** 
  11:/usr/include/c++/5/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/move.h **** 
  16:/usr/include/c++/5/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/move.h **** 
  20:/usr/include/c++/5/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/move.h **** 
  25:/usr/include/c++/5/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/5/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/5/bits/move.h ****  */
  29:/usr/include/c++/5/bits/move.h **** 
  30:/usr/include/c++/5/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/5/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/5/bits/move.h **** 
  33:/usr/include/c++/5/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/5/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/5/bits/move.h **** 
  36:/usr/include/c++/5/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/5/bits/move.h **** {
  38:/usr/include/c++/5/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/5/bits/move.h **** 
  40:/usr/include/c++/5/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/5/bits/move.h ****   /**
  42:/usr/include/c++/5/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/5/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/5/bits/move.h ****    */
  45:/usr/include/c++/5/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/5/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/5/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 4833              		.loc 14 47 0
 4834              		.cfi_startproc
 4835 0000 55       		pushq	%rbp
 4836              		.cfi_def_cfa_offset 16
 4837              		.cfi_offset 6, -16
 4838 0001 4889E5   		movq	%rsp, %rbp
 4839              		.cfi_def_cfa_register 6
 4840 0004 48897DF8 		movq	%rdi, -8(%rbp)
  48:/usr/include/c++/5/bits/move.h ****     {
  49:/usr/include/c++/5/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/5/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
 4841              		.loc 14 50 0
 4842 0008 488B45F8 		movq	-8(%rbp), %rax
  51:/usr/include/c++/5/bits/move.h ****     }
 4843              		.loc 14 51 0
 4844 000c 5D       		popq	%rbp
 4845              		.cfi_def_cfa 7, 8
 4846 000d C3       		ret
 4847              		.cfi_endproc
 4848              	.LFE1040:
 4850              		.section	.text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_,"
 4851              		.weak	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 4853              	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:
 4854              	.LFB1041:
  92:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 4855              		.loc 6 92 0
 4856              		.cfi_startproc
 4857 0000 55       		pushq	%rbp
 4858              		.cfi_def_cfa_offset 16
 4859              		.cfi_offset 6, -16
 4860 0001 4889E5   		movq	%rsp, %rbp
 4861              		.cfi_def_cfa_register 6
 4862 0004 4883EC10 		subq	$16, %rsp
 4863 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/5/bits/stl_construct.h **** 
 4864              		.loc 6 93 0
 4865 000c 488B45F8 		movq	-8(%rbp), %rax
 4866 0010 4889C7   		movq	%rax, %rdi
 4867 0013 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev@PLT
 4867      00
 4868 0018 90       		nop
 4869 0019 C9       		leave
 4870              		.cfi_def_cfa 7, 8
 4871 001a C3       		ret
 4872              		.cfi_endproc
 4873              	.LFE1041:
 4875              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 4876              		.align 2
 4877              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 4879              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector
 4880              	.LFB1043:
  90:/usr/include/c++/5/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
 4881              		.loc 5 90 0
 4882              		.cfi_startproc
 4883 0000 55       		pushq	%rbp
 4884              		.cfi_def_cfa_offset 16
 4885              		.cfi_offset 6, -16
 4886 0001 4889E5   		movq	%rsp, %rbp
 4887              		.cfi_def_cfa_register 6
 4888 0004 4883EC10 		subq	$16, %rsp
 4889 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4890 000c 488975F0 		movq	%rsi, -16(%rbp)
 4891              	.LBB39:
  91:/usr/include/c++/5/bits/stl_vector.h **** 	{ }
 4892              		.loc 5 91 0
 4893 0010 488B55F0 		movq	-16(%rbp), %rdx
 4894 0014 488B45F8 		movq	-8(%rbp), %rax
 4895 0018 4889D6   		movq	%rdx, %rsi
 4896 001b 4889C7   		movq	%rax, %rdi
 4897 001e E8000000 		call	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS7_@PLT
 4897      00
 4898 0023 488B45F8 		movq	-8(%rbp), %rax
 4899 0027 48C70000 		movq	$0, (%rax)
 4899      000000
 4900 002e 488B45F8 		movq	-8(%rbp), %rax
 4901 0032 48C74008 		movq	$0, 8(%rax)
 4901      00000000 
 4902 003a 488B45F8 		movq	-8(%rbp), %rax
 4903 003e 48C74010 		movq	$0, 16(%rax)
 4903      00000000 
 4904              	.LBE39:
  92:/usr/include/c++/5/bits/stl_vector.h **** 
 4905              		.loc 5 92 0
 4906 0046 90       		nop
 4907 0047 C9       		leave
 4908              		.cfi_def_cfa 7, 8
 4909 0048 C3       		ret
 4910              		.cfi_endproc
 4911              	.LFE1043:
 4913              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 4914              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 4915              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 4916              		.align 2
 4917              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17
 4919              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_crea
 4920              	.LFB1045:
 183:/usr/include/c++/5/bits/stl_vector.h ****       {
 4921              		.loc 5 183 0
 4922              		.cfi_startproc
 4923 0000 55       		pushq	%rbp
 4924              		.cfi_def_cfa_offset 16
 4925              		.cfi_offset 6, -16
 4926 0001 4889E5   		movq	%rsp, %rbp
 4927              		.cfi_def_cfa_register 6
 4928 0004 4883EC10 		subq	$16, %rsp
 4929 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4930 000c 488975F0 		movq	%rsi, -16(%rbp)
 185:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 4931              		.loc 5 185 0
 4932 0010 488B55F0 		movq	-16(%rbp), %rdx
 4933 0014 488B45F8 		movq	-8(%rbp), %rax
 4934 0018 4889D6   		movq	%rdx, %rsi
 4935 001b 4889C7   		movq	%rax, %rdi
 4936 001e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_
 4936      00
 4937 0023 4889C2   		movq	%rax, %rdx
 4938 0026 488B45F8 		movq	-8(%rbp), %rax
 4939 002a 488910   		movq	%rdx, (%rax)
 186:/usr/include/c++/5/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 4940              		.loc 5 186 0
 4941 002d 488B45F8 		movq	-8(%rbp), %rax
 4942 0031 488B10   		movq	(%rax), %rdx
 4943 0034 488B45F8 		movq	-8(%rbp), %rax
 4944 0038 48895008 		movq	%rdx, 8(%rax)
 187:/usr/include/c++/5/bits/stl_vector.h ****       }
 4945              		.loc 5 187 0
 4946 003c 488B45F8 		movq	-8(%rbp), %rax
 4947 0040 488B08   		movq	(%rax), %rcx
 4948 0043 488B55F0 		movq	-16(%rbp), %rdx
 4949 0047 4889D0   		movq	%rdx, %rax
 4950 004a 48C1E002 		salq	$2, %rax
 4951 004e 4801D0   		addq	%rdx, %rax
 4952 0051 48C1E003 		salq	$3, %rax
 4953 0055 488D1401 		leaq	(%rcx,%rax), %rdx
 4954 0059 488B45F8 		movq	-8(%rbp), %rax
 4955 005d 48895010 		movq	%rdx, 16(%rax)
 188:/usr/include/c++/5/bits/stl_vector.h ****     };
 4956              		.loc 5 188 0
 4957 0061 90       		nop
 4958 0062 C9       		leave
 4959              		.cfi_def_cfa 7, 8
 4960 0063 C3       		ret
 4961              		.cfi_endproc
 4962              	.LFE1045:
 4964              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tra
 4965              		.align 2
 4966              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 4968              	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt
 4969              	.LFB1047:
 740:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(__i) { }
 4970              		.loc 9 740 0
 4971              		.cfi_startproc
 4972 0000 55       		pushq	%rbp
 4973              		.cfi_def_cfa_offset 16
 4974              		.cfi_offset 6, -16
 4975 0001 4889E5   		movq	%rsp, %rbp
 4976              		.cfi_def_cfa_register 6
 4977 0004 48897DF8 		movq	%rdi, -8(%rbp)
 4978 0008 488975F0 		movq	%rsi, -16(%rbp)
 4979              	.LBB40:
 741:/usr/include/c++/5/bits/stl_iterator.h **** 
 4980              		.loc 9 741 0
 4981 000c 488B45F0 		movq	-16(%rbp), %rax
 4982 0010 488B10   		movq	(%rax), %rdx
 4983 0013 488B45F8 		movq	-8(%rbp), %rax
 4984 0017 488910   		movq	%rdx, (%rax)
 4985              	.LBE40:
 4986 001a 90       		nop
 4987 001b 5D       		popq	%rbp
 4988              		.cfi_def_cfa 7, 8
 4989 001c C3       		ret
 4990              		.cfi_endproc
 4991              	.LFE1047:
 4993              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 4994              		.set	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 4995              		.section	.text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112bas
 4996              		.weak	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_string
 4998              	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 4999              	.LFB1049:
 107:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 5000              		.loc 13 107 0
 5001              		.cfi_startproc
 5002 0000 55       		pushq	%rbp
 5003              		.cfi_def_cfa_offset 16
 5004              		.cfi_offset 6, -16
 5005 0001 4889E5   		movq	%rsp, %rbp
 5006              		.cfi_def_cfa_register 6
 5007 0004 4883EC30 		subq	$48, %rsp
 5008 0008 48897DE0 		movq	%rdi, -32(%rbp)
 5009 000c 488975D0 		movq	%rsi, -48(%rbp)
 5010 0010 488955D8 		movq	%rdx, -40(%rbp)
 115:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 5011              		.loc 13 115 0
 5012 0014 C645FF01 		movb	$1, -1(%rbp)
 126:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 5013              		.loc 13 126 0
 5014 0018 488B55D8 		movq	-40(%rbp), %rdx
 5015 001c 488B4DD0 		movq	-48(%rbp), %rcx
 5016 0020 488B45E0 		movq	-32(%rbp), %rax
 5017 0024 4889CE   		movq	%rcx, %rsi
 5018 0027 4889C7   		movq	%rax, %rdi
 5019 002a E8000000 		call	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNS
 5019      00
 127:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 5020              		.loc 13 127 0
 5021 002f C9       		leave
 5022              		.cfi_def_cfa 7, 8
 5023 0030 C3       		ret
 5024              		.cfi_endproc
 5025              	.LFE1049:
 5027              		.section	.text._ZNSt10_Iter_baseIPN8UnitTest18DeferredTestResultELb0EE7_S_baseES2_,"axG",@progbits
 5028              		.weak	_ZNSt10_Iter_baseIPN8UnitTest18DeferredTestResultELb0EE7_S_baseES2_
 5030              	_ZNSt10_Iter_baseIPN8UnitTest18DeferredTestResultELb0EE7_S_baseES2_:
 5031              	.LFB1050:
 5032              		.file 15 "/usr/include/c++/5/bits/stl_iterator_base_types.h"
   1:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Types used in iterator implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
   3:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_iterator_base_types.h **** //
   5:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  11:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  16:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  20:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  25:/usr/include/c++/5/bits/stl_iterator_base_types.h **** /*
  26:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  27:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  30:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  38:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  39:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  42:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  */
  50:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  51:/usr/include/c++/5/bits/stl_iterator_base_types.h **** /** @file bits/stl_iterator_base_types.h
  52:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  55:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  This file contains all of the general iterator-related utility types,
  56:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  such as iterator_traits and struct iterator.
  57:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  */
  58:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  59:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #ifndef _STL_ITERATOR_BASE_TYPES_H
  60:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #define _STL_ITERATOR_BASE_TYPES_H 1
  61:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  62:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #pragma GCC system_header
  63:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  64:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #include <bits/c++config.h>
  65:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  66:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
  67:/usr/include/c++/5/bits/stl_iterator_base_types.h **** # include <type_traits>  // For __void_t, is_convertible
  68:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #endif
  69:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  70:/usr/include/c++/5/bits/stl_iterator_base_types.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:/usr/include/c++/5/bits/stl_iterator_base_types.h **** {
  72:/usr/include/c++/5/bits/stl_iterator_base_types.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  74:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
  75:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @defgroup iterators Iterators
  76:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  Abstractions for uniform iterating through various underlying types.
  77:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
  78:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@{ 
  79:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  80:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
  81:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @defgroup iterator_tags Iterator Tags
  82:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  These are empty types, used to distinguish different iterators.  The
  83:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  distinction is not made by what they contain, but simply by what they
  84:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  are.  Different underlying algorithms can then be used based on the
  85:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  different operations supported by different iterator types.
  86:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
  87:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@{ 
  88:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   ///  Marking input iterators.
  89:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct input_iterator_tag { };
  90:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  91:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   ///  Marking output iterators.
  92:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct output_iterator_tag { };
  93:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  94:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Forward iterators support a superset of input iterator operations.
  95:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct forward_iterator_tag : public input_iterator_tag { };
  96:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  97:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Bidirectional iterators support a superset of forward iterator
  98:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// operations.
  99:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct bidirectional_iterator_tag : public forward_iterator_tag { };
 100:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 101:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Random-access iterators support a superset of bidirectional
 102:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// iterator operations.
 103:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct random_access_iterator_tag : public bidirectional_iterator_tag { };
 104:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@}
 105:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 106:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 107:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @brief  Common %iterator class.
 108:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 109:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  %Iterator classes
 110:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  can inherit from this class to save some work.  The typedefs are then
 111:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  used in specializations and overloading.
 112:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 113:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  In particular, there are no default implementations of requirements
 114:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  such as @c operator++ and the like.  (How could there be?)
 115:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 116:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
 117:/usr/include/c++/5/bits/stl_iterator_base_types.h ****            typename _Pointer = _Tp*, typename _Reference = _Tp&>
 118:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator
 119:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 120:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// One of the @link iterator_tags tag types@endlink.
 121:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Category  iterator_category;
 122:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// The type "pointed to" by the iterator.
 123:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp        value_type;
 124:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// Distance between iterators is represented as this type.
 125:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Distance  difference_type;
 126:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// This type represents a pointer-to-value_type.
 127:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Pointer   pointer;
 128:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// This type represents a reference-to-value_type.
 129:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Reference reference;
 130:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 131:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 132:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 133:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @brief  Traits class for iterators.
 134:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 135:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  The general
 136:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  version simply @a forwards the nested typedefs from the Iterator
 137:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  argument.  Specialized versions for pointers and pointers-to-const
 138:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  provide tighter, more correct semantics.
 139:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 140:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // 2408. SFINAE-friendly common_type/iterator_traits is missing in C++14
 143:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator, typename = __void_t<>>
 144:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct __iterator_traits { };
 145:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 146:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 147:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct __iterator_traits<_Iterator,
 148:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 			     __void_t<typename _Iterator::iterator_category,
 149:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::value_type,
 150:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::difference_type,
 151:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::pointer,
 152:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::reference>>
 153:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 154:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 155:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 156:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 157:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 158:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 159:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 160:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 161:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 162:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits
 163:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     : public __iterator_traits<_Iterator> { };
 164:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #else
 165:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 166:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits
 167:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 168:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 169:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 170:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 171:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 172:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 173:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 174:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #endif
 175:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 176:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Partial specialization for pointer types.
 177:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 178:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits<_Tp*>
 179:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 180:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 181:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 182:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 183:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp*                        pointer;
 184:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp&                        reference;
 185:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 186:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 187:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Partial specialization for const pointer types.
 188:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 189:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits<const _Tp*>
 190:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 191:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 192:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 193:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 194:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef const _Tp*                  pointer;
 195:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef const _Tp&                  reference;
 196:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 197:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 198:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 199:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This function is not a part of the C++ standard but is syntactic
 200:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  sugar for internal library use only.
 201:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 202:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iter>
 203:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     inline typename iterator_traits<_Iter>::iterator_category
 204:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     __iterator_category(const _Iter&)
 205:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     { return typename iterator_traits<_Iter>::iterator_category(); }
 206:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 207:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@}
 208:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 209:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // If _Iterator has a base returns it otherwise _Iterator is returned
 210:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // untouched
 211:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator, bool _HasBase>
 212:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct _Iter_base
 213:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 214:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Iterator iterator_type;
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       static iterator_type _S_base(_Iterator __it)
 5033              		.loc 15 215 0
 5034              		.cfi_startproc
 5035 0000 55       		pushq	%rbp
 5036              		.cfi_def_cfa_offset 16
 5037              		.cfi_offset 6, -16
 5038 0001 4889E5   		movq	%rsp, %rbp
 5039              		.cfi_def_cfa_register 6
 5040 0004 48897DF8 		movq	%rdi, -8(%rbp)
 216:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 5041              		.loc 15 216 0
 5042 0008 488B45F8 		movq	-8(%rbp), %rax
 5043 000c 5D       		popq	%rbp
 5044              		.cfi_def_cfa 7, 8
 5045 000d C3       		ret
 5046              		.cfi_endproc
 5047              	.LFE1050:
 5049              		.section	.text._ZSt12__niter_baseIPN8UnitTest18DeferredTestResultEENSt11_Niter_baseIT_E13iterator_
 5050              		.weak	_ZSt12__niter_baseIPN8UnitTest18DeferredTestResultEENSt11_Niter_baseIT_E13iterator_typeES4_
 5052              	_ZSt12__niter_baseIPN8UnitTest18DeferredTestResultEENSt11_Niter_baseIT_E13iterator_typeES4_:
 5053              	.LFB1051:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 5054              		.loc 12 282 0
 5055              		.cfi_startproc
 5056 0000 55       		pushq	%rbp
 5057              		.cfi_def_cfa_offset 16
 5058              		.cfi_offset 6, -16
 5059 0001 4889E5   		movq	%rsp, %rbp
 5060              		.cfi_def_cfa_register 6
 5061 0004 4883EC10 		subq	$16, %rsp
 5062 0008 48897DF8 		movq	%rdi, -8(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 5063              		.loc 12 283 0
 5064 000c 488B45F8 		movq	-8(%rbp), %rax
 5065 0010 4889C7   		movq	%rax, %rdi
 5066 0013 E8000000 		call	_ZNSt10_Iter_baseIPN8UnitTest18DeferredTestResultELb0EE7_S_baseES2_@PLT
 5066      00
 5067 0018 C9       		leave
 5068              		.cfi_def_cfa 7, 8
 5069 0019 C3       		ret
 5070              		.cfi_endproc
 5071              	.LFE1051:
 5073              		.section	.text._ZSt22__copy_move_backward_aILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_,"
 5074              		.weak	_ZSt22__copy_move_backward_aILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_
 5076              	_ZSt22__copy_move_backward_aILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_:
 5077              	.LFB1052:
 593:/usr/include/c++/5/bits/stl_algobase.h ****     {
 5078              		.loc 12 593 0
 5079              		.cfi_startproc
 5080 0000 55       		pushq	%rbp
 5081              		.cfi_def_cfa_offset 16
 5082              		.cfi_offset 6, -16
 5083 0001 4889E5   		movq	%rsp, %rbp
 5084              		.cfi_def_cfa_register 6
 5085 0004 4883EC30 		subq	$48, %rsp
 5086 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5087 000c 488975E0 		movq	%rsi, -32(%rbp)
 5088 0010 488955D8 		movq	%rdx, -40(%rbp)
 601:/usr/include/c++/5/bits/stl_algobase.h **** 
 5089              		.loc 12 601 0
 5090 0014 C645FF00 		movb	$0, -1(%rbp)
 606:/usr/include/c++/5/bits/stl_algobase.h ****     }
 5091              		.loc 12 606 0
 5092 0018 488B55D8 		movq	-40(%rbp), %rdx
 5093 001c 488B4DE0 		movq	-32(%rbp), %rcx
 5094 0020 488B45E8 		movq	-24(%rbp), %rax
 5095 0024 4889CE   		movq	%rcx, %rsi
 5096 0027 4889C7   		movq	%rax, %rdi
 5097 002a E8000000 		call	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN8UnitTes
 5097      00
 607:/usr/include/c++/5/bits/stl_algobase.h **** 
 5098              		.loc 12 607 0
 5099 002f C9       		leave
 5100              		.cfi_def_cfa 7, 8
 5101 0030 C3       		ret
 5102              		.cfi_endproc
 5103              	.LFE1052:
 5105              		.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_str
 5106              		.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11
 5108              	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tr
 5109              	.LFB1053:
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 5110              		.loc 12 293 0
 5111              		.cfi_startproc
 5112 0000 55       		pushq	%rbp
 5113              		.cfi_def_cfa_offset 16
 5114              		.cfi_offset 6, -16
 5115 0001 4889E5   		movq	%rsp, %rbp
 5116              		.cfi_def_cfa_register 6
 5117 0004 4883EC10 		subq	$16, %rsp
 5118 0008 48897DF0 		movq	%rdi, -16(%rbp)
 294:/usr/include/c++/5/bits/stl_algobase.h **** 
 5119              		.loc 12 294 0
 5120 000c 488B45F0 		movq	-16(%rbp), %rax
 5121 0010 4889C7   		movq	%rax, %rdi
 5122 0013 E8000000 		call	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11ch
 5122      00
 5123 0018 C9       		leave
 5124              		.cfi_def_cfa 7, 8
 5125 0019 C3       		ret
 5126              		.cfi_endproc
 5127              	.LFE1053:
 5129              		.section	.text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112bas
 5130              		.weak	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_string
 5132              	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 5133              	.LFB1054:
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 5134              		.loc 12 436 0
 5135              		.cfi_startproc
 5136 0000 55       		pushq	%rbp
 5137              		.cfi_def_cfa_offset 16
 5138              		.cfi_offset 6, -16
 5139 0001 4889E5   		movq	%rsp, %rbp
 5140              		.cfi_def_cfa_register 6
 5141 0004 4154     		pushq	%r12
 5142 0006 53       		pushq	%rbx
 5143 0007 4883EC50 		subq	$80, %rsp
 5144              		.cfi_offset 12, -24
 5145              		.cfi_offset 3, -32
 5146 000b 48897DC0 		movq	%rdi, -64(%rbp)
 5147 000f 488975B0 		movq	%rsi, -80(%rbp)
 5148 0013 488955A0 		movq	%rdx, -96(%rbp)
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 5149              		.loc 12 436 0
 5150 0017 64488B04 		movq	%fs:40, %rax
 5150      25280000 
 5150      00
 5151 0020 488945E8 		movq	%rax, -24(%rbp)
 5152 0024 31C0     		xorl	%eax, %eax
 438:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 5153              		.loc 12 438 0
 5154 0026 488B45A0 		movq	-96(%rbp), %rax
 5155 002a 4889C7   		movq	%rax, %rdi
 5156 002d E8000000 		call	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11ch
 5156      00
 5157 0032 4989C4   		movq	%rax, %r12
 5158 0035 488B45B0 		movq	-80(%rbp), %rax
 5159 0039 4889C7   		movq	%rax, %rdi
 5160 003c E8000000 		call	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 5160      00
 5161 0041 4889C3   		movq	%rax, %rbx
 5162 0044 488B45C0 		movq	-64(%rbp), %rax
 5163 0048 4889C7   		movq	%rax, %rdi
 5164 004b E8000000 		call	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 5164      00
 5165 0050 4C89E2   		movq	%r12, %rdx
 5166 0053 4889DE   		movq	%rbx, %rsi
 5167 0056 4889C7   		movq	%rax, %rdi
 5168 0059 E8000000 		call	_ZSt13__copy_move_aILb0EPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPS7_E
 5168      00
 440:/usr/include/c++/5/bits/stl_algobase.h ****     }
 5169              		.loc 12 440 0
 5170 005e 488945E0 		movq	%rax, -32(%rbp)
 5171 0062 488D55E0 		leaq	-32(%rbp), %rdx
 5172 0066 488D45D0 		leaq	-48(%rbp), %rax
 5173 006a 4889D6   		movq	%rdx, %rsi
 5174 006d 4889C7   		movq	%rax, %rdi
 5175 0070 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 5175      00
 5176 0075 488B45D0 		movq	-48(%rbp), %rax
 441:/usr/include/c++/5/bits/stl_algobase.h **** 
 5177              		.loc 12 441 0
 5178 0079 488B4DE8 		movq	-24(%rbp), %rcx
 5179 007d 6448330C 		xorq	%fs:40, %rcx
 5179      25280000 
 5179      00
 5180 0086 7405     		je	.L273
 5181 0088 E8000000 		call	__stack_chk_fail@PLT
 5181      00
 5182              	.L273:
 5183 008d 4883C450 		addq	$80, %rsp
 5184 0091 5B       		popq	%rbx
 5185 0092 415C     		popq	%r12
 5186 0094 5D       		popq	%rbp
 5187              		.cfi_def_cfa 7, 8
 5188 0095 C3       		ret
 5189              		.cfi_endproc
 5190              	.LFE1054:
 5192              		.section	.text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcS
 5193              		.weak	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 5195              	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIc
 5196              	.LFB1055:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 5197              		.loc 6 122 0
 5198              		.cfi_startproc
 5199 0000 55       		pushq	%rbp
 5200              		.cfi_def_cfa_offset 16
 5201              		.cfi_offset 6, -16
 5202 0001 4889E5   		movq	%rsp, %rbp
 5203              		.cfi_def_cfa_register 6
 5204 0004 4883EC20 		subq	$32, %rsp
 5205 0008 48897DF0 		movq	%rdi, -16(%rbp)
 5206 000c 488975E0 		movq	%rsi, -32(%rbp)
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 5207              		.loc 6 126 0
 5208 0010 488B55E0 		movq	-32(%rbp), %rdx
 5209 0014 488B45F0 		movq	-16(%rbp), %rax
 5210 0018 4889D6   		movq	%rdx, %rsi
 5211 001b 4889C7   		movq	%rax, %rdi
 5212 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112bas
 5212      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 5213              		.loc 6 128 0
 5214 0023 90       		nop
 5215 0024 C9       		leave
 5216              		.cfi_def_cfa 7, 8
 5217 0025 C3       		ret
 5218              		.cfi_endproc
 5219              	.LFE1055:
 5221              		.section	.text._ZSt14__copy_move_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 5222              		.weak	_ZSt14__copy_move_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_E
 5224              	_ZSt14__copy_move_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_S
 5225              	.LFB1056:
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 5226              		.loc 12 436 0
 5227              		.cfi_startproc
 5228 0000 55       		pushq	%rbp
 5229              		.cfi_def_cfa_offset 16
 5230              		.cfi_offset 6, -16
 5231 0001 4889E5   		movq	%rsp, %rbp
 5232              		.cfi_def_cfa_register 6
 5233 0004 4154     		pushq	%r12
 5234 0006 53       		pushq	%rbx
 5235 0007 4883EC20 		subq	$32, %rsp
 5236              		.cfi_offset 12, -24
 5237              		.cfi_offset 3, -32
 5238 000b 48897DE8 		movq	%rdi, -24(%rbp)
 5239 000f 488975E0 		movq	%rsi, -32(%rbp)
 5240 0013 488955D8 		movq	%rdx, -40(%rbp)
 438:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 5241              		.loc 12 438 0
 5242 0017 488B45D8 		movq	-40(%rbp), %rax
 5243 001b 4889C7   		movq	%rax, %rdi
 5244 001e E8000000 		call	_ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Nite
 5244      00
 5245 0023 4989C4   		movq	%rax, %r12
 5246 0026 488B45E0 		movq	-32(%rbp), %rax
 5247 002a 4889C7   		movq	%rax, %rdi
 5248 002d E8000000 		call	_ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Nite
 5248      00
 5249 0032 4889C3   		movq	%rax, %rbx
 5250 0035 488B45E8 		movq	-24(%rbp), %rax
 5251 0039 4889C7   		movq	%rax, %rdi
 5252 003c E8000000 		call	_ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Nite
 5252      00
 440:/usr/include/c++/5/bits/stl_algobase.h ****     }
 5253              		.loc 12 440 0
 5254 0041 4C89E2   		movq	%r12, %rdx
 5255 0044 4889DE   		movq	%rbx, %rsi
 5256 0047 4889C7   		movq	%rax, %rdi
 5257 004a E8000000 		call	_ZSt13__copy_move_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1
 5257      00
 441:/usr/include/c++/5/bits/stl_algobase.h **** 
 5258              		.loc 12 441 0
 5259 004f 4883C420 		addq	$32, %rsp
 5260 0053 5B       		popq	%rbx
 5261 0054 415C     		popq	%r12
 5262 0056 5D       		popq	%rbp
 5263              		.cfi_def_cfa 7, 8
 5264 0057 C3       		ret
 5265              		.cfi_endproc
 5266              	.LFE1056:
 5268              		.section	.text._ZSt18uninitialized_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 5269              		.weak	_ZSt18uninitialized_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_E
 5271              	_ZSt18uninitialized_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA
 5272              	.LFB1057:
 107:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 5273              		.loc 13 107 0
 5274              		.cfi_startproc
 5275 0000 55       		pushq	%rbp
 5276              		.cfi_def_cfa_offset 16
 5277              		.cfi_offset 6, -16
 5278 0001 4889E5   		movq	%rsp, %rbp
 5279              		.cfi_def_cfa_register 6
 5280 0004 4883EC30 		subq	$48, %rsp
 5281 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5282 000c 488975E0 		movq	%rsi, -32(%rbp)
 5283 0010 488955D8 		movq	%rdx, -40(%rbp)
 115:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 5284              		.loc 13 115 0
 5285 0014 C645FF01 		movb	$1, -1(%rbp)
 126:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 5286              		.loc 13 126 0
 5287 0018 488B55D8 		movq	-40(%rbp), %rdx
 5288 001c 488B4DE0 		movq	-32(%rbp), %rcx
 5289 0020 488B45E8 		movq	-24(%rbp), %rax
 5290 0024 4889CE   		movq	%rcx, %rsi
 5291 0027 4889C7   		movq	%rax, %rdi
 5292 002a E8000000 		call	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11cha
 5292      00
 127:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 5293              		.loc 13 127 0
 5294 002f C9       		leave
 5295              		.cfi_def_cfa 7, 8
 5296 0030 C3       		ret
 5297              		.cfi_endproc
 5298              	.LFE1057:
 5300              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8max_sizeERKS3_,"
 5301              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8max_sizeERKS3_
 5303              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8max_sizeERKS3_:
 5304              	.LFB1058:
 194:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.max_size(); }
 5305              		.loc 7 194 0
 5306              		.cfi_startproc
 5307 0000 55       		pushq	%rbp
 5308              		.cfi_def_cfa_offset 16
 5309              		.cfi_offset 6, -16
 5310 0001 4889E5   		movq	%rsp, %rbp
 5311              		.cfi_def_cfa_register 6
 5312 0004 4883EC10 		subq	$16, %rsp
 5313 0008 48897DF8 		movq	%rdi, -8(%rbp)
 195:/usr/include/c++/5/ext/alloc_traits.h **** 
 5314              		.loc 7 195 0
 5315 000c 488B45F8 		movq	-8(%rbp), %rax
 5316 0010 4889C7   		movq	%rax, %rdi
 5317 0013 E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8max_sizeEv@PLT
 5317      00
 5318 0018 C9       		leave
 5319              		.cfi_def_cfa 7, 8
 5320 0019 C3       		ret
 5321              		.cfi_endproc
 5322              	.LFE1058:
 5324              		.section	.text._ZNKSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 5325              		.align 2
 5326              		.weak	_ZNKSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 5328              	_ZNKSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 5329              	.LFB1059:
 117:/usr/include/c++/5/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 5330              		.loc 5 117 0
 5331              		.cfi_startproc
 5332 0000 55       		pushq	%rbp
 5333              		.cfi_def_cfa_offset 16
 5334              		.cfi_offset 6, -16
 5335 0001 4889E5   		movq	%rsp, %rbp
 5336              		.cfi_def_cfa_register 6
 5337 0004 48897DF8 		movq	%rdi, -8(%rbp)
 118:/usr/include/c++/5/bits/stl_vector.h **** 
 5338              		.loc 5 118 0
 5339 0008 488B45F8 		movq	-8(%rbp), %rax
 5340 000c 5D       		popq	%rbp
 5341              		.cfi_def_cfa 7, 8
 5342 000d C3       		ret
 5343              		.cfi_endproc
 5344              	.LFE1059:
 5346              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8allocateEmPKv,"axG",@
 5347              		.align 2
 5348              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8allocateEmPKv
 5350              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8allocateEmPKv:
 5351              	.LFB1060:
  99:/usr/include/c++/5/ext/new_allocator.h ****       { 
 5352              		.loc 11 99 0
 5353              		.cfi_startproc
 5354 0000 55       		pushq	%rbp
 5355              		.cfi_def_cfa_offset 16
 5356              		.cfi_offset 6, -16
 5357 0001 4889E5   		movq	%rsp, %rbp
 5358              		.cfi_def_cfa_register 6
 5359 0004 4883EC20 		subq	$32, %rsp
 5360 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5361 000c 488975F0 		movq	%rsi, -16(%rbp)
 5362 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 5363              		.loc 11 101 0
 5364 0014 488B45F8 		movq	-8(%rbp), %rax
 5365 0018 4889C7   		movq	%rax, %rdi
 5366 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8max_sizeEv@PLT
 5366      00
 5367 0020 483B45F0 		cmpq	-16(%rbp), %rax
 5368 0024 0F92C0   		setb	%al
 5369 0027 84C0     		testb	%al, %al
 5370 0029 7405     		je	.L284
 102:/usr/include/c++/5/ext/new_allocator.h **** 
 5371              		.loc 11 102 0
 5372 002b E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 5372      00
 5373              	.L284:
 104:/usr/include/c++/5/ext/new_allocator.h ****       }
 5374              		.loc 11 104 0
 5375 0030 488B45F0 		movq	-16(%rbp), %rax
 5376 0034 48C1E007 		salq	$7, %rax
 5377 0038 4889C7   		movq	%rax, %rdi
 5378 003b E8000000 		call	_Znwm@PLT
 5378      00
 105:/usr/include/c++/5/ext/new_allocator.h **** 
 5379              		.loc 11 105 0
 5380 0040 C9       		leave
 5381              		.cfi_def_cfa 7, 8
 5382 0041 C3       		ret
 5383              		.cfi_endproc
 5384              	.LFE1060:
 5386              		.section	.text._ZSt18uninitialized_copyIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_,"axG",@pro
 5387              		.weak	_ZSt18uninitialized_copyIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_
 5389              	_ZSt18uninitialized_copyIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_:
 5390              	.LFB1061:
 107:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 5391              		.loc 13 107 0
 5392              		.cfi_startproc
 5393 0000 55       		pushq	%rbp
 5394              		.cfi_def_cfa_offset 16
 5395              		.cfi_offset 6, -16
 5396 0001 4889E5   		movq	%rsp, %rbp
 5397              		.cfi_def_cfa_register 6
 5398 0004 4883EC30 		subq	$48, %rsp
 5399 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5400 000c 488975E0 		movq	%rsi, -32(%rbp)
 5401 0010 488955D8 		movq	%rdx, -40(%rbp)
 115:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 5402              		.loc 13 115 0
 5403 0014 C645FF01 		movb	$1, -1(%rbp)
 126:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 5404              		.loc 13 126 0
 5405 0018 488B55D8 		movq	-40(%rbp), %rdx
 5406 001c 488B4DE0 		movq	-32(%rbp), %rcx
 5407 0020 488B45E8 		movq	-24(%rbp), %rax
 5408 0024 4889CE   		movq	%rcx, %rsi
 5409 0027 4889C7   		movq	%rax, %rdi
 5410 002a E8000000 		call	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN8UnitTest18DeferredTestResultES4_EET0_T_S6
 5410      00
 127:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 5411              		.loc 13 127 0
 5412 002f C9       		leave
 5413              		.cfi_def_cfa 7, 8
 5414 0030 C3       		ret
 5415              		.cfi_endproc
 5416              	.LFE1061:
 5418              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 5419              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 5421              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 5422              	.LFB1062:
 100:/usr/include/c++/5/bits/stl_construct.h **** 	{
 5423              		.loc 6 100 0
 5424              		.cfi_startproc
 5425 0000 55       		pushq	%rbp
 5426              		.cfi_def_cfa_offset 16
 5427              		.cfi_offset 6, -16
 5428 0001 4889E5   		movq	%rsp, %rbp
 5429              		.cfi_def_cfa_register 6
 5430 0004 4883EC10 		subq	$16, %rsp
 5431 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5432 000c 488975F0 		movq	%rsi, -16(%rbp)
 5433              	.L290:
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 5434              		.loc 6 102 0 discriminator 2
 5435 0010 488B45F8 		movq	-8(%rbp), %rax
 5436 0014 483B45F0 		cmpq	-16(%rbp), %rax
 5437 0018 741B     		je	.L291
 103:/usr/include/c++/5/bits/stl_construct.h **** 	}
 5438              		.loc 6 103 0 discriminator 1
 5439 001a 488B45F8 		movq	-8(%rbp), %rax
 5440 001e 4889C7   		movq	%rax, %rdi
 5441 0021 E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_@PLT
 5441      00
 5442 0026 4889C7   		movq	%rax, %rdi
 5443 0029 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_@PLT
 5443      00
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 5444              		.loc 6 102 0 discriminator 1
 5445 002e 48836DF8 		subq	$-128, -8(%rbp)
 5445      80
 5446 0033 EBDB     		jmp	.L290
 5447              	.L291:
 104:/usr/include/c++/5/bits/stl_construct.h ****     };
 5448              		.loc 6 104 0
 5449 0035 90       		nop
 5450 0036 C9       		leave
 5451              		.cfi_def_cfa 7, 8
 5452 0037 C3       		ret
 5453              		.cfi_endproc
 5454              	.LFE1062:
 5456              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 5457              		.align 2
 5458              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 5460              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 5461              	.LFB1063:
 109:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 5462              		.loc 11 109 0
 5463              		.cfi_startproc
 5464 0000 55       		pushq	%rbp
 5465              		.cfi_def_cfa_offset 16
 5466              		.cfi_offset 6, -16
 5467 0001 4889E5   		movq	%rsp, %rbp
 5468              		.cfi_def_cfa_register 6
 5469 0004 4883EC20 		subq	$32, %rsp
 5470 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5471 000c 488975F0 		movq	%rsi, -16(%rbp)
 5472 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/5/ext/new_allocator.h **** 
 5473              		.loc 11 110 0
 5474 0014 488B45F0 		movq	-16(%rbp), %rax
 5475 0018 4889C7   		movq	%rax, %rdi
 5476 001b E8000000 		call	_ZdlPv@PLT
 5476      00
 5477 0020 90       		nop
 5478 0021 C9       		leave
 5479              		.cfi_def_cfa 7, 8
 5480 0022 C3       		ret
 5481              		.cfi_endproc
 5482              	.LFE1063:
 5484              		.section	.text._ZNSt10_Iter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb
 5485              		.weak	_ZNSt10_Iter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb0EE7_S_ba
 5487              	_ZNSt10_Iter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb0EE7_S_baseES8_:
 5488              	.LFB1071:
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 5489              		.loc 15 215 0
 5490              		.cfi_startproc
 5491 0000 55       		pushq	%rbp
 5492              		.cfi_def_cfa_offset 16
 5493              		.cfi_offset 6, -16
 5494 0001 4889E5   		movq	%rsp, %rbp
 5495              		.cfi_def_cfa_register 6
 5496 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5497              		.loc 15 216 0
 5498 0008 488B45F8 		movq	-8(%rbp), %rax
 5499 000c 5D       		popq	%rbp
 5500              		.cfi_def_cfa 7, 8
 5501 000d C3       		ret
 5502              		.cfi_endproc
 5503              	.LFE1071:
 5505              		.section	.text._ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 5506              		.weak	_ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Nit
 5508              	_ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Niter_base
 5509              	.LFB1072:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 5510              		.loc 12 282 0
 5511              		.cfi_startproc
 5512 0000 55       		pushq	%rbp
 5513              		.cfi_def_cfa_offset 16
 5514              		.cfi_offset 6, -16
 5515 0001 4889E5   		movq	%rsp, %rbp
 5516              		.cfi_def_cfa_register 6
 5517 0004 4883EC10 		subq	$16, %rsp
 5518 0008 48897DF8 		movq	%rdi, -8(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 5519              		.loc 12 283 0
 5520 000c 488B45F8 		movq	-8(%rbp), %rax
 5521 0010 4889C7   		movq	%rax, %rdi
 5522 0013 E8000000 		call	_ZNSt10_Iter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb0EE7_S_bas
 5522      00
 5523 0018 C9       		leave
 5524              		.cfi_def_cfa 7, 8
 5525 0019 C3       		ret
 5526              		.cfi_endproc
 5527              	.LFE1072:
 5529              		.section	.text._ZSt22__copy_move_backward_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_trai
 5530              		.weak	_ZSt22__copy_move_backward_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 5532              	_ZSt22__copy_move_backward_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_
 5533              	.LFB1073:
 593:/usr/include/c++/5/bits/stl_algobase.h ****     {
 5534              		.loc 12 593 0
 5535              		.cfi_startproc
 5536 0000 55       		pushq	%rbp
 5537              		.cfi_def_cfa_offset 16
 5538              		.cfi_offset 6, -16
 5539 0001 4889E5   		movq	%rsp, %rbp
 5540              		.cfi_def_cfa_register 6
 5541 0004 4883EC30 		subq	$48, %rsp
 5542 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5543 000c 488975E0 		movq	%rsi, -32(%rbp)
 5544 0010 488955D8 		movq	%rdx, -40(%rbp)
 601:/usr/include/c++/5/bits/stl_algobase.h **** 
 5545              		.loc 12 601 0
 5546 0014 C645FF00 		movb	$0, -1(%rbp)
 606:/usr/include/c++/5/bits/stl_algobase.h ****     }
 5547              		.loc 12 606 0
 5548 0018 488B55D8 		movq	-40(%rbp), %rdx
 5549 001c 488B4DE0 		movq	-32(%rbp), %rcx
 5550 0020 488B45E8 		movq	-24(%rbp), %rax
 5551 0024 4889CE   		movq	%rcx, %rsi
 5552 0027 4889C7   		movq	%rax, %rdi
 5553 002a E8000000 		call	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairIi
 5553      00
 607:/usr/include/c++/5/bits/stl_algobase.h **** 
 5554              		.loc 12 607 0
 5555 002f C9       		leave
 5556              		.cfi_def_cfa 7, 8
 5557 0030 C3       		ret
 5558              		.cfi_endproc
 5559              	.LFE1073:
 5561              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 5562              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 5564              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8m
 5565              	.LFB1074:
 194:/usr/include/c++/5/ext/alloc_traits.h ****     { return __a.max_size(); }
 5566              		.loc 7 194 0
 5567              		.cfi_startproc
 5568 0000 55       		pushq	%rbp
 5569              		.cfi_def_cfa_offset 16
 5570              		.cfi_offset 6, -16
 5571 0001 4889E5   		movq	%rsp, %rbp
 5572              		.cfi_def_cfa_register 6
 5573 0004 4883EC10 		subq	$16, %rsp
 5574 0008 48897DF8 		movq	%rdi, -8(%rbp)
 195:/usr/include/c++/5/ext/alloc_traits.h **** 
 5575              		.loc 7 195 0
 5576 000c 488B45F8 		movq	-8(%rbp), %rax
 5577 0010 4889C7   		movq	%rax, %rdi
 5578 0013 E8000000 		call	_ZNK9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 5578      00
 5579 0018 C9       		leave
 5580              		.cfi_def_cfa 7, 8
 5581 0019 C3       		ret
 5582              		.cfi_endproc
 5583              	.LFE1074:
 5585              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 5586              		.align 2
 5587              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 5589              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8alloca
 5590              	.LFB1075:
  99:/usr/include/c++/5/ext/new_allocator.h ****       { 
 5591              		.loc 11 99 0
 5592              		.cfi_startproc
 5593 0000 55       		pushq	%rbp
 5594              		.cfi_def_cfa_offset 16
 5595              		.cfi_offset 6, -16
 5596 0001 4889E5   		movq	%rsp, %rbp
 5597              		.cfi_def_cfa_register 6
 5598 0004 4883EC20 		subq	$32, %rsp
 5599 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5600 000c 488975F0 		movq	%rsi, -16(%rbp)
 5601 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 5602              		.loc 11 101 0
 5603 0014 488B45F8 		movq	-8(%rbp), %rax
 5604 0018 4889C7   		movq	%rax, %rdi
 5605 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 5605      00
 5606 0020 483B45F0 		cmpq	-16(%rbp), %rax
 5607 0024 0F92C0   		setb	%al
 5608 0027 84C0     		testb	%al, %al
 5609 0029 7405     		je	.L302
 102:/usr/include/c++/5/ext/new_allocator.h **** 
 5610              		.loc 11 102 0
 5611 002b E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 5611      00
 5612              	.L302:
 104:/usr/include/c++/5/ext/new_allocator.h ****       }
 5613              		.loc 11 104 0
 5614 0030 488B55F0 		movq	-16(%rbp), %rdx
 5615 0034 4889D0   		movq	%rdx, %rax
 5616 0037 48C1E002 		salq	$2, %rax
 5617 003b 4801D0   		addq	%rdx, %rax
 5618 003e 48C1E003 		salq	$3, %rax
 5619 0042 4889C7   		movq	%rax, %rdi
 5620 0045 E8000000 		call	_Znwm@PLT
 5620      00
 105:/usr/include/c++/5/ext/new_allocator.h **** 
 5621              		.loc 11 105 0
 5622 004a C9       		leave
 5623              		.cfi_def_cfa 7, 8
 5624 004b C3       		ret
 5625              		.cfi_endproc
 5626              	.LFE1075:
 5628              		.section	.text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS7_,"axG"
 5629              		.align 2
 5630              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS7_
 5632              	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS7_:
 5633              	.LFB1077:
 115:/usr/include/c++/5/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5634              		.loc 10 115 0
 5635              		.cfi_startproc
 5636 0000 55       		pushq	%rbp
 5637              		.cfi_def_cfa_offset 16
 5638              		.cfi_offset 6, -16
 5639 0001 4889E5   		movq	%rsp, %rbp
 5640              		.cfi_def_cfa_register 6
 5641 0004 4883EC10 		subq	$16, %rsp
 5642 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5643 000c 488975F0 		movq	%rsi, -16(%rbp)
 5644              	.LBB41:
 116:/usr/include/c++/5/bits/allocator.h **** 
 5645              		.loc 10 116 0
 5646 0010 488B55F0 		movq	-16(%rbp), %rdx
 5647 0014 488B45F8 		movq	-8(%rbp), %rax
 5648 0018 4889D6   		movq	%rdx, %rsi
 5649 001b 4889C7   		movq	%rax, %rdi
 5650 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC
 5650      00
 5651              	.LBE41:
 5652 0023 90       		nop
 5653 0024 C9       		leave
 5654              		.cfi_def_cfa 7, 8
 5655 0025 C3       		ret
 5656              		.cfi_endproc
 5657              	.LFE1077:
 5659              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_
 5660              		.set	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_,_ZNSaISt4pairIi
 5661              		.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKS
 5662              		.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiN
 5664              	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cx
 5665              	.LFB1079:
  68:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 5666              		.loc 13 68 0
 5667              		.cfi_startproc
 5668              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5669              		.cfi_lsda 0x1b,.LLSDA1079
 5670 0000 55       		pushq	%rbp
 5671              		.cfi_def_cfa_offset 16
 5672              		.cfi_offset 6, -16
 5673 0001 4889E5   		movq	%rsp, %rbp
 5674              		.cfi_def_cfa_register 6
 5675 0004 53       		pushq	%rbx
 5676 0005 4883EC38 		subq	$56, %rsp
 5677              		.cfi_offset 3, -24
 5678 0009 48897DD0 		movq	%rdi, -48(%rbp)
 5679 000d 488975C0 		movq	%rsi, -64(%rbp)
 5680 0011 488955C8 		movq	%rdx, -56(%rbp)
  71:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 5681              		.loc 13 71 0
 5682 0015 488B45C8 		movq	-56(%rbp), %rax
 5683 0019 488945E8 		movq	%rax, -24(%rbp)
 5684              	.L307:
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 5685              		.loc 13 74 0 discriminator 2
 5686 001d 488D55C0 		leaq	-64(%rbp), %rdx
 5687 0021 488D45D0 		leaq	-48(%rbp), %rax
 5688 0025 4889D6   		movq	%rdx, %rsi
 5689 0028 4889C7   		movq	%rax, %rdi
 5690              	.LEHB56:
 5691 002b E8000000 		call	_ZN9__gnu_cxxneIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_
 5691      00
 5692 0030 84C0     		testb	%al, %al
 5693 0032 7439     		je	.L306
  75:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
 5694              		.loc 13 75 0
 5695 0034 488D45D0 		leaq	-48(%rbp), %rax
 5696 0038 4889C7   		movq	%rax, %rdi
 5697 003b E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 5697      00
 5698 0040 4889C3   		movq	%rax, %rbx
 5699 0043 488B45E8 		movq	-24(%rbp), %rax
 5700 0047 4889C7   		movq	%rax, %rdi
 5701 004a E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_@PLT
 5701      00
 5702 004f 4889DE   		movq	%rbx, %rsi
 5703 0052 4889C7   		movq	%rax, %rdi
 5704 0055 E8000000 		call	_ZSt10_ConstructISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvPT_RKT0_@
 5704      00
 5705              	.LEHE56:
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 5706              		.loc 13 74 0
 5707 005a 488D45D0 		leaq	-48(%rbp), %rax
 5708 005e 4889C7   		movq	%rax, %rdi
 5709 0061 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 5709      00
 5710 0066 488345E8 		addq	$40, -24(%rbp)
 5710      28
 5711 006b EBB0     		jmp	.L307
 5712              	.L306:
  76:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 5713              		.loc 13 76 0
 5714 006d 488B45E8 		movq	-24(%rbp), %rax
 5715 0071 EB33     		jmp	.L313
 5716              	.L311:
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 5717              		.loc 13 78 0
 5718 0073 4889C7   		movq	%rax, %rdi
 5719 0076 E8000000 		call	__cxa_begin_catch@PLT
 5719      00
  80:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 5720              		.loc 13 80 0
 5721 007b 488B55E8 		movq	-24(%rbp), %rdx
 5722 007f 488B45C8 		movq	-56(%rbp), %rax
 5723 0083 4889D6   		movq	%rdx, %rsi
 5724 0086 4889C7   		movq	%rax, %rdi
 5725              	.LEHB57:
 5726 0089 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_@PLT
 5726      00
  81:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 5727              		.loc 13 81 0
 5728 008e E8000000 		call	__cxa_rethrow@PLT
 5728      00
 5729              	.LEHE57:
 5730              	.L312:
 5731 0093 4889C3   		movq	%rax, %rbx
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 5732              		.loc 13 78 0
 5733 0096 E8000000 		call	__cxa_end_catch@PLT
 5733      00
 5734 009b 4889D8   		movq	%rbx, %rax
 5735 009e 4889C7   		movq	%rax, %rdi
 5736              	.LEHB58:
 5737 00a1 E8000000 		call	_Unwind_Resume@PLT
 5737      00
 5738              	.LEHE58:
 5739              	.L313:
  83:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 5740              		.loc 13 83 0
 5741 00a6 4883C438 		addq	$56, %rsp
 5742 00aa 5B       		popq	%rbx
 5743 00ab 5D       		popq	%rbp
 5744              		.cfi_def_cfa 7, 8
 5745 00ac C3       		ret
 5746              		.cfi_endproc
 5747              	.LFE1079:
 5748              		.section	.gcc_except_table
 5749              		.align 4
 5750              	.LLSDA1079:
 5751 0144 FF       		.byte	0xff
 5752 0145 9B       		.byte	0x9b
 5753 0146 19       		.uleb128 .LLSDATT1079-.LLSDATTD1079
 5754              	.LLSDATTD1079:
 5755 0147 01       		.byte	0x1
 5756 0148 0F       		.uleb128 .LLSDACSE1079-.LLSDACSB1079
 5757              	.LLSDACSB1079:
 5758 0149 2B       		.uleb128 .LEHB56-.LFB1079
 5759 014a 2F       		.uleb128 .LEHE56-.LEHB56
 5760 014b 73       		.uleb128 .L311-.LFB1079
 5761 014c 01       		.uleb128 0x1
 5762 014d 8901     		.uleb128 .LEHB57-.LFB1079
 5763 014f 0A       		.uleb128 .LEHE57-.LEHB57
 5764 0150 9301     		.uleb128 .L312-.LFB1079
 5765 0152 00       		.uleb128 0
 5766 0153 A101     		.uleb128 .LEHB58-.LFB1079
 5767 0155 05       		.uleb128 .LEHE58-.LEHB58
 5768 0156 00       		.uleb128 0
 5769 0157 00       		.uleb128 0
 5770              	.LLSDACSE1079:
 5771 0158 01       		.byte	0x1
 5772 0159 00       		.byte	0
 5773 015a 0000     		.align 4
 5774 015c 00000000 		.long	0
 5775              	
 5776              	.LLSDATT1079:
 5777              		.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKS
 5779              		.section	.text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bI
 5780              		.weak	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN8UnitTe
 5782              	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN8UnitTest18Def
 5783              	.LFB1080:
 545:/usr/include/c++/5/bits/stl_algobase.h ****         {
 5784              		.loc 12 545 0
 5785              		.cfi_startproc
 5786 0000 55       		pushq	%rbp
 5787              		.cfi_def_cfa_offset 16
 5788              		.cfi_offset 6, -16
 5789 0001 4889E5   		movq	%rsp, %rbp
 5790              		.cfi_def_cfa_register 6
 5791 0004 4883EC30 		subq	$48, %rsp
 5792 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5793 000c 488975E0 		movq	%rsi, -32(%rbp)
 5794 0010 488955D8 		movq	%rdx, -40(%rbp)
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 5795              		.loc 12 548 0
 5796 0014 488B55E0 		movq	-32(%rbp), %rdx
 5797 0018 488B45E8 		movq	-24(%rbp), %rax
 5798 001c 4829C2   		subq	%rax, %rdx
 5799 001f 4889D0   		movq	%rdx, %rax
 5800 0022 48C1F807 		sarq	$7, %rax
 5801 0026 488945F8 		movq	%rax, -8(%rbp)
 5802              	.L316:
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 5803              		.loc 12 548 0 is_stmt 0 discriminator 3
 5804 002a 48837DF8 		cmpq	$0, -8(%rbp)
 5804      00
 5805 002f 7E24     		jle	.L315
 549:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 5806              		.loc 12 549 0 is_stmt 1 discriminator 2
 5807 0031 488345E0 		addq	$-128, -32(%rbp)
 5807      80
 5808 0036 488345D8 		addq	$-128, -40(%rbp)
 5808      80
 5809 003b 488B55E0 		movq	-32(%rbp), %rdx
 5810 003f 488B45D8 		movq	-40(%rbp), %rax
 5811 0043 4889D6   		movq	%rdx, %rsi
 5812 0046 4889C7   		movq	%rax, %rdi
 5813 0049 E8000000 		call	_ZN8UnitTest18DeferredTestResultaSERKS0_@PLT
 5813      00
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 5814              		.loc 12 548 0 discriminator 2
 5815 004e 48836DF8 		subq	$1, -8(%rbp)
 5815      01
 5816 0053 EBD5     		jmp	.L316
 5817              	.L315:
 550:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 5818              		.loc 12 550 0
 5819 0055 488B45D8 		movq	-40(%rbp), %rax
 551:/usr/include/c++/5/bits/stl_algobase.h ****     };
 5820              		.loc 12 551 0
 5821 0059 C9       		leave
 5822              		.cfi_def_cfa 7, 8
 5823 005a C3       		ret
 5824              		.cfi_endproc
 5825              	.LFE1080:
 5827              		.section	.text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stri
 5828              		.weak	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 5830              	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tra
 5831              	.LFB1081:
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 5832              		.loc 15 215 0
 5833              		.cfi_startproc
 5834 0000 55       		pushq	%rbp
 5835              		.cfi_def_cfa_offset 16
 5836              		.cfi_offset 6, -16
 5837 0001 4889E5   		movq	%rsp, %rbp
 5838              		.cfi_def_cfa_register 6
 5839 0004 48897DF0 		movq	%rdi, -16(%rbp)
 5840              		.loc 15 216 0
 5841 0008 488B45F0 		movq	-16(%rbp), %rax
 5842 000c 5D       		popq	%rbp
 5843              		.cfi_def_cfa 7, 8
 5844 000d C3       		ret
 5845              		.cfi_endproc
 5846              	.LFE1081:
 5848              		.section	.text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_str
 5849              		.weak	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11
 5851              	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tr
 5852              	.LFB1082:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 5853              		.loc 12 282 0
 5854              		.cfi_startproc
 5855 0000 55       		pushq	%rbp
 5856              		.cfi_def_cfa_offset 16
 5857              		.cfi_offset 6, -16
 5858 0001 4889E5   		movq	%rsp, %rbp
 5859              		.cfi_def_cfa_register 6
 5860 0004 4883EC10 		subq	$16, %rsp
 5861 0008 48897DF0 		movq	%rdi, -16(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 5862              		.loc 12 283 0
 5863 000c 488B45F0 		movq	-16(%rbp), %rax
 5864 0010 4889C7   		movq	%rax, %rdi
 5865 0013 E8000000 		call	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11ch
 5865      00
 5866 0018 C9       		leave
 5867              		.cfi_def_cfa 7, 8
 5868 0019 C3       		ret
 5869              		.cfi_endproc
 5870              	.LFE1082:
 5872              		.section	.text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stri
 5873              		.weak	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 5875              	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tra
 5876              	.LFB1083:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 5877              		.loc 12 282 0
 5878              		.cfi_startproc
 5879 0000 55       		pushq	%rbp
 5880              		.cfi_def_cfa_offset 16
 5881              		.cfi_offset 6, -16
 5882 0001 4889E5   		movq	%rsp, %rbp
 5883              		.cfi_def_cfa_register 6
 5884 0004 4883EC10 		subq	$16, %rsp
 5885 0008 48897DF0 		movq	%rdi, -16(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 5886              		.loc 12 283 0
 5887 000c 488B45F0 		movq	-16(%rbp), %rax
 5888 0010 4889C7   		movq	%rax, %rdi
 5889 0013 E8000000 		call	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11cha
 5889      00
 5890 0018 C9       		leave
 5891              		.cfi_def_cfa 7, 8
 5892 0019 C3       		ret
 5893              		.cfi_endproc
 5894              	.LFE1083:
 5896              		.section	.text._ZSt13__copy_move_aILb0EPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 5897              		.weak	_ZSt13__copy_move_aILb0EPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPS7_
 5899              	_ZSt13__copy_move_aILb0EPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPS7_ET1_T0_
 5900              	.LFB1084:
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 5901              		.loc 12 391 0
 5902              		.cfi_startproc
 5903 0000 55       		pushq	%rbp
 5904              		.cfi_def_cfa_offset 16
 5905              		.cfi_offset 6, -16
 5906 0001 4889E5   		movq	%rsp, %rbp
 5907              		.cfi_def_cfa_register 6
 5908 0004 4883EC30 		subq	$48, %rsp
 5909 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5910 000c 488975E0 		movq	%rsi, -32(%rbp)
 5911 0010 488955D8 		movq	%rdx, -40(%rbp)
 399:/usr/include/c++/5/bits/stl_algobase.h **** 
 5912              		.loc 12 399 0
 5913 0014 C645FF00 		movb	$0, -1(%rbp)
 402:/usr/include/c++/5/bits/stl_algobase.h ****     }
 5914              		.loc 12 402 0
 5915 0018 488B55D8 		movq	-40(%rbp), %rdx
 5916 001c 488B4DE0 		movq	-32(%rbp), %rcx
 5917 0020 488B45E8 		movq	-24(%rbp), %rax
 5918 0024 4889CE   		movq	%rcx, %rsi
 5919 0027 4889C7   		movq	%rax, %rdi
 5920 002a E8000000 		call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIiNSt7__cxx1112b
 5920      00
 403:/usr/include/c++/5/bits/stl_algobase.h **** 
 5921              		.loc 12 403 0
 5922 002f C9       		leave
 5923              		.cfi_def_cfa 7, 8
 5924 0030 C3       		ret
 5925              		.cfi_endproc
 5926              	.LFE1084:
 5928              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__
 5929              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112ba
 5931              	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_str
 5932              	.LFB1085:
 100:/usr/include/c++/5/bits/stl_construct.h **** 	{
 5933              		.loc 6 100 0
 5934              		.cfi_startproc
 5935 0000 55       		pushq	%rbp
 5936              		.cfi_def_cfa_offset 16
 5937              		.cfi_offset 6, -16
 5938 0001 4889E5   		movq	%rsp, %rbp
 5939              		.cfi_def_cfa_register 6
 5940 0004 4883EC20 		subq	$32, %rsp
 5941 0008 48897DF0 		movq	%rdi, -16(%rbp)
 5942 000c 488975E0 		movq	%rsi, -32(%rbp)
 5943              	.L328:
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 5944              		.loc 6 102 0 discriminator 2
 5945 0010 488D55E0 		leaq	-32(%rbp), %rdx
 5946 0014 488D45F0 		leaq	-16(%rbp), %rax
 5947 0018 4889D6   		movq	%rdx, %rsi
 5948 001b 4889C7   		movq	%rax, %rdi
 5949 001e E8000000 		call	_ZN9__gnu_cxxneIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_S
 5949      00
 5950 0023 84C0     		testb	%al, %al
 5951 0025 742A     		je	.L329
 103:/usr/include/c++/5/bits/stl_construct.h **** 	}
 5952              		.loc 6 103 0 discriminator 1
 5953 0027 488D45F0 		leaq	-16(%rbp), %rax
 5954 002b 4889C7   		movq	%rax, %rdi
 5955 002e E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 5955      00
 5956 0033 4889C7   		movq	%rax, %rdi
 5957 0036 E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_@PLT
 5957      00
 5958 003b 4889C7   		movq	%rax, %rdi
 5959 003e E8000000 		call	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_@PLT
 5959      00
 102:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 5960              		.loc 6 102 0 discriminator 1
 5961 0043 488D45F0 		leaq	-16(%rbp), %rax
 5962 0047 4889C7   		movq	%rax, %rdi
 5963 004a E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 5963      00
 5964 004f EBBF     		jmp	.L328
 5965              	.L329:
 104:/usr/include/c++/5/bits/stl_construct.h ****     };
 5966              		.loc 6 104 0
 5967 0051 90       		nop
 5968 0052 C9       		leave
 5969              		.cfi_def_cfa 7, 8
 5970 0053 C3       		ret
 5971              		.cfi_endproc
 5972              	.LFE1085:
 5974              		.section	.text._ZSt13__copy_move_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 5975              		.weak	_ZSt13__copy_move_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET
 5977              	_ZSt13__copy_move_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA
 5978              	.LFB1086:
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 5979              		.loc 12 391 0
 5980              		.cfi_startproc
 5981 0000 55       		pushq	%rbp
 5982              		.cfi_def_cfa_offset 16
 5983              		.cfi_offset 6, -16
 5984 0001 4889E5   		movq	%rsp, %rbp
 5985              		.cfi_def_cfa_register 6
 5986 0004 4883EC30 		subq	$48, %rsp
 5987 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5988 000c 488975E0 		movq	%rsi, -32(%rbp)
 5989 0010 488955D8 		movq	%rdx, -40(%rbp)
 399:/usr/include/c++/5/bits/stl_algobase.h **** 
 5990              		.loc 12 399 0
 5991 0014 C645FF00 		movb	$0, -1(%rbp)
 402:/usr/include/c++/5/bits/stl_algobase.h ****     }
 5992              		.loc 12 402 0
 5993 0018 488B55D8 		movq	-40(%rbp), %rdx
 5994 001c 488B4DE0 		movq	-32(%rbp), %rcx
 5995 0020 488B45E8 		movq	-24(%rbp), %rax
 5996 0024 4889CE   		movq	%rcx, %rsi
 5997 0027 4889C7   		movq	%rax, %rdi
 5998 002a E8000000 		call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiNSt7__cxx1112ba
 5998      00
 403:/usr/include/c++/5/bits/stl_algobase.h **** 
 5999              		.loc 12 403 0
 6000 002f C9       		leave
 6001              		.cfi_def_cfa 7, 8
 6002 0030 C3       		ret
 6003              		.cfi_endproc
 6004              	.LFE1086:
 6006              		.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt4pairIiNSt7__cxx1112basic_strin
 6007              		.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11ch
 6009              	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_trai
 6010              	.LFB1087:
  68:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 6011              		.loc 13 68 0
 6012              		.cfi_startproc
 6013              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6014              		.cfi_lsda 0x1b,.LLSDA1087
 6015 0000 55       		pushq	%rbp
 6016              		.cfi_def_cfa_offset 16
 6017              		.cfi_offset 6, -16
 6018 0001 4889E5   		movq	%rsp, %rbp
 6019              		.cfi_def_cfa_register 6
 6020 0004 53       		pushq	%rbx
 6021 0005 4883EC38 		subq	$56, %rsp
 6022              		.cfi_offset 3, -24
 6023 0009 48897DD8 		movq	%rdi, -40(%rbp)
 6024 000d 488975D0 		movq	%rsi, -48(%rbp)
 6025 0011 488955C8 		movq	%rdx, -56(%rbp)
  71:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 6026              		.loc 13 71 0
 6027 0015 488B45C8 		movq	-56(%rbp), %rax
 6028 0019 488945E8 		movq	%rax, -24(%rbp)
 6029              	.L334:
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 6030              		.loc 13 74 0 discriminator 1
 6031 001d 488B45D8 		movq	-40(%rbp), %rax
 6032 0021 483B45D0 		cmpq	-48(%rbp), %rax
 6033 0025 742A     		je	.L333
  75:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
 6034              		.loc 13 75 0
 6035 0027 488B45E8 		movq	-24(%rbp), %rax
 6036 002b 4889C7   		movq	%rax, %rdi
 6037 002e E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_@PLT
 6037      00
 6038 0033 4889C2   		movq	%rax, %rdx
 6039 0036 488B45D8 		movq	-40(%rbp), %rax
 6040 003a 4889C6   		movq	%rax, %rsi
 6041 003d 4889D7   		movq	%rdx, %rdi
 6042              	.LEHB59:
 6043 0040 E8000000 		call	_ZSt10_ConstructISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvPT_RKT0_@
 6043      00
 6044              	.LEHE59:
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 6045              		.loc 13 74 0
 6046 0045 488345D8 		addq	$40, -40(%rbp)
 6046      28
 6047 004a 488345E8 		addq	$40, -24(%rbp)
 6047      28
 6048 004f EBCC     		jmp	.L334
 6049              	.L333:
  76:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 6050              		.loc 13 76 0
 6051 0051 488B45E8 		movq	-24(%rbp), %rax
 6052 0055 EB33     		jmp	.L340
 6053              	.L338:
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 6054              		.loc 13 78 0
 6055 0057 4889C7   		movq	%rax, %rdi
 6056 005a E8000000 		call	__cxa_begin_catch@PLT
 6056      00
  80:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 6057              		.loc 13 80 0
 6058 005f 488B55E8 		movq	-24(%rbp), %rdx
 6059 0063 488B45C8 		movq	-56(%rbp), %rax
 6060 0067 4889D6   		movq	%rdx, %rsi
 6061 006a 4889C7   		movq	%rax, %rdi
 6062              	.LEHB60:
 6063 006d E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_@PLT
 6063      00
  81:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 6064              		.loc 13 81 0
 6065 0072 E8000000 		call	__cxa_rethrow@PLT
 6065      00
 6066              	.LEHE60:
 6067              	.L339:
 6068 0077 4889C3   		movq	%rax, %rbx
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 6069              		.loc 13 78 0
 6070 007a E8000000 		call	__cxa_end_catch@PLT
 6070      00
 6071 007f 4889D8   		movq	%rbx, %rax
 6072 0082 4889C7   		movq	%rax, %rdi
 6073              	.LEHB61:
 6074 0085 E8000000 		call	_Unwind_Resume@PLT
 6074      00
 6075              	.LEHE61:
 6076              	.L340:
  83:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 6077              		.loc 13 83 0
 6078 008a 4883C438 		addq	$56, %rsp
 6079 008e 5B       		popq	%rbx
 6080 008f 5D       		popq	%rbp
 6081              		.cfi_def_cfa 7, 8
 6082 0090 C3       		ret
 6083              		.cfi_endproc
 6084              	.LFE1087:
 6085              		.section	.gcc_except_table
 6086              		.align 4
 6087              	.LLSDA1087:
 6088 0160 FF       		.byte	0xff
 6089 0161 9B       		.byte	0x9b
 6090 0162 15       		.uleb128 .LLSDATT1087-.LLSDATTD1087
 6091              	.LLSDATTD1087:
 6092 0163 01       		.byte	0x1
 6093 0164 0D       		.uleb128 .LLSDACSE1087-.LLSDACSB1087
 6094              	.LLSDACSB1087:
 6095 0165 40       		.uleb128 .LEHB59-.LFB1087
 6096 0166 05       		.uleb128 .LEHE59-.LEHB59
 6097 0167 57       		.uleb128 .L338-.LFB1087
 6098 0168 01       		.uleb128 0x1
 6099 0169 6D       		.uleb128 .LEHB60-.LFB1087
 6100 016a 0A       		.uleb128 .LEHE60-.LEHB60
 6101 016b 77       		.uleb128 .L339-.LFB1087
 6102 016c 00       		.uleb128 0
 6103 016d 8501     		.uleb128 .LEHB61-.LFB1087
 6104 016f 05       		.uleb128 .LEHE61-.LEHB61
 6105 0170 00       		.uleb128 0
 6106 0171 00       		.uleb128 0
 6107              	.LLSDACSE1087:
 6108 0172 01       		.byte	0x1
 6109 0173 00       		.byte	0
 6110              		.align 4
 6111 0174 00000000 		.long	0
 6112              	
 6113              	.LLSDATT1087:
 6114              		.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt4pairIiNSt7__cxx1112basic_strin
 6116              		.section	.text._ZNK9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8max_sizeEv,"axG",@pr
 6117              		.align 2
 6118              		.weak	_ZNK9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8max_sizeEv
 6120              	_ZNK9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8max_sizeEv:
 6121              	.LFB1088:
 113:/usr/include/c++/5/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 6122              		.loc 11 113 0
 6123              		.cfi_startproc
 6124 0000 55       		pushq	%rbp
 6125              		.cfi_def_cfa_offset 16
 6126              		.cfi_offset 6, -16
 6127 0001 4889E5   		movq	%rsp, %rbp
 6128              		.cfi_def_cfa_register 6
 6129 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/ext/new_allocator.h **** 
 6130              		.loc 11 114 0
 6131 0008 48B8FFFF 		movabsq	$144115188075855871, %rax
 6131      FFFFFFFF 
 6131      FF01
 6132 0012 5D       		popq	%rbp
 6133              		.cfi_def_cfa 7, 8
 6134 0013 C3       		ret
 6135              		.cfi_endproc
 6136              	.LFE1088:
 6138              		.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN8UnitTest18DeferredTestResultES4
 6139              		.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN8UnitTest18DeferredTestResultES4_EET0_T_S
 6141              	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN8UnitTest18DeferredTestResultES4_EET0_T_S6_S5_:
 6142              	.LFB1089:
  68:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 6143              		.loc 13 68 0
 6144              		.cfi_startproc
 6145              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6146              		.cfi_lsda 0x1b,.LLSDA1089
 6147 0000 55       		pushq	%rbp
 6148              		.cfi_def_cfa_offset 16
 6149              		.cfi_offset 6, -16
 6150 0001 4889E5   		movq	%rsp, %rbp
 6151              		.cfi_def_cfa_register 6
 6152 0004 53       		pushq	%rbx
 6153 0005 4883EC38 		subq	$56, %rsp
 6154              		.cfi_offset 3, -24
 6155 0009 48897DD8 		movq	%rdi, -40(%rbp)
 6156 000d 488975D0 		movq	%rsi, -48(%rbp)
 6157 0011 488955C8 		movq	%rdx, -56(%rbp)
  71:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 6158              		.loc 13 71 0
 6159 0015 488B45C8 		movq	-56(%rbp), %rax
 6160 0019 488945E8 		movq	%rax, -24(%rbp)
 6161              	.L345:
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 6162              		.loc 13 74 0 discriminator 1
 6163 001d 488B45D8 		movq	-40(%rbp), %rax
 6164 0021 483B45D0 		cmpq	-48(%rbp), %rax
 6165 0025 742A     		je	.L344
  75:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
 6166              		.loc 13 75 0
 6167 0027 488B45E8 		movq	-24(%rbp), %rax
 6168 002b 4889C7   		movq	%rax, %rdi
 6169 002e E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_@PLT
 6169      00
 6170 0033 4889C2   		movq	%rax, %rdx
 6171 0036 488B45D8 		movq	-40(%rbp), %rax
 6172 003a 4889C6   		movq	%rax, %rsi
 6173 003d 4889D7   		movq	%rdx, %rdi
 6174              	.LEHB62:
 6175 0040 E8000000 		call	_ZSt10_ConstructIN8UnitTest18DeferredTestResultES1_EvPT_RKT0_@PLT
 6175      00
 6176              	.LEHE62:
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 6177              		.loc 13 74 0
 6178 0045 48836DD8 		subq	$-128, -40(%rbp)
 6178      80
 6179 004a 48836DE8 		subq	$-128, -24(%rbp)
 6179      80
 6180 004f EBCC     		jmp	.L345
 6181              	.L344:
  76:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 6182              		.loc 13 76 0
 6183 0051 488B45E8 		movq	-24(%rbp), %rax
 6184 0055 EB33     		jmp	.L351
 6185              	.L349:
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 6186              		.loc 13 78 0
 6187 0057 4889C7   		movq	%rax, %rdi
 6188 005a E8000000 		call	__cxa_begin_catch@PLT
 6188      00
  80:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 6189              		.loc 13 80 0
 6190 005f 488B55E8 		movq	-24(%rbp), %rdx
 6191 0063 488B45C8 		movq	-56(%rbp), %rax
 6192 0067 4889D6   		movq	%rdx, %rsi
 6193 006a 4889C7   		movq	%rax, %rdi
 6194              	.LEHB63:
 6195 006d E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_@PLT
 6195      00
  81:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 6196              		.loc 13 81 0
 6197 0072 E8000000 		call	__cxa_rethrow@PLT
 6197      00
 6198              	.LEHE63:
 6199              	.L350:
 6200 0077 4889C3   		movq	%rax, %rbx
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 6201              		.loc 13 78 0
 6202 007a E8000000 		call	__cxa_end_catch@PLT
 6202      00
 6203 007f 4889D8   		movq	%rbx, %rax
 6204 0082 4889C7   		movq	%rax, %rdi
 6205              	.LEHB64:
 6206 0085 E8000000 		call	_Unwind_Resume@PLT
 6206      00
 6207              	.LEHE64:
 6208              	.L351:
  83:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 6209              		.loc 13 83 0
 6210 008a 4883C438 		addq	$56, %rsp
 6211 008e 5B       		popq	%rbx
 6212 008f 5D       		popq	%rbp
 6213              		.cfi_def_cfa 7, 8
 6214 0090 C3       		ret
 6215              		.cfi_endproc
 6216              	.LFE1089:
 6217              		.section	.gcc_except_table
 6218              		.align 4
 6219              	.LLSDA1089:
 6220 0178 FF       		.byte	0xff
 6221 0179 9B       		.byte	0x9b
 6222 017a 15       		.uleb128 .LLSDATT1089-.LLSDATTD1089
 6223              	.LLSDATTD1089:
 6224 017b 01       		.byte	0x1
 6225 017c 0D       		.uleb128 .LLSDACSE1089-.LLSDACSB1089
 6226              	.LLSDACSB1089:
 6227 017d 40       		.uleb128 .LEHB62-.LFB1089
 6228 017e 05       		.uleb128 .LEHE62-.LEHB62
 6229 017f 57       		.uleb128 .L349-.LFB1089
 6230 0180 01       		.uleb128 0x1
 6231 0181 6D       		.uleb128 .LEHB63-.LFB1089
 6232 0182 0A       		.uleb128 .LEHE63-.LEHB63
 6233 0183 77       		.uleb128 .L350-.LFB1089
 6234 0184 00       		.uleb128 0
 6235 0185 8501     		.uleb128 .LEHB64-.LFB1089
 6236 0187 05       		.uleb128 .LEHE64-.LEHB64
 6237 0188 00       		.uleb128 0
 6238 0189 00       		.uleb128 0
 6239              	.LLSDACSE1089:
 6240 018a 01       		.byte	0x1
 6241 018b 00       		.byte	0
 6242              		.align 4
 6243 018c 00000000 		.long	0
 6244              	
 6245              	.LLSDATT1089:
 6246              		.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN8UnitTest18DeferredTestResultES4
 6248              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 6249              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 6251              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 6252              	.LFB1090:
  47:/usr/include/c++/5/bits/move.h ****     {
 6253              		.loc 14 47 0
 6254              		.cfi_startproc
 6255 0000 55       		pushq	%rbp
 6256              		.cfi_def_cfa_offset 16
 6257              		.cfi_offset 6, -16
 6258 0001 4889E5   		movq	%rsp, %rbp
 6259              		.cfi_def_cfa_register 6
 6260 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/5/bits/move.h ****     }
 6261              		.loc 14 50 0
 6262 0008 488B45F8 		movq	-8(%rbp), %rax
 6263              		.loc 14 51 0
 6264 000c 5D       		popq	%rbp
 6265              		.cfi_def_cfa 7, 8
 6266 000d C3       		ret
 6267              		.cfi_endproc
 6268              	.LFE1090:
 6270              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 6271              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 6273              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 6274              	.LFB1091:
  92:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 6275              		.loc 6 92 0
 6276              		.cfi_startproc
 6277 0000 55       		pushq	%rbp
 6278              		.cfi_def_cfa_offset 16
 6279              		.cfi_offset 6, -16
 6280 0001 4889E5   		movq	%rsp, %rbp
 6281              		.cfi_def_cfa_register 6
 6282 0004 4883EC10 		subq	$16, %rsp
 6283 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/5/bits/stl_construct.h **** 
 6284              		.loc 6 93 0
 6285 000c 488B45F8 		movq	-8(%rbp), %rax
 6286 0010 4889C7   		movq	%rax, %rdi
 6287 0013 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev@PLT
 6287      00
 6288 0018 90       		nop
 6289 0019 C9       		leave
 6290              		.cfi_def_cfa 7, 8
 6291 001a C3       		ret
 6292              		.cfi_endproc
 6293              	.LFE1091:
 6295              		.section	.text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bI
 6296              		.weak	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairI
 6298              	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairIiNSt7__
 6299              	.LFB1099:
 545:/usr/include/c++/5/bits/stl_algobase.h ****         {
 6300              		.loc 12 545 0
 6301              		.cfi_startproc
 6302 0000 55       		pushq	%rbp
 6303              		.cfi_def_cfa_offset 16
 6304              		.cfi_offset 6, -16
 6305 0001 4889E5   		movq	%rsp, %rbp
 6306              		.cfi_def_cfa_register 6
 6307 0004 4883EC30 		subq	$48, %rsp
 6308 0008 48897DE8 		movq	%rdi, -24(%rbp)
 6309 000c 488975E0 		movq	%rsi, -32(%rbp)
 6310 0010 488955D8 		movq	%rdx, -40(%rbp)
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 6311              		.loc 12 548 0
 6312 0014 488B55E0 		movq	-32(%rbp), %rdx
 6313 0018 488B45E8 		movq	-24(%rbp), %rax
 6314 001c 4829C2   		subq	%rax, %rdx
 6315 001f 4889D0   		movq	%rdx, %rax
 6316 0022 48C1F803 		sarq	$3, %rax
 6317 0026 4889C2   		movq	%rax, %rdx
 6318 0029 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 6318      CCCCCCCC 
 6318      CCCC
 6319 0033 480FAFC2 		imulq	%rdx, %rax
 6320 0037 488945F8 		movq	%rax, -8(%rbp)
 6321              	.L357:
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 6322              		.loc 12 548 0 is_stmt 0 discriminator 3
 6323 003b 48837DF8 		cmpq	$0, -8(%rbp)
 6323      00
 6324 0040 7E24     		jle	.L356
 549:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 6325              		.loc 12 549 0 is_stmt 1 discriminator 2
 6326 0042 48836DE0 		subq	$40, -32(%rbp)
 6326      28
 6327 0047 48836DD8 		subq	$40, -40(%rbp)
 6327      28
 6328 004c 488B55E0 		movq	-32(%rbp), %rdx
 6329 0050 488B45D8 		movq	-40(%rbp), %rax
 6330 0054 4889D6   		movq	%rdx, %rsi
 6331 0057 4889C7   		movq	%rax, %rdi
 6332 005a E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_@PLT
 6332      00
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 6333              		.loc 12 548 0 discriminator 2
 6334 005f 48836DF8 		subq	$1, -8(%rbp)
 6334      01
 6335 0064 EBD5     		jmp	.L357
 6336              	.L356:
 550:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 6337              		.loc 12 550 0
 6338 0066 488B45D8 		movq	-40(%rbp), %rax
 551:/usr/include/c++/5/bits/stl_algobase.h ****     };
 6339              		.loc 12 551 0
 6340 006a C9       		leave
 6341              		.cfi_def_cfa 7, 8
 6342 006b C3       		ret
 6343              		.cfi_endproc
 6344              	.LFE1099:
 6346              		.section	.text._ZNK9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIc
 6347              		.align 2
 6348              		.weak	_ZNK9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 6350              	_ZNK9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_s
 6351              	.LFB1100:
 113:/usr/include/c++/5/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 6352              		.loc 11 113 0
 6353              		.cfi_startproc
 6354 0000 55       		pushq	%rbp
 6355              		.cfi_def_cfa_offset 16
 6356              		.cfi_offset 6, -16
 6357 0001 4889E5   		movq	%rsp, %rbp
 6358              		.cfi_def_cfa_register 6
 6359 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/ext/new_allocator.h **** 
 6360              		.loc 11 114 0
 6361 0008 48B86666 		movabsq	$461168601842738790, %rax
 6361      66666666 
 6361      6606
 6362 0012 5D       		popq	%rbp
 6363              		.cfi_def_cfa 7, 8
 6364 0013 C3       		ret
 6365              		.cfi_endproc
 6366              	.LFE1100:
 6368              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 6369              		.align 2
 6370              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 6372              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9
 6373              	.LFB1102:
  81:/usr/include/c++/5/ext/new_allocator.h **** 
 6374              		.loc 11 81 0
 6375              		.cfi_startproc
 6376 0000 55       		pushq	%rbp
 6377              		.cfi_def_cfa_offset 16
 6378              		.cfi_offset 6, -16
 6379 0001 4889E5   		movq	%rsp, %rbp
 6380              		.cfi_def_cfa_register 6
 6381 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6382 0008 488975F0 		movq	%rsi, -16(%rbp)
  81:/usr/include/c++/5/ext/new_allocator.h **** 
 6383              		.loc 11 81 0
 6384 000c 90       		nop
 6385 000d 5D       		popq	%rbp
 6386              		.cfi_def_cfa 7, 8
 6387 000e C3       		ret
 6388              		.cfi_endproc
 6389              	.LFE1102:
 6391              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 6392              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC
 6393              		.section	.text._ZN9__gnu_cxxneIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6
 6394              		.weak	_ZN9__gnu_cxxneIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8
 6396              	_ZN9__gnu_cxxneIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_
 6397              	.LFB1104:
 841:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 6398              		.loc 9 841 0
 6399              		.cfi_startproc
 6400 0000 55       		pushq	%rbp
 6401              		.cfi_def_cfa_offset 16
 6402              		.cfi_offset 6, -16
 6403 0001 4889E5   		movq	%rsp, %rbp
 6404              		.cfi_def_cfa_register 6
 6405 0004 53       		pushq	%rbx
 6406 0005 4883EC18 		subq	$24, %rsp
 6407              		.cfi_offset 3, -24
 6408 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6409 000d 488975E0 		movq	%rsi, -32(%rbp)
 844:/usr/include/c++/5/bits/stl_iterator.h **** 
 6410              		.loc 9 844 0
 6411 0011 488B45E8 		movq	-24(%rbp), %rax
 6412 0015 4889C7   		movq	%rax, %rdi
 6413 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 6413      00
 6414 001d 488B18   		movq	(%rax), %rbx
 6415 0020 488B45E0 		movq	-32(%rbp), %rax
 6416 0024 4889C7   		movq	%rax, %rdi
 6417 0027 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 6417      00
 6418 002c 488B00   		movq	(%rax), %rax
 6419 002f 4839C3   		cmpq	%rax, %rbx
 6420 0032 0F95C0   		setne	%al
 6421 0035 4883C418 		addq	$24, %rsp
 6422 0039 5B       		popq	%rbx
 6423 003a 5D       		popq	%rbp
 6424              		.cfi_def_cfa 7, 8
 6425 003b C3       		ret
 6426              		.cfi_endproc
 6427              	.LFE1104:
 6429              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tra
 6430              		.align 2
 6431              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 6433              	_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt
 6434              	.LFB1105:
 761:/usr/include/c++/5/bits/stl_iterator.h ****       {
 6435              		.loc 9 761 0
 6436              		.cfi_startproc
 6437 0000 55       		pushq	%rbp
 6438              		.cfi_def_cfa_offset 16
 6439              		.cfi_offset 6, -16
 6440 0001 4889E5   		movq	%rsp, %rbp
 6441              		.cfi_def_cfa_register 6
 6442 0004 48897DF8 		movq	%rdi, -8(%rbp)
 763:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 6443              		.loc 9 763 0
 6444 0008 488B45F8 		movq	-8(%rbp), %rax
 6445 000c 488B00   		movq	(%rax), %rax
 6446 000f 488D5028 		leaq	40(%rax), %rdx
 6447 0013 488B45F8 		movq	-8(%rbp), %rax
 6448 0017 488910   		movq	%rdx, (%rax)
 764:/usr/include/c++/5/bits/stl_iterator.h ****       }
 6449              		.loc 9 764 0
 6450 001a 488B45F8 		movq	-8(%rbp), %rax
 765:/usr/include/c++/5/bits/stl_iterator.h **** 
 6451              		.loc 9 765 0
 6452 001e 5D       		popq	%rbp
 6453              		.cfi_def_cfa 7, 8
 6454 001f C3       		ret
 6455              		.cfi_endproc
 6456              	.LFE1105:
 6458              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tr
 6459              		.align 2
 6460              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 6462              	_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 6463              	.LFB1106:
 753:/usr/include/c++/5/bits/stl_iterator.h ****       { return *_M_current; }
 6464              		.loc 9 753 0
 6465              		.cfi_startproc
 6466 0000 55       		pushq	%rbp
 6467              		.cfi_def_cfa_offset 16
 6468              		.cfi_offset 6, -16
 6469 0001 4889E5   		movq	%rsp, %rbp
 6470              		.cfi_def_cfa_register 6
 6471 0004 48897DF8 		movq	%rdi, -8(%rbp)
 754:/usr/include/c++/5/bits/stl_iterator.h **** 
 6472              		.loc 9 754 0
 6473 0008 488B45F8 		movq	-8(%rbp), %rax
 6474 000c 488B00   		movq	(%rax), %rax
 6475 000f 5D       		popq	%rbp
 6476              		.cfi_def_cfa 7, 8
 6477 0010 C3       		ret
 6478              		.cfi_endproc
 6479              	.LFE1106:
 6481              		.section	.text._ZSt10_ConstructISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_E
 6482              		.weak	_ZSt10_ConstructISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvPT_RKT0_
 6484              	_ZSt10_ConstructISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvPT_RKT0_:
 6485              	.LFB1107:
  79:/usr/include/c++/5/bits/stl_construct.h ****     {
 6486              		.loc 6 79 0
 6487              		.cfi_startproc
 6488              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6489              		.cfi_lsda 0x1b,.LLSDA1107
 6490 0000 55       		pushq	%rbp
 6491              		.cfi_def_cfa_offset 16
 6492              		.cfi_offset 6, -16
 6493 0001 4889E5   		movq	%rsp, %rbp
 6494              		.cfi_def_cfa_register 6
 6495 0004 4155     		pushq	%r13
 6496 0006 4154     		pushq	%r12
 6497 0008 53       		pushq	%rbx
 6498 0009 4883EC18 		subq	$24, %rsp
 6499              		.cfi_offset 13, -24
 6500              		.cfi_offset 12, -32
 6501              		.cfi_offset 3, -40
 6502 000d 48897DD8 		movq	%rdi, -40(%rbp)
 6503 0011 488975D0 		movq	%rsi, -48(%rbp)
  83:/usr/include/c++/5/bits/stl_construct.h ****     }
 6504              		.loc 6 83 0
 6505 0015 4C8B65D8 		movq	-40(%rbp), %r12
 6506 0019 4C89E6   		movq	%r12, %rsi
 6507 001c BF280000 		movl	$40, %edi
 6507      00
 6508 0021 E8000000 		call	_ZnwmPv@PLT
 6508      00
 6509 0026 4889C3   		movq	%rax, %rbx
 6510 0029 4885DB   		testq	%rbx, %rbx
 6511 002c 742A     		je	.L373
  83:/usr/include/c++/5/bits/stl_construct.h ****     }
 6512              		.loc 6 83 0 is_stmt 0 discriminator 1
 6513 002e 488B45D0 		movq	-48(%rbp), %rax
 6514 0032 4889C6   		movq	%rax, %rsi
 6515 0035 4889DF   		movq	%rbx, %rdi
 6516              	.LEHB65:
 6517 0038 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_@PLT
 6517      00
 6518              	.LEHE65:
  84:/usr/include/c++/5/bits/stl_construct.h **** #endif
 6519              		.loc 6 84 0 is_stmt 1
 6520 003d EB19     		jmp	.L373
 6521              	.L372:
 6522 003f 4989C5   		movq	%rax, %r13
  83:/usr/include/c++/5/bits/stl_construct.h ****     }
 6523              		.loc 6 83 0
 6524 0042 4C89E6   		movq	%r12, %rsi
 6525 0045 4889DF   		movq	%rbx, %rdi
 6526 0048 E8000000 		call	_ZdlPvS_@PLT
 6526      00
 6527 004d 4C89E8   		movq	%r13, %rax
 6528 0050 4889C7   		movq	%rax, %rdi
 6529              	.LEHB66:
 6530 0053 E8000000 		call	_Unwind_Resume@PLT
 6530      00
 6531              	.LEHE66:
 6532              	.L373:
  84:/usr/include/c++/5/bits/stl_construct.h **** #endif
 6533              		.loc 6 84 0
 6534 0058 90       		nop
 6535 0059 4883C418 		addq	$24, %rsp
 6536 005d 5B       		popq	%rbx
 6537 005e 415C     		popq	%r12
 6538 0060 415D     		popq	%r13
 6539 0062 5D       		popq	%rbp
 6540              		.cfi_def_cfa 7, 8
 6541 0063 C3       		ret
 6542              		.cfi_endproc
 6543              	.LFE1107:
 6544              		.section	.gcc_except_table
 6545              	.LLSDA1107:
 6546 0190 FF       		.byte	0xff
 6547 0191 FF       		.byte	0xff
 6548 0192 01       		.byte	0x1
 6549 0193 08       		.uleb128 .LLSDACSE1107-.LLSDACSB1107
 6550              	.LLSDACSB1107:
 6551 0194 38       		.uleb128 .LEHB65-.LFB1107
 6552 0195 05       		.uleb128 .LEHE65-.LEHB65
 6553 0196 3F       		.uleb128 .L372-.LFB1107
 6554 0197 00       		.uleb128 0
 6555 0198 53       		.uleb128 .LEHB66-.LFB1107
 6556 0199 05       		.uleb128 .LEHE66-.LEHB66
 6557 019a 00       		.uleb128 0
 6558 019b 00       		.uleb128 0
 6559              	.LLSDACSE1107:
 6560              		.section	.text._ZSt10_ConstructISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_E
 6562              		.section	.text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stri
 6563              		.weak	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11c
 6565              	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tra
 6566              	.LFB1108:
 217:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 218:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 219:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 220:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct _Iter_base<_Iterator, true>
 221:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 222:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_type iterator_type;
 223:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       static iterator_type _S_base(_Iterator __it)
 6567              		.loc 15 223 0
 6568              		.cfi_startproc
 6569 0000 55       		pushq	%rbp
 6570              		.cfi_def_cfa_offset 16
 6571              		.cfi_offset 6, -16
 6572 0001 4889E5   		movq	%rsp, %rbp
 6573              		.cfi_def_cfa_register 6
 6574 0004 4883EC10 		subq	$16, %rsp
 6575 0008 48897DF0 		movq	%rdi, -16(%rbp)
 224:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it.base(); }
 6576              		.loc 15 224 0
 6577 000c 488D45F0 		leaq	-16(%rbp), %rax
 6578 0010 4889C7   		movq	%rax, %rdi
 6579 0013 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 6579      00
 6580 0018 488B00   		movq	(%rax), %rax
 6581 001b C9       		leave
 6582              		.cfi_def_cfa 7, 8
 6583 001c C3       		ret
 6584              		.cfi_endproc
 6585              	.LFE1108:
 6587              		.section	.text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_strin
 6588              		.weak	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11ch
 6590              	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_trai
 6591              	.LFB1109:
 223:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it.base(); }
 6592              		.loc 15 223 0
 6593              		.cfi_startproc
 6594 0000 55       		pushq	%rbp
 6595              		.cfi_def_cfa_offset 16
 6596              		.cfi_offset 6, -16
 6597 0001 4889E5   		movq	%rsp, %rbp
 6598              		.cfi_def_cfa_register 6
 6599 0004 4883EC10 		subq	$16, %rsp
 6600 0008 48897DF0 		movq	%rdi, -16(%rbp)
 6601              		.loc 15 224 0
 6602 000c 488D45F0 		leaq	-16(%rbp), %rax
 6603 0010 4889C7   		movq	%rax, %rdi
 6604 0013 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 6604      00
 6605 0018 488B00   		movq	(%rax), %rax
 6606 001b C9       		leave
 6607              		.cfi_def_cfa 7, 8
 6608 001c C3       		ret
 6609              		.cfi_endproc
 6610              	.LFE1109:
 6612              		.section	.text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIiNSt7
 6613              		.weak	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIiNSt7__cxx1112
 6615              	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIiNSt7__cxx1112basic_s
 6616              	.LFB1110:
 335:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 6617              		.loc 12 335 0
 6618              		.cfi_startproc
 6619 0000 55       		pushq	%rbp
 6620              		.cfi_def_cfa_offset 16
 6621              		.cfi_offset 6, -16
 6622 0001 4889E5   		movq	%rsp, %rbp
 6623              		.cfi_def_cfa_register 6
 6624 0004 4883EC30 		subq	$48, %rsp
 6625 0008 48897DE8 		movq	%rdi, -24(%rbp)
 6626 000c 488975E0 		movq	%rsi, -32(%rbp)
 6627 0010 488955D8 		movq	%rdx, -40(%rbp)
 6628              	.LBB42:
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 6629              		.loc 12 338 0
 6630 0014 488B55E0 		movq	-32(%rbp), %rdx
 6631 0018 488B45E8 		movq	-24(%rbp), %rax
 6632 001c 4829C2   		subq	%rax, %rdx
 6633 001f 4889D0   		movq	%rdx, %rax
 6634 0022 48C1F803 		sarq	$3, %rax
 6635 0026 4889C2   		movq	%rax, %rdx
 6636 0029 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 6636      CCCCCCCC 
 6636      CCCC
 6637 0033 480FAFC2 		imulq	%rdx, %rax
 6638 0037 488945F8 		movq	%rax, -8(%rbp)
 6639              	.L380:
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 6640              		.loc 12 338 0 is_stmt 0 discriminator 3
 6641 003b 48837DF8 		cmpq	$0, -8(%rbp)
 6641      00
 6642 0040 7E24     		jle	.L379
 340:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 6643              		.loc 12 340 0 is_stmt 1 discriminator 2
 6644 0042 488B55E8 		movq	-24(%rbp), %rdx
 6645 0046 488B45D8 		movq	-40(%rbp), %rax
 6646 004a 4889D6   		movq	%rdx, %rsi
 6647 004d 4889C7   		movq	%rax, %rdi
 6648 0050 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_@PLT
 6648      00
 341:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 6649              		.loc 12 341 0 discriminator 2
 6650 0055 488345E8 		addq	$40, -24(%rbp)
 6650      28
 342:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 6651              		.loc 12 342 0 discriminator 2
 6652 005a 488345D8 		addq	$40, -40(%rbp)
 6652      28
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 6653              		.loc 12 338 0 discriminator 2
 6654 005f 48836DF8 		subq	$1, -8(%rbp)
 6654      01
 6655 0064 EBD5     		jmp	.L380
 6656              	.L379:
 6657              	.LBE42:
 344:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 6658              		.loc 12 344 0
 6659 0066 488B45D8 		movq	-40(%rbp), %rax
 345:/usr/include/c++/5/bits/stl_algobase.h ****     };
 6660              		.loc 12 345 0
 6661 006a C9       		leave
 6662              		.cfi_def_cfa 7, 8
 6663 006b C3       		ret
 6664              		.cfi_endproc
 6665              	.LFE1110:
 6667              		.section	.text._ZN9__gnu_cxxneIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6v
 6668              		.weak	_ZN9__gnu_cxxneIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_
 6670              	_ZN9__gnu_cxxneIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_E
 6671              	.LFB1111:
 841:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 6672              		.loc 9 841 0
 6673              		.cfi_startproc
 6674 0000 55       		pushq	%rbp
 6675              		.cfi_def_cfa_offset 16
 6676              		.cfi_offset 6, -16
 6677 0001 4889E5   		movq	%rsp, %rbp
 6678              		.cfi_def_cfa_register 6
 6679 0004 53       		pushq	%rbx
 6680 0005 4883EC18 		subq	$24, %rsp
 6681              		.cfi_offset 3, -24
 6682 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6683 000d 488975E0 		movq	%rsi, -32(%rbp)
 844:/usr/include/c++/5/bits/stl_iterator.h **** 
 6684              		.loc 9 844 0
 6685 0011 488B45E8 		movq	-24(%rbp), %rax
 6686 0015 4889C7   		movq	%rax, %rdi
 6687 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 6687      00
 6688 001d 488B18   		movq	(%rax), %rbx
 6689 0020 488B45E0 		movq	-32(%rbp), %rax
 6690 0024 4889C7   		movq	%rax, %rdi
 6691 0027 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 6691      00
 6692 002c 488B00   		movq	(%rax), %rax
 6693 002f 4839C3   		cmpq	%rax, %rbx
 6694 0032 0F95C0   		setne	%al
 6695 0035 4883C418 		addq	$24, %rsp
 6696 0039 5B       		popq	%rbx
 6697 003a 5D       		popq	%rbp
 6698              		.cfi_def_cfa 7, 8
 6699 003b C3       		ret
 6700              		.cfi_endproc
 6701              	.LFE1111:
 6703              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_trai
 6704              		.align 2
 6705              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 6707              	_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6
 6708              	.LFB1112:
 761:/usr/include/c++/5/bits/stl_iterator.h ****       {
 6709              		.loc 9 761 0
 6710              		.cfi_startproc
 6711 0000 55       		pushq	%rbp
 6712              		.cfi_def_cfa_offset 16
 6713              		.cfi_offset 6, -16
 6714 0001 4889E5   		movq	%rsp, %rbp
 6715              		.cfi_def_cfa_register 6
 6716 0004 48897DF8 		movq	%rdi, -8(%rbp)
 763:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 6717              		.loc 9 763 0
 6718 0008 488B45F8 		movq	-8(%rbp), %rax
 6719 000c 488B00   		movq	(%rax), %rax
 6720 000f 488D5028 		leaq	40(%rax), %rdx
 6721 0013 488B45F8 		movq	-8(%rbp), %rax
 6722 0017 488910   		movq	%rdx, (%rax)
 764:/usr/include/c++/5/bits/stl_iterator.h ****       }
 6723              		.loc 9 764 0
 6724 001a 488B45F8 		movq	-8(%rbp), %rax
 765:/usr/include/c++/5/bits/stl_iterator.h **** 
 6725              		.loc 9 765 0
 6726 001e 5D       		popq	%rbp
 6727              		.cfi_def_cfa 7, 8
 6728 001f C3       		ret
 6729              		.cfi_endproc
 6730              	.LFE1112:
 6732              		.section	.text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiNSt7_
 6733              		.weak	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiNSt7__cxx1112b
 6735              	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiNSt7__cxx1112basic_st
 6736              	.LFB1113:
 335:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 6737              		.loc 12 335 0
 6738              		.cfi_startproc
 6739 0000 55       		pushq	%rbp
 6740              		.cfi_def_cfa_offset 16
 6741              		.cfi_offset 6, -16
 6742 0001 4889E5   		movq	%rsp, %rbp
 6743              		.cfi_def_cfa_register 6
 6744 0004 4883EC30 		subq	$48, %rsp
 6745 0008 48897DE8 		movq	%rdi, -24(%rbp)
 6746 000c 488975E0 		movq	%rsi, -32(%rbp)
 6747 0010 488955D8 		movq	%rdx, -40(%rbp)
 6748              	.LBB43:
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 6749              		.loc 12 338 0
 6750 0014 488B55E0 		movq	-32(%rbp), %rdx
 6751 0018 488B45E8 		movq	-24(%rbp), %rax
 6752 001c 4829C2   		subq	%rax, %rdx
 6753 001f 4889D0   		movq	%rdx, %rax
 6754 0022 48C1F803 		sarq	$3, %rax
 6755 0026 4889C2   		movq	%rax, %rdx
 6756 0029 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 6756      CCCCCCCC 
 6756      CCCC
 6757 0033 480FAFC2 		imulq	%rdx, %rax
 6758 0037 488945F8 		movq	%rax, -8(%rbp)
 6759              	.L388:
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 6760              		.loc 12 338 0 is_stmt 0 discriminator 3
 6761 003b 48837DF8 		cmpq	$0, -8(%rbp)
 6761      00
 6762 0040 7E24     		jle	.L387
 340:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 6763              		.loc 12 340 0 is_stmt 1 discriminator 2
 6764 0042 488B55E8 		movq	-24(%rbp), %rdx
 6765 0046 488B45D8 		movq	-40(%rbp), %rax
 6766 004a 4889D6   		movq	%rdx, %rsi
 6767 004d 4889C7   		movq	%rax, %rdi
 6768 0050 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_@PLT
 6768      00
 341:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 6769              		.loc 12 341 0 discriminator 2
 6770 0055 488345E8 		addq	$40, -24(%rbp)
 6770      28
 342:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 6771              		.loc 12 342 0 discriminator 2
 6772 005a 488345D8 		addq	$40, -40(%rbp)
 6772      28
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 6773              		.loc 12 338 0 discriminator 2
 6774 005f 48836DF8 		subq	$1, -8(%rbp)
 6774      01
 6775 0064 EBD5     		jmp	.L388
 6776              	.L387:
 6777              	.LBE43:
 344:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 6778              		.loc 12 344 0
 6779 0066 488B45D8 		movq	-40(%rbp), %rax
 345:/usr/include/c++/5/bits/stl_algobase.h ****     };
 6780              		.loc 12 345 0
 6781 006a C9       		leave
 6782              		.cfi_def_cfa 7, 8
 6783 006b C3       		ret
 6784              		.cfi_endproc
 6785              	.LFE1113:
 6787              		.section	.text._ZSt10_ConstructIN8UnitTest18DeferredTestResultES1_EvPT_RKT0_,"axG",@progbits,_ZSt1
 6788              		.weak	_ZSt10_ConstructIN8UnitTest18DeferredTestResultES1_EvPT_RKT0_
 6790              	_ZSt10_ConstructIN8UnitTest18DeferredTestResultES1_EvPT_RKT0_:
 6791              	.LFB1114:
  79:/usr/include/c++/5/bits/stl_construct.h ****     {
 6792              		.loc 6 79 0
 6793              		.cfi_startproc
 6794              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6795              		.cfi_lsda 0x1b,.LLSDA1114
 6796 0000 55       		pushq	%rbp
 6797              		.cfi_def_cfa_offset 16
 6798              		.cfi_offset 6, -16
 6799 0001 4889E5   		movq	%rsp, %rbp
 6800              		.cfi_def_cfa_register 6
 6801 0004 4155     		pushq	%r13
 6802 0006 4154     		pushq	%r12
 6803 0008 53       		pushq	%rbx
 6804 0009 4883EC18 		subq	$24, %rsp
 6805              		.cfi_offset 13, -24
 6806              		.cfi_offset 12, -32
 6807              		.cfi_offset 3, -40
 6808 000d 48897DD8 		movq	%rdi, -40(%rbp)
 6809 0011 488975D0 		movq	%rsi, -48(%rbp)
  83:/usr/include/c++/5/bits/stl_construct.h ****     }
 6810              		.loc 6 83 0
 6811 0015 4C8B65D8 		movq	-40(%rbp), %r12
 6812 0019 4C89E6   		movq	%r12, %rsi
 6813 001c BF800000 		movl	$128, %edi
 6813      00
 6814 0021 E8000000 		call	_ZnwmPv@PLT
 6814      00
 6815 0026 4889C3   		movq	%rax, %rbx
 6816 0029 4885DB   		testq	%rbx, %rbx
 6817 002c 742A     		je	.L395
  83:/usr/include/c++/5/bits/stl_construct.h ****     }
 6818              		.loc 6 83 0 is_stmt 0 discriminator 1
 6819 002e 488B45D0 		movq	-48(%rbp), %rax
 6820 0032 4889C6   		movq	%rax, %rsi
 6821 0035 4889DF   		movq	%rbx, %rdi
 6822              	.LEHB67:
 6823 0038 E8000000 		call	_ZN8UnitTest18DeferredTestResultC1ERKS0_@PLT
 6823      00
 6824              	.LEHE67:
  84:/usr/include/c++/5/bits/stl_construct.h **** #endif
 6825              		.loc 6 84 0 is_stmt 1
 6826 003d EB19     		jmp	.L395
 6827              	.L394:
 6828 003f 4989C5   		movq	%rax, %r13
  83:/usr/include/c++/5/bits/stl_construct.h ****     }
 6829              		.loc 6 83 0
 6830 0042 4C89E6   		movq	%r12, %rsi
 6831 0045 4889DF   		movq	%rbx, %rdi
 6832 0048 E8000000 		call	_ZdlPvS_@PLT
 6832      00
 6833 004d 4C89E8   		movq	%r13, %rax
 6834 0050 4889C7   		movq	%rax, %rdi
 6835              	.LEHB68:
 6836 0053 E8000000 		call	_Unwind_Resume@PLT
 6836      00
 6837              	.LEHE68:
 6838              	.L395:
  84:/usr/include/c++/5/bits/stl_construct.h **** #endif
 6839              		.loc 6 84 0
 6840 0058 90       		nop
 6841 0059 4883C418 		addq	$24, %rsp
 6842 005d 5B       		popq	%rbx
 6843 005e 415C     		popq	%r12
 6844 0060 415D     		popq	%r13
 6845 0062 5D       		popq	%rbp
 6846              		.cfi_def_cfa 7, 8
 6847 0063 C3       		ret
 6848              		.cfi_endproc
 6849              	.LFE1114:
 6850              		.section	.gcc_except_table
 6851              	.LLSDA1114:
 6852 019c FF       		.byte	0xff
 6853 019d FF       		.byte	0xff
 6854 019e 01       		.byte	0x1
 6855 019f 08       		.uleb128 .LLSDACSE1114-.LLSDACSB1114
 6856              	.LLSDACSB1114:
 6857 01a0 38       		.uleb128 .LEHB67-.LFB1114
 6858 01a1 05       		.uleb128 .LEHE67-.LEHB67
 6859 01a2 3F       		.uleb128 .L394-.LFB1114
 6860 01a3 00       		.uleb128 0
 6861 01a4 53       		.uleb128 .LEHB68-.LFB1114
 6862 01a5 05       		.uleb128 .LEHE68-.LEHB68
 6863 01a6 00       		.uleb128 0
 6864 01a7 00       		.uleb128 0
 6865              	.LLSDACSE1114:
 6866              		.section	.text._ZSt10_ConstructIN8UnitTest18DeferredTestResultES1_EvPT_RKT0_,"axG",@progbits,_ZSt1
 6868              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_tr
 6869              		.align 2
 6870              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 6872              	_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 6873              	.LFB1117:
 805:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 6874              		.loc 9 805 0
 6875              		.cfi_startproc
 6876 0000 55       		pushq	%rbp
 6877              		.cfi_def_cfa_offset 16
 6878              		.cfi_offset 6, -16
 6879 0001 4889E5   		movq	%rsp, %rbp
 6880              		.cfi_def_cfa_register 6
 6881 0004 48897DF8 		movq	%rdi, -8(%rbp)
 806:/usr/include/c++/5/bits/stl_iterator.h ****     };
 6882              		.loc 9 806 0
 6883 0008 488B45F8 		movq	-8(%rbp), %rax
 6884 000c 5D       		popq	%rbp
 6885              		.cfi_def_cfa 7, 8
 6886 000d C3       		ret
 6887              		.cfi_endproc
 6888              	.LFE1117:
 6890              		.weak	_ZTVN8UnitTest20DeferredTestReporterE
 6891              		.section	.data.rel.ro._ZTVN8UnitTest20DeferredTestReporterE,"awG",@progbits,_ZTVN8UnitTest20Deferr
 6892              		.align 8
 6895              	_ZTVN8UnitTest20DeferredTestReporterE:
 6896 0000 00000000 		.quad	0
 6896      00000000 
 6897 0008 00000000 		.quad	_ZTIN8UnitTest20DeferredTestReporterE
 6897      00000000 
 6898 0010 00000000 		.quad	0
 6898      00000000 
 6899 0018 00000000 		.quad	0
 6899      00000000 
 6900 0020 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 6900      00000000 
 6901 0028 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 6901      00000000 
 6902 0030 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 6902      00000000 
 6903 0038 00000000 		.quad	__cxa_pure_virtual
 6903      00000000 
 6904              		.weak	_ZTIN8UnitTest20DeferredTestReporterE
 6905              		.section	.data.rel.ro._ZTIN8UnitTest20DeferredTestReporterE,"awG",@progbits,_ZTIN8UnitTest20Deferr
 6906              		.align 8
 6909              	_ZTIN8UnitTest20DeferredTestReporterE:
 6910 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 6910      00000000 
 6911 0008 00000000 		.quad	_ZTSN8UnitTest20DeferredTestReporterE
 6911      00000000 
 6912 0010 00000000 		.quad	_ZTIN8UnitTest12TestReporterE
 6912      00000000 
 6913              		.weak	_ZTSN8UnitTest20DeferredTestReporterE
 6914              		.section	.rodata._ZTSN8UnitTest20DeferredTestReporterE,"aG",@progbits,_ZTSN8UnitTest20DeferredTest
 6915              		.align 32
 6918              	_ZTSN8UnitTest20DeferredTestReporterE:
 6919 0000 4E38556E 		.string	"N8UnitTest20DeferredTestReporterE"
 6919      69745465 
 6919      73743230 
 6919      44656665 
 6919      72726564 
 6920              		.text
 6921              	.Letext0:
 6922              		.file 16 "/usr/include/c++/5/bits/basic_string.h"
 6923              		.file 17 "/usr/include/c++/5/bits/basic_string.tcc"
 6924              		.file 18 "/usr/include/c++/5/bits/stringfwd.h"
 6925              		.file 19 "/usr/include/c++/5/cwchar"
 6926              		.file 20 "/usr/include/c++/5/bits/char_traits.h"
 6927              		.file 21 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h"
 6928              		.file 22 "/usr/include/c++/5/clocale"
 6929              		.file 23 "/usr/include/c++/5/bits/cpp_type_traits.h"
 6930              		.file 24 "/usr/include/c++/5/debug/debug.h"
 6931              		.file 25 "/usr/include/c++/5/bits/predefined_ops.h"
 6932              		.file 26 "/usr/include/c++/5/ext/numeric_traits.h"
 6933              		.file 27 "/usr/include/stdio.h"
 6934              		.file 28 "<built-in>"
 6935              		.file 29 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 6936              		.file 30 "/usr/include/wchar.h"
 6937              		.file 31 "/usr/include/time.h"
 6938              		.file 32 "/usr/include/locale.h"
 6939              		.file 33 "TestReporter.h"
 6940              		.file 34 "TestDetails.h"
 6941              		.file 35 "DeferredTestReporter.h"
 26145              		.align 8
 26148              	DW.ref.__gxx_personality_v0:
 26149 0000 00000000 		.quad	__gxx_personality_v0
 26149      00000000 
 26150              		.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609"
 26151              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 DeferredTestReporter.cpp
     /tmp/ccyHqovr.s:7      .text._ZnwmPv:0000000000000000 _ZnwmPv
     /tmp/ccyHqovr.s:30     .text._ZdlPvS_:0000000000000000 _ZdlPvS_
     /tmp/ccyHqovr.s:53     .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/ccyHqovr.s:26148  .data.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccyHqovr.s:548    .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccyHqovr.s:53     .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/ccyHqovr.s:176    .text:0000000000000000 _ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
     /tmp/ccyHqovr.s:636    .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE9push_backERKS1_:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE9push_backERKS1_
     /tmp/ccyHqovr.s:280    .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
     /tmp/ccyHqovr.s:280    .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
     /tmp/ccyHqovr.s:312    .text:00000000000000ba _ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
     /tmp/ccyHqovr.s:695    .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4backEv:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4backEv
     /tmp/ccyHqovr.s:738    .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKiRKS5_:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKiRKS5_
     /tmp/ccyHqovr.s:777    .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE9push_backERKS7_:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE9push_backERKS7_
     /tmp/ccyHqovr.s:490    .text:00000000000001f4 _ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
     /tmp/ccyHqovr.s:524    .text:000000000000022e _ZN8UnitTest20DeferredTestReporter10GetResultsEv
     /tmp/ccyHqovr.s:548    .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccyHqovr.s:956    .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv
     /tmp/ccyHqovr.s:977    .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E
     /tmp/ccyHqovr.s:866    .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccyHqovr.s:1008   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE9constructIS2_EEvRS3_PS2_RKT_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE9constructIS2_EEvRS3_PS2_RKT_
     /tmp/ccyHqovr.s:1613   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE3endEv:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE3endEv
     /tmp/ccyHqovr.s:1242   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_
     /tmp/ccyHqovr.s:1651   .text._ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEmiEl:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEmiEl
     /tmp/ccyHqovr.s:1697   .text._ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEdeEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEdeEv
     /tmp/ccyHqovr.s:738    .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKiRKS5_:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKiRKS5_
     /tmp/ccyHqovr.s:1719   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS8_EEvRS9_PS8_RKT_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS8_EEvRS9_PS8_RKT_
     /tmp/ccyHqovr.s:2206   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv
     /tmp/ccyHqovr.s:1824   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS7_S9_EERKS7_:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS7_S9_EERKS7_
     /tmp/ccyHqovr.s:836    .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev
     /tmp/ccyHqovr.s:2244   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccyHqovr.s:836    .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD1Ev
     /tmp/ccyHqovr.s:2275   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m
     /tmp/ccyHqovr.s:866    .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccyHqovr.s:2310   .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
     /tmp/ccyHqovr.s:2340   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE9constructEPS2_RKS2_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE9constructEPS2_RKS2_
     /tmp/ccyHqovr.s:1040   .text._ZN8UnitTest18DeferredTestResultC2ERKS0_:0000000000000000 _ZN8UnitTest18DeferredTestResultC2ERKS0_
     /tmp/ccyHqovr.s:2422   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2ERKS9_:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC1ERKS9_
     /tmp/ccyHqovr.s:1040   .text._ZN8UnitTest18DeferredTestResultC2ERKS0_:0000000000000000 _ZN8UnitTest18DeferredTestResultC1ERKS0_
     /tmp/ccyHqovr.s:1181   .text._ZN8UnitTest18DeferredTestResultaSERKS0_:0000000000000000 _ZN8UnitTest18DeferredTestResultaSERKS0_
     /tmp/ccyHqovr.s:2609   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_
     /tmp/ccyHqovr.s:2544   .text._ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEE4baseEv
     /tmp/ccyHqovr.s:2565   .text._ZSt13copy_backwardIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_:0000000000000000 _ZSt13copy_backwardIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_
     /tmp/ccyHqovr.s:2838   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE12_M_check_lenEmPKc:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE12_M_check_lenEmPKc
     /tmp/ccyHqovr.s:2935   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE5beginEv:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE5beginEv
     /tmp/ccyHqovr.s:2971   .text._ZN9__gnu_cxxmiIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_:0000000000000000 _ZN9__gnu_cxxmiIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
     /tmp/ccyHqovr.s:3010   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE11_M_allocateEm:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE11_M_allocateEm
     /tmp/ccyHqovr.s:3047   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccyHqovr.s:3068   .text._ZSt34__uninitialized_move_if_noexcept_aIPN8UnitTest18DeferredTestResultES2_SaIS1_EET0_T_S5_S4_RT1_:0000000000000000 _ZSt34__uninitialized_move_if_noexcept_aIPN8UnitTest18DeferredTestResultES2_SaIS1_EET0_T_S5_S4_RT1_
     /tmp/ccyHqovr.s:3128   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/ccyHqovr.s:3159   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccyHqovr.s:3100   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE7destroyERS3_PS2_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE7destroyERS3_PS2_
     /tmp/ccyHqovr.s:3195   .text._ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC2ERKS3_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC1ERKS3_
     /tmp/ccyHqovr.s:3226   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructEPS8_RKS8_:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructEPS8_RKS8_
     /tmp/ccyHqovr.s:1750   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS6_:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS6_
     /tmp/ccyHqovr.s:1750   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS6_:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_
     /tmp/ccyHqovr.s:1789   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSERKS6_
     /tmp/ccyHqovr.s:3307   .text._ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEE4baseEv
     /tmp/ccyHqovr.s:3328   .text._ZSt13copy_backwardIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_:0000000000000000 _ZSt13copy_backwardIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_
     /tmp/ccyHqovr.s:3371   .text._ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEdeEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEdeEv
     /tmp/ccyHqovr.s:3394   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_check_lenEmPKc:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_check_lenEmPKc
     /tmp/ccyHqovr.s:3491   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv
     /tmp/ccyHqovr.s:3527   .text._ZN9__gnu_cxxmiIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSG_SJ_:0000000000000000 _ZN9__gnu_cxxmiIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSG_SJ_
     /tmp/ccyHqovr.s:3569   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_M_allocateEm:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_M_allocateEm
     /tmp/ccyHqovr.s:3605   .text._ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_SaIS7_EET0_T_SB_SA_RT1_:0000000000000000 _ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_SaIS7_EET0_T_SB_SA_RT1_
     /tmp/ccyHqovr.s:3636   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyERS9_PS8_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyERS9_PS8_
     /tmp/ccyHqovr.s:3665   .text._ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC2ERKS9_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC1ERKS9_
     /tmp/ccyHqovr.s:3696   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccyHqovr.s:2244   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccyHqovr.s:3719   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m
     /tmp/ccyHqovr.s:3749   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_
     /tmp/ccyHqovr.s:2422   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2ERKS9_:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2ERKS9_
     /tmp/ccyHqovr.s:3841   .text._ZNKSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNKSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv
     /tmp/ccyHqovr.s:3819   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE17_S_select_on_copyERKS9_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE17_S_select_on_copyERKS9_
     /tmp/ccyHqovr.s:3788   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
     /tmp/ccyHqovr.s:3863   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2EmRKS8_:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2EmRKS8_
     /tmp/ccyHqovr.s:3983   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE3endEv
     /tmp/ccyHqovr.s:3943   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE5beginEv
     /tmp/ccyHqovr.s:4022   .text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEPS9_S9_ET0_T_SI_SH_RSaIT1_E:0000000000000000 _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEPS9_S9_ET0_T_SI_SH_RSaIT1_E
     /tmp/ccyHqovr.s:4052   .text._ZSt12__miter_baseIPN8UnitTest18DeferredTestResultEENSt11_Miter_baseIT_E13iterator_typeES4_:0000000000000000 _ZSt12__miter_baseIPN8UnitTest18DeferredTestResultEENSt11_Miter_baseIT_E13iterator_typeES4_
     /tmp/ccyHqovr.s:4076   .text._ZSt23__copy_move_backward_a2ILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_:0000000000000000 _ZSt23__copy_move_backward_a2ILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_
     /tmp/ccyHqovr.s:4124   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8capacityEv:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8capacityEv
     /tmp/ccyHqovr.s:4156   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS7_S9_EEEEPS7_mT_SH_:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS7_S9_EEEEPS7_mT_SH_
     /tmp/ccyHqovr.s:4270   .text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEENS1_IPS9_SE_EEET0_T_SJ_SI_:0000000000000000 _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEENS1_IPS9_SE_EEET0_T_SJ_SI_
     /tmp/ccyHqovr.s:4312   .text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEES9_EvT_SF_RSaIT0_E:0000000000000000 _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEES9_EvT_SF_RSaIT0_E
     /tmp/ccyHqovr.s:4342   .text._ZSt4copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_:0000000000000000 _ZSt4copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_
     /tmp/ccyHqovr.s:4384   .text._ZSt22__uninitialized_copy_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_S7_ET0_T_SA_S9_RSaIT1_E:0000000000000000 _ZSt22__uninitialized_copy_aIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_S7_ET0_T_SA_S9_RSaIT1_E
     /tmp/ccyHqovr.s:4415   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE8max_sizeEv:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE8max_sizeEv
     /tmp/ccyHqovr.s:4442   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
     /tmp/ccyHqovr.s:4470   .text._ZSt3maxImERKT_S2_S2_:0000000000000000 _ZSt3maxImERKT_S2_S2_
     /tmp/ccyHqovr.s:4505   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8allocateERS3_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8allocateERS3_m
     /tmp/ccyHqovr.s:4533   .text._ZSt22__uninitialized_copy_aIPN8UnitTest18DeferredTestResultES2_S1_ET0_T_S4_S3_RSaIT1_E:0000000000000000 _ZSt22__uninitialized_copy_aIPN8UnitTest18DeferredTestResultES2_S1_ET0_T_S4_S3_RSaIT1_E
     /tmp/ccyHqovr.s:4564   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE7destroyEPS2_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE7destroyEPS2_
     /tmp/ccyHqovr.s:4590   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/ccyHqovr.s:4619   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
     /tmp/ccyHqovr.s:3195   .text._ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC2ERKS3_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC2ERKS3_
     /tmp/ccyHqovr.s:4649   .text._ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Miter_baseIT_E13iterator_typeESA_:0000000000000000 _ZSt12__miter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Miter_baseIT_E13iterator_typeESA_
     /tmp/ccyHqovr.s:4673   .text._ZSt23__copy_move_backward_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA_S9_:0000000000000000 _ZSt23__copy_move_backward_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA_S9_
     /tmp/ccyHqovr.s:4721   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8max_sizeEv:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE8max_sizeEv
     /tmp/ccyHqovr.s:4747   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS9_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS9_m
     /tmp/ccyHqovr.s:4776   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyEPS8_:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyEPS8_
     /tmp/ccyHqovr.s:3665   .text._ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC2ERKS9_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC2ERKS9_
     /tmp/ccyHqovr.s:3696   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccyHqovr.s:4803   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m
     /tmp/ccyHqovr.s:4830   .text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:0000000000000000 _ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
     /tmp/ccyHqovr.s:4853   .text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
     /tmp/ccyHqovr.s:4879   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implC2ERKS8_:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implC1ERKS8_
     /tmp/ccyHqovr.s:4919   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_create_storageEm:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_create_storageEm
     /tmp/ccyHqovr.s:3863   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC2EmRKS8_:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC1EmRKS8_
     /tmp/ccyHqovr.s:4968   .text._ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC2ERKSA_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC1ERKSA_
     /tmp/ccyHqovr.s:4998   .text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEPS9_ET0_T_SI_SH_:0000000000000000 _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEPS9_ET0_T_SI_SH_
     /tmp/ccyHqovr.s:5030   .text._ZNSt10_Iter_baseIPN8UnitTest18DeferredTestResultELb0EE7_S_baseES2_:0000000000000000 _ZNSt10_Iter_baseIPN8UnitTest18DeferredTestResultELb0EE7_S_baseES2_
     /tmp/ccyHqovr.s:5052   .text._ZSt12__niter_baseIPN8UnitTest18DeferredTestResultEENSt11_Niter_baseIT_E13iterator_typeES4_:0000000000000000 _ZSt12__niter_baseIPN8UnitTest18DeferredTestResultEENSt11_Niter_baseIT_E13iterator_typeES4_
     /tmp/ccyHqovr.s:5076   .text._ZSt22__copy_move_backward_aILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_:0000000000000000 _ZSt22__copy_move_backward_aILb0EPN8UnitTest18DeferredTestResultES2_ET1_T0_S4_S3_
     /tmp/ccyHqovr.s:5108   .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEENSt11_Miter_baseIT_E13iterator_typeESH_:0000000000000000 _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEENSt11_Miter_baseIT_E13iterator_typeESH_
     /tmp/ccyHqovr.s:5132   .text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEENS1_IPS9_SE_EEET1_T0_SJ_SI_:0000000000000000 _ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEENS1_IPS9_SE_EEET1_T0_SJ_SI_
     /tmp/ccyHqovr.s:5195   .text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEEvT_SF_:0000000000000000 _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEEvT_SF_
     /tmp/ccyHqovr.s:5224   .text._ZSt14__copy_move_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA_S9_:0000000000000000 _ZSt14__copy_move_a2ILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA_S9_
     /tmp/ccyHqovr.s:5271   .text._ZSt18uninitialized_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_:0000000000000000 _ZSt18uninitialized_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET0_T_SA_S9_
     /tmp/ccyHqovr.s:5328   .text._ZNKSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNKSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccyHqovr.s:5303   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8max_sizeERKS3_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE8max_sizeERKS3_
     /tmp/ccyHqovr.s:5350   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8allocateEmPKv
     /tmp/ccyHqovr.s:5389   .text._ZSt18uninitialized_copyIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_:0000000000000000 _ZSt18uninitialized_copyIPN8UnitTest18DeferredTestResultES2_ET0_T_S4_S3_
     /tmp/ccyHqovr.s:5421   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/ccyHqovr.s:5460   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/ccyHqovr.s:5487   .text._ZNSt10_Iter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb0EE7_S_baseES8_:0000000000000000 _ZNSt10_Iter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEELb0EE7_S_baseES8_
     /tmp/ccyHqovr.s:5508   .text._ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Niter_baseIT_E13iterator_typeESA_:0000000000000000 _ZSt12__niter_baseIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt11_Niter_baseIT_E13iterator_typeESA_
     /tmp/ccyHqovr.s:5532   .text._ZSt22__copy_move_backward_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA_S9_:0000000000000000 _ZSt22__copy_move_backward_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA_S9_
     /tmp/ccyHqovr.s:5564   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8max_sizeERKS9_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8max_sizeERKS9_
     /tmp/ccyHqovr.s:5589   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv
     /tmp/ccyHqovr.s:4879   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implC2ERKS8_:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implC2ERKS8_
     /tmp/ccyHqovr.s:5632   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS7_:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS7_
     /tmp/ccyHqovr.s:4968   .text._ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC2ERKSA_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC2ERKSA_
     /tmp/ccyHqovr.s:5664   .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorISB_SaISB_EEEEPSB_EET0_T_SK_SJ_:0000000000000000 _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorISB_SaISB_EEEEPSB_EET0_T_SK_SJ_
     /tmp/ccyHqovr.s:5782   .text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN8UnitTest18DeferredTestResultES5_EET0_T_S7_S6_:0000000000000000 _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN8UnitTest18DeferredTestResultES5_EET0_T_S7_S6_
     /tmp/ccyHqovr.s:5830   .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEELb0EE7_S_baseESF_:0000000000000000 _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEELb0EE7_S_baseESF_
     /tmp/ccyHqovr.s:5875   .text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEENSt11_Niter_baseIT_E13iterator_typeESG_:0000000000000000 _ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEENSt11_Niter_baseIT_E13iterator_typeESG_
     /tmp/ccyHqovr.s:5851   .text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEENSt11_Niter_baseIT_E13iterator_typeESH_:0000000000000000 _ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEEENSt11_Niter_baseIT_E13iterator_typeESH_
     /tmp/ccyHqovr.s:5899   .text._ZSt13__copy_move_aILb0EPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPS7_ET1_T0_SC_SB_:0000000000000000 _ZSt13__copy_move_aILb0EPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPS7_ET1_T0_SC_SB_
     /tmp/ccyHqovr.s:5931   .text._ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorISB_SaISB_EEEEEEvT_SH_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorISB_SaISB_EEEEEEvT_SH_
     /tmp/ccyHqovr.s:5977   .text._ZSt13__copy_move_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA_S9_:0000000000000000 _ZSt13__copy_move_aILb0EPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_ET1_T0_SA_S9_
     /tmp/ccyHqovr.s:6009   .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESA_EET0_T_SC_SB_:0000000000000000 _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESA_EET0_T_SC_SB_
     /tmp/ccyHqovr.s:6120   .text._ZNK9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE8max_sizeEv
     /tmp/ccyHqovr.s:6141   .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN8UnitTest18DeferredTestResultES4_EET0_T_S6_S5_:0000000000000000 _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN8UnitTest18DeferredTestResultES4_EET0_T_S6_S5_
     /tmp/ccyHqovr.s:6251   .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/ccyHqovr.s:6273   .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/ccyHqovr.s:6298   .text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESB_EET0_T_SD_SC_:0000000000000000 _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESB_EET0_T_SD_SC_
     /tmp/ccyHqovr.s:6350   .text._ZNK9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeEv
     /tmp/ccyHqovr.s:6372   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9_:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9_
     /tmp/ccyHqovr.s:5632   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS7_:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_
     /tmp/ccyHqovr.s:6396   .text._ZN9__gnu_cxxneIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEEbRKNS_17__normal_iteratorIT_T0_EESJ_:0000000000000000 _ZN9__gnu_cxxneIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEEbRKNS_17__normal_iteratorIT_T0_EESJ_
     /tmp/ccyHqovr.s:6462   .text._ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEdeEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEdeEv
     /tmp/ccyHqovr.s:6484   .text._ZSt10_ConstructISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvPT_RKT0_:0000000000000000 _ZSt10_ConstructISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvPT_RKT0_
     /tmp/ccyHqovr.s:6433   .text._ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEppEv:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEppEv
     /tmp/ccyHqovr.s:6565   .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEELb1EE7_S_baseESF_:0000000000000000 _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEELb1EE7_S_baseESF_
     /tmp/ccyHqovr.s:6590   .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEELb1EE7_S_baseESE_:0000000000000000 _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS9_SaIS9_EEEELb1EE7_S_baseESE_
     /tmp/ccyHqovr.s:6615   .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPSA_EET0_T_SF_SE_:0000000000000000 _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPSA_EET0_T_SF_SE_
     /tmp/ccyHqovr.s:6670   .text._ZN9__gnu_cxxneIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEEbRKNS_17__normal_iteratorIT_T0_EESI_:0000000000000000 _ZN9__gnu_cxxneIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEEbRKNS_17__normal_iteratorIT_T0_EESI_
     /tmp/ccyHqovr.s:6707   .text._ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEppEv:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEppEv
     /tmp/ccyHqovr.s:6735   .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESB_EET0_T_SD_SC_:0000000000000000 _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESB_EET0_T_SD_SC_
     /tmp/ccyHqovr.s:6790   .text._ZSt10_ConstructIN8UnitTest18DeferredTestResultES1_EvPT_RKT0_:0000000000000000 _ZSt10_ConstructIN8UnitTest18DeferredTestResultES1_EvPT_RKT0_
     /tmp/ccyHqovr.s:6372   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9_:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS9_
     /tmp/ccyHqovr.s:6872   .text._ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEE4baseEv
     /tmp/ccyHqovr.s:6895   .data.rel.ro._ZTVN8UnitTest20DeferredTestReporterE:0000000000000000 _ZTVN8UnitTest20DeferredTestReporterE
     /tmp/ccyHqovr.s:6909   .data.rel.ro._ZTIN8UnitTest20DeferredTestReporterE:0000000000000000 _ZTIN8UnitTest20DeferredTestReporterE
     /tmp/ccyHqovr.s:6918   .rodata._ZTSN8UnitTest20DeferredTestReporterE:0000000000000000 _ZTSN8UnitTest20DeferredTestReporterE
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC5ERKiRKS5_
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultC5ERKS0_
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC5ERKS6_
                           .group:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC5ERKS9_
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN8UnitTest18DeferredTestResultESt6vectorIS2_SaIS2_EEEC5ERKS3_
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC5ERKS9_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEC5EmRKS8_
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implC5ERKS8_
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt6vectorIS8_SaIS8_EEEC5ERKSA_
                           .group:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC5ERKS7_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC5ERKS9_

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_Unwind_Resume
__gxx_personality_v0
_ZN8UnitTest18DeferredTestResultC1EPKcS2_
__stack_chk_fail
_ZNSaIcEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
_ZNSaIcED1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
__cxa_begin_catch
__cxa_rethrow
__cxa_end_catch
_ZSt20__throw_length_errorPKc
_ZdlPv
_ZSt17__throw_bad_allocv
_Znwm
__cxa_pure_virtual
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest12TestReporterE
