   1              		.file	"fx2.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              		.align 8
   6              	.LC0:
   7 0000 666C4C6F 		.string	"flLoadStandardFirmware(): The supplied VID:PID:DID \"%s\" is invalid; it should look like
   7      61645374 
   7      616E6461 
   7      72644669 
   7      726D7761 
   8              	.LC1:
   9 0074 666C4C6F 		.string	"flLoadStandardFirmware()"
   9      61645374 
   9      616E6461 
   9      72644669 
   9      726D7761 
  10              		.text
  11              		.globl	flLoadStandardFirmware
  13              	flLoadStandardFirmware:
  14              	.LFB4:
  15              		.file 1 "fx2.c"
   1:fx2.c         **** /*
   2:fx2.c         ****  * Copyright (C) 2009-2012 Chris McClelland
   3:fx2.c         ****  *
   4:fx2.c         ****  * This program is free software: you can redistribute it and/or modify
   5:fx2.c         ****  * it under the terms of the GNU Lesser General Public License as published by
   6:fx2.c         ****  * the Free Software Foundation, either version 3 of the License, or
   7:fx2.c         ****  * (at your option) any later version.
   8:fx2.c         ****  *
   9:fx2.c         ****  * This program is distributed in the hope that it will be useful,
  10:fx2.c         ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:fx2.c         ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:fx2.c         ****  * GNU Lesser General Public License for more details.
  13:fx2.c         ****  *
  14:fx2.c         ****  * You should have received a copy of the GNU Lesser General Public License
  15:fx2.c         ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:fx2.c         ****  */
  17:fx2.c         **** #include <stdlib.h>
  18:fx2.c         **** #include <string.h>
  19:fx2.c         **** #include <makestuff.h>
  20:fx2.c         **** #include <libfx2loader.h>
  21:fx2.c         **** #include <liberror.h>
  22:fx2.c         **** #include <libusbwrap.h>
  23:fx2.c         **** #include "vendorCommands.h"
  24:fx2.c         **** #include "libfpgalink.h"
  25:fx2.c         **** #include "private.h"
  26:fx2.c         **** #include "firmware.h"
  27:fx2.c         **** 
  28:fx2.c         **** // Load the standard FPGALink firmware into the FX2 at currentVid/currentPid.
  29:fx2.c         **** DLLEXPORT(FLStatus) flLoadStandardFirmware(
  30:fx2.c         **** 	const char *curVidPid, const char *newVidPid, const char **error)
  31:fx2.c         **** {
  16              		.loc 1 31 0
  17              		.cfi_startproc
  18 0000 55       		pushq	%rbp
  19              		.cfi_def_cfa_offset 16
  20              		.cfi_offset 6, -16
  21 0001 4889E5   		movq	%rsp, %rbp
  22              		.cfi_def_cfa_register 6
  23 0004 4883C480 		addq	$-128, %rsp
  24 0008 48897D98 		movq	%rdi, -104(%rbp)
  25 000c 48897590 		movq	%rsi, -112(%rbp)
  26 0010 48895588 		movq	%rdx, -120(%rbp)
  27              		.loc 1 31 0
  28 0014 64488B04 		movq	%fs:40, %rax
  28      25280000 
  28      00
  29 001d 488945F8 		movq	%rax, -8(%rbp)
  30 0021 31C0     		xorl	%eax, %eax
  32:fx2.c         **** 	FLStatus flStatus, retVal = FL_SUCCESS;
  31              		.loc 1 32 0
  32 0023 C745B400 		movl	$0, -76(%rbp)
  32      000000
  33:fx2.c         **** 	struct Buffer ramBuf = {0,};
  33              		.loc 1 33 0
  34 002a 48C745D0 		movq	$0, -48(%rbp)
  34      00000000 
  35 0032 48C745D8 		movq	$0, -40(%rbp)
  35      00000000 
  36 003a 48C745E0 		movq	$0, -32(%rbp)
  36      00000000 
  37 0042 48C745E8 		movq	$0, -24(%rbp)
  37      00000000 
  34:fx2.c         **** 	BufferStatus bStatus;
  35:fx2.c         **** 	FX2Status fxStatus;
  36:fx2.c         **** 	struct USBDevice *device = NULL;
  38              		.loc 1 36 0
  39 004a 48C745C8 		movq	$0, -56(%rbp)
  39      00000000 
  37:fx2.c         **** 	USBStatus uStatus;
  38:fx2.c         **** 	uint16 newVid, newPid, newDid;
  39:fx2.c         **** 	CHECK_STATUS(
  40              		.loc 1 39 0
  41 0052 488B4590 		movq	-112(%rbp), %rax
  42 0056 4889C7   		movq	%rax, %rdi
  43 0059 E8000000 		call	usbValidateVidPid@PLT
  43      00
  44 005e 83F001   		xorl	$1, %eax
  45 0061 84C0     		testb	%al, %al
  46 0063 7428     		je	.L2
  47              		.loc 1 39 0 is_stmt 0 discriminator 1
  48 0065 488B5590 		movq	-112(%rbp), %rdx
  49 0069 488B4588 		movq	-120(%rbp), %rax
  50 006d 488D3500 		leaq	.LC0(%rip), %rsi
  50      000000
  51 0074 4889C7   		movq	%rax, %rdi
  52 0077 B8000000 		movl	$0, %eax
  52      00
  53 007c E8000000 		call	errRender@PLT
  53      00
  54 0081 C745B402 		movl	$2, -76(%rbp)
  54      000000
  55 0088 E9970100 		jmp	.L3
  55      00
  56              	.L2:
  40:fx2.c         **** 		!usbValidateVidPid(newVidPid), FL_USB_ERR, cleanup,
  41:fx2.c         **** 		"flLoadStandardFirmware(): The supplied VID:PID:DID \"%s\" is invalid; it should look like 1D50:6
  42:fx2.c         **** 		newVidPid);
  43:fx2.c         **** 	newVid = (uint16)strtoul(newVidPid, NULL, 16);
  57              		.loc 1 43 0 is_stmt 1
  58 008d 488B4590 		movq	-112(%rbp), %rax
  59 0091 BA100000 		movl	$16, %edx
  59      00
  60 0096 BE000000 		movl	$0, %esi
  60      00
  61 009b 4889C7   		movq	%rax, %rdi
  62 009e E8000000 		call	strtoul@PLT
  62      00
  63 00a3 668945AE 		movw	%ax, -82(%rbp)
  44:fx2.c         **** 	newPid = (uint16)strtoul(newVidPid+5, NULL, 16);
  64              		.loc 1 44 0
  65 00a7 488B4590 		movq	-112(%rbp), %rax
  66 00ab 4883C005 		addq	$5, %rax
  67 00af BA100000 		movl	$16, %edx
  67      00
  68 00b4 BE000000 		movl	$0, %esi
  68      00
  69 00b9 4889C7   		movq	%rax, %rdi
  70 00bc E8000000 		call	strtoul@PLT
  70      00
  71 00c1 668945B0 		movw	%ax, -80(%rbp)
  45:fx2.c         **** 	newDid = (uint16)((strlen(newVidPid) == 14) ? strtoul(newVidPid+10, NULL, 16) : 0x0000);
  72              		.loc 1 45 0
  73 00c5 488B4590 		movq	-112(%rbp), %rax
  74 00c9 4889C7   		movq	%rax, %rdi
  75 00cc E8000000 		call	strlen@PLT
  75      00
  76 00d1 4883F80E 		cmpq	$14, %rax
  77 00d5 751C     		jne	.L4
  78              		.loc 1 45 0 is_stmt 0 discriminator 1
  79 00d7 488B4590 		movq	-112(%rbp), %rax
  80 00db 4883C00A 		addq	$10, %rax
  81 00df BA100000 		movl	$16, %edx
  81      00
  82 00e4 BE000000 		movl	$0, %esi
  82      00
  83 00e9 4889C7   		movq	%rax, %rdi
  84 00ec E8000000 		call	strtoul@PLT
  84      00
  85 00f1 EB05     		jmp	.L5
  86              	.L4:
  87              		.loc 1 45 0 discriminator 2
  88 00f3 B8000000 		movl	$0, %eax
  88      00
  89              	.L5:
  90              		.loc 1 45 0 discriminator 4
  91 00f8 668945B2 		movw	%ax, -78(%rbp)
  46:fx2.c         **** 	uStatus = usbOpenDevice(curVidPid, 1, 0, 0, &device, error);
  92              		.loc 1 46 0 is_stmt 1 discriminator 4
  93 00fc 488B4D88 		movq	-120(%rbp), %rcx
  94 0100 488D55C8 		leaq	-56(%rbp), %rdx
  95 0104 488B4598 		movq	-104(%rbp), %rax
  96 0108 4989C9   		movq	%rcx, %r9
  97 010b 4989D0   		movq	%rdx, %r8
  98 010e B9000000 		movl	$0, %ecx
  98      00
  99 0113 BA000000 		movl	$0, %edx
  99      00
 100 0118 BE010000 		movl	$1, %esi
 100      00
 101 011d 4889C7   		movq	%rax, %rdi
 102 0120 E8000000 		call	usbOpenDevice@PLT
 102      00
 103 0125 8945B8   		movl	%eax, -72(%rbp)
  47:fx2.c         **** 	CHECK_STATUS(uStatus, FL_USB_ERR, cleanup, "flLoadStandardFirmware()");
 104              		.loc 1 47 0 discriminator 4
 105 0128 837DB800 		cmpl	$0, -72(%rbp)
 106 012c 741F     		je	.L6
 107              		.loc 1 47 0 is_stmt 0 discriminator 1
 108 012e 488B4588 		movq	-120(%rbp), %rax
 109 0132 488D3500 		leaq	.LC1(%rip), %rsi
 109      000000
 110 0139 4889C7   		movq	%rax, %rdi
 111 013c E8000000 		call	errPrefix@PLT
 111      00
 112 0141 C745B402 		movl	$2, -76(%rbp)
 112      000000
 113 0148 E9D70000 		jmp	.L3
 113      00
 114              	.L6:
  48:fx2.c         **** 	bStatus = bufInitialise(&ramBuf, 0x4000, 0x00, error);
 115              		.loc 1 48 0 is_stmt 1
 116 014d 488B5588 		movq	-120(%rbp), %rdx
 117 0151 488D45D0 		leaq	-48(%rbp), %rax
 118 0155 4889D1   		movq	%rdx, %rcx
 119 0158 BA000000 		movl	$0, %edx
 119      00
 120 015d BE004000 		movl	$16384, %esi
 120      00
 121 0162 4889C7   		movq	%rax, %rdi
 122 0165 E8000000 		call	bufInitialise@PLT
 122      00
 123 016a 8945BC   		movl	%eax, -68(%rbp)
  49:fx2.c         **** 	CHECK_STATUS(bStatus, FL_ALLOC_ERR, cleanup, "flLoadStandardFirmware()");
 124              		.loc 1 49 0
 125 016d 837DBC00 		cmpl	$0, -68(%rbp)
 126 0171 741F     		je	.L7
 127              		.loc 1 49 0 is_stmt 0 discriminator 1
 128 0173 488B4588 		movq	-120(%rbp), %rax
 129 0177 488D3500 		leaq	.LC1(%rip), %rsi
 129      000000
 130 017e 4889C7   		movq	%rax, %rdi
 131 0181 E8000000 		call	errPrefix@PLT
 131      00
 132 0186 C745B401 		movl	$1, -76(%rbp)
 132      000000
 133 018d E9920000 		jmp	.L3
 133      00
 134              	.L7:
  50:fx2.c         **** 	flStatus = copyFirmwareAndRewriteIDs(
 135              		.loc 1 50 0 is_stmt 1
 136 0192 0FB74DB2 		movzwl	-78(%rbp), %ecx
 137 0196 0FB755B0 		movzwl	-80(%rbp), %edx
 138 019a 0FB745AE 		movzwl	-82(%rbp), %eax
 139 019e 488B7D88 		movq	-120(%rbp), %rdi
 140 01a2 488D75D0 		leaq	-48(%rbp), %rsi
 141 01a6 4989F9   		movq	%rdi, %r9
 142 01a9 4989F0   		movq	%rsi, %r8
 143 01ac 89C6     		movl	%eax, %esi
 144 01ae 488B0500 		movq	ramFirmware@GOTPCREL(%rip), %rax
 144      000000
 145 01b5 4889C7   		movq	%rax, %rdi
 146 01b8 E8000000 		call	copyFirmwareAndRewriteIDs@PLT
 146      00
 147 01bd 8945C0   		movl	%eax, -64(%rbp)
  51:fx2.c         **** 		&ramFirmware, newVid, newPid, newDid,
  52:fx2.c         **** 		&ramBuf, error);
  53:fx2.c         **** 	CHECK_STATUS(flStatus, flStatus, cleanup, "flLoadStandardFirmware()");
 148              		.loc 1 53 0
 149 01c0 837DC000 		cmpl	$0, -64(%rbp)
 150 01c4 741B     		je	.L8
 151              		.loc 1 53 0 is_stmt 0 discriminator 1
 152 01c6 488B4588 		movq	-120(%rbp), %rax
 153 01ca 488D3500 		leaq	.LC1(%rip), %rsi
 153      000000
 154 01d1 4889C7   		movq	%rax, %rdi
 155 01d4 E8000000 		call	errPrefix@PLT
 155      00
 156 01d9 8B45C0   		movl	-64(%rbp), %eax
 157 01dc 8945B4   		movl	%eax, -76(%rbp)
 158 01df EB43     		jmp	.L3
 159              	.L8:
  54:fx2.c         **** 	fxStatus = fx2WriteRAM(device, ramBuf.data, (uint32)ramBuf.length, error);
 160              		.loc 1 54 0 is_stmt 1
 161 01e1 488B45D8 		movq	-40(%rbp), %rax
 162 01e5 89C7     		movl	%eax, %edi
 163 01e7 488B75D0 		movq	-48(%rbp), %rsi
 164 01eb 488B45C8 		movq	-56(%rbp), %rax
 165 01ef 488B5588 		movq	-120(%rbp), %rdx
 166 01f3 4889D1   		movq	%rdx, %rcx
 167 01f6 89FA     		movl	%edi, %edx
 168 01f8 4889C7   		movq	%rax, %rdi
 169 01fb E8000000 		call	fx2WriteRAM@PLT
 169      00
 170 0200 8945C4   		movl	%eax, -60(%rbp)
  55:fx2.c         **** 	CHECK_STATUS(fxStatus, FL_FX2_ERR, cleanup, "flLoadStandardFirmware()");
 171              		.loc 1 55 0
 172 0203 837DC400 		cmpl	$0, -60(%rbp)
 173 0207 741B     		je	.L3
 174              		.loc 1 55 0 is_stmt 0 discriminator 1
 175 0209 488B4588 		movq	-120(%rbp), %rax
 176 020d 488D3500 		leaq	.LC1(%rip), %rsi
 176      000000
 177 0214 4889C7   		movq	%rax, %rdi
 178 0217 E8000000 		call	errPrefix@PLT
 178      00
 179 021c C745B405 		movl	$5, -76(%rbp)
 179      000000
 180 0223 90       		nop
 181              	.L3:
  56:fx2.c         **** cleanup:
  57:fx2.c         **** 	bufDestroy(&ramBuf);
 182              		.loc 1 57 0 is_stmt 1
 183 0224 488D45D0 		leaq	-48(%rbp), %rax
 184 0228 4889C7   		movq	%rax, %rdi
 185 022b E8000000 		call	bufDestroy@PLT
 185      00
  58:fx2.c         **** 	if ( device ) {
 186              		.loc 1 58 0
 187 0230 488B45C8 		movq	-56(%rbp), %rax
 188 0234 4885C0   		testq	%rax, %rax
 189 0237 7411     		je	.L9
  59:fx2.c         **** 		usbCloseDevice(device, 0);
 190              		.loc 1 59 0
 191 0239 488B45C8 		movq	-56(%rbp), %rax
 192 023d BE000000 		movl	$0, %esi
 192      00
 193 0242 4889C7   		movq	%rax, %rdi
 194 0245 E8000000 		call	usbCloseDevice@PLT
 194      00
 195              	.L9:
  60:fx2.c         **** 	}
  61:fx2.c         **** 	return retVal;
 196              		.loc 1 61 0
 197 024a 8B45B4   		movl	-76(%rbp), %eax
  62:fx2.c         **** }
 198              		.loc 1 62 0
 199 024d 488B4DF8 		movq	-8(%rbp), %rcx
 200 0251 6448330C 		xorq	%fs:40, %rcx
 200      25280000 
 200      00
 201 025a 7405     		je	.L11
 202 025c E8000000 		call	__stack_chk_fail@PLT
 202      00
 203              	.L11:
 204 0261 C9       		leave
 205              		.cfi_def_cfa 7, 8
 206 0262 C3       		ret
 207              		.cfi_endproc
 208              	.LFE4:
 210              		.section	.rodata
 211 008d 000000   		.align 8
 212              	.LC2:
 213 0090 666C466C 		.string	"flFlashStandardFirmware(): The supplied new VID:PID \"%s\" is invalid; it should look lik
 213      61736853 
 213      74616E64 
 213      61726446 
 213      69726D77 
 214              	.LC3:
 215 0105 666C466C 		.string	"flFlashStandardFirmware()"
 215      61736853 
 215      74616E64 
 215      61726446 
 215      69726D77 
 216              		.text
 217              		.globl	flFlashStandardFirmware
 219              	flFlashStandardFirmware:
 220              	.LFB5:
  63:fx2.c         **** 
  64:fx2.c         **** // Write the standard firmware into the FX2's external EEPROM
  65:fx2.c         **** DLLEXPORT(FLStatus) flFlashStandardFirmware(
  66:fx2.c         **** 	struct FLContext *handle, const char *newVidPid, const char **error)
  67:fx2.c         **** {
 221              		.loc 1 67 0
 222              		.cfi_startproc
 223 0263 55       		pushq	%rbp
 224              		.cfi_def_cfa_offset 16
 225              		.cfi_offset 6, -16
 226 0264 4889E5   		movq	%rsp, %rbp
 227              		.cfi_def_cfa_register 6
 228 0267 4883EC70 		subq	$112, %rsp
 229 026b 48897DA8 		movq	%rdi, -88(%rbp)
 230 026f 488975A0 		movq	%rsi, -96(%rbp)
 231 0273 48895598 		movq	%rdx, -104(%rbp)
 232              		.loc 1 67 0
 233 0277 64488B04 		movq	%fs:40, %rax
 233      25280000 
 233      00
 234 0280 488945F8 		movq	%rax, -8(%rbp)
 235 0284 31C0     		xorl	%eax, %eax
  68:fx2.c         **** 	FLStatus flStatus, retVal = FL_SUCCESS;
 236              		.loc 1 68 0
 237 0286 C745C000 		movl	$0, -64(%rbp)
 237      000000
  69:fx2.c         **** 	struct Buffer i2cBuf = {0,};
 238              		.loc 1 69 0
 239 028d 48C745D0 		movq	$0, -48(%rbp)
 239      00000000 
 240 0295 48C745D8 		movq	$0, -40(%rbp)
 240      00000000 
 241 029d 48C745E0 		movq	$0, -32(%rbp)
 241      00000000 
 242 02a5 48C745E8 		movq	$0, -24(%rbp)
 242      00000000 
  70:fx2.c         **** 	BufferStatus bStatus;
  71:fx2.c         **** 	FX2Status fxStatus;
  72:fx2.c         **** 	uint16 newVid, newPid, newDid;
  73:fx2.c         **** 	CHECK_STATUS(
 243              		.loc 1 73 0
 244 02ad 488B45A0 		movq	-96(%rbp), %rax
 245 02b1 4889C7   		movq	%rax, %rdi
 246 02b4 E8000000 		call	usbValidateVidPid@PLT
 246      00
 247 02b9 83F001   		xorl	$1, %eax
 248 02bc 84C0     		testb	%al, %al
 249 02be 7428     		je	.L13
 250              		.loc 1 73 0 is_stmt 0 discriminator 1
 251 02c0 488B55A0 		movq	-96(%rbp), %rdx
 252 02c4 488B4598 		movq	-104(%rbp), %rax
 253 02c8 488D3500 		leaq	.LC2(%rip), %rsi
 253      000000
 254 02cf 4889C7   		movq	%rax, %rdi
 255 02d2 B8000000 		movl	$0, %eax
 255      00
 256 02d7 E8000000 		call	errRender@PLT
 256      00
 257 02dc C745C002 		movl	$2, -64(%rbp)
 257      000000
 258 02e3 E9490100 		jmp	.L14
 258      00
 259              	.L13:
  74:fx2.c         **** 		!usbValidateVidPid(newVidPid), FL_USB_ERR, cleanup,
  75:fx2.c         **** 		"flFlashStandardFirmware(): The supplied new VID:PID \"%s\" is invalid; it should look like 1D50:
  76:fx2.c         **** 		newVidPid);
  77:fx2.c         **** 	newVid = (uint16)strtoul(newVidPid, NULL, 16);
 260              		.loc 1 77 0 is_stmt 1
 261 02e8 488B45A0 		movq	-96(%rbp), %rax
 262 02ec BA100000 		movl	$16, %edx
 262      00
 263 02f1 BE000000 		movl	$0, %esi
 263      00
 264 02f6 4889C7   		movq	%rax, %rdi
 265 02f9 E8000000 		call	strtoul@PLT
 265      00
 266 02fe 668945BA 		movw	%ax, -70(%rbp)
  78:fx2.c         **** 	newPid = (uint16)strtoul(newVidPid+5, NULL, 16);
 267              		.loc 1 78 0
 268 0302 488B45A0 		movq	-96(%rbp), %rax
 269 0306 4883C005 		addq	$5, %rax
 270 030a BA100000 		movl	$16, %edx
 270      00
 271 030f BE000000 		movl	$0, %esi
 271      00
 272 0314 4889C7   		movq	%rax, %rdi
 273 0317 E8000000 		call	strtoul@PLT
 273      00
 274 031c 668945BC 		movw	%ax, -68(%rbp)
  79:fx2.c         **** 	newDid = (uint16)((strlen(newVidPid) == 14) ? strtoul(newVidPid+10, NULL, 16) : 0x0000);
 275              		.loc 1 79 0
 276 0320 488B45A0 		movq	-96(%rbp), %rax
 277 0324 4889C7   		movq	%rax, %rdi
 278 0327 E8000000 		call	strlen@PLT
 278      00
 279 032c 4883F80E 		cmpq	$14, %rax
 280 0330 751C     		jne	.L15
 281              		.loc 1 79 0 is_stmt 0 discriminator 1
 282 0332 488B45A0 		movq	-96(%rbp), %rax
 283 0336 4883C00A 		addq	$10, %rax
 284 033a BA100000 		movl	$16, %edx
 284      00
 285 033f BE000000 		movl	$0, %esi
 285      00
 286 0344 4889C7   		movq	%rax, %rdi
 287 0347 E8000000 		call	strtoul@PLT
 287      00
 288 034c EB05     		jmp	.L16
 289              	.L15:
 290              		.loc 1 79 0 discriminator 2
 291 034e B8000000 		movl	$0, %eax
 291      00
 292              	.L16:
 293              		.loc 1 79 0 discriminator 4
 294 0353 668945BE 		movw	%ax, -66(%rbp)
  80:fx2.c         **** 	bStatus = bufInitialise(&i2cBuf, 0x4000, 0x00, error);
 295              		.loc 1 80 0 is_stmt 1 discriminator 4
 296 0357 488B5598 		movq	-104(%rbp), %rdx
 297 035b 488D45D0 		leaq	-48(%rbp), %rax
 298 035f 4889D1   		movq	%rdx, %rcx
 299 0362 BA000000 		movl	$0, %edx
 299      00
 300 0367 BE004000 		movl	$16384, %esi
 300      00
 301 036c 4889C7   		movq	%rax, %rdi
 302 036f E8000000 		call	bufInitialise@PLT
 302      00
 303 0374 8945C4   		movl	%eax, -60(%rbp)
  81:fx2.c         **** 	CHECK_STATUS(bStatus, FL_ALLOC_ERR, cleanup, "flFlashStandardFirmware()");
 304              		.loc 1 81 0 discriminator 4
 305 0377 837DC400 		cmpl	$0, -60(%rbp)
 306 037b 741F     		je	.L17
 307              		.loc 1 81 0 is_stmt 0 discriminator 1
 308 037d 488B4598 		movq	-104(%rbp), %rax
 309 0381 488D3500 		leaq	.LC3(%rip), %rsi
 309      000000
 310 0388 4889C7   		movq	%rax, %rdi
 311 038b E8000000 		call	errPrefix@PLT
 311      00
 312 0390 C745C001 		movl	$1, -64(%rbp)
 312      000000
 313 0397 E9950000 		jmp	.L14
 313      00
 314              	.L17:
  82:fx2.c         **** 	flStatus = copyFirmwareAndRewriteIDs(
 315              		.loc 1 82 0 is_stmt 1
 316 039c 0FB74DBE 		movzwl	-66(%rbp), %ecx
 317 03a0 0FB755BC 		movzwl	-68(%rbp), %edx
 318 03a4 0FB745BA 		movzwl	-70(%rbp), %eax
 319 03a8 488B7D98 		movq	-104(%rbp), %rdi
 320 03ac 488D75D0 		leaq	-48(%rbp), %rsi
 321 03b0 4989F9   		movq	%rdi, %r9
 322 03b3 4989F0   		movq	%rsi, %r8
 323 03b6 89C6     		movl	%eax, %esi
 324 03b8 488B0500 		movq	eepromNoBootFirmware@GOTPCREL(%rip), %rax
 324      000000
 325 03bf 4889C7   		movq	%rax, %rdi
 326 03c2 E8000000 		call	copyFirmwareAndRewriteIDs@PLT
 326      00
 327 03c7 8945C8   		movl	%eax, -56(%rbp)
  83:fx2.c         **** 		&eepromNoBootFirmware, newVid, newPid, newDid,
  84:fx2.c         **** 		&i2cBuf, error);
  85:fx2.c         **** 	CHECK_STATUS(flStatus, flStatus, cleanup, "flFlashStandardFirmware()");
 328              		.loc 1 85 0
 329 03ca 837DC800 		cmpl	$0, -56(%rbp)
 330 03ce 741B     		je	.L18
 331              		.loc 1 85 0 is_stmt 0 discriminator 1
 332 03d0 488B4598 		movq	-104(%rbp), %rax
 333 03d4 488D3500 		leaq	.LC3(%rip), %rsi
 333      000000
 334 03db 4889C7   		movq	%rax, %rdi
 335 03de E8000000 		call	errPrefix@PLT
 335      00
 336 03e3 8B45C8   		movl	-56(%rbp), %eax
 337 03e6 8945C0   		movl	%eax, -64(%rbp)
 338 03e9 EB46     		jmp	.L14
 339              	.L18:
  86:fx2.c         **** 
  87:fx2.c         **** 	fxStatus = fx2WriteEEPROM(handle->device, i2cBuf.data, (uint32)i2cBuf.length, error);
 340              		.loc 1 87 0 is_stmt 1
 341 03eb 488B45D8 		movq	-40(%rbp), %rax
 342 03ef 89C7     		movl	%eax, %edi
 343 03f1 488B75D0 		movq	-48(%rbp), %rsi
 344 03f5 488B45A8 		movq	-88(%rbp), %rax
 345 03f9 488B00   		movq	(%rax), %rax
 346 03fc 488B5598 		movq	-104(%rbp), %rdx
 347 0400 4889D1   		movq	%rdx, %rcx
 348 0403 89FA     		movl	%edi, %edx
 349 0405 4889C7   		movq	%rax, %rdi
 350 0408 E8000000 		call	fx2WriteEEPROM@PLT
 350      00
 351 040d 8945CC   		movl	%eax, -52(%rbp)
  88:fx2.c         **** 	CHECK_STATUS(fxStatus, FL_FX2_ERR, cleanup, "flFlashStandardFirmware()");
 352              		.loc 1 88 0
 353 0410 837DCC00 		cmpl	$0, -52(%rbp)
 354 0414 741B     		je	.L14
 355              		.loc 1 88 0 is_stmt 0 discriminator 1
 356 0416 488B4598 		movq	-104(%rbp), %rax
 357 041a 488D3500 		leaq	.LC3(%rip), %rsi
 357      000000
 358 0421 4889C7   		movq	%rax, %rdi
 359 0424 E8000000 		call	errPrefix@PLT
 359      00
 360 0429 C745C005 		movl	$5, -64(%rbp)
 360      000000
 361 0430 90       		nop
 362              	.L14:
  89:fx2.c         **** cleanup:
  90:fx2.c         **** 	bufDestroy(&i2cBuf);
 363              		.loc 1 90 0 is_stmt 1
 364 0431 488D45D0 		leaq	-48(%rbp), %rax
 365 0435 4889C7   		movq	%rax, %rdi
 366 0438 E8000000 		call	bufDestroy@PLT
 366      00
  91:fx2.c         **** 	return retVal;
 367              		.loc 1 91 0
 368 043d 8B45C0   		movl	-64(%rbp), %eax
  92:fx2.c         **** }
 369              		.loc 1 92 0
 370 0440 488B4DF8 		movq	-8(%rbp), %rcx
 371 0444 6448330C 		xorq	%fs:40, %rcx
 371      25280000 
 371      00
 372 044d 7405     		je	.L20
 373 044f E8000000 		call	__stack_chk_fail@PLT
 373      00
 374              	.L20:
 375 0454 C9       		leave
 376              		.cfi_def_cfa 7, 8
 377 0455 C3       		ret
 378              		.cfi_endproc
 379              	.LFE5:
 381              		.section	.rodata
 382              	.LC4:
 383 011f 2E686578 		.string	".hex"
 383      00
 384              	.LC5:
 385 0124 2E696878 		.string	".ihx"
 385      00
 386 0129 00000000 		.align 8
 386      000000
 387              	.LC6:
 388 0130 666C4C6F 		.string	"flLoadCustomFirmware(): Filename should have .hex or .ihx extension"
 388      61644375 
 388      73746F6D 
 388      4669726D 
 388      77617265 
 389              	.LC7:
 390 0174 666C4C6F 		.string	"flLoadCustomFirmware()"
 390      61644375 
 390      73746F6D 
 390      4669726D 
 390      77617265 
 391              		.text
 392              		.globl	flLoadCustomFirmware
 394              	flLoadCustomFirmware:
 395              	.LFB6:
  93:fx2.c         **** 
  94:fx2.c         **** // Load custom firmware (.hex) into the FX2's RAM
  95:fx2.c         **** DLLEXPORT(FLStatus) flLoadCustomFirmware(
  96:fx2.c         **** 	const char *curVidPid, const char *fwFile, const char **error)
  97:fx2.c         **** {
 396              		.loc 1 97 0
 397              		.cfi_startproc
 398 0456 55       		pushq	%rbp
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 6, -16
 401 0457 4889E5   		movq	%rsp, %rbp
 402              		.cfi_def_cfa_register 6
 403 045a 4883C480 		addq	$-128, %rsp
 404 045e 48897D98 		movq	%rdi, -104(%rbp)
 405 0462 48897590 		movq	%rsi, -112(%rbp)
 406 0466 48895588 		movq	%rdx, -120(%rbp)
 407              		.loc 1 97 0
 408 046a 64488B04 		movq	%fs:40, %rax
 408      25280000 
 408      00
 409 0473 488945F8 		movq	%rax, -8(%rbp)
 410 0477 31C0     		xorl	%eax, %eax
  98:fx2.c         **** 	FLStatus retVal = FL_SUCCESS;
 411              		.loc 1 98 0
 412 0479 C745B000 		movl	$0, -80(%rbp)
 412      000000
  99:fx2.c         **** 	struct Buffer fwBuf = {0,};
 413              		.loc 1 99 0
 414 0480 48C745D0 		movq	$0, -48(%rbp)
 414      00000000 
 415 0488 48C745D8 		movq	$0, -40(%rbp)
 415      00000000 
 416 0490 48C745E0 		movq	$0, -32(%rbp)
 416      00000000 
 417 0498 48C745E8 		movq	$0, -24(%rbp)
 417      00000000 
 100:fx2.c         **** 	BufferStatus bStatus;
 101:fx2.c         **** 	FX2Status fxStatus;
 102:fx2.c         **** 	struct USBDevice *device = NULL;
 418              		.loc 1 102 0
 419 04a0 48C745C0 		movq	$0, -64(%rbp)
 419      00000000 
 103:fx2.c         **** 	USBStatus uStatus;
 104:fx2.c         **** 	const char *const ext = fwFile + strlen(fwFile) - 4;
 420              		.loc 1 104 0
 421 04a8 488B4590 		movq	-112(%rbp), %rax
 422 04ac 4889C7   		movq	%rax, %rdi
 423 04af E8000000 		call	strlen@PLT
 423      00
 424 04b4 488D50FC 		leaq	-4(%rax), %rdx
 425 04b8 488B4590 		movq	-112(%rbp), %rax
 426 04bc 4801D0   		addq	%rdx, %rax
 427 04bf 488945C8 		movq	%rax, -56(%rbp)
 105:fx2.c         **** 	const bool isHex = (strcmp(".hex", ext) == 0) || (strcmp(".ihx", ext) == 0);
 428              		.loc 1 105 0
 429 04c3 488B45C8 		movq	-56(%rbp), %rax
 430 04c7 4889C6   		movq	%rax, %rsi
 431 04ca 488D3D00 		leaq	.LC4(%rip), %rdi
 431      000000
 432 04d1 E8000000 		call	strcmp@PLT
 432      00
 433 04d6 85C0     		testl	%eax, %eax
 434 04d8 7417     		je	.L22
 435              		.loc 1 105 0 is_stmt 0 discriminator 2
 436 04da 488B45C8 		movq	-56(%rbp), %rax
 437 04de 4889C6   		movq	%rax, %rsi
 438 04e1 488D3D00 		leaq	.LC5(%rip), %rdi
 438      000000
 439 04e8 E8000000 		call	strcmp@PLT
 439      00
 440 04ed 85C0     		testl	%eax, %eax
 441 04ef 7507     		jne	.L23
 442              	.L22:
 443              		.loc 1 105 0 discriminator 3
 444 04f1 B8010000 		movl	$1, %eax
 444      00
 445 04f6 EB05     		jmp	.L24
 446              	.L23:
 447              		.loc 1 105 0 discriminator 4
 448 04f8 B8000000 		movl	$0, %eax
 448      00
 449              	.L24:
 450              		.loc 1 105 0 discriminator 6
 451 04fd 8845AF   		movb	%al, -81(%rbp)
 452 0500 8065AF01 		andb	$1, -81(%rbp)
 106:fx2.c         **** 	CHECK_STATUS(
 453              		.loc 1 106 0 is_stmt 1 discriminator 6
 454 0504 0FB645AF 		movzbl	-81(%rbp), %eax
 455 0508 83F001   		xorl	$1, %eax
 456 050b 84C0     		testb	%al, %al
 457 050d 741F     		je	.L25
 458              		.loc 1 106 0 is_stmt 0 discriminator 1
 459 050f 488B4588 		movq	-120(%rbp), %rax
 460 0513 488D3500 		leaq	.LC6(%rip), %rsi
 460      000000
 461 051a 4889C7   		movq	%rax, %rdi
 462 051d E8000000 		call	errPrefix@PLT
 462      00
 463 0522 C745B006 		movl	$6, -80(%rbp)
 463      000000
 464 0529 E9170100 		jmp	.L26
 464      00
 465              	.L25:
 107:fx2.c         **** 		!isHex, FL_FILE_ERR, cleanup,
 108:fx2.c         **** 		"flLoadCustomFirmware(): Filename should have .hex or .ihx extension");
 109:fx2.c         **** 	uStatus = usbOpenDevice(curVidPid, 1, 0, 0, &device, error);
 466              		.loc 1 109 0 is_stmt 1
 467 052e 488B4D88 		movq	-120(%rbp), %rcx
 468 0532 488D55C0 		leaq	-64(%rbp), %rdx
 469 0536 488B4598 		movq	-104(%rbp), %rax
 470 053a 4989C9   		movq	%rcx, %r9
 471 053d 4989D0   		movq	%rdx, %r8
 472 0540 B9000000 		movl	$0, %ecx
 472      00
 473 0545 BA000000 		movl	$0, %edx
 473      00
 474 054a BE010000 		movl	$1, %esi
 474      00
 475 054f 4889C7   		movq	%rax, %rdi
 476 0552 E8000000 		call	usbOpenDevice@PLT
 476      00
 477 0557 8945B4   		movl	%eax, -76(%rbp)
 110:fx2.c         **** 	CHECK_STATUS(uStatus, FL_USB_ERR, cleanup, "flLoadCustomFirmware()");
 478              		.loc 1 110 0
 479 055a 837DB400 		cmpl	$0, -76(%rbp)
 480 055e 741F     		je	.L27
 481              		.loc 1 110 0 is_stmt 0 discriminator 1
 482 0560 488B4588 		movq	-120(%rbp), %rax
 483 0564 488D3500 		leaq	.LC7(%rip), %rsi
 483      000000
 484 056b 4889C7   		movq	%rax, %rdi
 485 056e E8000000 		call	errPrefix@PLT
 485      00
 486 0573 C745B002 		movl	$2, -80(%rbp)
 486      000000
 487 057a E9C60000 		jmp	.L26
 487      00
 488              	.L27:
 111:fx2.c         **** 	bStatus = bufInitialise(&fwBuf, 8192, 0x00, error);
 489              		.loc 1 111 0 is_stmt 1
 490 057f 488B5588 		movq	-120(%rbp), %rdx
 491 0583 488D45D0 		leaq	-48(%rbp), %rax
 492 0587 4889D1   		movq	%rdx, %rcx
 493 058a BA000000 		movl	$0, %edx
 493      00
 494 058f BE002000 		movl	$8192, %esi
 494      00
 495 0594 4889C7   		movq	%rax, %rdi
 496 0597 E8000000 		call	bufInitialise@PLT
 496      00
 497 059c 8945B8   		movl	%eax, -72(%rbp)
 112:fx2.c         **** 	CHECK_STATUS(bStatus, FL_ALLOC_ERR, cleanup, "flLoadCustomFirmware()");
 498              		.loc 1 112 0
 499 059f 837DB800 		cmpl	$0, -72(%rbp)
 500 05a3 741F     		je	.L28
 501              		.loc 1 112 0 is_stmt 0 discriminator 1
 502 05a5 488B4588 		movq	-120(%rbp), %rax
 503 05a9 488D3500 		leaq	.LC7(%rip), %rsi
 503      000000
 504 05b0 4889C7   		movq	%rax, %rdi
 505 05b3 E8000000 		call	errPrefix@PLT
 505      00
 506 05b8 C745B001 		movl	$1, -80(%rbp)
 506      000000
 507 05bf E9810000 		jmp	.L26
 507      00
 508              	.L28:
 113:fx2.c         **** 	bStatus = bufReadFromIntelHexFile(&fwBuf, NULL, fwFile, error);
 509              		.loc 1 113 0 is_stmt 1
 510 05c4 488B4D88 		movq	-120(%rbp), %rcx
 511 05c8 488B5590 		movq	-112(%rbp), %rdx
 512 05cc 488D45D0 		leaq	-48(%rbp), %rax
 513 05d0 BE000000 		movl	$0, %esi
 513      00
 514 05d5 4889C7   		movq	%rax, %rdi
 515 05d8 E8000000 		call	bufReadFromIntelHexFile@PLT
 515      00
 516 05dd 8945B8   		movl	%eax, -72(%rbp)
 114:fx2.c         **** 	CHECK_STATUS(bStatus, FL_FILE_ERR, cleanup, "flLoadCustomFirmware()");
 517              		.loc 1 114 0
 518 05e0 837DB800 		cmpl	$0, -72(%rbp)
 519 05e4 741C     		je	.L29
 520              		.loc 1 114 0 is_stmt 0 discriminator 1
 521 05e6 488B4588 		movq	-120(%rbp), %rax
 522 05ea 488D3500 		leaq	.LC7(%rip), %rsi
 522      000000
 523 05f1 4889C7   		movq	%rax, %rdi
 524 05f4 E8000000 		call	errPrefix@PLT
 524      00
 525 05f9 C745B006 		movl	$6, -80(%rbp)
 525      000000
 526 0600 EB43     		jmp	.L26
 527              	.L29:
 115:fx2.c         **** 	fxStatus = fx2WriteRAM(device, fwBuf.data, (uint32)fwBuf.length, error);
 528              		.loc 1 115 0 is_stmt 1
 529 0602 488B45D8 		movq	-40(%rbp), %rax
 530 0606 89C7     		movl	%eax, %edi
 531 0608 488B75D0 		movq	-48(%rbp), %rsi
 532 060c 488B45C0 		movq	-64(%rbp), %rax
 533 0610 488B5588 		movq	-120(%rbp), %rdx
 534 0614 4889D1   		movq	%rdx, %rcx
 535 0617 89FA     		movl	%edi, %edx
 536 0619 4889C7   		movq	%rax, %rdi
 537 061c E8000000 		call	fx2WriteRAM@PLT
 537      00
 538 0621 8945BC   		movl	%eax, -68(%rbp)
 116:fx2.c         **** 	CHECK_STATUS(fxStatus, FL_FX2_ERR, cleanup, "flLoadCustomFirmware()");
 539              		.loc 1 116 0
 540 0624 837DBC00 		cmpl	$0, -68(%rbp)
 541 0628 741B     		je	.L26
 542              		.loc 1 116 0 is_stmt 0 discriminator 1
 543 062a 488B4588 		movq	-120(%rbp), %rax
 544 062e 488D3500 		leaq	.LC7(%rip), %rsi
 544      000000
 545 0635 4889C7   		movq	%rax, %rdi
 546 0638 E8000000 		call	errPrefix@PLT
 546      00
 547 063d C745B005 		movl	$5, -80(%rbp)
 547      000000
 548 0644 90       		nop
 549              	.L26:
 117:fx2.c         **** cleanup:
 118:fx2.c         **** 	bufDestroy(&fwBuf);
 550              		.loc 1 118 0 is_stmt 1
 551 0645 488D45D0 		leaq	-48(%rbp), %rax
 552 0649 4889C7   		movq	%rax, %rdi
 553 064c E8000000 		call	bufDestroy@PLT
 553      00
 119:fx2.c         **** 	if ( device ) {
 554              		.loc 1 119 0
 555 0651 488B45C0 		movq	-64(%rbp), %rax
 556 0655 4885C0   		testq	%rax, %rax
 557 0658 7411     		je	.L30
 120:fx2.c         **** 		usbCloseDevice(device, 0);
 558              		.loc 1 120 0
 559 065a 488B45C0 		movq	-64(%rbp), %rax
 560 065e BE000000 		movl	$0, %esi
 560      00
 561 0663 4889C7   		movq	%rax, %rdi
 562 0666 E8000000 		call	usbCloseDevice@PLT
 562      00
 563              	.L30:
 121:fx2.c         **** 	}
 122:fx2.c         **** 	return retVal;
 564              		.loc 1 122 0
 565 066b 8B45B0   		movl	-80(%rbp), %eax
 123:fx2.c         **** }
 566              		.loc 1 123 0
 567 066e 488B4DF8 		movq	-8(%rbp), %rcx
 568 0672 6448330C 		xorq	%fs:40, %rcx
 568      25280000 
 568      00
 569 067b 7405     		je	.L32
 570 067d E8000000 		call	__stack_chk_fail@PLT
 570      00
 571              	.L32:
 572 0682 C9       		leave
 573              		.cfi_def_cfa 7, 8
 574 0683 C3       		ret
 575              		.cfi_endproc
 576              	.LFE6:
 578              		.section	.rodata
 579              	.LC8:
 580 018b 2E696963 		.string	".iic"
 580      00
 581              		.align 8
 582              	.LC9:
 583 0190 666C466C 		.string	"flFlashCustomFirmware(): Filename should have .hex, .ihx or .iic extension"
 583      61736843 
 583      7573746F 
 583      6D466972 
 583      6D776172 
 584              	.LC10:
 585 01db 666C466C 		.string	"flFlashCustomFirmware()"
 585      61736843 
 585      7573746F 
 585      6D466972 
 585      6D776172 
 586              		.text
 587              		.globl	flFlashCustomFirmware
 589              	flFlashCustomFirmware:
 590              	.LFB7:
 124:fx2.c         **** 
 125:fx2.c         **** // Flash custom firmware (.hex or .iic) into the FX2's EEPROM
 126:fx2.c         **** DLLEXPORT(FLStatus) flFlashCustomFirmware(
 127:fx2.c         **** 	struct FLContext *handle, const char *fwFile, const char **error)
 128:fx2.c         **** {
 591              		.loc 1 128 0
 592              		.cfi_startproc
 593 0684 55       		pushq	%rbp
 594              		.cfi_def_cfa_offset 16
 595              		.cfi_offset 6, -16
 596 0685 4889E5   		movq	%rsp, %rbp
 597              		.cfi_def_cfa_register 6
 598 0688 4881ECB0 		subq	$176, %rsp
 598      000000
 599 068f 4889BD68 		movq	%rdi, -152(%rbp)
 599      FFFFFF
 600 0696 4889B560 		movq	%rsi, -160(%rbp)
 600      FFFFFF
 601 069d 48899558 		movq	%rdx, -168(%rbp)
 601      FFFFFF
 602              		.loc 1 128 0
 603 06a4 64488B04 		movq	%fs:40, %rax
 603      25280000 
 603      00
 604 06ad 488945F8 		movq	%rax, -8(%rbp)
 605 06b1 31C0     		xorl	%eax, %eax
 129:fx2.c         **** 	FLStatus retVal = FL_SUCCESS;
 606              		.loc 1 129 0
 607 06b3 C78578FF 		movl	$0, -136(%rbp)
 607      FFFF0000 
 607      0000
 130:fx2.c         **** 	struct Buffer fwData = {0,};
 608              		.loc 1 130 0
 609 06bd 48C74590 		movq	$0, -112(%rbp)
 609      00000000 
 610 06c5 48C74598 		movq	$0, -104(%rbp)
 610      00000000 
 611 06cd 48C745A0 		movq	$0, -96(%rbp)
 611      00000000 
 612 06d5 48C745A8 		movq	$0, -88(%rbp)
 612      00000000 
 131:fx2.c         **** 	struct Buffer fwMask = {0,};
 613              		.loc 1 131 0
 614 06dd 48C745B0 		movq	$0, -80(%rbp)
 614      00000000 
 615 06e5 48C745B8 		movq	$0, -72(%rbp)
 615      00000000 
 616 06ed 48C745C0 		movq	$0, -64(%rbp)
 616      00000000 
 617 06f5 48C745C8 		movq	$0, -56(%rbp)
 617      00000000 
 132:fx2.c         **** 	struct Buffer iicBuf = {0,};
 618              		.loc 1 132 0
 619 06fd 48C745D0 		movq	$0, -48(%rbp)
 619      00000000 
 620 0705 48C745D8 		movq	$0, -40(%rbp)
 620      00000000 
 621 070d 48C745E0 		movq	$0, -32(%rbp)
 621      00000000 
 622 0715 48C745E8 		movq	$0, -24(%rbp)
 622      00000000 
 133:fx2.c         **** 	BufferStatus bStatus;
 134:fx2.c         **** 	FX2Status fxStatus;
 135:fx2.c         **** 	I2CStatus iStatus;
 136:fx2.c         **** 	const char *const ext = fwFile + strlen(fwFile) - 4;
 623              		.loc 1 136 0
 624 071d 488B8560 		movq	-160(%rbp), %rax
 624      FFFFFF
 625 0724 4889C7   		movq	%rax, %rdi
 626 0727 E8000000 		call	strlen@PLT
 626      00
 627 072c 488D50FC 		leaq	-4(%rax), %rdx
 628 0730 488B8560 		movq	-160(%rbp), %rax
 628      FFFFFF
 629 0737 4801D0   		addq	%rdx, %rax
 630 073a 48894588 		movq	%rax, -120(%rbp)
 137:fx2.c         **** 	const bool isHex = (strcmp(".hex", ext) == 0) || (strcmp(".ihx", ext) == 0);
 631              		.loc 1 137 0
 632 073e 488B4588 		movq	-120(%rbp), %rax
 633 0742 4889C6   		movq	%rax, %rsi
 634 0745 488D3D00 		leaq	.LC4(%rip), %rdi
 634      000000
 635 074c E8000000 		call	strcmp@PLT
 635      00
 636 0751 85C0     		testl	%eax, %eax
 637 0753 7417     		je	.L34
 638              		.loc 1 137 0 is_stmt 0 discriminator 2
 639 0755 488B4588 		movq	-120(%rbp), %rax
 640 0759 4889C6   		movq	%rax, %rsi
 641 075c 488D3D00 		leaq	.LC5(%rip), %rdi
 641      000000
 642 0763 E8000000 		call	strcmp@PLT
 642      00
 643 0768 85C0     		testl	%eax, %eax
 644 076a 7507     		jne	.L35
 645              	.L34:
 646              		.loc 1 137 0 discriminator 3
 647 076c B8010000 		movl	$1, %eax
 647      00
 648 0771 EB05     		jmp	.L36
 649              	.L35:
 650              		.loc 1 137 0 discriminator 4
 651 0773 B8000000 		movl	$0, %eax
 651      00
 652              	.L36:
 653              		.loc 1 137 0 discriminator 6
 654 0778 888576FF 		movb	%al, -138(%rbp)
 654      FFFF
 655 077e 80A576FF 		andb	$1, -138(%rbp)
 655      FFFF01
 138:fx2.c         **** 	const bool isI2C = (strcmp(".iic", ext) == 0);
 656              		.loc 1 138 0 is_stmt 1 discriminator 6
 657 0785 488B4588 		movq	-120(%rbp), %rax
 658 0789 4889C6   		movq	%rax, %rsi
 659 078c 488D3D00 		leaq	.LC8(%rip), %rdi
 659      000000
 660 0793 E8000000 		call	strcmp@PLT
 660      00
 661 0798 85C0     		testl	%eax, %eax
 662 079a 0F94C0   		sete	%al
 663 079d 888577FF 		movb	%al, -137(%rbp)
 663      FFFF
 139:fx2.c         **** 	CHECK_STATUS(
 664              		.loc 1 139 0 discriminator 6
 665 07a3 0FB68576 		movzbl	-138(%rbp), %eax
 665      FFFFFF
 666 07aa 83F001   		xorl	$1, %eax
 667 07ad 84C0     		testb	%al, %al
 668 07af 7433     		je	.L37
 669              		.loc 1 139 0 is_stmt 0 discriminator 1
 670 07b1 0FB68577 		movzbl	-137(%rbp), %eax
 670      FFFFFF
 671 07b8 83F001   		xorl	$1, %eax
 672 07bb 84C0     		testb	%al, %al
 673 07bd 7425     		je	.L37
 674              		.loc 1 139 0 discriminator 2
 675 07bf 488B8558 		movq	-168(%rbp), %rax
 675      FFFFFF
 676 07c6 488D3500 		leaq	.LC9(%rip), %rsi
 676      000000
 677 07cd 4889C7   		movq	%rax, %rdi
 678 07d0 E8000000 		call	errPrefix@PLT
 678      00
 679 07d5 C78578FF 		movl	$5, -136(%rbp)
 679      FFFF0500 
 679      0000
 680 07df E99C0200 		jmp	.L38
 680      00
 681              	.L37:
 140:fx2.c         **** 		!isHex && !isI2C, FL_FX2_ERR, cleanup,
 141:fx2.c         **** 		"flFlashCustomFirmware(): Filename should have .hex, .ihx or .iic extension");
 142:fx2.c         **** 	bStatus = bufInitialise(&iicBuf, 8192, 0x00, error);
 682              		.loc 1 142 0 is_stmt 1
 683 07e4 488B9558 		movq	-168(%rbp), %rdx
 683      FFFFFF
 684 07eb 488D45D0 		leaq	-48(%rbp), %rax
 685 07ef 4889D1   		movq	%rdx, %rcx
 686 07f2 BA000000 		movl	$0, %edx
 686      00
 687 07f7 BE002000 		movl	$8192, %esi
 687      00
 688 07fc 4889C7   		movq	%rax, %rdi
 689 07ff E8000000 		call	bufInitialise@PLT
 689      00
 690 0804 89857CFF 		movl	%eax, -132(%rbp)
 690      FFFF
 143:fx2.c         **** 	CHECK_STATUS(bStatus, FL_ALLOC_ERR, cleanup, "flFlashCustomFirmware()");
 691              		.loc 1 143 0
 692 080a 83BD7CFF 		cmpl	$0, -132(%rbp)
 692      FFFF00
 693 0811 7425     		je	.L39
 694              		.loc 1 143 0 is_stmt 0 discriminator 1
 695 0813 488B8558 		movq	-168(%rbp), %rax
 695      FFFFFF
 696 081a 488D3500 		leaq	.LC10(%rip), %rsi
 696      000000
 697 0821 4889C7   		movq	%rax, %rdi
 698 0824 E8000000 		call	errPrefix@PLT
 698      00
 699 0829 C78578FF 		movl	$1, -136(%rbp)
 699      FFFF0100 
 699      0000
 700 0833 E9480200 		jmp	.L38
 700      00
 701              	.L39:
 144:fx2.c         **** 	if ( isHex ) {
 702              		.loc 1 144 0 is_stmt 1
 703 0838 80BD76FF 		cmpb	$0, -138(%rbp)
 703      FFFF00
 704 083f 0F849201 		je	.L40
 704      0000
 145:fx2.c         **** 		// Load the .hex file, populate iicBuf:
 146:fx2.c         **** 		bStatus = bufInitialise(&fwData, 8192, 0x00, error);
 705              		.loc 1 146 0
 706 0845 488B9558 		movq	-168(%rbp), %rdx
 706      FFFFFF
 707 084c 488D4590 		leaq	-112(%rbp), %rax
 708 0850 4889D1   		movq	%rdx, %rcx
 709 0853 BA000000 		movl	$0, %edx
 709      00
 710 0858 BE002000 		movl	$8192, %esi
 710      00
 711 085d 4889C7   		movq	%rax, %rdi
 712 0860 E8000000 		call	bufInitialise@PLT
 712      00
 713 0865 89857CFF 		movl	%eax, -132(%rbp)
 713      FFFF
 147:fx2.c         **** 		CHECK_STATUS(bStatus, FL_ALLOC_ERR, cleanup, "flFlashCustomFirmware()");
 714              		.loc 1 147 0
 715 086b 83BD7CFF 		cmpl	$0, -132(%rbp)
 715      FFFF00
 716 0872 7425     		je	.L41
 717              		.loc 1 147 0 is_stmt 0 discriminator 1
 718 0874 488B8558 		movq	-168(%rbp), %rax
 718      FFFFFF
 719 087b 488D3500 		leaq	.LC10(%rip), %rsi
 719      000000
 720 0882 4889C7   		movq	%rax, %rdi
 721 0885 E8000000 		call	errPrefix@PLT
 721      00
 722 088a C78578FF 		movl	$1, -136(%rbp)
 722      FFFF0100 
 722      0000
 723 0894 E9E70100 		jmp	.L38
 723      00
 724              	.L41:
 148:fx2.c         **** 		bStatus = bufInitialise(&fwMask, 8192, 0x00, error);
 725              		.loc 1 148 0 is_stmt 1
 726 0899 488B9558 		movq	-168(%rbp), %rdx
 726      FFFFFF
 727 08a0 488D45B0 		leaq	-80(%rbp), %rax
 728 08a4 4889D1   		movq	%rdx, %rcx
 729 08a7 BA000000 		movl	$0, %edx
 729      00
 730 08ac BE002000 		movl	$8192, %esi
 730      00
 731 08b1 4889C7   		movq	%rax, %rdi
 732 08b4 E8000000 		call	bufInitialise@PLT
 732      00
 733 08b9 89857CFF 		movl	%eax, -132(%rbp)
 733      FFFF
 149:fx2.c         **** 		CHECK_STATUS(bStatus, FL_ALLOC_ERR, cleanup, "flFlashCustomFirmware()");
 734              		.loc 1 149 0
 735 08bf 83BD7CFF 		cmpl	$0, -132(%rbp)
 735      FFFF00
 736 08c6 7425     		je	.L42
 737              		.loc 1 149 0 is_stmt 0 discriminator 1
 738 08c8 488B8558 		movq	-168(%rbp), %rax
 738      FFFFFF
 739 08cf 488D3500 		leaq	.LC10(%rip), %rsi
 739      000000
 740 08d6 4889C7   		movq	%rax, %rdi
 741 08d9 E8000000 		call	errPrefix@PLT
 741      00
 742 08de C78578FF 		movl	$1, -136(%rbp)
 742      FFFF0100 
 742      0000
 743 08e8 E9930100 		jmp	.L38
 743      00
 744              	.L42:
 150:fx2.c         **** 		bStatus = bufReadFromIntelHexFile(&fwData, &fwMask, fwFile, error);
 745              		.loc 1 150 0 is_stmt 1
 746 08ed 488B8D58 		movq	-168(%rbp), %rcx
 746      FFFFFF
 747 08f4 488B9560 		movq	-160(%rbp), %rdx
 747      FFFFFF
 748 08fb 488D75B0 		leaq	-80(%rbp), %rsi
 749 08ff 488D4590 		leaq	-112(%rbp), %rax
 750 0903 4889C7   		movq	%rax, %rdi
 751 0906 E8000000 		call	bufReadFromIntelHexFile@PLT
 751      00
 752 090b 89857CFF 		movl	%eax, -132(%rbp)
 752      FFFF
 151:fx2.c         **** 		CHECK_STATUS(bStatus, FL_FILE_ERR, cleanup, "flFlashCustomFirmware()");
 753              		.loc 1 151 0
 754 0911 83BD7CFF 		cmpl	$0, -132(%rbp)
 754      FFFF00
 755 0918 7425     		je	.L43
 756              		.loc 1 151 0 is_stmt 0 discriminator 1
 757 091a 488B8558 		movq	-168(%rbp), %rax
 757      FFFFFF
 758 0921 488D3500 		leaq	.LC10(%rip), %rsi
 758      000000
 759 0928 4889C7   		movq	%rax, %rdi
 760 092b E8000000 		call	errPrefix@PLT
 760      00
 761 0930 C78578FF 		movl	$6, -136(%rbp)
 761      FFFF0600 
 761      0000
 762 093a E9410100 		jmp	.L38
 762      00
 763              	.L43:
 152:fx2.c         **** 		i2cInitialise(&iicBuf, 0x0000, 0x0000, 0x0000, CONFIG_BYTE_400KHZ);
 764              		.loc 1 152 0 is_stmt 1
 765 093f 488D45D0 		leaq	-48(%rbp), %rax
 766 0943 41B80100 		movl	$1, %r8d
 766      0000
 767 0949 B9000000 		movl	$0, %ecx
 767      00
 768 094e BA000000 		movl	$0, %edx
 768      00
 769 0953 BE000000 		movl	$0, %esi
 769      00
 770 0958 4889C7   		movq	%rax, %rdi
 771 095b E8000000 		call	i2cInitialise@PLT
 771      00
 153:fx2.c         **** 		iStatus = i2cWritePromRecords(&iicBuf, &fwData, &fwMask, error);
 772              		.loc 1 153 0
 773 0960 488B8D58 		movq	-168(%rbp), %rcx
 773      FFFFFF
 774 0967 488D55B0 		leaq	-80(%rbp), %rdx
 775 096b 488D7590 		leaq	-112(%rbp), %rsi
 776 096f 488D45D0 		leaq	-48(%rbp), %rax
 777 0973 4889C7   		movq	%rax, %rdi
 778 0976 E8000000 		call	i2cWritePromRecords@PLT
 778      00
 779 097b 894580   		movl	%eax, -128(%rbp)
 154:fx2.c         **** 		CHECK_STATUS(iStatus, FL_FX2_ERR, cleanup, "flFlashCustomFirmware()");
 780              		.loc 1 154 0
 781 097e 837D8000 		cmpl	$0, -128(%rbp)
 782 0982 7425     		je	.L44
 783              		.loc 1 154 0 is_stmt 0 discriminator 1
 784 0984 488B8558 		movq	-168(%rbp), %rax
 784      FFFFFF
 785 098b 488D3500 		leaq	.LC10(%rip), %rsi
 785      000000
 786 0992 4889C7   		movq	%rax, %rdi
 787 0995 E8000000 		call	errPrefix@PLT
 787      00
 788 099a C78578FF 		movl	$5, -136(%rbp)
 788      FFFF0500 
 788      0000
 789 09a4 E9D70000 		jmp	.L38
 789      00
 790              	.L44:
 155:fx2.c         **** 		iStatus = i2cFinalise(&iicBuf, error);
 791              		.loc 1 155 0 is_stmt 1
 792 09a9 488B9558 		movq	-168(%rbp), %rdx
 792      FFFFFF
 793 09b0 488D45D0 		leaq	-48(%rbp), %rax
 794 09b4 4889D6   		movq	%rdx, %rsi
 795 09b7 4889C7   		movq	%rax, %rdi
 796 09ba E8000000 		call	i2cFinalise@PLT
 796      00
 797 09bf 894580   		movl	%eax, -128(%rbp)
 156:fx2.c         **** 		CHECK_STATUS(iStatus, FL_FX2_ERR, cleanup);
 798              		.loc 1 156 0
 799 09c2 837D8000 		cmpl	$0, -128(%rbp)
 800 09c6 7466     		je	.L45
 801              		.loc 1 156 0 is_stmt 0 discriminator 1
 802 09c8 C78578FF 		movl	$5, -136(%rbp)
 802      FFFF0500 
 802      0000
 803 09d2 E9A90000 		jmp	.L38
 803      00
 804              	.L40:
 157:fx2.c         **** 	} else if ( isI2C ) {
 805              		.loc 1 157 0 is_stmt 1
 806 09d7 80BD77FF 		cmpb	$0, -137(%rbp)
 806      FFFF00
 807 09de 744E     		je	.L45
 158:fx2.c         **** 		// Load the .iic file into the iicBuf:
 159:fx2.c         **** 		bStatus = bufAppendFromBinaryFile(&iicBuf, fwFile, error);
 808              		.loc 1 159 0
 809 09e0 488B9558 		movq	-168(%rbp), %rdx
 809      FFFFFF
 810 09e7 488B8D60 		movq	-160(%rbp), %rcx
 810      FFFFFF
 811 09ee 488D45D0 		leaq	-48(%rbp), %rax
 812 09f2 4889CE   		movq	%rcx, %rsi
 813 09f5 4889C7   		movq	%rax, %rdi
 814 09f8 E8000000 		call	bufAppendFromBinaryFile@PLT
 814      00
 815 09fd 89857CFF 		movl	%eax, -132(%rbp)
 815      FFFF
 160:fx2.c         **** 		CHECK_STATUS(bStatus, FL_FILE_ERR, cleanup, "flFlashCustomFirmware()");
 816              		.loc 1 160 0
 817 0a03 83BD7CFF 		cmpl	$0, -132(%rbp)
 817      FFFF00
 818 0a0a 7422     		je	.L45
 819              		.loc 1 160 0 is_stmt 0 discriminator 1
 820 0a0c 488B8558 		movq	-168(%rbp), %rax
 820      FFFFFF
 821 0a13 488D3500 		leaq	.LC10(%rip), %rsi
 821      000000
 822 0a1a 4889C7   		movq	%rax, %rdi
 823 0a1d E8000000 		call	errPrefix@PLT
 823      00
 824 0a22 C78578FF 		movl	$6, -136(%rbp)
 824      FFFF0600 
 824      0000
 825 0a2c EB52     		jmp	.L38
 826              	.L45:
 161:fx2.c         **** 	}
 162:fx2.c         **** 	fxStatus = fx2WriteEEPROM(handle->device, iicBuf.data, (uint32)iicBuf.length, error);
 827              		.loc 1 162 0 is_stmt 1
 828 0a2e 488B45D8 		movq	-40(%rbp), %rax
 829 0a32 89C7     		movl	%eax, %edi
 830 0a34 488B75D0 		movq	-48(%rbp), %rsi
 831 0a38 488B8568 		movq	-152(%rbp), %rax
 831      FFFFFF
 832 0a3f 488B00   		movq	(%rax), %rax
 833 0a42 488B9558 		movq	-168(%rbp), %rdx
 833      FFFFFF
 834 0a49 4889D1   		movq	%rdx, %rcx
 835 0a4c 89FA     		movl	%edi, %edx
 836 0a4e 4889C7   		movq	%rax, %rdi
 837 0a51 E8000000 		call	fx2WriteEEPROM@PLT
 837      00
 838 0a56 894584   		movl	%eax, -124(%rbp)
 163:fx2.c         **** 	CHECK_STATUS(fxStatus, FL_FX2_ERR, cleanup, "flFlashCustomFirmware()");
 839              		.loc 1 163 0
 840 0a59 837D8400 		cmpl	$0, -124(%rbp)
 841 0a5d 7421     		je	.L38
 842              		.loc 1 163 0 is_stmt 0 discriminator 1
 843 0a5f 488B8558 		movq	-168(%rbp), %rax
 843      FFFFFF
 844 0a66 488D3500 		leaq	.LC10(%rip), %rsi
 844      000000
 845 0a6d 4889C7   		movq	%rax, %rdi
 846 0a70 E8000000 		call	errPrefix@PLT
 846      00
 847 0a75 C78578FF 		movl	$5, -136(%rbp)
 847      FFFF0500 
 847      0000
 848 0a7f 90       		nop
 849              	.L38:
 164:fx2.c         **** cleanup:
 165:fx2.c         **** 	bufDestroy(&iicBuf);
 850              		.loc 1 165 0 is_stmt 1
 851 0a80 488D45D0 		leaq	-48(%rbp), %rax
 852 0a84 4889C7   		movq	%rax, %rdi
 853 0a87 E8000000 		call	bufDestroy@PLT
 853      00
 166:fx2.c         **** 	bufDestroy(&fwMask);
 854              		.loc 1 166 0
 855 0a8c 488D45B0 		leaq	-80(%rbp), %rax
 856 0a90 4889C7   		movq	%rax, %rdi
 857 0a93 E8000000 		call	bufDestroy@PLT
 857      00
 167:fx2.c         **** 	bufDestroy(&fwData);
 858              		.loc 1 167 0
 859 0a98 488D4590 		leaq	-112(%rbp), %rax
 860 0a9c 4889C7   		movq	%rax, %rdi
 861 0a9f E8000000 		call	bufDestroy@PLT
 861      00
 168:fx2.c         **** 	return retVal;
 862              		.loc 1 168 0
 863 0aa4 8B8578FF 		movl	-136(%rbp), %eax
 863      FFFF
 169:fx2.c         **** }
 864              		.loc 1 169 0
 865 0aaa 488B4DF8 		movq	-8(%rbp), %rcx
 866 0aae 6448330C 		xorq	%fs:40, %rcx
 866      25280000 
 866      00
 867 0ab7 7405     		je	.L47
 868 0ab9 E8000000 		call	__stack_chk_fail@PLT
 868      00
 869              	.L47:
 870 0abe C9       		leave
 871              		.cfi_def_cfa 7, 8
 872 0abf C3       		ret
 873              		.cfi_endproc
 874              	.LFE7:
 876              		.section	.rodata
 877 01f3 00000000 		.align 8
 877      00
 878              	.LC11:
 879 01f8 666C5361 		.string	"flSaveFirmware(): Filename should have .iic extension"
 879      76654669 
 879      726D7761 
 879      72652829 
 879      3A204669 
 880              	.LC12:
 881 022e 666C5361 		.string	"flSaveFirmware()"
 881      76654669 
 881      726D7761 
 881      72652829 
 881      00
 882              		.text
 883              		.globl	flSaveFirmware
 885              	flSaveFirmware:
 886              	.LFB8:
 170:fx2.c         **** 
 171:fx2.c         **** // Save the EEPROM to an .iic file
 172:fx2.c         **** DLLEXPORT(FLStatus) flSaveFirmware(
 173:fx2.c         **** 	struct FLContext *handle, uint32 eepromSize, const char *saveFile, const char **error)
 174:fx2.c         **** {
 887              		.loc 1 174 0
 888              		.cfi_startproc
 889 0ac0 55       		pushq	%rbp
 890              		.cfi_def_cfa_offset 16
 891              		.cfi_offset 6, -16
 892 0ac1 4889E5   		movq	%rsp, %rbp
 893              		.cfi_def_cfa_register 6
 894 0ac4 4883EC70 		subq	$112, %rsp
 895 0ac8 48897DA8 		movq	%rdi, -88(%rbp)
 896 0acc 8975A4   		movl	%esi, -92(%rbp)
 897 0acf 48895598 		movq	%rdx, -104(%rbp)
 898 0ad3 48894D90 		movq	%rcx, -112(%rbp)
 899              		.loc 1 174 0
 900 0ad7 64488B04 		movq	%fs:40, %rax
 900      25280000 
 900      00
 901 0ae0 488945F8 		movq	%rax, -8(%rbp)
 902 0ae4 31C0     		xorl	%eax, %eax
 175:fx2.c         **** 	FLStatus retVal = FL_SUCCESS;
 903              		.loc 1 175 0
 904 0ae6 C745BC00 		movl	$0, -68(%rbp)
 904      000000
 176:fx2.c         **** 	struct Buffer i2cBuf = {0,};
 905              		.loc 1 176 0
 906 0aed 48C745D0 		movq	$0, -48(%rbp)
 906      00000000 
 907 0af5 48C745D8 		movq	$0, -40(%rbp)
 907      00000000 
 908 0afd 48C745E0 		movq	$0, -32(%rbp)
 908      00000000 
 909 0b05 48C745E8 		movq	$0, -24(%rbp)
 909      00000000 
 177:fx2.c         **** 	BufferStatus bStatus;
 178:fx2.c         **** 	FX2Status fxStatus;
 179:fx2.c         **** 	const char *const ext = saveFile + strlen(saveFile) - 4;
 910              		.loc 1 179 0
 911 0b0d 488B4598 		movq	-104(%rbp), %rax
 912 0b11 4889C7   		movq	%rax, %rdi
 913 0b14 E8000000 		call	strlen@PLT
 913      00
 914 0b19 488D50FC 		leaq	-4(%rax), %rdx
 915 0b1d 488B4598 		movq	-104(%rbp), %rax
 916 0b21 4801D0   		addq	%rdx, %rax
 917 0b24 488945C8 		movq	%rax, -56(%rbp)
 180:fx2.c         **** 	CHECK_STATUS(
 918              		.loc 1 180 0
 919 0b28 488B45C8 		movq	-56(%rbp), %rax
 920 0b2c 4889C6   		movq	%rax, %rsi
 921 0b2f 488D3D00 		leaq	.LC8(%rip), %rdi
 921      000000
 922 0b36 E8000000 		call	strcmp@PLT
 922      00
 923 0b3b 85C0     		testl	%eax, %eax
 924 0b3d 741F     		je	.L49
 925              		.loc 1 180 0 is_stmt 0 discriminator 1
 926 0b3f 488B4590 		movq	-112(%rbp), %rax
 927 0b43 488D3500 		leaq	.LC11(%rip), %rsi
 927      000000
 928 0b4a 4889C7   		movq	%rax, %rdi
 929 0b4d E8000000 		call	errPrefix@PLT
 929      00
 930 0b52 C745BC05 		movl	$5, -68(%rbp)
 930      000000
 931 0b59 E9CD0000 		jmp	.L50
 931      00
 932              	.L49:
 181:fx2.c         **** 		strcmp(".iic", ext), FL_FX2_ERR, cleanup,
 182:fx2.c         **** 		"flSaveFirmware(): Filename should have .iic extension");
 183:fx2.c         **** 	eepromSize <<= 7;  // convert from kbits to bytes
 933              		.loc 1 183 0 is_stmt 1
 934 0b5e C165A407 		sall	$7, -92(%rbp)
 184:fx2.c         **** 	bStatus = bufInitialise(&i2cBuf, eepromSize, 0x00, error);
 935              		.loc 1 184 0
 936 0b62 8B75A4   		movl	-92(%rbp), %esi
 937 0b65 488B5590 		movq	-112(%rbp), %rdx
 938 0b69 488D45D0 		leaq	-48(%rbp), %rax
 939 0b6d 4889D1   		movq	%rdx, %rcx
 940 0b70 BA000000 		movl	$0, %edx
 940      00
 941 0b75 4889C7   		movq	%rax, %rdi
 942 0b78 E8000000 		call	bufInitialise@PLT
 942      00
 943 0b7d 8945C0   		movl	%eax, -64(%rbp)
 185:fx2.c         **** 	CHECK_STATUS(bStatus, FL_ALLOC_ERR, cleanup, "flSaveFirmware()");
 944              		.loc 1 185 0
 945 0b80 837DC000 		cmpl	$0, -64(%rbp)
 946 0b84 741F     		je	.L51
 947              		.loc 1 185 0 is_stmt 0 discriminator 1
 948 0b86 488B4590 		movq	-112(%rbp), %rax
 949 0b8a 488D3500 		leaq	.LC12(%rip), %rsi
 949      000000
 950 0b91 4889C7   		movq	%rax, %rdi
 951 0b94 E8000000 		call	errPrefix@PLT
 951      00
 952 0b99 C745BC01 		movl	$1, -68(%rbp)
 952      000000
 953 0ba0 E9860000 		jmp	.L50
 953      00
 954              	.L51:
 186:fx2.c         **** 	fxStatus = fx2ReadEEPROM(handle->device, eepromSize, &i2cBuf, error);
 955              		.loc 1 186 0 is_stmt 1
 956 0ba5 488B45A8 		movq	-88(%rbp), %rax
 957 0ba9 488B00   		movq	(%rax), %rax
 958 0bac 488B4D90 		movq	-112(%rbp), %rcx
 959 0bb0 488D55D0 		leaq	-48(%rbp), %rdx
 960 0bb4 8B75A4   		movl	-92(%rbp), %esi
 961 0bb7 4889C7   		movq	%rax, %rdi
 962 0bba E8000000 		call	fx2ReadEEPROM@PLT
 962      00
 963 0bbf 8945C4   		movl	%eax, -60(%rbp)
 187:fx2.c         **** 	CHECK_STATUS(fxStatus, FL_FX2_ERR, cleanup, "flSaveFirmware()");
 964              		.loc 1 187 0
 965 0bc2 837DC400 		cmpl	$0, -60(%rbp)
 966 0bc6 741C     		je	.L52
 967              		.loc 1 187 0 is_stmt 0 discriminator 1
 968 0bc8 488B4590 		movq	-112(%rbp), %rax
 969 0bcc 488D3500 		leaq	.LC12(%rip), %rsi
 969      000000
 970 0bd3 4889C7   		movq	%rax, %rdi
 971 0bd6 E8000000 		call	errPrefix@PLT
 971      00
 972 0bdb C745BC05 		movl	$5, -68(%rbp)
 972      000000
 973 0be2 EB47     		jmp	.L50
 974              	.L52:
 188:fx2.c         **** 	bStatus = bufWriteBinaryFile(&i2cBuf, saveFile, 0UL, i2cBuf.length, error);
 975              		.loc 1 188 0 is_stmt 1
 976 0be4 488B55D8 		movq	-40(%rbp), %rdx
 977 0be8 488B4D90 		movq	-112(%rbp), %rcx
 978 0bec 488B7598 		movq	-104(%rbp), %rsi
 979 0bf0 488D45D0 		leaq	-48(%rbp), %rax
 980 0bf4 4989C8   		movq	%rcx, %r8
 981 0bf7 4889D1   		movq	%rdx, %rcx
 982 0bfa BA000000 		movl	$0, %edx
 982      00
 983 0bff 4889C7   		movq	%rax, %rdi
 984 0c02 E8000000 		call	bufWriteBinaryFile@PLT
 984      00
 985 0c07 8945C0   		movl	%eax, -64(%rbp)
 189:fx2.c         **** 	CHECK_STATUS(bStatus, FL_FILE_ERR, cleanup, "flSaveFirmware()");
 986              		.loc 1 189 0
 987 0c0a 837DC000 		cmpl	$0, -64(%rbp)
 988 0c0e 741B     		je	.L50
 989              		.loc 1 189 0 is_stmt 0 discriminator 1
 990 0c10 488B4590 		movq	-112(%rbp), %rax
 991 0c14 488D3500 		leaq	.LC12(%rip), %rsi
 991      000000
 992 0c1b 4889C7   		movq	%rax, %rdi
 993 0c1e E8000000 		call	errPrefix@PLT
 993      00
 994 0c23 C745BC06 		movl	$6, -68(%rbp)
 994      000000
 995 0c2a 90       		nop
 996              	.L50:
 190:fx2.c         **** cleanup:
 191:fx2.c         **** 	bufDestroy(&i2cBuf);
 997              		.loc 1 191 0 is_stmt 1
 998 0c2b 488D45D0 		leaq	-48(%rbp), %rax
 999 0c2f 4889C7   		movq	%rax, %rdi
 1000 0c32 E8000000 		call	bufDestroy@PLT
 1000      00
 192:fx2.c         **** 	return retVal;
 1001              		.loc 1 192 0
 1002 0c37 8B45BC   		movl	-68(%rbp), %eax
 193:fx2.c         **** }
 1003              		.loc 1 193 0
 1004 0c3a 488B4DF8 		movq	-8(%rbp), %rcx
 1005 0c3e 6448330C 		xorq	%fs:40, %rcx
 1005      25280000 
 1005      00
 1006 0c47 7405     		je	.L54
 1007 0c49 E8000000 		call	__stack_chk_fail@PLT
 1007      00
 1008              	.L54:
 1009 0c4e C9       		leave
 1010              		.cfi_def_cfa 7, 8
 1011 0c4f C3       		ret
 1012              		.cfi_endproc
 1013              	.LFE8:
 1015              		.section	.rodata
 1016              	.LC13:
 1017 023f 636F7079 		.string	"copyFirmwareAndRewriteIDs()"
 1017      4669726D 
 1017      77617265 
 1017      416E6452 
 1017      65777269 
 1018              		.text
 1019              		.globl	copyFirmwareAndRewriteIDs
 1021              	copyFirmwareAndRewriteIDs:
 1022              	.LFB9:
 194:fx2.c         **** 
 195:fx2.c         **** FLStatus copyFirmwareAndRewriteIDs(
 196:fx2.c         **** 	const struct FirmwareInfo *fwInfo, uint16 vid, uint16 pid, uint16 did,
 197:fx2.c         **** 	struct Buffer *dest, const char **error)
 198:fx2.c         **** {
 1023              		.loc 1 198 0
 1024              		.cfi_startproc
 1025 0c50 55       		pushq	%rbp
 1026              		.cfi_def_cfa_offset 16
 1027              		.cfi_offset 6, -16
 1028 0c51 4889E5   		movq	%rsp, %rbp
 1029              		.cfi_def_cfa_register 6
 1030 0c54 4883EC40 		subq	$64, %rsp
 1031 0c58 48897DE8 		movq	%rdi, -24(%rbp)
 1032 0c5c 89C8     		movl	%ecx, %eax
 1033 0c5e 4C8945D0 		movq	%r8, -48(%rbp)
 1034 0c62 4C894DC8 		movq	%r9, -56(%rbp)
 1035 0c66 668975E4 		movw	%si, -28(%rbp)
 1036 0c6a 668955E0 		movw	%dx, -32(%rbp)
 1037 0c6e 668945DC 		movw	%ax, -36(%rbp)
 199:fx2.c         **** 	FLStatus retVal = FL_SUCCESS;  // Can return FL_ALLOC_ERR, FL_FX2_ERR and FL_INTERNAL_ERR
 1038              		.loc 1 199 0
 1039 0c72 C745F800 		movl	$0, -8(%rbp)
 1039      000000
 200:fx2.c         **** 	BufferStatus bStatus;
 201:fx2.c         **** 	bStatus = bufAppendBlock(dest, fwInfo->data, fwInfo->length, error);
 1040              		.loc 1 201 0
 1041 0c79 488B45E8 		movq	-24(%rbp), %rax
 1042 0c7d 0FB74008 		movzwl	8(%rax), %eax
 1043 0c81 0FB7D0   		movzwl	%ax, %edx
 1044 0c84 488B45E8 		movq	-24(%rbp), %rax
 1045 0c88 488B30   		movq	(%rax), %rsi
 1046 0c8b 488B4DC8 		movq	-56(%rbp), %rcx
 1047 0c8f 488B45D0 		movq	-48(%rbp), %rax
 1048 0c93 4889C7   		movq	%rax, %rdi
 1049 0c96 E8000000 		call	bufAppendBlock@PLT
 1049      00
 1050 0c9b 8945FC   		movl	%eax, -4(%rbp)
 202:fx2.c         **** 	CHECK_STATUS(bStatus, FL_ALLOC_ERR, cleanup, "copyFirmwareAndRewriteIDs()");
 1051              		.loc 1 202 0
 1052 0c9e 837DFC00 		cmpl	$0, -4(%rbp)
 1053 0ca2 741F     		je	.L56
 1054              		.loc 1 202 0 is_stmt 0 discriminator 1
 1055 0ca4 488B45C8 		movq	-56(%rbp), %rax
 1056 0ca8 488D3500 		leaq	.LC13(%rip), %rsi
 1056      000000
 1057 0caf 4889C7   		movq	%rax, %rdi
 1058 0cb2 E8000000 		call	errPrefix@PLT
 1058      00
 1059 0cb7 C745F801 		movl	$1, -8(%rbp)
 1059      000000
 1060 0cbe E9C20000 		jmp	.L57
 1060      00
 1061              	.L56:
 203:fx2.c         **** 	dest->data[fwInfo->vp]     = (uint8)(vid & 0xFF);
 1062              		.loc 1 203 0 is_stmt 1
 1063 0cc3 488B45D0 		movq	-48(%rbp), %rax
 1064 0cc7 488B10   		movq	(%rax), %rdx
 1065 0cca 488B45E8 		movq	-24(%rbp), %rax
 1066 0cce 0FB7400A 		movzwl	10(%rax), %eax
 1067 0cd2 0FB7C0   		movzwl	%ax, %eax
 1068 0cd5 4801D0   		addq	%rdx, %rax
 1069 0cd8 0FB755E4 		movzwl	-28(%rbp), %edx
 1070 0cdc 8810     		movb	%dl, (%rax)
 204:fx2.c         **** 	dest->data[fwInfo->vp + 1] = (uint8)(vid >> 8);
 1071              		.loc 1 204 0
 1072 0cde 488B45D0 		movq	-48(%rbp), %rax
 1073 0ce2 488B10   		movq	(%rax), %rdx
 1074 0ce5 488B45E8 		movq	-24(%rbp), %rax
 1075 0ce9 0FB7400A 		movzwl	10(%rax), %eax
 1076 0ced 0FB7C0   		movzwl	%ax, %eax
 1077 0cf0 4883C001 		addq	$1, %rax
 1078 0cf4 4801D0   		addq	%rdx, %rax
 1079 0cf7 0FB755E4 		movzwl	-28(%rbp), %edx
 1080 0cfb 66C1EA08 		shrw	$8, %dx
 1081 0cff 8810     		movb	%dl, (%rax)
 205:fx2.c         **** 	dest->data[fwInfo->vp + 2] = (uint8)(pid & 0xFF);
 1082              		.loc 1 205 0
 1083 0d01 488B45D0 		movq	-48(%rbp), %rax
 1084 0d05 488B10   		movq	(%rax), %rdx
 1085 0d08 488B45E8 		movq	-24(%rbp), %rax
 1086 0d0c 0FB7400A 		movzwl	10(%rax), %eax
 1087 0d10 0FB7C0   		movzwl	%ax, %eax
 1088 0d13 4883C002 		addq	$2, %rax
 1089 0d17 4801D0   		addq	%rdx, %rax
 1090 0d1a 0FB755E0 		movzwl	-32(%rbp), %edx
 1091 0d1e 8810     		movb	%dl, (%rax)
 206:fx2.c         **** 	dest->data[fwInfo->vp + 3] = (uint8)(pid >> 8);
 1092              		.loc 1 206 0
 1093 0d20 488B45D0 		movq	-48(%rbp), %rax
 1094 0d24 488B10   		movq	(%rax), %rdx
 1095 0d27 488B45E8 		movq	-24(%rbp), %rax
 1096 0d2b 0FB7400A 		movzwl	10(%rax), %eax
 1097 0d2f 0FB7C0   		movzwl	%ax, %eax
 1098 0d32 4883C003 		addq	$3, %rax
 1099 0d36 4801D0   		addq	%rdx, %rax
 1100 0d39 0FB755E0 		movzwl	-32(%rbp), %edx
 1101 0d3d 66C1EA08 		shrw	$8, %dx
 1102 0d41 8810     		movb	%dl, (%rax)
 207:fx2.c         **** 	dest->data[fwInfo->vp + 4] = (uint8)(did & 0xFF);
 1103              		.loc 1 207 0
 1104 0d43 488B45D0 		movq	-48(%rbp), %rax
 1105 0d47 488B10   		movq	(%rax), %rdx
 1106 0d4a 488B45E8 		movq	-24(%rbp), %rax
 1107 0d4e 0FB7400A 		movzwl	10(%rax), %eax
 1108 0d52 0FB7C0   		movzwl	%ax, %eax
 1109 0d55 4883C004 		addq	$4, %rax
 1110 0d59 4801D0   		addq	%rdx, %rax
 1111 0d5c 0FB755DC 		movzwl	-36(%rbp), %edx
 1112 0d60 8810     		movb	%dl, (%rax)
 208:fx2.c         **** 	dest->data[fwInfo->vp + 5] = (uint8)(did >> 8);
 1113              		.loc 1 208 0
 1114 0d62 488B45D0 		movq	-48(%rbp), %rax
 1115 0d66 488B10   		movq	(%rax), %rdx
 1116 0d69 488B45E8 		movq	-24(%rbp), %rax
 1117 0d6d 0FB7400A 		movzwl	10(%rax), %eax
 1118 0d71 0FB7C0   		movzwl	%ax, %eax
 1119 0d74 4883C005 		addq	$5, %rax
 1120 0d78 4801D0   		addq	%rdx, %rax
 1121 0d7b 0FB755DC 		movzwl	-36(%rbp), %edx
 1122 0d7f 66C1EA08 		shrw	$8, %dx
 1123 0d83 8810     		movb	%dl, (%rax)
 1124              	.L57:
 209:fx2.c         **** cleanup:
 210:fx2.c         **** 	return retVal;
 1125              		.loc 1 210 0
 1126 0d85 8B45F8   		movl	-8(%rbp), %eax
 211:fx2.c         **** }
 1127              		.loc 1 211 0
 1128 0d88 C9       		leave
 1129              		.cfi_def_cfa 7, 8
 1130 0d89 C3       		ret
 1131              		.cfi_endproc
 1132              	.LFE9:
 1134              	.Letext0:
 1135              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 1136              		.file 3 "/home/shubham/20140524/makestuff/common/makestuff.h"
 1137              		.file 4 "/home/shubham/20140524/makestuff/libs/libfx2loader/libfx2loader.h"
 1138              		.file 5 "/home/shubham/20140524/makestuff/libs/libusbwrap/libusbwrap.h"
 1139              		.file 6 "libfpgalink.h"
 1140              		.file 7 "/home/shubham/20140524/makestuff/libs/libbuffer/libbuffer.h"
 1141              		.file 8 "firmware.h"
 1142              		.file 9 "private.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 fx2.c
     /tmp/ccE1ib5j.s:13     .text:0000000000000000 flLoadStandardFirmware
     /tmp/ccE1ib5j.s:1021   .text:0000000000000c50 copyFirmwareAndRewriteIDs
     /tmp/ccE1ib5j.s:219    .text:0000000000000263 flFlashStandardFirmware
     /tmp/ccE1ib5j.s:394    .text:0000000000000456 flLoadCustomFirmware
     /tmp/ccE1ib5j.s:589    .text:0000000000000684 flFlashCustomFirmware
     /tmp/ccE1ib5j.s:885    .text:0000000000000ac0 flSaveFirmware

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
usbValidateVidPid
errRender
strtoul
strlen
usbOpenDevice
errPrefix
bufInitialise
ramFirmware
fx2WriteRAM
bufDestroy
usbCloseDevice
__stack_chk_fail
eepromNoBootFirmware
fx2WriteEEPROM
strcmp
bufReadFromIntelHexFile
i2cInitialise
i2cWritePromRecords
i2cFinalise
bufAppendFromBinaryFile
fx2ReadEEPROM
bufWriteBinaryFile
bufAppendBlock
