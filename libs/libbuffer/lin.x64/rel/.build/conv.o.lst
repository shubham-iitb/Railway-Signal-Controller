   1              		.file	"conv.c"
   2              		.section	.text.unlikely,"ax",@progbits
   3              	.LCOLDB0:
   4              		.text
   5              	.LHOTB0:
   6              		.p2align 4,,15
   7              		.globl	getHexNibble
   9              	getHexNibble:
  10              	.LFB4:
  11              		.cfi_startproc
  12 0000 8D47D0   		leal	-48(%rdi), %eax
  13 0003 3C09     		cmpb	$9, %al
  14 0005 7631     		jbe	.L7
  15 0007 8D479F   		leal	-97(%rdi), %eax
  16 000a 3C05     		cmpb	$5, %al
  17 000c 761A     		jbe	.L8
  18 000e 8D57BF   		leal	-65(%rdi), %edx
  19 0011 B8010000 		movl	$1, %eax
  19      00
  20 0016 80FA05   		cmpb	$5, %dl
  21 0019 7708     		ja	.L3
  22 001b 83EF37   		subl	$55, %edi
  23 001e 31C0     		xorl	%eax, %eax
  24 0020 40883E   		movb	%dil, (%rsi)
  25              	.L3:
  26 0023 F3C3     		rep ret
  27              		.p2align 4,,10
  28 0025 0F1F00   		.p2align 3
  29              	.L8:
  30 0028 83EF57   		subl	$87, %edi
  31 002b 31C0     		xorl	%eax, %eax
  32 002d 40883E   		movb	%dil, (%rsi)
  33 0030 C3       		ret
  34              		.p2align 4,,10
  35 0031 0F1F8000 		.p2align 3
  35      000000
  36              	.L7:
  37 0038 8806     		movb	%al, (%rsi)
  38 003a 31C0     		xorl	%eax, %eax
  39 003c C3       		ret
  40              		.cfi_endproc
  41              	.LFE4:
  43              		.section	.text.unlikely
  44              	.LCOLDE0:
  45              		.text
  46              	.LHOTE0:
  47              		.section	.text.unlikely
  48              	.LCOLDB1:
  49              		.text
  50              	.LHOTB1:
  51 003d 0F1F00   		.p2align 4,,15
  52              		.globl	getHexByte
  54              	getHexByte:
  55              	.LFB5:
  56              		.cfi_startproc
  57 0040 55       		pushq	%rbp
  58              		.cfi_def_cfa_offset 16
  59              		.cfi_offset 6, -16
  60 0041 53       		pushq	%rbx
  61              		.cfi_def_cfa_offset 24
  62              		.cfi_offset 3, -24
  63 0042 4889FB   		movq	%rdi, %rbx
  64 0045 4889F5   		movq	%rsi, %rbp
  65 0048 4883EC18 		subq	$24, %rsp
  66              		.cfi_def_cfa_offset 48
  67 004c 0FBE3F   		movsbl	(%rdi), %edi
  68 004f 488D7424 		leaq	6(%rsp), %rsi
  68      06
  69 0054 64488B04 		movq	%fs:40, %rax
  69      25280000 
  69      00
  70 005d 48894424 		movq	%rax, 8(%rsp)
  70      08
  71 0062 31C0     		xorl	%eax, %eax
  72 0064 E8000000 		call	getHexNibble@PLT
  72      00
  73 0069 84C0     		testb	%al, %al
  74 006b 7423     		je	.L10
  75              	.L12:
  76 006d B8010000 		movl	$1, %eax
  76      00
  77              	.L11:
  78 0072 488B4C24 		movq	8(%rsp), %rcx
  78      08
  79 0077 6448330C 		xorq	%fs:40, %rcx
  79      25280000 
  79      00
  80 0080 7531     		jne	.L15
  81 0082 4883C418 		addq	$24, %rsp
  82              		.cfi_remember_state
  83              		.cfi_def_cfa_offset 24
  84 0086 5B       		popq	%rbx
  85              		.cfi_def_cfa_offset 16
  86 0087 5D       		popq	%rbp
  87              		.cfi_def_cfa_offset 8
  88 0088 C3       		ret
  89 0089 0F1F8000 		.p2align 4,,10
  89      000000
  90              		.p2align 3
  91              	.L10:
  92              		.cfi_restore_state
  93 0090 0FBE7B01 		movsbl	1(%rbx), %edi
  94 0094 488D7424 		leaq	7(%rsp), %rsi
  94      07
  95 0099 E8000000 		call	getHexNibble@PLT
  95      00
  96 009e 84C0     		testb	%al, %al
  97 00a0 75CB     		jne	.L12
  98 00a2 0FB65424 		movzbl	6(%rsp), %edx
  98      06
  99 00a7 C1E204   		sall	$4, %edx
 100 00aa 0A542407 		orb	7(%rsp), %dl
 101 00ae 885500   		movb	%dl, 0(%rbp)
 102 00b1 EBBF     		jmp	.L11
 103              	.L15:
 104 00b3 E8000000 		call	__stack_chk_fail@PLT
 104      00
 105              		.cfi_endproc
 106              	.LFE5:
 108              		.section	.text.unlikely
 109              	.LCOLDE1:
 110              		.text
 111              	.LHOTE1:
 112              		.section	.rodata.str1.1,"aMS",@progbits,1
 113              	.LC2:
 114 0000 30313233 		.string	"0123456789ABCDEF"
 114      34353637 
 114      38394142 
 114      43444546 
 114      00
 115              		.section	.text.unlikely
 116              	.LCOLDB3:
 117              		.text
 118              	.LHOTB3:
 119 00b8 0F1F8400 		.p2align 4,,15
 119      00000000 
 120              		.globl	getHexUpperNibble
 122              	getHexUpperNibble:
 123              	.LFB6:
 124              		.cfi_startproc
 125 00c0 40C0EF04 		shrb	$4, %dil
 126 00c4 488D0500 		leaq	.LC2(%rip), %rax
 126      000000
 127 00cb 83E70F   		andl	$15, %edi
 128 00ce 0FB60438 		movzbl	(%rax,%rdi), %eax
 129 00d2 C3       		ret
 130              		.cfi_endproc
 131              	.LFE6:
 133              		.section	.text.unlikely
 134              	.LCOLDE3:
 135              		.text
 136              	.LHOTE3:
 137              		.section	.text.unlikely
 138              	.LCOLDB4:
 139              		.text
 140              	.LHOTB4:
 141 00d3 0F1F0066 		.p2align 4,,15
 141      2E0F1F84 
 141      00000000 
 141      00
 142              		.globl	getHexLowerNibble
 144              	getHexLowerNibble:
 145              	.LFB7:
 146              		.cfi_startproc
 147 00e0 488D0500 		leaq	.LC2(%rip), %rax
 147      000000
 148 00e7 83E70F   		andl	$15, %edi
 149 00ea 0FB60438 		movzbl	(%rax,%rdi), %eax
 150 00ee C3       		ret
 151              		.cfi_endproc
 152              	.LFE7:
 154              		.section	.text.unlikely
 155              	.LCOLDE4:
 156              		.text
 157              	.LHOTE4:
 158              		.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609"
 159              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 conv.c
     /tmp/ccnLE5BE.s:9      .text:0000000000000000 getHexNibble
     /tmp/ccnLE5BE.s:54     .text:0000000000000040 getHexByte
     /tmp/ccnLE5BE.s:122    .text:00000000000000c0 getHexUpperNibble
     /tmp/ccnLE5BE.s:144    .text:00000000000000e0 getHexLowerNibble
     /tmp/ccnLE5BE.s:113    .rodata.str1.1:0000000000000000 .LC2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
